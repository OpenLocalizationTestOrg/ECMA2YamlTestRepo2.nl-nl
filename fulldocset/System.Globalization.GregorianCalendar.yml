### YamlMime:ManagedReference
items:
- uid: System.Globalization.GregorianCalendar
  id: GregorianCalendar
  children:
  - System.Globalization.GregorianCalendar.#ctor
  - System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)
  - System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.GregorianCalendar.ADEra
  - System.Globalization.GregorianCalendar.AlgorithmType
  - System.Globalization.GregorianCalendar.CalendarType
  - System.Globalization.GregorianCalendar.Eras
  - System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetEra(System.DateTime)
  - System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetMonth(System.DateTime)
  - System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetYear(System.DateTime)
  - System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.MaxSupportedDateTime
  - System.Globalization.GregorianCalendar.MinSupportedDateTime
  - System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.GregorianCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: GregorianCalendar
  nameWithType: GregorianCalendar
  fullName: System.Globalization.GregorianCalendar
  type: Class
  summary: "Hiermee geeft u de Gregoriaanse kalender."
  remarks: "De Gregoriaanse kalender herkent weergegeven in twee tijdperken: v.Chr. B.C.E. en A.D. of C.E. Deze implementatie van de klasse GregorianCalendar herkent alleen voor de huidige era (A.D. (of C.E.).      > [!NOTE] > Zie voor meer informatie over het gebruik van de klasse GregorianCalendar en de andere klassen van de kalender in het .NET Framework [werken met agenda&quot;s](~/add/includes/ajax-current-ext-md.md).       Een schrikkeljaar in de Gregoriaanse kalender wordt gedefinieerd als een jaar deelbaar is door 4, tenzij het wordt gedeeld door 100. Jaren dat deelbaar door 400 zijn zijn echter leap jaar. Bijvoorbeeld, het jaar 1900 is niet een schrikkeljaar, maar het jaar 2000 is. Een algemene jaar 365 dagen heeft en een schrikkeljaar 366 dagen.       De Gregoriaanse kalender is 12 maanden met 28 tot en met 31 dagen: januari (31 dagen), februari (28 of 29 dagen), maart (31 dagen) (30 dagen) April, mei (31 dagen), juni (30 dagen), juli (31 dagen), augustus (31 dagen), September (30 dagen), oktober (31 dagen), November (30 dagen) en December (31 dagen). Februari heeft 29 dagen leap jaren en 28 algemene jaren.      > [!IMPORTANT] > Standaard alle <xref:System.DateTime>en <xref:System.DateTimeOffset>waarden express datums en tijden in de Gregoriaanse kalender.</xref:System.DateTimeOffset> </xref:System.DateTime>       De Gregoriaanse kalender is ontwikkeld als vervanging voor de Juliaanse kalender (die wordt vertegenwoordigd door de <xref:System.Globalization.JulianCalendar>klasse) en het eerst werd opgenomen in een klein aantal culturen op 15 oktober 1582.</xref:System.Globalization.JulianCalendar> Als u werkt met historische datums die worden voorafgegaan door een cultuur acceptatie van de Gregoriaanse kalender, moet u de oorspronkelijke kalender gebruiken indien ze beschikbaar zijn in .NET Framework. Bijvoorbeeld: Denemarken gewijzigd van de Juliaanse kalender in de Gregoriaanse kalender op 19 februari (in de Juliaanse kalender) of 1 maart (in de Gregoriaanse kalender) van 1700. In dit geval voor datums vóór de acceptatie van de Gregoriaanse kalender, moet u de Juliaanse kalender. Echter, houd er rekening mee dat er geen cultuur ingebouwde ondersteuning voor de <xref:System.Globalization.JulianCalendar>klasse biedt.</xref:System.Globalization.JulianCalendar> Moet u de <xref:System.Globalization.JulianCalendar>klasse als een zelfstandige kalender.</xref:System.Globalization.JulianCalendar> Zie voor meer informatie.       Het volgende voorbeeld ziet u dat 18 februari 1700 in de Juliaanse kalender, de laatste dag de Juliaanse kalender officieel in Denemarken is gebruikt is, één dag eerder dan 1 maart 1700 in de Gregoriaanse kalender is.       [!code-cs[System.Globalization.GregorianCalendar.Class#1](~/add/codesnippet/csharp/t-system.globalization.g_0_1.cs)][!code-vb[System.Globalization.GregorianCalendar.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.g_0_1.vb) ] elke <xref:System.Globalization.CultureInfo>ondersteunt een set van agenda&quot;s.</xref:System.Globalization.CultureInfo>   De <xref:System.Globalization.CultureInfo.Calendar%2A>eigenschap retourneert de standaardkalender voor de cultuur en de <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>eigenschap retourneert een matrix met alle agenda&quot;s wordt ondersteund door de cultuur.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Wijzigen van de kalender die wordt gebruikt door een <xref:System.Globalization.CultureInfo>de toepassing kunt de <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>eigenschap in op een nieuwe <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> instellen</xref:System.Globalization.CultureInfo>       <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A>interpunctie in afgekorte era-namen, negeert alleen als de GregorianCalendar is geselecteerd in <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName>en &quot;A.D.&quot; maakt gebruik van de cultuur</xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName></xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> Als de naam van de era, dat wil zeggen, &quot;A.D.&quot; is gelijk aan &quot;AD&quot;."
  example:
  - "The following code example shows that <xref:System.Globalization.DateTimeFormatInfo> ignores the punctuation in the era name, only if the calendar is Gregorian and the culture uses the era name \"A.D.\".  \n  \n [!code-cs[System.Globalization.GregorianCalendar.GetEra#1](~/add/codesnippet/csharp/t-system.globalization.g_0_2.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/add/codesnippet/cpp/t-system.globalization.g_0_2.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/add/codesnippet/visualbasic/t-system.globalization.g_0_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class GregorianCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GregorianCalendar()
  nameWithType: GregorianCalendar.GregorianCalendar()
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> met behulp van de klasse <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> waarde."
  remarks: "De standaardwaarde <xref:System.Globalization.GregorianCalendarTypes>waarde is <xref:System.Globalization.GregorianCalendarTypes>.</xref:System.Globalization.GregorianCalendarTypes> </xref:System.Globalization.GregorianCalendarTypes> Als de <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName>eigenschap van de <xref:System.Globalization.CultureInfo>is ingesteld op een <xref:System.Globalization.GregorianCalendar>die met deze constructor is gemaakt, de datums en tijden zijn gelokaliseerd in de taal die is gekoppeld aan de <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> </xref:System.Globalization.GregorianCalendar> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName>"
  example:
  - "The following code example prints a <xref:System.DateTime> using a <xref:System.Globalization.GregorianCalendar> that is localized.  \n  \n [!code-vb[System.Globalization.GregorianCalendarLocalized#1](~/add/codesnippet/visualbasic/m-system.globalization.g_2_1.vb)]\n [!code-cs[System.Globalization.GregorianCalendarLocalized#1](~/add/codesnippet/csharp/m-system.globalization.g_2_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendarLocalized#1](~/add/codesnippet/cpp/m-system.globalization.g_2_1.cpp)]"
  syntax:
    content: public GregorianCalendar ();
    parameters: []
  overload: System.Globalization.GregorianCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)
  id: '#ctor(System.Globalization.GregorianCalendarTypes)'
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GregorianCalendar(GregorianCalendarTypes)
  nameWithType: GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> waarde."
  syntax:
    content: public GregorianCalendar (System.Globalization.GregorianCalendarTypes type);
    parameters:
    - id: type
      type: System.Globalization.GregorianCalendarTypes
      description: "De <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> waarde die welke taalversie van de kalender aangeeft maken."
  overload: System.Globalization.GregorianCalendar.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>type</code>is geen lid van de <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> opsomming."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: GregorianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert een <xref:System.DateTime>die het opgegeven aantal maanden weg van de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Het daggedeelte van de resulterende <xref:System.DateTime>is van invloed op als de resulterende dag geen geldig in de resulterende maand van het resulterende jaar is.</xref:System.DateTime> Dit is gewijzigd in de laatste geldige dag in de resulterende maand van het resulterende jaar. Het jaargedeelte van de resulterende dat <xref:System.DateTime>is beïnvloed als de resulterende maand buiten het jaar van de opgegeven <xref:System.DateTime>.</xref:System.DateTime> valt</xref:System.DateTime> Deze implementatie ondersteunt alleen het huidige Era-waarde. Daarom <xref:System.ArgumentException>wordt gegenereerd als het resulterende jaar buiten de vormgeving van de opgegeven <xref:System.DateTime>.</xref:System.DateTime> valt</xref:System.ArgumentException> Het deel van de dag van de resulterende <xref:System.DateTime>blijft hetzelfde als de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Als de opgegeven maand oktober die 31 dagen heeft, is de opgegeven dag is bijvoorbeeld de 31e dag van deze maand en de waarde van de `months` parameter 6 is en het resulterende jaar is één meer dan het opgegeven jaar, de resulterende maand April, en de resulterende dag is de 30 dag, de laatste dag in April is.       Als de waarde van de `months` parameter negatief, is de resulterende die <xref:System.DateTime>ouder is dan de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       De<xref:System.DateTime.Kind%2A> eigenschap van de geretourneerde <xref:System.DateTime>waarde altijd gelijk is aan <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> U kunt behouden de <xref:System.DateTime.Kind%2A>eigenschap van de `time` parameter door het aanroepen van de <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>methode, zoals het volgende voorbeeld.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.g_8_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.g_8_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_8_2.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_8_2.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_8_2.cpp)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>waaraan maanden toevoegen.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Het aantal maanden om toe te voegen."
    return:
      type: System.DateTime
      description: "De <xref:System.DateTime>die als resultaat van het toevoegen van het opgegeven aantal maanden aan de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.GregorianCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De resulterende <xref:System.DateTime>valt buiten het ondersteunde bereik.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>is kleiner dan-120000.       - of - <code>months</code> is groter dan 120000 liggen."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: GregorianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert een <xref:System.DateTime>die het opgegeven aantal jaren weg van de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Het daggedeelte van de resulterende <xref:System.DateTime>is van invloed op als de resulterende dag geen geldig in de resulterende maand van het resulterende jaar is.</xref:System.DateTime> Dit is gewijzigd in de laatste geldige dag in de resulterende maand van het resulterende jaar. Het deel van de maand van de resulterende <xref:System.DateTime>blijft hetzelfde als de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Deze implementatie ondersteunt alleen het huidige Era-waarde. Daarom <xref:System.ArgumentException>wordt gegenereerd als het resulterende jaar buiten de vormgeving van de opgegeven <xref:System.DateTime>.</xref:System.DateTime> valt</xref:System.ArgumentException> Het deel van de dag van de resulterende <xref:System.DateTime>blijft hetzelfde als de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Februari heeft bijvoorbeeld 28 dagen, behalve tijdens leap jaar wanneer 29 dagen heeft. Als de opgegeven datum de 29 dag van februari in een schrikkeljaar en de waarde van is `years` 1, is de resulterende datum is de 28 dag februari in het volgende jaar.       Als `years` negatief, is de resulterende die <xref:System.DateTime>ouder is dan de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       De<xref:System.DateTime.Kind%2A> eigenschap van de geretourneerde <xref:System.DateTime>waarde altijd gelijk is aan <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> U kunt behouden de <xref:System.DateTime.Kind%2A>eigenschap van de `time` parameter door het aanroepen van de <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>methode, zoals het volgende voorbeeld.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.g_4_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.g_4_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_4_2.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_4_2.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_4_2.cpp)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>waaraan moet worden toegevoegd jaar.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Het aantal jaren om toe te voegen."
    return:
      type: System.DateTime
      description: "De <xref:System.DateTime>die als resultaat van het toevoegen van het opgegeven aantal jaren aan de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.GregorianCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De resulterende <xref:System.DateTime>valt buiten het ondersteunde bereik.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.ADEra
  id: ADEra
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: ADEra
  nameWithType: GregorianCalendar.ADEra
  fullName: System.Globalization.GregorianCalendar.ADEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee geeft u de huidige Era-waarde. Dit veld is constante."
  remarks: 'De Gregoriaanse kalender herkent weergegeven in twee tijdperken: v.Chr. B.C.E. en A.D. of C.E. Deze implementatie van de <xref:System.Globalization.GregorianCalendar>klasse herkent alleen de huidige era (A.D.</xref:System.Globalization.GregorianCalendar> (of C.E.). Dit veld retourneert altijd 1.'
  syntax:
    content: public const int ADEra = 1;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: GregorianCalendar.AlgorithmType
  fullName: System.Globalization.GregorianCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Haalt een waarde die aangeeft of de huidige kalender zonne gebaseerde, maan gebaseerde, of een combinatie van beide."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.g_2_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.g_2_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Retourneert altijd <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.CalendarType
  id: CalendarType
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: CalendarType
  nameWithType: GregorianCalendar.CalendarType
  fullName: System.Globalization.GregorianCalendar.CalendarType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> waarde die staat voor de taalversie van de huidige <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to determine the GregorianCalendar language version supported by the culture.  \n  \n [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/add/codesnippet/visualbasic/p-system.globalization.g_3_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/add/codesnippet/cpp/p-system.globalization.g_3_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendarTypes#1](~/add/codesnippet/csharp/p-system.globalization.g_3_1.cs)]"
  syntax:
    content: public virtual System.Globalization.GregorianCalendarTypes CalendarType { get; set; }
    return:
      type: System.Globalization.GregorianCalendarTypes
      description: "Een <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> waarde die staat voor de taalversie van de huidige <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.CalendarType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De opgegeven waarde in een set-bewerking is geen lid van de <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> opsomming."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "In een set-bewerking is het huidige exemplaar van alleen-lezen."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.Eras
  id: Eras
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: GregorianCalendar.Eras
  fullName: System.Globalization.GregorianCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Met deze eigenschap wordt de lijst met weergegeven in tijdperken in de <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  remarks: 'De Gregoriaanse kalender herkent weergegeven in twee tijdperken: v.Chr. B.C.E. en A.D. of C.E. Deze implementatie van de <xref:System.Globalization.GregorianCalendar>klasse herkent alleen de huidige era (A.D.</xref:System.Globalization.GregorianCalendar> (of C.E.). Deze eigenschap retourneert altijd een matrix met slechts één element.'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Een matrix van gehele getallen die worden weergegeven in de tijdperken in vertegenwoordigt de <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: GregorianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert de dag van de maand in de opgegeven <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_5_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_5_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_5_1.cpp)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een geheel getal van 1 tot 31 dat de dag van de maand in aangeeft <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: GregorianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert de dag van de week in de opgegeven <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "De <xref:System.DayOfWeek>waarden zijn zondag, maandag, dinsdag, woensdag, donderdag, vrijdag en zaterdag.</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_0_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_0_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_0_1.cpp)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Een <xref:System.DayOfWeek>-waarde die de dag van de week vertegenwoordigt <code> time </code>.</xref:System.DayOfWeek>"
  overload: System.Globalization.GregorianCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: GregorianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert de dag van het jaar in de opgegeven <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "De dag van het jaar wordt gedefinieerd als het aantal dagen vanaf de eerste dag van het jaar. Bijvoorbeeld GetDayOfYear voor de eerste dag van de eerste maand retourneert 1 en GetDayOfYear voor de laatste dag van de laatste maand retourneert het totale aantal dagen in dat jaar dezelfde waarde is geretourneerd door <xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>.</xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_3_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_3_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_3_1.cpp)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een geheel getal tussen 1 en 366 dat de dag van het jaar in aangeeft <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert het aantal dagen in de opgegeven maand in het opgegeven jaar in de opgegeven Era-waarde."
  remarks: "Bijvoorbeeld: deze methode retourneert 28 of 29 voor februari (`month` = 2), afhankelijk van of `year` een schrikkeljaar is."
  example:
  - "The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/5d22c0c3-8560-4ab0-878f-_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/5d22c0c3-8560-4ab0-878f-_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/5d22c0c3-8560-4ab0-878f-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: month
      type: System.Int32
      description: "Een geheel getal tussen 1 en 12 dat de maand aangeeft."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Int32
      description: "Het aantal dagen in de opgegeven maand in het opgegeven jaar in de opgegeven Era-waarde."
  overload: System.Globalization.GregorianCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>year</code> valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>month</code> valt buiten het bereik dat wordt ondersteund door de kalender."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert het aantal dagen in het opgegeven jaar in de opgegeven Era-waarde."
  remarks: "Bijvoorbeeld: deze methode retourneert 365 of 366, afhankelijk van of `year` een schrikkeljaar is."
  example:
  - "The following code example calls GetDaysInYear for five years in each era.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/a71f2fe7-84c1-4827-ac70-_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/a71f2fe7-84c1-4827-ac70-_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/a71f2fe7-84c1-4827-ac70-_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Int32
      description: "Het aantal dagen in het opgegeven jaar in de opgegeven Era-waarde."
  overload: System.Globalization.GregorianCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>year</code> valt buiten het bereik dat wordt ondersteund door de kalender."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: GregorianCalendar.GetEra(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert de Era-waarde in de opgegeven <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: 'De Gregoriaanse kalender herkent weergegeven in twee tijdperken: v.Chr. B.C.E. en A.D. of C.E. Deze implementatie van de <xref:System.Globalization.GregorianCalendar>klasse herkent alleen de huidige era (A.D.</xref:System.Globalization.GregorianCalendar> (of C.E.).'
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_6_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_6_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_6_1.cpp)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een geheel getal dat staat voor de era in <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: GregorianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent de maand leap voor een opgegeven jaar en Era-waarde."
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een jaar."
    - id: era
      type: System.Int32
      description: "Een Era-waarde. Specify either <xref href=&quot;System.Globalization.GregorianCalendar.ADEra&quot;></xref> or <xref uid=&quot;langword_csharp_GregorianCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;GregorianCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "Altijd 0 omdat de Gregoriaanse kalender leap maanden niet wordt herkend."
  overload: System.Globalization.GregorianCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>is kleiner dan het jaar Gregoriaanse kalender 1 of groter dan het jaar Gregoriaanse kalender 9999.       -or-       <code>era</code> is not <xref href=&quot;System.Globalization.GregorianCalendar.ADEra&quot;></xref> or <xref uid=&quot;langword_csharp_GregorianCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;GregorianCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: GregorianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert de maand van de opgegeven <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_9_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_9_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_9_1.cpp)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een geheel getal tussen 1 en 12 dat de maand in aangeeft <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert het aantal maanden in het opgegeven jaar in de opgegeven Era-waarde."
  remarks: ''
  example:
  - "The following code example calls GetMonthsInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/401ca427-6c60-47eb-91ba-_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/401ca427-6c60-47eb-91ba-_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/401ca427-6c60-47eb-91ba-_1.vb)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Int32
      description: "Het aantal maanden in het opgegeven jaar in de opgegeven Era-waarde."
  overload: System.Globalization.GregorianCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>year</code> valt buiten het bereik dat wordt ondersteund door de kalender."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: GregorianCalendar.GetYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert het jaar in de opgegeven <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_7_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_7_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_7_1.cpp)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een geheel getal dat staat voor het jaar in <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee wordt bepaald of de opgegeven datum in de opgegeven era per dag leap."
  remarks: "Een schrikkeljaar in de Gregoriaanse kalender wordt gedefinieerd als een deelbaar jaar met vier, behalve als deelbaar door 100 is. Jaren dat deelbaar door 400 zijn zijn echter leap jaar. Bijvoorbeeld, het jaar 1900 is niet een schrikkeljaar, maar het jaar 2000 is. Een algemene jaar 365 dagen heeft en een schrikkeljaar 366 dagen.       Een leap een dag die alleen op in een schrikkeljaar treedt wordt. In de Gregoriaanse kalender wordt de dag 29 van februari alleen leap dag."
  example:
  - "The following code example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.IsLeapDay#1](~/add/codesnippet/cpp/f70e7f67-7d6a-4484-9fbf-_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/f70e7f67-7d6a-4484-9fbf-_1.vb)]\n [!code-cs[System.Globalization.GregorianCalendar.IsLeapDay#1](~/add/codesnippet/csharp/f70e7f67-7d6a-4484-9fbf-_1.cs)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: month
      type: System.Int32
      description: "Een geheel getal tussen 1 en 12 dat de maand aangeeft."
    - id: day
      type: System.Int32
      description: "Een geheel getal van 1 tot 31 dat de dag aangeeft."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven dag een dag leap; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>year</code> valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>month</code> valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>day</code> valt buiten het bereik dat wordt ondersteund door de kalender."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee wordt bepaald of de opgegeven maand in het opgegeven jaar in de opgegeven era een maand leap."
  remarks: "Een schrikkeljaar in de Gregoriaanse kalender wordt gedefinieerd als een deelbaar jaar met vier, behalve als deelbaar door 100 is. Jaren dat deelbaar door 400 zijn zijn echter leap jaar. Bijvoorbeeld, het jaar 1900 is niet een schrikkeljaar, maar het jaar 2000 is. Een algemene jaar 365 dagen heeft en een schrikkeljaar 366 dagen.       Een maand leap is een volledige maand die alleen op in een schrikkeljaar treedt. De Gregoriaanse kalender heeft geen leap maanden."
  example:
  - "The following code example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/de7e90b6-6a1d-4ed0-8d65-_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/de7e90b6-6a1d-4ed0-8d65-_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/de7e90b6-6a1d-4ed0-8d65-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: month
      type: System.Int32
      description: "Een geheel getal tussen 1 en 12 dat de maand aangeeft."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Boolean
      description: "Deze methode retourneert altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, tenzij overschreven door een afgeleide klasse."
  overload: System.Globalization.GregorianCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>year</code> valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>month</code> valt buiten het bereik dat wordt ondersteund door de kalender."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee wordt bepaald of het opgegeven jaar in de opgegeven era een schrikkeljaar is."
  remarks: "Een schrikkeljaar in de Gregoriaanse kalender wordt gedefinieerd als een deelbaar jaar met vier, behalve als deelbaar door 100 is. Jaren dat deelbaar door 400 zijn zijn echter leap jaar. Bijvoorbeeld, het jaar 1900 is niet een schrikkeljaar, maar het jaar 2000 is. Een algemene jaar 365 dagen heeft en een schrikkeljaar 366 dagen."
  example:
  - "The following code example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.GregorianCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.g_1_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.g_1_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.g_1_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het opgegeven jaar een schrikkeljaar; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>year</code> valt buiten het bereik dat wordt ondersteund door de kalender."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: GregorianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Haalt de laatste datum en tijd die worden ondersteund door de <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> type."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.g_1_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.g_1_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.g_1_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "De laatste datum en tijd die worden ondersteund door de <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> -type, het laatste moment en met 31 December 9999 C.E. en komt overeen met <xref:System.DateTime.MaxValue>.</xref:System.DateTime.MaxValue>"
  overload: System.Globalization.GregorianCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: GregorianCalendar.MinSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Haalt de vroegste datum en tijd die worden ondersteund door de <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> type."
  remarks: "Hoewel de waarde van de eigenschap MinSupportedDateTime het eerste moment 1 januari 0001 C.E. is, de Gregoriaanse kalender niet tot en met 15 oktober 1582, werd geïntroduceerd en verliep langzaam na de overstap op in de Europese continent en over de hele wereld. Totdat ze de Gregoriaanse kalender, de meeste culturen in de Europese vastgesteld American en Australian continenten gebruikt de Juliaanse kalender, die wordt vertegenwoordigd door de <xref:System.Globalization.JulianCalendar>klasse.</xref:System.Globalization.JulianCalendar>"
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.g_0_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.g_0_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.g_0_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "De vroegste datum en tijd die worden ondersteund door de <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> type, dit het eerste moment 1 januari 0001 C.E. is en komt overeen met <xref:System.DateTime.MinValue>.</xref:System.DateTime.MinValue>"
  overload: System.Globalization.GregorianCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert een <xref:System.DateTime>die is ingesteld op de opgegeven datum en tijd in de opgegeven era.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: month
      type: System.Int32
      description: "Een geheel getal tussen 1 en 12 dat de maand aangeeft."
    - id: day
      type: System.Int32
      description: "Een geheel getal van 1 tot 31 dat de dag aangeeft."
    - id: hour
      type: System.Int32
      description: "Een geheel getal tussen 0 en 23 dat het uur voorstelt."
    - id: minute
      type: System.Int32
      description: "Een geheel getal tussen 0 en 59 dat de minuut voorstelt."
    - id: second
      type: System.Int32
      description: "Een geheel getal tussen 0 en 59 dat de seconde voorstelt."
    - id: millisecond
      type: System.Int32
      description: "Een geheel getal van 0 tot en met 999 die welke milliseconde aangeeft."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.DateTime
      description: "De <xref:System.DateTime>die is ingesteld op de opgegeven datum en tijd in de huidige era.</xref:System.DateTime>"
  overload: System.Globalization.GregorianCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>year</code> valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>month</code> valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>day</code> valt buiten het bereik dat wordt ondersteund door de kalender.       - of - <code>hour</code> is kleiner dan nul of groter zijn dan 23.       - of - <code>minute</code> is kleiner dan nul of groter is dan 59.       - of - <code>second</code> is kleiner dan nul of groter is dan 59.       - of - <code>millisecond</code> is kleiner dan nul of groter zijn dan 999."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: GregorianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.GregorianCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Het opgegeven jaar converteert naar een jaar met vier cijfers met behulp van de <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax*>eigenschap om te bepalen van de juiste honderd jaar.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>het afgelopen jaar in het bereik van 100 jaar die kan worden gerepresenteerd door een jaartallen met twee jaar is.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> De honderd jaar wordt bepaald door het vinden van het enige exemplaar van de twee cijfers `year` binnen dat bereik van 100 jaar. Bijvoorbeeld, als <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>is ingesteld op 2029, is het bereik van 100 jaar van 1930 tot 2029.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> Daarom is een waarde van 2 cijfers van 30 geïnterpreteerd als 1930, terwijl een waarde van 2 cijfers van 29 wordt geïnterpreteerd als 2029.       ToFourDigitYear ondersteunt jaartallen met twee of een jaar met vier cijfers. Het doorgeven van een waarde met twee cijfers (minder dan 100) zorgt ervoor dat de methode de waarde niet converteren naar een waarde van vier cijfers volgens de <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>-waarde voor de juiste honderd jaar.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> Als de toepassing een met vier cijfers-jaarwaarde die binnen het bereik van de ondersteunde kalender tot ToFourDigitYear levert, wordt de methode de werkelijke waarde van de invoer retourneert. Als de toepassing levert een waarde van vier cijfers die buiten het bereik van de ondersteunde agenda, of als dit een negatieve waarde levert, genereert de methode een uitzondering."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Een jaartallen met twee of vier cijfers geheel getal dat staat voor het jaar in om te converteren."
    return:
      type: System.Int32
      description: "Een geheel getal dat de weergave van vier cijfers van bevat <code> year </code>."
  overload: System.Globalization.GregorianCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>valt buiten het bereik dat wordt ondersteund door de kalender."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: GregorianCalendar.TwoDigitYearMax
  fullName: System.Globalization.GregorianCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Opgehaald of ingesteld van het afgelopen jaar van een bereik van 100 jaar die kan worden gerepresenteerd door jaartallen met 2."
  remarks: "Deze eigenschap kunt een jaar 2 cijfers correct worden omgezet in een jaar in 4 cijfers. Bijvoorbeeld, als deze eigenschap is ingesteld op 2029, moet het bereik van 100 jaar uit 1930 2029. Daarom is een waarde van 2 cijfers van 30 geïnterpreteerd als 1930, terwijl een waarde van 2 cijfers van 29 wordt geïnterpreteerd als 2029.       De eerste waarde van deze eigenschap wordt afgeleid van de instellingen in het gedeelte van de opties land- en taalinstellingen van het Configuratiescherm. Deze informatie kunt echter wijzigen tijdens de levensduur van de <xref:System.AppDomain>.</xref:System.AppDomain> De <xref:System.Globalization.GregorianCalendar>klasse detecteert geen wijzigingen in de instellingen van het automatisch.</xref:System.Globalization.GregorianCalendar>       De toepassing, moet deze waarde ingesteld op 99 om aan te geven dat 2 jaartallen letterlijk worden ondernomen. Bijvoorbeeld, als deze eigenschap is ingesteld op 99, is het bereik van 100 jaar van 0 (geen geldige waarde voor de meeste kalender) tot en met 99. Daarom wordt een waarde van 2 cijfers van 30 geïnterpreteerd als 30."
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Het afgelopen jaar van een bereik van 100 jaar die kan worden gerepresenteerd door jaartallen met 2."
  overload: System.Globalization.GregorianCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde die is opgegeven in een set-bewerking is minder dan 99.       - of - de opgegeven waarde in een set-bewerking is groter dan <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "In een set-bewerking is het huidige exemplaar van alleen-lezen."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.GregorianCalendar.#ctor
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GregorianCalendar()
  nameWithType: GregorianCalendar.GregorianCalendar()
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar()
- uid: System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GregorianCalendar(GregorianCalendarTypes)
  nameWithType: GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
- uid: System.Globalization.GregorianCalendarTypes
  parent: System.Globalization
  isExternal: false
  name: GregorianCalendarTypes
  nameWithType: GregorianCalendarTypes
  fullName: System.Globalization.GregorianCalendarTypes
- uid: System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: GregorianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: GregorianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.GregorianCalendar.ADEra
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ADEra
  nameWithType: GregorianCalendar.ADEra
  fullName: System.Globalization.GregorianCalendar.ADEra
- uid: System.Globalization.GregorianCalendar.AlgorithmType
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: GregorianCalendar.AlgorithmType
  fullName: System.Globalization.GregorianCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.GregorianCalendar.CalendarType
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: CalendarType
  nameWithType: GregorianCalendar.CalendarType
  fullName: System.Globalization.GregorianCalendar.CalendarType
- uid: System.Globalization.GregorianCalendar.Eras
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: Eras
  nameWithType: GregorianCalendar.Eras
  fullName: System.Globalization.GregorianCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: GregorianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: GregorianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: GregorianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetEra(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: GregorianCalendar.GetEra(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetEra(DateTime)
- uid: System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: GregorianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: GregorianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetMonth(DateTime)
- uid: System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: GregorianCalendar.GetYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetYear(DateTime)
- uid: System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.MaxSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: GregorianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MaxSupportedDateTime
- uid: System.Globalization.GregorianCalendar.MinSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: GregorianCalendar.MinSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MinSupportedDateTime
- uid: System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: GregorianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.GregorianCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.GregorianCalendar.TwoDigitYearMax
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: GregorianCalendar.TwoDigitYearMax
  fullName: System.Globalization.GregorianCalendar.TwoDigitYearMax
- uid: System.Globalization.GregorianCalendar.#ctor*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GregorianCalendar
  nameWithType: GregorianCalendar.GregorianCalendar
- uid: System.Globalization.GregorianCalendar.AddMonths*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddMonths
  nameWithType: GregorianCalendar.AddMonths
- uid: System.Globalization.GregorianCalendar.AddYears*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddYears
  nameWithType: GregorianCalendar.AddYears
- uid: System.Globalization.GregorianCalendar.AlgorithmType*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: GregorianCalendar.AlgorithmType
- uid: System.Globalization.GregorianCalendar.CalendarType*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: CalendarType
  nameWithType: GregorianCalendar.CalendarType
- uid: System.Globalization.GregorianCalendar.Eras*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: Eras
  nameWithType: GregorianCalendar.Eras
- uid: System.Globalization.GregorianCalendar.GetDayOfMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: GregorianCalendar.GetDayOfMonth
- uid: System.Globalization.GregorianCalendar.GetDayOfWeek*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: GregorianCalendar.GetDayOfWeek
- uid: System.Globalization.GregorianCalendar.GetDayOfYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: GregorianCalendar.GetDayOfYear
- uid: System.Globalization.GregorianCalendar.GetDaysInMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: GregorianCalendar.GetDaysInMonth
- uid: System.Globalization.GregorianCalendar.GetDaysInYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: GregorianCalendar.GetDaysInYear
- uid: System.Globalization.GregorianCalendar.GetEra*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetEra
  nameWithType: GregorianCalendar.GetEra
- uid: System.Globalization.GregorianCalendar.GetLeapMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: GregorianCalendar.GetLeapMonth
- uid: System.Globalization.GregorianCalendar.GetMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonth
  nameWithType: GregorianCalendar.GetMonth
- uid: System.Globalization.GregorianCalendar.GetMonthsInYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: GregorianCalendar.GetMonthsInYear
- uid: System.Globalization.GregorianCalendar.GetYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetYear
  nameWithType: GregorianCalendar.GetYear
- uid: System.Globalization.GregorianCalendar.IsLeapDay*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: GregorianCalendar.IsLeapDay
- uid: System.Globalization.GregorianCalendar.IsLeapMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: GregorianCalendar.IsLeapMonth
- uid: System.Globalization.GregorianCalendar.IsLeapYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: GregorianCalendar.IsLeapYear
- uid: System.Globalization.GregorianCalendar.MaxSupportedDateTime*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: GregorianCalendar.MaxSupportedDateTime
- uid: System.Globalization.GregorianCalendar.MinSupportedDateTime*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: GregorianCalendar.MinSupportedDateTime
- uid: System.Globalization.GregorianCalendar.ToDateTime*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: GregorianCalendar.ToDateTime
- uid: System.Globalization.GregorianCalendar.ToFourDigitYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: GregorianCalendar.ToFourDigitYear
- uid: System.Globalization.GregorianCalendar.TwoDigitYearMax*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: GregorianCalendar.TwoDigitYearMax
