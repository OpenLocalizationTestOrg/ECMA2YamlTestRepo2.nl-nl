### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.IMultiValueConverter
  id: IMultiValueConverter
  children:
  - System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: IMultiValueConverter
  nameWithType: IMultiValueConverter
  fullName: System.Windows.Data.IMultiValueConverter
  type: Interface
  summary: "Biedt een manier om toe te passen van aangepaste regels in een <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>."
  remarks: "Koppelen van een conversieprogramma met een <xref:System.Windows.Data.MultiBinding>, maakt u een klasse die de interface IMultiValueConverter implementeert en vervolgens implementeert u de <xref:System.Windows.Data.IMultiValueConverter.Convert%2A>en <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>methoden.</xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IMultiValueConverter.Convert%2A> </xref:System.Windows.Data.MultiBinding>       Afzonderlijke bindingen in de verzameling kunnen hun eigen converters waarde hebben. Zie voor meer informatie <xref:System.Windows.Data.IValueConverter>.</xref:System.Windows.Data.IValueConverter>"
  syntax:
    content: public interface IMultiValueConverter
  implements: []
  platform:
  - net462
- uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  langs:
  - csharp
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Bronwaarden wordt omgezet in een waarde voor het doel van de binding. De binding-engine roept deze methode als de waarden van de bron-bindingen met de doel-binding is doorgevoerd."
  remarks: "De binding-engine onderschept uitzonderingen die worden veroorzaakt door een gebruiker opgegeven conversieprogramma niet. Elke uitzondering die is gegenereerd door de methode converteren of niet-onderschepte uitzonderingen die worden veroorzaakt door methoden die de Convert-methode aanroept, worden behandeld als runtime-fouten. Verwachte problemen afhandelt door te retourneren <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.</xref:System.Windows.DependencyProperty.UnsetValue> </xref:System.Windows.DependencyProperty>"
  syntax:
    content: public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: values
      type: System.Object[]
      description: "De matrix met waarden die de bron-bindingen in de <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> produceert. De waarde <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref> geeft aan dat de bronbinding heeft geen waarde om te bieden voor conversie."
    - id: targetType
      type: System.Type
      description: "Het type van de eigenschap target is binding."
    - id: parameter
      type: System.Object
      description: "De parameter converter te gebruiken."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De cultuur moet worden gebruikt in de converter."
    return:
      type: System.Object
      description: "Een geconverteerde waarde.       Als de methode retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, het geldige <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> waarde wordt gebruikt.       Een retourwaarde van <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>.<xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;></xref> Geeft aan dat de binding wordt gebruikt en dat de converter heeft geen waarde de <> </> *> als deze beschikbaar is of anders wordt de standaardwaarde gebruikt.       Een retourwaarde van <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>.<xref href=&quot;System.Windows.Data.Binding.DoNothing&quot;> </xref> geeft aan dat de binding niet overdragen van de waarde of gebruik de <> </> *> of de standaardwaarde."
  overload: System.Windows.Data.IMultiValueConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Converteert een waarde van de doel-binding aan de bron-binding-waarden."
  remarks: "Als er meer waarden geretourneerd zijn dan er bindingen in de <xref:System.Windows.Data.MultiBinding>, de overtollige waarden geretourneerd, worden genegeerd.</xref:System.Windows.Data.MultiBinding> Als er meer bindingen van bron zijn dan er waarden geretourneerd, is de resterende bron bindingen hoeft niet instellen op deze waarden. Typen retourwaarden worden niet geverifieerd tegen `targetTypes`; de waarden zijn ingesteld op de bron-bindingen rechtstreeks.       Retourneren <xref:System.Windows.Data.Binding.DoNothing>op positie `i` om aan te geven dat er geen waarde is ingesteld op de bronbinding op index `i`.</xref:System.Windows.Data.Binding.DoNothing>       Retourneren <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue> op positie `i` om aan te geven dat de converter kan een waarde opgeven voor de bronbinding op index `i`, en dat er geen waarde is ingesteld op deze</xref:System.Windows.DependencyProperty.UnsetValue> </xref:System.Windows.DependencyProperty>       Retourneren `null` om aan te geven dat de omzetter voor de conversie niet uitvoeren of dat deze geen conversie in deze richting ondersteunt.       De binding-engine onderschept uitzonderingen die worden veroorzaakt door een gebruiker opgegeven conversieprogramma niet. Elke uitzondering die is gegenereerd door de methode ConvertBack of niet-onderschepte uitzonderingen die worden veroorzaakt door methoden die de ConvertBack-methode aanroept, worden behandeld als runtime-fouten. Verwachte problemen afhandelt door te retourneren `null`."
  syntax:
    content: public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: "De waarde die het doel van de binding produceert."
    - id: targetTypes
      type: System.Type[]
      description: "De matrix van typen om te converteren naar. Lengte van de matrix geeft het aantal en de typen van waarden die worden voorgesteld voor de methode om te retourneren."
    - id: parameter
      type: System.Object
      description: "De parameter converter te gebruiken."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De cultuur moet worden gebruikt in de converter."
    return:
      type: System.Object[]
      description: "Een matrix met waarden die zijn geconverteerd van de doelwaarde terug naar de bronwaarden."
  overload: System.Windows.Data.IMultiValueConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Data.IMultiValueConverter.Convert*
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: Convert
  nameWithType: IMultiValueConverter.Convert
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack*
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: ConvertBack
  nameWithType: IMultiValueConverter.ConvertBack
