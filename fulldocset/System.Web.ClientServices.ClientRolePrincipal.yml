### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.ClientRolePrincipal
  id: ClientRolePrincipal
  children:
  - System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Web.ClientServices.ClientRolePrincipal.Identity
  - System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)
  langs:
  - csharp
  name: ClientRolePrincipal
  nameWithType: ClientRolePrincipal
  fullName: System.Web.ClientServices.ClientRolePrincipal
  type: Class
  summary: "Beveiligingsgegevens voor client-toepassingsservices, waaronder gegevens over de serverfunctie vertegenwoordigt."
  remarks: "Wanneer u een gebruiker in client-toepassingsservices, valideert de <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>of de <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>stelt de `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap in op een exemplaar van deze klasse.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> Het <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>initialiseren van de <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>eigenschap naar een nieuw exemplaar van de <xref:System.Web.ClientServices.ClientFormsIdentity>klasse.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> De <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>initialiseert de <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>eigenschap in op de <xref:System.Security.Principal.WindowsIdentity>object dat wordt geretourneerd door de `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName>methode.</xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName> </xref:System.Security.Principal.WindowsIdentity> </xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>       U wordt niet doorgaans rechtstreeks toegang hebben tot deze klasse. Normaal gesproken, roept u de <xref:System.Security.Principal.IPrincipal.IsInRole%2A>methode van de <xref:System.Security.Principal.IPrincipal>geretourneerd door de `static` <xref:System.Threading.Thread.CurrentPrincipal%2A>eigenschap.</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> U kunt echter casten de <xref:System.Threading.Thread.CurrentPrincipal%2A>eigenschapswaarde aan te roepen ClientRolePrincipal verwijzing naar de <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A>methode expliciet in het voorbeeld in deze sectie wordt gedemonstreerd.</xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A> </xref:System.Threading.Thread.CurrentPrincipal%2A>"
  example:
  - "The following example code demonstrates how to use this class to display a button only when the user is in the \"manager\" role. This example requires a <xref:System.Windows.Forms.Button> named `managerOnlyButton` with an initial <xref:System.Windows.Forms.Control.Visible%2A> property value of `false`.  \n  \n [!code-vb[ClientApplicationServices#313](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#313)]\n [!code-cs[ClientApplicationServices#313](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#313)]"
  syntax:
    content: 'public class ClientRolePrincipal : System.Security.Principal.IPrincipal'
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IPrincipal
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Web.ClientServices.ClientRolePrincipal
  langs:
  - csharp
  name: ClientRolePrincipal(IIdentity)
  nameWithType: ClientRolePrincipal.ClientRolePrincipal(IIdentity)
  fullName: System.Web.ClientServices.ClientRolePrincipal.ClientRolePrincipal(IIdentity)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.ClientServices.ClientRolePrincipal&quot;> </xref> klasse."
  remarks: "De <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>eigenschap is ge√Ønitialiseerd met de waarde van de `identity` parameter.</xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>       Wanneer u een gebruiker in client-toepassingsservices, valideert de <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>of de <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>stelt de `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap in op een exemplaar van deze klasse.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> Het <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>initialiseren van de <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>eigenschap naar een nieuw exemplaar van de <xref:System.Web.ClientServices.ClientFormsIdentity>klasse.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> De <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>initialiseert de <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>eigenschap in op de <xref:System.Security.Principal.WindowsIdentity>object dat wordt geretourneerd door de `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName>methode.</xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName> </xref:System.Security.Principal.WindowsIdentity> </xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>"
  syntax:
    content: public ClientRolePrincipal (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "Hiermee geeft u de huidige gebruiker."
  overload: System.Web.ClientServices.ClientRolePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientRolePrincipal.Identity
  id: Identity
  parent: System.Web.ClientServices.ClientRolePrincipal
  langs:
  - csharp
  name: Identity
  nameWithType: ClientRolePrincipal.Identity
  fullName: System.Web.ClientServices.ClientRolePrincipal.Identity
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Haalt de beveiligings-id die is gekoppeld aan de <xref href=&quot;System.Web.ClientServices.ClientRolePrincipal&quot;> </xref>."
  remarks: "Wanneer u een gebruiker in client-toepassingsservices, valideert de <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>of de <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>stelt de `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap in op een exemplaar van deze klasse.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> De <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>initialiseert de Identity-eigenschap naar een nieuw exemplaar van de <xref:System.Web.ClientServices.ClientFormsIdentity>klasse.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> De <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>initialiseert de Identity-eigenschap voor de <xref:System.Security.Principal.WindowsIdentity>object dat wordt geretourneerd door de `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName>methode.</xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName> </xref:System.Security.Principal.WindowsIdentity> </xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>"
  syntax:
    content: public System.Security.Principal.IIdentity Identity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: "Hiermee geeft u de huidige gebruiker."
  overload: System.Web.ClientServices.ClientRolePrincipal.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Web.ClientServices.ClientRolePrincipal
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: ClientRolePrincipal.IsInRole(String)
  fullName: System.Web.ClientServices.ClientRolePrincipal.IsInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Hiermee wordt een waarde die aangeeft of de gebruiker dat wordt vertegenwoordigd door de <xref href=&quot;System.Web.ClientServices.ClientRolePrincipal&quot;> </xref> is in de opgegeven rol."
  remarks: "Normaal gesproken, roept u de <xref:System.Security.Principal.IPrincipal.IsInRole%2A>methode van de <xref:System.Security.Principal.IPrincipal>geretourneerd door de `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> U kunt echter casten de <xref:System.Threading.Thread.CurrentPrincipal%2A>eigenschapswaarde voor een <xref:System.Web.ClientServices.ClientRolePrincipal>verwijzing naar deze methode expliciet, zoals wordt beschreven in het voorbeeld in deze sectie niet aanroepen.</xref:System.Web.ClientServices.ClientRolePrincipal> </xref:System.Threading.Thread.CurrentPrincipal%2A>       De methode IsInRole resulteert altijd `false` als de gebruikersaanmelding is verlopen. Dit gebeurt niet als uw toepassing roept de <xref:System.Security.Principal.IPrincipal.IsInRole%2A>methode √©√©n keer kort na verificatie.</xref:System.Security.Principal.IPrincipal.IsInRole%2A> Als uw toepassing gebruikersrollen op andere tijden ophalen moet, wilt u mogelijk code toevoegen om te valideren gebruikers waarvan aanmelding is verlopen. Als alle geldige gebruikers zijn toegewezen aan rollen, kunt u bepalen of de aanmelding is verlopen door het aanroepen van de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A?displayProperty=fullName>methode.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A?displayProperty=fullName> Als er zijn geen rollen worden geretourneerd, wordt de aanmelding is verlopen. Zie voor een voorbeeld van deze functionaliteit de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>methode.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> Deze functionaliteit is alleen nodig als u hebt geselecteerd **vereisen dat gebruikers opnieuw aan te melden wanneer de server cookie verloopt** in de configuratie van uw toepassing. Zie voor meer informatie [hoe: Client toepassingsservices configureren](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example code demonstrates how to use this method to display a button only when the user is in the \"manager\" role. This example requires a <xref:System.Windows.Forms.Button> named `managerOnlyButton` with an initial <xref:System.Windows.Forms.Control.Visible%2A> property value of `false`.  \n  \n [!code-vb[ClientApplicationServices#313](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#313)]\n [!code-cs[ClientApplicationServices#313](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#313)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "De rol om te controleren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebruiker in de opgegeven rol; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de gebruiker zich niet in de opgegeven rol of is niet geverifieerd."
  overload: System.Web.ClientServices.ClientRolePrincipal.IsInRole*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: ClientRolePrincipal(IIdentity)
  nameWithType: ClientRolePrincipal.ClientRolePrincipal(IIdentity)
  fullName: System.Web.ClientServices.ClientRolePrincipal.ClientRolePrincipal(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Web.ClientServices.ClientRolePrincipal.Identity
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: Identity
  nameWithType: ClientRolePrincipal.Identity
  fullName: System.Web.ClientServices.ClientRolePrincipal.Identity
- uid: System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: IsInRole(String)
  nameWithType: ClientRolePrincipal.IsInRole(String)
  fullName: System.Web.ClientServices.ClientRolePrincipal.IsInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ClientServices.ClientRolePrincipal.#ctor*
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: ClientRolePrincipal
  nameWithType: ClientRolePrincipal.ClientRolePrincipal
- uid: System.Web.ClientServices.ClientRolePrincipal.Identity*
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: Identity
  nameWithType: ClientRolePrincipal.Identity
- uid: System.Web.ClientServices.ClientRolePrincipal.IsInRole*
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: IsInRole
  nameWithType: ClientRolePrincipal.IsInRole
