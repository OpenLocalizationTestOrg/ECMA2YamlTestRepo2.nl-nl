### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.SignatureToken
  id: SignatureToken
  children:
  - System.Reflection.Emit.SignatureToken.Empty
  - System.Reflection.Emit.SignatureToken.Equals(System.Object)
  - System.Reflection.Emit.SignatureToken.Equals(System.Reflection.Emit.SignatureToken)
  - System.Reflection.Emit.SignatureToken.GetHashCode
  - System.Reflection.Emit.SignatureToken.op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  - System.Reflection.Emit.SignatureToken.op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  - System.Reflection.Emit.SignatureToken.Token
  langs:
  - csharp
  name: SignatureToken
  nameWithType: SignatureToken
  fullName: System.Reflection.Emit.SignatureToken
  type: Struct
  summary: "Hiermee geeft u de <xref uid=&quot;langword_csharp_Token&quot; name=&quot;Token&quot; href=&quot;&quot;> </xref> geretourneerd door de metagegevens voor een handtekening."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct SignatureToken
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Reflection.Emit.SignatureToken.Empty
  id: Empty
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: Empty
  nameWithType: SignatureToken.Empty
  fullName: System.Reflection.Emit.SignatureToken.Empty
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "De standaardwaarde <xref uid=&quot;langword_csharp_SignatureToken&quot; name=&quot;SignatureToken&quot; href=&quot;&quot;> </xref> met <xref:System.Reflection.Emit.SignatureToken.Token*>waarde 0.</xref:System.Reflection.Emit.SignatureToken.Token*>"
  syntax:
    content: public static readonly System.Reflection.Emit.SignatureToken Empty;
    return:
      type: System.Reflection.Emit.SignatureToken
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.SignatureToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SignatureToken.Equals(Object)
  fullName: System.Reflection.Emit.SignatureToken.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Controleert of het opgegeven object een exemplaar van is <xref uid=&quot;langword_csharp_SignatureToken&quot; name=&quot;SignatureToken&quot; href=&quot;&quot;> </xref> en gelijk is aan dit exemplaar."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object moet worden vergeleken met dit <xref uid=&quot;langword_csharp_SignatureToken&quot; name=&quot;SignatureToken&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> obj </code> is een exemplaar van <xref uid=&quot;langword_csharp_SignatureToken&quot; name=&quot;SignatureToken&quot; href=&quot;&quot;> </xref> en is gelijk aan dit object, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Reflection.Emit.SignatureToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.SignatureToken.Equals(System.Reflection.Emit.SignatureToken)
  id: Equals(System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: Equals(SignatureToken)
  nameWithType: SignatureToken.Equals(SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.Equals(SignatureToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Hiermee wordt aangegeven of de huidige instantie gelijk zijn aan de opgegeven <xref href=&quot;System.Reflection.Emit.SignatureToken&quot;> </xref>."
  syntax:
    content: public bool Equals (System.Reflection.Emit.SignatureToken obj);
    parameters:
    - id: obj
      type: System.Reflection.Emit.SignatureToken
      description: "De <xref href=&quot;System.Reflection.Emit.SignatureToken&quot;> </xref> om te vergelijken met het huidige exemplaar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van <code> obj </code> is gelijk aan de waarde van het huidige exemplaar, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Reflection.Emit.SignatureToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.SignatureToken.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SignatureToken.GetHashCode()
  fullName: System.Reflection.Emit.SignatureToken.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "De hash-code voor deze handtekening genereert."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Retourneert de hash-code voor deze handtekening."
  overload: System.Reflection.Emit.SignatureToken.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.SignatureToken.op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  id: op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: op_Equality(SignatureToken,SignatureToken)
  nameWithType: SignatureToken.op_Equality(SignatureToken,SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.op_Equality(SignatureToken,SignatureToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Hiermee wordt aangegeven of twee <xref href=&quot;System.Reflection.Emit.SignatureToken&quot;> </xref> structuren gelijk zijn."
  syntax:
    content: public static bool op_Equality (System.Reflection.Emit.SignatureToken a, System.Reflection.Emit.SignatureToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.SignatureToken
      description: "De <xref href=&quot;System.Reflection.Emit.SignatureToken&quot;> </xref> moet worden vergeleken met `b`."
    - id: b
      type: System.Reflection.Emit.SignatureToken
      description: "De <xref href=&quot;System.Reflection.Emit.SignatureToken&quot;> </xref> moet worden vergeleken met `a`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.SignatureToken.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.SignatureToken.op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  id: op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: op_Inequality(SignatureToken,SignatureToken)
  nameWithType: SignatureToken.op_Inequality(SignatureToken,SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.op_Inequality(SignatureToken,SignatureToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Hiermee wordt aangegeven of twee <xref href=&quot;System.Reflection.Emit.SignatureToken&quot;> </xref> structuren niet gelijk zijn."
  syntax:
    content: public static bool op_Inequality (System.Reflection.Emit.SignatureToken a, System.Reflection.Emit.SignatureToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.SignatureToken
      description: "De <xref href=&quot;System.Reflection.Emit.SignatureToken&quot;> </xref> moet worden vergeleken met `b`."
    - id: b
      type: System.Reflection.Emit.SignatureToken
      description: "De <xref href=&quot;System.Reflection.Emit.SignatureToken&quot;> </xref> moet worden vergeleken met `a`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.SignatureToken.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.SignatureToken.Token
  id: Token
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: Token
  nameWithType: SignatureToken.Token
  fullName: System.Reflection.Emit.SignatureToken.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Haalt de metagegevenstoken voor de lokale variabele handtekening voor deze methode."
  remarks: "Hiermee wordt een numerieke representatie van het metagegevenstoken."
  syntax:
    content: public int Token { get; }
    return:
      type: System.Int32
      description: "Alleen-lezen. Haalt de metagegevenstoken van deze handtekening."
  overload: System.Reflection.Emit.SignatureToken.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Reflection.Emit.SignatureToken.Empty
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Empty
  nameWithType: SignatureToken.Empty
  fullName: System.Reflection.Emit.SignatureToken.Empty
- uid: System.Reflection.Emit.SignatureToken
  parent: System.Reflection.Emit
  isExternal: false
  name: SignatureToken
  nameWithType: SignatureToken
  fullName: System.Reflection.Emit.SignatureToken
- uid: System.Reflection.Emit.SignatureToken.Equals(System.Object)
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Equals(Object)
  nameWithType: SignatureToken.Equals(Object)
  fullName: System.Reflection.Emit.SignatureToken.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.SignatureToken.Equals(System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Equals(SignatureToken)
  nameWithType: SignatureToken.Equals(SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.Equals(SignatureToken)
- uid: System.Reflection.Emit.SignatureToken.GetHashCode
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: GetHashCode()
  nameWithType: SignatureToken.GetHashCode()
  fullName: System.Reflection.Emit.SignatureToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.SignatureToken.op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: op_Equality(SignatureToken,SignatureToken)
  nameWithType: SignatureToken.op_Equality(SignatureToken,SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.op_Equality(SignatureToken,SignatureToken)
- uid: System.Reflection.Emit.SignatureToken.op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: op_Inequality(SignatureToken,SignatureToken)
  nameWithType: SignatureToken.op_Inequality(SignatureToken,SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.op_Inequality(SignatureToken,SignatureToken)
- uid: System.Reflection.Emit.SignatureToken.Token
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Token
  nameWithType: SignatureToken.Token
  fullName: System.Reflection.Emit.SignatureToken.Token
- uid: System.Reflection.Emit.SignatureToken.Equals*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Equals
  nameWithType: SignatureToken.Equals
- uid: System.Reflection.Emit.SignatureToken.GetHashCode*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: GetHashCode
  nameWithType: SignatureToken.GetHashCode
- uid: System.Reflection.Emit.SignatureToken.op_Equality*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: op_Equality
  nameWithType: SignatureToken.op_Equality
- uid: System.Reflection.Emit.SignatureToken.op_Inequality*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: op_Inequality
  nameWithType: SignatureToken.op_Inequality
- uid: System.Reflection.Emit.SignatureToken.Token*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Token
  nameWithType: SignatureToken.Token
