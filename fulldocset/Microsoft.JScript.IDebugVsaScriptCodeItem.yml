### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem
  id: IDebugVsaScriptCodeItem
  children:
  - Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  - Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  langs:
  - csharp
  name: IDebugVsaScriptCodeItem
  nameWithType: IDebugVsaScriptCodeItem
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem
  type: Interface
  summary: "Definieert de methoden die expressies evalueren en parseren van tekenreeksen. Deze interface wordt gewoonlijk geïmplementeerd door een object dat een codeblok vertegenwoordigt en deze doorgaans door een debugger wordt aangeroepen. Deze interface biedt extra functionaliteit die nodig is voor een host IActiveScript."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")]

      public interface IDebugVsaScriptCodeItem
  implements: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  id: Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Wanneer een geïmplementeerd in een klasse, evalueert het blok, expressie of instructie vertegenwoordigd door het code-item en retourneert de waarde. Doorgaans wordt aangeroepen door een foutopsporingsprogramma die moet een expressie (in een controlevenster voor voorbeeld) niet evalueren. De waarde is voor expressies, het resultaat van de expressie. Voor blokken en instructies is de resulterende expressie de laatste expressie berekend door het blok of -instructie."
  remarks: "Houd er rekening mee dat de methode Evaluate is identiek aan de <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A>methode.</xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> Alleen de Marshal kenmerken verschillen. Deze versie van de interface kan een niet-beheerde foutopsporingsprogramma verkrijgen van de geretourneerde waarde als een `IUnknown` aanwijzer in plaats van een `VARIANT`."
  syntax:
    content: public object Evaluate ();
    parameters: []
    return:
      type: System.Object
      description: "Retourneert een waarde die aangeeft van de evaluatie van de instructie, expressie of blokkeren."
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  id: ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: 'Wanneer een geïmplementeerd in een klasse, parseert tekenreeksen en retourneert de informatie geparseerd-out. Deze methode wordt doorgaans aangeroepen door een foutopsporingsprogramma dat moet worden geparseerd informatie over een onderbrekingspunt die wordt weergegeven als een <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>. Het foutopsporingsprogramma wellicht een onderbrekingspunt in door de gebruiker in het formulier hebt getypt *functienaam-argumenten-ILoffset*. Een tekenreeks met de naam onderbrekingspunt kan bijvoorbeeld een complexe indeling hebben `F.B(C.D[], int, arg : double ) : C.Abc + 123.` de parameterlijst is optioneel, omdat de IL-offset.'
  syntax:
    content: public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);
    parameters:
    - id: input
      type: System.String
      description: "Een goed ingedeelde benoemde onderbrekingspunt tekenreeks geeft een functie, een lijst met optioneel argument en een optionele IL-offset."
    - id: functionName
      type: System.String
      description: "Uitvoerparameter die de naam van de functie retourneert geparseerd buiten de invoerreeks of een lege tekenreeks als de invoertekenreeks is niet grammaticaal correct."
    - id: nargs
      type: System.Int32
      description: "Retourneert het aantal argumenten in de lijst optioneel argument uitvoerparameter. Geeft nul als er geen argumenten lijst is of als de tekenreeks is niet grammaticaal correct."
    - id: arguments
      type: System.String
      description: "Uitvoerparameter wordt een door spaties gescheiden lijst van de namen van de typen van alle argumenten in de lijst met argumenten of een lege tekenreeks geretourneerd als de lijst met argumenten ontbreekt of de invoertekenreeks is niet grammaticaal correct."
    - id: returnType
      type: System.String
      description: "Uitvoerparameter is retourneert een tekenreeks met het retourtype van de functie met de naam in de invoer of lege tekenreeks als het retourtype ontbreekt of de invoertekenreeks niet goed samengesteld."
    - id: offset
      type: System.UInt64
      description: "Niet-ondertekende lange integer geeft de IL-offset van de invoertekenreeks of nul als er geen IL-offset is of de tekenreeks is niet grammaticaal correct."
    return:
      type: System.Boolean
      description: "Retourneert <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> als het benoemde onderbrekingspunt wordt geparseerd, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> anders."
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate
  nameWithType: IDebugVsaScriptCodeItem.Evaluate
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint
