### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA384Managed
  id: SHA384Managed
  children:
  - System.Security.Cryptography.SHA384Managed.#ctor
  - System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA384Managed.HashFinal
  - System.Security.Cryptography.SHA384Managed.Initialize
  langs:
  - csharp
  name: SHA384Managed
  nameWithType: SHA384Managed
  fullName: System.Security.Cryptography.SHA384Managed
  type: Class
  summary: "Berekent de <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> hash voor de ingevoerde gegevens met behulp van de beheerde bibliotheek."
  remarks: "De hash wordt als een unieke waarde met een vaste grootte van een grote hoeveelheid gegevens die worden gebruikt. Hashes van twee sets van gegevens moeten overeenkomen met en alleen als de bijbehorende gegevens, overeenkomt met. Kleine wijzigingen in de gegevens leiden tot grote onvoorspelbare wijzigingen in de hash.       De grootte van de hash voor de algoritme SHA384Managed is 384 bits."
  example:
  - "The following example computes the SHA384Managed hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cpp[Classic SHA384Managed Example#1](~/add/codesnippet/cpp/t-system.security.crypto_104_1.cpp)]\n [!code-cs[Classic SHA384Managed Example#1](~/add/codesnippet/csharp/t-system.security.crypto_104_1.cs)]\n [!code-vb[Classic SHA384Managed Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_104_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SHA384Managed : System.Security.Cryptography.SHA384
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.SHA384
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA384.Create
  - System.Security.Cryptography.SHA384.Create(System.String)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: SHA384Managed()
  nameWithType: SHA384Managed.SHA384Managed()
  fullName: System.Security.Cryptography.SHA384Managed.SHA384Managed()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;> </xref> klasse."
  remarks: "De hash wordt als een unieke waarde met een vaste grootte van een grote hoeveelheid gegevens die worden gebruikt. Hashes van twee sets van gegevens moeten overeenkomen met en alleen als de bijbehorende gegevens, overeenkomt met. Kleine wijzigingen in de gegevens leiden tot grote onvoorspelbare wijzigingen in de hash.       De grootte van de hash voor de <xref:System.Security.Cryptography.SHA384Managed>-algoritme is 384 bits.</xref:System.Security.Cryptography.SHA384Managed>       **Belangrijke** als u de volgende beveiligingsinstelling in het lokale beveiligingsbeleid inschakelt of als onderdeel van het groepsbeleid u ontvangt een <xref:System.InvalidOperationException>Wanneer u probeert te gebruiken voor deze constructor: **Systeemcryptografie: gebruik FIPS-algoritmen voor versleuteling, hashing en ondertekening** </xref:System.InvalidOperationException>"
  syntax:
    content: public SHA384Managed ();
    parameters: []
  overload: System.Security.Cryptography.SHA384Managed.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De instelling voor de Federal Information Processing Standards (FIPS) is ingeschakeld. Deze implementatie maakt geen deel uit van de Windows Platform FIPS-gevalideerde cryptografische algoritmen."
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA384Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA384Managed.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, stuurt gegevens geschreven naar het object in de <xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;> </xref> hash-algoritme voor het verwerken van de hash."
  remarks: "Deze methode wordt niet aangeroepen door de toepassingscode.       Deze abstracte methode voert de berekening van de hash. Elke schrijfbewerking naar de cryptografische stroomobject wordt doorgegeven via deze methode. Deze methode bijgewerkt de status van het hash-object voor elk blok van gegevens, zodat een juiste hash-waarde wordt geretourneerd aan het einde van de gegevensstroom."
  syntax:
    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "De invoergegevens."
    - id: ibStart
      type: System.Int32
      description: "De offset in de bytematrix waaruit de gegevens in gebruik neemt."
    - id: cbSize
      type: System.Int32
      description: "Het aantal bytes in de matrix te gebruiken als gegevens."
  overload: System.Security.Cryptography.SHA384Managed.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: HashFinal()
  nameWithType: SHA384Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA384Managed.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, wordt de hash-berekening nadat de laatste gegevens wordt verwerkt door de cryptografische stroomobject."
  remarks: "Deze methode wordt niet aangeroepen door de toepassingscode. Deze methode wordt een gedeeltelijke berekening en retourneert de juiste hash-waarde van de gegevensstroom."
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "De berekende hash-code."
  overload: System.Security.Cryptography.SHA384Managed.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA384Managed.Initialize
  id: Initialize
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: Initialize()
  nameWithType: SHA384Managed.Initialize()
  fullName: System.Security.Cryptography.SHA384Managed.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een exemplaar van <xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;> </xref>."
  remarks: "De hash wordt als een unieke waarde met een vaste grootte van een grote hoeveelheid gegevens die worden gebruikt. Hashes van twee sets van gegevens moeten overeenkomen met en alleen als de bijbehorende gegevens, overeenkomt met. Kleine wijzigingen in de gegevens leiden tot grote onvoorspelbare wijzigingen in de hash.       De grootte van de hash voor de <xref:System.Security.Cryptography.SHA384Managed>-algoritme is 384 bits.</xref:System.Security.Cryptography.SHA384Managed>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.SHA384Managed.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SHA384
  isExternal: false
  name: System.Security.Cryptography.SHA384
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA384Managed.#ctor
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: SHA384Managed()
  nameWithType: SHA384Managed.SHA384Managed()
  fullName: System.Security.Cryptography.SHA384Managed.SHA384Managed()
- uid: System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA384Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA384Managed.HashCore(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SHA384Managed.HashFinal
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashFinal()
  nameWithType: SHA384Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA384Managed.HashFinal()
- uid: System.Security.Cryptography.SHA384Managed.Initialize
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Initialize()
  nameWithType: SHA384Managed.Initialize()
  fullName: System.Security.Cryptography.SHA384Managed.Initialize()
- uid: System.Security.Cryptography.SHA384Managed.#ctor*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: SHA384Managed
  nameWithType: SHA384Managed.SHA384Managed
- uid: System.Security.Cryptography.SHA384Managed.HashCore*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashCore
  nameWithType: SHA384Managed.HashCore
- uid: System.Security.Cryptography.SHA384Managed.HashFinal*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashFinal
  nameWithType: SHA384Managed.HashFinal
- uid: System.Security.Cryptography.SHA384Managed.Initialize*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Initialize
  nameWithType: SHA384Managed.Initialize
