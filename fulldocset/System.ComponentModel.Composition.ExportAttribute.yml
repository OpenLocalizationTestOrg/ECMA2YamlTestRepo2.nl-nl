### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ExportAttribute
  id: ExportAttribute
  children:
  - System.ComponentModel.Composition.ExportAttribute.#ctor
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ExportAttribute.ContractName
  - System.ComponentModel.Composition.ExportAttribute.ContractType
  langs:
  - csharp
  name: ExportAttribute
  nameWithType: ExportAttribute
  fullName: System.ComponentModel.Composition.ExportAttribute
  type: Class
  summary: "Hiermee geeft u op dat een type, eigenschap, veld of methode een bepaalde export biedt."
  remarks: "In het Model toegeschreven Programming de ExportAttribute declareert dat een onderdeel exporteert, of geeft tot de container samenstelling, een object dat wordt voldaan aan een bepaalde contract. Tijdens de samenstelling heeft delen met invoer met overeenkomende contracten die afhankelijkheden gevuld door het object en geëxporteerd.       De ExportAttribute kunt opmaken een hele klasse of een eigenschap, veld of methode van een klasse. Als de gehele klasse is voorzien, is een exemplaar van de klasse in het geëxporteerde object. Als een lid van een klasse is voorzien, worden het geëxporteerde object de waarde van de interne lid.       Hoofdzakelijk door de naam van het contract en het contracttype wordt al dan niet een contract komt overeen met bepaald. Zie voor meer informatie <xref:System.ComponentModel.Composition.ImportAttribute>.</xref:System.ComponentModel.Composition.ImportAttribute>"
  example:
  - "The following example shows three classes decorated with the ExportAttribute, and three imports that match them.  \n  \n [!code-cs[ImportAndExport#1](~/add/codesnippet/csharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](~/add/codesnippet/visualbasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)]

      public class ExportAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> klasse, exporteren van het type of lid gemarkeerd met dit kenmerk onder de naam van de standaard-contract."
  remarks: "De standaardnaam voor het contract is het resultaat van het aanroepen van de <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>methode op het type eigenschap of veld of op het type dat is gemarkeerd met dit kenmerk.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Methoden die zijn gemarkeerd met dit kenmerk moeten een naam van het servicecontract of een type opgeven met behulp van beide <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>of <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29> </xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>       Naam van het contract wordt vergeleken met behulp van de <xref:System.StringComparer.Ordinal%2A>eigenschap om uit te voeren van een vergelijking hoofdlettergevoelig, niet-taalkundige.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> klasse, exporteren van het type of lid gemarkeerd met dit kenmerk onder de naam van het opgegeven contract."
  remarks: "De standaardnaam voor het contract is het resultaat van het aanroepen van de <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>methode op het type eigenschap of veld of op het type dat u met dit kenmerk is gemarkeerd.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Methoden die zijn gemarkeerd met dit kenmerk moeten een naam van het servicecontract of een type opgeven met behulp van ExportAttribute of <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>       Naam van het contract wordt vergeleken met behulp van de <xref:System.StringComparer.Ordinal%2A>eigenschap om uit te voeren van een vergelijking hoofdlettergevoelig, niet-taalkundige.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "De naam van het contract dat wordt gebruikt voor het exporteren van het type of lid gemarkeerd met dit kenmerk of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;) het contract standaardnaam wilt gebruiken."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> klasse, exporteren van het type of lid gemarkeerd met dit kenmerk onder de contractnaam van een dat is afgeleid van het opgegeven type."
  remarks: "De naam van het servicecontract is het resultaat van het aanroepen van de <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>methode op `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       De standaardnaam voor het contract is het resultaat van het aanroepen van de <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>methode op het type eigenschap of veld of op het type dat is gemarkeerd met dit kenmerk.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Methoden die zijn gemarkeerd met dit kenmerk moeten een naam van het servicecontract of een type opgeven met behulp van <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>of ExportAttribute.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>       Naam van het contract wordt vergeleken met behulp van de <xref:System.StringComparer.Ordinal%2A>eigenschap om uit te voeren van een vergelijking hoofdlettergevoelig, niet-taalkundige.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "Een type waarvan de naam van het contract dat wordt gebruikt voor het exporteren van het type of lid gemarkeerd met dit kenmerk worden afgeleid of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> het contract standaardnaam wilt gebruiken."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> klasse, exporteren van het opgegeven type onder de naam van het opgegeven contract."
  syntax:
    content: public ExportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "De naam van het contract dat wordt gebruikt voor het exporteren van het type of lid gemarkeerd met dit kenmerk of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;) het contract standaardnaam wilt gebruiken."
    - id: contractType
      type: System.Type
      description: "Het type om te exporteren."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hiermee haalt u de naam van het contract dat wordt gebruikt voor het exporteren van het type of lid gemarkeerd met dit kenmerk."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "De naam van het contract dat wordt gebruikt voor het exporteren van het type of lid gemarkeerd met dit kenmerk. De standaardwaarde is een lege tekenreeks (&quot;&quot;)."
  overload: System.ComponentModel.Composition.ExportAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hiermee wordt de contracttype dat is geëxporteerd door het lid dat dit kenmerk is gekoppeld aan."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "Het type uitvoer die wordt geleverd. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wat betekent dat het type worden verkregen door het type op het lid dat deze export is gekoppeld aan kijken."
  overload: System.ComponentModel.Composition.ExportAttribute.ContractType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute
  nameWithType: ExportAttribute.ExportAttribute
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
