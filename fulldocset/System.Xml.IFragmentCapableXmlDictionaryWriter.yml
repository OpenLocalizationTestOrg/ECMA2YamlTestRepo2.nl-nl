### YamlMime:ManagedReference
items:
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter
  id: IFragmentCapableXmlDictionaryWriter
  children:
  - System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  - System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment
  - System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)
  - System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: IFragmentCapableXmlDictionaryWriter
  nameWithType: IFragmentCapableXmlDictionaryWriter
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter
  type: Interface
  summary: "Bevat eigenschappen en methoden wordt ge√Ømplementeerd door een <xref:System.Xml.XmlDictionaryWriter>, kan de verwerking van XML-fragmenten.</xref:System.Xml.XmlDictionaryWriter>"
  remarks: "Deze klasse definieert de eigenschappen en methoden voor de mogelijkheid van een <xref:System.Xml.XmlDictionaryWriter>deel uit van de uitvoer (een &quot; fragment&quot;) omleiden naar een andere stroom dan de stroom die het is gemaakt en voegt u rechtstreeks dergelijke geen fragment vastgelegd door omleiding naar de belangrijkste stroom van de dezelfde schrijver op een later tijdstip.</xref:System.Xml.XmlDictionaryWriter>"
  syntax:
    content: public interface IFragmentCapableXmlDictionaryWriter
  implements: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  id: CanFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: CanFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref:System.Xml.XmlDictionaryWriter>XML-fragmenten kan verwerken.</xref:System.Xml.XmlDictionaryWriter>"
  remarks: "Retourneert t`r`ue als de writer die deze interface implementeert kunt genereren en XML accepteert-fragmenten."
  syntax:
    content: public bool CanFragment { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref:System.Xml.XmlDictionaryWriter>XML-fragmenten kan worden verwerkt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlDictionaryWriter>"
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment
  id: EndFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: EndFragment()
  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment()
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment()
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "De verwerking van een XML-fragment eindigt."
  remarks: "Stopt de uitvoer omleiden naar de stroom die wordt geleverd door het overeenkomende `StartFragment` aanroepen. Na deze aanroep komt de XML die uitvoer schrijven naar de stroom die oorspronkelijk zijn gebruikt door de writer voordat de `StartFragment` aanroepen."
  syntax:
    content: public void EndFragment ();
    parameters: []
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)
  id: StartFragment(System.IO.Stream,System.Boolean)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: StartFragment(Stream,Boolean)
  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Start de verwerking van een XML-fragment."
  remarks: "Tijdelijk begint het schrijven van de XML-uitvoer omleiden naar de opgegeven stroom tot `EndFragment` wordt aangeroepen. Als `generateSelfContainedTextFragment` is `true`, en vervolgens de omgeleide XML-uitvoer is altijd tekst XML en staat op zichzelf in termen van de naamruimte-context. `StartFragment`()-aanroepen kunnen niet worden genest."
  syntax:
    content: public void StartFragment (System.IO.Stream stream, bool generateSelfContainedTextFragment);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De stroom schrijven naar."
    - id: generateSelfContainedTextFragment
      type: System.Boolean
      description: "Als <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, naamruimten gedeclareerd buiten het fragment is gedeclareerd opnieuw als daarbinnen; wordt gebruikt als <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> de naamruimten niet opnieuw worden gedeclareerd."
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)
  id: WriteFragment(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: WriteFragment(Byte[],Int32,Int32)
  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Een XML-fragment schrijft naar de onderliggende stroom van de schrijver."
  remarks: "Schrijft een fragment vastgelegd tussen `StartFragment` en `EndFragment` en aanroepen naar de XmlDictionaryWriter belangrijkste stroom. Fragment van de geschreven is `count` bytes vanaf de index `offset` van de opgegeven `buffer`. Het gedrag is niet gedefinieerd als fragment van de opgegeven is niet vastgelegd met behulp van dit exemplaar van de schrijver."
  example:
  - "```  \nMemoryStream stream = new MemoryStream();  \nMemoryStream fragmentStream = new MemoryStream();  \nXmlDictionaryWriter writer = XmlDictionaryWriter.CreateTextWriter(stream);  \nIXmlFragmentCapableXmlDictionaryWriter fragmentWriter = writer as IXmlFragmentCapableXmlDictionaryWriter;  \nif (fragmentWriter == null || !fragmentWriter.CanFragment)  \n{  \nConsole.WriteLine(\"This writer doesn't support fragments\");  \nreturn;  \n}  \nwriter.WriteStartElement(\"Root\");  \nfragmentWriter.StartFragment(fragmentStream, false);  \nwriter.WriteStartElement(\"Body\");  \nwriter.WriteString(\"This is my body\");  \nwriter.WriteEndElement();  \nfragmentWriter.EndFragment();  \nwriter.WriteStartElement(\"CharsInTheBody\");  \nwriter.WriteValue(fragmentStream.Length);  \nwriter.WriteEndElement();  \nfragmentWriter.WriteFragment(fragmentStream.GetBuffer(), 0, (int)fragmentStream.Length);  \nwriter.WriteEndElement(); // Root  \n```"
  syntax:
    content: public void WriteFragment (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer om naar te schrijven."
    - id: offset
      type: System.Int32
      description: "De beginpositie van waaruit schrijven in `buffer`."
    - id: count
      type: System.Int32
      description: "Het aantal bytes dat moet worden geschreven naar de `buffer`."
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: CanFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: EndFragment()
  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment()
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment()
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: StartFragment(Stream,Boolean)
  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: WriteFragment(Byte[],Int32,Int32)
  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: CanFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: EndFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: StartFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: WriteFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment
