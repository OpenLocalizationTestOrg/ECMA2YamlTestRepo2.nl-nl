### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IChannelListener
  id: IChannelListener
  children:
  - System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.IChannelListener.GetProperty``1
  - System.ServiceModel.Channels.IChannelListener.Uri
  - System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  langs:
  - csharp
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
  type: Interface
  summary: "Hiermee definieert u de interface die moet worden ge√Ømplementeerd door een kanaal-listener kanalen accepteren."
  remarks: "De interface IChannelListener vertegenwoordigt de basis-interface voor kanaal listeners.       Kanaal listeners en hun bijbehorende kanalen worden meestal gebruikt door services die communicatie gestart door clients ontvangen. Kanaal-factory&quot;s die implementeert de <xref:System.ServiceModel.Channels.IChannelFactory>interface, bieden daarentegen de mechanismen die wordt gebruikt voor het maken van de kanalen waarmee de communicatie met een service wordt gestart.</xref:System.ServiceModel.Channels.IChannelFactory>"
  syntax:
    content: 'public interface IChannelListener : System.ServiceModel.ICommunicationObject'
  implements:
  - System.ServiceModel.ICommunicationObject
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Een asynchrone bewerking moet worden gewacht voor een kanaal moet worden uitgevoerd die moet worden uitgevoerd binnen een opgegeven tijdsinterval begint."
  syntax:
    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>die aangeeft hoe lang de wachttijd voor het uitvoeren van een kanaal is voltooid voordat een time-out optreedt.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "De <xref:System.AsyncCallback>gemachtigde die de melding van de asynchrone voltooiing van de wachttijd voor het uitvoeren van een kanaal ontvangt.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Een object dat is opgegeven door de toepassing die informatie over de status die is gekoppeld aan de asynchrone wachttijd voor het uitvoeren van een kanaal bevat."
    return:
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>dat verwijst naar de asynchrone wachttijd voor het uitvoeren van een kanaal.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  id: EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Een asynchrone bewerking moet worden gewacht op kanalen aankomen voltooit."
  syntax:
    content: public bool EndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd door een aanroep van de methode EndWaitForChannel.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u een bericht is aangekomen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: GetProperty()
  nameWithType: IChannelListener.GetProperty()
  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public T GetProperty<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "Moet worden toegevoegd."
  overload: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.Uri
  id: Uri
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: Uri
  nameWithType: IChannelListener.Uri
  fullName: System.ServiceModel.Channels.IChannelListener.Uri
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hiermee haalt u de URI op die de-listeners die worden gegenereerd door de factory luistert."
  remarks: "Deze URI vertegenwoordigt het transportadres waarop de <xref:System.ServiceModel.Channels.IChannelListener>naar berichten luistert.</xref:System.ServiceModel.Channels.IChannelListener>"
  syntax:
    content: public Uri Uri { get; }
    return:
      type: System.Uri
      description: "De <xref:System.Uri>op die de-listeners die worden gegenereerd door de factory luisteren.</xref:System.Uri>"
  overload: System.ServiceModel.Channels.IChannelListener.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  id: WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: WaitForChannel(TimeSpan)
  nameWithType: IChannelListener.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Er wordt gewacht op een kanaal moet worden uitgevoerd."
  syntax:
    content: public bool WaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>die aangeeft hoe lang de wachttijd voor het uitvoeren van een kanaal is voltooid voordat een time-out optreedt.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een kanaal is aangekomen voordat de tijdsinterval die is opgegeven door de <code> timeout </code>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IChannelListener.WaitForChannel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: GetProperty()
  nameWithType: IChannelListener.GetProperty()
  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.IChannelListener.Uri
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: Uri
  nameWithType: IChannelListener.Uri
  fullName: System.ServiceModel.Channels.IChannelListener.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: WaitForChannel(TimeSpan)
  nameWithType: IChannelListener.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: BeginWaitForChannel
  nameWithType: IChannelListener.BeginWaitForChannel
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: EndWaitForChannel
  nameWithType: IChannelListener.EndWaitForChannel
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: GetProperty<T>
  nameWithType: IChannelListener.GetProperty<T>
- uid: System.ServiceModel.Channels.IChannelListener.Uri*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: Uri
  nameWithType: IChannelListener.Uri
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: WaitForChannel
  nameWithType: IChannelListener.WaitForChannel
