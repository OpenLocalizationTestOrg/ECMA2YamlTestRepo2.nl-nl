### YamlMime:ManagedReference
items:
- uid: System.Configuration.IntegerValidator
  id: IntegerValidator
  children:
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  - System.Configuration.IntegerValidator.CanValidate(System.Type)
  - System.Configuration.IntegerValidator.Validate(System.Object)
  langs:
  - csharp
  name: IntegerValidator
  nameWithType: IntegerValidator
  fullName: System.Configuration.IntegerValidator
  type: Class
  summary: "Validatie van biedt een <xref:System.Int32>waarde.</xref:System.Int32>"
  remarks: "De klasse IntegerValidator wordt gebruikt om ervoor te zorgen dat een geheel getal aan bepaalde criteria voldoet. De criteria voor validatie worden ingesteld wanneer een exemplaar van de klasse IntegerValidator is gemaakt. De <xref:System.Configuration.IntegerValidator.%23ctor%2A>constructor met twee parameters zorgt ervoor dat het gehele getal wordt geverifieerd in overeenstemming is met zowel een minimale en maximale waarde.</xref:System.Configuration.IntegerValidator.%23ctor%2A> De <xref:System.Configuration.IntegerValidator.%23ctor%2A>constructor met drie parameters controleert de minimum- en de maximum <xref:System.Int32>waarden, en of de waarde moet worden gevalideerd binnen het opgegeven bereik valt.</xref:System.Int32> </xref:System.Configuration.IntegerValidator.%23ctor%2A> De <xref:System.Configuration.IntegerValidator.%23ctor%2A>constructor met vier parameters controleert u de vorige drie parameters en ook controleert of de <xref:System.Int32>waarde gelijk is aan een specifieke oplossingsstatus.</xref:System.Int32> </xref:System.Configuration.IntegerValidator.%23ctor%2A>       De <xref:System.Configuration.IntegerValidator.CanValidate%2A>methode bepaalt of het objecttype wordt gevalideerd overeenkomt met het verwachte type.</xref:System.Configuration.IntegerValidator.CanValidate%2A> Het object dat wordt gevalideerd wordt doorgegeven als een parameter van de <xref:System.Configuration.IntegerValidator.Validate%2A>methode.</xref:System.Configuration.IntegerValidator.Validate%2A>"
  example:
  - "The following code example demonstrates how to use the IntegerValidator type.  \n  \n [!code-vb[System.Configuration.IntegerValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.i_3_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#1](~/add/codesnippet/csharp/t-system.configuration.i_3_1.cs)]"
  syntax:
    content: 'public class IntegerValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> klasse."
  remarks: "Deze constructor IntegerValidator zorgt ervoor dat het gehele getal wordt geverifieerd overeenstemming is met zowel een minimum- en een maximale lengte."
  syntax:
    content: public IntegerValidator (int minValue, int maxValue);
    parameters:
    - id: minValue
      type: System.Int32
      description: "Een <xref:System.Int32>object waarmee de minimumwaarde.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "Een <xref:System.Int32>-object dat de maximale waarde geeft.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Int32,System.Boolean)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> klasse."
  remarks: "Bij het maken van een exemplaar van de <xref:System.Configuration.IntegerValidator>klasse, deze constructor IntegerValidator controleert de minimum- en de maximum <xref:System.Int32>waarden, evenals of het bereik van de validatie exclusieve is.</xref:System.Int32> </xref:System.Configuration.IntegerValidator> Wanneer de `rangeIsExclusive` parameter is ingesteld op `true`, wordt de <xref:System.Int32>moet een waarde tussen de `minValue` en `maxValue` parameterwaarden.</xref:System.Int32>"
  example:
  - "The following code example demonstrates how to use the IntegerValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#2](~/add/codesnippet/visualbasic/39b5b9f2-305e-4ede-8502-_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#2](~/add/codesnippet/csharp/39b5b9f2-305e-4ede-8502-_1.cs)]"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);
    parameters:
    - id: minValue
      type: System.Int32
      description: "Een <xref:System.Int32>object waarmee de minimumwaarde.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "Een <xref:System.Int32>-object dat de maximale waarde geeft.</xref:System.Int32>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om op te geven dat het bereik van de validatie van exclusieve is. Inclusief betekent dat de waarde moet worden gevalideerd moet binnen het opgegeven bereik. exclusieve betekent dat deze minder dan het minimum of boven het maximum moet."
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> klasse."
  remarks: "De <xref:System.Int32>waarde wordt gevalideerd moet gelijk zijn aan de `resolution` waarde om te worden gevalideerd.</xref:System.Int32>"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);
    parameters:
    - id: minValue
      type: System.Int32
      description: "Een <xref:System.Int32>-object dat de minimale lengte van het gehele getal.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "Een <xref:System.Int32>-object dat de maximale lengte van het gehele getal geeft.</xref:System.Int32>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "Een <xref:System.Boolean>waarde die aangeeft of het bereik van de validatie van exclusieve.</xref:System.Boolean>"
    - id: resolution
      type: System.Int32
      description: "Een <xref:System.Int32>-object dat een waarde die moet overeenkomen.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>resolution</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>minValue</code> is greater than <code>maxValue</code>."
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt bepaald of het type van het object kan worden gevalideerd."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.i_1_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#3](~/add/codesnippet/csharp/m-system.configuration.i_1_1.cs)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Het type van het object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <code> type </code> parameter overeenkomt met een <xref:System.Int32>waarde; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt bepaald of de waarde van een object geldig is."
  remarks: "Een <xref:System.Configuration.IntegerValidator>object bevat de regels die nodig zijn voor het valideren van een geheel getal-object.</xref:System.Configuration.IntegerValidator> De regels worden tot stand gebracht wanneer een exemplaar van de <xref:System.Configuration.IntegerValidator>klasse wordt gemaakt.</xref:System.Configuration.IntegerValidator> Het geheel getal-object om te valideren is doorgegeven als een parameter van de methode Validate."
  example:
  - "The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.i_6_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#4](~/add/codesnippet/csharp/m-system.configuration.i_6_1.cs)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "De waarde moet worden gevalideerd."
  overload: System.Configuration.IntegerValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.IntegerValidator.#ctor*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator
  nameWithType: IntegerValidator.IntegerValidator
- uid: System.Configuration.IntegerValidator.CanValidate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate
  nameWithType: IntegerValidator.CanValidate
- uid: System.Configuration.IntegerValidator.Validate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate
  nameWithType: IntegerValidator.Validate
