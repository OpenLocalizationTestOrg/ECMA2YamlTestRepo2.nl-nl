### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationElementCollection
  id: ConfigurationElementCollection
  children:
  - System.Configuration.ConfigurationElementCollection.#ctor
  - System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  - System.Configuration.ConfigurationElementCollection.AddElementName
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseClear
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  - System.Configuration.ConfigurationElementCollection.ClearElementName
  - System.Configuration.ConfigurationElementCollection.CollectionType
  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  - System.Configuration.ConfigurationElementCollection.Count
  - System.Configuration.ConfigurationElementCollection.CreateNewElement
  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  - System.Configuration.ConfigurationElementCollection.ElementName
  - System.Configuration.ConfigurationElementCollection.EmitClear
  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  - System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.GetEnumerator
  - System.Configuration.ConfigurationElementCollection.GetHashCode
  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.IsModified
  - System.Configuration.ConfigurationElementCollection.IsReadOnly
  - System.Configuration.ConfigurationElementCollection.IsSynchronized
  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElementCollection.RemoveElementName
  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.ResetModified
  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.SetReadOnly
  - System.Configuration.ConfigurationElementCollection.SyncRoot
  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  langs:
  - csharp
  name: ConfigurationElementCollection
  nameWithType: ConfigurationElementCollection
  fullName: System.Configuration.ConfigurationElementCollection
  type: Class
  summary: "Hiermee geeft u een configuratie-element met een verzameling van onderliggende elementen."
  remarks: "De ConfigurationElementCollection vertegenwoordigt een verzameling van elementen in een configuratiebestand.      > [!NOTE] > Een element in een configuratiebestand verwijst naar een basic XML-element of een sectie. Een eenvoudige element is een XML-code met gerelateerde kenmerken, indien van toepassing. Een eenvoudige element vormt een sectie. Complexe secties kunnen een of meer elementen van eenvoudige, een verzameling van elementen en andere secties bevatten.       U de ConfigurationElementCollection gebruiken om te werken met een verzameling van <xref:System.Configuration.ConfigurationElement>objecten.</xref:System.Configuration.ConfigurationElement> Deze klasse om toe te voegen verzamelingen van aangepaste <xref:System.Configuration.ConfigurationElement>elementen naar een <xref:System.Configuration.ConfigurationSection>.</xref:System.Configuration.ConfigurationSection> </xref:System.Configuration.ConfigurationElement> implementeren"
  example:
  - "The following example shows how to use the ConfigurationElementCollection.  \n  \n The first example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the <xref:System.Configuration.ConfigurationCollectionAttribute> to define a custom configuration section. This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class).  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#1](~/add/codesnippet/visualbasic/t-system.configuration.c_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#1](~/add/codesnippet/csharp/t-system.configuration.c_14_1.cs)]  \n  \n This second code example uses the classes specified before. You combine these two examples in a console application project.  \n  \n [!code-cs[System.Configuration.ConfigurationElementCollection#31](~/add/codesnippet/csharp/t-system.configuration.c_14_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElementCollection#31](~/add/codesnippet/visualbasic/t-system.configuration.c_14_2.vb)]  \n  \n When you run the console application, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:  \n  \n```  \n<configuration>  \n    <configSections>  \n        <section name=\"MyUrls\" type=\"UrlsSection,   \n          ConfigurationElementCollection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </configSections>  \n    <MyUrls>  \n        <urls>  \n           <add name=\"Contoso\" url=\"http://www.contoso.com\" port=\"4040 />  \n        </urls>  \n    </MyUrls>  \n</configuration  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      public abstract class ConfigurationElementCollection : System.Configuration.ConfigurationElement, System.Collections.ICollection
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ConfigurationElementCollection()
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection()
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> klasse."
  remarks: "U maakt een nieuw exemplaar van het <xref:System.Configuration.ConfigurationElementCollection>wanneer uw toepassing moet een aangepaste <xref:System.Configuration.ConfigurationElementCollection>.</xref:System.Configuration.ConfigurationElementCollection> maken</xref:System.Configuration.ConfigurationElementCollection>"
  syntax:
    content: protected ConfigurationElementCollection ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  id: '#ctor(System.Collections.IComparer)'
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ConfigurationElementCollection(IComparer)
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Maakt een nieuw exemplaar van de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> klasse."
  remarks: "De <xref:System.Collections.IComparer>wordt gebruikt voor het instellen van een vergelijkingsfunctie te gebruiken.</xref:System.Collections.IComparer> U kunt bijvoorbeeld een niet-hoofdlettergevoelige vergelijkingsfunctie gebruiken om de sleutel niet hoofdlettergevoelig."
  syntax:
    content: protected ConfigurationElementCollection (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "De <xref:System.Collections.IComparer>vergelijkingsfunctie te gebruiken.</xref:System.Collections.IComparer>"
  overload: System.Configuration.ConfigurationElementCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comparer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.AddElementName
  id: AddElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
  fullName: System.Configuration.ConfigurationElementCollection.AddElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van de naam van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> om te koppelen aan de add-bewerking in de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> wanneer overschreven in een afgeleide klasse."
  syntax:
    content: protected string AddElementName { get; set; }
    return:
      type: System.String
      description: "De naam van het element."
  overload: System.Configuration.ConfigurationElementCollection.AddElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De geselecteerde waarde begint met het gereserveerde voorvoegsel &quot;config&quot; of &quot;vergrendelen&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  id: BaseAdd(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Voegt een configuratie-element op de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  remarks: "Gebruik de methode BaseAdd om het toevoegen van een nieuwe <xref:System.Configuration.ConfigurationElement>aan de verzameling.</xref:System.Configuration.ConfigurationElement> Als u aangepaste gedrag is vereist wanneer het element wordt toegevoegd, moet u deze overschrijven in een afgeleide klasse.       Wanneer u toevoegt, een element wordt beschouwd als een duplicaat als de sleutels identiek zijn, maar de waarden verschillend zijn. Elementen met identieke sleutels en waarden worden achtergrond geaccepteerd omdat de elementen niet van invloed. Echter, een element met een identieke sleutel, maar een andere waarde kan niet worden toegevoegd omdat er geen logica om te bepalen welke concurrerende waarden moeten worden gehonoreerd."
  example:
  - "The following code example shows how to override the BaseAdd method and how to call it from an `Add` method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#2](~/add/codesnippet/visualbasic/158cf871-201b-4f7d-bc42-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#2](~/add/codesnippet/csharp/158cf871-201b-4f7d-bc42-_1.cs)]"
  syntax:
    content: protected virtual void BaseAdd (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  id: BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(ConfigurationElement,Boolean)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee voegt u een configuratie-element toe aan de verzameling configuratie-element."
  remarks: "Gebruik de optionele parameter `throwIfExists` op dat moet optreden een <xref:System.Exception>uitzondering als de opgegeven <xref:System.Configuration.ConfigurationElement>object bestaat al in de <xref:System.Configuration.ConfigurationElementCollection>verzameling.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement> </xref:System.Exception>       Een element wordt beschouwd als duplicaat alleen als de sleutels identiek zijn, maar de waarden verschillend zijn. Elementen met identieke sleutels en waarden worden achtergrond geaccepteerd omdat de elementen niet van invloed. Echter, een element met een identieke sleutel, maar een andere waarde kan niet worden toegevoegd omdat er geen logica om te bepalen welke concurrerende waarden moeten worden gehonoreerd."
  syntax:
    content: protected void BaseAdd (System.Configuration.ConfigurationElement element, bool throwIfExists);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
    - id: throwIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor een uitzondering te genereren als de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> opgegeven is al opgenomen de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "De <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> toevoegen al bestaat in de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> en de <code> throwIfExists </code> parameter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  id: BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(Int32,ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee voegt u een configuratie-element toe aan de verzameling configuratie-element."
  remarks: "Gebruik de `index` parameter toevoegen de <xref:System.Configuration.ConfigurationElement>object toe aan de <xref:System.Configuration.ConfigurationElementCollection>op de locatie van een specifieke index.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual void BaseAdd (int index, System.Configuration.ConfigurationElement element);
    parameters:
    - id: index
      type: System.Int32
      description: "De locatie waarop u wilt toevoegen, de opgegeven in de index <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseClear
  id: BaseClear
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseClear()
  nameWithType: ConfigurationElementCollection.BaseClear()
  fullName: System.Configuration.ConfigurationElementCollection.BaseClear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee verwijdert u alle objecten van de configuratie-element uit de verzameling."
  remarks: "Als de BaseClear-methode wordt aangeroepen, verwijdert alle <xref:System.Configuration.ConfigurationElement>objecten uit de verzameling.</xref:System.Configuration.ConfigurationElement> Voegt ook een `clear` richtlijn in het configuratiebestand."
  example:
  - "The following code example shows how to call the BaseClear method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/visualbasic/m-system.configuration.c_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/csharp/m-system.configuration.c_3_1.cs)]"
  syntax:
    content: protected void BaseClear ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.BaseClear*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration is read-only.  \n  \n \\- or -  \n  \n A collection item has been locked in a higher-level configuration."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGet(Int32)
  nameWithType: ConfigurationElementCollection.BaseGet(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee haalt u het configuratie-element op de locatie van de opgegeven index."
  remarks: ''
  example:
  - "The following code example shows how to call the BaseGet method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#8](~/add/codesnippet/visualbasic/m-system.configuration.c_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#8](~/add/codesnippet/csharp/m-system.configuration.c_6_1.cs)]"
  syntax:
    content: protected System.Configuration.ConfigurationElement BaseGet (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De indexlocatie van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> om terug te keren."
    return:
      type: System.Configuration.ConfigurationElement
      description: "De <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> bij de opgegeven index."
  overload: System.Configuration.ConfigurationElementCollection.BaseGet*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n There is no <xref href=\"System.Configuration.ConfigurationElement\"></xref> at the specified <code>index</code>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  id: BaseGet(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGet(Object)
  nameWithType: ConfigurationElementCollection.BaseGet(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Retourneert het configuratie-element met de opgegeven sleutel."
  remarks: "De methode BaseGet retourneert `null` als er geen <xref:System.Configuration.ConfigurationElement>object met de opgegeven sleutel in de verzameling.</xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following code example shows how to call the BaseGet method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#9](~/add/codesnippet/visualbasic/m-system.configuration.c_31_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#9](~/add/codesnippet/csharp/m-system.configuration.c_31_1.cs)]"
  syntax:
    content: protected System.Configuration.ConfigurationElement BaseGet (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element om terug te keren."
    return:
      type: System.Configuration.ConfigurationElement
      description: "De <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> met de opgegeven sleutel, anders wordt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseGet*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGetAllKeys()
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys()
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Retourneert een matrix van de sleutels voor alle configuratie-elementen die zijn opgenomen de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  syntax:
    content: protected object[] BaseGetAllKeys ();
    parameters: []
    return:
      type: System.Object[]
      description: "Een matrix met de sleutels voor alle van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objecten in de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGetKey(Int32)
  nameWithType: ConfigurationElementCollection.BaseGetKey(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetKey(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Opgehaald van de sleutel voor de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> op de locatie van de opgegeven index."
  syntax:
    content: protected object BaseGetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De indexlocatie voor de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
    return:
      type: System.Object
      description: "De sleutel voor de opgegeven <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseGetKey*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n There is no <xref href=\"System.Configuration.ConfigurationElement\"></xref> at the specified <code>index</code>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  id: BaseIndexOf(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseIndexOf(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Geeft de index van de opgegeven <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example shows how to call the BaseIndexOf method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#10](~/add/codesnippet/visualbasic/15cdbd2f-44ec-4b04-ad90-_1.vb)]"
  syntax:
    content: protected int BaseIndexOf (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "De <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> voor de locatie van de opgegeven index."
    return:
      type: System.Int32
      description: "De index van de opgegeven <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>; anders wordt -1."
  overload: System.Configuration.ConfigurationElementCollection.BaseIndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  id: BaseIsRemoved(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseIsRemoved(Object)
  nameWithType: ConfigurationElementCollection.BaseIsRemoved(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt aangegeven of de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> met de opgegeven sleutel is verwijderd uit de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  syntax:
    content: protected bool BaseIsRemoved (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element om te controleren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> met de opgegeven sleutel is verwijderd, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseIsRemoved*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  id: BaseRemove(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseRemove(Object)
  nameWithType: ConfigurationElementCollection.BaseRemove(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemove(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee verwijdert u een <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> uit de verzameling."
  remarks: "De methode BaseRemove voegt een `<remove>` richtlijn in het configuratiebestand voor de <xref:System.Configuration.ConfigurationElement>met de opgegeven sleutel.</xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following code example shows how to call the BaseRemove method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/visualbasic/m-system.configuration.c_35_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/csharp/m-system.configuration.c_35_1.cs)]"
  syntax:
    content: protected void BaseRemove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> te verwijderen."
  overload: System.Configuration.ConfigurationElementCollection.BaseRemove*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Geen <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> met de opgegeven sleutel bestaat in de verzameling, het element al is verwijderd of het element kan niet worden verwijderd omdat de waarde van de <xref:System.Configuration.ConfigurationProperty.Type*>is niet <xref href=&quot;System.Configuration.ConfigurationElementCollectionType&quot;> </xref>.</xref:System.Configuration.ConfigurationProperty.Type*>"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseRemoveAt(Int32)
  nameWithType: ConfigurationElementCollection.BaseRemoveAt(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> op de locatie van de opgegeven index."
  remarks: "De methode BaseRemoveAt voegt een `<remove>` richtlijn in het configuratiebestand voor het element op de locatie van de opgegeven index."
  syntax:
    content: protected void BaseRemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De indexlocatie van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> te verwijderen."
  overload: System.Configuration.ConfigurationElementCollection.BaseRemoveAt*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration is read-only.  \n  \n \\- or -  \n  \n <code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the number of <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects in the collection.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationElement\"></xref> object has already been removed.  \n  \n \\- or -  \n  \n The value of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object has been locked at a higher level.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationElement\"></xref> object was inherited.  \n  \n \\- or -  \n  \n The value of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object's <xref:System.Configuration.ConfigurationProperty.Type*> is not <xref href=\"System.Configuration.ConfigurationElementCollectionType\"></xref> or <xref href=\"System.Configuration.ConfigurationElementCollectionType\"></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName
  id: ClearElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
  fullName: System.Configuration.ConfigurationElementCollection.ClearElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van de naam voor de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> om te koppelen aan de bewerking clear in de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> wanneer overschreven in een afgeleide klasse."
  syntax:
    content: protected string ClearElementName { get; set; }
    return:
      type: System.String
      description: "De naam van het element."
  overload: System.Configuration.ConfigurationElementCollection.ClearElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De geselecteerde waarde begint met het gereserveerde voorvoegsel &quot;config&quot; of &quot;vergrendelen&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CollectionType
  id: CollectionType
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
  fullName: System.Configuration.ConfigurationElementCollection.CollectionType
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt het type van de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  remarks: "Het type is een <xref:System.Configuration.ConfigurationElementCollectionType>of een <xref:System.Configuration.ConfigurationElementCollectionType>veld.</xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollectionType> Zie voor meer informatie <xref:System.Configuration.ConfigurationElementCollectionType>.</xref:System.Configuration.ConfigurationElementCollectionType>"
  example:
  - "The following code example shows how to get the CollectionType property.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#5](~/add/codesnippet/visualbasic/p-system.configuration.c_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#5](~/add/codesnippet/csharp/p-system.configuration.c_6_1.cs)]"
  syntax:
    content: public virtual System.Configuration.ConfigurationElementCollectionType CollectionType { get; }
    return:
      type: System.Configuration.ConfigurationElementCollectionType
      description: "De <xref href=&quot;System.Configuration.ConfigurationElementCollectionType&quot;> </xref> van deze verzameling."
  overload: System.Configuration.ConfigurationElementCollection.CollectionType*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  id: CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CopyTo(ConfigurationElement[],Int32)
  nameWithType: ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  fullName: System.Configuration.ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Kopieert de inhoud van de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> om in een matrix."
  syntax:
    content: public void CopyTo (System.Configuration.ConfigurationElement[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.ConfigurationElement[]
      description: "De matrix waarnaar u wilt kopiëren van de inhoud van de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "De locatie van de index waarop u wilt beginnen met het kopiëren."
  overload: System.Configuration.ConfigurationElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Count
  id: Count
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: ConfigurationElementCollection.Count
  fullName: System.Configuration.ConfigurationElementCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee haalt het aantal elementen in de verzameling."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal elementen in de verzameling."
  overload: System.Configuration.ConfigurationElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement
  id: CreateNewElement
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CreateNewElement()
  nameWithType: ConfigurationElementCollection.CreateNewElement()
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Wanneer in een afgeleide klasse genegeerd, maakt u een nieuwe <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  remarks: "Negeer de methode CreateNewElement maken van aangepaste <xref:System.Configuration.ConfigurationElement>objecten van een bepaald type.</xref:System.Configuration.ConfigurationElement> Wanneer een verzameling uit het configuratiebestand wordt geladen, wordt voor het maken van afzonderlijke elementen CreateNewElement genoemd. CreateNewElement moet worden overschreven in klassen die zijn afgeleid van de <xref:System.Configuration.ConfigurationElementCollection>klasse.</xref:System.Configuration.ConfigurationElementCollection>"
  example:
  - "The following code example shows how to override the CreateNewElement method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#6](~/add/codesnippet/visualbasic/m-system.configuration.c_38_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#6](~/add/codesnippet/csharp/m-system.configuration.c_38_1.cs)]"
  syntax:
    content: protected abstract System.Configuration.ConfigurationElement CreateNewElement ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationElement
      description: "Een nieuw gemaakte <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  id: CreateNewElement(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CreateNewElement(String)
  nameWithType: ConfigurationElementCollection.CreateNewElement(String)
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Maakt een nieuw <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> wanneer overschreven in een afgeleide klasse."
  remarks: "Negeer de methode CreateNewElement maken van aangepaste <xref:System.Configuration.ConfigurationElement>objecten van een bepaald type.</xref:System.Configuration.ConfigurationElement> Wanneer een verzameling uit het configuratiebestand wordt geladen, wordt voor het maken van afzonderlijke elementen CreateNewElement genoemd. CreateNewElement moet worden overschreven in klassen die zijn afgeleid van de <xref:System.Configuration.ConfigurationElementCollection>klasse.</xref:System.Configuration.ConfigurationElementCollection>"
  syntax:
    content: protected virtual System.Configuration.ConfigurationElement CreateNewElement (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> maken."
    return:
      type: System.Configuration.ConfigurationElement
      description: "Een nieuwe <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> met een opgegeven naam."
  overload: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ElementName
  id: ElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
  fullName: System.Configuration.ConfigurationElementCollection.ElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee haalt u de naam die wordt gebruikt voor het identificeren van deze verzameling van elementen in het configuratiebestand wanneer overschreven in een afgeleide klasse."
  remarks: "De eigenschap ElementName naam van een aangepaste <xref:System.Configuration.ConfigurationElementCollection>.</xref:System.Configuration.ConfigurationElementCollection> negeren"
  syntax:
    content: protected virtual string ElementName { get; }
    return:
      type: System.String
      description: "De naam van de collectie. anders wordt een lege tekenreeks. De standaardwaarde is een lege tekenreeks."
  overload: System.Configuration.ConfigurationElementCollection.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.EmitClear
  id: EmitClear
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
  fullName: System.Configuration.ConfigurationElementCollection.EmitClear
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de verzameling is gewist."
  remarks: "De eigenschap EmitClear `true` zorgt ervoor dat een `<clear>` richtlijn voor het configuratiebestand worden geschreven wanneer de verzameling is geserialiseerd."
  syntax:
    content: public bool EmitClear { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verzameling is gewist; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.EmitClear*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "De configuratie is alleen-lezen."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConfigurationElementCollection.Equals(Object)
  fullName: System.Configuration.ConfigurationElementCollection.Equals(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Vergelijkt de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> aan het opgegeven object."
  syntax:
    content: public override bool Equals (object compareTo);
    parameters:
    - id: compareTo
      type: System.Object
      description: "Het object te vergelijken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het object moet worden vergeleken met gelijk aan de huidige is <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> exemplaar; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  id: GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetElementKey(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee haalt u de elementsleutel voor een opgegeven configuratie-element als overschreven in een afgeleide klasse."
  remarks: ''
  example:
  - "The following code example shows how to override GetElementKey method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#7](~/add/codesnippet/visualbasic/85b3e1dd-d2ae-4572-b7ba-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#7](~/add/codesnippet/csharp/85b3e1dd-d2ae-4572-b7ba-_1.cs)]"
  syntax:
    content: protected abstract object GetElementKey (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "De <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> te retourneren van de sleutel voor."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die fungeert als de sleutel voor de opgegeven <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>.</xref:System.Object>"
  overload: System.Configuration.ConfigurationElementCollection.GetElementKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ConfigurationElementCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt een <xref:System.Collections.IEnumerator>waarmee u doorloopt de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een <xref:System.Collections.IEnumerator>waarmee u doorloopt de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.ConfigurationElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode
  id: GetHashCode
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConfigurationElementCollection.GetHashCode()
  fullName: System.Configuration.ConfigurationElementCollection.GetHashCode()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt een unieke waarde die de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> exemplaar."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een unieke waarde die de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> huidige exemplaar."
  overload: System.Configuration.ConfigurationElementCollection.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  id: IsElementName(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsElementName(String)
  nameWithType: ConfigurationElementCollection.IsElementName(String)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementName(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt aangegeven of de opgegeven <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> bestaat in de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  remarks: "Negeer de methode IsElementName aangepaste gedrag."
  syntax:
    content: protected virtual bool IsElementName (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "De naam van het element om te controleren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element in de verzameling bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.IsElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  id: IsElementRemovable(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsElementRemovable(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt aangegeven of de opgegeven <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> kan worden verwijderd uit de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  remarks: "Query IsElementRemovable voordat u een verzamelingselement verwijdert."
  syntax:
    content: protected virtual bool IsElementRemovable (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "Het element om te controleren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> kan worden verwijderd uit dit <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.IsElementRemovable*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsModified
  id: IsModified
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsModified()
  nameWithType: ConfigurationElementCollection.IsModified()
  fullName: System.Configuration.ConfigurationElementCollection.IsModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt aangegeven of dit <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> zijn gewijzigd sinds de laatste is opgeslagen of geladen wanneer overschreven in een afgeleide klasse."
  remarks: "Als de <xref:System.Configuration.ConfigurationElement.IsModified%2A>methode van een <xref:System.Configuration.ConfigurationElement>die zich in een <xref:System.Configuration.ConfigurationElementCollection>retourneert `true`, de methode voor is gewijzigd van de volledige verzameling retourneert `true` evenals.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationElement.IsModified%2A>"
  syntax:
    content: protected override bool IsModified ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een ingesloten element is gewijzigd; anders<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Configuration.ConfigurationElementCollection.IsModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsReadOnly()
  nameWithType: ConfigurationElementCollection.IsReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.IsReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee wordt aangegeven of de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> object is alleen-lezen."
  remarks: "Het systeem definieert configuratie-elementen kunnen niet worden gewijzigd. Roep deze methode om te bepalen of elementen kunnen worden gewijzigd."
  syntax:
    content: public override bool IsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> object wordt gelezen alleen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationElementCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt een waarde die aangeeft of de toegang tot de verzameling wordt gesynchroniseerd."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de toegang tot de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> is gesynchroniseerd, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  id: OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Het configuratiesysteem is een uitzondering veroorzaakt."
  remarks: "De OnDeserializeUnrecognizedElement wordt aangeroepen wanneer een niet-herkende configuratie-element is gelezen uit een configuratiebestand.       Deze methode om aangepaste verwerking van niet-herkende configuratie-elementen uit een configuratiebestand overschrijven. De standaardwaarde retourwaarde `false`, het configuratiesysteem is een uitzondering veroorzaakt."
  syntax:
    content: protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);
    parameters:
    - id: elementName
      type: System.String
      description: "De naam van het element wordt niet herkend."
    - id: reader
      type: System.Xml.XmlReader
      description: "Een invoerstroom dat XML kan uit het configuratiebestand lezen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het niet-herkend element is met succes; gedeserialiseerd anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Het opgegeven element in <code> elementName </code> is de <xref uid=&quot;langword_csharp_&lt;clear&gt;&quot; name=&quot;&lt;clear&gt;&quot; href=&quot;&quot;> </xref> element."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elementName</code>begint met het gereserveerde voorvoegsel &quot;config&quot; of &quot;vergrendelen&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName
  id: RemoveElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
  fullName: System.Configuration.ConfigurationElementCollection.RemoveElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van de naam van de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> om te koppelen aan de verwijderbewerking in de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> wanneer overschreven in een afgeleide klasse."
  syntax:
    content: protected string RemoveElementName { get; set; }
    return:
      type: System.String
      description: "De naam van het element."
  overload: System.Configuration.ConfigurationElementCollection.RemoveElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De geselecteerde waarde begint met het gereserveerde voorvoegsel &quot;config&quot; of &quot;vergrendelen&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee stelt u de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> in de ongewijzigde staat wanneer overschreven in een afgeleide klasse."
  remarks: "Het standaardgedrag voor de methode voor opnieuw instellen is het wissen van alle gewijzigde elementen een <xref:System.Configuration.ConfigurationElementCollection>object bevat en om de gewijzigde elementen de waarden die is opgegeven door hun bovenliggend configuratiebestand.</xref:System.Configuration.ConfigurationElementCollection> Als elk willekeurig element in de <xref:System.Configuration.ConfigurationElementCollection>onderliggende elementen heeft, opnieuw instellen wordt ook aangeroepen voor deze onderliggende elementen.</xref:System.Configuration.ConfigurationElementCollection>"
  syntax:
    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "De <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> voor het element van de bovenliggende verzameling eventuele; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ResetModified
  id: ResetModified
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ResetModified()
  nameWithType: ConfigurationElementCollection.ResetModified()
  fullName: System.Configuration.ConfigurationElementCollection.ResetModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hiermee stelt u de waarde van de <xref:System.Configuration.ConfigurationElementCollection.IsModified*>eigenschap <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wanneer overschreven in een afgeleide klasse.</xref:System.Configuration.ConfigurationElementCollection.IsModified*>"
  remarks: "De methode ResetModified bepaalt of de onderdelen van deze verzameling wordt geschreven naar het configuratiebestand wanneer de configuratie is bijgewerkt."
  syntax:
    content: protected override void ResetModified ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.ResetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  id: SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Schrijft de configuratiegegevens in een XML-element in het configuratiebestand wanneer overschreven in een afgeleide klasse."
  remarks: "De methode SerializeElement schrijft de inhoud van de configuratie-elementen in de verzameling en alle geneste elementen die ze bevatten naar het configuratiebestand. Overschrijven SerializeElement om op te geven van een aangepaste schrijven procedure buiten de inhoud van de verzameling en geneste elementen."
  syntax:
    content: protected override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "De uitvoerstroom die XML naar het configuratiebestand schrijft."
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het serialiseren van de verzamelingssleutel uit. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> is weggeschreven naar het configuratiebestand."
  overload: System.Configuration.ConfigurationElementCollection.SerializeElement*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een van de elementen in de verzameling is toegevoegd of vervangen en begint met het gereserveerde voorvoegsel &quot;config&quot; of &quot;vergrendelen&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ConfigurationElementCollection.SetReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Stelt de <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly*>eigenschap voor de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> object en alle onderliggende elementen.</xref:System.Configuration.ConfigurationElementCollection.IsReadOnly*>"
  remarks: "Deze methode wordt intern gebruikt om deze configuratie-elementen voor systeem kunnen niet worden gewijzigd. Aanroepen om te bepalen welke elementen kunnen worden gewijzigd, de <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A>methode.</xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A>"
  syntax:
    content: protected override void SetReadOnly ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
  fullName: System.Configuration.ConfigurationElementCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt een object dat wordt gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Een object dat wordt gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Kopieert de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> om in een matrix."
  syntax:
    content: void ICollection.CopyTo (Array arr, int index);
    parameters:
    - id: arr
      type: System.Array
      description: "De matrix waarnaar u wilt dit kopiëren <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "De locatie van de index waarop u wilt beginnen met het kopiëren."
  overload: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  id: ThrowOnDuplicate
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
  fullName: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Haalt een waarde die aangeeft of een poging tot het toevoegen van een duplicaat <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> naar de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> er zich een uitzondering gegenereerd."
  remarks: "Wanneer u een dubbel element toevoegt, wordt een uitzondering gegenereerd als de <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>waarde van het element is <xref:System.Configuration.ConfigurationElementCollectionType>of <xref:System.Configuration.ConfigurationElementCollectionType>.</xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>       Houd er rekening mee dat elementen met identieke sleutels en waarden worden niet beschouwd als duplicaten en achtergrond worden geaccepteerd. Alleen elementen met identieke sleutels maar verschillende waarden worden beschouwd als duplicaten. Zie voor meer informatie de sectie met opmerkingen voor de <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>methode.</xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>"
  syntax:
    content: protected virtual bool ThrowOnDuplicate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een poging tot het toevoegen van een duplicaat <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> aan dit <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> er zich een uitzondering worden gegenereerd, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Het effect van de samenvoeging van configuratie-informatie uit verschillende niveaus van de configuratiehiërarchie wordt teruggedraaid"
  remarks: "De methode samenvoeging keert het effect van de samenvoeging van configuratie-informatie uit verschillende niveaus van de configuratiehiërarchie. Hiermee kunt op het huidige hiërarchieniveau om te worden onderscheiden van die set op bovenliggende niveaus, voordat de serialisatie-configuratie instellen.       Samenvoeging wordt aangeroepen door het systeem op een nieuwe tijdelijke element om het bovenliggende object en het bronobject te vergelijken. Op basis van de <xref:System.Configuration.ConfigurationSaveMode>waarde, vervolgens wordt het tijdelijke object bevat de gegevens die moeten worden geserialiseerd.</xref:System.Configuration.ConfigurationSaveMode> Zie voor meer informatie over opslagmethoden <xref:System.Configuration.ConfigurationSaveMode>.</xref:System.Configuration.ConfigurationSaveMode>"
  syntax:
    content: protected override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: sourceElement
      type: System.Configuration.ConfigurationElement
      description: "Een <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object op het huidige niveau met een samengevoegde weergave van de eigenschappen."
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "De bovenliggende <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> object van het huidige element of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als dit het hoogste niveau."
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "Een <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref> opgesomd waarde die welke eigenschap waarden bepaalt wilt opnemen."
  overload: System.Configuration.ConfigurationElementCollection.Unmerge*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ConfigurationElementCollection.#ctor
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection()
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection()
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection()
- uid: System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection(IComparer)
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Configuration.ConfigurationElementCollection.AddElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
  fullName: System.Configuration.ConfigurationElementCollection.AddElementName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(ConfigurationElement,Boolean)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(Int32,ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationElementCollection.BaseClear
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseClear()
  nameWithType: ConfigurationElementCollection.BaseClear()
  fullName: System.Configuration.ConfigurationElementCollection.BaseClear()
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet(Int32)
  nameWithType: ConfigurationElementCollection.BaseGet(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Int32)
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet(Object)
  nameWithType: ConfigurationElementCollection.BaseGet(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetAllKeys()
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys()
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetKey(Int32)
  nameWithType: ConfigurationElementCollection.BaseGetKey(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetKey(Int32)
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIndexOf(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIsRemoved(Object)
  nameWithType: ConfigurationElementCollection.BaseIsRemoved(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(Object)
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemove(Object)
  nameWithType: ConfigurationElementCollection.BaseRemove(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemove(Object)
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemoveAt(Int32)
  nameWithType: ConfigurationElementCollection.BaseRemoveAt(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(Int32)
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
  fullName: System.Configuration.ConfigurationElementCollection.ClearElementName
- uid: System.Configuration.ConfigurationElementCollection.CollectionType
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
  fullName: System.Configuration.ConfigurationElementCollection.CollectionType
- uid: System.Configuration.ConfigurationElementCollectionType
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementCollectionType
  nameWithType: ConfigurationElementCollectionType
  fullName: System.Configuration.ConfigurationElementCollectionType
- uid: System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CopyTo(ConfigurationElement[],Int32)
  nameWithType: ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  fullName: System.Configuration.ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
- uid: System.Configuration.ConfigurationElement[]
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement[]
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: ConfigurationElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.ConfigurationElementCollection.Count
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationElementCollection.Count
  fullName: System.Configuration.ConfigurationElementCollection.Count
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement()
  nameWithType: ConfigurationElementCollection.CreateNewElement()
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement()
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement(String)
  nameWithType: ConfigurationElementCollection.CreateNewElement(String)
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement(String)
- uid: System.Configuration.ConfigurationElementCollection.ElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
  fullName: System.Configuration.ConfigurationElementCollection.ElementName
- uid: System.Configuration.ConfigurationElementCollection.EmitClear
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
  fullName: System.Configuration.ConfigurationElementCollection.EmitClear
- uid: System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Equals(Object)
  nameWithType: ConfigurationElementCollection.Equals(Object)
  fullName: System.Configuration.ConfigurationElementCollection.Equals(Object)
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetElementKey(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.GetElementKey(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ConfigurationElementCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetHashCode()
  nameWithType: ConfigurationElementCollection.GetHashCode()
  fullName: System.Configuration.ConfigurationElementCollection.GetHashCode()
- uid: System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementName(String)
  nameWithType: ConfigurationElementCollection.IsElementName(String)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementName(String)
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementRemovable(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.IsModified
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationElementCollection.IsModified()
  fullName: System.Configuration.ConfigurationElementCollection.IsModified()
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsReadOnly()
  nameWithType: ConfigurationElementCollection.IsReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.IsReadOnly()
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationElementCollection.IsSynchronized
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
  fullName: System.Configuration.ConfigurationElementCollection.RemoveElementName
- uid: System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.ResetModified
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationElementCollection.ResetModified()
  fullName: System.Configuration.ConfigurationElementCollection.ResetModified()
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ConfigurationElementCollection.SetReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.SetReadOnly()
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
  fullName: System.Configuration.ConfigurationElementCollection.SyncRoot
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
  fullName: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
- uid: System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.ConfigurationElementCollection.#ctor*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection
- uid: System.Configuration.ConfigurationElementCollection.AddElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd
  nameWithType: ConfigurationElementCollection.BaseAdd
- uid: System.Configuration.ConfigurationElementCollection.BaseClear*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseClear
  nameWithType: ConfigurationElementCollection.BaseClear
- uid: System.Configuration.ConfigurationElementCollection.BaseGet*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet
  nameWithType: ConfigurationElementCollection.BaseGet
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetAllKeys
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetKey
  nameWithType: ConfigurationElementCollection.BaseGetKey
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIndexOf
  nameWithType: ConfigurationElementCollection.BaseIndexOf
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIsRemoved
  nameWithType: ConfigurationElementCollection.BaseIsRemoved
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemove
  nameWithType: ConfigurationElementCollection.BaseRemove
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemoveAt
  nameWithType: ConfigurationElementCollection.BaseRemoveAt
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
- uid: System.Configuration.ConfigurationElementCollection.CollectionType*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
- uid: System.Configuration.ConfigurationElementCollection.CopyTo*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConfigurationElementCollection.CopyTo
- uid: System.Configuration.ConfigurationElementCollection.Count*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationElementCollection.Count
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement
  nameWithType: ConfigurationElementCollection.CreateNewElement
- uid: System.Configuration.ConfigurationElementCollection.ElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
- uid: System.Configuration.ConfigurationElementCollection.EmitClear*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
- uid: System.Configuration.ConfigurationElementCollection.Equals*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Equals
  nameWithType: ConfigurationElementCollection.Equals
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetElementKey
  nameWithType: ConfigurationElementCollection.GetElementKey
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ConfigurationElementCollection.GetEnumerator
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetHashCode
  nameWithType: ConfigurationElementCollection.GetHashCode
- uid: System.Configuration.ConfigurationElementCollection.IsElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementName
  nameWithType: ConfigurationElementCollection.IsElementName
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementRemovable
  nameWithType: ConfigurationElementCollection.IsElementRemovable
- uid: System.Configuration.ConfigurationElementCollection.IsModified*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsModified
  nameWithType: ConfigurationElementCollection.IsModified
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ConfigurationElementCollection.IsReadOnly
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: OnDeserializeUnrecognizedElement
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
- uid: System.Configuration.ConfigurationElementCollection.Reset*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Reset
  nameWithType: ConfigurationElementCollection.Reset
- uid: System.Configuration.ConfigurationElementCollection.ResetModified*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ResetModified
  nameWithType: ConfigurationElementCollection.ResetModified
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SerializeElement
  nameWithType: ConfigurationElementCollection.SerializeElement
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ConfigurationElementCollection.SetReadOnly
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
- uid: System.Configuration.ConfigurationElementCollection.Unmerge*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Unmerge
  nameWithType: ConfigurationElementCollection.Unmerge
