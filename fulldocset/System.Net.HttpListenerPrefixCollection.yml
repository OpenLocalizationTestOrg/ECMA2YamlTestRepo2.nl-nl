### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerPrefixCollection
  id: HttpListenerPrefixCollection
  children:
  - System.Net.HttpListenerPrefixCollection.Add(System.String)
  - System.Net.HttpListenerPrefixCollection.Clear
  - System.Net.HttpListenerPrefixCollection.Contains(System.String)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  - System.Net.HttpListenerPrefixCollection.Count
  - System.Net.HttpListenerPrefixCollection.GetEnumerator
  - System.Net.HttpListenerPrefixCollection.IsReadOnly
  - System.Net.HttpListenerPrefixCollection.IsSynchronized
  - System.Net.HttpListenerPrefixCollection.Remove(System.String)
  - System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: HttpListenerPrefixCollection
  nameWithType: HttpListenerPrefixCollection
  fullName: System.Net.HttpListenerPrefixCollection
  type: Class
  summary: "Hiermee geeft u de verzameling gebruikt voor het opslaan van de Uniform Resource Identifier (URI)-voorvoegsels voor <xref href=&quot;System.Net.HttpListener&quot;> </xref> objecten."
  remarks: "De <xref:System.Net.HttpListener.Prefixes%2A>eigenschap exemplaren van deze verzameling.</xref:System.Net.HttpListener.Prefixes%2A>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its HttpListenerPrefixCollection.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_1_1.cs)]"
  syntax:
    content: 'public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection<string>, System.Collections.Generic.IEnumerable<string>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.String>
  - System.Collections.Generic.IEnumerable<System.String>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee voegt u een Uniform Resource Identifier (URI)-voorvoegsel toe aan de verzameling."
  remarks: "Deze methode wordt een URI-voorvoegsel toegevoegd aan de set voorvoegsels die worden beheerd door de gekoppelde <xref:System.Net.HttpListener>object.</xref:System.Net.HttpListener> Bij het controleren van `uriPrefix` geldig is, zodat de aanvraag wordt genegeerd.       De voorvoegseltekenreeks URI bestaat uit een schema (http of https), een host, een optionele poort en een optionele pad, bijvoorbeeld &quot;`http://www.contoso.com:8080/customerData``/`&quot;. Het voorvoegsel op dat moet worden afgesloten met een slash (&quot;/&quot;). De <xref:System.Net.HttpListener>met het voorvoegsel op dat het meest overeenkomt met een aangevraagde URI reageert op de aanvraag.</xref:System.Net.HttpListener> Meerdere <xref:System.Net.HttpListener>objecten kunnen niet hetzelfde voorvoegsel toevoegen.</xref:System.Net.HttpListener> Een <xref:System.Net.HttpListenerException>uitzondering gegenereerd als een <xref:System.Net.HttpListener>voegt een voorvoegsel die zich al in gebruik.</xref:System.Net.HttpListener> </xref:System.Net.HttpListenerException>       Als u een poort opgeeft, het element host kan worden vervangen door &quot;`*`&quot; om aan te geven die de <xref:System.Net.HttpListener>verzonden naar de poort als de aangevraagde URI komt niet overeen met een andere voorvoegsel-aanvragen accepteert.</xref:System.Net.HttpListener> Bijvoorbeeld alle aanvragen ontvangen die zijn verzonden naar poort 8080 wanneer de aangevraagde URI kan niet worden uitgevoerd door een andere <xref:System.Net.HttpListener>, wordt het voorvoegsel &quot;`http://*:8080``/`&quot;.</xref:System.Net.HttpListener> Op deze manier om op te geven die de <xref:System.Net.HttpListener>accepteert u alle aanvragen die worden verzonden naar een poort vervangen door het host-element met de &quot;`+`&quot;character&quot;,`https://+:8080`/ &quot;.</xref:System.Net.HttpListener> De &quot;`*`&quot;en&quot;`+`&quot; tekens kunnen worden gebruikt in voorvoegsels die paden bevatten.       Beginnen met .NET 4.5.3 en Windows 10, subdomeinen jokertekens worden ondersteund in de URI-voorvoegsels die worden beheerd door een <xref:System.Net.HttpListener>object.</xref:System.Net.HttpListener> Een subdomein jokertekens gebruikt u de &quot; * &quot; teken als onderdeel van de hostnaam in een URI-voorvoegsel: bijvoorbeeld `http://*.foo.com/`, en dit aan de methode HttpListenerPrefixCollection.Add als het argument doorgeven. Dit werkt op .NET 4.5.3 en Windows 10; in eerdere versies van dit genereert een<xref:System.Net.HttpListenerException></xref:System.Net.HttpListenerException>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/m-system.net.httplistene_16_1.cs)]"
  syntax:
    content: public void Add (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "Een <xref:System.String>die identificeert de URI-informatie die in de binnenkomende aanvragen wordt vergeleken.</xref:System.String> Het voorvoegsel op dat moet worden afgesloten met een slash (&quot;/&quot;)."
  overload: System.Net.HttpListenerPrefixCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uriPrefix</code>gebruikt het schema http:// of https:// niet. Dit zijn de alleen-schema&quot;s ondersteund voor <xref href=&quot;System.Net.HttpListener&quot;> </xref> objecten.       - of - <code>uriPrefix</code> is niet de voorvoegsels van een correct opgemaakt URI. Zorg ervoor dat de tekenreeks wordt beÃ«indigd met een &quot;/&quot;."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Net.HttpListener&quot;> </xref> die zijn gekoppeld aan deze verzameling is gesloten."
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Een Windows-functie-aanroep is mislukt. Controleer de uitzondering <xref:System.Net.HttpListenerException.ErrorCode*>eigenschap om de oorzaak van de uitzondering te bepalen.</xref:System.Net.HttpListenerException.ErrorCode*> Deze uitzondering wordt gegenereerd als er een andere <xref href=&quot;System.Net.HttpListener&quot;> </xref> is al toegevoegd voor het voorvoegsel <code> uriPrefix </code>."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Clear
  id: Clear
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee verwijdert u alle voorvoegsels die de Uniform Resource Identifier (URI) uit de verzameling."
  remarks: "Nadat u deze methode aanroept, u kunt geen starten gekoppelde <xref:System.Net.HttpListener>zonder nieuwe voorvoegsels; toe te voegen als u probeert te doen, een uitzondering gegenereerd.</xref:System.Net.HttpListener>"
  example:
  - "The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#6](~/add/codesnippet/csharp/m-system.net.httplistene_7_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Net.HttpListenerPrefixCollection.Clear*
  exceptions:
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Een Windows-functie-aanroep is mislukt. Controleer de uitzondering <xref:System.Net.HttpListenerException.ErrorCode*>eigenschap om de oorzaak van de uitzondering te bepalen.</xref:System.Net.HttpListenerException.ErrorCode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Net.HttpListener&quot;> </xref> die zijn gekoppeld aan deze verzameling is gesloten."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Retourneert een <xref:System.Boolean>waarde die aangeeft of het opgegeven voorvoegsel is opgenomen in de verzameling.</xref:System.Boolean>"
  remarks: "Het opgegeven voorvoegsel moet exact overeenkomen met een bestaande waarde."
  example:
  - "The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.  \n  \n [!code-cs[Net_Listener_Basic#4](~/add/codesnippet/csharp/m-system.net.httplistene_14_1.cs)]"
  syntax:
    content: public bool Contains (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "Een <xref:System.String>waarin de Uniform Resource Identifier (URI)-voorvoegsel moet worden getest.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als deze verzameling het voorvoegsel dat is opgegeven bevat door <code> uriPrefix </code>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Kopieert de inhoud van een <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> aan de opgegeven matrix."
  remarks: "De matrix moet kunnen tekenreeksen bevatten en mag geen multidimensionale."
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_18_1.cs)]"
  syntax:
    content: public void CopyTo (Array array, int offset);
    parameters:
    - id: array
      type: System.Array
      description: "De dimensionale Ã©Ã©n <xref:System.Array>die ontvangt de Uniform Resource Identifier (URI) voorvoegsel tekenreeksen in deze verzameling.</xref:System.Array>"
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde index in `array` welke kopiÃ«ren begint."
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>heeft meer dan Ã©Ã©n dimensie."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Deze verzameling bevat meer elementen dan kunnen worden opgeslagen in <code> array </code> vanaf <code> offset </code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Net.HttpListener&quot;> </xref> die zijn gekoppeld aan deze verzameling is gesloten."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>array</code>kan string-waarden niet opslaan."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Kopieert de inhoud van een <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> aan de opgegeven tekenreeksmatrix."
  remarks: "De matrix moet kunnen tekenreeksen bevatten en mag geen multidimensionale."
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_6_1.cs)]"
  syntax:
    content: public void CopyTo (string[] array, int offset);
    parameters:
    - id: array
      type: System.String[]
      description: "De ene dimensionale tekenreeksmatrix die de Uniform Resource Identifier (URI) voorvoegsel tekenreeksen in deze verzameling ontvangt."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde index in `array` welke kopiÃ«ren begint."
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>heeft meer dan Ã©Ã©n dimensie."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Deze verzameling bevat meer elementen dan kunnen worden opgeslagen in <code> array </code> vanaf <code> offset </code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Net.HttpListener&quot;> </xref> die zijn gekoppeld aan deze verzameling is gesloten."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Count
  id: Count
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u het aantal voorvoegsels die zijn opgenomen in de verzameling."
  remarks: ''
  example:
  - "The following code example displays the prefixes in a collection.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/p-system.net.httplistene_43_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>die het aantal voorvoegsels in deze verzameling bevat.</xref:System.Int32>"
  overload: System.Net.HttpListenerPrefixCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Retourneert een object dat kan worden gebruikt voor de collectie doorlopen."
  remarks: "Het object dat wordt geretourneerd door deze methode wordt in eerste instantie geplaatst vÃ³Ã³r het eerste element in deze verzameling. U moet aanroepen de <xref:System.Collections.IEnumerator.MoveNext%2A>methode voordat u toegang hebt tot het eerste element.</xref:System.Collections.IEnumerator.MoveNext%2A> Aanroepen voor toegang tot het element bij de huidige positie, de <xref:System.Collections.IEnumerator.Current%2A>eigenschap.</xref:System.Collections.IEnumerator.Current%2A>       De verzameling tijdens het gebruik van de enumerator niet wijzigen. Als de verzameling is gewijzigd terwijl een enumerator wordt gebruikt, is een poging de positie instellen door aan te roepen <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>zorgt dat een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Voor een gedetailleerde beschrijving van enumerators, Raadpleeg de documentatie voor de <xref:System.Collections.IEnumerator>klasse en de <xref:System.Collections.IEnumerable.GetEnumerator%2A>methode.</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  example:
  - "The following code example demonstrates enumerating through a collection. Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/m-system.net.httplistene_8_1.cs)]"
  syntax:
    content: public System.Collections.Generic.IEnumerator<string> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.String}
      description: "Een object dat u implementeert de <xref:System.Collections.IEnumerator>interface en biedt toegang tot de tekenreeksen in deze verzameling.</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt een waarde die aangeeft of toegang tot de verzameling alleen-lezen is."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Retourneert altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt een waarde die aangeeft of de toegang tot de verzameling wordt gesynchroniseerd (thread-safe)."
  remarks: "Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of onderschept de uitzonderingen die het resultaat van de wijzigingen die door andere threads."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Deze eigenschap retourneert altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "De opgegeven Uniform Resource Identifier (URI) verwijdert uit de lijst met voorvoegsels verwerkt door de <xref href=&quot;System.Net.HttpListener&quot;> </xref> object."
  remarks: "Als `uriPrefix` is niet in de verzameling, gebeurt er niets met deze methode."
  syntax:
    content: public bool Remove (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "Een <xref:System.String>waarin de voorvoegsels van URI te verwijderen.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <code> uriPrefix </code> is gevonden in de <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> en verwijderd, anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Een Windows-functie-aanroep is mislukt. Controleer de uitzondering met foutcode om de oorzaak van de uitzondering."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Net.HttpListener&quot;> </xref> die zijn gekoppeld aan deze verzameling is gesloten."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Retourneert een object dat kan worden gebruikt voor de collectie doorlopen."
  remarks: "Het object dat wordt geretourneerd door deze methode wordt in eerste instantie geplaatst vÃ³Ã³r het eerste element in deze verzameling. U moet aanroepen de <xref:System.Collections.IEnumerator.MoveNext%2A>methode voordat u toegang hebt tot het eerste element.</xref:System.Collections.IEnumerator.MoveNext%2A> Aanroepen voor toegang tot het element bij de huidige positie, de <xref:System.Collections.IEnumerator.Current%2A>eigenschap.</xref:System.Collections.IEnumerator.Current%2A>       De verzameling tijdens het gebruik van de enumerator niet wijzigen. Als de verzameling is gewijzigd terwijl een enumerator wordt gebruikt, is een poging de positie instellen door aan te roepen <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>zorgt dat een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Voor een gedetailleerde beschrijving van enumerators, Raadpleeg de documentatie voor de <xref:System.Collections.IEnumerator>klasse en de <xref:System.Collections.IEnumerable.GetEnumerator%2A>methode.</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een object dat u implementeert de <xref:System.Collections.IEnumerator>interface en biedt toegang tot de tekenreeksen in deze verzameling.</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.HttpListenerException
  parent: System.Net
  isExternal: false
  name: HttpListenerException
  nameWithType: HttpListenerException
  fullName: System.Net.HttpListenerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerPrefixCollection.Clear
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.HttpListenerPrefixCollection.Count
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<String>
  nameWithType: IEnumerator<String>
  fullName: System.Collections.Generic.IEnumerator<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.HttpListenerPrefixCollection.Add*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add
  nameWithType: HttpListenerPrefixCollection.Add
- uid: System.Net.HttpListenerPrefixCollection.Clear*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear
  nameWithType: HttpListenerPrefixCollection.Clear
- uid: System.Net.HttpListenerPrefixCollection.Contains*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains
  nameWithType: HttpListenerPrefixCollection.Contains
- uid: System.Net.HttpListenerPrefixCollection.CopyTo*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo
  nameWithType: HttpListenerPrefixCollection.CopyTo
- uid: System.Net.HttpListenerPrefixCollection.Count*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpListenerPrefixCollection.GetEnumerator
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove
  nameWithType: HttpListenerPrefixCollection.Remove
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator
