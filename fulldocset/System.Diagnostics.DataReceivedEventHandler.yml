### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.DataReceivedEventHandler
  id: DataReceivedEventHandler
  langs:
  - csharp
  name: DataReceivedEventHandler
  nameWithType: DataReceivedEventHandler
  fullName: System.Diagnostics.DataReceivedEventHandler
  type: Delegate
  summary: "Hiermee geeft u de methode die wordt afgehandeld tijdens de <xref href=&quot;System.Diagnostics.Process.OutputDataReceived&quot;> </xref> gebeurtenis of <xref href=&quot;System.Diagnostics.Process.ErrorDataReceived&quot;> </xref> gebeurtenis van een <xref href=&quot;System.Diagnostics.Process&quot;> </xref>."
  remarks: "Wanneer u een gemachtigde DataReceivedEventHandler maakt, kunt u de methode waarmee de gebeurtenis wordt afgehandeld identificeren. De gebeurtenis-handler koppelt u de gebeurtenis, een exemplaar van de gemachtigde te toevoegen aan de gebeurtenis. De gebeurtenis-handler wordt aangeroepen wanneer de gebeurtenis plaatsvindt, tenzij u de gemachtigde verwijdert. Zie voor meer informatie over de gebeurtenis-handler gemachtigden [gebeurtenissen](~/add/includes/ajax-current-ext-md.md).       Voor het asynchroon verzamelen van de omgeleide <xref:System.Diagnostics.Process.StandardOutput%2A>of <xref:System.Diagnostics.Process.StandardError%2A>stroom uitvoer van een proces, het toevoegen van de gebeurtenis-handler de <xref:System.Diagnostics.Process.OutputDataReceived>of <xref:System.Diagnostics.Process.ErrorDataReceived>gebeurtenis.</xref:System.Diagnostics.Process.ErrorDataReceived> </xref:System.Diagnostics.Process.OutputDataReceived> </xref:System.Diagnostics.Process.StandardError%2A> </xref:System.Diagnostics.Process.StandardOutput%2A> Deze gebeurtenissen worden gegenereerd telkens wanneer die het proces een regel naar de bijbehorende omgeleide stroom schrijft. Wanneer de omgeleide stroom is gesloten, wordt een null regel verzonden naar de gebeurtenis-handler. Zorg ervoor dat de gebeurtenis-handler voor deze voorwaarde gecontroleerd voordat de toegang tot de <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>eigenschap.</xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> U kunt bijvoorbeeld de `static` methode <xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName>valideren van de <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>eigenschap in de gebeurtenis-handler.</xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> </xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName>"
  example:
  - "The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command. The **sort** command is a console application that reads and sorts text input.  \n  \n The example creates a DataReceivedEventHandler delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event. The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.  \n  \n [!code-cpp[Process_AsyncStreams#1](~/add/codesnippet/cpp/t-system.diagnostics.dat_1_1.cpp)]\n [!code-vb[Process_AsyncStreams#1](~/add/codesnippet/visualbasic/t-system.diagnostics.dat_1_1.vb)]\n [!code-cs[Process_AsyncStreams#1](~/add/codesnippet/csharp/t-system.diagnostics.dat_1_1.cs)]"
  syntax:
    content: public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
