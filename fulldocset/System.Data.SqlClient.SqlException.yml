### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlException
  id: SqlException
  children:
  - System.Data.SqlClient.SqlException.Class
  - System.Data.SqlClient.SqlException.ClientConnectionId
  - System.Data.SqlClient.SqlException.Errors
  - System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.SqlClient.SqlException.LineNumber
  - System.Data.SqlClient.SqlException.Number
  - System.Data.SqlClient.SqlException.Procedure
  - System.Data.SqlClient.SqlException.Server
  - System.Data.SqlClient.SqlException.Source
  - System.Data.SqlClient.SqlException.State
  - System.Data.SqlClient.SqlException.ToString
  langs:
  - csharp
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
  type: Class
  summary: "De uitzondering die wordt gegenereerd wanneer SQL Server een waarschuwing of fout retourneert. Deze klasse kan niet worden overgenomen."
  remarks: "Deze klasse wordt gemaakt wanneer de .NET Framework Data Provider voor SQL Server een fout gegenereerd op basis van de server optreedt. (Als standaard common language runtime-uitzonderingen worden client side fouten gegenereerd.) SqlException bevat altijd ten minste één exemplaar van <xref:System.Data.SqlClient.SqlError>.</xref:System.Data.SqlClient.SqlError>       Berichten met een ernst 10 of hoger of lager zijn informatief en duiden op problemen veroorzaakt door fouten in de informatie die een gebruiker heeft ingevoerd. Niveaus van 11 tot en met 16 worden gegenereerd door de gebruiker en kunnen worden opgelost door de gebruiker. Niveaus van 17 tot en met 25 software of hardware fouten aangeven. Wanneer een niveau 17 optreedt 18 of 19, blijven werken, hoewel u mogelijk niet uitvoeren van een bepaalde instructie.       De <xref:System.Data.SqlClient.SqlConnection>open blijft wanneer de ernst op 19 of minder.</xref:System.Data.SqlClient.SqlConnection> Wanneer de ernst op 20 of groter is, de server normaal gesproken wordt de <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> gesloten De gebruiker kan echter opnieuw de verbinding en doorgaan. In beide gevallen wordt een SqlException gegenereerd door de methode die de opdracht wordt uitgevoerd.       Zie de sectie Probleemoplossing van SQL Server Books Online voor informatie over de waarschuwingen en informatieve berichten is verzonden door SQL Server. De klasse SqlException toegewezen aan de ernst van de SQL Server.       Hieronder vindt u algemene informatie over het verwerken van uitzonderingen. Uw code moet catch-uitzonderingen om te voorkomen dat de toepassing vastloopt en om toe te staan dat een relevante foutbericht wordt weergegeven voor de gebruiker.  U kunt databasetransacties gebruiken om ervoor te zorgen dat de gegevens consistent ongeacht wat er in de clienttoepassing gebeurt (inclusief een crash). Functies, zoals System.Transaction.TransactionScope of de methode BeginTransaction (in System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection en System.Data.SqlClient.SqlConnection) Zorg ervoor dat de consistente gegevens, ongeacht de uitzonderingen die worden gegenereerd door een provider. Transacties kunnen mislukken, dus catch-fouten en voer de transactie opnieuw uit.       Houd er rekening mee dat u begint met .NET Framework 4.5, SqlException een interne <xref:System.ComponentModel.Win32Exception>.</xref:System.ComponentModel.Win32Exception> terugkeren kunt       De uitzonderingsklasse van een .net Framework-gegevensprovider providerspecifieke fouten rapporteert. Zo System.Data.Odbc OdbcException heeft, System.Data.OleDb heeft OleDbException en System.Data.SqlClient SqlException heeft. Voor het aanbevolen niveau van details over deze fout, deze uitzonderingen wordt onderschept en gebruik van de leden van deze uitzonderingsklassen voor informatie over de fout.       Naast de fouten providerspecifieke kunnen .NET Framework data provider-typen uitzonderingen van .NET Framework zoals System.OutOfMemoryException en System.Threading.ThreadAbortException verhogen. Herstel van deze uitzonderingen niet mogelijk.       Ongeldige invoer kan leiden tot een type .NET Framework-provider een uitzondering zoals System.ArgumentException of System.IndexOutOfRangeException verhogen.  Een methode wordt aangeroepen op het verkeerde tijdstip kunt System.InvalidOperationException verhogen.       In het algemeen schrijven dus een uitzonderings-handler die elke provider dat bepaalde uitzonderingen als uitzonderingen in de common language runtime.  Dit kunnen als volgt gelaagd: ```   Try {      // code here   }   catch (SqlException odbcEx) {      // Handle more specific SqlException exception here.   }   catch (Exception ex) {      // Handle generic ones here.   }      ``` of: ```   Try {      // code here   }   catch (Exception ex) {      if (ex is SqlException) {         // Handle more specific SqlException exception here.      }      Else {         // Handle generic ones here.      }   }      ``` is ook mogelijk dat een methodeaanroep voor .NET Framework data provider voor een thread-pool-thread is mislukt met geen gebruikerscode op de stack. In dit geval en bij gebruik van asynchrone methode-aanroepen, moet u registreren de <xref:System.AppDomain.UnhandledException>gebeurtenis te verwerken die uitzonderingen en te voorkomen dat de toepassing is vastgelopen.</xref:System.AppDomain.UnhandledException>"
  example:
  - "The following example generates a SqlException and then displays the exception.  \n  \n [!code-cs[Classic WebData SqlException Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._1_1.cs)]\n [!code-vb[Classic WebData SqlException Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._1_1.vb)]"
  syntax:
    content: 'public sealed class SqlException : System.Data.Common.DbException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  - System.Data.Common.DbException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Class
  id: Class
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Class
  nameWithType: SqlException.Class
  fullName: System.Data.SqlClient.SqlException.Class
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee haalt u de ernst van de fout is geretourneerd door de .NET Framework-gegevensprovider voor SQL Server."
  remarks: "Berichten met een ernst 10 of hoger of lager zijn informatief en duiden op problemen veroorzaakt door fouten in de informatie die een gebruiker heeft ingevoerd. Niveaus van 11 tot en met 16 worden gegenereerd door de gebruiker en kunnen worden opgelost door de gebruiker. Niveaus van 17 tot en met 25 software of hardware fouten aangeven. Wanneer een niveau 17 optreedt 18 of 19, blijven werken, hoewel u mogelijk niet uitvoeren van een bepaalde instructie.       De <xref:System.Data.SqlClient.SqlConnection>open blijft wanneer de ernst op 19 of minder.</xref:System.Data.SqlClient.SqlConnection> Wanneer de ernst op 20 of groter is, de server normaal gesproken wordt de <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> gesloten De gebruiker kan echter opnieuw de verbinding en doorgaan. In beide gevallen moet een <xref:System.Data.SqlClient.SqlException>wordt gegenereerd door de methode die de opdracht wordt uitgevoerd.</xref:System.Data.SqlClient.SqlException>       Zie de sectie Probleemoplossing van de SQL Server-documentatie voor informatie over de waarschuwingen en informatieve berichten is verzonden door SQL Server.       Dit is een wrapper voor de <xref:System.Data.SqlClient.SqlError.Class%2A>eigenschap van de eerste <xref:System.Data.SqlClient.SqlError>in de <xref:System.Data.SqlClient.SqlException.Errors%2A>eigenschap.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Class%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._21_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._21_1.vb)]"
  syntax:
    content: public byte Class { get; }
    return:
      type: System.Byte
      description: "Een waarde tussen 1 en 25 die de ernst van de fout aangeeft."
  overload: System.Data.SqlClient.SqlException.Class*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.ClientConnectionId
  id: ClientConnectionId
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: ClientConnectionId
  nameWithType: SqlException.ClientConnectionId
  fullName: System.Data.SqlClient.SqlException.ClientConnectionId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee geeft u de client verbinding-ID. Zie voor meer informatie [gegevens tracering in ADO.NET](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Zie voor een voorbeeld van code <xref:System.Data.SqlClient.SqlException.ToString%2A>.</xref:System.Data.SqlClient.SqlException.ToString%2A>"
  syntax:
    content: public Guid ClientConnectionId { get; }
    return:
      type: System.Guid
      description: "Retourneert de client verbinding-ID."
  overload: System.Data.SqlClient.SqlException.ClientConnectionId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Errors
  id: Errors
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Errors
  nameWithType: SqlException.Errors
  fullName: System.Data.SqlClient.SqlException.Errors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee wordt een verzameling van een of meer <xref href=&quot;System.Data.SqlClient.SqlError&quot;> </xref> objecten waarmee gedetailleerde informatie over uitzonderingen die worden gegenereerd door de .NET Framework-gegevensprovider voor SQL Server."
  remarks: "De <xref:System.Data.SqlClient.SqlErrorCollection>klasse altijd bevat ten minste één exemplaar van de <xref:System.Data.SqlClient.SqlError>klasse.</xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlErrorCollection>       Dit is een wrapper voor <xref:System.Data.SqlClient.SqlErrorCollection>.</xref:System.Data.SqlClient.SqlErrorCollection> Zie SQL Server Books Online voor meer informatie over SQL Server-engine-fouten."
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-vb[Classic WebData SqlError Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._59_1.vb)]\n [!code-cs[Classic WebData SqlError Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._59_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlErrorCollection Errors { get; }
    return:
      type: System.Data.SqlClient.SqlErrorCollection
      description: "De verzamelde exemplaren van de <xref href=&quot;System.Data.SqlClient.SqlError&quot;> </xref> klasse."
  overload: System.Data.SqlClient.SqlException.Errors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SqlException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.SqlClient.SqlException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Stelt de <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> met informatie over de uitzondering."
  remarks: '`GetObjectData`Hiermee stelt u een `SerializationInfo` met alle uitzondering objectgegevens die zijn gericht voor serialisatie. Tijdens de deserialisatie-de uitzondering is aangemaakt de `SerializationInfo` verzonden via de stroom.'
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "De <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> waarin zich de geserialiseerd objectgegevens over de uitzondering."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "De <xref:System.Runtime.Serialization.StreamingContext>bevat contextuele informatie over de bron- of doelserver.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.SqlClient.SqlException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> si </code> -parameter is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.LineNumber
  id: LineNumber
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: LineNumber
  nameWithType: SqlException.LineNumber
  fullName: System.Data.SqlClient.SqlException.LineNumber
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee haalt u het nummer in de Transact-SQL-opdrachtenbatch of de opgeslagen procedure die de fout is gegenereerd."
  remarks: "De regel nummering begint bij 1; Als 0 wordt geretourneerd, is het regelnummer niet van toepassing.       Dit is een wrapper voor de <xref:System.Data.SqlClient.SqlError.LineNumber%2A>eigenschap van de eerste <xref:System.Data.SqlClient.SqlError>in de <xref:System.Data.SqlClient.SqlException.Errors%2A>eigenschap.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.LineNumber%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._10_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._10_1.vb)]"
  syntax:
    content: public int LineNumber { get; }
    return:
      type: System.Int32
      description: "Het regelnummer binnen de Transact-SQL-opdrachtenbatch of de opgeslagen procedure die de fout is gegenereerd."
  overload: System.Data.SqlClient.SqlException.LineNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Number
  id: Number
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Number
  nameWithType: SqlException.Number
  fullName: System.Data.SqlClient.SqlException.Number
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee haalt u een nummer waarmee het type fout."
  remarks: "Dit is een wrapper voor de <xref:System.Data.SqlClient.SqlError.Number%2A>eigenschap van de eerste <xref:System.Data.SqlClient.SqlError>in de <xref:System.Data.SqlClient.SqlException.Errors%2A>eigenschap.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Number%2A> Zie SQL Server Books Online voor meer informatie over SQL Server-engine-fouten."
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._13_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._13_1.vb)]"
  syntax:
    content: public int Number { get; }
    return:
      type: System.Int32
      description: "Het nummer van het type fout."
  overload: System.Data.SqlClient.SqlException.Number*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Procedure
  id: Procedure
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Procedure
  nameWithType: SqlException.Procedure
  fullName: System.Data.SqlClient.SqlException.Procedure
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee haalt u de naam van de opgeslagen procedure of een externe procedureaanroep (RPC) die de fout is gegenereerd."
  remarks: "Dit is een wrapper voor de <xref:System.Data.SqlClient.SqlError.Procedure%2A>eigenschap van de eerste <xref:System.Data.SqlClient.SqlError>in de <xref:System.Data.SqlClient.SqlException.Errors%2A>eigenschap.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Procedure%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._9_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._9_1.vb)]"
  syntax:
    content: public string Procedure { get; }
    return:
      type: System.String
      description: "De naam van de opgeslagen procedure of RPC."
  overload: System.Data.SqlClient.SqlException.Procedure*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Server
  id: Server
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Server
  nameWithType: SqlException.Server
  fullName: System.Data.SqlClient.SqlException.Server
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee haalt u de naam van de computer waarop een exemplaar van SQL Server die de fout is gegenereerd."
  remarks: "Dit is een wrapper voor de <xref:System.Data.SqlClient.SqlError.Server%2A>eigenschap van de eerste <xref:System.Data.SqlClient.SqlError>in de <xref:System.Data.SqlClient.SqlException.Errors%2A>eigenschap.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Server%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._25_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._25_1.vb)]"
  syntax:
    content: public string Server { get; }
    return:
      type: System.String
      description: "De naam van de computer waarop een exemplaar van SQL Server."
  overload: System.Data.SqlClient.SqlException.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Source
  id: Source
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Source
  nameWithType: SqlException.Source
  fullName: System.Data.SqlClient.SqlException.Source
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee haalt u de naam van de provider die de fout is gegenereerd."
  remarks: "Dit is een wrapper voor de <xref:System.Data.SqlClient.SqlError.Source%2A>eigenschap van de eerste <xref:System.Data.SqlClient.SqlError>in de <xref:System.Data.SqlClient.SqlException.Errors%2A>eigenschap.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Source%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._20_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._20_1.vb)]"
  syntax:
    content: public override string Source { get; }
    return:
      type: System.String
      description: "De naam van de provider die de fout is gegenereerd."
  overload: System.Data.SqlClient.SqlException.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.State
  id: State
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: State
  nameWithType: SqlException.State
  fullName: System.Data.SqlClient.SqlException.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee haalt u een numerieke foutcode van SQL Server die een fout, waarschuwing of een bericht &quot;geen gegevens gevonden&quot; vertegenwoordigt. Zie SQL Server Books Online voor meer informatie over het decoderen van deze waarden."
  remarks: "Dit is een wrapper voor de <xref:System.Data.SqlClient.SqlError.State%2A>eigenschap van de eerste <xref:System.Data.SqlClient.SqlError>in de <xref:System.Data.SqlClient.SqlException.Errors%2A>eigenschap.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.State%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._61_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._61_1.vb)]"
  syntax:
    content: public byte State { get; }
    return:
      type: System.Byte
      description: "Het getal dat wordt voor de foutcode."
  overload: System.Data.SqlClient.SqlException.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.ToString
  id: ToString
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlException.ToString()
  fullName: System.Data.SqlClient.SqlException.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Retourneert een tekenreeks met de huidige <xref href=&quot;System.Data.SqlClient.SqlException&quot;> </xref> object en de client verbindings-ID bevat (Zie voor meer informatie <xref:System.Data.SqlClient.SqlException.ClientConnectionId*>).</xref:System.Data.SqlClient.SqlException.ClientConnectionId*>"
  remarks: ''
  example:
  - "The following C# example shows how a connection attempt to a valid server but non-existent database causes a <xref:System.Data.SqlClient.SqlException>, which includes the client connection ID:  \n  \n```  \nusing System.Data.SqlClient;  \nusing System;  \n  \npublic class A {  \n   public static void Main() {  \n      SqlConnection connection = new SqlConnection();  \n      connection.ConnectionString = \"Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true\";  \n      try {  \n         connection.Open();  \n      }  \n      catch (SqlException p) {  \n         Console.WriteLine(\"{0}\", p.ClientConnectionId);  \n         Console.WriteLine(\"{0}\", p.ToString());  \n      }  \n      connection.Close();  \n   }  \n}  \n```  \n  \n The following Visual Basic sample is functionally equivalent to the previous (C#) sample:  \n  \n```  \nImports System.Data.SqlClient  \nImports System  \n  \nModule Module1  \n  \n    Sub Main()  \n        Dim connection As New SqlConnection()  \n        connection.ConnectionString = \"Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true\"  \n        Try  \n            connection.Open()  \n        Catch p As SqlException  \n            Console.WriteLine(\"{0}\", p.ClientConnectionId)  \n            Console.WriteLine(\"{0}\", p.ToString())  \n        End Try  \n        connection.Close()  \n    End Sub  \n  \nEnd Module  \n```"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Een tekenreeks met de huidige <xref href=&quot;System.Data.SqlClient.SqlException&quot;> </xref> object.<xref:System.String>.</xref:System.String>"
  overload: System.Data.SqlClient.SqlException.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbException
  isExternal: false
  name: System.Data.Common.DbException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.SqlClient.SqlException.Class
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Class
  nameWithType: SqlException.Class
  fullName: System.Data.SqlClient.SqlException.Class
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlClient.SqlException.ClientConnectionId
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlException.ClientConnectionId
  fullName: System.Data.SqlClient.SqlException.ClientConnectionId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlException.Errors
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Errors
  nameWithType: SqlException.Errors
  fullName: System.Data.SqlClient.SqlException.Errors
- uid: System.Data.SqlClient.SqlErrorCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlErrorCollection
  nameWithType: SqlErrorCollection
  fullName: System.Data.SqlClient.SqlErrorCollection
- uid: System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SqlException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.SqlClient.SqlException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.SqlClient.SqlException.LineNumber
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: LineNumber
  nameWithType: SqlException.LineNumber
  fullName: System.Data.SqlClient.SqlException.LineNumber
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlException.Number
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Number
  nameWithType: SqlException.Number
  fullName: System.Data.SqlClient.SqlException.Number
- uid: System.Data.SqlClient.SqlException.Procedure
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Procedure
  nameWithType: SqlException.Procedure
  fullName: System.Data.SqlClient.SqlException.Procedure
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlException.Server
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Server
  nameWithType: SqlException.Server
  fullName: System.Data.SqlClient.SqlException.Server
- uid: System.Data.SqlClient.SqlException.Source
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Source
  nameWithType: SqlException.Source
  fullName: System.Data.SqlClient.SqlException.Source
- uid: System.Data.SqlClient.SqlException.State
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: State
  nameWithType: SqlException.State
  fullName: System.Data.SqlClient.SqlException.State
- uid: System.Data.SqlClient.SqlException.ToString
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ToString()
  nameWithType: SqlException.ToString()
  fullName: System.Data.SqlClient.SqlException.ToString()
- uid: System.Data.SqlClient.SqlException.Class*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Class
  nameWithType: SqlException.Class
- uid: System.Data.SqlClient.SqlException.ClientConnectionId*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlException.ClientConnectionId
- uid: System.Data.SqlClient.SqlException.Errors*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Errors
  nameWithType: SqlException.Errors
- uid: System.Data.SqlClient.SqlException.GetObjectData*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: GetObjectData
  nameWithType: SqlException.GetObjectData
- uid: System.Data.SqlClient.SqlException.LineNumber*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: LineNumber
  nameWithType: SqlException.LineNumber
- uid: System.Data.SqlClient.SqlException.Number*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Number
  nameWithType: SqlException.Number
- uid: System.Data.SqlClient.SqlException.Procedure*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Procedure
  nameWithType: SqlException.Procedure
- uid: System.Data.SqlClient.SqlException.Server*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Server
  nameWithType: SqlException.Server
- uid: System.Data.SqlClient.SqlException.Source*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Source
  nameWithType: SqlException.Source
- uid: System.Data.SqlClient.SqlException.State*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: State
  nameWithType: SqlException.State
- uid: System.Data.SqlClient.SqlException.ToString*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ToString
  nameWithType: SqlException.ToString
