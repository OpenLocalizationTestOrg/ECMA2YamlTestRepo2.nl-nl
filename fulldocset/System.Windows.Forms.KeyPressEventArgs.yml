### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyPressEventArgs
  id: KeyPressEventArgs
  children:
  - System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  - System.Windows.Forms.KeyPressEventArgs.Handled
  - System.Windows.Forms.KeyPressEventArgs.KeyChar
  langs:
  - csharp
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
  type: Class
  summary: "Biedt gegevens voor de <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> gebeurtenis."
  remarks: "Een KeyPressEventArgs geeft het teken die is samengesteld, wanneer de gebruiker een toets indrukt. Bijvoorbeeld, wanneer de gebruiker op SHIFT + K, retourneert de eigenschap <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>een hoofdletters K.       Een <xref:System.Windows.Forms.Control.KeyPress>gebeurtenis treedt op wanneer de gebruiker een toets indrukt.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Twee gebeurtenissen die nauw zijn met de <xref:System.Windows.Forms.Control.KeyPress>gebeurtenis zijn <xref:System.Windows.Forms.Control.KeyUp>en <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> verwant</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> De <xref:System.Windows.Forms.Control.KeyDown>gebeurtenis vóór elk <xref:System.Windows.Forms.Control.KeyPress>-gebeurtenis geactiveerd wanneer de gebruiker een toets indrukt en een <xref:System.Windows.Forms.Control.KeyUp>gebeurtenis treedt op wanneer de gebruiker een toets loslaat.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> Wanneer de gebruiker een toets ingedrukt houdt, dubbele <xref:System.Windows.Forms.Control.KeyDown>en <xref:System.Windows.Forms.Control.KeyPress>gebeurtenissen telkens wanneer het teken wordt herhaald.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> Een <xref:System.Windows.Forms.Control.KeyUp>gebeurtenis wordt gegenereerd na de release.</xref:System.Windows.Forms.Control.KeyUp>       Met elk <xref:System.Windows.Forms.Control.KeyPress>gebeurtenis, een KeyPressEventArgs wordt doorgegeven.</xref:System.Windows.Forms.Control.KeyPress> Een <xref:System.Windows.Forms.KeyEventArgs>wordt doorgegeven met elk <xref:System.Windows.Forms.Control.KeyDown>en <xref:System.Windows.Forms.Control.KeyUp>gebeurtenis.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.KeyEventArgs> Een <xref:System.Windows.Forms.KeyEventArgs>geeft aan of de aanpassingsfunctie sleutels (CTRL, SHIFT of ALT) zijn ingedrukt samen met een andere sleutel.</xref:System.Windows.Forms.KeyEventArgs> (Deze informatie aanpassingsfunctie kan ook worden verkregen via de <xref:System.Windows.Forms.Control.ModifierKeys%2A>eigenschap van de <xref:System.Windows.Forms.Control>klasse)</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.ModifierKeys%2A>       Stel <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>naar `true` annuleren de `KeyPress` gebeurtenis.</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> Zo blijven het besturingselement van het verwerken van de toets te drukken.      > [!NOTE] > Sommige besturingselementen verwerkt bepaalde toetsaanslagen op <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> Bijvoorbeeld: <xref:System.Windows.Forms.RichTextBox>verwerkt de Enter-toets voordat <xref:System.Windows.Forms.Control.KeyPress>wordt aangeroepen.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.RichTextBox> In dergelijke gevallen kunt u niet annuleren de <xref:System.Windows.Forms.Control.KeyPress>gebeurtenis, en de belangrijkste streek van moet worden geannuleerd <xref:System.Windows.Forms.Control.KeyDown>in plaats daarvan.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress>       Zie voor meer informatie over het gebeurtenismodel [gebeurtenissen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.k_0_1.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.k_0_1.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_1.vb)]  \n  \n You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#2](~/add/codesnippet/cpp/t-system.windows.forms.k_0_2.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#2](~/add/codesnippet/csharp/t-system.windows.forms.k_0_2.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_2.vb)]  \n  \n When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyPressEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;> </xref> klasse."
  remarks: "Gebruik de <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>eigenschap ophalen van de huidige status van de sleutels aanpassingsfunctie.</xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>"
  example:
  - The following example displays a message box that shows the current state of the SHIFT key.
  syntax:
    content: public KeyPressEventArgs (char keyChar);
    parameters:
    - id: keyChar
      type: System.Char
      description: "De ASCII-teken overeenkomt met de toets ingedrukt voor de gebruiker."
  overload: System.Windows.Forms.KeyPressEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of de <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> gebeurtenis is verwerkt."
  remarks: "Als de gebeurtenis niet verwerkt wordt, wordt deze wordt verzonden naar het besturingssysteem voor de standaardverwerking. Handled ingesteld op `true` annuleren van de `KeyPress` gebeurtenis."
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_4_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_4_1.cpp)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebeurtenis wordt verwerkt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeyPressEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  id: KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Opgehaald of ingesteld van het teken dat overeenkomt met de toets ingedrukt."
  remarks: "Gebruik de eigenschap KeyChar op voorbeeld toetsaanslagen tijdens runtime en toetsaanslagen onder speciale runtime-omstandigheden wijzigen. U kunt bijvoorbeeld KeyChar gebruiken niet-numerieke toetsen uitschakelen wanneer de gebruiker in een ZIP-code, alle alfabetische toetsaanslagen wijzigen om hoofdletters in een gegevensveld voor de vermelding op of bewaak het toetsenbord of andere belangrijke invoerapparaat voor specifieke toetsencombinaties.       U kunt ophalen of instellen van de volgende sleutels: - a-z, A-Z.      -CTRL.      -Leestekens.      -Sleutels, zowel aan de bovenkant van het toetsenbord en op het numerieke toetsenblok nummer.      -INVOEREN.       U kunt geen ophalen of instellen van de volgende sleutels:-de TAB-toets.      -INVOEGEN en verwijderen.      -STARTPAGINA.      -END.      -PAGE UP en PAGE DOWN.      F1-F2.      -ALT.      -Pijltoetsen.      > [!NOTE] > Voor informatie over het vaststellen van een van de hierboven genoemde niet teken-sleutels, Zie de <xref:System.Windows.Forms.KeyEventArgs>klasse.</xref:System.Windows.Forms.KeyEventArgs>      -"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_2_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_2_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_2_1.cpp)]"
  syntax:
    content: public char KeyChar { get; set; }
    return:
      type: System.Char
      description: "De ASCII-teken die is samengesteld. Bijvoorbeeld, als de gebruiker op SHIFT + K drukt, retourneert deze eigenschap een hoofdletters K."
  overload: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs.KeyPressEventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.Handled*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
