### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptSerializer
  id: JavaScriptSerializer
  children:
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  - System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  - System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  langs:
  - csharp
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer
  fullName: System.Web.Script.Serialization.JavaScriptSerializer
  type: Class
  summary: '[Json.NET](http://www.newtonsoft.com/json) moet gebruikte serialisatie en deserialisatie. Biedt functionaliteit voor serialisatie en deserialisatie voor AJAX-toepassingen.'
  remarks: "The JavaScriptSerializer class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server. You cannot access that instance of the serializer. However, this class exposes a public API. Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.  \n  \n To serialize an object, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method. To deserialize a JSON string, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> or <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods. To serialize and deserialize types that are not natively supported by JavaScriptSerializer, implement custom converters by using the <xref:System.Web.Script.Serialization.JavaScriptConverter> class. Then register the converters by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.  \n  \n## Mapping Between Managed Types and JSON  \n The following table shows the mapping between managed types and JSON for the serialization process. These managed types are natively supported by JavaScriptSerializer. When you are deserializing from a JSON string to a managed type, the same mapping applies. However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.  \n  \n> [!NOTE]\n>  A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.  \n  \n|Managed type|JSON equivalent|  \n|------------------|---------------------|  \n|<xref:System.String> (UTF-8 encoding only).|String|  \n|<xref:System.Char>|String|  \n|Single null char (such as, \\0 )|Null|  \n|<xref:System.Boolean>|Boolean. Represented in JSON as `true` or `false`|  \n|`null` (`null` object references and <xref:System.Nullable> value types).|A string value of null|  \n|<xref:System.DBNull>|A string value of null|  \n|Primitive numeric (or numeric-compatible) types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, and <xref:System.Single>. The culture-invariant string representation is used.|Number|  \n|<xref:System.DateTime>|Date object, represented in JSON as \"\\\\/Date(number of ticks)\\\\/\". The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.<br /><br /> The maximum supported date value is <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM) and the minimum supported date value is <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  \n|Enumerations of integer type|Integer equivalent of the enumeration value|  \n|Types that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName> that are not also implementations of <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.Generic.List%601>.|Array that uses JSON array syntax|  \n|Types that implement <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Hashtable>.|JavaScript object that uses JSON dictionary syntax|  \n|Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.<br /><br /> Note that public write-only properties, public property or public field attributes marked with <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, and public indexed properties in these types are ignored.|JavaScript object that uses JSON dictionary syntax. A special metadata property named \"__type\" is included to ensure correct deserialization. Make sure that public instance properties have get and set accessors to ensure correct deserialization.|  \n|<xref:System.Guid>|String representation of a GUID|  \n|<xref:System.Uri>|String representation of the return value of <xref:System.Uri.GetComponents%2A>|"
  example:
  - "The first example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/csharp/t-system.web.script.seri_1_1.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_1.vb)]  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/csharp/t-system.web.script.seri_1_2.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_2.vb)]  \n  \n The next example shows a more complicated and complete project that uses the JavaScriptSerializer class to save and restore the state of an object by using JSON serialization. This code uses a custom converter that is provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \n  \n [!code-vb[System.Web.Script.Serialization#4](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_3.aspx)]\n [!code-cs[System.Web.Script.Serialization#4](~/add/codesnippet/csharp/t-system.web.script.seri_1_3.aspx)]"
  syntax:
    content: public class JavaScriptSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klasse waarvoor geen type-resolver."
  remarks: "Een exemplaar van de <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse zonder een type conflictoplosser geen eigenschappen voor metagegevens bevat (met de naam &quot;__type&quot;) in de geserialiseerde JSON-tekenreeks.</xref:System.Web.Script.Serialization.JavaScriptSerializer> De eigenschap van een type metagegevens wordt gebruikt door de <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>en <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>methoden om te bepalen van de juiste beheerde type die de JSON-tekenreeks geconverteerd.</xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Zie voor informatie over het type resolvers de <xref:System.Web.Script.Serialization.JavaScriptTypeResolver>klasse.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver>"
  syntax:
    content: public JavaScriptSerializer ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  id: '#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klasse met een aangepast type-resolver."
  remarks: "Wanneer is het serialiseren van een object, de <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse gebruikt de `resolver` parameter om te bepalen van de juiste waarde te nemen in de geserialiseerde JSON-tekenreeks voor de eigenschap type metagegevens (&quot;__type&quot;).</xref:System.Web.Script.Serialization.JavaScriptSerializer> Op dezelfde manier als de <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse is bij het deserialiseren van een JSON-tekenreeks, Hiermee wordt de eigenschapswaarde voor type metagegevens naar de juiste beheerde type opgelost met behulp van het exemplaar resolver.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       U kunt instellen de `resolver` -parameter voor `null`, die gelijk is aan het aanroepen van de <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>constructor.</xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>       Het exemplaar van <xref:System.Web.Script.Serialization.JavaScriptSerializer>dat wordt gebruikt door de asynchrone communicatie-laag voor het aanroepen van webservices van scripts voor de client via een speciaal type-resolver.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Dit type resolver beperkt de typen die kunnen worden gedeserialiseerd in methodehandtekening van de webservice of de waarden die u hebt gedefinieerd de <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>toegepast.</xref:System.Web.Script.Services.GenerateScriptTypeAttribute> U kunt deze conflictoplosser ingebouwd type niet via programmacode wijzigen.      > [!IMPORTANT] > Met een exemplaar van dit object is geïnitialiseerd met een aangepast type-omzetter kan een beveiligingsrisico vormen. Gebruik dit object alleen met vertrouwde gegevens. Zie voor meer informatie [niet-vertrouwde gegevens beveiligingsrisico&quot;s](http://go.microsoft.com/fwlink/?LinkId=330378)."
  syntax:
    content: public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);
    parameters:
    - id: resolver
      type: System.Web.Script.Serialization.JavaScriptTypeResolver
      description: "Het object dat aangepast type-resolver."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  id: ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Het opgegeven object wordt geconverteerd naar het opgegeven type."
  remarks: "Wanneer de <xref:System.Web.Script.Serialization.JavaScriptSerializer>exemplaar is een type waarvoor een aangepaste converter is geregistreerd, het aanroepen van de serialisatiefunctie serialiseren van de <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>methode de woordenlijst van naam/waarde-paren die wordt geconverteerd naar een tekenreeks in JSON-indeling verkrijgen.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       De <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>methode kunt ook uitzonderingen genereert de objectgrafiek is te complex of exemplaren van geregistreerd <xref:System.Web.Script.Serialization.JavaScriptConverter>converter recursie veroorzaakt.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public object ConvertToType (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object te converteren."
    - id: targetType
      type: System.Type
      description: "Het type dat het object te converteren."
    return:
      type: System.Object
      description: "De geserialiseerde JSON-tekenreeks."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De resulterende tekenreeks voor JSON-indeling is groter dan de waarde van <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - of - <code> obj </code> bevat een kringverwijzing. Een kringverwijzing treedt op wanneer een onderliggend object een verwijzing naar een bovenliggend object heeft en het bovenliggende object een verwijzing naar het onderliggende object."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De recursielimiet gedefinieerd door <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>is overschreden.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  id: ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T ConvertToType<T> (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Moet worden toegevoegd."
    return:
      type: T
      description: "Moet worden toegevoegd."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  id: Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Converteert een JSON-indeling naar een object van het opgegeven type."
  remarks: "Deze methode deserialisatie probeert niet converteren van de hoofdmap van de objectgrafiek tot een bepaald type, de manier die de <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>webmethode.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object Deserialize (string input, Type targetType);
    parameters:
    - id: input
      type: System.String
      description: "De JSON-tekenreeks te deserialiseren."
    - id: targetType
      type: System.Type
      description: "Het type van het resulterende object."
    return:
      type: System.Object
      description: "Het object gedeserialiseerd."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De lengte van <code> input </code> overschrijdt de waarde van <> </> *>.       - of - de recursielimiet gedefinieerd door <> </> *> is overschreden.       - of - <code> input </code> bevat een onverwachte tekenreeks.       - of - <code> input </code> is een dictionary-type en de sleutelwaarde van een niet-tekenreeks is opgetreden.       - of - <code> input </code> bevat definities van lid die niet beschikbaar op het doeltype."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>bevat een &quot;__type&quot;-eigenschap die aangeeft een aangepast type, maar de type-omzetter is momenteel gekoppeld aan de serializer kan een bijbehorende beheerde type niet vinden.       - of - <code>input</code> bevat een &quot;__type&quot;-eigenschap die een aangepast type, maar het resultaat van het deserialiseren van de bijbehorende JSON-tekenreeks kan niet worden toegewezen aan de verwachte doeltype aangeeft.       - of - <code>input</code> bevat een &quot;__type&quot;-eigenschap een geeft <xref:System.Object> of een niet-instantiable type (bijvoorbeeld een abstract type of een interface).       - of - er is een poging gedaan een JSON-matrix converteren naar een matrix-achtige beheerde type dat niet wordt ondersteund voor gebruik als een JSON-deserialisatie-doel.       - of - het is niet mogelijk om te converteren <code>input</code> naar het doeltype."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  id: Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T Deserialize<T> (string input);
    parameters:
    - id: input
      type: System.String
      description: "Moet worden toegevoegd."
    return:
      type: T
      description: "Moet worden toegevoegd."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  id: DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "De opgegeven JSON-tekenreeks omgezet in een objectgrafiek."
  remarks: "Deze methode deserialisatie probeert niet converteren van de hoofdmap van de objectgrafiek tot een bepaald type, net als bij de <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>methode.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object DeserializeObject (string input);
    parameters:
    - id: input
      type: System.String
      description: "De JSON-tekenreeks die moet worden gedeserialiseerd."
    return:
      type: System.Object
      description: "Het object gedeserialiseerd."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> input </code> lengte overschrijdt de waarde van <> </> *>.       - of - de recursielimiet gedefinieerd door <> </> *> is overschreden.       - of - <code> input </code> bevat een onverwachte tekenreeks.       - of - <code> input </code> is een dictionary-type en de sleutelwaarde van een niet-tekenreeks is opgetreden.       - of - <code> input </code> bevat definities van lid die niet beschikbaar op het doeltype."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>bevat een &quot;__type&quot;-eigenschap die aangeeft een aangepast type, maar de type-omzetter is momenteel gekoppeld aan de serializer kan een bijbehorende beheerde type niet vinden.       - of - <code>input</code> bevat een &quot;__type&quot;-eigenschap die een aangepast type, maar het resultaat van het deserialiseren van de bijbehorende JSON-tekenreeks kan niet worden toegewezen aan de verwachte doeltype aangeeft.       - of - <code>input</code> bevat een &quot;__type&quot;-eigenschap een geeft <xref:System.Object> of een niet-instantiable type (bijvoorbeeld een abstract type of een interface).       - of - er is een poging gedaan een JSON-matrix converteren naar een matrix-achtige beheerde type dat niet wordt ondersteund voor gebruik als een JSON-deserialisatie-doel.       - of - het is niet mogelijk om te converteren <code>input</code> naar het doeltype."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  id: MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Opgehaald of ingesteld van de maximale lengte van de JSON-tekenreeksen die worden geaccepteerd door de <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klasse."
  remarks: 'De waarde van de eigenschap MaxJsonLength geldt alleen als u expliciet een exemplaar van de <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse maken.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Gebruik de `jsonSerialization` element van het configuratiebestand voor de maximale lengte voor de interne serializer-exemplaar dat wordt gebruikt door de asynchrone communicatielaag ingesteld. Zie voor meer informatie over de configuratie-elementen voor serialisatie [hoe: ASP.NET-Services configureren in Microsoft Ajax](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public int MaxJsonLength { get; set; }
    return:
      type: System.Int32
      description: "De maximale lengte van JSON-tekenreeksen. De standaardwaarde is 2097152 tekens die gelijk is aan 4 MB aan gegevens voor Unicode-tekenreeks."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De eigenschap is ingesteld op een waarde die kleiner zijn dan één."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  id: RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Opgehaald of ingesteld van de limiet voor het aantal objectniveaus worden verwerkt met beperkingen."
  remarks: "De eigenschap RecursionLimit verwijst naar het aantal niveaus in de objecthiërarchie dat <xref:System.Web.Script.Serialization.JavaScriptSerializer>verwerkt in de volgende gevallen:: wanneer de <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse is bij het deserialiseren van een JSON-tekenreeks.</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Web.Script.Serialization.JavaScriptSerializer>      -Wanneer de <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse roulatie van een objectgrafiek is tijdens de serialisatie.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       De waarde van RecursionLimit geldt alleen als u expliciet een exemplaar van de <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse maken.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Gebruik de `jsonSerialization` element van het configuratiebestand in te stellen van het aantal objectniveaus moeten worden verwerkt voor de interne serializer-exemplaar dat wordt gebruikt door de laag asynchrone communicatie. Zie voor meer informatie over de configuratie-elementen voor serialisatie [hoe: ASP.NET-Services configureren in Microsoft Ajax](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int RecursionLimit { get; set; }
    return:
      type: System.Int32
      description: "Het aantal objectniveaus. De standaardwaarde is 100."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De eigenschap is ingesteld op een waarde die kleiner zijn dan één."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  id: RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Registreert een aangepast conversieprogramma met de <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> exemplaar."
  remarks: "U kunt een of meer aangepaste converters met registreren een <xref:System.Web.Script.Serialization.JavaScriptSerializer>exemplaar met behulp van de methode RegisterConverters.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Wanneer u aangepaste converters zijn geregistreerd, <xref:System.Web.Script.Serialization.JavaScriptSerializer>maakt gebruik van de conversieprogramma zowel begeleide typen serialiseren en deserialiseren van JSON-tekenreeksen op beheerde typen.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Meerdere conversieprogramma&quot;s kunnen worden geregistreerd met dezelfde <xref:System.Web.Script.Serialization.JavaScriptSerializer>exemplaar en deze conversieprogramma&quot;s kunnen erop wijzen dat ondersteuning voor hetzelfde type.</xref:System.Web.Script.Serialization.JavaScriptSerializer> De laatste converter dat is geregistreerd voor een specifiek type is als gevolg hiervan degene die wordt gebruikt door <xref:System.Web.Script.Serialization.JavaScriptSerializer>voor het serialiseren van het type.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Zie voor meer informatie over aangepaste conversieprogramma&quot;s, de <xref:System.Web.Script.Serialization.JavaScriptConverter>klasse.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example shows how to register a custom converter with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer>class.  \n  \n [!code-vb[System.Web.Script.Serialization#1](~/add/codesnippet/visualbasic/0b038c1f-1fc5-4957-9daf-_1.aspx)]\n [!code-cs[System.Web.Script.Serialization#1](~/add/codesnippet/csharp/0b038c1f-1fc5-4957-9daf-_1.aspx)]"
  syntax:
    content: public void RegisterConverters (System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter> converters);
    parameters:
    - id: converters
      type: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
      description: "Een matrix met de aangepaste conversieprogramma&quot;s worden geregistreerd."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>converters</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Een object wordt omgezet in een JSON-tekenreeks."
  remarks: "Wanneer de <xref:System.Web.Script.Serialization.JavaScriptSerializer>exemplaar is een type waarvoor een aangepaste converter is geregistreerd, het aanroepen van de serialisatiefunctie serialiseren van de <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>methode om op te halen van de woordenlijst van naam/waarde-paren die wordt geconverteerd naar een JSON-tekenreeks.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       De methode serialiseren kunt ook uitzonderingen genereert de objectgrafiek is te complex of exemplaren van geregistreerd <xref:System.Web.Script.Serialization.JavaScriptConverter>converter recursie veroorzaakt.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Serialize (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object te serialiseren."
    return:
      type: System.String
      description: "De geserialiseerde JSON-tekenreeks."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De resulterende JSON-tekenreeks is groter dan de waarde van <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - of - <code> obj </code> bevat een kringverwijzing. Een kringverwijzing treedt op wanneer een onderliggend object een verwijzing naar een bovenliggend object heeft en het bovenliggende object een verwijzing naar het onderliggende object."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De recursielimiet gedefinieerd door <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>is overschreden.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  id: Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Een object serialiseert en de resulterende JSON-tekenreeks schrijft naar de opgegeven <xref:System.Text.StringBuilder>object.</xref:System.Text.StringBuilder>"
  remarks: "Wanneer de <xref:System.Web.Script.Serialization.JavaScriptSerializer>exemplaar is een type waarvoor een aangepaste converter is geregistreerd, het aanroepen van de serialisatiefunctie serialiseren van de <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>methode om op te halen van de woordenlijst van naam/waarde-paren die wordt geconverteerd naar een JSON-tekenreeks.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       De <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>methode kunt ook uitzonderingen genereert de objectgrafiek is te complex of exemplaren van geregistreerd <xref:System.Web.Script.Serialization.JavaScriptConverter>converter recursie veroorzaakt.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public void Serialize (object obj, System.Text.StringBuilder output);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object te serialiseren."
    - id: output
      type: System.Text.StringBuilder
      description: "De <xref:System.Text.StringBuilder>object dat wordt gebruikt voor het schrijven van de JSON-tekenreeks.</xref:System.Text.StringBuilder>"
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De resulterende JSON-tekenreeks is groter dan de waarde van <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - of - <code> obj </code> bevat een kringverwijzing. Een kringverwijzing treedt op wanneer een onderliggend object een verwijzing naar een bovenliggend object heeft en het bovenliggende object een verwijzing naar het onderliggende object."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De recursielimiet gedefinieerd door <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>is overschreden.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  parent: System.Web.Script.Serialization
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
- uid: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JavaScriptConverter>
  nameWithType: IEnumerable<JavaScriptConverter>
  fullName: System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.Script.Serialization.JavaScriptConverter
    name: JavaScriptConverter
    nameWithType: JavaScriptConverter
    fullName: JavaScriptConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
- uid: System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer.JavaScriptSerializer
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType
  nameWithType: JavaScriptSerializer.ConvertToType
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType<T>
  nameWithType: JavaScriptSerializer.ConvertToType<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize
  nameWithType: JavaScriptSerializer.Deserialize
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize<T>
  nameWithType: JavaScriptSerializer.Deserialize<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject
  nameWithType: JavaScriptSerializer.DeserializeObject
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters
  nameWithType: JavaScriptSerializer.RegisterConverters
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize
  nameWithType: JavaScriptSerializer.Serialize
