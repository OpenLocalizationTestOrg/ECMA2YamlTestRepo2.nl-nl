### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableCollection
  id: DataTableCollection
  children:
  - System.Data.DataTableCollection.Add
  - System.Data.DataTableCollection.Add(System.Data.DataTable)
  - System.Data.DataTableCollection.Add(System.String)
  - System.Data.DataTableCollection.Add(System.String,System.String)
  - System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  - System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  - System.Data.DataTableCollection.Clear
  - System.Data.DataTableCollection.CollectionChanged
  - System.Data.DataTableCollection.CollectionChanging
  - System.Data.DataTableCollection.Contains(System.String)
  - System.Data.DataTableCollection.Contains(System.String,System.String)
  - System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  - System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  - System.Data.DataTableCollection.IndexOf(System.String)
  - System.Data.DataTableCollection.IndexOf(System.String,System.String)
  - System.Data.DataTableCollection.Item(System.Int32)
  - System.Data.DataTableCollection.Item(System.String)
  - System.Data.DataTableCollection.Item(System.String,System.String)
  - System.Data.DataTableCollection.List
  - System.Data.DataTableCollection.Remove(System.Data.DataTable)
  - System.Data.DataTableCollection.Remove(System.String)
  - System.Data.DataTableCollection.Remove(System.String,System.String)
  - System.Data.DataTableCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataTableCollection
  nameWithType: DataTableCollection
  fullName: System.Data.DataTableCollection
  type: Class
  summary: "Hiermee geeft u de verzameling van tabellen voor de <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  remarks: "De DataTableCollection bevat alle <xref:System.Data.DataTable>objecten voor een bepaalde <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Voor toegang tot de DataTableCollection van een <xref:System.Data.DataSet>, gebruiken de <xref:System.Data.DataSet.Tables%2A>eigenschap.</xref:System.Data.DataSet.Tables%2A> </xref:System.Data.DataSet>       De DataTableCollection gebruikt methoden zoals <xref:System.Data.DataTableCollection.Add%2A>, <xref:System.Data.DataTableCollection.Clear%2A>, en <xref:System.Data.DataTableCollection.Remove%2A>voor het beheren van de items in de verzameling.</xref:System.Data.DataTableCollection.Remove%2A> </xref:System.Data.DataTableCollection.Clear%2A> </xref:System.Data.DataTableCollection.Add%2A>       Gebruik de <xref:System.Data.DataTableCollection.Contains%2A>methode om te bepalen of een bepaalde tabel (opgegeven door index of naam) in de verzameling.</xref:System.Data.DataTableCollection.Contains%2A>       Gebruik om te navigeren uit één tabel naar een andere, de <xref:System.Data.DataTable.ChildRelations%2A>of <xref:System.Data.DataTable.ParentRelations%2A>eigenschap van de <xref:System.Data.DataTable>voor toegang tot de verzameling van <xref:System.Data.DataRelation>objecten.</xref:System.Data.DataRelation> </xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataTable.ChildRelations%2A> U kunt ook de <xref:System.Data.DataSet.Relations%2A>eigenschap om te navigeren door de bovenliggende/onderliggende relatie tussen de `DataTables` in een bepaalde <xref:System.Data.DataSet>verzameling.</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>"
  example:
  - "The first procedure in this example retrieves the DataTableCollection of a <xref:System.Data.DataSet> and prints the value of each column, in each row, of each table. The second procedure creates a new <xref:System.Data.DataTable> with two columns, and adds it to the DataTableCollection.  \n  \n [!code-cs[Classic WebData DataTableCollection Example#1](~/add/codesnippet/csharp/t-system.data.datatablec_1.cs)]\n [!code-vb[Classic WebData DataTableCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datatablec_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ListBindable(false)]

      public sealed class DataTableCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add
  id: Add
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Maakt een nieuw <xref href=&quot;System.Data.DataTable&quot;> </xref> met behulp van een standaardnaam object en voegt het toe aan de verzameling."
  remarks: "Omdat er geen naam is opgegeven, de `DataTable` wordt gemaakt met behulp van een standaardnaam ten opzichte van de volgorde van toevoeging. De standaardnaam is &quot;Table1.&quot;       De <xref:System.Data.DataTableCollection.CollectionChanged>gebeurtenis treedt op wanneer een tabel wordt toegevoegd aan de verzameling.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds three new <xref:System.Data.DataTable> objects to the <xref:System.Data.DataTableCollection> using the <xref:System.Data.DataTableCollection.Add%2A> method without arguments.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_8_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_8_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Het zojuist gemaakte <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  overload: System.Data.DataTableCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  id: Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Voegt de opgegeven <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> aan de verzameling."
  remarks: "De <xref:System.Data.DataTableCollection.CollectionChanged>gebeurtenis treedt op wanneer een tabel wordt toegevoegd aan de verzameling.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example creates a <xref:System.Data.DataTable> and adds it to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_4_1.cs)]"
  syntax:
    content: public void Add (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "De <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> object om toe te voegen."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De opgegeven waarde voor de tabel is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De tabel al behoort tot deze verzameling of behoort tot een andere verzameling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Een tabel in de verzameling heeft dezelfde naam. De vergelijking is niet hoofdlettergevoelig."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Maakt een <xref href=&quot;System.Data.DataTable&quot;> </xref> object met behulp van de opgegeven naam en voegt het toe aan de verzameling."
  remarks: "Wanneer een van beide `null` of een lege tekenreeks (&quot;&quot;) wordt doorgegeven, wordt een standaardnaam krijgt op het zojuist gemaakte `DataTable`. Deze naam is gebaseerd op de volgorde waarin de tabel is toegevoegd (&quot;Table1&quot;, &quot;Tabel2&quot;, enzovoort).       De <xref:System.Data.DataTableCollection.CollectionChanged>gebeurtenis treedt op als de tabel is toegevoegd aan de verzameling.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_9_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_9_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam geven het gemaakte <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "Het zojuist gemaakte <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Een tabel in de verzameling heeft dezelfde naam. (De vergelijking is niet hoofdlettergevoelig)."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Maakt een <xref href=&quot;System.Data.DataTable&quot;> </xref> object met behulp van de opgegeven naam en voegt het toe aan de verzameling."
  remarks: "Wanneer een van beide `null` of een lege tekenreeks (&quot;&quot;) wordt doorgegeven, wordt een standaardnaam krijgt op het zojuist gemaakte `DataTable`. Deze naam is gebaseerd op de volgorde waarin de tabel is toegevoegd (&quot;Table1&quot;, &quot;Tabel2&quot;, enzovoort).       De <xref:System.Data.DataTableCollection.CollectionChanged>gebeurtenis treedt op als de tabel is toegevoegd aan de verzameling.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "De naam geven het gemaakte <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    - id: tableNamespace
      type: System.String
      description: "De naamruimte geven het gemaakte <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "Het zojuist gemaakte <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Een tabel in de verzameling heeft dezelfde naam. (De vergelijking is niet hoofdlettergevoelig)."
  platform:
  - net462
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  id: AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopieert de elementen van de opgegeven <xref href=&quot;System.Data.DataTable&quot;> </xref> matrix aan het einde van de verzameling."
  remarks: ''
  example:
  - "The following example creates two <xref:System.Data.DataTable> objects and adds them to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_2_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_2_1.cs)]"
  syntax:
    content: public void AddRange (System.Data.DataTable[] tables);
    parameters:
    - id: tables
      type: System.Data.DataTable[]
      description: "De matrix van <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten toevoegen aan de verzameling."
  overload: System.Data.DataTableCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  id: CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt gecontroleerd of de opgegeven <xref href=&quot;System.Data.DataTable&quot;> </xref> object kan worden verwijderd uit de verzameling."
  remarks: ''
  example:
  - "The following example uses the CanRemove to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_5_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_5_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "De <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> in de verzameling worden gecontroleerd tegen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de tabel kan worden verwijderd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Clear
  id: Clear
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wist u de verzameling van alle <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten."
  remarks: "Verwijderen van een bepaalde `DataTable` uit de verzameling gebruiken de <xref:System.Data.DataTableCollection.Remove%2A>methode.</xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example gets the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>, and then clears the collection of all tables.  \n  \n [!code-cs[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_10_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_10_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataTableCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Deze gebeurtenis treedt op nadat de <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> wordt gewijzigd vanwege <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten worden toegevoegd of verwijderd."
  remarks: 'Zie voor meer informatie over het verwerken van gebeurtenissen [KROONTJESPEN: gebeurtenissen verbruikt](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates how to use the CollectionChanged event.  \n  \n [!code-vb[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_0_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_0_1.cs)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanging
  id: CollectionChanging
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Deze gebeurtenis treedt op wanneer de <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> verandert vanwege <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten worden toegevoegd of verwijderd."
  remarks: 'Zie voor meer informatie over het verwerken van gebeurtenissen [KROONTJESPEN: gebeurtenissen verbruikt](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates how to use the CollectionChanging event.  \n  \n [!code-cs[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanging;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een waarde die aangeeft of een <xref href=&quot;System.Data.DataTable&quot;> </xref> object met de opgegeven naam bestaat in de verzameling."
  remarks: "U de naam van de <xref:System.Data.DataTable>object met behulp van de <xref:System.Data.DataTable.TableName%2A>eigenschap.</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable> Als u een <xref:System.Data.DataTable>aan de verzameling met de <xref:System.Data.DataTableCollection.Add%2A>methode, waarbij geen argumenten doorgegeven in de tabel krijgt een standaardnaam op basis van de volgorde waarin de tabel is toegevoegd (&quot;Table1&quot;, &quot;Tabel2&quot;, enzovoort).</xref:System.Data.DataTableCollection.Add%2A> </xref:System.Data.DataTable>       Ophalen van de index van een <xref:System.Data.DataTable>, gebruiken de <xref:System.Data.DataTableCollection.IndexOf%2A>methode.</xref:System.Data.DataTableCollection.IndexOf%2A> </xref:System.Data.DataTable>      > [!NOTE] > Retourneert `false` wanneer twee of meer tabellen hebben dezelfde naam maar verschillende naamruimten. De aanroep is niet mogelijk als er dubbelzinnigheid wanneer die overeenkomt met een tabelnaam naar exact één tabel."
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_14_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_14_1.vb)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> vinden."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven tabel bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  id: Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een waarde die aangeeft of een <xref href=&quot;System.Data.DataTable&quot;> </xref> object met de opgegeven naam en tabel naamruimte bestaat in de verzameling."
  remarks: "U de naam van de <xref:System.Data.DataTable>object met behulp van de <xref:System.Data.DataTable.TableName%2A>eigenschap.</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable> Als u een <xref:System.Data.DataTable>aan de verzameling met de <xref:System.Data.DataTableCollection.Add%2A>methode, waarbij geen argumenten doorgegeven in de tabel krijgt een standaardnaam op basis van de volgorde waarin de tabel is toegevoegd (&quot;Table1&quot;, &quot;Tabel2&quot;, enzovoort).</xref:System.Data.DataTableCollection.Add%2A> </xref:System.Data.DataTable>      > [!NOTE] > Retourneert `false` wanneer twee of meer tabellen hebben dezelfde naam maar verschillende naamruimten. De aanroep is niet mogelijk als er dubbelzinnigheid wanneer die overeenkomt met een tabelnaam naar exact één tabel.       Ophalen van de index van een <xref:System.Data.DataTable>, gebruiken de <xref:System.Data.DataTableCollection.IndexOf%2A>methode.</xref:System.Data.DataTableCollection.IndexOf%2A> </xref:System.Data.DataTable>"
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_6_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_6_1.vb)]"
  syntax:
    content: public bool Contains (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> vinden."
    - id: tableNamespace
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> naamruimte in te zoeken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven tabel bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  id: CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Alle elementen van de huidige kopieert <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> naar een eendimensionale <xref:System.Array>, te beginnen bij de opgegeven bestemming matrixindex.</xref:System.Array>"
  remarks: "Deze methode kan worden overschreven door een afgeleide klasse."
  syntax:
    content: public void CopyTo (System.Data.DataTable[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataTable[]
      description: "De eendimensionale <xref:System.Array>kopiëren van de huidige <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> elementen in van het object.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "De bestemming <xref:System.Array>index om te beginnen met het kopiëren naar.</xref:System.Array>"
  overload: System.Data.DataTableCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  id: IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De index van de opgegeven opgehaald <xref href=&quot;System.Data.DataTable&quot;> </xref> object."
  remarks: "Gebruik de methode IndexOf om te bepalen van de exacte index van een tabel.       Voordat u IndexOf aanroept, kunt u testen op de aanwezigheid van een tabel (opgegeven door index of naam) met behulp van de <xref:System.Data.DataTableCollection.Contains%2A>methode.</xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example returns the index of each table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_3_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_3_1.vb)]"
  syntax:
    content: public int IndexOf (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "De <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> om naar te zoeken."
    return:
      type: System.Int32
      description: "De op nul gebaseerde index van de tabel of -1 als de tabel is niet gevonden in de verzameling."
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de index in de verzameling van de <xref href=&quot;System.Data.DataTable&quot;> </xref> object met de opgegeven naam."
  remarks: "U de naam van de `DataTable` object met behulp van de <xref:System.Data.DataTable.TableName%2A>eigenschap.</xref:System.Data.DataTable.TableName%2A>"
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_12_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_12_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName);
    parameters:
    - id: tableName
      type: System.String
      description: "De naam van de <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> object om te zoeken."
    return:
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> met de opgegeven naam of -1 als de tabel bestaat niet in de verzameling.       <div class=&quot;alert NOTE&quot;>    Retourneert-1 wanneer twee of meer tabellen dezelfde hebben naam maar verschillende naamruimten. De aanroep is niet mogelijk als er dubbelzinnigheid wanneer die overeenkomt met een tabelnaam naar exact één tabel.      </div>"
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  id: IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de index in de verzameling van het opgegeven <xref href=&quot;System.Data.DataTable&quot;> </xref> object."
  remarks: "U de naam van de <xref:System.Data.DataTable>object met behulp van de <xref:System.Data.DataTable.TableName%2A>eigenschap.</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable>"
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_11_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_11_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName, string tableNamespace);
    parameters:
    - id: tableName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> object om te zoeken."
    - id: tableNamespace
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> naamruimte in te zoeken."
    return:
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref href=&quot;System.Data.DataTable&quot;> </xref> met de opgegeven naam of -1 als de tabel bestaat niet in de verzameling."
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.DataTable&quot;> </xref> object in de opgegeven index."
  remarks: "Gebruik de <xref:System.Data.DataTableCollection.Contains%2A>methode om te bepalen of een tabel met een specifieke index bestaat.</xref:System.Data.DataTableCollection.Contains%2A>       Als u de naam van een tabel, maar niet de index hebt, gebruikt u de <xref:System.Data.DataTableCollection.IndexOf%2A>methode om te retourneren van de index.</xref:System.Data.DataTableCollection.IndexOf%2A>"
  example:
  - "The following example retrieves a <xref:System.Data.DataTable> by its index.  \n  \n [!code-cs[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref href=&quot;System.Data.DataTable&quot;> </xref> vinden."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref>met de opgegeven index; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de <xref href=&quot;System.Data.DataTable&quot;> </xref> bestaat niet."
  overload: System.Data.DataTableCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Waarde voor de index is groter dan het aantal items in de verzameling."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.DataTable&quot;> </xref> object met de opgegeven naam."
  remarks: "Als een <xref:System.Data.DataTable>naam bestaat die overeenkomt met het geval van de zoekreeks, wordt geretourneerd.</xref:System.Data.DataTable> Anders een hoofdlettergevoelige zoekactie wordt uitgevoerd, en als een <xref:System.Data.DataTable>naam gevonden die overeenkomt met deze zoekopdracht, wordt geretourneerd.</xref:System.Data.DataTable>       Gebruik de <xref:System.Data.DataTableCollection.Contains%2A>methode om te bepalen of een tabel met een specifieke naam of index bestaat.</xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example retrieves a single table by name from the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> vinden."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> met de opgegeven naam; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de <xref href=&quot;System.Data.DataTable&quot;> </xref> bestaat niet."
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.DataTable&quot;> </xref> object met de opgegeven naam in de opgegeven naamruimte."
  syntax:
    content: public System.Data.DataTable this[string name, string tableNamespace] { get; }
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> vinden."
    - id: tableNamespace
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> naamruimte in te zoeken."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> met de opgegeven naam; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de <xref href=&quot;System.Data.DataTable&quot;> </xref> bestaat niet."
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.List
  id: List
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "Moet worden toegevoegd."
  overload: System.Data.DataTableCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  id: Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verwijdert de opgegeven <xref href=&quot;System.Data.DataTable&quot;> </xref> object uit de verzameling."
  remarks: "De <xref:System.Data.DataTableCollection.CollectionChanged>gebeurtenis treedt op wanneer een tabel is verwijderd.</xref:System.Data.DataTableCollection.CollectionChanged>       Om te bepalen of een bepaalde tabel bestaat en kan worden verwijderd voordat Functieselectie wordt aangeroepen verwijderen, gebruikt de <xref:System.Data.DataTableCollection.Contains%2A>en de <xref:System.Data.DataTableCollection.CanRemove%2A>methoden.</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.CanRemove%2A> method to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the Remove method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "De <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> te verwijderen."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De opgegeven waarde voor de tabel is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De tabel behoort niet tot deze verzameling.       - of - de tabel deel uitmaakt van een relatie."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Data.DataTable&quot;> </xref> object met de opgegeven naam van de verzameling."
  remarks: "De <xref:System.Data.DataTableCollection.CollectionChanged>gebeurtenis treedt op wanneer een tabel is verwijderd.</xref:System.Data.DataTableCollection.CollectionChanged>       Om te bepalen of een bepaalde tabel bestaat en kan worden verwijderd voordat Functieselectie wordt aangeroepen <xref:System.Data.DataTableCollection.Remove%2A>, gebruiken de <xref:System.Data.DataTableCollection.Contains%2A>en de <xref:System.Data.DataTableCollection.CanRemove%2A>methoden.</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A> </xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_7_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_7_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> object om te verwijderen."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De verzameling heeft geen een tabel met de opgegeven naam."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Data.DataTable&quot;> </xref> object met de opgegeven naam van de verzameling."
  remarks: "De <xref:System.Data.DataTableCollection.CollectionChanged>gebeurtenis treedt op wanneer een tabel is verwijderd.</xref:System.Data.DataTableCollection.CollectionChanged>       Om te bepalen of een bepaalde tabel bestaat en kan worden verwijderd voordat Functieselectie wordt aangeroepen <xref:System.Data.DataTableCollection.Remove%2A>, gebruiken de <xref:System.Data.DataTableCollection.Contains%2A>en de <xref:System.Data.DataTableCollection.CanRemove%2A>methoden.</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A> </xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_13_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_13_1.vb)]"
  syntax:
    content: public void Remove (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> object om te verwijderen."
    - id: tableNamespace
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> naamruimte in te zoeken."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De verzameling heeft geen een tabel met de opgegeven naam."
  platform:
  - net462
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Data.DataTable&quot;> </xref> object in de opgegeven index uit de verzameling."
  remarks: "De <xref:System.Data.DataTableCollection.CollectionChanged>gebeurtenis treedt op wanneer een tabel is verwijderd.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a table exists with the index 10. If so, the RemoveAt method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_15_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/csharp/m-system.data.datatablec_15_1.cs)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De index van de <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> te verwijderen."
  overload: System.Data.DataTableCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De verzameling heeft geen een tabel met de opgegeven index."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableCollection.Add
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
- uid: System.Data.DataTableCollection.Add(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableCollection.Clear
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
- uid: System.Data.DataTableCollection.CollectionChanged
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataTableCollection.CollectionChanging
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
- uid: System.Data.DataTableCollection.Contains(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
- uid: System.Data.DataTableCollection.Item(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
- uid: System.Data.DataTableCollection.Item(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
- uid: System.Data.DataTableCollection.List
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
- uid: System.Data.DataTableCollection.Remove(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
- uid: System.Data.DataTableCollection.Add*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add
  nameWithType: DataTableCollection.Add
- uid: System.Data.DataTableCollection.AddRange*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange
  nameWithType: DataTableCollection.AddRange
- uid: System.Data.DataTableCollection.CanRemove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataTableCollection.CanRemove
- uid: System.Data.DataTableCollection.Clear*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear
  nameWithType: DataTableCollection.Clear
- uid: System.Data.DataTableCollection.Contains*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains
  nameWithType: DataTableCollection.Contains
- uid: System.Data.DataTableCollection.CopyTo*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataTableCollection.CopyTo
- uid: System.Data.DataTableCollection.IndexOf*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataTableCollection.IndexOf
- uid: System.Data.DataTableCollection.Item*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item
  nameWithType: DataTableCollection.Item
- uid: System.Data.DataTableCollection.List*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
- uid: System.Data.DataTableCollection.Remove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove
  nameWithType: DataTableCollection.Remove
- uid: System.Data.DataTableCollection.RemoveAt*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataTableCollection.RemoveAt
