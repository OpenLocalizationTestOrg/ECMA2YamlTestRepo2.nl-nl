### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.ObjectSecurity
  id: ObjectSecurity
  children:
  - System.Security.AccessControl.ObjectSecurity.#ctor
  - System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  - System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  langs:
  - csharp
  name: ObjectSecurity
  nameWithType: ObjectSecurity
  fullName: System.Security.AccessControl.ObjectSecurity
  type: Class
  summary: "Biedt de mogelijkheid toegang tot objecten zonder directe manipulatie van toegangsbeheerlijsten (ACL&quot;s). Deze klasse is de abstracte basisklasse voor de <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> en <xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;> </xref> klassen."
  syntax:
    content: public abstract class ObjectSecurity
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ObjectSecurity()
  nameWithType: ObjectSecurity.ObjectSecurity()
  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> klasse."
  syntax:
    content: protected ObjectSecurity ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ObjectSecurity(CommonSecurityDescriptor)
  nameWithType: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)
  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> klasse."
  syntax:
    content: protected ObjectSecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);
    parameters:
    - id: securityDescriptor
      type: System.Security.AccessControl.CommonSecurityDescriptor
      description: "De <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>van de nieuwe <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> exemplaar."
  overload: System.Security.AccessControl.ObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ObjectSecurity(Boolean,Boolean)
  nameWithType: ObjectSecurity.ObjectSecurity(Boolean,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity(Boolean,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> klasse."
  syntax:
    content: protected ObjectSecurity (bool isContainer, bool isDS);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de nieuwe <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object is een containerobject."
    - id: isDS
      type: System.Boolean
      description: "True als de nieuwe <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object is een Active directory-object."
  overload: System.Security.AccessControl.ObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: ObjectSecurity.AccessRightType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Haalt de <xref:System.Type>van het beveiligbare object gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object.</xref:System.Type>"
  syntax:
    content: public abstract Type AccessRightType { get; }
    return:
      type: System.Type
      description: "Het type van het beveiligbare object gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  overload: System.Security.AccessControl.ObjectSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> klasse met de opgegeven waarden."
  syntax:
    content: public abstract System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "De identiteit waarop de toegangsregel van toepassing is.  Dit moet een object dat kan worden geconverteerd als een <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
    - id: accessMask
      type: System.Int32
      description: "Het toegangsmasker van deze regel. Het toegangsmasker is een 32-bits-verzameling van anonieme bits de betekenis van die wordt gedefinieerd door de afzonderlijke SI&quot;s."
    - id: isInherited
      type: System.Boolean
      description: "waar als deze regel is overgenomen van een bovenliggende container."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Hiermee geeft u de eigenschappen overnemen van de toegangsregel."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Hiermee geeft u op of overgenomen toegangsregels automatisch worden doorgegeven. De doorgifte van vlaggen worden genegeerd als `inheritanceFlags` is ingesteld op <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Hiermee geeft u het type van het besturingselement rechtmatige toegang."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "De <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> -object dat deze methode maakt."
  overload: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  id: AccessRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AccessRulesModified
  nameWithType: ObjectSecurity.AccessRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Een Booleaanse waarde die aangeeft of de toegangsregels die zijn gekoppeld aan dit opgehaald of ingesteld <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object zijn gewijzigd."
  syntax:
    content: protected bool AccessRulesModified { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de toegangsregels die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object zijn gewijzigd, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.AccessRulesModified*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: ObjectSecurity.AccessRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Haalt de <xref:System.Type>van het object dat is gekoppeld aan de regels voor toegang van deze <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object.</xref:System.Type> De <xref:System.Type>object moet een object dat kan worden geconverteerd als een <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> object.</xref:System.Type>"
  syntax:
    content: public abstract Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "Het type van het object dat is gekoppeld aan de regels voor toegang van deze <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  overload: System.Security.AccessControl.ObjectSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  id: AreAccessRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AreAccessRulesCanonical
  nameWithType: ObjectSecurity.AreAccessRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Een Booleaanse waarde die aangeeft of de toegangsregels die zijn gekoppeld aan dit opgehaald <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object zich in de canonieke volgorde."
  syntax:
    content: public bool AreAccessRulesCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de toegangsregels in canonieke volgorde; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  id: AreAccessRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AreAccessRulesProtected
  nameWithType: ObjectSecurity.AreAccessRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Een Booleaanse waarde die aangeeft of de discretionaire lijst (Discretionary Access Control) die zijn gekoppeld aan dit opgehaald <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object wordt beveiligd."
  syntax:
    content: public bool AreAccessRulesProtected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de DACL is beveiligd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  id: AreAuditRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AreAuditRulesCanonical
  nameWithType: ObjectSecurity.AreAuditRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Een Booleaanse waarde die aangeeft of de audit-regels die zijn gekoppeld aan dit opgehaald <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object zich in de canonieke volgorde."
  syntax:
    content: public bool AreAuditRulesCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de controle-regels in de canonieke volgorde; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  id: AreAuditRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AreAuditRulesProtected
  nameWithType: ObjectSecurity.AreAuditRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Een Booleaanse waarde die aangeeft of het systeem toegang besturingselement lijst (SACL) die zijn gekoppeld aan dit opgehaald <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object wordt beveiligd."
  syntax:
    content: public bool AreAuditRulesProtected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de SACL is beveiligd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> klasse met de opgegeven waarden."
  syntax:
    content: public abstract System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "De identiteit waarvoor de regel audit geldt.  Dit moet een object dat kan worden geconverteerd als een <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
    - id: accessMask
      type: System.Int32
      description: "Het toegangsmasker van deze regel. Het toegangsmasker is een 32-bits-verzameling van anonieme bits de betekenis van die wordt gedefinieerd door de afzonderlijke SI&quot;s."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als deze regel is overgenomen van een bovenliggende container."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Hiermee worden de overname-eigenschappen van de audit-regel."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Hiermee geeft u op of overgenomen audit regels automatisch worden doorgegeven. De doorgifte van vlaggen worden genegeerd als `inheritanceFlags` is ingesteld op <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Hiermee geeft u de voorwaarden waarvoor de regel wordt gecontroleerd."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "De <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> -object dat deze methode maakt."
  overload: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  id: AuditRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AuditRulesModified
  nameWithType: ObjectSecurity.AuditRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Een Booleaanse waarde die aangeeft of de audit-regels die zijn gekoppeld aan dit opgehaald of ingesteld <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object zijn gewijzigd."
  syntax:
    content: protected bool AuditRulesModified { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de controle-regels die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object zijn gewijzigd, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.AuditRulesModified*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: ObjectSecurity.AuditRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Haalt de <xref:System.Type>die zijn gekoppeld aan de regels voor controle van dit object <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object.</xref:System.Type> De <xref:System.Type>object moet een object dat kan worden geconverteerd als een <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> object.</xref:System.Type>"
  syntax:
    content: public abstract Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "Het type van het object is gekoppeld aan de regels voor controle van deze <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  overload: System.Security.AccessControl.ObjectSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  id: GetGroup(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GetGroup(Type)
  nameWithType: ObjectSecurity.GetGroup(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee haalt u de primaire groep die is gekoppeld aan de opgegeven eigenaar."
  syntax:
    content: public System.Security.Principal.IdentityReference GetGroup (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "De eigenaar waarvoor de primaire groep ophalen."
    return:
      type: System.Security.Principal.IdentityReference
      description: "De primaire groep die is gekoppeld aan de opgegeven eigenaar."
  overload: System.Security.AccessControl.ObjectSecurity.GetGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  id: GetOwner(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GetOwner(Type)
  nameWithType: ObjectSecurity.GetOwner(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee haalt u de eigenaar die is gekoppeld aan de opgegeven primaire groep."
  syntax:
    content: public System.Security.Principal.IdentityReference GetOwner (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "De primaire groep waarvoor u wilt ophalen van de eigenaar."
    return:
      type: System.Security.Principal.IdentityReference
      description: "De eigenaar die is gekoppeld aan de opgegeven groep."
  overload: System.Security.AccessControl.ObjectSecurity.GetOwner*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetType</code>is niet een <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> type."
  - type: System.Security.Principal.IdentityNotMappedException
    commentId: T:System.Security.Principal.IdentityNotMappedException
    description: "Sommige of alle id-verwijzingen kunnen niet worden vertaald."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Er is een Win32-foutcode geretourneerd."
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  id: GetSecurityDescriptorBinaryForm
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GetSecurityDescriptorBinaryForm()
  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Retourneert een matrix van byte-waarden die informatie van de beveiligingsdescriptor voor dit vertegenwoordigt <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  remarks: "Deze methode retourneert informatie van de beveiligingsdescriptor in het geheugen. Deze ophaalt informatie opgeslagen in de permanente opslag niet."
  syntax:
    content: public byte[] GetSecurityDescriptorBinaryForm ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Een matrix met bytes waarden die de security descriptor voor dit object vertegenwoordigt <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object. Deze methode retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen beveiligingsinformatie op dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  overload: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  id: GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GetSecurityDescriptorSddlForm(AccessControlSections)
  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Retourneert de Security Descriptor Definition Language (SDDL) weergave van de opgegeven secties van de beveiligingsdescriptor die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  syntax:
    content: public string GetSecurityDescriptorSddlForm (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Hiermee wordt aangegeven welke secties (toegangsregels, audit regels, de primaire groep, eigenaar) van de beveiligingsdescriptor om op te halen."
    return:
      type: System.String
      description: "De SDDL-weergave van de opgegeven secties van de beveiligingsdescriptor die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  overload: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.GroupModified
  id: GroupModified
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GroupModified
  nameWithType: ObjectSecurity.GroupModified
  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Opgehaald of ingesteld van een Booleaanse waarde die aangeeft of de groep die is gekoppeld aan het beveiligbare object is gewijzigd."
  syntax:
    content: protected bool GroupModified { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de groep die is gekoppeld aan het beveiligbare object is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.GroupModified*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: IsContainer
  nameWithType: ObjectSecurity.IsContainer
  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Met deze eigenschap wordt een Booleaanse waarde die aangeeft of dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object is een containerobject."
  syntax:
    content: protected bool IsContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object is een containerobject; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.IsContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.IsDS
  id: IsDS
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: IsDS
  nameWithType: ObjectSecurity.IsDS
  fullName: System.Security.AccessControl.ObjectSecurity.IsDS
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Met deze eigenschap wordt een Booleaanse waarde die aangeeft of dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object is een Active directory-object."
  syntax:
    content: protected bool IsDS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object is een Active directory-object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.IsDS*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  id: IsSddlConversionSupported
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: IsSddlConversionSupported()
  nameWithType: ObjectSecurity.IsSddlConversionSupported()
  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Retourneert een Booleaanse waarde die aangeeft of de beveiligingsdescriptor die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object kan worden geconverteerd naar de Security Descriptor Definition Language (SDDL)-indeling."
  syntax:
    content: public static bool IsSddlConversionSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de security descriptor is gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> -object dat wordt geconverteerd naar de notatie voor de Security Descriptor Definition Language (SDDL), anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "De opgegeven wijziging aan de DACL lijst (Discretionary Access Control) die zijn gekoppeld aan dit geldt <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  remarks: "Voorkom toegang principals onbedoeld geeft toepassingen moeten controleren op de aanwezigheid van toestaan iedereen volledige toegang (AEFA) ACE access control entry () en deze te verwijderen voordat u een DACL wijzigt."
  syntax:
    content: protected abstract bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "De wijziging toe te passen aan de DACL."
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "De toegangsregel om te wijzigen."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de DACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de DACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.ModifyAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "De opgegeven wijziging aan de DACL lijst (Discretionary Access Control) die zijn gekoppeld aan dit geldt <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  remarks: "Voorkom toegang principals onbedoeld geeft toepassingen moeten controleren op de aanwezigheid van toestaan iedereen volledige toegang (AEFA) ACE access control entry () en deze te verwijderen voordat u een DACL wijzigt."
  syntax:
    content: public virtual bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "De wijziging toe te passen aan de DACL."
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "De toegangsregel om te wijzigen."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de DACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de DACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "De opgegeven wijziging aan het systeem toegang besturingselement lijst SACL () die zijn gekoppeld aan dit geldt <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  syntax:
    content: protected abstract bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "De wijziging toepassen op de SACL."
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "De controleregel te wijzigen."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de SACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de SACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.ModifyAudit*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "De opgegeven wijziging aan het systeem toegang besturingselement lijst SACL () die zijn gekoppeld aan dit geldt <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  syntax:
    content: public virtual bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "De wijziging toepassen op de SACL."
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "De controleregel te wijzigen."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de SACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de SACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified
  id: OwnerModified
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: OwnerModified
  nameWithType: ObjectSecurity.OwnerModified
  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Opgehaald of ingesteld van een Booleaanse waarde die aangeeft of de eigenaar van het beveiligbare object is gewijzigd."
  syntax:
    content: protected bool OwnerModified { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenaar van het beveiligbare object is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.OwnerModified*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: Persist(SafeHandle,AccessControlSections)
  nameWithType: ObjectSecurity.Persist(SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(SafeHandle,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee slaat u de opgegeven secties van de beveiligingsdescriptor die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object in de permanente opslag. We raden aan dat de waarden van de <code> includeSections </code> parameters doorgegeven aan de constructor en behouden methoden zijn identiek. Zie Opmerkingen voor meer informatie."
  remarks: "Wanneer het behouden blijven van een <xref:System.Security.AccessControl.ObjectSecurity>object, als de waarde van de `includeSections` parameter doorgegeven aan de <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A>methode is niet identiek zijn aan de waarde van de `includeSections` parameter doorgegeven aan de constructor gebruikt om te maken die <xref:System.Security.AccessControl.ObjectSecurity>object, secties van de persistente <xref:System.Security.AccessControl.ObjectSecurity>object onvoorspelbare waarden kan bevatten.</xref:System.Security.AccessControl.ObjectSecurity> </xref:System.Security.AccessControl.ObjectSecurity> </xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.ObjectSecurity> Bijvoorbeeld, als een constructor wordt aangeroepen met een `includeSections` waarde van <xref:System.Security.AccessControl.AccessControlSections>, en later een <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A>methode wordt aangeroepen voor dat object met een `includeSections` waarde van <xref:System.Security.AccessControl.AccessControlSections>, de resulterende persistent <xref:System.Security.AccessControl.ObjectSecurity>object bevat onvoorspelbare waarden voor de audit regels, de groep en de eigenaar.</xref:System.Security.AccessControl.ObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected virtual void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "De koppeling die wordt gebruikt voor het ophalen van de persistente gegevens."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Een van de <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> opsommingswaarden die Hiermee geeft u de secties van de beveiligingsdescriptor (toegangsregels, audit regels, eigenaar, de primaire groep) van het beveiligbare object op te slaan."
  overload: System.Security.AccessControl.ObjectSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: Persist(String,AccessControlSections)
  nameWithType: ObjectSecurity.Persist(String,AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee slaat u de opgegeven secties van de beveiligingsdescriptor die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object in de permanente opslag. We raden aan dat de waarden van de <code> includeSections </code> parameters doorgegeven aan de constructor en behouden methoden zijn identiek. Zie Opmerkingen voor meer informatie."
  remarks: "Wanneer het behouden blijven van een <xref:System.Security.AccessControl.ObjectSecurity>object, als de waarde van de `includeSections` parameter doorgegeven aan de <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A>methode is niet identiek zijn aan de waarde van de `includeSections` parameter doorgegeven aan de constructor gebruikt om te maken die <xref:System.Security.AccessControl.ObjectSecurity>object, secties van de persistente <xref:System.Security.AccessControl.ObjectSecurity>object onvoorspelbare waarden kan bevatten.</xref:System.Security.AccessControl.ObjectSecurity> </xref:System.Security.AccessControl.ObjectSecurity> </xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.ObjectSecurity> Bijvoorbeeld, als een constructor wordt aangeroepen met een `includeSections` waarde van <xref:System.Security.AccessControl.AccessControlSections>, en later een <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A>methode wordt aangeroepen voor dat object met een `includeSections` waarde van <xref:System.Security.AccessControl.AccessControlSections>, de resulterende persistent <xref:System.Security.AccessControl.ObjectSecurity>object bevat onvoorspelbare waarden voor de audit regels, de groep en de eigenaar.</xref:System.Security.AccessControl.ObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected virtual void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de persistente gegevens ophalen."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Een van de <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> opsommingswaarden die Hiermee geeft u de secties van de beveiligingsdescriptor (toegangsregels, audit regels, eigenaar, de primaire groep) van het beveiligbare object op te slaan."
  overload: System.Security.AccessControl.ObjectSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: Persist(Boolean,String,AccessControlSections)
  nameWithType: ObjectSecurity.Persist(Boolean,String,AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(Boolean,String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee slaat u de opgegeven secties van de beveiligingsdescriptor die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object in de permanente opslag. We raden aan dat de waarden van de <code> includeSections </code> parameters doorgegeven aan de constructor en behouden methoden zijn identiek. Zie Opmerkingen voor meer informatie."
  remarks: "Wanneer het behouden blijven van een <xref:System.Security.AccessControl.ObjectSecurity>object, als de waarde van de `includeSections` parameter doorgegeven aan de methode Persist is niet identiek zijn aan de waarde van de `includeSections` parameter doorgegeven aan de constructor gebruikt om te maken die <xref:System.Security.AccessControl.ObjectSecurity>object, secties van de persistente <xref:System.Security.AccessControl.ObjectSecurity>object onvoorspelbare waarden kan bevatten.</xref:System.Security.AccessControl.ObjectSecurity> </xref:System.Security.AccessControl.ObjectSecurity> </xref:System.Security.AccessControl.ObjectSecurity> Bijvoorbeeld, als een constructor wordt aangeroepen met een `includeSections` waarde van <xref:System.Security.AccessControl.AccessControlSections>, en later een Persist-methode wordt aangeroepen voor dat object met een `includeSections` waarde van <xref:System.Security.AccessControl.AccessControlSections>, de resulterende persistent <xref:System.Security.AccessControl.ObjectSecurity>object bevat onverwachte waarden voor de audit regels, de groep en de eigenaar.</xref:System.Security.AccessControl.ObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected virtual void Persist (bool enableOwnershipPrivilege, string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: enableOwnershipPrivilege
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>de bevoegdheid waarmee de aanroeper eigenaar van het object wilt inschakelen."
    - id: name
      type: System.String
      description: "De naam van de persistente gegevens ophalen."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Een van de <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> opsommingswaarden die Hiermee geeft u de secties van de beveiligingsdescriptor (toegangsregels, audit regels, eigenaar, de primaire groep) van het beveiligbare object op te slaan."
  overload: System.Security.AccessControl.ObjectSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  id: PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(IdentityReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle toegangsregels die zijn gekoppeld aan de opgegeven <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
  syntax:
    content: public virtual void PurgeAccessRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "De <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> waarvoor u wilt verwijderen van alle regels voor toegang."
  overload: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Alle toegangsregels zijn niet in de canonieke volgorde."
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  id: PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(IdentityReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle regels die zijn gekoppeld aan de opgegeven audit <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
  syntax:
    content: public virtual void PurgeAuditRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "De <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> waarvoor alle audit regels te verwijderen."
  overload: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Alle regels voor controle zijn niet in de canonieke volgorde."
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.ReadLock
  id: ReadLock
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ReadLock()
  nameWithType: ObjectSecurity.ReadLock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee vergrendelt u dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> -object voor leestoegang."
  syntax:
    content: protected void ReadLock ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.ReadLock*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  id: ReadUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ReadUnlock()
  nameWithType: ObjectSecurity.ReadUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee ontgrendelt u dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> -object voor leestoegang."
  syntax:
    content: protected void ReadUnlock ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.ReadUnlock*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  id: SetAccessRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetAccessRuleProtection(Boolean,Boolean)
  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee of verwijdert u de beveiliging van de toegangsregels die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object. Regels voor beveiligde toegang kunnen niet worden gewijzigd door de bovenliggende objecten via overname."
  syntax:
    content: public void SetAccessRuleProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ter bescherming van de toegangsregels die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object op basis van overname; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om toe te staan overname."
    - id: preserveInheritance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt behouden overgenomen toegangsregels; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> regels overgenomen toegang verwijderen. Deze parameter wordt genegeerd als `isProtected` is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze methode probeert te verwijderen regels overgenomen van een niet-standaard discretionaire lijst (Discretionary Access Control)."
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  id: SetAuditRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetAuditRuleProtection(Boolean,Boolean)
  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee of verwijdert u de beveiliging van de audit-regels die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object. Regels voor beveiligde audit kunnen niet worden gewijzigd door de bovenliggende objecten via overname."
  syntax:
    content: public void SetAuditRuleProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ter bescherming van de audit-regels die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object op basis van overname; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om toe te staan overname."
    - id: preserveInheritance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>regels overgenomen audit; behouden <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> overgenomen audit regels te verwijderen. Deze parameter wordt genegeerd als `isProtected` is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze methode probeert te verwijderen regels overgenomen van een niet-standaard System Access Control lijst SACL ()."
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  id: SetGroup(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetGroup(IdentityReference)
  nameWithType: ObjectSecurity.SetGroup(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(IdentityReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee stelt u de primaire groep voor de security descriptor die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  syntax:
    content: public void SetGroup (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "De primaire groep in te stellen."
  overload: System.Security.AccessControl.ObjectSecurity.SetGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  id: SetOwner(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetOwner(IdentityReference)
  nameWithType: ObjectSecurity.SetOwner(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(IdentityReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee stelt u de eigenaar van de beveiligingsdescriptor die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object."
  syntax:
    content: public void SetOwner (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "De eigenaar in te stellen."
  overload: System.Security.AccessControl.ObjectSecurity.SetOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  id: SetSecurityDescriptorBinaryForm(System.Byte[])
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetSecurityDescriptorBinaryForm(Byte[])
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee stelt u de security descriptor voor dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object uit de opgegeven matrix met byte-waarden."
  remarks: "Als de beveiligingsdescriptor die wordt vertegenwoordigd door de binaire gegevens bevat `null` voor een discretionary access control list (DACL&quot;s), een enkel access control entry (ACE) waarmee iedereen volledige toegang (AEFA) is toegevoegd aan de DACL. Als een toepassing de DACL van een security descriptor waarnaar een ACE AEFA is toegevoegd wijzigt, de ACE AEFA persistent is gemaakt met de DACL wanneer dat DACL wordt bewaard.       Dit kan resulteren in een toepassing per ongeluk om toegang te kunnen principals. Een toepassing moet daarom controleren op het bestaan van een ACE AEFA en deze verwijderen voordat u een beveiligingsdescriptor wijzigt."
  syntax:
    content: public void SetSecurityDescriptorBinaryForm (byte[] binaryForm);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "De matrix van bytes van waaruit de security descriptor instellen."
  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  id: SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee stelt u de opgegeven secties van de beveiligingsdescriptor voor dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object uit de opgegeven matrix met byte-waarden."
  remarks: "Als de beveiligingsdescriptor die wordt vertegenwoordigd door de binaire gegevens bevat `null` voor een discretionary access control list (DACL&quot;s), een enkel access control entry (ACE) waarmee iedereen volledige toegang (AEFA) is toegevoegd aan de DACL. Als een toepassing de DACL van een security descriptor waarnaar een ACE AEFA is toegevoegd wijzigt, de ACE AEFA persistent is gemaakt met de DACL wanneer dat DACL wordt bewaard.       Dit kan resulteren in een toepassing per ongeluk om toegang te kunnen principals. Een toepassing moet daarom controleren op het bestaan van een ACE AEFA en deze verwijderen voordat u een beveiligingsdescriptor wijzigt."
  syntax:
    content: public void SetSecurityDescriptorBinaryForm (byte[] binaryForm, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "De matrix van bytes van waaruit de security descriptor instellen."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "De secties (toegangsregels, audit regels, eigenaar, de primaire groep) van de security descriptor in te stellen."
  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  id: SetSecurityDescriptorSddlForm(System.String)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetSecurityDescriptorSddlForm(String)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee stelt u de security descriptor voor dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object op basis van de opgegeven Security Descriptor Definition Language (SDDL)-tekenreeks."
  remarks: "Als de beveiligingsdescriptor die wordt vertegenwoordigd door de SDDL-tekenreeks bevat `null` voor een discretionary access control list (DACL&quot;s), een enkel access control entry (ACE&quot;s) die alle gebruikers volledige toegang (AEFA) is toegevoegd aan de DACL. Als een toepassing de DACL van een security descriptor waarnaar een ACE AEFA is toegevoegd wijzigt, de ACE AEFA persistent is gemaakt met de DACL wanneer dat DACL wordt bewaard.       Dit kan resulteren in een toepassing per ongeluk om toegang te kunnen principals. Een toepassing moet daarom controleren op het bestaan van een ACE AEFA en deze verwijderen voordat u een beveiligingsdescriptor wijzigt."
  syntax:
    content: public void SetSecurityDescriptorSddlForm (string sddlForm);
    parameters:
    - id: sddlForm
      type: System.String
      description: "De SDDL-tekenreeks waaruit u de security descriptor instellen."
  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  id: SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetSecurityDescriptorSddlForm(String,AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String,AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee stelt u de opgegeven secties van de beveiligingsdescriptor voor dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object op basis van de opgegeven Security Descriptor Definition Language (SDDL)-tekenreeks."
  remarks: "Als de beveiligingsdescriptor die wordt vertegenwoordigd door de SDDL-tekenreeks bevat `null` voor een discretionary access control list (DACL&quot;s), een enkel access control entry (ACE&quot;s) die alle gebruikers volledige toegang (AEFA) is toegevoegd aan de DACL. Als een toepassing de DACL van een security descriptor waarnaar een ACE AEFA is toegevoegd wijzigt, de ACE AEFA persistent is gemaakt met de DACL wanneer dat DACL wordt bewaard.       Dit kan resulteren in een toepassing per ongeluk om toegang te kunnen principals. Een toepassing moet daarom controleren op het bestaan van een ACE AEFA en deze verwijderen voordat u een beveiligingsdescriptor wijzigt."
  syntax:
    content: public void SetSecurityDescriptorSddlForm (string sddlForm, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: sddlForm
      type: System.String
      description: "De SDDL-tekenreeks waaruit u de security descriptor instellen."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "De secties (toegangsregels, audit regels, eigenaar, de primaire groep) van de security descriptor in te stellen."
  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.WriteLock
  id: WriteLock
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: WriteLock()
  nameWithType: ObjectSecurity.WriteLock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee vergrendelt u dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object voor schrijftoegang."
  syntax:
    content: protected void WriteLock ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.WriteLock*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  id: WriteUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: WriteUnlock()
  nameWithType: ObjectSecurity.WriteUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee ontgrendelt u dit <xref href=&quot;System.Security.AccessControl.ObjectSecurity&quot;> </xref> object voor schrijftoegang."
  syntax:
    content: protected void WriteUnlock ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.WriteUnlock*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Principal.IdentityNotMappedException
  parent: System.Security.Principal
  isExternal: false
  name: IdentityNotMappedException
  nameWithType: IdentityNotMappedException
  fullName: System.Security.Principal.IdentityNotMappedException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.AccessControl.ObjectSecurity.#ctor
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ObjectSecurity()
  nameWithType: ObjectSecurity.ObjectSecurity()
  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity()
- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ObjectSecurity(CommonSecurityDescriptor)
  nameWithType: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)
  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ObjectSecurity(Boolean,Boolean)
  nameWithType: ObjectSecurity.ObjectSecurity(Boolean,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ObjectSecurity(Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ObjectSecurity.AccessRightType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRulesModified
  nameWithType: ObjectSecurity.AccessRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ObjectSecurity.AccessRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesCanonical
  nameWithType: ObjectSecurity.AreAccessRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesProtected
  nameWithType: ObjectSecurity.AreAccessRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesCanonical
  nameWithType: ObjectSecurity.AreAuditRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesProtected
  nameWithType: ObjectSecurity.AreAuditRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRulesModified
  nameWithType: ObjectSecurity.AuditRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ObjectSecurity.AuditRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType
- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetGroup(Type)
  nameWithType: ObjectSecurity.GetGroup(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(Type)
- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetOwner(Type)
  nameWithType: ObjectSecurity.GetOwner(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(Type)
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorBinaryForm()
  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorSddlForm(AccessControlSections)
  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Security.AccessControl.ObjectSecurity.GroupModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GroupModified
  nameWithType: ObjectSecurity.GroupModified
  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified
- uid: System.Security.AccessControl.ObjectSecurity.IsContainer
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsContainer
  nameWithType: ObjectSecurity.IsContainer
  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer
- uid: System.Security.AccessControl.ObjectSecurity.IsDS
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsDS
  nameWithType: ObjectSecurity.IsDS
  fullName: System.Security.AccessControl.ObjectSecurity.IsDS
- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsSddlConversionSupported()
  nameWithType: ObjectSecurity.IsSddlConversionSupported()
  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: OwnerModified
  nameWithType: ObjectSecurity.OwnerModified
  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: Persist(SafeHandle,AccessControlSections)
  nameWithType: ObjectSecurity.Persist(SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(SafeHandle,AccessControlSections)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: Persist(String,AccessControlSections)
  nameWithType: ObjectSecurity.Persist(String,AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(String,AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: Persist(Boolean,String,AccessControlSections)
  nameWithType: ObjectSecurity.Persist(Boolean,String,AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(Boolean,String,AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(IdentityReference)
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(IdentityReference)
- uid: System.Security.AccessControl.ObjectSecurity.ReadLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadLock()
  nameWithType: ObjectSecurity.ReadLock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()
- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadUnlock()
  nameWithType: ObjectSecurity.ReadUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()
- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetAccessRuleProtection(Boolean,Boolean)
  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(Boolean,Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetAuditRuleProtection(Boolean,Boolean)
  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(Boolean,Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetGroup(IdentityReference)
  nameWithType: ObjectSecurity.SetGroup(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(IdentityReference)
- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetOwner(IdentityReference)
  nameWithType: ObjectSecurity.SetOwner(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(IdentityReference)
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorBinaryForm(Byte[])
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorSddlForm(String)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(String)
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorSddlForm(String,AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String,AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(String,AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity.WriteLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteLock()
  nameWithType: ObjectSecurity.WriteLock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()
- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteUnlock()
  nameWithType: ObjectSecurity.WriteUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()
- uid: System.Security.AccessControl.ObjectSecurity.#ctor*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ObjectSecurity
  nameWithType: ObjectSecurity.ObjectSecurity
- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ObjectSecurity.AccessRightType
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: ObjectSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRulesModified
  nameWithType: ObjectSecurity.AccessRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ObjectSecurity.AccessRuleType
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesCanonical
  nameWithType: ObjectSecurity.AreAccessRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesProtected
  nameWithType: ObjectSecurity.AreAccessRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesCanonical
  nameWithType: ObjectSecurity.AreAuditRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesProtected
  nameWithType: ObjectSecurity.AreAuditRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: ObjectSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRulesModified
  nameWithType: ObjectSecurity.AuditRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ObjectSecurity.AuditRuleType
- uid: System.Security.AccessControl.ObjectSecurity.GetGroup*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetGroup
  nameWithType: ObjectSecurity.GetGroup
- uid: System.Security.AccessControl.ObjectSecurity.GetOwner*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetOwner
  nameWithType: ObjectSecurity.GetOwner
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorBinaryForm
  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorSddlForm
  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm
- uid: System.Security.AccessControl.ObjectSecurity.GroupModified*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GroupModified
  nameWithType: ObjectSecurity.GroupModified
- uid: System.Security.AccessControl.ObjectSecurity.IsContainer*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsContainer
  nameWithType: ObjectSecurity.IsContainer
- uid: System.Security.AccessControl.ObjectSecurity.IsDS*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsDS
  nameWithType: ObjectSecurity.IsDS
- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsSddlConversionSupported
  nameWithType: ObjectSecurity.IsSddlConversionSupported
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAccess
  nameWithType: ObjectSecurity.ModifyAccess
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAccessRule
  nameWithType: ObjectSecurity.ModifyAccessRule
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAudit
  nameWithType: ObjectSecurity.ModifyAudit
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAuditRule
  nameWithType: ObjectSecurity.ModifyAuditRule
- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: OwnerModified
  nameWithType: ObjectSecurity.OwnerModified
- uid: System.Security.AccessControl.ObjectSecurity.Persist*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: Persist
  nameWithType: ObjectSecurity.Persist
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: PurgeAccessRules
  nameWithType: ObjectSecurity.PurgeAccessRules
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: PurgeAuditRules
  nameWithType: ObjectSecurity.PurgeAuditRules
- uid: System.Security.AccessControl.ObjectSecurity.ReadLock*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadLock
  nameWithType: ObjectSecurity.ReadLock
- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadUnlock
  nameWithType: ObjectSecurity.ReadUnlock
- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetAccessRuleProtection
  nameWithType: ObjectSecurity.SetAccessRuleProtection
- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetAuditRuleProtection
  nameWithType: ObjectSecurity.SetAuditRuleProtection
- uid: System.Security.AccessControl.ObjectSecurity.SetGroup*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetGroup
  nameWithType: ObjectSecurity.SetGroup
- uid: System.Security.AccessControl.ObjectSecurity.SetOwner*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetOwner
  nameWithType: ObjectSecurity.SetOwner
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorBinaryForm
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorSddlForm
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm
- uid: System.Security.AccessControl.ObjectSecurity.WriteLock*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteLock
  nameWithType: ObjectSecurity.WriteLock
- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteUnlock
  nameWithType: ObjectSecurity.WriteUnlock
