### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerRequest
  id: HttpListenerRequest
  children:
  - System.Net.HttpListenerRequest.AcceptTypes
  - System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  - System.Net.HttpListenerRequest.ClientCertificateError
  - System.Net.HttpListenerRequest.ContentEncoding
  - System.Net.HttpListenerRequest.ContentLength64
  - System.Net.HttpListenerRequest.ContentType
  - System.Net.HttpListenerRequest.Cookies
  - System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  - System.Net.HttpListenerRequest.GetClientCertificate
  - System.Net.HttpListenerRequest.GetClientCertificateAsync
  - System.Net.HttpListenerRequest.HasEntityBody
  - System.Net.HttpListenerRequest.Headers
  - System.Net.HttpListenerRequest.HttpMethod
  - System.Net.HttpListenerRequest.InputStream
  - System.Net.HttpListenerRequest.IsAuthenticated
  - System.Net.HttpListenerRequest.IsLocal
  - System.Net.HttpListenerRequest.IsSecureConnection
  - System.Net.HttpListenerRequest.IsWebSocketRequest
  - System.Net.HttpListenerRequest.KeepAlive
  - System.Net.HttpListenerRequest.LocalEndPoint
  - System.Net.HttpListenerRequest.ProtocolVersion
  - System.Net.HttpListenerRequest.QueryString
  - System.Net.HttpListenerRequest.RawUrl
  - System.Net.HttpListenerRequest.RemoteEndPoint
  - System.Net.HttpListenerRequest.RequestTraceIdentifier
  - System.Net.HttpListenerRequest.ServiceName
  - System.Net.HttpListenerRequest.TransportContext
  - System.Net.HttpListenerRequest.Url
  - System.Net.HttpListenerRequest.UrlReferrer
  - System.Net.HttpListenerRequest.UserAgent
  - System.Net.HttpListenerRequest.UserHostAddress
  - System.Net.HttpListenerRequest.UserHostName
  - System.Net.HttpListenerRequest.UserLanguages
  langs:
  - csharp
  name: HttpListenerRequest
  nameWithType: HttpListenerRequest
  fullName: System.Net.HttpListenerRequest
  type: Class
  summary: "Beschrijving van een binnenkomende HTTP-aanvraag voor een <xref href=&quot;System.Net.HttpListener&quot;> </xref> object. Deze klasse kan niet worden overgenomen."
  remarks: "Wanneer een client doet een aanvraag naar een Uniform Resource Identifier (URI) verwerkt door een <xref:System.Net.HttpListener>object, de <xref:System.Net.HttpListener>biedt een <xref:System.Net.HttpListenerContext>object dat informatie bevat over de afzender, de aanvraag en de reactie die wordt verzonden naar de client.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListener> </xref:System.Net.HttpListener> De <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>eigenschap retourneert het HttpListenerRequest-object die worden beschreven van de aanvraag.</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>       De HttpListenerRequest-object bevat informatie over de aanvraag, zoals de aanvraag <xref:System.Net.HttpListenerRequest.HttpMethod%2A>tekenreeks, <xref:System.Net.HttpListenerRequest.UserAgent%2A>tekenreeks en hoofdtekst gegevens opvragen (Zie de <xref:System.Net.HttpListenerRequest.InputStream%2A>eigenschap).</xref:System.Net.HttpListenerRequest.InputStream%2A> </xref:System.Net.HttpListenerRequest.UserAgent%2A> </xref:System.Net.HttpListenerRequest.HttpMethod%2A>       Om de aanvraag te beantwoorden, moet u de bijbehorende antwoord via de <xref:System.Net.HttpListenerContext.Response%2A>eigenschap.</xref:System.Net.HttpListenerContext.Response%2A>"
  example:
  - "The following code example demonstrates how to receive and respond to a HttpListenerRequest.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public sealed class HttpListenerRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.AcceptTypes
  id: AcceptTypes
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
  fullName: System.Net.HttpListenerRequest.AcceptTypes
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de MIME-typen geaccepteerd door de client."
  remarks: "De `Accept` header is een tekenreeks met door spaties gescheiden Multipurpose Internet Mail Extensions (MIME) typenamen (bijvoorbeeld `image/jpeg`), waarmee de MIME-typen die de client is voorbereid om te accepteren en verwerken in een antwoord wordt aangegeven. De `*/*` vermelding geeft aan dat de client MIME-type accepteert. Voor een gedetailleerde beschrijving van de `Accept` -kop, Zie RFC 2616, beschikbaar op [http://www.rfc-editor.org](http://www.rfc-editor.org/).       Zie voor een volledige lijst van aanvraagheaders de <xref:System.Net.HttpRequestHeader>opsomming.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_37_1.cs)]"
  syntax:
    content: public string[] AcceptTypes { get; }
    return:
      type: System.String[]
      description: "Een <xref:System.String>matrix met de namen opgegeven in de aanvraag <xref uid=&quot;langword_csharp_Accept&quot; name=&quot;Accept&quot; href=&quot;&quot;> </xref> header of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de clientaanvraag geen bevat een <xref uid=&quot;langword_csharp_Accept&quot; name=&quot;Accept&quot; href=&quot;&quot;> </xref> header.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.AcceptTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  id: BeginGetClientCertificate(System.AsyncCallback,System.Object)
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: BeginGetClientCertificate(AsyncCallback,Object)
  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  fullName: System.Net.HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Een asynchrone aanvraag voor de client X.509-certificaat voor v.3 begint."
  syntax:
    content: public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);
    parameters:
    - id: requestCallback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die verwijst naar de methode aan te roepen wanneer de bewerking voltooid is.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Een door de gebruiker gedefinieerde object dat informatie over het opnieuw bevat. Dit object wordt doorgegeven aan de callback-gemachtigde wanneer de bewerking is voltooid."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die aangeeft dat de status van de bewerking.</xref:System.IAsyncResult>"
  overload: System.Net.HttpListenerRequest.BeginGetClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ClientCertificateError
  id: ClientCertificateError
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
  fullName: System.Net.HttpListenerRequest.ClientCertificateError
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt een foutcode die een probleem met identificeert de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> geleverd door de client."
  remarks: "Deze eigenschap bevat een Windows-foutcode geretourneerd door de Secure Channel (Schannel) Support Provider Interface SSPI (Security), die wordt gebruikt om het certificaat te valideren. Zie voor meer informatie over de SSPI-ondersteuning voor Schannel &quot;Maken van een beveiligde verbinding met behulp van Schannel&quot; in de documentatie voor beveiliging op [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  example:
  - "The following code example checks this property to determine whether the request includes a valid client certificate.  \n  \n [!code-vb[NCLListener#3](~/add/codesnippet/visualbasic/p-system.net.httplistene_33_1.vb)]\n [!code-cs[NCLListener#3](~/add/codesnippet/csharp/p-system.net.httplistene_33_1.cs)]"
  syntax:
    content: public int ClientCertificateError { get; }
    return:
      type: System.Int32
      description: "Een <xref:System.Int32>waarde met een Windows-foutcode.</xref:System.Int32>"
  overload: System.Net.HttpListenerRequest.ClientCertificateError*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het clientcertificaat is nog niet ge√Ønitialiseerd door een aanroep naar de <> </> *> of <> </> *> methoden - of - de bewerking wordt nog uitgevoerd."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
  fullName: System.Net.HttpListenerRequest.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt de inhoudsversleuteling die kunnen worden gebruikt met gegevens die aan de aanvraag is verzonden"
  remarks: "Een <xref:System.Text.Encoding>object kan worden gebruikt voor byte reeksen converteren naar tekensets (codetabellen) en tekens in de byte-reeksen.</xref:System.Text.Encoding> Deze eigenschap wordt de waarde voor charset gebruikt de `Content-Type` header om te bepalen de codering. Als deze informatie niet beschikbaar is, retourneert deze eigenschap <xref:System.Text.Encoding.Default%2A?displayProperty=fullName>.</xref:System.Text.Encoding.Default%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates using the ContentEncoding property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_40_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; }
    return:
      type: System.Text.Encoding
      description: "Een <xref:System.Text.Encoding>object dat geschikt is voor gebruik met de gegevens in de <xref:System.Net.HttpListenerRequest.InputStream*>eigenschap.</xref:System.Net.HttpListenerRequest.InputStream*> </xref:System.Text.Encoding>"
  overload: System.Net.HttpListenerRequest.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
  fullName: System.Net.HttpListenerRequest.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de lengte van de hoofdtekst van gegevens in de aanvraag opgenomen."
  remarks: "De `Content-Length` header de lengte in bytes, van de gegevens in de tekst die wordt meegestuurd met de aanvraag drukt.       Zie voor een volledige lijst van aanvraagheaders de <xref:System.Net.HttpRequestHeader>opsomming.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example uses the ContentLength64 property while processing body data.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_8_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; }
    return:
      type: System.Int64
      description: "De waarde van de aanvraag <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;> </xref> header. Deze waarde is-1 als de lengte van de inhoud is niet bekend."
  overload: System.Net.HttpListenerRequest.ContentLength64*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentType
  id: ContentType
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
  fullName: System.Net.HttpListenerRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u het MIME-type van de hoofdtekst van gegevens in de aanvraag opgenomen."
  remarks: "Als een client gegevens van de hoofdtekst in een aanvraag bevat, het declareert het type Multipurpose Internet Mail Extensions (MIME) van de hoofdtekst van gegevens in de `Content-Type` header. Bijvoorbeeld: het MIME-type gegevens geretourneerd vanuit een formulier met de `POST` methode is `application/x-www-form-urlencoded`.       Zie voor een volledige lijst van aanvraagheaders de <xref:System.Net.HttpRequestHeader>opsomming en RFC 2616, beschikbaar op [http://www.rfc-editor.org](http://www.rfc-editor.org/).</xref:System.Net.HttpRequestHeader>       De ContentType is null wanneer er geen `Content-Type` header in de aanvraag."
  example:
  - "The following code example demonstrates how to use this property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_12_1.cs)]"
  syntax:
    content: public string ContentType { get; }
    return:
      type: System.String
      description: "Een <xref:System.String>die de tekst van de aanvraag bevat <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;> </xref> header.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Cookies
  id: Cookies
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
  fullName: System.Net.HttpListenerRequest.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de cookies die aan de aanvraag is verzonden."
  remarks: "Een cookie is tekstgegevens naam/waarde van een webserver die is opgeslagen op de computer van de lokale (client)."
  example:
  - "The following code example displays the values of cookies sent with the request.  \n  \n [!code-cs[Net_Listener_Basic#18](~/add/codesnippet/csharp/p-system.net.httplistene_7_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; }
    return:
      type: System.Net.CookieCollection
      description: "Een <xref:System.Net.CookieCollection>die cookies dat betrekking heeft op de aanvraag bevat.</xref:System.Net.CookieCollection> Deze eigenschap retourneert een lege verzameling als de aanvraag bevat geen cookies."
  overload: System.Net.HttpListenerRequest.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  id: EndGetClientCertificate(System.IAsyncResult)
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: EndGetClientCertificate(IAsyncResult)
  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  fullName: System.Net.HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Een asynchrone aanvraag voor de client X.509-certificaat voor v.3 eindigt."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De aanvraag in behandeling voor het certificaat."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "De <xref:System.IAsyncResult>-object dat wordt geretourneerd wanneer de bewerking is gestart.</xref:System.IAsyncResult>"
  overload: System.Net.HttpListenerRequest.EndGetClientCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet verkregen door aan te roepen<xref:System.Net.HttpListenerRequest.BeginGetClientCertificate*><code>e.</code>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze methode is al aangeroepen voor de bewerking die is ge√Ødentificeerd door <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.GetClientCertificate
  id: GetClientCertificate
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: GetClientCertificate()
  nameWithType: HttpListenerRequest.GetClientCertificate()
  fullName: System.Net.HttpListenerRequest.GetClientCertificate()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt de client X.509 v.3 certificaat."
  remarks: "Deze methode worden geblokkeerd totdat het certificaat is opgehaald."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Een <xref href=&quot;System.Security.Cryptography.X509Certificates&quot;> </xref> -object dat de client X.509-certificaat voor v.3 bevat."
  overload: System.Net.HttpListenerRequest.GetClientCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een aanroep van deze methode voor het ophalen van de client X.509-certificaat voor v.3 wordt uitgevoerd en daarom een andere aanroep van deze methode kan niet worden doorgevoerd."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync
  id: GetClientCertificateAsync
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: GetClientCertificateAsync()
  nameWithType: HttpListenerRequest.GetClientCertificateAsync()
  fullName: System.Net.HttpListenerRequest.GetClientCertificateAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt de client X.509 v.3 certificaat als een asynchrone bewerking."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>object wordt voltooid wanneer het certificaat is opgehaald.</xref:System.Threading.Tasks.Task%601>       Worden als een aanroep van deze methode voor het ophalen van de client X.509-certificaat voor v.3 uitgevoerd wordt, klikt u vervolgens een andere aanroep van deze methode kan niet doorgevoerd."
  syntax:
    content: public System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2> GetClientCertificateAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "Retourneert &lt;xref:System.Threading.Tasks.Task%601&gt;.       Het taakobject dat de asynchrone bewerking vertegenwoordigt. De &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; eigenschap voor het taakobject retourneert een <xref href=&quot;System.Security.Cryptography.X509Certificates&quot;> </xref> -object dat de client X.509-certificaat voor v.3 bevat."
  overload: System.Net.HttpListenerRequest.GetClientCertificateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.HasEntityBody
  id: HasEntityBody
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
  fullName: System.Net.HttpListenerRequest.HasEntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de aanvraag hoofdtekst gegevens zijn gekoppeld.</xref:System.Boolean>"
  remarks: "Een aanvraag gegevens naar de server met verzendt de `POST` methode, bijvoorbeeld, een entiteitshoofdtekst moet hebben."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public bool HasEntityBody { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de aanvraag hoofdtekst gegevens; is gekoppeld anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.HasEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Headers
  id: Headers
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerRequest.Headers
  fullName: System.Net.HttpListenerRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de verzameling van header naam/waarde-paren in de aanvraag is verzonden."
  remarks: "Aanvraagheaders bevatten informatie over metagegevens. Bijvoorbeeld headers de URI Uniform Resource Identifier () van de resource die de client worden aangeduid met de server kunnen bevatten, de identiteit van de gebruikersagent gebruikt door de client en de acceptabele MIME-typen voor gegevens in de hoofdtekst van de reactie.       Zie voor een volledige lijst van aanvraagheaders de <xref:System.Net.HttpRequestHeader>opsomming.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.  \n  \n [!code-cs[Net_Listener_Basic#21](~/add/codesnippet/csharp/p-system.net.httplistene_14_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Een <xref:System.Net.WebHeaderCollection>die de HTTP-headers die is opgenomen in de aanvraag bevat.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.HttpListenerRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.HttpMethod
  id: HttpMethod
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
  fullName: System.Net.HttpListenerRequest.HttpMethod
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee wordt de HTTP-methode die is opgegeven door de client opgehaald."
  remarks: "De HTTP-methode is doorgaans GET of POST, afhankelijk van de actie gewenst door de client."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_10_1.cs)]"
  syntax:
    content: public string HttpMethod { get; }
    return:
      type: System.String
      description: "Een <xref:System.String>die de methode die wordt gebruikt in de aanvraag bevat.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.HttpMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.InputStream
  id: InputStream
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
  fullName: System.Net.HttpListenerRequest.InputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u een stream met de hoofdtekst van gegevens die door de client verzonden."
  remarks: "Als de client gegevens verzendt (bijvoorbeeld met de HTTP- `POST` methode), de stroom die door deze methode die gegevens bevat.      > [!NOTE] > Sluiten van de aanvraag de stroom die door deze eigenschap niet sluiten. Wanneer u de stroom niet meer nodig hebt, moet u deze sluiten door het aanroepen van de <xref:System.IO.Stream.Close%2A>methode.</xref:System.IO.Stream.Close%2A>"
  example:
  - "The following code example demonstrates using this property to read the data sent with a request.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_27_1.cs)]"
  syntax:
    content: public System.IO.Stream InputStream { get; }
    return:
      type: System.IO.Stream
      description: "Een leesbare <xref:System.IO.Stream>object met het aantal bytes dat door de client in de hoofdtekst van de aanvraag is verzonden.</xref:System.IO.Stream> Deze eigenschap geeft <xref:System.IO.Stream>Als er geen gegevens worden verzonden met de aanvraag.</xref:System.IO.Stream>"
  overload: System.Net.HttpListenerRequest.InputStream*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
  fullName: System.Net.HttpListenerRequest.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de client verzenden van deze aanvraag is geverifieerd.</xref:System.Boolean>"
  remarks: "Uw toepassing worden aangevraagd client verificatie met behulp van de <xref:System.Net.HttpListener.AuthenticationSchemes%2A>of <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>eigenschap.</xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> </xref:System.Net.HttpListener.AuthenticationSchemes%2A>       Uw toepassing niet ontvangt een <xref:System.Net.HttpListenerContext>voor aanvragen van clients die zijn niet geverifieerd.</xref:System.Net.HttpListenerContext>"
  example:
  - "The following code example displays the value of the IsAuthenticated property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_1_1.cs)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de client is geverifieerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsLocal
  id: IsLocal
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
  fullName: System.Net.HttpListenerRequest.IsLocal
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de aanvraag is verzonden vanaf de lokale computer.</xref:System.Boolean>"
  remarks: "Toepassingen kunnen gebruikmaken van deze eigenschap speciale verwerkingen aanvragen afkomstig zijn van de lokale computer uitvoeren."
  example:
  - "The following code example demonstrates using the IsLocal property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_28_1.cs)]"
  syntax:
    content: public bool IsLocal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de aanvraag afkomstig op dezelfde computer als is de <xref href=&quot;System.Net.HttpListener&quot;> </xref> -object dat de aanvraag; opgegeven anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsSecureConnection
  id: IsSecureConnection
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
  fullName: System.Net.HttpListenerRequest.IsSecureConnection
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de TCP-verbinding gebruikt om de aanvraag te verzenden met behulp van het protocol Secure Sockets Layer (SSL).</xref:System.Boolean>"
  remarks: "Om aan te vragen een beveiligde verbinding, aanvraag van de client wordt gebruikt <xref:System.Uri.UriSchemeHttps>in plaats van <xref:System.Uri.UriSchemeHttp>.</xref:System.Uri.UriSchemeHttp> </xref:System.Uri.UriSchemeHttps> Als de verbinding kan niet worden gemaakt met behulp van SSL, ontvangt de client een <xref:System.Net.WebException>die voorziet in informatie over de fout.</xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates using the IsSecureConnection property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public bool IsSecureConnection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de TCP-verbinding van SSL gebruikmaakt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsSecureConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest
  id: IsWebSocketRequest
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
  fullName: System.Net.HttpListenerRequest.IsWebSocketRequest
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de TCP-verbinding een WebSocket-aanvraag is.</xref:System.Boolean>"
  syntax:
    content: public bool IsWebSocketRequest { get; }
    return:
      type: System.Boolean
      description: "Retourneert <xref:System.Boolean>.</xref:System.Boolean>       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de TCP-verbinding een WebSocket-aanvraag is anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsWebSocketRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
  fullName: System.Net.HttpListenerRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de client een persistente verbinding vraagt.</xref:System.Boolean>"
  remarks: "Als een HTTP-client en server verwacht voor het uitwisselen van gegevens meerdere keren in een korte periode, sneller een persistente verbinding worden hun communicaties door hen om te voorkomen dat de vereiste overhead bij het openen en sluiten van een TCP-verbinding voor elk bericht. Voor clients met behulp van HTTP/1.1, de standaardwaarde voor deze eigenschap is `true`."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_5_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verbinding geopend; moeten blijven anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.KeepAlive*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.LocalEndPoint
  id: LocalEndPoint
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
  fullName: System.Net.HttpListenerRequest.LocalEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "IP-adres en poort nummer waarnaar de aanvraag wordt omgeleid voor de server ophalen."
  remarks: "Deze eigenschap is handig als u wilt reageren op aanvragen op basis van de manier waarop die ze worden aangepakt."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_38_1.cs)]"
  syntax:
    content: public System.Net.IPEndPoint LocalEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "Een <xref:System.Net.IPEndPoint>die staat voor de IP-adres dat de aanvraag is verzonden naar.</xref:System.Net.IPEndPoint>"
  overload: System.Net.HttpListenerRequest.LocalEndPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
  fullName: System.Net.HttpListenerRequest.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee wordt de HTTP-versie die wordt gebruikt door de aanvragende client opgehaald."
  remarks: "De mogelijkheden van verschillende HTTP-versies zijn opgegeven in de documenten beschikbaar op [http://www.rfc-editor.org](http://www.rfc-editor.org/)."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; }
    return:
      type: System.Version
      description: "Een <xref:System.Version>die identificeert de clientversie van HTTP.</xref:System.Version>"
  overload: System.Net.HttpListenerRequest.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.QueryString
  id: QueryString
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
  fullName: System.Net.HttpListenerRequest.QueryString
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de query-tekenreeks die is opgenomen in de aanvraag."
  remarks: "In een URL, wordt de informatie over de van informatie over het pad gescheiden door een vraagteken (?). Naam/waarde-paren worden gescheiden door een gelijkteken (=). De <xref:System.Uri.Query%2A>waarde van de eigenschap van het <xref:System.Uri>object dat is geretourneerd door <xref:System.Net.HttpListenerRequest.Url%2A>.</xref:System.Net.HttpListenerRequest.Url%2A> </xref:System.Uri> </xref:System.Uri.Query%2A> toegang tot de querygegevens een tekenreeks niet verkrijgen      > [!NOTE] > Query&quot;s zonder een gelijkteken (voorbeeld: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) worden toegevoegd aan de `null` sleutel in de <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>"
  example:
  - "The following code example demonstrates using the QueryString property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_4_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection QueryString { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Een <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> object met de querygegevens die zijn opgenomen in de aanvraag <xref:System.Net.HttpListenerRequest.Url*>.</xref:System.Net.HttpListenerRequest.Url*>"
  overload: System.Net.HttpListenerRequest.QueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RawUrl
  id: RawUrl
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
  fullName: System.Net.HttpListenerRequest.RawUrl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de URL-gegevens (zonder de host en -poort) door de client wordt aangevraagd."
  remarks: "De onbewerkte URL wordt gedefinieerd als het deel van de URL na de domein-informatie. In de URL-reeks `http://www.contoso.com/articles/recent.aspx`, is de onbewerkte URL `/articles/recent.aspx`. De onbewerkte URL bevat de queryreeks, indien aanwezig.       De host en poort om informatie te verkrijgen, gebruikt u de <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>eigenschap.</xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>"
  example:
  - "The following code example demonstrates using the RawUrl property.  \n  \n [!code-cs[Net_Listener_Basic#11](~/add/codesnippet/csharp/p-system.net.httplistene_29_1.cs)]"
  syntax:
    content: public string RawUrl { get; }
    return:
      type: System.String
      description: "Een <xref:System.String>die de onbewerkte URL voor deze aanvraag bevat.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.RawUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
  fullName: System.Net.HttpListenerRequest.RemoteEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt de client-IP-adres en poort nummer waarvan de aanvraag afkomstig is."
  remarks: ''
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public System.Net.IPEndPoint RemoteEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "Een <xref:System.Net.IPEndPoint>die staat voor het IP-adres en poort nummer waarvan de aanvraag afkomstig.</xref:System.Net.IPEndPoint>"
  overload: System.Net.HttpListenerRequest.RemoteEndPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier
  id: RequestTraceIdentifier
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
  fullName: System.Net.HttpListenerRequest.RequestTraceIdentifier
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de aanvraag-id van de inkomende HTTP-aanvraag."
  syntax:
    content: public Guid RequestTraceIdentifier { get; }
    return:
      type: System.Guid
      description: "Een <xref:System.Guid>object met de id van de HTTP-aanvraag.</xref:System.Guid>"
  overload: System.Net.HttpListenerRequest.RequestTraceIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ServiceName
  id: ServiceName
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
  fullName: System.Net.HttpListenerRequest.ServiceName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de Provider SPN (Service Name) die de client op de aanvraag is verzonden."
  remarks: "Een toepassing kan de eigenschap ServiceName gebruiken om aangepaste validatie van de Service bieden Name (SPN) te voeren."
  syntax:
    content: public string ServiceName { get; }
    return:
      type: System.String
      description: "Een <xref:System.String>die de SPN-naam van de client verzonden op de aanvraag bevat.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.ServiceName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.TransportContext
  id: TransportContext
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
  fullName: System.Net.HttpListenerRequest.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt de <xref:System.Net.TransportContext>voor de clientaanvraag.</xref:System.Net.TransportContext>"
  remarks: "De <xref:System.Net.TransportContext>eigenschap kan worden gebruikt voor het ophalen van de binding kanaal-token (CBT) voor een <xref:System.Net.HttpListenerRequest>die is verzonden via HTTPS.</xref:System.Net.HttpListenerRequest> </xref:System.Net.TransportContext>       Een toepassing gebruiken de <xref:System.Net.TransportContext>eigenschap om uit te voeren, aangepaste verificatie met behulp van aanroepen naar de systeemeigen Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) functie.</xref:System.Net.TransportContext>       Als een toepassing probeert op te halen van de binding kanaal-token (CBT) vanuit deze TransportContext eigenschap met de <xref:System.Net.TransportContext.GetChannelBinding%2A>methode en de <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>is niet <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>, klikt u vervolgens de die <xref:System.Net.HttpListenerRequest>genereert <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Net.HttpListenerRequest> </xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> </xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> </xref:System.Net.TransportContext.GetChannelBinding%2A> De <xref:System.Net.HttpListenerRequest>overschrijft de <xref:System.Net.TransportContext.GetChannelBinding%2A>methode met een interne implementatie.</xref:System.Net.TransportContext.GetChannelBinding%2A> </xref:System.Net.HttpListenerRequest>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "Een <xref:System.Net.TransportContext>-object voor de clientaanvraag.</xref:System.Net.TransportContext>"
  overload: System.Net.HttpListenerRequest.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Url
  id: Url
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Url
  nameWithType: HttpListenerRequest.Url
  fullName: System.Net.HttpListenerRequest.Url
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Haalt de <xref:System.Uri>object door de client wordt aangevraagd.</xref:System.Uri>"
  remarks: "De Url-eigenschap kunt u voor alle informatie die beschikbaar is via een <xref:System.Uri>object.</xref:System.Uri> Als u weten van alleen de onbewerkte tekst van de URI-aanvraag wilt, overweeg dan de <xref:System.Net.HttpListenerRequest.RawUrl%2A>eigenschap in plaats daarvan.</xref:System.Net.HttpListenerRequest.RawUrl%2A>       De Url-eigenschap is leeg als de <xref:System.Uri>van de client kan niet worden geparseerd.</xref:System.Uri>       De <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>eigenschap geeft als <xref:System.Net.HttpListener>de onbewerkte unescaped URI gebruikt in plaats van de geconverteerde URI waar procent gecodeerde waarden worden geconverteerd en andere normalisatie maatregelen worden getroffen.</xref:System.Net.HttpListener> </xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>       Wanneer een <xref:System.Net.HttpListener>instantie ontvangt een aanvraag via de `http.sys` service, maakt het een exemplaar van de URI-tekenreeks die is geleverd door `http.sys`, en beschikbaar gesteld als de eigenschap Url.</xref:System.Net.HttpListener>       De `http.sys` -service geeft u twee tekenreeksen voor aanvraag-URI: - onbewerkte URI - geconverteerd URI de onbewerkte URI is de <xref:System.Uri?displayProperty=fullName>opgegeven in de aanvraagregel van een HTTP-aanvraag: `GET /path/` `Host: www.contoso.com` de onbewerkte URI geleverd door `http.sys` voor de aanvraag hierboven vermeld, is &quot;/ path /&quot;.       </xref:System.Uri?displayProperty=fullName> Hiermee wordt de tekenreeks na de HTTP-term verzonden via het netwerk.       De `http.sys` service maakt een geconverteerde URI van de informatie in de aanvraag met de URI die is opgegeven in de regel van HTTP-aanvraag en de Host-header om te bepalen van de oorspronkelijke server de aanvraag moet worden doorgestuurd. Dit wordt gedaan door het vergelijken van de gegevens van de aanvraag met een reeks geregistreerde URI-voorvoegsels. Om te kunnen deze waarden te vergelijken, moet sommige normalisatie op de aanvraag worden uitgevoerd. Voor het voorbeeld hierboven de geconverteerde URI zou als volgt zijn: `http://www.contoso.com/path/` de `http.sys` service combineert de <xref:System.Uri.Host%2A?displayProperty=fullName>eigenschapwaarde en de tekenreeks in de aanvraagregel voor het maken van een geconverteerde URI.</xref:System.Uri.Host%2A?displayProperty=fullName> Bovendien `http.sys` en de <xref:System.Uri?displayProperty=fullName>klasse ook het volgende doen:-Un-Hiermee heft alle percentages gecodeerde.</xref:System.Uri?displayProperty=fullName>      -Zet procent-codering niet-ASCII-tekens in een UTF-16 character-weergave. Houd er rekening mee dat UTF-8- en ANSI/DBCS-tekens en de Unicode-tekens (Unicode-codering met de indeling van de uXXXX %) worden ondersteund.      -Andere stappen normalisatie, zoals pad compressie worden uitgevoerd.       Omdat de aanvraag geen informatie over de codering die wordt gebruikt voor het percentage gecodeerde waarden bevatten heeft, niet mogelijk om te bepalen van de juiste codering door bij het parseren van de waarden procent-codering.       Daarom `http.sys` bevat twee registersleutels voor het wijzigen van het proces: | Registersleutel | Standaardwaarde | Beschrijving |   |------------------|-------------------|-----------------|   | EnableNonUTF8 |&1; | Als nul, `http.sys` accepteert alleen URL&quot;s UTF-8-codering.<br /><br /> Als niet-nul, `http.sys` ook ANSI-codering of DBCS-gecodeerde URL&quot;s in aanvragen accepteert. |   | FavorUTF8 |&1; | Als niet-nul, `http.sys` altijd pogingen tot decoderen van een URL als UTF-8 eerst; als deze conversie is mislukt en EnableNonUTF8 dan nul is, Http.sys klikt u vervolgens probeert te als ANSI of DBCS worden ontsleuteld.<br /><br /> Als nul (en EnableNonUTF8 is dan nul) `http.sys` probeert te decoderen als ANSI of DBCS; als dat niet met succes is voltooid, wordt geprobeerd een UTF-8-conversie. |       Wanneer <xref:System.Net.HttpListener>een aanvraag ontvangt gebruikmaakt van de geconverteerde URI van `http.sys` als invoer voor de eigenschap Url.</xref:System.Net.HttpListener>       Er is een nodig voor het ondersteunen van tekens dan letters en cijfers in de URI&quot;s. Een voorbeeld is de volgende URI die wordt gebruikt voor het ophalen van klantgegevens voor klant &quot;&1;/3812&quot; number: `http://www.contoso.com/Customer(&quot;1%2F3812&quot;)/` Let op de slash procent gecodeerd in de Uri (2F %). Dit is nodig omdat in dit geval het slash-teken gegevens en niet een padscheidingsteken vertegenwoordigt.       De reeks wordt doorgegeven aan de constructor Uri zal leiden tot de volgende URI: `http://www.contoso.com/Customer(&quot;1/3812&quot;)/` verdelen van het pad in de segmenten zou leiden tot de volgende elementen: `Customer(&quot;1` `3812&quot;)` dit is niet de bedoeling van de afzender van de aanvraag.              Als de <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>eigenschap is ingesteld op false, wordt tijdens de <xref:System.Net.HttpListener>een aanvraag ontvangt de onbewerkte URI wordt gebruikt in plaats van de geconverteerde URI van `http.sys` als invoer voor de eigenschap Url.</xref:System.Net.HttpListener> </xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>"
  example:
  - "The following code example demonstrates using the Url property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_20_1.cs)]"
  syntax:
    content: public Uri Url { get; }
    return:
      type: System.Uri
      description: "Een <xref:System.Uri>-object dat de door de client aangevraagde resource identificeert.</xref:System.Uri>"
  overload: System.Net.HttpListenerRequest.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UrlReferrer
  id: UrlReferrer
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
  fullName: System.Net.HttpListenerRequest.UrlReferrer
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de id URI (Uniform Resource) van de resource die de client worden aangeduid met de server."
  remarks: "Als een client heeft een hyperlink naar de aangevraagde URI gevolgd, de aanvraag bevat mogelijk een `Referrer` header die identificeert de URI van de resource die deel uitmaakt van de hyperlink.       Clients kunnen vervalsen of ervoor kiezen geen te presenteren een <xref:System.Net.HttpRequestHeader>header.</xref:System.Net.HttpRequestHeader> Daarom terwijl de UrlReferrer eigenschap is handig voor het identificeren van basic trends in webverkeer; u moet deze niet gebruiken als onderdeel van een autorisatieschema voor toegang tot gegevens.       Zie voor een volledige lijst van aanvraagheaders de <xref:System.Net.HttpRequestHeader>opsomming.</xref:System.Net.HttpRequestHeader>       De UrlReferrer is null wanneer er geen `Referrer` header in de aanvraag of wanneer de `Referrer` header is aanwezig in de aanvraag, maar biedt niet parseren naar een geldige <xref:System.Uri>.</xref:System.Uri>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_22_1.cs)]"
  syntax:
    content: public Uri UrlReferrer { get; }
    return:
      type: System.Uri
      description: "Een <xref:System.Uri>object met de tekst van de aanvraag <xref:System.Net.HttpRequestHeader>koptekst of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de header niet in de aanvraag opgenomen is.</xref:System.Net.HttpRequestHeader> </xref:System.Uri>"
  overload: System.Net.HttpListenerRequest.UrlReferrer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserAgent
  id: UserAgent
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
  fullName: System.Net.HttpListenerRequest.UserAgent
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de gebruikersagent aangeboden door de client."
  remarks: "De `User-Agent` header bevat doorgaans tekst waarmee het aantal naam en versie van de software die wordt gebruikt voor het genereren van de aanvraag.       Zie voor een volledige lijst van aanvraagheaders de <xref:System.Net.HttpRequestHeader>opsomming.</xref:System.Net.HttpRequestHeader>       De UserAgent is null wanneer er geen `User-Agent` header in de aanvraag."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_42_1.cs)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "Een <xref:System.String>object met de tekst van de aanvraag <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> header.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserAgent*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserHostAddress
  id: UserHostAddress
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
  fullName: System.Net.HttpListenerRequest.UserHostAddress
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de server IP-adres en poort nummer waarnaar de aanvraag wordt omgeleid."
  remarks: "De informatie die wordt geretourneerd door deze eigenschap is ook beschikbaar in de <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>eigenschapswaarde.</xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>"
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_6_1.cs)]"
  syntax:
    content: public string UserHostAddress { get; }
    return:
      type: System.String
      description: "Een <xref:System.String>die de informatie over het adres van de host bevat.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserHostAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserHostName
  id: UserHostName
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
  fullName: System.Net.HttpListenerRequest.UserHostName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee wordt de DNS-naam en, indien opgegeven, wordt het poortnummer dat wordt opgegeven door de client."
  remarks: "De `Host` header bevat de naam van de aangevraagde server-host en het poortnummer, indien opgegeven, gescheiden door een dubbelepunt (bijvoorbeeld `www.contoso.com:8080`).       Deze eigenschap kunt u verschillende antwoorden, afhankelijk van de hostnaam die is opgegeven in de aanvraag te retourneren.       Zie voor een volledige lijst van aanvraagheaders de <xref:System.Net.HttpRequestHeader>opsomming.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_39_1.cs)]"
  syntax:
    content: public string UserHostName { get; }
    return:
      type: System.String
      description: "Een <xref:System.String>-waarde die de tekst van de aanvraag bevat <xref uid=&quot;langword_csharp_Host&quot; name=&quot;Host&quot; href=&quot;&quot;> </xref> header.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserLanguages
  id: UserLanguages
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
  fullName: System.Net.HttpListenerRequest.UserLanguages
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hiermee haalt u de natuurlijke-talen die verkozen voor het antwoord worden."
  remarks: "Voor een gedetailleerde beschrijving van de `Accept-Language` -kop, Zie RFC 2616 sectie 14.4, beschikbaar op [http://www.rfc-editor.org](http://www.rfc-editor.org/).       Zie voor een volledige lijst van aanvraagheaders de <xref:System.Net.HttpRequestHeader>opsomming.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example displays the languages from the request's `Accept-Language` header.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_18_1.cs)]"
  syntax:
    content: public string[] UserLanguages { get; }
    return:
      type: System.String[]
      description: "Een <xref:System.String>matrix met de talen die zijn opgegeven in de aanvraag <xref:System.Net.HttpRequestHeader>header of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de clientaanvraag geen bevat een <xref:System.Net.HttpRequestHeader>header.</xref:System.Net.HttpRequestHeader> </xref:System.Net.HttpRequestHeader> </xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserLanguages*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.HttpListenerRequest.AcceptTypes
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
  fullName: System.Net.HttpListenerRequest.AcceptTypes
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: BeginGetClientCertificate(AsyncCallback,Object)
  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  fullName: System.Net.HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.HttpListenerRequest.ClientCertificateError
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
  fullName: System.Net.HttpListenerRequest.ClientCertificateError
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerRequest.ContentEncoding
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
  fullName: System.Net.HttpListenerRequest.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerRequest.ContentLength64
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
  fullName: System.Net.HttpListenerRequest.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerRequest.ContentType
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
  fullName: System.Net.HttpListenerRequest.ContentType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerRequest.Cookies
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
  fullName: System.Net.HttpListenerRequest.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: EndGetClientCertificate(IAsyncResult)
  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  fullName: System.Net.HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Net.HttpListenerRequest.GetClientCertificate
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificate()
  nameWithType: HttpListenerRequest.GetClientCertificate()
  fullName: System.Net.HttpListenerRequest.GetClientCertificate()
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificateAsync()
  nameWithType: HttpListenerRequest.GetClientCertificateAsync()
  fullName: System.Net.HttpListenerRequest.GetClientCertificateAsync()
- uid: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<X509Certificate2>
  nameWithType: Task<X509Certificate2>
  fullName: System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerRequest.HasEntityBody
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
  fullName: System.Net.HttpListenerRequest.HasEntityBody
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerRequest.Headers
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Headers
  nameWithType: HttpListenerRequest.Headers
  fullName: System.Net.HttpListenerRequest.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Net.HttpListenerRequest.HttpMethod
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
  fullName: System.Net.HttpListenerRequest.HttpMethod
- uid: System.Net.HttpListenerRequest.InputStream
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
  fullName: System.Net.HttpListenerRequest.InputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerRequest.IsAuthenticated
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
  fullName: System.Net.HttpListenerRequest.IsAuthenticated
- uid: System.Net.HttpListenerRequest.IsLocal
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
  fullName: System.Net.HttpListenerRequest.IsLocal
- uid: System.Net.HttpListenerRequest.IsSecureConnection
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
  fullName: System.Net.HttpListenerRequest.IsSecureConnection
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
  fullName: System.Net.HttpListenerRequest.IsWebSocketRequest
- uid: System.Net.HttpListenerRequest.KeepAlive
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
  fullName: System.Net.HttpListenerRequest.KeepAlive
- uid: System.Net.HttpListenerRequest.LocalEndPoint
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
  fullName: System.Net.HttpListenerRequest.LocalEndPoint
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.HttpListenerRequest.ProtocolVersion
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
  fullName: System.Net.HttpListenerRequest.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerRequest.QueryString
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
  fullName: System.Net.HttpListenerRequest.QueryString
- uid: System.Net.HttpListenerRequest.RawUrl
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
  fullName: System.Net.HttpListenerRequest.RawUrl
- uid: System.Net.HttpListenerRequest.RemoteEndPoint
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
  fullName: System.Net.HttpListenerRequest.RemoteEndPoint
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
  fullName: System.Net.HttpListenerRequest.RequestTraceIdentifier
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.HttpListenerRequest.ServiceName
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
  fullName: System.Net.HttpListenerRequest.ServiceName
- uid: System.Net.HttpListenerRequest.TransportContext
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
  fullName: System.Net.HttpListenerRequest.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.HttpListenerRequest.Url
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Url
  nameWithType: HttpListenerRequest.Url
  fullName: System.Net.HttpListenerRequest.Url
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.HttpListenerRequest.UrlReferrer
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
  fullName: System.Net.HttpListenerRequest.UrlReferrer
- uid: System.Net.HttpListenerRequest.UserAgent
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
  fullName: System.Net.HttpListenerRequest.UserAgent
- uid: System.Net.HttpListenerRequest.UserHostAddress
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
  fullName: System.Net.HttpListenerRequest.UserHostAddress
- uid: System.Net.HttpListenerRequest.UserHostName
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
  fullName: System.Net.HttpListenerRequest.UserHostName
- uid: System.Net.HttpListenerRequest.UserLanguages
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
  fullName: System.Net.HttpListenerRequest.UserLanguages
- uid: System.Net.HttpListenerRequest.AcceptTypes*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: BeginGetClientCertificate
  nameWithType: HttpListenerRequest.BeginGetClientCertificate
- uid: System.Net.HttpListenerRequest.ClientCertificateError*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
- uid: System.Net.HttpListenerRequest.ContentEncoding*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
- uid: System.Net.HttpListenerRequest.ContentLength64*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
- uid: System.Net.HttpListenerRequest.ContentType*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
- uid: System.Net.HttpListenerRequest.Cookies*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: EndGetClientCertificate
  nameWithType: HttpListenerRequest.EndGetClientCertificate
- uid: System.Net.HttpListenerRequest.GetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificate
  nameWithType: HttpListenerRequest.GetClientCertificate
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificateAsync
  nameWithType: HttpListenerRequest.GetClientCertificateAsync
- uid: System.Net.HttpListenerRequest.HasEntityBody*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
- uid: System.Net.HttpListenerRequest.Headers*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Headers
  nameWithType: HttpListenerRequest.Headers
- uid: System.Net.HttpListenerRequest.HttpMethod*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
- uid: System.Net.HttpListenerRequest.InputStream*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
- uid: System.Net.HttpListenerRequest.IsAuthenticated*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
- uid: System.Net.HttpListenerRequest.IsLocal*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
- uid: System.Net.HttpListenerRequest.IsSecureConnection*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
- uid: System.Net.HttpListenerRequest.KeepAlive*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
- uid: System.Net.HttpListenerRequest.LocalEndPoint*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
- uid: System.Net.HttpListenerRequest.ProtocolVersion*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
- uid: System.Net.HttpListenerRequest.QueryString*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
- uid: System.Net.HttpListenerRequest.RawUrl*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
- uid: System.Net.HttpListenerRequest.RemoteEndPoint*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
- uid: System.Net.HttpListenerRequest.ServiceName*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
- uid: System.Net.HttpListenerRequest.TransportContext*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
- uid: System.Net.HttpListenerRequest.Url*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Url
  nameWithType: HttpListenerRequest.Url
- uid: System.Net.HttpListenerRequest.UrlReferrer*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
- uid: System.Net.HttpListenerRequest.UserAgent*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
- uid: System.Net.HttpListenerRequest.UserHostAddress*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
- uid: System.Net.HttpListenerRequest.UserHostName*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
- uid: System.Net.HttpListenerRequest.UserLanguages*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
