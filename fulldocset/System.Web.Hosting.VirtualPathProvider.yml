### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.VirtualPathProvider
  id: VirtualPathProvider
  children:
  - System.Web.Hosting.VirtualPathProvider.#ctor
  - System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)
  - System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)
  - System.Web.Hosting.VirtualPathProvider.FileExists(System.String)
  - System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)
  - System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)
  - System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)
  - System.Web.Hosting.VirtualPathProvider.GetFile(System.String)
  - System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)
  - System.Web.Hosting.VirtualPathProvider.Initialize
  - System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService
  - System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)
  - System.Web.Hosting.VirtualPathProvider.Previous
  langs:
  - csharp
  name: VirtualPathProvider
  nameWithType: VirtualPathProvider
  fullName: System.Web.Hosting.VirtualPathProvider
  type: Class
  summary: "Biedt een aantal methoden waarmee u een webtoepassing voor het ophalen van bronnen van een virtuele bestandssysteem."
  remarks: "De VirtualPathProvider klasse biedt een aantal methoden voor het implementeren van een virtuele bestandssysteem voor een webtoepassing. De bestanden en mappen in een virtuele bestandssysteem worden beheerd door een ander gegevensarchief dan het bestandssysteem van de server-besturingssysteem. U kunt bijvoorbeeld een virtuele bestandssysteem gebruiken voor het opslaan van inhoud in een SQL Server-database.       U kunt elk bestand dat is verwerkt op verzoek opslaan in een virtuele bestandssysteem. Dit omvat:-ASP.NET-pagina&quot;s, basispagina gebruikersbesturingselementen en andere objecten.      -Standaardwebpagina&quot;s met extensies zoals htm- en jpg.      -Alle aangepaste extensie die is toegewezen aan een <xref:System.Web.Compilation.BuildProvider>exemplaar.</xref:System.Web.Compilation.BuildProvider>      -Een thema in met de naam de `App_Theme` map.       U kunt ASP.NET-toepassingsmappen of bestanden die op toepassingsniveau assembly&quot;s in een virtuele bestandssysteem genereren niet opslaan. Dit omvat:-bestand de Global.asax.      -Web.config-bestanden.      -Site kaart gegevensbestanden worden opgeslagen die worden gebruikt door de <xref:System.Web.XmlSiteMapProvider>.</xref:System.Web.XmlSiteMapProvider>      -Mappen die toepassing assembly&quot;s bevatten of die toepassing assembly&quot;s te genereren: `Bin`, `App_Code`, `App_GlobalResources`, een `App_LocalResources`.      -De map application data `App_Data`.      > [!NOTE] > Als een website vooraf is gecompileerd voor implementatie, geleverd door een exemplaar van de VirtualPathProvider inhoud is niet gecompileerd en er zijn geen exemplaren VirtualPathProvider worden gebruikt door de vooraf gecompileerde site.      ## Een exemplaar van A VirtualPathProvider aangepaste VirtualPathProvider registreren met de ASP.NET-compilatie-systeem moet worden geregistreerd met behulp van de <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=fullName>methode voordat alle parseren van de pagina of de compilatie wordt uitgevoerd door de webtoepassing.</xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=fullName>       Normaal gesproken een VirtualPathProvider-exemplaar is geregistreerd in een `AppInitialize` methode die is gedefinieerd de `App_Code` directory, of tijdens de `Application_Start` gebeurtenis in de `Global.asax` bestand. Voor een voorbeeld van een VirtualPathProvider registratie-instantie een `AppInitialize` methode, Zie de sectie voorbeeld.       U kunt een exemplaar van de VirtualPathProvider registreren bij andere gebeurtenissen, maar pagina&quot;s in de cache opgeslagen voordat de VirtualPathProvider-exemplaar is geregistreerd en de gecompileerd niet meer geldig, zelfs als het nieuwe exemplaar van de VirtualPathProvider nu de bron voor de eerder gecompileerde pagina bieden zou."
  example:
  - "The following code example is a VirtualPathProvider class implementation that creates a virtual file system using information stored in a <xref:System.Data.DataSet> object. The code example works with the code examples for the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> classes to provide virtual resources from a data store that is loaded into a <xref:System.Data.DataSet> object.  \n  \n This example has four parts: the VirtualPathProvider class implementation, an XML data file used to populate the <xref:System.Data.DataSet> object, an `AppStart` object that contains an `AppInitialize` method used to register the VirtualPathProvider class with the compilation system, and an ASP.NET page that provides links to the virtual files.  \n  \n To use this sample code in an application, follow these steps.  \n  \n1.  Create a sample application on your Web server.  \n  \n2.  Copy the source code for the custom VirtualPathProvider object (see below) into a file in the application's `App_Code` directory.  \n  \n3.  Copy the source code for the custom <xref:System.Web.Hosting.VirtualDirectory> object (see the Example section in the <xref:System.Web.Hosting.VirtualDirectory> class overview topic) into a file in the application's `App_Code` directory.  \n  \n4.  Copy the source code for the custom <xref:System.Web.Hosting.VirtualFile> object (see the Example section in the <xref:System.Web.Hosting.VirtualFile> class overview topic) into a file in the application's `App_Code` directory.  \n  \n5.  Copy the source code for the `AppStart` object (see below) into a file in the application's `App_Code` directory.  \n  \n6.  Copy the XML data (see below) into a file named `XMLData.xml` into a file in the application's `App_Data` directory.  \n  \n7.  Copy the `default.aspx` file (see below) into the root directory of the sample application. Use a Web browser to open the `default.aspx` file, and then click the links on the page to see the contents of the virtual files.  \n  \n The first example is a custom VirtualPathProvider class. The <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> and <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> methods are overridden to indicate whether a requested directory is present in the virtual file system. The <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> and <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> methods are overridden to return custom <xref:System.Web.Hosting.VirtualDirectory> and <xref:System.Web.Hosting.VirtualFile> instances containing information from the virtual file system.  \n  \n The class also provides a `GetVirtualData` method used by the <xref:System.Web.Hosting.VirtualDirectory> and <xref:System.Web.Hosting.VirtualFile> classes to access the <xref:System.Data.DataSet> object containing the virtual file system data. In a production implementation, this method would typically be implemented in a business object responsible for interacting with the data store.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#20](~/add/codesnippet/csharp/t-system.web.hosting.vir_1_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/add/codesnippet/visualbasic/t-system.web.hosting.vir_1_1.vb)]  \n  \n The second example is the XML data file used to populate the <xref:System.Data.DataSet> object returned by the custom VirtualPathProvider object. This XML data is used to demonstrate using the VirtualPathProvider, <xref:System.Web.Hosting.VirtualDirectory>, and <xref:System.Web.Hosting.VirtualFile> objects to retrieve data from external data and is not intended to represent a production-quality data store.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n  <resource type=\"dir\"   \n    path=\"/vrDir\"   \n    parentPath=\"\"   \n    content=\"\">  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level1FileA.vrf\"  \n      parentPath=\"/vrDir\"   \n      content=\"This is the content of file Level1FileA.\">  \n    </resource>  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level1FileB.vrf\"  \n      parentPath=\"/vrDir\"   \n      content=\"This is the content of file Level1FileB.\">  \n    </resource>  \n    <resource type=\"dir\"   \n      path=\"/vrDir/Level2DirA\"   \n      parentPath=\"/vrDir\"   \n      content=\"\">  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level2DirA/Level2FileA.vrf\"   \n      parentPath=\"/vrDir/Level2DirA\"   \n      content=\"This is the content of file Level2FileA.\">  \n    </resource>  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level2DirA/Level2FileB.vrf\"  \n      parentPath=\"/vrDir/Level2DirA\"   \n      content=\"This is the content of file Level2FileB.\">  \n    </resource>  \n  </resource>  \n  <resource type=\"dir\"   \n    path=\"/vrDir/Level2DirB\"   \n    parentPath=\"/vrDir\"   \n    content=\"\">  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level2DirB/Level2FileA.vrf\"   \n      parentPath=\"/vrDir/Level2DirB\"   \n      content=\"This is the content of file Level2FileA.\">  \n    </resource>  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level2DirB/Level2FileB.vrf\"  \n      parentPath=\"/vrDir/Level2DirB\"   \n      content=\"This is the content of file Level2FileB.\">  \n    </resource>  \n  </resource>  \n</resource>  \n```  \n  \n The third example provides an `AppStart` object that contains an `AppInitialize` method. This method is called during the initialization of an ASP.NET application to perform any custom initialization required. In this case, it registers the custom VirtualPathProvider object with the ASP.NET build system.  \n  \n [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/add/codesnippet/visualbasic/t-system.web.hosting.vir_1_2.vb)]\n [!code-cs[System.Web.Hosting.VirtualPathProvider#10](~/add/codesnippet/csharp/t-system.web.hosting.vir_1_2.cs)]  \n  \n The last example is an ASP.NET page that contains links to the virtual files contained in the virtual file system.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#1](~/add/codesnippet/csharp/t-system.web.hosting.vir_1_3.aspx)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#1](~/add/codesnippet/visualbasic/t-system.web.hosting.vir_1_3.aspx)]"
  syntax:
    content: 'public abstract class VirtualPathProvider : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.#ctor
  id: '#ctor'
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: VirtualPathProvider()
  nameWithType: VirtualPathProvider.VirtualPathProvider()
  fullName: System.Web.Hosting.VirtualPathProvider.VirtualPathProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Initialiseert de klasse voor gebruik door een overgenomen klasse-exemplaar. Deze constructor kan alleen worden aangeroepen door een overgenomen klasse."
  remarks: "Als u de constructor VirtualPathProvider overschrijft, uitstellen elke initialisatie die moet worden uitgevoerd na de <xref:System.Web.Hosting.VirtualPathProvider>object is geregistreerd bij de <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A>methode.</xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> </xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the VirtualPathProvider constructor that initializes a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#25](~/add/codesnippet/csharp/m-system.web.hosting.vir_4_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_4_1.vb)]"
  syntax:
    content: protected VirtualPathProvider ();
    parameters: []
  overload: System.Web.Hosting.VirtualPathProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)
  id: CombineVirtualPaths(System.String,System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: CombineVirtualPaths(String,String)
  nameWithType: VirtualPathProvider.CombineVirtualPaths(String,String)
  fullName: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Combineert een basispad met een relatief pad naar een volledig pad naar virtuele resource retourneren."
  remarks: "Gebruik de methode CombineVirtualPaths voor de inhoud van een relatief pad naar een virtuele bron controleren en het uitvoeren van eventuele wijzigingen die zijn vereist.       De standaardimplementatie combineert de `basePath` en `relativePath` parameters volgens de standaard ASP.NET pad verwerking."
  syntax:
    content: public virtual string CombineVirtualPaths (string basePath, string relativePath);
    parameters:
    - id: basePath
      type: System.String
      description: "Het basispad voor de toepassing."
    - id: relativePath
      type: System.String
      description: "Het pad naar de virtuele-resource, ten opzichte van het basispad."
    return:
      type: System.String
      description: "Het volledige pad naar een virtuele bron."
  overload: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: VirtualPathProvider.DirectoryExists(String)
  fullName: System.Web.Hosting.VirtualPathProvider.DirectoryExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Haalt een waarde die aangeeft of een map in het virtuele bestandssysteem bestaat."
  remarks: "Negeer de methode DirectoryExists om aan te geven aan de compilatie-systeem dat de resource wordt vertegenwoordigd door `virtualDir` bestaat in het virtuele bestandssysteem aangeboden door deze <xref:System.Web.Hosting.VirtualPathProvider>exemplaar.</xref:System.Web.Hosting.VirtualPathProvider>       Als uw aangepaste <xref:System.Web.Hosting.VirtualPathProvider>klasse ondersteunt geen mappen, de methode DirectoryExists als resultaat moet geven `false`.</xref:System.Web.Hosting.VirtualPathProvider>      > [!NOTE] > Als het virtuele bestandssysteem thema&quot;s voor de website bevat (door het maken van een virtuele `App_Themes` directory), uw aangepaste <xref:System.Web.Hosting.VirtualPathProvider>klasse moet ondersteuning bieden voor mappen.</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the DirectoryExists method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#22](~/add/codesnippet/csharp/m-system.web.hosting.vir_5_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_5_1.vb)]"
  syntax:
    content: public virtual bool DirectoryExists (string virtualDir);
    parameters:
    - id: virtualDir
      type: System.String
      description: "Het pad naar de virtuele map."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de map in het virtuele bestandssysteem bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.VirtualPathProvider.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.FileExists(System.String)
  id: FileExists(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: VirtualPathProvider.FileExists(String)
  fullName: System.Web.Hosting.VirtualPathProvider.FileExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Haalt een waarde die aangeeft of een bestand in het virtuele bestandssysteem aanwezig."
  remarks: "Negeer de methode FileExists om aan te geven aan de compilatie-systeem dat de resource wordt vertegenwoordigd door `virtualPath` bestaat in het virtuele bestandssysteem aangeboden door deze <xref:System.Web.Hosting.VirtualPathProvider>exemplaar.</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the FileExists method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#21](~/add/codesnippet/csharp/m-system.web.hosting.vir_6_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_6_1.vb)]"
  syntax:
    content: public virtual bool FileExists (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het pad naar het virtuele-bestand."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het bestand in het virtuele bestandssysteem bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.VirtualPathProvider.FileExists*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)
  id: GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetCacheDependency(String,IEnumerable,DateTime)
  nameWithType: VirtualPathProvider.GetCacheDependency(String,IEnumerable,DateTime)
  fullName: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(String,IEnumerable,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Maakt een cacheafhankelijkheid op basis van de opgegeven virtuele paden."
  remarks: "Retourneert de standaardimplementatie van de methode GetCacheDependency `null`. Met virtuele bronnen cache voor later gebruik moet u de methode GetCacheDependency overschrijven of de <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A>methode.</xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A>"
  example:
  - "The following code example implements the GetCacheDependency method for a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#28](~/add/codesnippet/csharp/a8fb412c-a81c-4f3f-b624-_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/add/codesnippet/visualbasic/a8fb412c-a81c-4f3f-b624-_1.vb)]"
  syntax:
    content: public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het pad naar de primaire virtuele bron."
    - id: virtualPathDependencies
      type: System.Collections.IEnumerable
      description: "Een matrix van paden naar andere resources die vereist zijn door de primaire virtuele resource."
    - id: utcStart
      type: System.DateTime
      description: "De UTC-tijd waarop de virtuele bronnen zijn gelezen."
    return:
      type: System.Web.Caching.CacheDependency
      description: "Een <xref href=&quot;System.Web.Caching.CacheDependency&quot;> </xref> -object voor de opgegeven virtuele bronnen."
  overload: System.Web.Hosting.VirtualPathProvider.GetCacheDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)
  id: GetCacheKey(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetCacheKey(String)
  nameWithType: VirtualPathProvider.GetCacheKey(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetCacheKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retourneert een Cachesleutel moet worden gebruikt voor het virtuele pad."
  remarks: "De methode GetCacheKey gebruiken voor een aangepaste Cachesleutel voor virtuele bronnen. Als u de methode GetCacheKey niet overschrijven, wordt het virtuele pad voor de cachesleutel gebruikt."
  syntax:
    content: public virtual string GetCacheKey (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het pad naar de virtuele bron."
    return:
      type: System.String
      description: "Een Cachesleutel voor de opgegeven virtuele-resource."
  overload: System.Web.Hosting.VirtualPathProvider.GetCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)
  id: GetDirectory(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetDirectory(String)
  nameWithType: VirtualPathProvider.GetDirectory(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetDirectory(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee haalt u een virtuele map van het virtuele bestandssysteem."
  remarks: "De methode GetDirectory retourneert een afstammeling van het <xref:System.Web.Hosting.VirtualDirectory>klasse met de bestanden en mappen die in de map die is opgegeven in de `virtualDir` parameter.</xref:System.Web.Hosting.VirtualDirectory>       Als uw aangepaste <xref:System.Web.Hosting.VirtualPathProvider>klasse ondersteunt geen mappen, de methode GetDirectory als resultaat moet geven `null`.</xref:System.Web.Hosting.VirtualPathProvider>      > [!NOTE] > Als het virtuele bestandssysteem thema&quot;s voor de website bevat (door het maken van een virtuele `App_Themes` directory), uw aangepaste <xref:System.Web.Hosting.VirtualPathProvider>klasse moet ondersteuning bieden voor mappen.</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the GetDirectory method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#24](~/add/codesnippet/csharp/m-system.web.hosting.vir_8_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_8_1.vb)]"
  syntax:
    content: public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);
    parameters:
    - id: virtualDir
      type: System.String
      description: "Het pad naar de virtuele map."
    return:
      type: System.Web.Hosting.VirtualDirectory
      description: "Een afstammeling van het <xref href=&quot;System.Web.Hosting.VirtualDirectory&quot;> </xref> klasse die een map in het virtuele bestandssysteem vertegenwoordigt."
  overload: System.Web.Hosting.VirtualPathProvider.GetDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetFile(System.String)
  id: GetFile(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetFile(String)
  nameWithType: VirtualPathProvider.GetFile(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee haalt u een virtuele-bestand van het virtuele bestandssysteem."
  remarks: "De methode GetFile retourneert een afstammeling van het <xref:System.Web.Hosting.VirtualFile>klasse die staat voor het bestand dat is opgegeven door de `virtualPath` parameter.</xref:System.Web.Hosting.VirtualFile>"
  example:
  - "The following code example is an implementation of the GetFile method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#23](~/add/codesnippet/csharp/m-system.web.hosting.vir_3_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_3_1.vb)]"
  syntax:
    content: public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het pad naar het virtuele-bestand."
    return:
      type: System.Web.Hosting.VirtualFile
      description: "Een afstammeling van het <xref href=&quot;System.Web.Hosting.VirtualFile&quot;> </xref> klasse die een bestand in het virtuele bestandssysteem vertegenwoordigt."
  overload: System.Web.Hosting.VirtualPathProvider.GetFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)
  id: GetFileHash(System.String,System.Collections.IEnumerable)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: GetFileHash(String,IEnumerable)
  nameWithType: VirtualPathProvider.GetFileHash(String,IEnumerable)
  fullName: System.Web.Hosting.VirtualPathProvider.GetFileHash(String,IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retourneert een hash van de opgegeven virtuele paden."
  remarks: "Gebruik de methode GetFileHash voor een hash van de afhankelijkheden voor een bron voor virtuele-bestandssysteem."
  syntax:
    content: public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het pad naar de primaire virtuele bron."
    - id: virtualPathDependencies
      type: System.Collections.IEnumerable
      description: "Een matrix van paden naar de andere virtuele bronnen die zijn vereist voor de primaire virtuele bron."
    return:
      type: System.String
      description: "Een hash van de opgegeven virtuele paden."
  overload: System.Web.Hosting.VirtualPathProvider.GetFileHash*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.Initialize
  id: Initialize
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: Initialize()
  nameWithType: VirtualPathProvider.Initialize()
  fullName: System.Web.Hosting.VirtualPathProvider.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Initialiseert de <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> exemplaar."
  remarks: "De methode Initialize is aangeroepen nadat de provider is geregistreerd met de ASP.NET-compilatie-systeem. De methode Initialize wordt gebruikt voor elke initialisatie vereist na het <xref:System.Web.Hosting.VirtualPathProvider>exemplaar in de omgeving met betrekking de toepassing tot is geplaatst.</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is an implementation of the Initialize method that sets the path to a data file from the application's <xref:System.Web.Hosting.HostingEnvironment> instance. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#26](~/add/codesnippet/csharp/m-system.web.hosting.vir_0_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_0_1.vb)]"
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.Web.Hosting.VirtualPathProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: VirtualPathProvider.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Geeft de <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> een oneindige levensduur object door te voorkomen dat een lease wordt gemaakt."
  remarks: "Deze methode overschrijft de <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>methode in de basis-klasse.</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Retourneert altijd `null` en waardoor wordt voorkomen dat een lease van wordt gemaakt die beperkt de <xref:System.Web.Hosting.VirtualPathProvider>levensduur van het object.</xref:System.Web.Hosting.VirtualPathProvider>"
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)
  id: OpenFile(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: OpenFile(String)
  nameWithType: VirtualPathProvider.OpenFile(String)
  fullName: System.Web.Hosting.VirtualPathProvider.OpenFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retourneert een stream van een virtuele-bestand."
  remarks: "De methode OpenFile is een gemak-methode waarmee u kunt een stroom ophalen van een virtuele-bestand zonder dat er een <xref:System.Web.Hosting.VirtualPathProvider>exemplaar.</xref:System.Web.Hosting.VirtualPathProvider>"
  syntax:
    content: public static System.IO.Stream OpenFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het pad naar het virtuele-bestand."
    return:
      type: System.IO.Stream
      description: "Een alleen-lezen <xref:System.IO.Stream>object voor de opgegeven virtuele bestandssysteem of de resource.</xref:System.IO.Stream>"
  overload: System.Web.Hosting.VirtualPathProvider.OpenFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualPathProvider.Previous
  id: Previous
  parent: System.Web.Hosting.VirtualPathProvider
  langs:
  - csharp
  name: Previous
  nameWithType: VirtualPathProvider.Previous
  fullName: System.Web.Hosting.VirtualPathProvider.Previous
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Wordt een verwijzing naar een eerder geregistreerde <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> object in het systeem compilatie."
  remarks: "Wanneer een <xref:System.Web.Hosting.VirtualPathProvider>object is geregistreerd bij de ASP.NET-compilatie-systeem, wordt deze toegevoegd aan een keten van providers.</xref:System.Web.Hosting.VirtualPathProvider> Gebruik de eigenschap vorige op de verwerking van de hand uit naar de vorige <xref:System.Web.Hosting.VirtualPathProvider>object in de keten als het gevraagde pad wordt niet geleverd door <xref:System.Web.Hosting.VirtualPathProvider>exemplaar.</xref:System.Web.Hosting.VirtualPathProvider> </xref:System.Web.Hosting.VirtualPathProvider>       De keten van pad providers worden altijd eindigt met de standaardprovider van ASP.NET die bestanden van het bestandssysteem fungeert."
  example:
  - "The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method. If the requested virtual directory does not begin with the string `\"/vrdir\"`, the method uses the Previous property to pass the request to the next <xref:System.Web.Hosting.VirtualPathProvider> object in the chain. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#23](~/add/codesnippet/csharp/p-system.web.hosting.vir_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/add/codesnippet/visualbasic/p-system.web.hosting.vir_1.vb)]"
  syntax:
    content: protected System.Web.Hosting.VirtualPathProvider Previous { get; }
    return:
      type: System.Web.Hosting.VirtualPathProvider
      description: "De volgende <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> object in het systeem compilatie."
  overload: System.Web.Hosting.VirtualPathProvider.Previous*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Web.Hosting.VirtualPathProvider.#ctor
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: VirtualPathProvider()
  nameWithType: VirtualPathProvider.VirtualPathProvider()
  fullName: System.Web.Hosting.VirtualPathProvider.VirtualPathProvider()
- uid: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: CombineVirtualPaths(String,String)
  nameWithType: VirtualPathProvider.CombineVirtualPaths(String,String)
  fullName: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: VirtualPathProvider.DirectoryExists(String)
  fullName: System.Web.Hosting.VirtualPathProvider.DirectoryExists(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.VirtualPathProvider.FileExists(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: FileExists(String)
  nameWithType: VirtualPathProvider.FileExists(String)
  fullName: System.Web.Hosting.VirtualPathProvider.FileExists(String)
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetCacheDependency(String,IEnumerable,DateTime)
  nameWithType: VirtualPathProvider.GetCacheDependency(String,IEnumerable,DateTime)
  fullName: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(String,IEnumerable,DateTime)
- uid: System.Web.Caching.CacheDependency
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetCacheKey(String)
  nameWithType: VirtualPathProvider.GetCacheKey(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetCacheKey(String)
- uid: System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetDirectory(String)
  nameWithType: VirtualPathProvider.GetDirectory(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetDirectory(String)
- uid: System.Web.Hosting.VirtualDirectory
  parent: System.Web.Hosting
  isExternal: false
  name: VirtualDirectory
  nameWithType: VirtualDirectory
  fullName: System.Web.Hosting.VirtualDirectory
- uid: System.Web.Hosting.VirtualPathProvider.GetFile(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetFile(String)
  nameWithType: VirtualPathProvider.GetFile(String)
  fullName: System.Web.Hosting.VirtualPathProvider.GetFile(String)
- uid: System.Web.Hosting.VirtualFile
  parent: System.Web.Hosting
  isExternal: false
  name: VirtualFile
  nameWithType: VirtualFile
  fullName: System.Web.Hosting.VirtualFile
- uid: System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetFileHash(String,IEnumerable)
  nameWithType: VirtualPathProvider.GetFileHash(String,IEnumerable)
  fullName: System.Web.Hosting.VirtualPathProvider.GetFileHash(String,IEnumerable)
- uid: System.Web.Hosting.VirtualPathProvider.Initialize
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: Initialize()
  nameWithType: VirtualPathProvider.Initialize()
  fullName: System.Web.Hosting.VirtualPathProvider.Initialize()
- uid: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: VirtualPathProvider.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: OpenFile(String)
  nameWithType: VirtualPathProvider.OpenFile(String)
  fullName: System.Web.Hosting.VirtualPathProvider.OpenFile(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Hosting.VirtualPathProvider.Previous
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: Previous
  nameWithType: VirtualPathProvider.Previous
  fullName: System.Web.Hosting.VirtualPathProvider.Previous
- uid: System.Web.Hosting.VirtualPathProvider
  parent: System.Web.Hosting
  isExternal: false
  name: VirtualPathProvider
  nameWithType: VirtualPathProvider
  fullName: System.Web.Hosting.VirtualPathProvider
- uid: System.Web.Hosting.VirtualPathProvider.#ctor*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: VirtualPathProvider
  nameWithType: VirtualPathProvider.VirtualPathProvider
- uid: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: CombineVirtualPaths
  nameWithType: VirtualPathProvider.CombineVirtualPaths
- uid: System.Web.Hosting.VirtualPathProvider.DirectoryExists*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: DirectoryExists
  nameWithType: VirtualPathProvider.DirectoryExists
- uid: System.Web.Hosting.VirtualPathProvider.FileExists*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: FileExists
  nameWithType: VirtualPathProvider.FileExists
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheDependency*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetCacheDependency
  nameWithType: VirtualPathProvider.GetCacheDependency
- uid: System.Web.Hosting.VirtualPathProvider.GetCacheKey*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetCacheKey
  nameWithType: VirtualPathProvider.GetCacheKey
- uid: System.Web.Hosting.VirtualPathProvider.GetDirectory*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetDirectory
  nameWithType: VirtualPathProvider.GetDirectory
- uid: System.Web.Hosting.VirtualPathProvider.GetFile*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetFile
  nameWithType: VirtualPathProvider.GetFile
- uid: System.Web.Hosting.VirtualPathProvider.GetFileHash*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: GetFileHash
  nameWithType: VirtualPathProvider.GetFileHash
- uid: System.Web.Hosting.VirtualPathProvider.Initialize*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: Initialize
  nameWithType: VirtualPathProvider.Initialize
- uid: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: VirtualPathProvider.InitializeLifetimeService
- uid: System.Web.Hosting.VirtualPathProvider.OpenFile*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: OpenFile
  nameWithType: VirtualPathProvider.OpenFile
- uid: System.Web.Hosting.VirtualPathProvider.Previous*
  parent: System.Web.Hosting.VirtualPathProvider
  isExternal: false
  name: Previous
  nameWithType: VirtualPathProvider.Previous
