### YamlMime:ManagedReference
items:
- uid: System.Windows.DataTemplate
  id: DataTemplate
  children:
  - System.Windows.DataTemplate.#ctor
  - System.Windows.DataTemplate.#ctor(System.Object)
  - System.Windows.DataTemplate.DataTemplateKey
  - System.Windows.DataTemplate.DataType
  - System.Windows.DataTemplate.Triggers
  - System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: DataTemplate
  nameWithType: DataTemplate
  fullName: System.Windows.DataTemplate
  type: Class
  summary: "Hierin wordt beschreven in de visuele structuur van een gegevensobject."
  remarks: "Een DataTemplate kunt u de weergave van uw gegevensobjecten opgeven. DataTemplate-objecten zijn bijzonder nuttig wanneer u afhankelijk maakt van een <xref:System.Windows.Controls.ItemsControl>, zoals een <xref:System.Windows.Controls.ListBox>aan de volledige verzameling.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.ItemsControl> Zonder specifieke instructies een <xref:System.Windows.Controls.ListBox>geeft de tekenreeksweergave van de objecten in een verzameling.</xref:System.Windows.Controls.ListBox> In dat geval kunt u een DataTemplate voor het definiëren van het uiterlijk van uw data-objecten. De inhoud van uw DataTemplate wordt de visuele structuur van uw data-objecten.       Zie voor een gedetailleerdere beschrijving [Templating overzicht](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a DataTemplate inline. The DataTemplate specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>. In this example, the data object is a class called `Task`. Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.  \n  \n [!code-xml[DataTemplatingIntro_snip#Inline](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#inline)]  \n  \n It is more common to define a DataTemplate in the resources section so it can be a reusable object, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#R1](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r1)]  \n[!code-xml[DataTemplatingIntro_snip#AsResource](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#asresource)]  \n[!code-xml[DataTemplatingIntro_snip#R2](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r2)]  \n  \n Now you can use `myTaskTemplate` as a resource, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#MyTaskTemplate](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#mytasktemplate)]  \n  \n For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)."
  syntax:
    content: >-
      [System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")]

      public class DataTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> klasse."
  syntax:
    content: public DataTemplate ();
    parameters: []
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> klasse met de opgegeven <xref:System.Windows.DataTemplate.DataType*>eigenschap.</xref:System.Windows.DataTemplate.DataType*>"
  remarks: "Om te verwijzen naar de typenaam van de klasse, gebruiken de [x: Type Opmaakextensie](~/add/includes/ajax-current-ext-md.md). Als de sjabloon is bedoeld voor [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] gegevens, dit is de tekenreeks met de labelnaam van de gegevens."
  syntax:
    content: public DataTemplate (object dataType);
    parameters:
    - id: dataType
      type: System.Object
      description: "Als de sjabloon is bedoeld voor objectgegevens, is dit de naam van het Type van het gegevensobject."
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataTemplateKey
  id: DataTemplateKey
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Haalt de standaardsleutel van de <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  remarks: "Als u geen instelt de [x: sleutel richtlijn](~/add/includes/ajax-current-ext-md.md) op een <xref:System.Windows.DataTemplate>die zich in een <xref:System.Windows.ResourceDictionary>, de DataTemplateKey wordt gebruikt als de sleutel.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.DataTemplate>"
  syntax:
    content: public object DataTemplateKey { get; }
    return:
      type: System.Object
      description: "De standaardsleutel van de <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataType
  id: DataType
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van het type waarvoor deze <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> is bedoeld."
  remarks: "Deze eigenschap is vergelijkbaar met de <xref:System.Windows.Style.TargetType%2A>eigenschap van de <xref:System.Windows.Style>klasse.</xref:System.Windows.Style> </xref:System.Windows.Style.TargetType%2A> Als u deze eigenschap instelt op het gegevenstype zonder op te geven een `x:Key`, wordt de <xref:System.Windows.DataTemplate>automatisch wordt toegepast op gegevensobjecten van dat type.</xref:System.Windows.DataTemplate> Houd er rekening mee dat wanneer u dat doen de `x:Key` impliciet is ingesteld. Dus als u dit toewijst <xref:System.Windows.DataTemplate>een `x:Key` waarde, u de impliciete zijn overschrijven `x:Key` en de <xref:System.Windows.DataTemplate>zou niet automatisch worden toegepast.</xref:System.Windows.DataTemplate> </xref:System.Windows.DataTemplate>       Merk ook op dat als u afhankelijk een <xref:System.Windows.Controls.ContentControl>aan een verzameling van `Task` objecten, de <xref:System.Windows.Controls.ContentControl>maakt geen gebruik van de <xref:System.Windows.DataTemplate>automatisch.</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Controls.ContentControl> Dit is omdat de binding op een <xref:System.Windows.Controls.ContentControl>meer gegevens nodig om te onderscheiden van of u wilt binden aan een volledige verzameling of de afzonderlijke objecten.</xref:System.Windows.Controls.ContentControl> Als uw <xref:System.Windows.Controls.ContentControl>is het bijhouden van de selectie van een <xref:System.Windows.Controls.ItemsControl>type, kunt u instellen de <xref:System.Windows.Data.Binding.Path%2A>eigenschap van de <xref:System.Windows.Controls.ContentControl>binden aan &quot;`/`&quot; om aan te geven dat u geïnteresseerd in het huidige item bent.</xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Data.Binding.Path%2A> </xref:System.Windows.Controls.ItemsControl> </xref:System.Windows.Controls.ContentControl> Zie voor een voorbeeld [hoe: binden aan een verzameling en de weergegeven informatie is gebaseerd op de selectie](~/add/includes/ajax-current-ext-md.md). Anders moet u opgeven de <xref:System.Windows.DataTemplate>door expliciet in te stellen de <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>eigenschap.</xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> </xref:System.Windows.DataTemplate>       De eigenschap DataType is bijzonder nuttig wanneer u hebt een <xref:System.Windows.Data.CompositeCollection>van verschillende typen van gegevensobjecten.</xref:System.Windows.Data.CompositeCollection>       Als deze eigenschap is bedoeld voor een XML-element dat niet in de standaardnaamruimte, moet u vóór de naam van het element met de naamruimte of een naamruimte-aanduiding. Voor XML beschikbaar via het LINQ voor XML, de naamruimte wordt weergegeven in de accolades, voorafgegaan door een accolade escapereeks: ```xaml   <DataTemplate DataType=&quot;{}{http://myNamespace}Details&quot;>   ``` For XML die toegankelijk is via XPath, de naam van het element wordt voorafgegaan door een naamruimte-aanduiding tot stand gebracht door een exemplaar van <xref:System.Windows.Data.XmlNamespaceMapping>: ```xaml   <DataTemplate DataType=&quot;mn:Details&quot;>   ``` <a name=&quot;xamlAttributeUsage_DataType&quot;> </a> ## XAML Kenmerkgebruik ```   <object DataType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_DataType&quot;> </a> ## XAML waarden *typeName* als de sjabloon is bedoeld voor objectgegevens, deze eigenschap bevat de typenaam van het gegevensobject (als tekenreeks).            </xref:System.Windows.Data.XmlNamespaceMapping> Om te verwijzen naar de typenaam van de klasse, gebruiken de [x: Type Opmaakextensie](~/add/includes/ajax-current-ext-md.md). Als de sjabloon is bedoeld voor [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] gegevens, deze eigenschap bevat de naam van het XML-element. Zie de opmerkingen documentatie voor meer informatie over het opgeven van een niet-standaard-naamruimte voor het XML-element."
  syntax:
    content: public object DataType { get; set; }
    return:
      type: System.Object
      description: "De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.Triggers
  id: Triggers
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hiermee haalt u een verzameling van triggers waarmee eigenschapswaarden toepassen of acties uitvoeren op basis van een of meer voorwaarden."
  remarks: "Als u triggers binnen een gegevenssjabloon maakt, moeten de setters van de triggers-eigenschappen die binnen het bereik van de gegevenssjabloon instellen. Anders mogelijk beter geschikt is voor het maken van triggers opnieuw via een stijl die gericht is op het type dat de gegevens bevat. Als u afhankelijk maakt bijvoorbeeld een <xref:System.Windows.Controls.ListBox>beheer, de containers zijn <xref:System.Windows.Controls.ListBoxItem>objecten.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBox> Als u van triggers gebruikmaakt voor het instellen van eigenschappen die niet binnen het bereik van de <xref:System.Windows.DataTemplate>, en vervolgens het is mogelijk beter geschikt maken van een <xref:System.Windows.Controls.ListBoxItem>stijl en triggers binnen die stijl maakt.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.DataTemplate> Zie voor meer informatie, wat in een DataTemplate hoort? in de [Templating overzicht](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Deze eigenschap kan alleen worden ingesteld in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] via de syntaxis van de verzameling wordt weergegeven, of door de toegang tot het verzamelingsobject en de verschillende methoden zoals toevoegen. De eigenschap voor toegang tot het verzamelingsobject zelf is alleen-lezen, de verzameling zelf is alleen-lezen.      <a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a>## XAML eigenschap elementgebruik ```   <object>     <object.Triggers>       OneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> ## XAML waarden *OneOrMoreTriggers* nul of meer <xref:System.Windows.TriggerBase>objecten.</xref:System.Windows.TriggerBase>      "
  example:
  - "The following <xref:System.Windows.DataTemplate> demonstrates the use of the Triggers property.  \n  \n [!code-xml[DataBindingLab#AuctionItemDataTemplate](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemdatatemplate)]  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "Een verzameling van objecten van de trigger. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Controleert de sjablonen bovenliggende op basis van een verzameling van regels."
  remarks: "De methode maakt gebruik van de volgende regels: - de `templatedParent` moet een niet-null <xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement>      -De <xref:System.Windows.DataTemplate>moet worden toegepast op een <xref:System.Windows.Controls.ContentPresenter>.</xref:System.Windows.Controls.ContentPresenter> </xref:System.Windows.DataTemplate>"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "Het element met deze sjabloon wordt toegepast op."
  overload: System.Windows.DataTemplate.ValidateTemplatedParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.Windows.DataTemplate.#ctor
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DataTemplate.DataTemplateKey
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.DataTemplate.#ctor*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate
  nameWithType: DataTemplate.DataTemplate
- uid: System.Windows.DataTemplate.DataTemplateKey*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
- uid: System.Windows.DataTemplate.ValidateTemplatedParent*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: DataTemplate.ValidateTemplatedParent
