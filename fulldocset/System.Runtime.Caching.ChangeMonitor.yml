### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.ChangeMonitor
  id: ChangeMonitor
  children:
  - System.Runtime.Caching.ChangeMonitor.#ctor
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  - System.Runtime.Caching.ChangeMonitor.UniqueId
  langs:
  - csharp
  name: ChangeMonitor
  nameWithType: ChangeMonitor
  fullName: System.Runtime.Caching.ChangeMonitor
  type: Class
  summary: "Biedt een basisklasse op voor een afgeleide aangepast type die wijzigingen in de status van de gegevens die een cache-item is afhankelijk van bewaakt."
  remarks: "De klasse ChangeMonitor wordt gebruikt als de basisklasse voor monitor afgeleide klassen die zijn gespecialiseerd voor bepaalde cache-implementaties. Een exemplaar ChangeMonitor bewaakt wijzigingen in de status van een cache-item is afhankelijk van deze gegevens. Het item kan bijvoorbeeld een bestand of entiteit waarvan de inhoud in cache zijn opgeslagen. Als het bestand of entiteit wordt bijgewerkt, moet de bijbehorende cachevermelding ook worden gewijzigd. Objecten die kunnen worden bewaakt bevatten gegevensentiteiten (zoals databasevelden, waarden, rijen of tabellen), een ander cachevermelding, en bestanden en bestandskenmerken.       Een wijziging in de afhankelijkheid is een wijziging in de status van een afhankelijkheid. Nadat een exemplaar ChangeMonitor ontvangt een melding van de cache die een afhankelijkheid is gewijzigd, voert de cache in een typische cache-implementatie, de vereiste actie, zoals de ingevoegde cachevermelding ongeldig te maken.       Afgeleide klassen van ChangeMonitor kunnen worden aangepast voor het controleren van wijzigingen in de afhankelijkheid voor specifieke andere gegevensarchieven. Er zijn bijvoorbeeld cache implementaties voor een bestandssysteem, fysieke geheugen of een database. De klasse ChangeMonitor wijzigingen die buiten de cache plaatsvinden moet worden gecontroleerd en vervolgens waarschuwt de cache die wijzigingen hebben plaatsgevonden.       De [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] bevat de volgende klassen die zijn afgeleid van klasse ChangeMonitor:- <xref:System.Runtime.Caching.CacheEntryChangeMonitor>- <xref:System.Runtime.Caching.FileChangeMonitor>- <xref:System.Runtime.Caching.HostFileChangeMonitor>- <xref:System.Runtime.Caching.SqlChangeMonitor>elk van deze klassen werkt met verschillende soorten afhankelijkheden.</xref:System.Runtime.Caching.SqlChangeMonitor> </xref:System.Runtime.Caching.HostFileChangeMonitor> </xref:System.Runtime.Caching.FileChangeMonitor> </xref:System.Runtime.Caching.CacheEntryChangeMonitor> Bijvoorbeeld, de afgeleide <xref:System.Runtime.Caching.FileChangeMonitor>klasse registreert wijzigingen in een cache voor bestandsgegevens van systeem (bestanden en mappen), afhankelijk van de cache-item.</xref:System.Runtime.Caching.FileChangeMonitor>"
  syntax:
    content: 'public abstract class ChangeMonitor : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: ChangeMonitor()
  nameWithType: ChangeMonitor.ChangeMonitor()
  fullName: System.Runtime.Caching.ChangeMonitor.ChangeMonitor()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> klasse. Deze constructor is aangeroepen vanuit een constructors in afgeleide klassen initialiseren van de basisklasse."
  remarks: "De <xref:System.Runtime.Caching.ChangeMonitor>klasse heeft een standaardconstructor.</xref:System.Runtime.Caching.ChangeMonitor> Echter, klassen die overnemen van de base <xref:System.Runtime.Caching.ChangeMonitor>klasse en het definiëren van de aangepaste-controle gedrag initialisatie moet uitvoeren in de constructor.</xref:System.Runtime.Caching.ChangeMonitor> Zie de opmerkingen voor overnemers sectie voor meer informatie."
  syntax:
    content: protected ChangeMonitor ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.Dispose
  id: Dispose
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: Dispose()
  nameWithType: ChangeMonitor.Dispose()
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Versies van alle resources die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> klasse."
  remarks: "De methode Dispose roept de <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>methode van afgeleide klassen slechts één keer, de eerste keer dat deze wordt aangeroepen.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Volgende aanroepen naar de methode Dispose hebben geen effect. Nadat de methode is aangeroepen, de <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A>eigenschap is ingesteld op `true`.</xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A>       De <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>overbelasting moet worden aangeroepen om het verwijderen van een <xref:System.Runtime.Caching.ChangeMonitor>exemplaar.</xref:System.Runtime.Caching.ChangeMonitor> </xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> De volgende zijn de regels voor het aanroepen van de methode dispose:-voordat u een item in de cache wordt ingevoegd, is de verantwoordelijkheid van de aanroeper bij het verwijderen van een <xref:System.Runtime.Caching.ChangeMonitor>exemplaar.</xref:System.Runtime.Caching.ChangeMonitor>      -Eenmaal cache-item en de <xref:System.Runtime.Caching.ChangeMonitor>-exemplaren die gekoppeld zijn, worden doorgegeven aan een cache, de implementeerder van de cache die ervoor moet zorgen dat <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>wordt aangeroepen, zelfs als de invoeging is mislukt.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor>      -Nadat een item en de daaraan gekoppelde <xref:System.Runtime.Caching.ChangeMonitor>exemplaren worden doorgegeven aan een cache, de aanroeper moet de afhankelijkheid niet verwijderen omdat wanneer de <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>methode wordt aangeroepen, wordt de aanroep beschouwd als de afhankelijkheid is gewijzigd.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor> Als gevolg hiervan de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode wordt automatisch geactiveerd.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>      -Rekening houdend met deze regels, de <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>methode moet worden aangeroepen in een van de volgende manieren:-gebruikers moeten de overbelasting van de methode Dispose gebeld als ze niet meer wilt invoegen van het exemplaar van de afgeleide wijziging-monitor in een cache.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>          -De implementatie van de cache is verantwoordelijk voor het aanroepen van de overbelasting Dispose als de toepassing probeert het exemplaar van de wijziging-monitor invoegen in de objectcache van een, maar de invoegactie is mislukt. Wanneer de invoegen poging een uitzondering veroorzaakt, moet de bijbehorende afhankelijkheden verwijderen van de implementatie van de cache.          -Als de cachevermelding is verwijderd, moet ook de afhankelijkheid verwijderen van de implementatie van de cache.       De interne uitvoering van de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode automatisch roept de <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>methode nadat een callback die roept is geregistreerd via de <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>methode.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> </xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>      > [!NOTE] > Deze automatische dispose tijdens het activeren van gebeurtenissen treedt alleen op als de initialisatie van de <xref:System.Runtime.Caching.ChangeMonitor>exemplaar dat eerder is voltooid.</xref:System.Runtime.Caching.ChangeMonitor>       Wanneer een afgeleide wijziging-monitor constructor roept de <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>methode, als de status van de monitor wijzigen is al gewijzigd (dat wil zeggen, de status die wordt bewaakt is al gewijzigd wanneer de constructor nog actief was) vervolgens <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>methode wordt automatisch verwijderen van de monitor wijzigen.</xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> </xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>      > [!NOTE] > Gebruikers moeten de Dispose-methode niet aanroepen. U niet echter voorkomen dat gebruikers de methode wordt aangeroepen. Daarom, als ze de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode wordt aangeroepen.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> In dat geval de cachevermelding ontvangt een melding als de afhankelijkheid is gewijzigd.       De methode is om te voorkomen dat afgeleide klassen vervangt methode Dispose, niet een expliciete interface-implementatie."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.Dispose*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Initialisatie is niet voltooid in de afgeleide wijziging-monitor-klasse die de basismethode Dispose wordt aangeroepen."
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Versies van alle beheerde en onbeheerde bronnen en alle verwijzingen naar de <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> exemplaar. Deze overbelasting moet worden geïmplementeerd door wijziging-monitor afgeleide klassen."
  remarks: "Wanneer de waarde van `disposing` waarde is `true`, alle beheerde en onbeheerde resources zijn verwijderd en alle verwijzingen naar dit object zijn vrijgegeven zodat het exemplaar van de afgeleide wijziging-monitor kan de garbage collector zijn verzameld worden. Er wordt gegarandeerd dat de base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>methode de geïmplementeerde methode Dispose wordt aangeroepen slechts één keer.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>"
  syntax:
    content: protected abstract void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van beheerde en onbeheerde resources en alle verwijzingen naar een <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> exemplaar; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven. Wanneer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wordt doorgegeven, de Dispose methode wordt aangeroepen door een <xref uid=&quot;langword_csharp_finalizer&quot; name=&quot;finalizer&quot; href=&quot;&quot;> </xref> thread en alle externe beheerde verwijzingen zijn waarschijnlijk niet langer geldig omdat ze al de garbage collector zijn verzameld zijn."
  overload: System.Runtime.Caching.ChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged
  id: HasChanged
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
  fullName: System.Runtime.Caching.ChangeMonitor.HasChanged
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Hiermee wordt een waarde die dat aangeeft de status die wordt bewaakt door de <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> klasse is gewijzigd."
  remarks: "U kunt de waarde van deze eigenschap in een afgeleid controleren <xref:System.Runtime.Caching.ChangeMonitor>klasse om te zien of een afhankelijkheid is gewijzigd.</xref:System.Runtime.Caching.ChangeMonitor>       De waarde is ingesteld op `true` als een afhankelijkheid wijziging optreedt (dat wil zeggen, wanneer de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode wordt aangeroepen).</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Na de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode wordt aangeroepen door de afgeleide klasse, is de waarde van de eigenschap HasChanged `true`, ongeacht of u een <xref:System.Runtime.Caching.OnChangedCallback>exemplaar is gemeld door een aanroep naar de <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>methode.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> </xref:System.Runtime.Caching.OnChangedCallback> </xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>      > [!NOTE] > Aanroepfuncties kunnen Controleer de eigenschap HasChanged om te zien of een afhankelijkheid is gewijzigd. In een omgeving met meerdere threads is een eenvoudiger en meer bruikbaar aanpak echter gegevens invoegen in een cache-implementatie zonder te controleren of de eigenschap HasChanged. Cache-implementaties moeten u de eigenschap HasChanged controleren en mag niet een INSERT-bewerking uitvoeren of opnieuw instellen als een of meer gekoppelde afhankelijkheden al hebt gewijzigd."
  syntax:
    content: public bool HasChanged { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de status die wordt bewaakt door de <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> exemplaar is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ChangeMonitor.HasChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete
  id: InitializationComplete
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: InitializationComplete()
  nameWithType: ChangeMonitor.InitializationComplete()
  fullName: System.Runtime.Caching.ChangeMonitor.InitializationComplete()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Aangeroepen vanuit de constructor van afgeleide klassen om aan te geven dat die initialization is voltooid."
  remarks: "Als een afhankelijkheid wordt gewijzigd voordat de initialisatie is voltooid in een afgeleide klasse, de constructor van de afgeleide klasse moet aanroepen de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>       Wanneer de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode is aangeroepen, de <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>eigenschap automatisch ingesteld op `true` door de monitor wijzigen.</xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> </xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Als gevolg hiervan als constructor voor het wijzigen van de monitor wordt de methode initializationcomplete aangeroepen, de basisklasse automatisch roept de <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>methode.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Als de initialisatie is voltooid, de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode verwijdert automatisch de afgeleide wijziging-monitor-exemplaar.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>"
  syntax:
    content: protected void InitializationComplete ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.InitializationComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed
  id: IsDisposed
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
  fullName: System.Runtime.Caching.ChangeMonitor.IsDisposed
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Hiermee wordt een waarde die dat aangeeft het afgeleide exemplaar van een <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> klasse is verwijderd."
  remarks: "De eigenschap is ingesteld op `true` na de base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>methodeaanroepen de <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>methode in een afgeleide klasse bij het verwijderen van het exemplaar.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>"
  syntax:
    content: public bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het exemplaar is verwijderd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ChangeMonitor.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  id: NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: NotifyOnChanged(OnChangedCallback)
  nameWithType: ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  fullName: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Aangeroepen door Cache implementeerders voor een retouraanroep registreren en de kennisgeving een <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> exemplaar via de <xref href=&quot;System.Runtime.Caching.OnChangedCallback&quot;> </xref> delegeren wanneer een afhankelijkheid is gewijzigd."
  remarks: "Cache implementeerders met deze methode kunt wire zelf tot een monitor wijzigen. Als u een koppelt of meer monitors met de cache-item wijzigen, geeft u een <xref:System.Runtime.Caching.CacheItemPolicy>-exemplaar met een eigenschap van de monitors ingevuld wijzigen op het cache-item.</xref:System.Runtime.Caching.CacheItemPolicy> Een cache-implementeerder dat ondersteunt monitors wijzigen is verantwoordelijk voor het iteratie van de <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A>eigenschap en registreer de <xref:System.Runtime.Caching.OnChangedCallback>gemachtigden met elk wijzigen monitor gevonden.</xref:System.Runtime.Caching.OnChangedCallback> </xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A>       Omdat de <xref:System.Runtime.Caching.OnChangedCallback>gemachtigde bevat een status van de optionele parameter, een implementatie van de monitor concrete wijziging optionele statusinformatie kunt doorgeven.</xref:System.Runtime.Caching.OnChangedCallback> De implementeerder van de cache bepaalt of een expliciete afhankelijkheid van het type van de status van een monitor aangepaste wijziging wordt doorgegeven als onderdeel van de callback kan worden gebracht.      > [!NOTE] > De basis-cache-uitbreidbaarheid API heeft geen vereiste voor expliciete afhankelijkheid van het type status.       De implementatie van de methode NotifyOnChanged wordt automatisch bepaald of de status van de monitor al is gewijzigd op het moment dat NotifyOnChanged methode wordt aangeroepen. Als de <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>eigenschap is `true`, en vervolgens de methode automatisch roept de <xref:System.Runtime.Caching.OnChangedCallback>gebeurtenis-handler die is geregistreerd via de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> </xref:System.Runtime.Caching.OnChangedCallback> </xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> Dit gebeurt omdat het is mogelijk dat bij het maken van dat een cache-implementatie wordt gemaakt van een monitor wijziging aan de tijd die de implementatie van een cache opgehaald van de monitor en kabels zelf tot, de status van het onderliggende bewaakte is gewijzigd. Als de status is al gewijzigd vervolgens het object dat wordt doorgegeven aan de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>methode is `null`.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>       De methode NotifyOnChanged kan slechts één keer worden aangeroepen en genereert een uitzondering op de volgende aanroepen."
  syntax:
    content: public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);
    parameters:
    - id: onChangedCallback
      type: System.Runtime.Caching.OnChangedCallback
      description: "Een verwijzing naar een methode die wordt aangeroepen wanneer een afhankelijkheid is gewijzigd."
  overload: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De callback-methode is al aangeroepen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>onChangedCallback</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  id: OnChanged(System.Object)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: OnChanged(Object)
  nameWithType: ChangeMonitor.OnChanged(Object)
  fullName: System.Runtime.Caching.ChangeMonitor.OnChanged(Object)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Aangeroepen door afgeleide klassen verhogen van de gebeurtenis wanneer een afhankelijkheid wordt gewijzigd."
  remarks: "De methode OnChanged wordt normaal gesproken opgeroepen als afhankelijkheid wijzigingen optreden. De methode OnChanged wordt ook aangeroepen wanneer een wijziging-monitor-exemplaar is verwijderd, maar de verwijdering wordt alleen uitgevoerd als de callback is al niet aangeroepen.       Als de OnChanged-methode wordt aangeroepen voordat de <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>methode wordt aangeroepen, wordt de statusgegevens van de aanroep aan de methode OnChanged door de implementatie van de cache opgeslagen.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Ook de retouraanroep toe aan de <xref:System.Runtime.Caching.OnChangedCallback>methode onmiddellijk wordt aangeroepen wanneer de <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>methode wordt aangeroepen.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> </xref:System.Runtime.Caching.OnChangedCallback>"
  syntax:
    content: protected void OnChanged (object state);
    parameters:
    - id: state
      type: System.Object
      description: "De gegevens voor de gebeurtenis change. Deze waarde kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ChangeMonitor.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.ChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Hiermee wordt een waarde die aangeeft de <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> klasse-instantie."
  remarks: "De waarde van de unieke id-eigenschap bestaat gewoonlijk uit afhankelijkheid namen gecombineerd tekenreeksgegevens unieke id&quot;s de gegevens die wordt bewaakt door een <xref:System.Runtime.Caching.ChangeMonitor>exemplaar.</xref:System.Runtime.Caching.ChangeMonitor> De waarde van de eigenschap UniqueId is een tekenreeks. De waarde van de tekenreeks wordt gebruikt om toe te wijzen de unieke ID van de <xref:System.Runtime.Caching.ChangeMonitor>exemplaar.</xref:System.Runtime.Caching.ChangeMonitor>"
  syntax:
    content: public abstract string UniqueId { get; }
    return:
      type: System.String
      description: "De id voor een exemplaar van de wijziging-monitor."
  overload: System.Runtime.Caching.ChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Caching.ChangeMonitor.#ctor
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: ChangeMonitor()
  nameWithType: ChangeMonitor.ChangeMonitor()
  fullName: System.Runtime.Caching.ChangeMonitor.ChangeMonitor()
- uid: System.Runtime.Caching.ChangeMonitor.Dispose
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose()
  nameWithType: ChangeMonitor.Dispose()
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose()
- uid: System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
  fullName: System.Runtime.Caching.ChangeMonitor.HasChanged
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: InitializationComplete()
  nameWithType: ChangeMonitor.InitializationComplete()
  fullName: System.Runtime.Caching.ChangeMonitor.InitializationComplete()
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
  fullName: System.Runtime.Caching.ChangeMonitor.IsDisposed
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: NotifyOnChanged(OnChangedCallback)
  nameWithType: ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  fullName: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(OnChangedCallback)
- uid: System.Runtime.Caching.OnChangedCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: OnChangedCallback
  nameWithType: OnChangedCallback
  fullName: System.Runtime.Caching.OnChangedCallback
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: OnChanged(Object)
  nameWithType: ChangeMonitor.OnChanged(Object)
  fullName: System.Runtime.Caching.ChangeMonitor.OnChanged(Object)
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.ChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.ChangeMonitor.#ctor*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: ChangeMonitor
  nameWithType: ChangeMonitor.ChangeMonitor
- uid: System.Runtime.Caching.ChangeMonitor.Dispose*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: ChangeMonitor.Dispose
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: InitializationComplete
  nameWithType: ChangeMonitor.InitializationComplete
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: NotifyOnChanged
  nameWithType: ChangeMonitor.NotifyOnChanged
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: OnChanged
  nameWithType: ChangeMonitor.OnChanged
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
