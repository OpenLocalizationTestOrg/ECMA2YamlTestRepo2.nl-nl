### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  id: SpeechEventInfo
  children:
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2
  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType
  langs:
  - csharp
  name: SpeechEventInfo
  nameWithType: SpeechEventInfo
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  type: Struct
  summary: "Hiermee geeft het type gebeurtenis en de bijbehorende argumenten (indien aanwezig) om te worden gegenereerd als onderdeel van de rendering van tekst-naar-spraak door een aangepaste synthetische spraak-engine."
  remarks: "Een aangepaste spraak synthese-engine aanvragen het genereren van gebeurtenissen onder het Spraakplatform door te geven van een juiste SpeechEventInfo-exemplaar moet <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A>lid is van de <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>site-engine-object doorgegeven aan implementaties van <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, en <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> </xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> </xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A>"
  example:
  - "The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, SpeechEventInfo, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \n  \n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \n  \n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \n  \n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \n  \n    -   Translates Americanism to Britishisms in the text to be spoken.  \n  \n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a SpeechEventInfo instance is used to create an event to drive a synthesizer progress meter is created.  \n  \n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \n  \n```  \nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { ' ', '\\t', '\\r', '\\n' };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n  \noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n  \n  for (int i=0;i<frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n  \n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n        offset += s.Length;  \n        if (s.Trim().Length > 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n  \n  _baseSynthesize.Speak(newFrags, wfx, site);  \n  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.ImmutableObject(true)]

      public struct SpeechEventInfo : IEquatable<System.Speech.Synthesis.TtsEngine.SpeechEventInfo>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Speech.Synthesis.TtsEngine.SpeechEventInfo>
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)
  id: '#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)'
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: SpeechEventInfo(Int16,Int16,Int32,IntPtr)
  nameWithType: SpeechEventInfo.SpeechEventInfo(Int16,Int16,Int32,IntPtr)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.SpeechEventInfo(Int16,Int16,Int32,IntPtr)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Een geschikte Constucts <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref>."
  remarks: "Toegestane waarden voor `parameterType`, `param1`, en `param2` en hun betekenis wordt bepaald door het type gebeurtenis wordt aangevraagd, zoals opgegeven door de lid van <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>gebruikt voor `eventId`.</xref:System.Speech.Synthesis.TtsEngine.TtsEventId>       Voor gedetailleerde informatie over de juiste waarden voor `parameterType`, `param1`, en `param2`, Zie de documentatie voor <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>het type van de gebeurtenissen die kunnen worden verwerkt door het infrastructuurplatform spraak kan worden verkregen via de <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>eigenschap op de synthesizer engine site implementatie van <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.</xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> </xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>"
  example:
  - "The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \n  \n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \n  \n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \n  \n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \n  \n    -   Translates Americanism to Britishisms in the text to be spoken.  \n  \n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \n  \n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \n  \n```  \nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { ' ', '\\t', '\\r', '\\n' };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n  \noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n  \n  for (int i=0;i<frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n  \n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n        offset += s.Length;  \n        if (s.Trim().Length > 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n  \n  _baseSynthesize.Speak(newFrags, wfx, site);  \n  \n}  \n```"
  syntax:
    content: public SpeechEventInfo (short eventId, short parameterType, int param1, IntPtr param2);
    parameters:
    - id: eventId
      type: System.Int16
      description: "Een exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEventId&quot;> </xref> die aangeeft van de sortering van spraak platformgebeurtenis de <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> -object is om te verwerken."
    - id: parameterType
      type: System.Int16
      description: "Een exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.EventParameterType&quot;> </xref> waarmee wordt aangegeven hoe de <xref uid=&quot;langword_csharp_System.IntPtr&quot; name=&quot;System.IntPtr&quot; href=&quot;&quot;> </xref> verwijzen naar van `param2` moeten worden geïnterpreteerd, en het gebruik van impliciet `param1`."
    - id: param1
      type: System.Int32
      description: "Een geheel getal moet worden doorgegeven aan het spraakplatform wanneer de gebeurtenis die is aangevraagd door het exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> worden samengesteld wordt gegenereerd.       De exacte betekenis van dit geheel getal wordt impliciet bepaald door de waarde van `parameterType`."
    - id: param2
      type: System.IntPtr
      description: "Een <xref uid=&quot;langword_csharp_System.IntPtr&quot; name=&quot;System.IntPtr&quot; href=&quot;&quot;> </xref> exemplaar verwijst naar een object. moet worden doorgegeven aan het spraakplatform wanneer de gebeurtenis die is aangevraagd door het exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> worden samengesteld wordt gegenereerd.       Het type dat moet worden verwezen expliciet is gedefinieerd door de waarde `parameterType`. De waarde <xref uid=&quot;langword_csharp_System.IntPtr.Zero&quot; name=&quot;System.IntPtr.Zero&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SpeechEventInfo.Equals(Object)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(Object)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Hiermee wordt bepaald of een opgegeven object een exemplaar van is `SpeechEventInfo` en gelijk zijn aan het huidige exemplaar van `SpeechEventInfo`."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object dat moet worden geëvalueerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> obj </code> gelijk is aan de huidige <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  id: Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: Equals(SpeechEventInfo)
  nameWithType: SpeechEventInfo.Equals(SpeechEventInfo)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(SpeechEventInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Hiermee wordt bepaald of een opgegeven `SpeechEventInfo` object is gelijk aan het huidige exemplaar van `SpeechEventInfo`."
  syntax:
    content: public bool Equals (System.Speech.Synthesis.TtsEngine.SpeechEventInfo other);
    parameters:
    - id: other
      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
      description: "De <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> object om te evalueren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> other </code> gelijk is aan de huidige <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId
  id: EventId
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: EventId
  nameWithType: SpeechEventInfo.EventId
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Opgehaald en stel de spraak platform-gebeurtenis die een exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> wordt gebruikt op aanvraag."
  remarks: ''
  example:
  - "The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \n  \n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \n  \n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \n  \n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \n  \n    -   Translates Americanism to Britishisms in the text to be spoken.  \n  \n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \n  \n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including EventId are used to log the event generated through the `LogSpeechEvent` method.  \n  \n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \n  \n```  \nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { ' ', '\\t', '\\r', '\\n' };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n  \noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n  \n  for (int i=0;i<frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n  \n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n         LogSpeechEvent(spEvent.EventId,   \n                        spEvent.ParameterType,   \n                        spEvent.Param1,  \n                        spEvent.Param2);  \n        offset += s.Length;  \n        if (s.Trim().Length > 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n  \n  _baseSynthesize.Speak(newFrags, wfx, site);  \n  \n}  \n```"
  syntax:
    content: public short EventId { get; }
    return:
      type: System.Int16
      description: "Retourneert een lid van <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEventId&quot;> </xref> als een <xref uid=&quot;langword_csharp_short&quot; name=&quot;short&quot; href=&quot;&quot;> </xref>, die wijzen op het gebeurtenistype de <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> -object is te genereren."
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode
  id: GetHashCode
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SpeechEventInfo.GetHashCode()
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Biedt een hashcode voor een `SpeechEventInfo` object."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een hashcode voor een <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> object."
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  id: op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: op_Equality(SpeechEventInfo,SpeechEventInfo)
  nameWithType: SpeechEventInfo.op_Equality(SpeechEventInfo,SpeechEventInfo)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(SpeechEventInfo,SpeechEventInfo)
  type: Operator
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Hiermee wordt bepaald of twee exemplaren van `SpeechEventInfo` gelijk zijn."
  syntax:
    content: public static bool op_Equality (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);
    parameters:
    - id: event1
      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
      description: "De <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> -object om te vergelijken met `event2`."
    - id: event2
      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
      description: "De <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> -object om te vergelijken met `event1`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>event1</code> is the same as <code>event2</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  id: op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: op_Inequality(SpeechEventInfo,SpeechEventInfo)
  nameWithType: SpeechEventInfo.op_Inequality(SpeechEventInfo,SpeechEventInfo)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(SpeechEventInfo,SpeechEventInfo)
  type: Operator
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Hiermee wordt bepaald of twee exemplaren van `SpeechEventInfo` niet gelijk zijn."
  syntax:
    content: public static bool op_Inequality (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);
    parameters:
    - id: event1
      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
      description: "De <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> -object om te vergelijken met `event2`."
    - id: event2
      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
      description: "De <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> -object om te vergelijken met `event1`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>event1</code> is different from <code>event2</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1
  id: Param1
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: Param1
  nameWithType: SpeechEventInfo.Param1
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Opgehaald en stel de <xref uid=&quot;langword_csharp_integer&quot; name=&quot;integer&quot; href=&quot;&quot;> </xref> waarde (<code> param1 </code> in de constructor) moeten worden doorgegeven aan het spraakplatform voor het genereren van een gebeurtenis van het huidige exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> wordt gebruikt op aanvraag."
  remarks: "De vereisten en de betekenis van de eigenschap Param1 van <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>uniek worden bepaald door de waarden van de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>en <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>Eigenschappen de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>exemplaar.</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>       Voor gedetailleerde informatie over het gebruiken van Param1, Zie de documentatie voor <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>"
  example:
  - "The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \n  \n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \n  \n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \n  \n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \n  \n    -   Translates Americanism to Britishisms in the text to be spoken.  \n  \n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \n  \n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including Param1 are used to log the event generated through the `LogSpeechEvent` method.  \n  \n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \n  \n```  \nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { ' ', '\\t', '\\r', '\\n' };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n  \noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n  \n  for (int i=0;i<frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n  \n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n         LogSpeechEvent(spEvent.EventId,   \n                        spEvent.ParameterType,   \n                        spEvent.Param1,  \n                        spEvent.Param2);  \n        offset += s.Length;  \n        if (s.Trim().Length > 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n  \n  _baseSynthesize.Speak(newFrags, wfx, site);  \n  \n}  \n```"
  syntax:
    content: public int Param1 { get; }
    return:
      type: System.Int32
      description: "Retourneert de <xref uid=&quot;langword_csharp_integer&quot; name=&quot;integer&quot; href=&quot;&quot;> </xref> worden doorgegeven aan spraakplatform wanneer de gebeurtenis die is opgegeven door het huidige exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> wordt gegenereerd."
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2
  id: Param2
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: Param2
  nameWithType: SpeechEventInfo.Param2
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Opgehaald en stel de <xref uid=&quot;langword_csharp_System.IntPtr&quot; name=&quot;System.IntPtr&quot; href=&quot;&quot;> </xref> exemplaar (<code> param2 </code> in de constructor) verwijzen naar het object worden doorgegeven aan het spraakplatform voor het genereren van een gebeurtenis van het huidige exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> wordt gebruikt op aanvraag."
  remarks: "De vereisten op het `System.IntPtr` verwijzing van de eigenschap Param2 van <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>uniek worden bepaald door de waarden van de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>en <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>Eigenschappen de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>exemplaar.</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>       Voor gedetailleerde informatie over het gebruiken van Param2, Zie de documentatie voor <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>"
  example:
  - "The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \n  \n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \n  \n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \n  \n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \n  \n    -   Translates Americanism to Britishisms in the text to be spoken.  \n  \n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \n  \n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including Param2 are used to log the event generated through the `LogSpeechEvent` method.  \n  \n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \n  \n```  \nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { ' ', '\\t', '\\r', '\\n' };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n  \noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n  \n  for (int i=0;i<frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n  \n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n         LogSpeechEvent(spEvent.EventId,   \n                        spEvent.ParameterType,   \n                        spEvent.Param1,  \n                        spEvent.Param2);  \n        offset += s.Length;  \n        if (s.Trim().Length > 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n  \n  _baseSynthesize.Speak(newFrags, wfx, site);  \n  \n}  \n```"
  syntax:
    content: public IntPtr Param2 { get; }
    return:
      type: System.IntPtr
      description: "Retourneert de <xref uid=&quot;langword_csharp_System.IntPtr&quot; name=&quot;System.IntPtr&quot; href=&quot;&quot;> </xref> verwijzen naar het object moet worden doorgegeven aan spraakplatform wanneer de gebeurtenis die is opgegeven door het huidige exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> wordt gegenereerd."
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType
  id: ParameterType
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  langs:
  - csharp
  name: ParameterType
  nameWithType: SpeechEventInfo.ParameterType
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Retourneert het gegevenstype van het object waarnaar wordt verwezen door de <xref uid=&quot;langword_csharp_IntPtr&quot; name=&quot;IntPtr&quot; href=&quot;&quot;> </xref> geretourneerd door de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2*>parameter bij de huidige <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> object.</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2*>"
  remarks: "De vereisten op het `System.IntPtr` de vermelding van de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>eigenschap van <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>uniek worden bepaald door de waarden van de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>ParameterType eigenschappen en de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>exemplaar.</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>       Voor gedetailleerde informatie over het gebruik <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, Zie de documentatie voor <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> </xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>"
  example:
  - "The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \n  \n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \n  \n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \n  \n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \n  \n    -   Translates Americanism to Britishisms in the text to be spoken.  \n  \n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \n  \n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including ParameterType are used to log the event generated through the `LogSpeechEvent` method.  \n  \n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \n  \n```  \nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { ' ', '\\t', '\\r', '\\n' };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n  \noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n  \n  for (int i=0;i<frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n  \n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n         LogSpeechEvent(spEvent.EventId,   \n                        spEvent.ParameterType,   \n                        spEvent.Param1,  \n                        spEvent.Param2);  \n        offset += s.Length;  \n        if (s.Trim().Length > 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n  \n  _baseSynthesize.Speak(newFrags, wfx, site);  \n  \n}  \n```"
  syntax:
    content: public short ParameterType { get; }
    return:
      type: System.Int16
      description: "Een <xref uid=&quot;langword_csharp_short&quot; name=&quot;short&quot; href=&quot;&quot;> </xref> waarde overeenkomt met een lid van de <xref href=&quot;System.Speech.Synthesis.TtsEngine.EventParameterType&quot;> </xref> inventarisatie en wordt aangegeven van het gegevenstype van het object waarnaar wordt verwezen door de <xref uid=&quot;langword_csharp_IntPtr&quot; name=&quot;IntPtr&quot; href=&quot;&quot;> </xref> geretourneerd door de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2*>parameter en gebruikt als het tweede argument voor de constructor van het huidige <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref> object.</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2*>"
  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: SpeechEventInfo(Int16,Int16,Int32,IntPtr)
  nameWithType: SpeechEventInfo.SpeechEventInfo(Int16,Int16,Int32,IntPtr)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.SpeechEventInfo(Int16,Int16,Int32,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: SpeechEventInfo.Equals(Object)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: Equals(SpeechEventInfo)
  nameWithType: SpeechEventInfo.Equals(SpeechEventInfo)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(SpeechEventInfo)
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: SpeechEventInfo
  nameWithType: SpeechEventInfo
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: EventId
  nameWithType: SpeechEventInfo.EventId
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: SpeechEventInfo.GetHashCode()
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode()
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: op_Equality(SpeechEventInfo,SpeechEventInfo)
  nameWithType: SpeechEventInfo.op_Equality(SpeechEventInfo,SpeechEventInfo)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(SpeechEventInfo,SpeechEventInfo)
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: op_Inequality(SpeechEventInfo,SpeechEventInfo)
  nameWithType: SpeechEventInfo.op_Inequality(SpeechEventInfo,SpeechEventInfo)
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(SpeechEventInfo,SpeechEventInfo)
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: Param1
  nameWithType: SpeechEventInfo.Param1
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: Param2
  nameWithType: SpeechEventInfo.Param2
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: ParameterType
  nameWithType: SpeechEventInfo.ParameterType
  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor*
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: SpeechEventInfo
  nameWithType: SpeechEventInfo.SpeechEventInfo
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals*
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: Equals
  nameWithType: SpeechEventInfo.Equals
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId*
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: EventId
  nameWithType: SpeechEventInfo.EventId
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode*
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: GetHashCode
  nameWithType: SpeechEventInfo.GetHashCode
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality*
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: op_Equality
  nameWithType: SpeechEventInfo.op_Equality
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality*
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: op_Inequality
  nameWithType: SpeechEventInfo.op_Inequality
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1*
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: Param1
  nameWithType: SpeechEventInfo.Param1
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2*
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: Param2
  nameWithType: SpeechEventInfo.Param2
- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType*
  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo
  isExternal: false
  name: ParameterType
  nameWithType: SpeechEventInfo.ParameterType
