### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymWriter
  id: SymWriter
  children:
  - System.Diagnostics.SymbolStore.SymWriter.#ctor
  - System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.Close
  - System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  - System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  - System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.SymWriter.Dispose
  - System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.Finalize
  - System.Diagnostics.SymbolStore.SymWriter.GetWriter
  - System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  - System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  - System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  - System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  langs:
  - csharp
  name: SymWriter
  nameWithType: SymWriter
  fullName: System.Diagnostics.SymbolStore.SymWriter
  type: Class
  summary: "Hiermee geeft u een symbool-schrijver voor beheerde code."
  remarks: "De SymWriter klasse biedt methoden die documenten, reeks punten lexicale scopes en variabelen definiëren."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymWriter : System.Diagnostics.SymbolStore.SymWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolWriter
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymWriterBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolWriter
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymWriterBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor
  id: '#ctor'
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SymWriter()
  nameWithType: SymWriter.SymWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> klasse."
  syntax:
    content: public SymWriter ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SymWriter(Boolean)
  nameWithType: SymWriter.SymWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> klasse, die aangeeft of een onderliggende symbool schrijver maken."
  syntax:
    content: public SymWriter (bool noUnderlyingWriter);
    parameters:
    - id: noUnderlyingWriter
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een onderliggende worden symbool writer geleverd door het aanroepen van de methode <xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als een onderliggende symbool writer standaard in plaats daarvan moet worden gemaakt.</xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>"
  overload: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Close
  id: Close
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Close()
  nameWithType: SymWriter.Close()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee sluit u de <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> en de symbolen worden doorgevoerd in het archief van het symbool."
  remarks: "Na deze aanroep de <xref:System.Diagnostics.SymbolStore.SymWriter>is ongeldig voor verdere updates.</xref:System.Diagnostics.SymbolStore.SymWriter>"
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  id: CloseMethod
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseMethod()
  nameWithType: SymWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee sluit u de huidige methode."
  remarks: "Nadat een methode is gesloten, kunt u een symbool uit binnen de methode niet definiëren."
  syntax:
    content: public virtual void CloseMethod ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  id: CloseNamespace
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseNamespace()
  nameWithType: SymWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee sluit u de meest recente naamruimte."
  syntax:
    content: public virtual void CloseNamespace ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  id: CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseScope(Int32)
  nameWithType: SymWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee sluit u de huidige lexicale scope."
  remarks: "Nadat een scope is gesloten, kunt u een variabele van binnen de methode niet definiëren."
  syntax:
    content: public virtual void CloseScope (int endOffset);
    parameters:
    - id: endOffset
      type: System.Int32
      description: "De IL verschuiving NET voorbij de laatste instructie in het bereik."
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Definieert een brondocument."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: url
      type: System.String
      description: "De URL die verwijst naar het document."
    - id: language
      type: System.Guid
      description: "De taal van het document. Deze parameter is <xref:System.Guid>.</xref:System.Guid>"
    - id: languageVendor
      type: System.Guid
      description: "De identiteit van de leverancier voor de taal van het document. Deze parameter is <xref:System.Guid>.</xref:System.Guid>"
    - id: documentType
      type: System.Guid
      description: "Het type van het document. Deze parameter is <xref:System.Guid>.</xref:System.Guid>"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "De <xref href=&quot;System.Diagnostics.SymbolStore.ISymbolDocumentWriter&quot;> </xref> -object dat het document vertegenwoordigt."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Genereert een <xref:System.NotSupportedException>in alle gevallen.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Deze parameter wordt niet gebruikt."
    - id: name
      type: System.String
      description: "Deze parameter wordt niet gebruikt."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Deze parameter wordt niet gebruikt."
    - id: signature
      type: System.Byte[]
      description: "Deze parameter wordt niet gebruikt."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Deze parameter wordt niet gebruikt."
    - id: addr1
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: addr2
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: addr3
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineField*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "In alle gevallen."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Genereert een <xref:System.NotSupportedException>in alle gevallen.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "Deze parameter wordt niet gebruikt."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Deze parameter wordt niet gebruikt."
    - id: signature
      type: System.Byte[]
      description: "Deze parameter wordt niet gebruikt."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Deze parameter wordt niet gebruikt."
    - id: addr1
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: addr2
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: addr3
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "In alle gevallen."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee definieert u één variabele in het huidige lexicale bereik."
  remarks: "De `startOffset` en `endOffset` parameters zijn optioneel. Als de waarde nul is, worden genegeerd en de variabele is gedefinieerd in het hele bereik. Als de waarde gelijk aan nul is, vallen ze de verschuivingen van het huidige bereik.       U kunt DefineLocalVariable meerdere keren aanroepen voor een variabele met dezelfde naam die wordt meerdere keren uitgevoerd in verschillende offset bereiken in een bereik. (In dit geval begin- en offsets mogen elkaar niet overlappen.)"
  syntax:
    content: public virtual void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);
    parameters:
    - id: name
      type: System.String
      description: "Lokale naam van de variabele."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "De lokale variabele kenmerken opgegeven met behulp van de <xref:System.Reflection.FieldAttributes>enumerator.</xref:System.Reflection.FieldAttributes>"
    - id: signature
      type: System.Byte[]
      description: "De lokale variabele handtekening."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Het adres van het type voor `addr1`, `addr2`, en `addr3` met <xref href=&quot;System.Diagnostics.SymbolStore.SymAddressKind&quot;> </xref>."
    - id: addr1
      type: System.Int32
      description: "Het eerste adres voor de lokale variabele specificatie."
    - id: addr2
      type: System.Int32
      description: "Het tweede adres voor de lokale variabele specificatie."
    - id: addr3
      type: System.Int32
      description: "Het derde adres voor de lokale variabele specificatie."
    - id: startOffset
      type: System.Int32
      description: "De beginoffset voor de variabele. Als nul is, wordt deze parameter wordt genegeerd en wordt de variabele is gedefinieerd in het hele bereik. Als dat niet nul, vallen binnen de verschuivingen van het huidige bereik."
    - id: endOffset
      type: System.Int32
      description: "De end-offset voor de variabele. Als nul is, wordt deze parameter wordt genegeerd en wordt de variabele is gedefinieerd in het hele bereik. Als dat niet nul, vallen binnen de verschuivingen van het huidige bereik."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Genereert een <xref:System.NotSupportedException>in alle gevallen.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "Deze parameter wordt niet gebruikt."
    - id: attributes
      type: System.Reflection.ParameterAttributes
      description: "Deze parameter wordt niet gebruikt."
    - id: sequence
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Deze parameter wordt niet gebruikt."
    - id: addr1
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: addr2
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: addr3
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineParameter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "In alle gevallen."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee definieert u een groep reeks punten in de huidige methode."
  remarks: "Reeks punten worden gebruikt om een koppeling tussen bronbestandlocaties en IL-offset.  Elke reekspunt bestaat uit een IL offset en bron bestand regio, opgegeven door begin en einde regel/kolom getallen relatief een <xref:System.Diagnostics.SymbolStore.ISymbolDocument>object.</xref:System.Diagnostics.SymbolStore.ISymbolDocument>  Elk element op een specifieke index van elke matrix overeen met een specifieke reekspunt. Elke regel en elke kolom definieert het begin van een instructie in een methode. De matrices moeten in de toenemende volgorde van de offsets worden gesorteerd. De offset is altijd de verschuiving vanaf het begin van de methode, in bytes."
  syntax:
    content: public virtual void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Het object van het document waarvoor de sequence-punten zijn wordt gedefinieerd."
    - id: offsets
      type: System.Int32[]
      description: "De IL-offset van de reeks verwijst gemeten vanaf het begin van de methode."
    - id: lines
      type: System.Int32[]
      description: "De eerste regel getallen van de reeks verwijst."
    - id: columns
      type: System.Int32[]
      description: "De eerste kolomnummers van de reeks verwijst."
    - id: endLines
      type: System.Int32[]
      description: "De einddatum regelnummers van de reeks verwijst."
    - id: endColumns
      type: System.Int32[]
      description: "De einddatum kolomnummers van de reeks verwijst."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Heft de bronnen die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> klasse."
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Aangeroepen door de <> </> *> en <> </> *> methoden voor het vrijgeven van de beheerde en onbeheerde resources gebruikt door het huidige exemplaar van de <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> klasse."
  remarks: "Deze methode wordt aangeroepen door het publiek alleen <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A>en <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A>methoden; deze methode niet rechtstreeks aangeroepen.</xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van beheerde en onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Onbeheerde hulpbronnen vrijgegeven en worden andere opschoonacties vereisen voordat voert de <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> door de garbage collector is vrijgemaakt."
  remarks: "Deze methode overschrijft <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Toepassingscode moet niet aanroepen voor deze methode; een object `Finalize` methode wordt automatisch geactiveerd tijdens garbagecollection, tenzij voltooiing door de garbage collector is uitgeschakeld door een aanroep naar de <xref:System.GC.SuppressFinalize%2A>methode.</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymWriter ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter
  id: GetWriter
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: GetWriter()
  nameWithType: SymWriter.GetWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter* GetWriter ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter*
      description: "Moet worden toegevoegd."
  overload: System.Diagnostics.SymbolStore.SymWriter.GetWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  id: Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee stelt u de metagegevens zender interface om te koppelen aan deze writer."
  remarks: "<xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A>ook stelt de naam van het uitvoerbestand waar de symbolen voor foutopsporing worden geschreven.</xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> Deze methode kan slechts eenmaal worden aangeroepen en moet worden aangeroepen voordat andere writermethoden worden aangeroepen."
  syntax:
    content: public virtual void Initialize (IntPtr emitter, string filename, bool fFullBuild);
    parameters:
    - id: emitter
      type: System.IntPtr
      description: "De metagegevens zender-interface."
    - id: filename
      type: System.String
      description: "De naam van het bestand waarvoor de symbolen voor foutopsporing worden geschreven. Sommige schrijvers vereisen een bestandsnaam, terwijl andere niet. Als een bestandsnaam op voor een writer die geen bestandsnamen gebruikt is opgegeven, wordt deze parameter wordt genegeerd."
    - id: fFullBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Geeft aan dat dit volledig opnieuw opbouwen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> geeft een incrementele compilatie."
  overload: System.Diagnostics.SymbolStore.SymWriter.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  id: InitWriter(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: InitWriter(Boolean)
  nameWithType: SymWriter.InitWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Initialiseert de schrijver van het symbool. Deze methode dient niet direct worden aangeroepen; Deze wordt aangeroepen door de constructor."
  syntax:
    content: public void InitWriter (bool noUnderlyingWriter);
    parameters:
    - id: noUnderlyingWriter
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een onderliggende worden symbool writer geleverd door het aanroepen van de methode <xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als een onderliggende symbool writer standaard in plaats daarvan moet worden gemaakt.</xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>"
  overload: System.Diagnostics.SymbolStore.SymWriter.InitWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  id: OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenMethod(SymbolToken)
  nameWithType: SymWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee opent u een methode voor symboolgegevens."
  remarks: "De opgegeven methode wordt de huidige methode voor aanroepen voor het definiëren van de reeks verwijst, parameters en lexicale bereiken. Er is een impliciete lexicale bereik rond de hele methode. Openen van een methode die eerder is gesloten, worden alle eerder gedefinieerde symbolen voor de methode gewist."
  syntax:
    content: public virtual void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Het metagegevenstoken voor de methode moet worden geopend."
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  id: OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenNamespace(String)
  nameWithType: SymWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee opent u een nieuwe naamruimte."
  remarks: "Deze methode aanroepen voordat u definieert methoden of variabelen die zijn opgeslagen in een naamruimte. Naamruimten kunnen worden genest."
  syntax:
    content: public virtual void OpenNamespace (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de nieuwe naamruimte."
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  id: OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenScope(Int32)
  nameWithType: SymWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee opent u een nieuwe lexicale scope in de huidige methode."
  remarks: "Dit bereik wordt het nieuwe huidige bereik en naar een stack van bereiken wordt doorgeschoven. Scopes moet een hiërarchie vormen. Elementen op hetzelfde niveau mogen niet overlappen.       Bereik-id&quot;s zijn alleen geldig in de huidige methode."
  syntax:
    content: public virtual int OpenScope (int startOffset);
    parameters:
    - id: startOffset
      type: System.Int32
      description: "De IL-offset in bytes vanaf het begin van de methode de eerste instructie in het lexicale bereik."
    return:
      type: System.Int32
      description: "Een ondoorzichtige bereik-id die kan worden gebruikt met <> </> *> voor het definiëren van de begin- en verschuivingen van een scope op een later tijdstip. In dit geval wordt de verschuiving doorgegeven aan OpenScope en <> </> *> worden genegeerd. Een bereik-id is alleen geldig in de huidige methode."
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  id: SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Genereert een <xref:System.NotSupportedException>in alle gevallen.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);
    parameters:
    - id: startDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Deze parameter wordt niet gebruikt."
    - id: startLine
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: startColumn
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: endDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Deze parameter wordt niet gebruikt."
    - id: endLine
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
    - id: endColumn
      type: System.Int32
      description: "Deze parameter wordt niet gebruikt."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "In alle gevallen."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  id: SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Het offset bereik voor het opgegeven bereik lexicale definieert."
  syntax:
    content: public virtual void SetScopeRange (int scopeID, int startOffset, int endOffset);
    parameters:
    - id: scopeID
      type: System.Int32
      description: "De id van het lexicale bereik geretourneerd door de <xref:System.Diagnostics.SymbolStore.SymWriter.OpenScope*>methode.</xref:System.Diagnostics.SymbolStore.SymWriter.OpenScope*>"
    - id: startOffset
      type: System.Int32
      description: "De IL-offset van het begin van het lexicale bereik."
    - id: endOffset
      type: System.Int32
      description: "De IL-offset van het einde van het lexicale bereik."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  id: SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Een kenmerk bij de opgegeven naam van het kenmerk en de waarde van het kenmerk definieert."
  remarks: "De methode SetSymAttribute is alleen van symbolische informatie en is geen aangepaste metagegevenskenmerk."
  syntax:
    content: public virtual void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "De metagegevenstoken waarvoor het kenmerk wordt gedefinieerd."
    - id: name
      type: System.String
      description: "De naam van het kenmerk."
    - id: data
      type: System.Byte[]
      description: "De waarde van het kenmerk."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  id: SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee stelt u de onderliggende [ISymUnmanagedWriter Interface](~/add/includes/ajax-current-ext-md.md) (de bijbehorende API onbeheerd) die een beheerde <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> maakt gebruik van symbolen verzenden."
  remarks: "De onderliggende [ISymUnmanagedWriter Interface](../Topic/ISymUnmanagedWriter%20Interface.md) (de bijbehorende API onbeheerd) interface vertegenwoordigt een symbool-schrijver voor beheerde code. De interface biedt methoden voor het definiëren van documenten, reeks punten lexicale scopes en variabelen."
  syntax:
    content: public virtual void SetUnderlyingWriter (IntPtr underlyingWriter);
    parameters:
    - id: underlyingWriter
      type: System.IntPtr
      description: "Een <xref:System.IntPtr>type verwijzing naar de code die de onderliggende schrijver.</xref:System.IntPtr>"
  overload: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  id: SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "De gebruiker gedefinieerde methode identificeert als het toegangspunt voor de huidige module."
  remarks: "Dit is normaal gesproken de belangrijkste methode."
  syntax:
    content: public virtual void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);
    parameters:
    - id: entryMethod
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Het metagegevenstoken voor de methode die het item is gebruiker verwijzen."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  id: UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: UsingNamespace(String)
  nameWithType: SymWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Geeft aan dat de gegeven, volledig gekwalificeerde naam wordt gebruikt binnen het open lexicale bereik."
  remarks: "U sluit het huidige bereik, voorkomt u dat deze scope met de naamruimte. De naamruimte blijft in gebruik is in alle scopes die van het huidige open bereik overnemen."
  syntax:
    content: public virtual void UsingNamespace (string fullName);
    parameters:
    - id: fullName
      type: System.String
      description: "De volledig gekwalificeerde naam van de naamruimte."
  overload: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymWriterBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymWriterBase
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter()
  nameWithType: SymWriter.SymWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter(Boolean)
  nameWithType: SymWriter.SymWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymWriter.Close
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Close()
  nameWithType: SymWriter.Close()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseMethod()
  nameWithType: SymWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseNamespace()
  nameWithType: SymWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseScope(Int32)
  nameWithType: SymWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)
- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocumentWriter
  nameWithType: ISymbolDocumentWriter
  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: true
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymAddressKind
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymAddressKind
  nameWithType: SymAddressKind
  fullName: System.Diagnostics.SymbolStore.SymAddressKind
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: true
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose()
  nameWithType: SymWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Finalize()
  nameWithType: SymWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: GetWriter()
  nameWithType: SymWriter.GetWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: InitWriter(Boolean)
  nameWithType: SymWriter.InitWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenMethod(SymbolToken)
  nameWithType: SymWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenNamespace(String)
  nameWithType: SymWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenScope(Int32)
  nameWithType: SymWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: UsingNamespace(String)
  nameWithType: SymWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter
  nameWithType: SymWriter.SymWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.Close*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Close
  nameWithType: SymWriter.Close
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseMethod
  nameWithType: SymWriter.CloseMethod
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseNamespace
  nameWithType: SymWriter.CloseNamespace
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseScope
  nameWithType: SymWriter.CloseScope
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineDocument
  nameWithType: SymWriter.DefineDocument
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineField
  nameWithType: SymWriter.DefineField
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineGlobalVariable
  nameWithType: SymWriter.DefineGlobalVariable
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineLocalVariable
  nameWithType: SymWriter.DefineLocalVariable
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineParameter
  nameWithType: SymWriter.DefineParameter
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineSequencePoints
  nameWithType: SymWriter.DefineSequencePoints
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose
  nameWithType: SymWriter.Dispose
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Finalize
  nameWithType: SymWriter.Finalize
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: GetWriter
  nameWithType: SymWriter.GetWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Initialize
  nameWithType: SymWriter.Initialize
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: InitWriter
  nameWithType: SymWriter.InitWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenMethod
  nameWithType: SymWriter.OpenMethod
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenNamespace
  nameWithType: SymWriter.OpenNamespace
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenScope
  nameWithType: SymWriter.OpenScope
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetMethodSourceRange
  nameWithType: SymWriter.SetMethodSourceRange
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetScopeRange
  nameWithType: SymWriter.SetScopeRange
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetSymAttribute
  nameWithType: SymWriter.SetSymAttribute
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUnderlyingWriter
  nameWithType: SymWriter.SetUnderlyingWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUserEntryPoint
  nameWithType: SymWriter.SetUserEntryPoint
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: UsingNamespace
  nameWithType: SymWriter.UsingNamespace
