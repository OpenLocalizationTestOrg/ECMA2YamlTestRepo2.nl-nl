### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.DependencyObject
  id: DependencyObject
  children:
  - System.Workflow.ComponentModel.DependencyObject.#ctor
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.Finalize
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  langs:
  - csharp
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
  type: Class
  summary: "De basisklasse voor alle objecten die afhankelijkheidseigenschappen hebben. Deze klasse moet worden overgenomen."
  remarks: >-
    > [!NOTE]

    >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class DependencyObject : IDisposable, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Wanneer een ge√Ømplementeerd in een afgeleide klasse, initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> klasse."
  syntax:
    content: protected DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Voegt een handler van een gebeurtenis van een <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  remarks: 'Wanneer u een gemachtigde maakt, kunt u de methode die verantwoordelijk is voor de gebeurtenis identificeren. Toevoegen om te koppelen van de gebeurtenis met gebeurtenis-handler, een exemplaar van de gemachtigde aan de gebeurtenis. Tenzij u de gemachtigde verwijdert, wordt de gebeurtenis-handler wordt aangeroepen wanneer de gebeurtenis zich voordoet. Meerdere gemachtigden kunnen worden toegevoegd om een gebeurtenis te verwerken. Zie voor meer informatie over de gebeurtenis-handler gemachtigden [KROONTJESPEN: gebeurtenissen en gemachtigden](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  example:
  - "Handlers are added and removed using the following code. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void AddHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "De <xref:System.Object>die de waarde van deze eigenschap vertegenwoordigt.</xref:System.Object> In dit geval een <xref:System.Delegate>type.</xref:System.Delegate>"
  overload: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een van de argumenten is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> dependencyEvent </code> vertegenwoordigt een gebeurtenisafhankelijke <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  id: DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hiermee wordt de waarde die aangeeft of dit exemplaar in het ontwerp of runtime-modus is."
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit exemplaar in de ontwerpmodus is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  id: Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "De niet-beheerde bronnen vrijgegeven en worden eventueel versies van de beheerde bronnen die worden gebruikt door <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  id: Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Opgegeven als een onderdrukking te &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; deterministische opschonen van niet-beheerde bronnen."
  remarks: "Dit is normaal gesproken vereist wanneer niet-beheerde bronnen zoals onbewerkte HWNDS, Win32 bestanden handlers en anderen worden vrijgegeven."
  syntax:
    content: ~DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  id: GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Biedt toegang tot de <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> die zijn gekoppeld aan de specifieke <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  syntax:
    content: public System.Workflow.ComponentModel.ActivityBind GetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Workflow.ComponentModel.ActivityBind
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> die zijn gekoppeld aan de specifieke <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  id: GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Haalt de <xref:System.Object>die het onderwerp van een <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>.</xref:System.Object>"
  remarks: "Het <xref:System.Object>is het onderwerp van een <xref:System.Workflow.ComponentModel.ActivityBind>.</xref:System.Workflow.ComponentModel.ActivityBind> </xref:System.Object> Wanneer in een afgeleide klasse opgeheven, kan deze methode kan worden gebruikt voor het aanpassen van de manier waarop een opgegeven koppeling is opgelost."
  syntax:
    content: protected virtual object GetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, Type targetType);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: targetType
      type: System.Type
      description: "De <xref:System.Type>van het doel van de <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>.</xref:System.Type>"
    return:
      type: System.Object
      description: "De <xref:System.Object>die het onderwerp van een <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  id: GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: protected T[] GetInvocationList<T> (System.Workflow.ComponentModel.DependencyProperty dependencyEvent);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
    return:
      type: T[]
      description: "Moet worden toegevoegd."
  overload: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Biedt toegang tot de waarde van de aangewezen <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  remarks: "Dit lid wordt doorgaans gebruikt in de eigenschap opgehaald voor het verstrekken van de waarde van de benoemde afhankelijkheid."
  example:
  - "The following code shows how to use GetValue to return the value represented by a named dependency property in the context of get and set. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#231](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#231)]\n [!code-vb[WF_Samples#231](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#231)]"
  syntax:
    content: public object GetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Object
      description: "Het object waarmee de waarde van de aangewezen <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Biedt toegang tot het afhankelijke object van een <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> en omzeilt de <xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>overschrijven.</xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>"
  remarks: "Deze methode is handig in de <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>implementatie overschrijven.</xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> Normaal gesproken de <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>overschrijven code roept de GetValueBase en vervolgens aanvullende code wordt toegevoegd.</xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>       Voor het implementeren van de <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>overschrijven, <xref:System.Workflow.ComponentModel.PropertyMetadata>kan worden gebruikt in <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>/<xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> aanroepen.</xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> </xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> </xref:System.Workflow.ComponentModel.PropertyMetadata> </xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>"
  syntax:
    content: public object GetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "De <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> om de waarde van."
    return:
      type: System.Object
      description: "Het afhankelijke object van een <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>. Dit omzeilt de <xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>overschrijven.</xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>"
  overload: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Voert initialisatie op afhankelijkheidseigenschappen als overschreven in een afgeleide klasse."
  remarks: "Wordt aangeroepen door de workflow runtime engine tijdens de initialisatie van de activiteit tijdens runtime."
  syntax:
    content: protected virtual void InitializeProperties ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  id: IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hiermee wordt aangegeven of de waarde van een <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> als een binding is ingesteld. Zie <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding*>.</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding*>"
  syntax:
    content: public bool IsBindingSet (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "De <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> om te testen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als ingesteld als een binding; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  id: MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hiermee wordt bepaald of de <xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;> </xref> van deze <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> gelijk is aan de <xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;> </xref> van de geparameteriseerde <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  remarks: "Dit maakt gebruik van de `==` operator zoals is gedefinieerd voor het type persoonlijk lid `metaproperties`, namelijk <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  syntax:
    content: public bool MetaEquals (System.Workflow.ComponentModel.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Workflow.ComponentModel.DependencyObject
      description: "De <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> met moet worden vergeleken op gelijkheid."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;> </xref> zijn gelijk zijn, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  id: ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Het bovenliggende object opgehaald <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> in de <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> grafiek."
  syntax:
    content: protected System.Workflow.ComponentModel.DependencyObject ParentDependencyObject { get; }
    return:
      type: System.Workflow.ComponentModel.DependencyObject
      description: "De bovenliggende <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> in de <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> grafiek."
  overload: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hiermee verwijdert u een <xref:System.EventHandler>van een gekoppeld <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>.</xref:System.EventHandler>"
  remarks: "Opgegeven als een handige directe methode voor het verwijderen van de gebeurtenisgemachtigde van een.       Wanneer u een gemachtigde maakt, kunt u de methode waarmee de gebeurtenis wordt afgehandeld identificeren. Toevoegen om te koppelen van de gebeurtenis met gebeurtenis-handler, een exemplaar van de gemachtigde aan de gebeurtenis. Tenzij u de gemachtigde verwijdert, wordt de gebeurtenis-handler wordt aangeroepen wanneer de gebeurtenis zich voordoet. Zie voor meer informatie over de gebeurtenis-handler gemachtigden [KROONTJESPEN: gebeurtenissen en gemachtigden](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  example:
  - "Handlers are added and removed using the following code. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void RemoveHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "De <xref:System.Object>die de waarde van deze eigenschap vertegenwoordigt.</xref:System.Object> In dit geval een <xref:System.Delegate>type.</xref:System.Delegate>"
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een van de argumenten is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> dependencyEvent </code> is geen gebeurtenis."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "De <code> value </code> is een <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> en dit exemplaar is niet <xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>.</xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  id: RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> from the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  syntax:
    content: public bool RemoveProperty (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "De <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> worden verwijderd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de bewerking is geslaagd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Het argument is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  id: SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Stelt de <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> voor het opgegeven <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>Hiermee stelt u de waarde rechtstreeks naar de <xref:System.Workflow.ComponentModel.DependencyProperty>.</xref:System.Workflow.ComponentModel.DependencyProperty></xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> Op deze manier <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>een handler rechtstreeks aan de eigenschappen van het type gebeurtenis toegevoegd.</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>       Deze methoden sluiten elkaar uit wanneer ze worden aangeroepen voor dezelfde eigenschap. Als SetBinding wordt aangeroepen, wordt de waarden eerder is ingesteld met behulp van <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>(<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> in gebeurtenissen) worden genegeerd.</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> Hetzelfde geldt andersom: <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>(<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) stelt de binding die is toegewezen met SetBinding.</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>"
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A>permission for this type.  \n  \n In addition, the use of the SetBinding method is illustrated.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#215](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#215)]\n [!code-vb[WF_Samples#215](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#215)]"
  syntax:
    content: public void SetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, System.Workflow.ComponentModel.ActivityBind bind);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "De <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> in te stellen op."
  overload: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een van de argumenten is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <xref href=&quot;System.Workflow.ComponentModel.PropertyMetadata&quot;> </xref> die zijn gekoppeld aan de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> is geen bindbare."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dit exemplaar is niet <xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>.</xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  id: SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hiermee stelt u de waarde van de doel- <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>."
  syntax:
    content: protected virtual void SetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, object value);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: value
      type: System.Object
      description: "De <xref:System.Object>instellen van het doel van de <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bind</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hiermee stelt u de waarde van een <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>, die alleen-lezen is."
  syntax:
    content: protected void SetReadOnlyPropertyValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "De <xref:System.Object>die de waarde vertegenwoordigt.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> dependencyProperty </code> is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hiermee stelt u de waarde van de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> op het object."
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>Hiermee stelt u een binding voor de afhankelijkheidseigenschap.</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>       SetValue stelt u een waarde rechtstreeks naar de <xref:System.Workflow.ComponentModel.DependencyProperty>(op dezelfde manier <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>een handler rechtstreeks aan de eigenschappen van het type gebeurtenis toegevoegd).</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyProperty>       Deze methoden sluiten elkaar uit wanneer ze worden aangeroepen voor dezelfde eigenschap. Als <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>wordt genoemd, en vervolgens de waarden eerder is ingesteld met behulp van SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> in gebeurtenissen) worden genegeerd.</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> Hetzelfde geldt andersom: SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) stelt de binding die is toegewezen met <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>.</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> </xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>"
  example:
  - "The following code shows how a dependency property is set within a dependency object using SetValue.  \n  \n [!code-cs[WF_Samples#166](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#166)]\n [!code-vb[WF_Samples#166](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#166)]"
  syntax:
    content: public void SetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "De <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> moet worden ingesteld."
    - id: value
      type: System.Object
      description: "De <xref:System.Object>de waarde ingesteld op.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hiermee stelt u de waarde van de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> tot de opgegeven <xref:System.Object>de <xref:System.Workflow.ComponentModel.DependencyObject.SetValue*>.</xref:System.Workflow.ComponentModel.DependencyObject.SetValue*> overslaan</xref:System.Object>"
  remarks: "Deze methode is handig in de <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>implementatie overschrijven.</xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> Normaal gesproken de <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>code onderdrukking bepaalde aangepaste logica zou doen voordat u de SetValueBase-methode aanroept.</xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>       Voor instelling een <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>overschrijven, <xref:System.Workflow.ComponentModel.PropertyMetadata>kan worden gebruikt in <xref:System.Workflow.ComponentModel.DependencyProperty>, <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>, of <xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A>aanroepen.</xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> </xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> </xref:System.Workflow.ComponentModel.DependencyProperty> </xref:System.Workflow.ComponentModel.PropertyMetadata> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>"
  syntax:
    content: public void SetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "De <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> moet worden ingesteld op de <xref:System.Object>.</xref:System.Object>"
    - id: value
      type: System.Object
      description: "De <xref:System.Object>die wordt de waarde van de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  id: Site
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Opgehaald of ingesteld van een verwijzing naar het onderdeel van de Site van de <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "Het onderdeel van de Site van de <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.Site*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  id: UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Haalt een <xref:System.Collections.IDictionary>die aangepaste gegevens worden gekoppeld aan deze klasse-instantie.</xref:System.Collections.IDictionary>"
  remarks: "Deze eigenschap is een `metaproperty`, hetgeen betekent dat is onveranderbaar tijdens runtime. `Metaproperties`niet wijzigen nadat een exemplaar van de eigenschap is gemaakt tijdens runtime, zodat de eigenschap moet worden ingesteld op een letterlijke waarde in de ontwerpfase.       Deze eigenschap wordt niet gebruikt in de standaard <xref:System.Workflow.ComponentModel.Activity>declaratie implementaties geleverd door Windows Workflow Foundation.</xref:System.Workflow.ComponentModel.Activity> Deze verzameling is niet geserialiseerd; gegevens die de verzameling bevat, is niet persistent sinds de ontwerpfase keer wordt uitgevoerd."
  syntax:
    content: public System.Collections.IDictionary UserData { get; }
    return:
      type: System.Collections.IDictionary
      description: "Een woordenlijst die als een haakje uitbreidbaarheid voor ontwikkelaars fungeert voor het manipuleren <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> declaraties voor het ontwerp van een hulpprogramma en aangepaste gegevens koppelen aan afzonderlijke activiteit declaraties."
  overload: System.Workflow.ComponentModel.DependencyObject.UserData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
- uid: System.Workflow.ComponentModel.ActivityBind
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityBind
  nameWithType: ActivityBind
  fullName: System.Workflow.ComponentModel.ActivityBind
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
- uid: T[]
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
- uid: System.Workflow.ComponentModel.DependencyObject
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler
  nameWithType: DependencyObject.AddHandler
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose
  nameWithType: DependencyObject.Dispose
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize
  nameWithType: DependencyObject.Finalize
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding
  nameWithType: DependencyObject.GetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue
  nameWithType: DependencyObject.GetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList<T>
  nameWithType: DependencyObject.GetInvocationList<T>
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue
  nameWithType: DependencyObject.GetValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase
  nameWithType: DependencyObject.GetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties
  nameWithType: DependencyObject.InitializeProperties
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet
  nameWithType: DependencyObject.IsBindingSet
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals
  nameWithType: DependencyObject.MetaEquals
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler
  nameWithType: DependencyObject.RemoveHandler
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty
  nameWithType: DependencyObject.RemoveProperty
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding
  nameWithType: DependencyObject.SetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue
  nameWithType: DependencyObject.SetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue
  nameWithType: DependencyObject.SetReadOnlyPropertyValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue
  nameWithType: DependencyObject.SetValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase
  nameWithType: DependencyObject.SetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.Site*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
- uid: System.Workflow.ComponentModel.DependencyObject.UserData*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
