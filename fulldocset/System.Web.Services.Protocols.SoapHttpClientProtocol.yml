### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol
  id: SoapHttpClientProtocol
  children:
  - System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor
  - System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.Discover
  - System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])
  - System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  - System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion
  langs:
  - csharp
  name: SoapHttpClientProtocol
  nameWithType: SoapHttpClientProtocol
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol
  type: Class
  summary: "Hiermee geeft u de klasse-client die proxy&quot;s die zijn afgeleid van wanneer met behulp van SOAP."
  remarks: "Als u een XML-webservice-serviceclient bouwt, klikt u vervolgens een proxy-klasse die is afgeleid direct of indirect van <xref:System.Web.Services.Protocols.WebClientProtocol>moet worden gemaakt voor de XML-webservice.</xref:System.Web.Services.Protocols.WebClientProtocol> Als de serviceclient XML-webservice wordt aangeroepen met behulp van SOAP, de proxyklasse moet zijn afgeleid van SoapHttpClientProtocol die is afgeleid van <xref:System.Web.Services.Protocols.HttpWebClientProtocol>.</xref:System.Web.Services.Protocols.HttpWebClientProtocol> <xref:System.Web.Services.Protocols.HttpWebClientProtocol>, op zijn beurt is afgeleid van <xref:System.Web.Services.Protocols.WebClientProtocol>.</xref:System.Web.Services.Protocols.WebClientProtocol></xref:System.Web.Services.Protocols.HttpWebClientProtocol>       Om te communiceren met een XML-webservice, maakt u een proxyklasse die is afgeleid van direct of indirect van <xref:System.Web.Services.Protocols.WebClientProtocol>voor de XML-webservice die u wilt aanroepen.</xref:System.Web.Services.Protocols.WebClientProtocol> In plaats van de proxyklasse handmatig te maken, gebruikt u het hulpprogramma Web Services Description Language (Wsdl.exe) voor het maken van een proxyklasse voor een opgegeven XML-webservice van servicebeschrijving. Wanneer een proxy-klasse wordt gegenereerd voor de SOAP-protocol, synchrone aanroepen van methoden van XML-webservice worden aangebracht de <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A>methode, terwijl asynchrone aanroepen zijn gemaakt met behulp van de <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A>methode en de <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A>methode.</xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> </xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> </xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A>"
  example:
  - "The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service. The proxy class derives from SoapHttpClientProtocol, which derives from the abstract <xref:System.Web.Services.Protocols.WebClientProtocol> class.  \n  \n [!code-cs[Classic SoapHttpClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_15_1.cs)]\n [!code-vb[Classic SoapHttpClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_15_1.vb)]\n [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_15_1.cpp)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was generated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  - System.Web.Services.Protocols.HttpWebClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: SoapHttpClientProtocol()
  nameWithType: SoapHttpClientProtocol.SoapHttpClientProtocol()
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapHttpClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Services.Protocols.SoapHttpClientProtocol&quot;> </xref> klasse."
  syntax:
    content: public SoapHttpClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  id: BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: BeginInvoke(String,Object[],AsyncCallback,Object)
  nameWithType: SoapHttpClientProtocol.BeginInvoke(String,Object[],AsyncCallback,Object)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(String,Object[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Start een asynchrone aanroep van een methode voor de XML-webservice met behulp van SOAP."
  remarks: "Normaal gesproken u zou niet de BeginInvoke methode aanroepen rechtstreeks, tenzij u uw eigen proxyklasse voor een XML-webservice zijn bouwen.       Een proxy-klasse die is gegenereerd door het hulpprogramma Web Services Description Language (Wsdl.exe) van een servicebeschrijving beschrijft methoden van de XML-webservice als namen die zijn afgeleid van de proxyklasse synchroon aanroepen van methoden van de XML-webservice. Om aan te roepen asynchroon methoden van de XML-webservice, twee extra methoden worden toegevoegd aan de proxyklasse voor elke XML-methode voor de webservice, één met de `Begin` voorvoegsel toegevoegd aan de naam van de methode voor de XML-webservice en één met de `End` voorvoegsel toegevoegd.       De proxyklasse roept de methode BeginInvoke voor het starten van een asynchrone aanroep aanroep van de methode voor de XML-webservice. Bijvoorbeeld, als een XML-webservice beschrijft een methode voor de XML-webservice met de naam `Add`, de proxyklasse bevat een methode met de naam `BeginAdd`, service-methode voor het starten van een aanroep naar het XML-webservice. In de code voor de `BeginAdd`, wordt een aanroep naar de methode BeginInvoke en de resultaten worden geplaatst in het verwachte retourtype voor `Add`.       De `methodName` wordt gebruikt om de aangepaste kenmerken die zijn toegevoegd aan de methode, zoals <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> zoeken <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>bevat aanvullende informatie over de afgeleide methode die is vereist voor het SOAP-protocol.</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>       `asyncState`is doorgegeven aan `callback` en is opgenomen in de <xref:System.IAsyncResult>die wordt geretourneerd vanaf de methode BeginInvoke.</xref:System.IAsyncResult> De `asyncState` parameter kan worden gebruikt om door te geven informatie over de context van de asynchrone aanroep, opgegeven in de `callback` parameter aan de gemachtigde die verantwoordelijk is voor het resultaat."
  example:
  - "The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service. Within the `BeginAdd` method of the proxy class, the BeginInvoke method is starting an asynchronous invocation to the `Add` XML Web service method.  \n  \n [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/add/codesnippet/cpp/81aca43b-c3a8-42d4-aae1-_1.cpp)]\n [!code-cs[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/add/codesnippet/csharp/81aca43b-c3a8-42d4-aae1-_1.cs)]\n [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/add/codesnippet/visualbasic/81aca43b-c3a8-42d4-aae1-_1.vb)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);
    parameters:
    - id: methodName
      type: System.String
      description: "De naam van de methode voor de XML-webservice in de afgeleide klasse waarmee de BeginInvoke-methode is aangeroepen."
    - id: parameters
      type: System.Object[]
      description: "Een matrix met objecten met de parameters worden doorgegeven aan de XML-webservice. De volgorde van de waarden in de matrix komen overeen met de volgorde van de parameters in de aanroepende methode van de afgeleide klasse."
    - id: callback
      type: System.AsyncCallback
      description: "De gemachtigde aan te roepen wanneer de asynchrone invoke voltooid is. Als `callback` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, de gemachtigde is niet aangeroepen."
    - id: asyncState
      type: System.Object
      description: "Extra informatie verstrekt door de aanroeper."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die wordt doorgegeven aan de <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*>methode om op te halen van de retourwaarden van de methode voor externe aanroep.</xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*> </xref:System.IAsyncResult>"
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*
  exceptions:
  - type: System.Web.Services.Protocols.SoapException
    commentId: T:System.Web.Services.Protocols.SoapException
    description: "De aanvraag de server-computer bereikt, maar is niet verwerkt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De aanvraag is niet geldig voor de huidige status van het object."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Er is een fout opgetreden tijdens het openen van het netwerk."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover
  id: Discover
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: Discover()
  nameWithType: SoapHttpClientProtocol.Discover()
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Dynamisch wordt gebonden aan een XML-webservice wordt beschreven in het discovery-document op <xref:System.Web.Services.Protocols.WebClientProtocol.Url*>.</xref:System.Web.Services.Protocols.WebClientProtocol.Url*>"
  remarks: "Een XML-webservice-serviceclient kan dynamisch worden verbonden met een XML-webservice dan die waarnaar wordt verwezen in de proxyklasse met behulp van de Discover-methode. Normaal gesproken de <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>eigenschap verwijst naar het basisadres van de XML-webservice.</xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> Echter ingesteld voordat de Discover-methode wordt aangeroepen, de <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>eigenschap naar een URL van een discovery-document.</xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> De Discover-methode probeert te vinden in het discovery-document op de binding die is gedefinieerd in de proxyklasse en dynamisch binden aan. Als dit lukt, worden de volgende methodeaanroepen omgeleid naar de XML-webservice wordt beschreven in het discovery-document.       Als de proxyklasse is gebouwd met het hulpprogramma Web Services Description Language (Wsdl.exe), definieert de proxyklasse de binding die is geïmplementeerd door het aanroept met behulp van de <xref:System.Web.Services.WebServiceBindingAttribute>.</xref:System.Web.Services.WebServiceBindingAttribute> methoden van de XML-webservice Wanneer een XML-webservice meerdere bindingen implementeert, maakt Wsdl.exe proxyklasse voor elke binding. Toegepast op elke proxyklasse is een <xref:System.Web.Services.WebServiceBindingAttribute>die de naam van de binding en de naamruimte definieert.</xref:System.Web.Services.WebServiceBindingAttribute> Het discovery-document dat u de <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>eigenschap moet een verwijzing bevatten naar een XML-webservice die de naam van de binding en de naamruimte implementeert, of er een uitzondering gegenereerd.</xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>"
  example:
  - "The following code example is a proxy class generated using the Wsdl.exe utility for the `Math` XML Web service. A <xref:System.Web.Services.WebServiceBindingAttribute> is applied to the `Math` proxy class setting the binding name to `MathSoap` and its namespace to `http://tempuri.org/`.  \n  \n [!code-cs[SoapHttpClientProtocol.Discover Example#1](~/add/codesnippet/csharp/m-system.web.services.pr_8_1.cs)]\n [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/add/codesnippet/cpp/m-system.web.services.pr_8_1.cpp)]\n [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_8_1.vb)]  \n  \n The following code example is a Web Service client using the preceding proxy class. Within the `EnterBtn_Click` event of the Web Form, the XML Web service client calls the Discover method attempting to dynamically bind to the URL supplied by the user.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[SoapHttpClientProtocol.Discover Example#2](~/add/codesnippet/csharp/m-system.web.services.pr_8_2.aspx)]\n [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/add/codesnippet/visualbasic/m-system.web.services.pr_8_2.aspx)]"
  syntax:
    content: public void Discover ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "De proxyklasse heeft geen een binding die is gedefinieerd."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: EndInvoke(IAsyncResult)
  nameWithType: SoapHttpClientProtocol.EndInvoke(IAsyncResult)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Een asynchrone aanroep van een methode voor de XML-webservice met behulp van SOAP eindigt."
  remarks: "Normaal gesproken u zou niet de EndInvoke methode aanroepen rechtstreeks, tenzij u uw eigen proxyklasse voor een XML-webservice zijn bouwen.       Een proxy-klasse die is gegenereerd door het hulpprogramma Web Services Description Language (Wsdl.exe) voor een XML-webservice wordt methoden van de XML-webservice als namen van de proxyklasse voor het aanroepen van methoden van de XML-webservice synchroon. Voor het aanroepen van methoden van de XML-webservice asynchroon, twee extra methoden worden toegevoegd aan de proxyklasse voor elke XML-methode voor de webservice, één met de `Begin` voorvoegsel toegevoegd aan de naam van de methode voor de XML-webservice en één met de `End` voorvoegsel toegevoegd.       De proxyklasse roept de methode EndInvoke voor het voltooien van een asynchrone aanroep aanroep van de methode voor de XML-webservice. Bijvoorbeeld, als een XML-webservice beschrijft een methode voor de XML-webservice met de naam `Add`, de proxyklasse bevat een methode met de naam `EndAdd`, service-methode voor het voltooien van een asynchrone aanroep van een XML-webservice. In de code voor de `EndAdd` wordt een aanroep naar de methode EndInvoke en vervolgens de resultaten worden geplaatst in het verwachte retourtype voor `Add`."
  example:
  - "The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service. Within the `EndAdd` method of the proxy class, the EndInvoke method completes the asynchronous invocation to the `Add` XML Web service method.  \n  \n [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/add/codesnippet/visualbasic/d0f11dd9-cadb-4640-91aa-_1.vb)]\n [!code-cs[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/add/codesnippet/csharp/d0f11dd9-cadb-4640-91aa-_1.cs)]\n [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/add/codesnippet/cpp/d0f11dd9-cadb-4640-91aa-_1.cpp)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected object[] EndInvoke (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd door de <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*>methode.</xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*> </xref:System.IAsyncResult>"
    return:
      type: System.Object[]
      description: "Een matrix met objecten die de retourwaarde en elke door-verwijzing bevat of <xref uid=&quot;langword_csharp_out&quot; name=&quot;out&quot; href=&quot;&quot;> </xref> parameters van de afgeleide klasse-methode."
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet de geretourneerde waarde van de <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*> methode."
  - type: System.Web.Services.Protocols.SoapException
    commentId: T:System.Web.Services.Protocols.SoapException
    description: "De aanvraag de server-computer bereikt, maar is niet verwerkt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De aanvraag is niet geldig voor de huidige status van het object."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Er is een fout opgetreden tijdens het openen van het netwerk."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  id: GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: GetReaderForMessage(SoapClientMessage,Int32)
  nameWithType: SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage,Int32)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage,Int32)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retourneert een <xref:System.Xml.XmlReader>geïnitialiseerd met de <xref:System.Web.Services.Protocols.SoapMessage.Stream*>eigenschap van de <xref href=&quot;System.Web.Services.Protocols.SoapClientMessage&quot;> </xref> parameter.</xref:System.Web.Services.Protocols.SoapMessage.Stream*> </xref:System.Xml.XmlReader>"
  syntax:
    content: protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);
    parameters:
    - id: message
      type: System.Web.Services.Protocols.SoapClientMessage
      description: "Een <xref href=&quot;System.Web.Services.Protocols.SoapClientMessage&quot;> </xref> die zorgt voor de <xref:System.Web.Services.Protocols.SoapMessage.Stream*>initialisatie van de <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Web.Services.Protocols.SoapMessage.Stream*>"
    - id: bufferSize
      type: System.Int32
      description: "De eerste buffergrootte van het <xref:System.IO.StreamReader>door de <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> gebruikt</xref:System.IO.StreamReader>"
    return:
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>geïnitialiseerd met de <xref:System.Web.Services.Protocols.SoapMessage.Stream*>eigenschap van de <code> message </code> parameter.</xref:System.Web.Services.Protocols.SoapMessage.Stream*> </xref:System.Xml.XmlReader>"
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: SoapHttpClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Maakt een <xref:System.Net.WebRequest>voor het opgegeven <code> uri </code>.</xref:System.Net.WebRequest>"
  remarks: "Deze methode kan worden genegeerd voor het aanpassen van de <xref:System.Net.WebRequest>voordat de XML-webservice service wordt aangevraagd.</xref:System.Net.WebRequest> U kan bijvoorbeeld een aangepaste header toevoegen aan de aanvraag."
  syntax:
    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "De <xref:System.Uri>te gebruiken bij het maken van de <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> </xref:System.Uri>"
    return:
      type: System.Net.WebRequest
      description: "De <xref:System.Net.WebRequest>voor de opgegeven URI.</xref:System.Net.WebRequest>"
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  id: GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: GetWriterForMessage(SoapClientMessage,Int32)
  nameWithType: SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage,Int32)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage,Int32)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retourneert een <xref:System.Xml.XmlWriter>geïnitialiseerd met de <xref:System.Web.Services.Protocols.SoapMessage.Stream*>eigenschap van de <xref href=&quot;System.Web.Services.Protocols.SoapClientMessage&quot;> </xref> parameter.</xref:System.Web.Services.Protocols.SoapMessage.Stream*> </xref:System.Xml.XmlWriter>"
  syntax:
    content: protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);
    parameters:
    - id: message
      type: System.Web.Services.Protocols.SoapClientMessage
      description: "Een <xref href=&quot;System.Web.Services.Protocols.SoapClientMessage&quot;> </xref> die zorgt voor de <xref:System.Web.Services.Protocols.SoapMessage.Stream*>initialisatie van de <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> </xref:System.Web.Services.Protocols.SoapMessage.Stream*>"
    - id: bufferSize
      type: System.Int32
      description: "De eerste buffergrootte van het <xref:System.IO.StreamWriter>door de <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> gebruikt</xref:System.IO.StreamWriter>"
    return:
      type: System.Xml.XmlWriter
      description: "Een <xref:System.Xml.XmlWriter>geïnitialiseerd met de <xref:System.Web.Services.Protocols.SoapMessage.Stream*>eigenschap van de <code> message </code> parameter.</xref:System.Web.Services.Protocols.SoapMessage.Stream*> </xref:System.Xml.XmlWriter>"
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])
  id: Invoke(System.String,System.Object[])
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: Invoke(String,Object[])
  nameWithType: SoapHttpClientProtocol.Invoke(String,Object[])
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String,Object[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee wordt een methode voor de XML-webservice synchroon met behulp van SOAP."
  remarks: "Normaal gesproken Roep u niet de aanroepmethode rechtstreeks, tenzij u bij het bouwen van uw eigen proxyklasse voor een XML-webservice.       Een proxy-klasse die is gegenereerd door het hulpprogramma Web Services Description Language (Wsdl.exe) voor een XML-webservice wordt methoden van de XML-webservice als namen van de proxyklasse. De proxyklasse roept de methode Invoke om aan te roepen, een aanroep van methode XML-webservice. Bijvoorbeeld, als een XML-webservice beschrijft een methode voor de XML-webservice met de naam `Add`, de proxyklasse bevat ook een methode met de naam `Add`. In de code voor de `Add` methode in de proxyklasse synchrone wordt een aanroep naar de methode voor de XML-webservice via de methode Invoke en vervolgens de resultaten worden geplaatst in het verwachte retourtype voor `Add`.       De `methodName` parameter wordt gebruikt om de aangepaste kenmerken die zijn toegevoegd aan de methode, zoals <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> zoeken <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>bevat aanvullende informatie over de afgeleide methode die vereist voor het SOAP-protocol is.</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>"
  example:
  - "The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service. Within the `Add` method of the proxy class, the Invoke method is calling the `Add` XML Web service method.  \n  \n [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/add/codesnippet/cpp/0fe8d4bc-686d-467a-8cdd-_1.cpp)]\n [!code-cs[Classic SoapHttpClientProtocol.Invoke Example#1](~/add/codesnippet/csharp/0fe8d4bc-686d-467a-8cdd-_1.cs)]\n [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/add/codesnippet/visualbasic/0fe8d4bc-686d-467a-8cdd-_1.vb)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected object[] Invoke (string methodName, object[] parameters);
    parameters:
    - id: methodName
      type: System.String
      description: "De naam van de methode voor de XML-webservice."
    - id: parameters
      type: System.Object[]
      description: "Een matrix met objecten met de parameters worden doorgegeven aan de XML-webservice. De volgorde van de waarden in de matrix overeenkomt met de volgorde van de parameters in de aanroepende methode van de afgeleide klasse."
    return:
      type: System.Object[]
      description: "Een matrix met objecten die de retourwaarde en eventuele bevat <xref uid=&quot;langword_csharp_reference&quot; name=&quot;reference&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_out&quot; name=&quot;out&quot; href=&quot;&quot;> </xref> parameters van de afgeleide klasse-methode."
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke*
  exceptions:
  - type: System.Web.Services.Protocols.SoapException
    commentId: T:System.Web.Services.Protocols.SoapException
    description: "De aanvraag de server-computer bereikt, maar is niet verwerkt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De aanvraag is niet geldig voor de huidige status van het object."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Er is een fout opgetreden tijdens het openen van het netwerk."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)
  id: InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: InvokeAsync(String,Object[],SendOrPostCallback)
  nameWithType: SoapHttpClientProtocol.InvokeAsync(String,Object[],SendOrPostCallback)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(String,Object[],SendOrPostCallback)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "De opgegeven methode aanroept asynchroon."
  syntax:
    content: protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);
    parameters:
    - id: methodName
      type: System.String
      description: "De naam van de methode aan te roepen."
    - id: parameters
      type: System.Object[]
      description: "De parameters worden doorgegeven aan de methode."
    - id: callback
      type: System.Threading.SendOrPostCallback
      description: "De gemachtigde wordt aangeroepen wanneer de methodeaanroep is voltooid."
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  id: InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: InvokeAsync(String,Object[],SendOrPostCallback,Object)
  nameWithType: SoapHttpClientProtocol.InvokeAsync(String,Object[],SendOrPostCallback,Object)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(String,Object[],SendOrPostCallback,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "De opgegeven methode aanroept asynchroon."
  syntax:
    content: protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);
    parameters:
    - id: methodName
      type: System.String
      description: "De naam van de methode aan te roepen."
    - id: parameters
      type: System.Object[]
      description: "De parameters worden doorgegeven aan de methode."
    - id: callback
      type: System.Threading.SendOrPostCallback
      description: "De gemachtigde wordt aangeroepen wanneer de methodeaanroep is voltooid."
    - id: userState
      type: System.Object
      description: "Een object dat wordt gebruikt om door te geven informatie over de status in de `callback` delegeren."
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion
  id: SoapVersion
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  langs:
  - csharp
  name: SoapVersion
  nameWithType: SoapHttpClientProtocol.SoapVersion
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Opgehaald of ingesteld van de versie van het SOAP-protocol gebruikt voor het maken van de SOAP-aanvraag met de XML-webservice."
  remarks: "De eigenschap SoapVersion is ingesteld in de proxyklasse die is gegenereerd door het hulpprogramma Web Services Description Language (Wsdl.exe) <xref:System.Web.Services.Protocols.SoapProtocolVersion>standaard wanneer een WSDL-document voor een XML-webservice SOAP-versie 1.1 ondersteunt.</xref:System.Web.Services.Protocols.SoapProtocolVersion> Echter, wanneer een XML-webservice alleen SOAP 1.2 ondersteunt, Wsdl.exe SoapVersion wordt de eigenschap ingesteld <xref:System.Web.Services.Protocols.SoapProtocolVersion>.</xref:System.Web.Services.Protocols.SoapProtocolVersion> Als u de versie van het SOAP-protocol bij het genereren van de proxyklasse met Wsdl.exe, gebruiken de `/protocol` switch met de `SOAP` of `SOAP12` instellingen voor de eigenschap SoapVersion instellen op <xref:System.Web.Services.Protocols.SoapProtocolVersion>en <xref:System.Web.Services.Protocols.SoapProtocolVersion>respectievelijk.</xref:System.Web.Services.Protocols.SoapProtocolVersion> </xref:System.Web.Services.Protocols.SoapProtocolVersion>"
  example:
  - "The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.  \n  \n [!code-cs[SoapHttpClientProtocol.SoapVersion#1](~/add/codesnippet/csharp/p-system.web.services.pr_20_1.aspx)]\n [!code-vb[SoapHttpClientProtocol.SoapVersion#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_20_1.aspx)]"
  syntax:
    content: public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapProtocolVersion
      description: "Een van de <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;> </xref> waarden. De standaardwaarde is <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;> </xref>."
  overload: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: System.Web.Services.Protocols.HttpWebClientProtocol
- uid: System.Web.Services.Protocols.SoapException
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapException
  nameWithType: SoapException
  fullName: System.Web.Services.Protocols.SoapException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: SoapHttpClientProtocol()
  nameWithType: SoapHttpClientProtocol.SoapHttpClientProtocol()
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapHttpClientProtocol()
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: BeginInvoke(String,Object[],AsyncCallback,Object)
  nameWithType: SoapHttpClientProtocol.BeginInvoke(String,Object[],AsyncCallback,Object)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(String,Object[],AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: Discover()
  nameWithType: SoapHttpClientProtocol.Discover()
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover()
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: EndInvoke(IAsyncResult)
  nameWithType: SoapHttpClientProtocol.EndInvoke(IAsyncResult)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(IAsyncResult)
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetReaderForMessage(SoapClientMessage,Int32)
  nameWithType: SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage,Int32)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage,Int32)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.Services.Protocols.SoapClientMessage
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapClientMessage
  nameWithType: SoapClientMessage
  fullName: System.Web.Services.Protocols.SoapClientMessage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: SoapHttpClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetWriterForMessage(SoapClientMessage,Int32)
  nameWithType: SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage,Int32)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage,Int32)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: Invoke(String,Object[])
  nameWithType: SoapHttpClientProtocol.Invoke(String,Object[])
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String,Object[])
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: InvokeAsync(String,Object[],SendOrPostCallback)
  nameWithType: SoapHttpClientProtocol.InvokeAsync(String,Object[],SendOrPostCallback)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(String,Object[],SendOrPostCallback)
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: true
  name: SendOrPostCallback
  nameWithType: SendOrPostCallback
  fullName: System.Threading.SendOrPostCallback
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: InvokeAsync(String,Object[],SendOrPostCallback,Object)
  nameWithType: SoapHttpClientProtocol.InvokeAsync(String,Object[],SendOrPostCallback,Object)
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(String,Object[],SendOrPostCallback,Object)
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: SoapVersion
  nameWithType: SoapHttpClientProtocol.SoapVersion
  fullName: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion
- uid: System.Web.Services.Protocols.SoapProtocolVersion
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapProtocolVersion
  nameWithType: SoapProtocolVersion
  fullName: System.Web.Services.Protocols.SoapProtocolVersion
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: SoapHttpClientProtocol
  nameWithType: SoapHttpClientProtocol.SoapHttpClientProtocol
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: BeginInvoke
  nameWithType: SoapHttpClientProtocol.BeginInvoke
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Discover*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: Discover
  nameWithType: SoapHttpClientProtocol.Discover
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: EndInvoke
  nameWithType: SoapHttpClientProtocol.EndInvoke
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetReaderForMessage
  nameWithType: SoapHttpClientProtocol.GetReaderForMessage
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: SoapHttpClientProtocol.GetWebRequest
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: GetWriterForMessage
  nameWithType: SoapHttpClientProtocol.GetWriterForMessage
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: Invoke
  nameWithType: SoapHttpClientProtocol.Invoke
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: InvokeAsync
  nameWithType: SoapHttpClientProtocol.InvokeAsync
- uid: System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion*
  parent: System.Web.Services.Protocols.SoapHttpClientProtocol
  isExternal: false
  name: SoapVersion
  nameWithType: SoapHttpClientProtocol.SoapVersion
