### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbXmlEnabledProviderManifest
  id: DbXmlEnabledProviderManifest
  children:
  - System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)
  - System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  - System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions
  - System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes
  - System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
  - System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  - System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  langs:
  - csharp
  name: DbXmlEnabledProviderManifest
  nameWithType: DbXmlEnabledProviderManifest
  fullName: System.Data.Common.DbXmlEnabledProviderManifest
  type: Class
  summary: "Hiermee geeft u een basisklasse die u implementeert de <xref href=&quot;System.Data.Common.DbProviderManifest&quot;> </xref> op basis van een XML-definitie. U kunt de klasse DbXmlEnabledProviderManifest provider-specifieke informatie tijdens runtime in te winnen."
  remarks: "De klasse DbXmlEnabledProviderManifest is vooral geschikt is voor de providers waarvan Typetoewijzing voor EDM symmetrisch is. In scenario&quot;s de toewijzing van symmetrisch type elk opslagtype toegewezen aan één entiteit Model (EDP) type ongeacht de richting van de toewijzing. Met andere woorden, is de toewijzing van het EDM-provider-type hetzelfde als de toewijzing van de provider voor EDM-type.       In scenario&quot;s symmetrische toewijzing, kunt u uw aangepaste providerklasse ofwel afgeleid van de klasse DbXmlEnabledProviderManifest of de <xref:System.Data.Common.DbProviderManifest>klasse.</xref:System.Data.Common.DbProviderManifest> Het is raadzaam dat u uw aangepaste providerklasse afgeleid van de klasse DbXmlEnabledProviderManifest voor symmetrische toewijzing scenario&quot;s, omdat de klasse DbXmlEnabledProviderManifest kunt u de manifesten declaratief opgeven."
  syntax:
    content: 'public abstract class DbXmlEnabledProviderManifest : System.Data.Common.DbProviderManifest'
  inheritance:
  - System.Object
  - System.Data.Common.DbProviderManifest
  implements: []
  inheritedMembers:
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  - System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.GetInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.StoreSchemaMapping
  - System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  - System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)
  id: '#ctor(System.Xml.XmlReader)'
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: DbXmlEnabledProviderManifest(XmlReader)
  nameWithType: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.Common.DbXmlEnabledProviderManifest&quot;> </xref> klasse."
  remarks: "De Entity Framework biedt een standaardimplementatie die voortbouwt van de provider-informatie van de opgegeven XmlReader manifest."
  syntax:
    content: protected DbXmlEnabledProviderManifest (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>object dat toegang tot de XML-gegevens in het manifestbestand van de provider biedt.</xref:System.Xml.XmlReader>"
  overload: System.Data.Common.DbXmlEnabledProviderManifest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  id: GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Retourneert de lijst met beschrijvingen facet voor het opgegeven type voor Entity Data Model (EDP)."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription> GetFacetDescriptions (System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: "Een <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> waarvoor de facet beschrijvingen zijn worden opgehaald."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
      description: "Een verzameling van het type &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; die de lijst met beschrijvingen facet voor het opgegeven EDM-type bevat."
  overload: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions
  id: GetStoreFunctions
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: GetStoreFunctions()
  nameWithType: DbXmlEnabledProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Retourneert de lijst met functies provider ondersteund."
  remarks: "Deze methode (niet-null) levert geen gebruiker gedefinieerde functies. Als de provider niet alle functies ondersteunt, retourneert deze methode een lege verzameling."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetStoreFunctions ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "Een verzameling van het type &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; die bevat de lijst met functies provider ondersteund."
  overload: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes
  id: GetStoreTypes
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: GetStoreTypes()
  nameWithType: DbXmlEnabledProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Retourneert de lijst met primitieve typen ondersteund door de opslagprovider."
  remarks: "Als de store biedt geen ondersteuning voor elk type, retourneert deze (niet-null) methode een lege verzameling."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType> GetStoreTypes ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
      description: "Een verzameling van het type &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; die de lijst met primitieve typen ondersteund door de opslagprovider bevat."
  overload: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
  id: NamespaceName
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: NamespaceName
  nameWithType: DbXmlEnabledProviderManifest.NamespaceName
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Hiermee wordt de naam voor de naamruimte die wordt ondersteund door deze providermanifest opgehaald."
  syntax:
    content: public override string NamespaceName { get; }
    return:
      type: System.String
      description: "De naamruimtenaam die wordt ondersteund door deze providermanifest."
  overload: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  id: StoreTypeNameToEdmPrimitiveType
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: StoreTypeNameToEdmPrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Haalt het beste toegewezen gelijkwaardige Entity Data Model (EDP)-type voor de naam van een opgegeven type."
  remarks: "Deze eigenschap (niet-null) retourneert de <xref:System.Collections.Generic.Dictionary>-object, dat de naam van een type als sleutel accepteert en de bijbehorende waarde van de EDM-type retourneert.</xref:System.Collections.Generic.Dictionary>"
  syntax:
    content: protected System.Collections.Generic.Dictionary<string,System.Data.Metadata.Edm.PrimitiveType> StoreTypeNameToEdmPrimitiveType { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.PrimitiveType}
      description: "De beste toegewezen gelijkwaardige EDM-type voor de naam van een opgegeven type."
  overload: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  id: StoreTypeNameToStorePrimitiveType
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  langs:
  - csharp
  name: StoreTypeNameToStorePrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Hiermee haalt het beste toegewezen gelijkwaardige primitieve opslagtype voor de naam van een opgegeven type."
  remarks: "Deze eigenschap (niet-null) retourneert de <xref:System.Collections.Generic.Dictionary>-object, dat de naam van een type als sleutel accepteert en retourneert de waarde van de bijbehorende opslag primitief type.</xref:System.Collections.Generic.Dictionary>"
  syntax:
    content: protected System.Collections.Generic.Dictionary<string,System.Data.Metadata.Edm.PrimitiveType> StoreTypeNameToStorePrimitiveType { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.PrimitiveType}
      description: "De beste toegewezen gelijkwaardige primitieve opslagtype voor de naam van een opgegeven type."
  overload: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbProviderManifest
  isExternal: false
  name: System.Data.Common.DbProviderManifest
- uid: System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: DbXmlEnabledProviderManifest(XmlReader)
  nameWithType: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<FacetDescription>
  nameWithType: ReadOnlyCollection<FacetDescription>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.FacetDescription
    name: FacetDescription
    nameWithType: FacetDescription
    fullName: FacetDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetStoreFunctions()
  nameWithType: DbXmlEnabledProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmFunction
    name: EdmFunction
    nameWithType: EdmFunction
    fullName: EdmFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetStoreTypes()
  nameWithType: DbXmlEnabledProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PrimitiveType>
  nameWithType: ReadOnlyCollection<PrimitiveType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.PrimitiveType
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbXmlEnabledProviderManifest.NamespaceName
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: StoreTypeNameToEdmPrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
- uid: System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.PrimitiveType}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,PrimitiveType>
  nameWithType: Dictionary<String,PrimitiveType>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Data.Metadata.Edm.PrimitiveType>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Data.Metadata.Edm.PrimitiveType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Metadata.Edm.PrimitiveType
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: StoreTypeNameToStorePrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
  fullName: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
- uid: System.Data.Common.DbXmlEnabledProviderManifest.#ctor*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: DbXmlEnabledProviderManifest
  nameWithType: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetFacetDescriptions
  nameWithType: DbXmlEnabledProviderManifest.GetFacetDescriptions
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetStoreFunctions
  nameWithType: DbXmlEnabledProviderManifest.GetStoreFunctions
- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: GetStoreTypes
  nameWithType: DbXmlEnabledProviderManifest.GetStoreTypes
- uid: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbXmlEnabledProviderManifest.NamespaceName
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: StoreTypeNameToEdmPrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType
- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType*
  parent: System.Data.Common.DbXmlEnabledProviderManifest
  isExternal: false
  name: StoreTypeNameToStorePrimitiveType
  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType
