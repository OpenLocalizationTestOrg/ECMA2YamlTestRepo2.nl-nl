### YamlMime:ManagedReference
items:
- uid: System.Windows.IWeakEventListener
  id: IWeakEventListener
  children:
  - System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  langs:
  - csharp
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
  type: Interface
  summary: "Gebeurtenis luisterende ondersteuning biedt voor klassen die u verwacht te ontvangen van gebeurtenissen tot en met het patroon WeakEvent en een <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref>."
  remarks: "De <xref:System.Windows.WeakEventManager>(een dispatcher) stuurt u een gebeurtenis door het aanroepen van de <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>methode voor klassen die deze interface is geïmplementeerd en die zijn toegevoegd als listeners door aan te roepen <xref:System.Windows.WeakEventManager>methoden tevoren.</xref:System.Windows.WeakEventManager> </xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> </xref:System.Windows.WeakEventManager>       De principal reden voor het volgen van het patroon WeakEvent is wanneer de bron van de gebeurtenis heeft een levensduur van objecten die mogelijk onafhankelijk is van de gebeurtenislisteners. Met behulp van de centrale gebeurtenis inschakeling van een <xref:System.Windows.WeakEventManager>kan de handlers voor listeners garbagecollection zijn verzameld (of handmatig worden opgeschoond) zelfs als de levensduur van de bron-object de listeners overschrijdt.</xref:System.Windows.WeakEventManager> Daarentegen is een normale gebeurtenis aansluiten met `+=` of de syntaxis van de equivalente taalspecifieke gebeurtenis zorgt ervoor dat de bron mogelijk nog verbonden voor het opslaan van een sterke verwijzing naar de handlers. Hierdoor blijft de listener-verwijzingen van de garbage collector zijn verzameld op tijdige wijze wordt.       Een algemene situatie waarin de relaties tussen bronnen en listeners stelt het gebruik van dit patroon is de verwerking van de update-gebeurtenissen die afkomstig zijn van bronnen voor gegevensbindingen.       U kunt het patroon WeakEvent gebruiken om te luisteren naar gebeurtenissen die extern voor uw toepassing zijn. U hoeft alleen te definiëren een <xref:System.Windows.WeakEventManager>, bieden luisterende gedrag in <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>, en gebruiken de <xref:System.Windows.WeakEventManager>koppelen van de handler verwijst naar plaats `+=`.</xref:System.Windows.WeakEventManager> </xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> </xref:System.Windows.WeakEventManager>"
  syntax:
    content: public interface IWeakEventListener
  implements: []
  platform:
  - net462
- uid: System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.IWeakEventListener
  langs:
  - csharp
  name: ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gebeurtenissen ontvangt uit het gecentraliseerde gebeurtenisbeheer."
  remarks: ''
  example:
  - "The following example implements ReceiveWeakEvent to provide WeakEvent pattern support for two hypothetical events `ClockwiseSpin` and `CounterclockwiseSpin` that each have a dedicated <xref:System.Windows.WeakEventManager> (not shown). This implementation calls class handler stubs for each supported event, casting the event data (in this case the two events share an event data type `SpinEventArgs`). The implementation returns `false` if the event received is not one that is expected.  \n  \n [!code-cs[CorePseudocode#IWeakEventListener](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#iweakeventlistener)]\n [!code-vb[CorePseudocode#IWeakEventListener](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#iweakeventlistener)]"
  syntax:
    content: public bool ReceiveWeakEvent (Type managerType, object sender, EventArgs e);
    parameters:
    - id: managerType
      type: System.Type
      description: "Het type van de <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref> u deze methode aanroept."
    - id: sender
      type: System.Object
      description: "Object dat afkomstig is van de gebeurtenis."
    - id: e
      type: System.EventArgs
      description: "Gebeurtenisgegevens."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de listener de gebeurtenis verwerkt. Dit wordt beschouwd als een fout door de <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref> verwerken bij [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] een listener voor een gebeurtenis die de listener niet verwerkt registreren. Ongeacht, de methode moet retourneren <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als er een gebeurtenis die deze niet herkent of verwerken."
  overload: System.Windows.IWeakEventListener.ReceiveWeakEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.IWeakEventListener
  isExternal: false
  name: ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.IWeakEventListener.ReceiveWeakEvent*
  parent: System.Windows.IWeakEventListener
  isExternal: false
  name: ReceiveWeakEvent
  nameWithType: IWeakEventListener.ReceiveWeakEvent
