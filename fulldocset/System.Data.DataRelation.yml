### YamlMime:ManagedReference
items:
- uid: System.Data.DataRelation
  id: DataRelation
  children:
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  - System.Data.DataRelation.CheckStateForProperty
  - System.Data.DataRelation.ChildColumns
  - System.Data.DataRelation.ChildKeyConstraint
  - System.Data.DataRelation.ChildTable
  - System.Data.DataRelation.DataSet
  - System.Data.DataRelation.ExtendedProperties
  - System.Data.DataRelation.Nested
  - System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  - System.Data.DataRelation.ParentColumns
  - System.Data.DataRelation.ParentKeyConstraint
  - System.Data.DataRelation.ParentTable
  - System.Data.DataRelation.RaisePropertyChanging(System.String)
  - System.Data.DataRelation.RelationName
  - System.Data.DataRelation.ToString
  langs:
  - csharp
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
  type: Class
  summary: "Hiermee geeft u een bovenliggende/onderliggende relatie tussen twee <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten."
  remarks: "DataRelation wordt gebruikt om twee <xref:System.Data.DataTable>objecten met elkaar via <xref:System.Data.DataColumn>objecten.</xref:System.Data.DataColumn> </xref:System.Data.DataTable> Bijvoorbeeld in een relatie bestellingen/de tabel Klanten is het bovenliggende element en de tabel Orders is het onderliggende lid van de relatie. Dit is vergelijkbaar met een primaire sleutel/refererende-sleutelrelatie. Zie voor meer informatie [DataRelations navigeren](~/add/includes/ajax-current-ext-md.md).       Relaties worden gemaakt tussen de overeenkomstige kolommen in de bovenliggende en onderliggende tabellen. Dat wil zeggen, de <xref:System.Data.DataColumn.DataType%2A>waarde voor beide kolommen identiek zijn.</xref:System.Data.DataColumn.DataType%2A>       Relaties kunnen ook verschillende wijzigingen van de bovenliggende trapsgewijs <xref:System.Data.DataRow>naar de onderliggende rijen.</xref:System.Data.DataRow> Om te bepalen hoe de waarden in de onderliggende rijen zijn gewijzigd, Voeg een <xref:System.Data.ForeignKeyConstraint>naar de <xref:System.Data.ConstraintCollection>van de <xref:System.Data.DataTable>object.</xref:System.Data.DataTable> </xref:System.Data.ConstraintCollection> </xref:System.Data.ForeignKeyConstraint> De <xref:System.Data.ConstraintCollection>bepaalt welke actie moet worden uitgevoerd wanneer een waarde in een bovenliggende tabel is verwijderd of bijgewerkt.</xref:System.Data.ConstraintCollection>       Wanneer een DataRelation is gemaakt, wordt eerst gecontroleerd of de relatie kan worden vastgesteld. Nadat deze is toegevoegd aan het <xref:System.Data.DataRelationCollection>de relatie wordt onderhouden door staat geen wijzigingen die deze ongeldig</xref:System.Data.DataRelationCollection> Tussen de periode wanneer DataRelation is gemaakt en toegevoegd aan de <xref:System.Data.DataRelationCollection>, is het mogelijk aanvullende wijzigingen worden aangebracht aan de bovenliggende of onderliggende rijen.</xref:System.Data.DataRelationCollection> Een uitzondering wordt gegenereerd als dit zorgt ervoor dat een relatie die niet langer geldig.      > [!NOTE] > Kunnen gegevens beschadigd raken als een relatie in twee richtingen tussen twee tabellen is gedefinieerd. Een relatie in twee richtingen bestaat uit twee `DataRelation` objecten die gebruikmaken van dezelfde kolommen aan de bovenliggende en onderliggende rollen overgeschakeld. Geen uitzondering gegenereerd wanneer de `DataRelation` objecten worden opgeslagen; echter, kunnen gegevens beschadigd raken.       DataRelation objecten bevinden zich in een <xref:System.Data.DataRelationCollection>, die u kunt openen via de <xref:System.Data.DataSet.Relations%2A>eigenschap van de <xref:System.Data.DataSet>, en de <xref:System.Data.DataTable.ChildRelations%2A> <xref:System.Data.DataTable.ParentRelations%2A>Eigenschappen van de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> en</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A> </xref:System.Data.DataRelationCollection>"
  example:
  - "The following example creates a new DataRelation and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataRelation Example#1](~/add/codesnippet/csharp/t-system.data.datarelation_1.cs)]\n [!code-vb[Classic WebData DataRelation Example#1](~/add/codesnippet/visualbasic/t-system.data.datarelation_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("RelationName")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.RelationshipConverter))]

      public class DataRelation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn,DataColumn)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.DataRelation&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Data.DataRelation&quot;> </xref> naam en bovenliggende en onderliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataRelation.DataRelation#1](~/add/codesnippet/csharp/c51592f7-179d-4737-b5e5-_1.cs)]\n [!code-vb[Classic WebData DataRelation.DataRelation#1](~/add/codesnippet/visualbasic/c51592f7-179d-4737-b5e5-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: relationName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataRelation&quot;> </xref>. Als <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;), een standaardnaam krijgt wanneer het gemaakte object wordt toegevoegd aan de <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "De bovenliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> in de relatie."
    - id: childColumn
      type: System.Data.DataColumn
      description: "De onderliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> in de relatie."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een of beide van de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten bevat <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "De kolommen hebben verschillende gegevenstypen - of - tabellen horen niet bij dezelfde <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn[],DataColumn[])
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.DataRelation&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.Data.DataRelation&quot;> </xref> naam en overeenkomende matrices met bovenliggende en onderliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataRelation.DataRelation2 Example#1](~/add/codesnippet/visualbasic/74c401a9-c184-4dbd-895b-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: relationName
      type: System.String
      description: "De naam van de relatie. Als <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;), een standaardnaam krijgt wanneer het gemaakte object wordt toegevoegd aan de <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "Een matrix van bovenliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "Een matrix van onderliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een of beide van de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten bevat <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "De <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten hebben verschillende typen - of - een of beide van de matrices niet bestaan uit afzonderlijke kolommen uit dezelfde tabel.       - Of - tabellen horen niet bij dezelfde <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.DataRelation&quot;> </xref> met behulp van de opgegeven naam, de bovenliggende en onderliggende klasse <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten en een waarde die aangeeft of beperkingen te maken."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataRelation.DataRelation1 Example#1](~/add/codesnippet/visualbasic/6c615cfd-3655-4658-a32b-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);
    parameters:
    - id: relationName
      type: System.String
      description: "De naam van de relatie. Als <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;), een standaardnaam krijgt wanneer het gemaakte object wordt toegevoegd aan de <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "De bovenliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> in de relatie."
    - id: childColumn
      type: System.Data.DataColumn
      description: "De onderliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> in de relatie."
    - id: createConstraints
      type: System.Boolean
      description: "Een waarde die aangeeft of de beperkingen worden gemaakt. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, als beperkingen worden gemaakt. Anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een of beide van de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten bevat <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "De kolommen hebben verschillende gegevenstypen - of - tabellen horen niet bij dezelfde <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.DataRelation&quot;> </xref> met behulp van de opgegeven naam, overeenkomende matrices met bovenliggende en onderliggende klasse <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten en de waarde die aangeeft of beperkingen te maken."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataRelation.DataRelation3 Example#1](~/add/codesnippet/visualbasic/91b51f14-3ecf-436c-8f4c-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);
    parameters:
    - id: relationName
      type: System.String
      description: "De naam van de relatie. Als <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;), een standaardnaam krijgt wanneer het gemaakte object wordt toegevoegd aan de <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "Een matrix van bovenliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "Een matrix van onderliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten."
    - id: createConstraints
      type: System.Boolean
      description: "Een waarde die aangeeft of beperkingen te maken. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, als beperkingen worden gemaakt. Anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een of beide van de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "De kolommen hebben verschillende gegevenstypen - of - tabellen horen niet bij dezelfde <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Deze constructor is opgegeven voor de ondersteuning van ontwerptijd in de Visual Studio-omgeving."
  remarks: "Alle <xref:System.Data.DataRelation>object gemaakt met behulp van deze constructor moet worden toegevoegd aan de verzameling met de <xref:System.Data.DataRelationCollection.AddRange%2A>methode in een <xref:System.Data.DataTable.BeginInit%2A>en <xref:System.Data.DataTable.EndInit%2A>blok.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A> </xref:System.Data.DataRelationCollection.AddRange%2A> </xref:System.Data.DataRelation> Als u deze constructor is niet aangeroepen tussen <xref:System.Data.DataTable.BeginInit%2A>en <xref:System.Data.DataTable.EndInit%2A>een <xref:System.NullReferenceException>wordt uitgevoerd.</xref:System.NullReferenceException> </xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A> Bovendien moeten de tabellen en kolommen met de opgegeven namen bestaan op het moment dat de constructor wordt aangeroepen."
  syntax:
    content: public DataRelation (string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested);
    parameters:
    - id: relationName
      type: System.String
      description: "De naam van de relatie. Als <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;), een standaardnaam krijgt wanneer het gemaakte object wordt toegevoegd aan de <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentTableName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> die de bovenliggende tabel van de relatie."
    - id: childTableName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> die de onderliggende tabel van de relatie."
    - id: parentColumnNames
      type: System.String[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> namen in het bovenliggende object <xref href=&quot;System.Data.DataTable&quot;> </xref> van de relatie."
    - id: childColumnNames
      type: System.String[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> namen in het onderliggende object <xref href=&quot;System.Data.DataTable&quot;> </xref> van de relatie."
    - id: nested
      type: System.Boolean
      description: "Een waarde die aangeeft of relaties genest zijn."
  overload: System.Data.DataRelation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,String,String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Deze constructor is opgegeven voor de ondersteuning van ontwerptijd in de Visual Studio-omgeving."
  remarks: "Een <xref:System.Data.DataRelation>object dat wordt gemaakt met behulp van deze constructor moet vervolgens worden toegevoegd aan de verzameling met <xref:System.Data.DataRelationCollection.AddRange%2A>.</xref:System.Data.DataRelationCollection.AddRange%2A> </xref:System.Data.DataRelation> Tabellen en kolommen met de opgegeven namen moeten bestaan op het moment dat de methode wordt aangeroepen, of als <xref:System.Data.DataTable.BeginInit%2A>is aangeroepen voordat het aanroepen van deze constructor, de tabellen en kolommen met de opgegeven namen moet bestaan op het moment dat <xref:System.Data.DataTable.EndInit%2A>wordt aangeroepen.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A>"
  syntax:
    content: public DataRelation (string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested);
    parameters:
    - id: relationName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataRelation&quot;> </xref>. Als <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;), een standaardnaam krijgt wanneer het gemaakte object wordt toegevoegd aan de <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentTableName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> die de bovenliggende tabel van de relatie."
    - id: parentTableNamespace
      type: System.String
      description: "De naam van de bovenliggende tabelnaamruimte."
    - id: childTableName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.DataTable&quot;> </xref> die de onderliggende tabel van de relatie."
    - id: childTableNamespace
      type: System.String
      description: "De naam van de onderliggende tabelnaamruimte."
    - id: parentColumnNames
      type: System.String[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> namen in het bovenliggende object <xref href=&quot;System.Data.DataTable&quot;> </xref> van de relatie."
    - id: childColumnNames
      type: System.String[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> namen in het onderliggende object <xref href=&quot;System.Data.DataTable&quot;> </xref> van de relatie."
    - id: nested
      type: System.Boolean
      description: "Een waarde die aangeeft of relaties genest zijn."
  overload: System.Data.DataRelation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.CheckStateForProperty
  id: CheckStateForProperty
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: CheckStateForProperty()
  nameWithType: DataRelation.CheckStateForProperty()
  fullName: System.Data.DataRelation.CheckStateForProperty()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Deze methode ondersteunt de .NET Framework-infrastructuur en is niet bedoeld voor rechtstreeks gebruik vanuit uw code."
  syntax:
    content: protected void CheckStateForProperty ();
    parameters: []
  overload: System.Data.DataRelation.CheckStateForProperty*
  exceptions:
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "De bovenliggende en onderliggende tabellen behoren tot verschillende <xref href=&quot;System.Data.DataSet&quot;> </xref> objecten.       - Of - paren van een of meer van de bovenliggende en onderliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten zijn niet-overeenkomende gegevenstypen.       - Of - de bovenliggende en onderliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten identiek zijn."
  platform:
  - net462
- uid: System.Data.DataRelation.ChildColumns
  id: ChildColumns
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
  fullName: System.Data.DataRelation.ChildColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De onderliggende opgehaald <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten van deze relatie."
  remarks: ''
  example:
  - "The following example gets the child <xref:System.Data.DataColumn> objects of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.ChildColumns Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_7_1.vb)]"
  syntax:
    content: public virtual System.Data.DataColumn[] ChildColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten."
  overload: System.Data.DataRelation.ChildColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ChildKeyConstraint
  id: ChildKeyConstraint
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
  fullName: System.Data.DataRelation.ChildKeyConstraint
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> voor de relatie."
  remarks: "Wanneer dit niet het gekoppeld <xref:System.Data.ForeignKeyConstraint>bestaat voor deze relatie, deze wordt automatisch gemaakt, en waarnaar wordt verwezen door de `ChildKeyConstraint`, wanneer de relatie wordt toegevoegd aan de verzameling van relaties.</xref:System.Data.ForeignKeyConstraint>"
  example:
  - "The following example sets the `UpdateRule`, `DeleteRule`, and `AcceptReject` rule for the `ForeignKeyConstraint` associated with the `DataRelation`.  \n  \n [!code-vb[Classic WebData DataRelation.ChildKeyConstraint Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_2_1.vb)]"
  syntax:
    content: public virtual System.Data.ForeignKeyConstraint ChildKeyConstraint { get; }
    return:
      type: System.Data.ForeignKeyConstraint
      description: "A <xref uid=&quot;langword_csharp_ForeignKeyConstraint&quot; name=&quot;ForeignKeyConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.DataRelation.ChildKeyConstraint*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ChildTable
  id: ChildTable
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildTable
  nameWithType: DataRelation.ChildTable
  fullName: System.Data.DataRelation.ChildTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de onderliggende tabel van deze relatie."
  remarks: ''
  example:
  - "The following example gets the child <xref:System.Data.DataTable> of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.ChildTable Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_0_1.vb)]"
  syntax:
    content: public virtual System.Data.DataTable ChildTable { get; }
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die de onderliggende tabel van de relatie."
  overload: System.Data.DataRelation.ChildTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.DataSet
  id: DataSet
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataSet
  nameWithType: DataRelation.DataSet
  fullName: System.Data.DataRelation.DataSet
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.DataSet&quot;> </xref> waarnaar de <xref href=&quot;System.Data.DataRelation&quot;> </xref> behoort."
  remarks: "De <xref:System.Data.DataRelationCollection>die zijn gekoppeld aan een <xref:System.Data.DataSet>toegankelijk is via de <xref:System.Data.DataSet.Relations%2A>eigenschap van de <xref:System.Data.DataSet>object.</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataRelationCollection>"
  example:
  - "The following example gets the <xref:System.Data.DataSet> of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.DataSet Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_1_1.vb)]"
  syntax:
    content: public virtual System.Data.DataSet DataSet { get; }
    return:
      type: System.Data.DataSet
      description: "Een <xref href=&quot;System.Data.DataSet&quot;> </xref> waarnaar de <xref href=&quot;System.Data.DataRelation&quot;> </xref> behoort."
  overload: System.Data.DataRelation.DataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ExtendedProperties
  id: ExtendedProperties
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
  fullName: System.Data.DataRelation.ExtendedProperties
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de verzameling die aangepaste eigenschappen worden opgeslagen."
  remarks: "ExtendedProperties gebruiken voor het toevoegen van aangepaste gegevens aan een <xref:System.Data.DataRelation>object.</xref:System.Data.DataRelation> Gegevens toevoegen met de methode Add. Gegevens ophalen met de methode Item.       Uitgebreide eigenschappen moet van het type <xref:System.String>.</xref:System.String> Eigenschappen die niet van het type String zijn niet permanent opgeslagen wanneer de <xref:System.Data.DataRelation>wordt geschreven als XML.</xref:System.Data.DataRelation>"
  syntax:
    content: public System.Data.PropertyCollection ExtendedProperties { get; }
    return:
      type: System.Data.PropertyCollection
      description: "Een <xref href=&quot;System.Data.PropertyCollection&quot;> </xref> die aangepaste eigenschappen bevat."
  overload: System.Data.DataRelation.ExtendedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.Nested
  id: Nested
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: Nested
  nameWithType: DataRelation.Nested
  fullName: System.Data.DataRelation.Nested
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of <xref href=&quot;System.Data.DataRelation&quot;> </xref> objecten zijn genest."
  remarks: "U kunt <xref:System.Data.DataRelation>objecten voor het definiëren van hiërarchische relaties, zoals die zijn opgegeven in XML.</xref:System.Data.DataRelation> Zie voor meer informatie [DataRelations nesten](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Als de <xref:System.Data.DataTable.TableName%2A>van de onderliggende tabel in de relatie komt overeen met de <xref:System.Data.DataColumn.ColumnName%2A>van een kolom in de bovenliggende tabel in de relatie, de eigenschap Nested moet op onwaar zijn.</xref:System.Data.DataColumn.ColumnName%2A> </xref:System.Data.DataTable.TableName%2A> Dit is geen vereiste met .NET Framework versie 1.0."
  syntax:
    content: public virtual bool Nested { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, als <xref href=&quot;System.Data.DataRelation&quot;> </xref> objecten zijn genest, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelation.Nested*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: System.Data.DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Dit lid ondersteunt de .NET Framework-infrastructuur en is niet bedoeld voor rechtstreeks gebruik vanuit uw code."
  syntax:
    content: protected void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);
    parameters:
    - id: pcevent
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "De parameterverwijzing."
  overload: System.Data.DataRelation.OnPropertyChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ParentColumns
  id: ParentColumns
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
  fullName: System.Data.DataRelation.ParentColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Een matrix van opgehaald <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten die de bovenliggende kolommen van dit <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: ''
  example:
  - "The following example gets the array of <xref:System.Data.DataColumn> objects that function as parent columns for the relation.  \n  \n [!code-vb[Classic WebData DataRelation.ParentColumns Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_5_1.vb)]"
  syntax:
    content: public virtual System.Data.DataColumn[] ParentColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten die de bovenliggende kolommen van dit <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  overload: System.Data.DataRelation.ParentColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ParentKeyConstraint
  id: ParentKeyConstraint
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
  fullName: System.Data.DataRelation.ParentKeyConstraint
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> Dit garandeert dat de waarden in de bovenliggende kolom van een <xref href=&quot;System.Data.DataRelation&quot;> </xref> uniek zijn."
  remarks: ''
  example:
  - "The following example gets the ParentKeyConstraint of a <xref:System.Data.DataRelation> object.  \n  \n [!code-vb[Classic WebData DataRelation.ParentKeyConstraint Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_6_1.vb)]"
  syntax:
    content: public virtual System.Data.UniqueConstraint ParentKeyConstraint { get; }
    return:
      type: System.Data.UniqueConstraint
      description: "Een <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> dat ervoor zorgt dat de waarden in een bovenliggende kolom uniek zijn."
  overload: System.Data.DataRelation.ParentKeyConstraint*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ParentTable
  id: ParentTable
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentTable
  nameWithType: DataRelation.ParentTable
  fullName: System.Data.DataRelation.ParentTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Het bovenliggende object opgehaald <xref href=&quot;System.Data.DataTable&quot;> </xref> van deze <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: ''
  example:
  - "The following example gets the parent <xref:System.Data.DataTable> of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.ParentTable Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_3_1.vb)]"
  syntax:
    content: public virtual System.Data.DataTable ParentTable { get; }
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die de bovenliggende tabel van deze relatie."
  overload: System.Data.DataRelation.ParentTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.RaisePropertyChanging(System.String)
  id: RaisePropertyChanging(System.String)
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: RaisePropertyChanging(String)
  nameWithType: DataRelation.RaisePropertyChanging(String)
  fullName: System.Data.DataRelation.RaisePropertyChanging(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Dit lid ondersteunt de .NET Framework-infrastructuur en is niet bedoeld voor rechtstreeks gebruik vanuit uw code."
  syntax:
    content: protected void RaisePropertyChanging (string name);
    parameters:
    - id: name
      type: System.String
      description: "De parameterverwijzing."
  overload: System.Data.DataRelation.RaisePropertyChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.RelationName
  id: RelationName
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: RelationName
  nameWithType: DataRelation.RelationName
  fullName: System.Data.DataRelation.RelationName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van de naam die wordt gebruikt voor het ophalen van een <xref href=&quot;System.Data.DataRelation&quot;> </xref> van de <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
  remarks: "De eigenschap RelationName gebruiken voor het ophalen van een <xref:System.Data.DataRelation>van de <xref:System.Data.DataRelationCollection>.</xref:System.Data.DataRelationCollection> </xref:System.Data.DataRelation>"
  example:
  - "The following example uses the RelationName property to retrieve a <xref:System.Data.DataRelation> from a <xref:System.Data.DataRelationCollection>.  \n  \n [!code-vb[Classic WebData DataRelation.RelationName Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_4_1.vb)]"
  syntax:
    content: public virtual string RelationName { get; set; }
    return:
      type: System.String
      description: "De naam van de een <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  overload: System.Data.DataRelation.RelationName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>of een lege tekenreeks (&quot;&quot;) is doorgegeven aan een <xref href=&quot;System.Data.DataColumn&quot;> </xref> die een <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "De <xref href=&quot;System.Data.DataRelation&quot;> </xref> behoort tot een verzameling die al bevat een <xref href=&quot;System.Data.DataRelation&quot;> </xref> met dezelfde naam."
  platform:
  - net462
- uid: System.Data.DataRelation.ToString
  id: ToString
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ToString()
  nameWithType: DataRelation.ToString()
  fullName: System.Data.DataRelation.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref:System.Data.DataRelation.RelationName*>, indien aanwezig.</xref:System.Data.DataRelation.RelationName*>"
  remarks: ''
  example:
  - "The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the name of the <xref:System.Data.DataRelation> object.  \n  \n [!code-vb[Classic WebData DataRelation.ToString Example#1](~/add/codesnippet/visualbasic/m-system.data.datarelati_1_1.vb)]\n [!code-cs[Classic WebData DataRelation.ToString Example#1](~/add/codesnippet/csharp/m-system.data.datarelati_1_1.cs)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "De waarde van de <xref:System.Data.DataRelation.RelationName*>eigenschap.</xref:System.Data.DataRelation.RelationName*>"
  overload: System.Data.DataRelation.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn,DataColumn)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn[],DataColumn[])
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,String,String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
- uid: System.Data.DataRelation.CheckStateForProperty
  parent: System.Data.DataRelation
  isExternal: false
  name: CheckStateForProperty()
  nameWithType: DataRelation.CheckStateForProperty()
  fullName: System.Data.DataRelation.CheckStateForProperty()
- uid: System.Data.DataRelation.ChildColumns
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
  fullName: System.Data.DataRelation.ChildColumns
- uid: System.Data.DataRelation.ChildKeyConstraint
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
  fullName: System.Data.DataRelation.ChildKeyConstraint
- uid: System.Data.ForeignKeyConstraint
  parent: System.Data
  isExternal: false
  name: ForeignKeyConstraint
  nameWithType: ForeignKeyConstraint
  fullName: System.Data.ForeignKeyConstraint
- uid: System.Data.DataRelation.ChildTable
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildTable
  nameWithType: DataRelation.ChildTable
  fullName: System.Data.DataRelation.ChildTable
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRelation.DataSet
  parent: System.Data.DataRelation
  isExternal: false
  name: DataSet
  nameWithType: DataRelation.DataSet
  fullName: System.Data.DataRelation.DataSet
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataRelation.ExtendedProperties
  parent: System.Data.DataRelation
  isExternal: false
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
  fullName: System.Data.DataRelation.ExtendedProperties
- uid: System.Data.PropertyCollection
  parent: System.Data
  isExternal: false
  name: PropertyCollection
  nameWithType: PropertyCollection
  fullName: System.Data.PropertyCollection
- uid: System.Data.DataRelation.Nested
  parent: System.Data.DataRelation
  isExternal: false
  name: Nested
  nameWithType: DataRelation.Nested
  fullName: System.Data.DataRelation.Nested
- uid: System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataRelation
  isExternal: false
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: System.Data.DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Data.DataRelation.ParentColumns
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
  fullName: System.Data.DataRelation.ParentColumns
- uid: System.Data.DataRelation.ParentKeyConstraint
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
  fullName: System.Data.DataRelation.ParentKeyConstraint
- uid: System.Data.UniqueConstraint
  parent: System.Data
  isExternal: false
  name: UniqueConstraint
  nameWithType: UniqueConstraint
  fullName: System.Data.UniqueConstraint
- uid: System.Data.DataRelation.ParentTable
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentTable
  nameWithType: DataRelation.ParentTable
  fullName: System.Data.DataRelation.ParentTable
- uid: System.Data.DataRelation.RaisePropertyChanging(System.String)
  parent: System.Data.DataRelation
  isExternal: false
  name: RaisePropertyChanging(String)
  nameWithType: DataRelation.RaisePropertyChanging(String)
  fullName: System.Data.DataRelation.RaisePropertyChanging(String)
- uid: System.Data.DataRelation.RelationName
  parent: System.Data.DataRelation
  isExternal: false
  name: RelationName
  nameWithType: DataRelation.RelationName
  fullName: System.Data.DataRelation.RelationName
- uid: System.Data.DataRelation.ToString
  parent: System.Data.DataRelation
  isExternal: false
  name: ToString()
  nameWithType: DataRelation.ToString()
  fullName: System.Data.DataRelation.ToString()
- uid: System.Data.DataRelation.#ctor*
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation.DataRelation
- uid: System.Data.DataRelation.CheckStateForProperty*
  parent: System.Data.DataRelation
  isExternal: false
  name: CheckStateForProperty
  nameWithType: DataRelation.CheckStateForProperty
- uid: System.Data.DataRelation.ChildColumns*
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
- uid: System.Data.DataRelation.ChildKeyConstraint*
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
- uid: System.Data.DataRelation.ChildTable*
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildTable
  nameWithType: DataRelation.ChildTable
- uid: System.Data.DataRelation.DataSet*
  parent: System.Data.DataRelation
  isExternal: false
  name: DataSet
  nameWithType: DataRelation.DataSet
- uid: System.Data.DataRelation.ExtendedProperties*
  parent: System.Data.DataRelation
  isExternal: false
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
- uid: System.Data.DataRelation.Nested*
  parent: System.Data.DataRelation
  isExternal: false
  name: Nested
  nameWithType: DataRelation.Nested
- uid: System.Data.DataRelation.OnPropertyChanging*
  parent: System.Data.DataRelation
  isExternal: false
  name: OnPropertyChanging
  nameWithType: DataRelation.OnPropertyChanging
- uid: System.Data.DataRelation.ParentColumns*
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
- uid: System.Data.DataRelation.ParentKeyConstraint*
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
- uid: System.Data.DataRelation.ParentTable*
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentTable
  nameWithType: DataRelation.ParentTable
- uid: System.Data.DataRelation.RaisePropertyChanging*
  parent: System.Data.DataRelation
  isExternal: false
  name: RaisePropertyChanging
  nameWithType: DataRelation.RaisePropertyChanging
- uid: System.Data.DataRelation.RelationName*
  parent: System.Data.DataRelation
  isExternal: false
  name: RelationName
  nameWithType: DataRelation.RelationName
- uid: System.Data.DataRelation.ToString*
  parent: System.Data.DataRelation
  isExternal: false
  name: ToString
  nameWithType: DataRelation.ToString
