### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.Claim
  id: Claim
  children:
  - System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)
  - System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.#ctor(System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.Clone
  - System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.CustomSerializationData
  - System.Security.Claims.Claim.Issuer
  - System.Security.Claims.Claim.OriginalIssuer
  - System.Security.Claims.Claim.Properties
  - System.Security.Claims.Claim.Subject
  - System.Security.Claims.Claim.ToString
  - System.Security.Claims.Claim.Type
  - System.Security.Claims.Claim.Value
  - System.Security.Claims.Claim.ValueType
  - System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])
  langs:
  - csharp
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
  type: Class
  summary: "Hiermee geeft u een claim."
  remarks: "Een claim is een overzicht over een onderwerp door een verlener. Claims vertegenwoordigen kenmerken van het onderwerp die nuttig in de context van bewerkingen voor verificatie en autorisatie zijn. Onderwerpen en uitgevers van certificaten zijn beide entiteiten die deel van een scenario met identiteiten uitmaken. Enkele typische voorbeelden van een onderwerp zijn: een gebruiker, een toepassing of service, een apparaat of een computer. Enkele typische voorbeelden van een verlener zijn: het besturingssysteem, een toepassing. een service, een rolprovider, een id-provider of een federatieprovider. Een verlener biedt claims door uitgifte van beveiligingstokens, doorgaans via een Security Token Service (STS). (In WIF, kunt u een STS maken die zijn afgeleid van de <xref:System.IdentityModel.SecurityTokenService>klasse)</xref:System.IdentityModel.SecurityTokenService> In bepaalde gevallen kan de verzameling van claims ontvangen van een verlener worden uitgebreid door onderwerpattributen rechtstreeks op de resource is opgeslagen. Een claim kan worden geëvalueerd om te bepalen van de toegangsrechten tot gegevens en andere bronnen die worden beveiligd tijdens het proces voor autorisatie en kan ook worden gebruikt of express verificatie beslissingen over een onderwerp.       Beginnend met .NET 4.5, zijn de klassen Windows Identity Foundation (WIF), die op basis van claims-identiteit is geïmplementeerd, volledig geïntegreerd in het .NET Framework. Het concept van claims is geïmplementeerd door de Claim-klasse.       Beschrijving van de volgende belangrijke eigenschappen van de klasse Claim: - de <xref:System.Security.Claims.Claim.Type%2A>eigenschap is een tekenreeks (meestal een URI) dat de semantische informatie over de claim bevat; vertelt wat de waarde van de claim betekent.</xref:System.Security.Claims.Claim.Type%2A> Bijvoorbeeld een claim met een claimtype <xref:System.Security.Claims.ClaimTypes.GivenName>(&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname&quot;) vertegenwoordigt de voornaam van een gebruiker.</xref:System.Security.Claims.ClaimTypes.GivenName> De waarde van de <xref:System.Security.Claims.Claim.Type%2A>eigenschap kan bestaan uit een van de bekende typen gedefinieerd in de <xref:System.Security.Claims.ClaimTypes>klasse, of kan een willekeurige URI zijn zoals gedefinieerd door de verlener.</xref:System.Security.Claims.ClaimTypes> </xref:System.Security.Claims.Claim.Type%2A> Een claimtype &quot;urn: spendinglimit&quot; vertegenwoordigen bijvoorbeeld een gebruikerskenmerk dat wel zinvol in de zakelijke context van de verlener is.      -De <xref:System.Security.Claims.Claim.Value%2A>eigenschap bevat de waarde van de claim.</xref:System.Security.Claims.Claim.Value%2A> De waarde van een claim wordt om te verminderen, afhankelijkheden en vereenvoudigen in WIF weergegeven alleen als een tekenreeks. Voor complexere waardetypen, wordt het aanbevolen dat u standaard XML-schematypen om aan te geven hoe de waarde is bedoeld om te worden geserialiseerd naar en gedeserialiseerd van een tekenreeks.      -De <xref:System.Security.Claims.Claim.ValueType%2A>eigenschap bevat een tekenreeks die de type-informatie voor de waarde wordt geïdentificeerd.</xref:System.Security.Claims.Claim.ValueType%2A> Deze eigenschap moet worden gebruikt om te begrijpen van de indeling van de waarde en waarmee informatie over het te deserialiseren. Als uw oplossing complexe waardetypen vereist, wordt aanbevolen dat u het XML-schematypen standaard in de <xref:System.Security.Claims.Claim.ValueType%2A>eigenschap om aan te geven hoe de <xref:System.Security.Claims.Claim.Value%2A>eigenschap is bedoeld om te worden geserialiseerd naar en gedeserialiseerd van een tekenreeks.</xref:System.Security.Claims.Claim.Value%2A> </xref:System.Security.Claims.Claim.ValueType%2A>      -De <xref:System.Security.Claims.Claim.Subject%2A>eigenschap is een <xref:System.Security.Claims.ClaimsIdentity>-object met de houder van de claim.</xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.Claim.Subject%2A> Het onderwerp van de claim wordt de entiteit (doorgaans de gebruiker die toegang tot een bron aanvraagt) over de claim wordt gehandhaafd. De <xref:System.Security.Claims.ClaimsIdentity>bevat onder de eigenschappen, een verzameling van claims die worden beschreven van de eigenschappen en kenmerken van het onderwerp zoals Attestation aan door een of meerdere certificaatverleners.</xref:System.Security.Claims.ClaimsIdentity>      -De <xref:System.Security.Claims.Claim.Issuer%2A>eigenschap bevat de naam van de entiteit die de claim uitgegeven.</xref:System.Security.Claims.Claim.Issuer%2A> De verlener van een claim wordt voorgesteld in WIF door een tekenreeks met een naam die afkomstig zijn uit een lijst met bekende uitgevers van certificaten die wordt onderhouden door het register van de naam van verlener. Het register van de naam van certificaatverlener is een exemplaar van een klasse die is afgeleid van de <xref:System.IdentityModel.Tokens.IssuerNameRegistry>klasse.</xref:System.IdentityModel.Tokens.IssuerNameRegistry> Het register van de naam van verlener koppelt een naam op voor het cryptografische materiaal die nodig zijn om te controleren of de handtekeningen van tokens die wordt geproduceerd door de uitgever van de bijbehorende symbool. Bijvoorbeeld, de <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>klasse, beschikbaar is buiten het vak met .NET 4.5 en het symbool naam op voor elke verlener koppelt aan de bijbehorende X.509-certificaat.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> De lijst met bekende verleners wordt gewoonlijk samengesteld tijdens het opstarten door het register van de naam van verlener. De lijst die wordt gebruikt door de <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>is opgegeven in het toepassingsconfiguratiebestand.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>      -De <xref:System.Security.Claims.Claim.OriginalIssuer%2A>eigenschap bevat de naam van de entiteit die de claim oorspronkelijk heeft uitgegeven.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> Deze eigenschap is ontworpen ter bevordering van de scenario&quot;s waarin een claim meerdere certificaatverleners doorgeven kan voordat deze wordt weergegeven door de client naar de toepassing RP; zoals scenario&quot;s met Federatie. Bekijk de <xref:System.Security.Claims.Claim.OriginalIssuer%2A>eigenschap om te bepalen van de entiteit die de claim oorspronkelijk heeft uitgegeven.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> De naam opgehaald uit de lijst met bekende verleners onderhouden door het register van de verlener naam in het geval van de <xref:System.Security.Claims.Claim.Issuer%2A>eigenschap.</xref:System.Security.Claims.Claim.Issuer%2A>"
  example:
  - "The following example extracts the claims associated to the authenticated user performing an HTTP request and writes them in the HTTP response. The current user is read from the <xref:System.Web.HttpContext> as a <xref:System.Security.Claims.ClaimsPrincipal> and the claims are read from it. The claims are then written to HTTP the response.  \n  \n```c#  \nClaimsPrincipal principal = HttpContext.Current.User as ClaimsPrincipal;  \nif (null != principal)  \n{  \n   foreach (Claim claim in principal.Claims)  \n   {  \n      Response.Write(\"CLAIM TYPE: \" + claim.Type + \"; CLAIM VALUE: \" + claim.Value + \"</br>\");  \n   }  \n  \n}  \n  \n```"
  syntax:
    content: public class Claim
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(BinaryReader)
  nameWithType: Claim.Claim(BinaryReader)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public Claim (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "Moet worden toegevoegd."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)
  id: '#ctor(System.Security.Claims.Claim)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(Claim)
  nameWithType: Claim.Claim(Claim)
  fullName: System.Security.Claims.Claim.Claim(Claim)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> klasse."
  syntax:
    content: protected Claim (System.Security.Claims.Claim other);
    parameters:
    - id: other
      type: System.Security.Claims.Claim
      description: "De claim beveiliging."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(BinaryReader,ClaimsIdentity)
  nameWithType: Claim.Claim(BinaryReader,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader,ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> klasse met de opgegeven lezer en onderwerp."
  syntax:
    content: public Claim (System.IO.BinaryReader reader, System.Security.Claims.ClaimsIdentity subject);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "De binaire lezer."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "Het onderwerp dat deze claim beschrijft."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(Claim,ClaimsIdentity)
  nameWithType: Claim.Claim(Claim,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(Claim,ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> klasse met de opgegeven security claim en onderwerp."
  syntax:
    content: protected Claim (System.Security.Claims.Claim other, System.Security.Claims.ClaimsIdentity subject);
    parameters:
    - id: other
      type: System.Security.Claims.Claim
      description: "De claim beveiliging."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "Het onderwerp dat deze claim beschrijft."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String)
  nameWithType: Claim.Claim(String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> klasse met de opgegeven claimtype en -waarde."
  remarks: "De <xref:System.Security.Claims.Claim.Subject%2A>eigenschap is ingesteld op `null`.</xref:System.Security.Claims.Claim.Subject%2A> De <xref:System.Security.Claims.Claim.Issuer%2A>en <xref:System.Security.Claims.Claim.OriginalIssuer%2A>Eigenschappen zijn ingesteld op <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> </xref:System.Security.Claims.Claim.OriginalIssuer%2A> </xref:System.Security.Claims.Claim.Issuer%2A> De <xref:System.Security.Claims.Claim.ValueType%2A>eigenschap is ingesteld op <xref:System.Security.Claims.ClaimValueTypes.String?displayProperty=fullName></xref:System.Security.Claims.ClaimValueTypes.String?displayProperty=fullName> </xref:System.Security.Claims.Claim.ValueType%2A>"
  syntax:
    content: public Claim (string type, string value);
    parameters:
    - id: type
      type: System.String
      description: "Het claimtype."
    - id: value
      type: System.String
      description: "De waarde van de claim."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String)
  nameWithType: Claim.Claim(String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> klasse met de opgegeven claimtype, waarde en waardetype."
  remarks: "De <xref:System.Security.Claims.Claim.Subject%2A>eigenschap is ingesteld op `null`.</xref:System.Security.Claims.Claim.Subject%2A> De <xref:System.Security.Claims.Claim.Issuer%2A>en <xref:System.Security.Claims.Claim.OriginalIssuer%2A>Eigenschappen zijn ingesteld op <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> </xref:System.Security.Claims.Claim.OriginalIssuer%2A> </xref:System.Security.Claims.Claim.Issuer%2A>"
  syntax:
    content: public Claim (string type, string value, string valueType);
    parameters:
    - id: type
      type: System.String
      description: "Het claimtype."
    - id: value
      type: System.String
      description: "De waarde van de claim."
    - id: valueType
      type: System.String
      description: "Het claimtype waarde. Als deze parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, klikt u vervolgens <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> wordt gebruikt."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> klasse met de opgegeven claimtype, waarde, waardetype en uitgever."
  remarks: "De <xref:System.Security.Claims.Claim.Subject%2A>eigenschap is ingesteld op `null`.</xref:System.Security.Claims.Claim.Subject%2A> De <xref:System.Security.Claims.Claim.OriginalIssuer%2A>eigenschap is ingesteld in overeenstemming met de waarde van de `issuer` parameter.</xref:System.Security.Claims.Claim.OriginalIssuer%2A>"
  syntax:
    content: public Claim (string type, string value, string valueType, string issuer);
    parameters:
    - id: type
      type: System.String
      description: "Het claimtype."
    - id: value
      type: System.String
      description: "De waarde van de claim."
    - id: valueType
      type: System.String
      description: "Het claimtype waarde. Als deze parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, klikt u vervolgens <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> wordt gebruikt."
    - id: issuer
      type: System.String
      description: "De Claimverlener. Als deze parameter leeg is of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, klikt u vervolgens <xref href=&quot;System.Security.Claims.ClaimsIdentity.DefaultIssuer&quot;> </xref> wordt gebruikt."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> klasse met de opgegeven claimtype, waarde waardetype, uitgever en oorspronkelijke verlener."
  remarks: "De <xref:System.Security.Claims.Claim.Subject%2A>eigenschap is ingesteld op `null`.</xref:System.Security.Claims.Claim.Subject%2A>"
  syntax:
    content: public Claim (string type, string value, string valueType, string issuer, string originalIssuer);
    parameters:
    - id: type
      type: System.String
      description: "Het claimtype."
    - id: value
      type: System.String
      description: "De waarde van de claim."
    - id: valueType
      type: System.String
      description: "Het claimtype waarde. Als deze parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, klikt u vervolgens <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> wordt gebruikt."
    - id: issuer
      type: System.String
      description: "De Claimverlener. Als deze parameter leeg is of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, klikt u vervolgens <xref href=&quot;System.Security.Claims.ClaimsIdentity.DefaultIssuer&quot;> </xref> wordt gebruikt."
    - id: originalIssuer
      type: System.String
      description: "De oorspronkelijke verlener van de claim. Als deze parameter leeg is of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de <> </> *> eigenschap is ingesteld op de waarde van de <> </> *> eigenschap."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String,String,String,ClaimsIdentity)
  nameWithType: Claim.Claim(String,String,String,String,String,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String,ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> klasse met de opgegeven claimtype, waarde, waardetype, uitgever, oorspronkelijke verlener en onderwerp."
  syntax:
    content: public Claim (string type, string value, string valueType, string issuer, string originalIssuer, System.Security.Claims.ClaimsIdentity subject);
    parameters:
    - id: type
      type: System.String
      description: "Het claimtype."
    - id: value
      type: System.String
      description: "De waarde van de claim."
    - id: valueType
      type: System.String
      description: "Het claimtype waarde. Als deze parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, klikt u vervolgens <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> wordt gebruikt."
    - id: issuer
      type: System.String
      description: "De Claimverlener. Als deze parameter leeg is of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, klikt u vervolgens <xref href=&quot;System.Security.Claims.ClaimsIdentity.DefaultIssuer&quot;> </xref> wordt gebruikt."
    - id: originalIssuer
      type: System.String
      description: "De oorspronkelijke verlener van de claim. Als deze parameter leeg is of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de <> </> *> eigenschap is ingesteld op de waarde van de <> </> *> eigenschap."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "Het onderwerp dat deze claim beschrijft."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.Clone
  id: Clone
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Clone()
  nameWithType: Claim.Clone()
  fullName: System.Security.Claims.Claim.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Retourneert een nieuwe <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> object gekopieerd van dit object. De nieuwe claim beschikt niet over een onderwerp."
  remarks: "Dit is een recente kopieerbewerking. De <xref:System.Security.Claims.Claim.Subject%2A>eigenschap van de nieuwe <xref:System.Security.Claims.Claim>object is ingesteld op `null`.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.Claim.Subject%2A>"
  syntax:
    content: public virtual System.Security.Claims.Claim Clone ();
    parameters: []
    return:
      type: System.Security.Claims.Claim
      description: "Het nieuwe claim-object."
  overload: System.Security.Claims.Claim.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)
  id: Clone(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Clone(ClaimsIdentity)
  nameWithType: Claim.Clone(ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Clone(ClaimsIdentity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Retourneert een nieuwe <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> object gekopieerd van dit object. De houder van de nieuwe claim is ingesteld op de opgegeven claims-identiteit."
  remarks: "Dit is een recente kopieerbewerking. De <xref:System.Security.Claims.Claim.Subject%2A>eigenschap van de nieuwe <xref:System.Security.Claims.Claim>object is ingesteld op de waarde van de `identity` parameter.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.Claim.Subject%2A>"
  syntax:
    content: public virtual System.Security.Claims.Claim Clone (System.Security.Claims.ClaimsIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Claims.ClaimsIdentity
      description: "Het beoogde onderwerp van de nieuwe claim."
    return:
      type: System.Security.Claims.Claim
      description: "Het nieuwe claim-object."
  overload: System.Security.Claims.Claim.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: CustomSerializationData
  nameWithType: Claim.CustomSerializationData
  fullName: System.Security.Claims.Claim.CustomSerializationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    return:
      type: System.Byte[]
      description: "Retourneert <xref:System.Byte>.</xref:System.Byte>"
  overload: System.Security.Claims.Claim.CustomSerializationData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Issuer
  id: Issuer
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Issuer
  nameWithType: Claim.Issuer
  fullName: System.Security.Claims.Claim.Issuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee haalt u de uitgever van de claim."
  remarks: "De waarde van de eigenschap Issuer is een naam die moet worden uitgevoerd in een lijst met bekende uitgevers van certificaten die door het register van de naam van verlener onderhouden. Het register van de naam van certificaatverlener is een exemplaar van een klasse die is afgeleid van de <xref:System.IdentityModel.Tokens.IssuerNameRegistry>klasse.</xref:System.IdentityModel.Tokens.IssuerNameRegistry> Het register van de naam van certificaatverlener gekoppeld aan een symbool naam (de naam van de certificaatverlener) het cryptografische materiaal dat nodig is om te controleren of de handtekeningen van tokens die wordt geproduceerd door de verlener; bijvoorbeeld: een X.509-certificaat."
  syntax:
    content: public string Issuer { get; }
    return:
      type: System.String
      description: "Een naam die naar de verlener van de claim verwijst."
  overload: System.Security.Claims.Claim.Issuer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.OriginalIssuer
  id: OriginalIssuer
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: OriginalIssuer
  nameWithType: Claim.OriginalIssuer
  fullName: System.Security.Claims.Claim.OriginalIssuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee haalt u de oorspronkelijke verlener van de claim."
  remarks: "Bevat de naam van de entiteit die de claim oorspronkelijk heeft uitgegeven. Deze eigenschap is ontworpen ter bevordering van de scenario&quot;s waarin een claim meerdere certificaatverleners doorgeven kan voordat deze wordt weergegeven door de client naar de toepassing RP; zoals scenario&quot;s met Federatie.       De waarde van de eigenschap OriginalIssuer is een naam die wordt overgenomen uit een lijst met bekende uitgevers van certificaten die door het register van de naam van verlener onderhouden. Het register van de naam van certificaatverlener is een exemplaar van een klasse die is afgeleid van de <xref:System.IdentityModel.Tokens.IssuerNameRegistry>klasse.</xref:System.IdentityModel.Tokens.IssuerNameRegistry> Het register van de naam van certificaatverlener gekoppeld aan een symbool naam (de naam van de certificaatverlener) het cryptografische materiaal dat nodig is om te controleren of de handtekeningen van tokens die wordt geproduceerd door de verlener; bijvoorbeeld: een X.509-certificaat.       Met uitzondering van de overdracht en Federatie scenario&quot;s, de <xref:System.Security.Claims.Claim.Issuer%2A>eigenschap en de eigenschap OriginalIssuer meestal dezelfde waarde hebben.</xref:System.Security.Claims.Claim.Issuer%2A> Als de waarde van de eigenschap OriginalIssuer van de waarde van verschilt de <xref:System.Security.Claims.Claim.Issuer%2A>eigenschap, de claim eerst is uitgegeven door de oorspronkelijke verlener en vervolgens opnieuw is uitgegeven door de verlener.</xref:System.Security.Claims.Claim.Issuer%2A>"
  syntax:
    content: public string OriginalIssuer { get; }
    return:
      type: System.String
      description: "Een naam die naar de oorspronkelijke verlener van de claim verwijst."
  overload: System.Security.Claims.Claim.OriginalIssuer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Properties
  id: Properties
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Properties
  nameWithType: Claim.Properties
  fullName: System.Security.Claims.Claim.Properties
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee haalt u een woordenlijst die aanvullende eigenschappen die zijn gekoppeld aan deze claim bevat."
  remarks: "De eigenschap Properties biedt een dictionary van naam-waardeparen waarmee metagegevens of andere informatie over de claim moet worden gekoppeld aan deze. Voor claims gegenereerd op basis van SAML-tokens, mogen deze woordenlijst sleutels die door de constanten in de <xref:System.Security.Claims.ClaimProperties>klasse.</xref:System.Security.Claims.ClaimProperties>"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Een woordenlijst die aanvullende eigenschappen die zijn gekoppeld aan de claim bevat. De eigenschappen worden weergegeven als naam / waarde-paren."
  overload: System.Security.Claims.Claim.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Subject
  id: Subject
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Subject
  nameWithType: Claim.Subject
  fullName: System.Security.Claims.Claim.Subject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee haalt u het onderwerp van de claim."
  remarks: "Het onderwerp wordt de entiteit waarover de claim wordt gehandhaafd. Enkele typische voorbeelden zijn van een gebruiker, een toepassing of service, een apparaat of een computer. Het onderwerp wordt vertegenwoordigd door een <xref:System.Security.Claims.ClaimsIdentity>die een verzameling van claims die worden beschreven deze bevat</xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public System.Security.Claims.ClaimsIdentity Subject { get; }
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "Het onderwerp van de claim."
  overload: System.Security.Claims.Claim.Subject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.ToString
  id: ToString
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: ToString()
  nameWithType: Claim.ToString()
  fullName: System.Security.Claims.Claim.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Retourneert een tekenreeksrepresentatie van deze <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> object."
  remarks: 'De tekenreeks die wordt geretourneerd, bevat de waarden van de <xref:System.Security.Claims.Claim.Type%2A>en <xref:System.Security.Claims.Claim.Value%2A>Eigenschappen in de volgende indeling:. &quot; Type: waarde &quot;.</xref:System.Security.Claims.Claim.Value%2A> </xref:System.Security.Claims.Claim.Type%2A>'
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "De tekenreeksweergave van dit <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> object."
  overload: System.Security.Claims.Claim.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Type
  id: Type
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Type
  nameWithType: Claim.Type
  fullName: System.Security.Claims.Claim.Type
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee haalt u het claimtype van de claim."
  remarks: "De eigenschap Type biedt de semantische inhoud van de claim, dat wil zeggen, bepaalt wat de claim over is. Bijvoorbeeld een claim met een claimtype <xref:System.Security.Claims.ClaimTypes.GivenName>(&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname&quot;) vertegenwoordigt de voornaam van een gebruiker.</xref:System.Security.Claims.ClaimTypes.GivenName> Het claimtype is doorgaans een URI; u zijn echter niet beperkt tot een specifieke indeling dan moet weer als een tekenreeks. De alleen algemene vereiste is dat de Claimverlener en de consument claim moeten akkoord gaan over de betekenis van de claim. Constanten voor de bekende claimtypen die door Windows Identity Foundation (WIF) gebruikt, zijn beschikbaar via de <xref:System.Security.Claims.ClaimTypes>klasse.</xref:System.Security.Claims.ClaimTypes> De waarde van de claim wordt geleverd door de <xref:System.Security.Claims.Claim.Value%2A>eigenschap.</xref:System.Security.Claims.Claim.Value%2A>"
  syntax:
    content: public string Type { get; }
    return:
      type: System.String
      description: "Het claimtype."
  overload: System.Security.Claims.Claim.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Value
  id: Value
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Value
  nameWithType: Claim.Value
  fullName: System.Security.Claims.Claim.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee wordt de waarde van de claim."
  remarks: "De waarde van een claim wordt alleen als de tekenreeks vertegenwoordigd. Voor complexere waardetypen, wordt het aanbevolen dat u standaard XML-schematypen om aan te geven hoe de waarde is bedoeld om te worden geserialiseerd en gedeserialiseerd van en naar een tekenreeks.       De <xref:System.Security.Claims.Claim.ValueType%2A>eigenschap bevat de onderliggende syntactische type-informatie over de waarde.</xref:System.Security.Claims.Claim.ValueType%2A> De <xref:System.Security.Claims.Claim.Type%2A>eigenschap semantische informatie over de waarde bevat; dat wil zeggen, biedt de betekenis van de waarde en een claim consumer die aangeeft hoe deze interpreteren</xref:System.Security.Claims.Claim.Type%2A>"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "De waarde van de claim."
  overload: System.Security.Claims.Claim.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.ValueType
  id: ValueType
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: ValueType
  nameWithType: Claim.ValueType
  fullName: System.Security.Claims.Claim.ValueType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Hiermee wordt het waardetype van de claim."
  remarks: "De eigenschap ValueType bevat een tekenreeks die de type-informatie van de waarde wordt geïdentificeerd. Deze eigenschap kan worden gebruikt om te begrijpen van de indeling van de waarde en informatie over het serialiseren en deserialiseren van de waarde opgeven. Als uw oplossing complexe waardetypen vereist, wordt aangeraden standaardtypen voor XML-schema te gebruiken in de eigenschap ValueType om aan te geven hoe de <xref:System.Security.Claims.Claim.Value%2A>eigenschap is bedoeld om te worden geserialiseerd en gedeserialiseerd uit een tekenreeks.</xref:System.Security.Claims.Claim.Value%2A>"
  syntax:
    content: public string ValueType { get; }
    return:
      type: System.String
      description: "Het claimtype waarde."
  overload: System.Security.Claims.Claim.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: WriteTo(BinaryWriter)
  nameWithType: Claim.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public virtual void WriteTo (System.IO.BinaryWriter writer);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "Moet worden toegevoegd."
  overload: System.Security.Claims.Claim.WriteTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: Claim.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Schrijft dit <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> naar de writer."
  syntax:
    content: protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "De writer deze claim schrijven"
    - id: userData
      type: System.Byte[]
      description: "De gebruikersgegevens naar de claim"
  overload: System.Security.Claims.Claim.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(BinaryReader)
  nameWithType: Claim.Claim(BinaryReader)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(Claim)
  nameWithType: Claim.Claim(Claim)
  fullName: System.Security.Claims.Claim.Claim(Claim)
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(BinaryReader,ClaimsIdentity)
  nameWithType: Claim.Claim(BinaryReader,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader,ClaimsIdentity)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(Claim,ClaimsIdentity)
  nameWithType: Claim.Claim(Claim,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(Claim,ClaimsIdentity)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String)
  nameWithType: Claim.Claim(String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String)
  nameWithType: Claim.Claim(String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String,String,String,ClaimsIdentity)
  nameWithType: Claim.Claim(String,String,String,String,String,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String,ClaimsIdentity)
- uid: System.Security.Claims.Claim.Clone
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Clone()
  nameWithType: Claim.Clone()
  fullName: System.Security.Claims.Claim.Clone()
- uid: System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Clone(ClaimsIdentity)
  nameWithType: Claim.Clone(ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Clone(ClaimsIdentity)
- uid: System.Security.Claims.Claim.CustomSerializationData
  parent: System.Security.Claims.Claim
  isExternal: false
  name: CustomSerializationData
  nameWithType: Claim.CustomSerializationData
  fullName: System.Security.Claims.Claim.CustomSerializationData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Claims.Claim.Issuer
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Issuer
  nameWithType: Claim.Issuer
  fullName: System.Security.Claims.Claim.Issuer
- uid: System.Security.Claims.Claim.OriginalIssuer
  parent: System.Security.Claims.Claim
  isExternal: false
  name: OriginalIssuer
  nameWithType: Claim.OriginalIssuer
  fullName: System.Security.Claims.Claim.OriginalIssuer
- uid: System.Security.Claims.Claim.Properties
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Properties
  nameWithType: Claim.Properties
  fullName: System.Security.Claims.Claim.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.Claim.Subject
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Subject
  nameWithType: Claim.Subject
  fullName: System.Security.Claims.Claim.Subject
- uid: System.Security.Claims.Claim.ToString
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ToString()
  nameWithType: Claim.ToString()
  fullName: System.Security.Claims.Claim.ToString()
- uid: System.Security.Claims.Claim.Type
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Type
  nameWithType: Claim.Type
  fullName: System.Security.Claims.Claim.Type
- uid: System.Security.Claims.Claim.Value
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Value
  nameWithType: Claim.Value
  fullName: System.Security.Claims.Claim.Value
- uid: System.Security.Claims.Claim.ValueType
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ValueType
  nameWithType: Claim.ValueType
  fullName: System.Security.Claims.Claim.ValueType
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: WriteTo(BinaryWriter)
  nameWithType: Claim.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.Claim
  isExternal: false
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: Claim.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter,Byte[])
- uid: System.Security.Claims.Claim.#ctor*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim
  nameWithType: Claim.Claim
- uid: System.Security.Claims.Claim.Clone*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Clone
  nameWithType: Claim.Clone
- uid: System.Security.Claims.Claim.CustomSerializationData*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: CustomSerializationData
  nameWithType: Claim.CustomSerializationData
- uid: System.Security.Claims.Claim.Issuer*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Issuer
  nameWithType: Claim.Issuer
- uid: System.Security.Claims.Claim.OriginalIssuer*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: OriginalIssuer
  nameWithType: Claim.OriginalIssuer
- uid: System.Security.Claims.Claim.Properties*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Properties
  nameWithType: Claim.Properties
- uid: System.Security.Claims.Claim.Subject*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Subject
  nameWithType: Claim.Subject
- uid: System.Security.Claims.Claim.ToString*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ToString
  nameWithType: Claim.ToString
- uid: System.Security.Claims.Claim.Type*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Type
  nameWithType: Claim.Type
- uid: System.Security.Claims.Claim.Value*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Value
  nameWithType: Claim.Value
- uid: System.Security.Claims.Claim.ValueType*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ValueType
  nameWithType: Claim.ValueType
- uid: System.Security.Claims.Claim.WriteTo*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: WriteTo
  nameWithType: Claim.WriteTo
