### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationError
  id: ValidationError
  children:
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  - System.Windows.Controls.ValidationError.BindingInError
  - System.Windows.Controls.ValidationError.ErrorContent
  - System.Windows.Controls.ValidationError.Exception
  - System.Windows.Controls.ValidationError.RuleInError
  langs:
  - csharp
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
  type: Class
  summary: "Vertegenwoordigt een validatiefout die wordt gemaakt via de binding van de motor wanneer een <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> een validatiefout rapporten of via de <xref:System.Windows.Controls.Validation.MarkInvalid*>methode expliciet.</xref:System.Windows.Controls.Validation.MarkInvalid*>"
  remarks: "De [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] binding gegevensmodel, kunt u koppelen validatieregels met uw <xref:System.Windows.Data.Binding>object.</xref:System.Windows.Data.Binding> Validatie wordt uitgevoerd tijdens de overdracht van de target naar source-waarde voordat de converter wordt aangeroepen. De volgende beschrijving van het validatieproces.      1.  Wanneer een waarde op voor de broneigenschap van de eigenschap target wordt overgedragen, verwijdert de binding-engine eerst alle ValidationError die mogelijk zijn toegevoegd aan de <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>eigenschap van het gebonden element gekoppeld.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Vervolgens wordt gecontroleerd of alle aangepaste validatieregels zijn gedefinieerd voor dat <xref:System.Windows.Data.Binding>in welk geval roept de <xref:System.Windows.Controls.ValidationRule.Validate%2A>methode op elke <xref:System.Windows.Controls.ValidationRule>totdat een van beide mislukt of totdat deze geslaagd.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Data.Binding>      2.  Zodra er een aangepaste regel waarmee niet slaagt, de binding-engine wordt een object ValidationError gemaakt en deze toevoegt aan de <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>verzameling van het gebonden element.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Wanneer <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>is niet leeg is, wordt de <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>gekoppelde eigenschap van het element is ingesteld op `true`.</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Ook als de <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>eigenschap van de <xref:System.Windows.Data.Binding>is ingesteld op `true`, en vervolgens het bindingprogramma genereert de <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>gebeurtenis voor het element gekoppeld.</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>      3.  Als u alle regels is voldaan, roept het bindingprogramma vervolgens de converter als er een bestaat.      4.  Als de converter is verstreken, ontvangt de binding-engine de setter-methode van de eigenschap source.      5.  Als de binding heeft een <xref:System.Windows.Controls.ExceptionValidationRule>gekoppeld en er is een uitzondering opgetreden tijdens stap 3 of 4, de binding-engine wordt gecontroleerd of er een <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is</xref:System.Windows.Controls.ExceptionValidationRule> U kunt de <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>retouraanroep zijn om aan te bieden een aangepaste handler voor het verwerken van uitzonderingen.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> Als een <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>niet is opgegeven in de <xref:System.Windows.Data.Binding>, het bindingprogramma een ValidationError maakt met de uitzondering en deze toevoegt aan de <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>verzameling van het gebonden element.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>       De overdracht van een geldige waarde in beide richtingen (doel voor de bron- of bron naar doel) wordt gewist de <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>die eigenschap zijn gekoppeld.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of ValidationError objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public class ValidationError
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> klasse met de opgegeven parameters."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "De regel die validatiefout gedetecteerd."
    - id: bindingInError
      type: System.Object
      description: "De <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> of <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> object met de validatiefout."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> klasse met de opgegeven parameters."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "De regel die validatiefout gedetecteerd."
    - id: bindingInError
      type: System.Object
      description: "De <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> of <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> object met de validatiefout."
    - id: errorContent
      type: System.Object
      description: "Informatie over de fout."
    - id: exception
      type: System.Exception
      description: "De uitzondering dat de validatiefout heeft veroorzaakt. Deze parameter is optioneel en kan worden ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.BindingInError
  id: BindingInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>. Het object is gemarkeerd als ongeldig expliciet of heeft een regel voor de validatie is mislukt."
  syntax:
    content: public object BindingInError { get; }
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>."
  overload: System.Windows.Controls.ValidationError.BindingInError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.ErrorContent
  id: ErrorContent
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Opgehaald of ingesteld van een object dat aanvullende context voor deze biedt <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, zoals een tekenreeks met een beschrijving van de fout."
  remarks: "<a name=&quot;xamlTextUsage_ErrorContent&quot;></a>## XAML tekst gebruik Zie het voorbeeld sectie voor een voorbeeld."
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of <xref:System.Windows.Controls.ValidationError> objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public object ErrorContent { get; set; }
    return:
      type: System.Object
      description: "Een object dat aanvullende context voor deze biedt <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>."
  overload: System.Windows.Controls.ValidationError.ErrorContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.Exception
  id: Exception
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Opgehaald of ingesteld de <xref:System.Exception>-object dat de oorzaak van dit is <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, als de fout het resultaat van een uitzondering is.</xref:System.Exception>"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "De <xref:System.Exception>object, als de fout het resultaat van een uitzondering is.</xref:System.Exception>"
  overload: System.Windows.Controls.ValidationError.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.RuleInError
  id: RuleInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> -object dat de oorzaak van dit is <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, als de fout het resultaat van een validatieregel is."
  syntax:
    content: public System.Windows.Controls.ValidationRule RuleInError { get; set; }
    return:
      type: System.Windows.Controls.ValidationRule
      description: "De <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> object, als de fout het resultaat van een validatieregel is."
  overload: System.Windows.Controls.ValidationError.RuleInError*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
- uid: System.Windows.Controls.ValidationRule
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Controls.ValidationError.BindingInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
- uid: System.Windows.Controls.ValidationError.#ctor*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError.ValidationError
- uid: System.Windows.Controls.ValidationError.BindingInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
