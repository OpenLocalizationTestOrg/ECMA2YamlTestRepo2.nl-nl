### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  id: EncryptedSecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: EncryptedSecurityTokenHandler
  nameWithType: EncryptedSecurityTokenHandler
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  type: Class
  summary: "Een token-handler voor versleutelde beveiligingstokens. Verwerkt tokens van het type <xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;> </xref>."
  remarks: "Een token handler die serialiseert en deserializes <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>objecten uit `<xenc:EncryptedData>` elementen en <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause>objecten uit `<xenc:EncryptedKey>` elementen zoals gedefinieerd in de verwerking van XML-codering syntaxis en -specificatie (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210).</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> </xref:System.IdentityModel.Tokens.EncryptedSecurityToken>"
  syntax:
    content: 'public class EncryptedSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: EncryptedSecurityTokenHandler()
  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityTokenHandler&quot;> </xref> klasse."
  syntax:
    content: public EncryptedSecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retourneert een waarde die aangeeft of het huidige XML-element naar verwijst een <xref uid=&quot;langword_csharp_&lt;xenc:EncryptedKey&gt;&quot; name=&quot;&lt;xenc:EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> element dat kan worden gedeserialiseerd naar een <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> door dit exemplaar."
  syntax:
    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een XML-lezer is geplaatst op het startelement. De lezer moet niet worden verplaatst."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de XML-lezer is geplaatst op een <xref uid=&quot;langword_csharp_&lt;xenc:EncryptedKey&gt;&quot; name=&quot;&lt;xenc:EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> element zoals gedefinieerd in de sectie 3.5.1 van de verwerking van XML-codering syntaxis en -specificatie (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retourneert een waarde die aangeeft of de lezer is verwijst naar een <xref uid=&quot;langword_csharp_&lt;xenc:EncryptedData&gt;&quot; name=&quot;&lt;xenc:EncryptedData&gt;&quot; href=&quot;&quot;> </xref> element."
  remarks: "De lezer niet verplaatst wanneer deze weer `false`."
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "De lezer is geplaatst op een beveiligingstoken (<xref uid=&quot;langword_csharp_&lt;xenc:EncryptedData&gt;&quot; name=&quot;&lt;xenc:EncryptedData&gt;&quot; href=&quot;&quot;> </xref> element.)"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de lezer is geplaatst op een <xref uid=&quot;langword_csharp_&lt;xenc:EncryptedData&gt;&quot; name=&quot;&lt;xenc:EncryptedData&gt;&quot; href=&quot;&quot;> </xref> element; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Haalt een waarde die aangeeft of de handler functionaliteit voor tokens serialisatie biedt."
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u de handler kan tokens; serialiseren anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee wordt het type identificatie URI&quot;s voor tokens die zijn verwerkt door het huidige exemplaar."
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "Retourneert een matrix met één standaard <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> string, omdat er geen specifieke type token id die is gekoppeld is aan de <xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;> </xref> type."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
  id: KeyInfoSerializer
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: KeyInfoSerializer
  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> die wordt gebruikt voor het serialiseren en deserialiseren van sleutel-id&quot;s van de <xref uid=&quot;langword_csharp_&lt;xenc:EncryptedData&gt;&quot; name=&quot;&lt;xenc:EncryptedData&gt;&quot; href=&quot;&quot;> </xref> element."
  syntax:
    content: public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "De tokenserialisatiefunctie die wordt gebruikt voor het lezen en schrijven sleutel van de sleutel-id&quot;s."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een poging de eigenschap instellen op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> optreedt."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Leest een <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> van een XML-stream."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een XML-lezer is geplaatst op een <xref uid=&quot;langword_csharp_&lt;xenc:EncryptedKey&gt;&quot; name=&quot;&lt;xenc:EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> element als gedefinieerd in &quot;http://www.w3.org/TR/2002/REC-xmlenc-core-20021210&quot;, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Een ID-clausule van het type <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref>."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>reader</code>is niet gepositioneerd op een <xref uid=&quot;langword_csharp_&lt;xenc:EncryptedKey&gt;&quot; name=&quot;&lt;xenc:EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> element."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Een versleuteld beveiligingstoken leest."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "De lezer van waaruit het token niet lezen."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Een beveiligingstoken van het type <xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;> </xref>."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen resolver van geconfigureerde service-token. (Ofwel de &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt; eigenschap of de &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver%2A?displayProperty=fullName&gt; eigenschap van de configuratie waarnaar wordt verwezen beveiligingstoken-handler is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Een token resolver service is vereist voor het verkrijgen van sleutels voor ontsleuteling.       - of - de <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;> </xref>waarnaar wordt verwezen via de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*>eigenschap is niet gevonden een <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandler&quot;> </xref> die kunnen lezen van de ontsleutelde XML en retourneren een <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*>"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "Een <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> binnen het XML-bestand waarnaar niet wordt gevonden met de lezer.       -or-       The <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;></xref> is not a <xref href=&quot;System.IdentityModel.Tokens.SymmetricSecurityKey&quot;></xref>."
  - type: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException
    commentId: T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException
    description: "De <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> gevonden binnen de XML kan niet worden omgezet door de geconfigureerde service token conflictoplosser er moet een <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: EncryptedSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hiermee wordt het type van het token dat is verwerkt door het huidige exemplaar."
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "Het tokentype verwerkt door het huidige exemplaar. The default is <xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref><xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;></xref>."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Schrijft een versleuteld beveiligingstoken met behulp van de XML-schrijver."
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "De XML-schrijver waarnaar het gecodeerde token schrijven."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Het versleutelde beveiligingstoken moet een exemplaar van <xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;> </xref>."
  overload: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>token</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>kan niet worden toegewezen als <xref href=&quot;System.IdentityModel.Tokens.EncryptedSecurityToken&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A?displayProperty=fullName&gt; eigenschap is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Deze eigenschap is vereist voor het verkrijgen van sleutels voor versleuteling.       - of - de token handler-verzameling geretourneerd door de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*>eigenschap is niet gevonden een <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandler&quot;> </xref> die kunt schrijven de <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> geretourneerd door de &lt;xref:System.IdentityModel.Tokens.EncryptedSecurityToken.Token%2A?displayProperty=fullName&gt; eigenschap.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection*>"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "De &lt;xref:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey%2A?displayProperty=fullName&gt; eigenschap kan niet worden toegewezen als <xref href=&quot;System.IdentityModel.Tokens.SymmetricSecurityKey&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptedTokenDecryptionFailedException
  nameWithType: EncryptedTokenDecryptionFailedException
  fullName: System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: EncryptedSecurityTokenHandler()
  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler()
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: EncryptedSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: EncryptedSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: EncryptedSecurityTokenHandler
  nameWithType: EncryptedSecurityTokenHandler.EncryptedSecurityTokenHandler
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: EncryptedSecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: EncryptedSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: EncryptedSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: EncryptedSecurityTokenHandler.ReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: EncryptedSecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: EncryptedSecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.EncryptedSecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: EncryptedSecurityTokenHandler.WriteToken
