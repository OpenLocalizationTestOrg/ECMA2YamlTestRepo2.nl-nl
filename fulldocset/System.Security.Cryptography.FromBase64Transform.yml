### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.FromBase64Transform
  id: FromBase64Transform
  children:
  - System.Security.Cryptography.FromBase64Transform.#ctor
  - System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)
  - System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  - System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  - System.Security.Cryptography.FromBase64Transform.Clear
  - System.Security.Cryptography.FromBase64Transform.Dispose
  - System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)
  - System.Security.Cryptography.FromBase64Transform.Finalize
  - System.Security.Cryptography.FromBase64Transform.InputBlockSize
  - System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  - System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: FromBase64Transform
  nameWithType: FromBase64Transform
  fullName: System.Security.Cryptography.FromBase64Transform
  type: Class
  summary: "Converteert een <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> van base 64."
  remarks: "Willekeurige bits reeksen in een formulier dat geen menselijke Base 64 Content-Transfer-Encoding vertegenwoordigt kan worden gelezen."
  example:
  - "The following example decodes a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/t-system.security.crypto_20_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_20_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/t-system.security.crypto_20_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class FromBase64Transform : System.Security.Cryptography.ICryptoTransform
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: FromBase64Transform()
  nameWithType: FromBase64Transform.FromBase64Transform()
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> klasse."
  remarks: "In de standaardconfiguratie worden spaties genegeerd. Zie <xref:System.Security.Cryptography.FromBase64TransformMode>voor meer informatie.</xref:System.Security.Cryptography.FromBase64TransformMode>"
  syntax:
    content: public FromBase64Transform ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)
  id: '#ctor(System.Security.Cryptography.FromBase64TransformMode)'
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: FromBase64Transform(FromBase64TransformMode)
  nameWithType: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> klasse met de opgegeven transformatiemodus."
  remarks: ''
  example:
  - "The following example decodes a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/6e8f7a21-5a5f-4a36-9e3b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/6e8f7a21-5a5f-4a36-9e3b-_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/6e8f7a21-5a5f-4a36-9e3b-_1.cs)]"
  syntax:
    content: public FromBase64Transform (System.Security.Cryptography.FromBase64TransformMode whitespaces);
    parameters:
    - id: whitespaces
      type: System.Security.Cryptography.FromBase64TransformMode
      description: "Een van de <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> waarden."
  overload: System.Security.Cryptography.FromBase64Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: CanReuseTransform
  nameWithType: FromBase64Transform.CanReuseTransform
  fullName: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Haalt een waarde die aangeeft of de huidige transformatie opnieuw kan worden gebruikt."
  syntax:
    content: public virtual bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.FromBase64Transform.CanReuseTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: CanTransformMultipleBlocks
  nameWithType: FromBase64Transform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Haalt een waarde die aangeeft of meerdere blokken kunnen worden omgezet."
  remarks: "In de huidige implementatie slechts één blok worden getransformeerd tegelijk, zodat deze eigenschap altijd is `false`."
  syntax:
    content: public bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Clear
  id: Clear
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Clear()
  nameWithType: FromBase64Transform.Clear()
  fullName: System.Security.Cryptography.FromBase64Transform.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref>."
  remarks: "Deze methode is een aanroep van eenvoudige <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       Het aanroepen van `Dispose` kunt u de resources die worden gebruikt door de <xref:System.Security.Cryptography.FromBase64Transform>naar opnieuw worden toegewezen voor andere doeleinden.</xref:System.Security.Cryptography.FromBase64Transform> Voor meer informatie over `Dispose`, Zie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Dispose
  id: Dispose
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Dispose()
  nameWithType: FromBase64Transform.Dispose()
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Versies van alle resources die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> klasse."
  remarks: "Roep `Dispose` wanneer u klaar bent met de <xref:System.Security.Cryptography.FromBase64Transform>.</xref:System.Security.Cryptography.FromBase64Transform> De `Dispose` methode blijft de <xref:System.Security.Cryptography.FromBase64Transform>in een onbruikbare status.</xref:System.Security.Cryptography.FromBase64Transform> Na het aanroepen `Dispose`, moet u alle verwijzingen naar vrijgeven de <xref:System.Security.Cryptography.FromBase64Transform>zodat het geheugen door de garbage collector vrijmaken kunt die de <xref:System.Security.Cryptography.FromBase64Transform>is bepaald dat zich bevindt.</xref:System.Security.Cryptography.FromBase64Transform> </xref:System.Security.Cryptography.FromBase64Transform>       Zie voor meer informatie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Altijd aanroep `Dispose` voordat u uw laatste verwijzing naar de <xref:System.Security.Cryptography.FromBase64Transform>.</xref:System.Security.Cryptography.FromBase64Transform> vrijgeven Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de <xref:System.Security.Cryptography.FromBase64Transform>van het object `Finalize` methode.</xref:System.Security.Cryptography.FromBase64Transform>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FromBase64Transform.Dispose(Boolean)
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()` methode en de `Finalize` methode. `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de disposing parameter die is ingesteld op `true`. `Finalize`roept `Dispose` met de verwijdering is ingesteld op `false`.       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Security.Cryptography.FromBase64Transform>verwijzingen.</xref:System.Security.Cryptography.FromBase64Transform> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Security.Cryptography.FromBase64Transform.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Finalize
  id: Finalize
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Finalize()
  nameWithType: FromBase64Transform.Finalize()
  fullName: System.Security.Cryptography.FromBase64Transform.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref>."
  syntax:
    content: ~FromBase64Transform ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: InputBlockSize
  nameWithType: FromBase64Transform.InputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u de blokgrootte van de invoer."
  remarks: "De invoer blokgrootte voor deze transformatie is één byte."
  syntax:
    content: public int InputBlockSize { get; }
    return:
      type: System.Int32
      description: "De grootte van de invoergegevens gegevensblokken die zich in bytes."
  overload: System.Security.Cryptography.FromBase64Transform.InputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: OutputBlockSize
  nameWithType: FromBase64Transform.OutputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u de blokgrootte van de uitvoer."
  remarks: "De uitvoer blokgrootte voor deze transformatie is 3 bytes."
  syntax:
    content: public int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: "De grootte van de uitvoergegevens gegevensblokken die zich in bytes."
  overload: System.Security.Cryptography.FromBase64Transform.OutputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee converteert u de opgegeven regio van de invoer bytematrix van base 64 en het resultaat kopieert naar de opgegeven regio van de bytematrix uitvoer."
  remarks: ''
  example:
  - "The following example decrypts a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/89d8dcd5-d4bc-45bd-bddf-_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/89d8dcd5-d4bc-45bd-bddf-_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/89d8dcd5-d4bc-45bd-bddf-_1.cs)]"
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "De invoer voor het berekenen van base 64."
    - id: inputOffset
      type: System.Int32
      description: "De offset in de invoer bytematrix waaruit de gegevens in gebruik neemt."
    - id: inputCount
      type: System.Int32
      description: "Het aantal bytes in de invoer bytematrix moet worden gebruikt als gegevens."
    - id: outputBuffer
      type: System.Byte[]
      description: "De uitvoer waarmee het resultaat te schrijven."
    - id: outputOffset
      type: System.Int32
      description: "De offset in de uitvoer bytematrix waaruit u wilt beginnen met het schrijven van gegevens."
    return:
      type: System.Int32
      description: "Het aantal geschreven bytes."
  overload: System.Security.Cryptography.FromBase64Transform.TransformBlock*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De huidige <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> object is al verwijderd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputCount</code>maakt gebruik van een ongeldige waarde.       - of - <code>inputBuffer</code> heeft een ongeldige offset lengte."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>valt buiten het bereik. Deze parameter vereist een niet-negatief getal."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Zet de opgegeven regio van de opgegeven byte-matrix van base 64."
  remarks: ''
  example:
  - "The following example decrypts a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/77c58bc9-6ff0-4b4a-ba5b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/77c58bc9-6ff0-4b4a-ba5b-_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/77c58bc9-6ff0-4b4a-ba5b-_1.cs)]"
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "De invoer van base 64 converteren."
    - id: inputOffset
      type: System.Int32
      description: "De offset in de bytematrix waaruit de gegevens in gebruik neemt."
    - id: inputCount
      type: System.Int32
      description: "Het aantal bytes in de bytematrix moet worden gebruikt als gegevens."
    return:
      type: System.Byte[]
      description: "De berekende conversie."
  overload: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De huidige <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> object is al verwijderd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputBuffer</code>heeft een ongeldige offset lengte.       - of - <code>inputCount</code> heeft een ongeldige waarde."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>valt buiten het bereik. Deze parameter vereist een niet-negatief getal."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.FromBase64Transform.#ctor
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: FromBase64Transform()
  nameWithType: FromBase64Transform.FromBase64Transform()
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform()
- uid: System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: FromBase64Transform(FromBase64TransformMode)
  nameWithType: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
- uid: System.Security.Cryptography.FromBase64TransformMode
  parent: System.Security.Cryptography
  isExternal: false
  name: FromBase64TransformMode
  nameWithType: FromBase64TransformMode
  fullName: System.Security.Cryptography.FromBase64TransformMode
- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanReuseTransform
  nameWithType: FromBase64Transform.CanReuseTransform
  fullName: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: FromBase64Transform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.FromBase64Transform.Clear
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Clear()
  nameWithType: FromBase64Transform.Clear()
  fullName: System.Security.Cryptography.FromBase64Transform.Clear()
- uid: System.Security.Cryptography.FromBase64Transform.Dispose
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Dispose()
  nameWithType: FromBase64Transform.Dispose()
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose()
- uid: System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FromBase64Transform.Dispose(Boolean)
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose(Boolean)
- uid: System.Security.Cryptography.FromBase64Transform.Finalize
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Finalize()
  nameWithType: FromBase64Transform.Finalize()
  fullName: System.Security.Cryptography.FromBase64Transform.Finalize()
- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: InputBlockSize
  nameWithType: FromBase64Transform.InputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.InputBlockSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: OutputBlockSize
  nameWithType: FromBase64Transform.OutputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.FromBase64Transform.#ctor*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: FromBase64Transform
  nameWithType: FromBase64Transform.FromBase64Transform
- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanReuseTransform
  nameWithType: FromBase64Transform.CanReuseTransform
- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: FromBase64Transform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.FromBase64Transform.Clear*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Clear
  nameWithType: FromBase64Transform.Clear
- uid: System.Security.Cryptography.FromBase64Transform.Dispose*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Dispose
  nameWithType: FromBase64Transform.Dispose
- uid: System.Security.Cryptography.FromBase64Transform.Finalize*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Finalize
  nameWithType: FromBase64Transform.Finalize
- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: InputBlockSize
  nameWithType: FromBase64Transform.InputBlockSize
- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: OutputBlockSize
  nameWithType: FromBase64Transform.OutputBlockSize
- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformBlock
  nameWithType: FromBase64Transform.TransformBlock
- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformFinalBlock
  nameWithType: FromBase64Transform.TransformFinalBlock
