### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.PropertyDescriptor
  id: PropertyDescriptor
  children:
  - System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.ComponentType
  - System.ComponentModel.PropertyDescriptor.Converter
  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  - System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  - System.ComponentModel.PropertyDescriptor.GetHashCode
  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  - System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  - System.ComponentModel.PropertyDescriptor.IsLocalizable
  - System.ComponentModel.PropertyDescriptor.IsReadOnly
  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  - System.ComponentModel.PropertyDescriptor.PropertyType
  - System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.SerializationVisibility
  - System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)
  - System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  langs:
  - csharp
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
  type: Class
  summary: "Geeft een abstractie van een eigenschap van een klasse."
  remarks: "Een beschrijving van een eigenschap bestaat uit een naam, de kenmerken ervan, de onderdeelklasse die de eigenschap is gekoppeld en het type van de eigenschap.       PropertyDescriptor biedt de volgende eigenschappen en methoden:- <xref:System.ComponentModel.PropertyDescriptor.Converter%2A>bevat de <xref:System.ComponentModel.TypeConverter>voor deze eigenschap.</xref:System.ComponentModel.TypeConverter> </xref:System.ComponentModel.PropertyDescriptor.Converter%2A>      - <xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A>geeft aan of deze eigenschap moet worden gelokaliseerd.</xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A>      - <xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A>retourneert een editor van het opgegeven type.</xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A>       Ook biedt het volgende PropertyDescriptor `abstract` eigenschappen en methoden:- <xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A>bevat het type van deze eigenschap is gebonden aan onderdeel.</xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A>      - <xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A>geeft aan of deze eigenschap alleen-lezen is.</xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A>      - <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>opgehaald van het type van de eigenschap.</xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>      - <xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A>geeft aan of de waarde van het onderdeel opnieuw instellen van het onderdeel wordt gewijzigd.</xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A>      - <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>retourneert de huidige waarde van de eigenschap voor een onderdeel.</xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>      - <xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A>Hiermee stelt u de waarde voor deze eigenschap van het onderdeel.</xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A>      - <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>stelt u de waarde van het onderdeel op een andere waarde.</xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>      - <xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A>geeft aan of de waarde van deze eigenschap moet worden vastgehouden.</xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A>       Normaal gesproken de `abstract` leden worden ge√Ømplementeerd via reflectie. Zie de onderwerpen in voor meer informatie over reflectie [reflectie](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class. It prints the information (category, description, display name) of the text of a button in a text box. It assumes that `button1` and `textbox1` have been instantiated on a form.  \n  \n [!code-cpp[PropertyDescriptor#1](~/add/codesnippet/cpp/t-system.componentmodel._4_1.cpp)]\n [!code-vb[PropertyDescriptor#1](~/add/codesnippet/visualbasic/t-system.componentmodel._4_1.vb)]\n [!code-cs[PropertyDescriptor#1](~/add/codesnippet/csharp/t-system.componentmodel._4_1.cs)]  \n  \n The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property. The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.  \n  \n [!code-cs[System.ComponentModel.PropertyDescriptor#1](~/add/codesnippet/csharp/System.ComponentModel.PropertyDescriptor/SerializeReadOnlyPropertyDescriptor.cs#1)]\n [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/add/codesnippet/visualbasic/ReadOnlyPropertyDescriptor/SerializeReadOnlyPropertyDescriptor.vb#1)]  \n  \n The following code examples show how to use the The `SerializeReadOnlyPropertyDescriptor` in a custom designer.  \n  \n [!code-cs[System.ComponentModel.PropertyDescriptor#10](~/add/codesnippet/csharp/System.ComponentModel.PropertyDescriptor/DemoControlDesigner.cs#10)]\n [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/add/codesnippet/visualbasic/ReadOnlyPropertyDescriptor/DemoControlDesigner.vb#10)]  \n[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/add/codesnippet/visualbasic/ReadOnlyPropertyDescriptor/DemoControl.vb#100)]\n[!code-cs[System.ComponentModel.PropertyDescriptor#100](~/add/codesnippet/csharp/System.ComponentModel.PropertyDescriptor/DemoControl.cs#100)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: PropertyDescriptor(MemberDescriptor)
  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> klasse met de naam en kenmerken in de opgegeven <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>."
  syntax:
    content: protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "Een <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> die de naam van de eigenschap en de bijbehorende kenmerken bevat."
  overload: System.ComponentModel.PropertyDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: PropertyDescriptor(MemberDescriptor,Attribute[])
  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(MemberDescriptor,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> klasse met de naam in de opgegeven <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> en de kenmerken in zowel de <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> en de <xref:System.Attribute>matrix.</xref:System.Attribute>"
  remarks: "Deze constructor worden de kenmerken in de <xref:System.Attribute>matrix, zodat de kenmerken in de <xref:System.ComponentModel.MemberDescriptor>.</xref:System.ComponentModel.MemberDescriptor> </xref:System.Attribute> toegevoegd"
  syntax:
    content: protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "Een <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> met de naam van het lid en de bijbehorende kenmerken."
    - id: attrs
      type: System.Attribute[]
      description: "Een <xref:System.Attribute>matrix met de kenmerken die u wilt koppelen aan de eigenschap.</xref:System.Attribute>"
  overload: System.ComponentModel.PropertyDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: PropertyDescriptor(String,Attribute[])
  nameWithType: PropertyDescriptor.PropertyDescriptor(String,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(String,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> klasse met de opgegeven naam en -kenmerken."
  syntax:
    content: protected PropertyDescriptor (string name, Attribute[] attrs);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de eigenschap."
    - id: attrs
      type: System.Attribute[]
      description: "Een matrix van het type <xref:System.Attribute>die met de kenmerken van de eigenschap.</xref:System.Attribute>"
  overload: System.ComponentModel.PropertyDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  id: AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: AddValueChanged(Object,EventHandler)
  nameWithType: PropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.AddValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Kunnen andere objecten wilt worden gewaarschuwd als deze eigenschap wordt gewijzigd."
  syntax:
    content: public virtual void AddValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel de handler voor toevoegen."
    - id: handler
      type: System.EventHandler
      description: "De gemachtigde om toe te voegen als een listener."
  overload: System.ComponentModel.PropertyDescriptor.AddValueChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  id: CanResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: CanResetValue(Object)
  nameWithType: PropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.CanResetValue(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert of de waarde opnieuw instellen van een object wordt gewijzigd."
  remarks: "Deze methode wordt normaal gesproken ge√Ømplementeerd via reflectie."
  syntax:
    content: public abstract bool CanResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel voor het testen voor opnieuw instellen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het opnieuw instellen van het onderdeel verandert de waarde ervan; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.CanResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: PropertyDescriptor.ComponentType
  fullName: System.ComponentModel.PropertyDescriptor.ComponentType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer in een afgeleide klasse genegeerd, krijgt het type van het onderdeel dat deze eigenschap is gebonden aan."
  remarks: "Deze eigenschap wordt normaal gesproken ge√Ømplementeerd via reflectie."
  syntax:
    content: public abstract Type ComponentType { get; }
    return:
      type: System.Type
      description: "Een <xref:System.Type>dat het type van deze eigenschap is gebonden aan onderdeel vertegenwoordigt.</xref:System.Type> Wanneer de <> </> *> of <> </> *> methoden worden aangeroepen, het opgegeven object is mogelijk een exemplaar van dit type."
  overload: System.ComponentModel.PropertyDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.Converter
  id: Converter
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: Converter
  nameWithType: PropertyDescriptor.Converter
  fullName: System.ComponentModel.PropertyDescriptor.Converter
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt de type-conversieprogramma voor deze eigenschap."
  syntax:
    content: public virtual System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "Een <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> die wordt gebruikt om te converteren de <xref:System.Type>van deze eigenschap.</xref:System.Type>"
  overload: System.ComponentModel.PropertyDescriptor.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: CreateInstance(Type)
  nameWithType: PropertyDescriptor.CreateInstance(Type)
  fullName: System.ComponentModel.PropertyDescriptor.CreateInstance(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Maakt een exemplaar van het opgegeven type."
  remarks: "CreateInstance gezocht naar een constructor die het opgegeven type. Als het een constructor wordt gevonden, wordt het type van de eigenschap doorgegeven in.       Conversieprogramma&quot;s en editors kunt u deze methode gebruiken om versies van een onderdeel te maken. Deze methode kunt √©√©n onderdeel opnieuw worden gebruikt voor meer dan √©√©n type."
  syntax:
    content: protected object CreateInstance (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Een <xref:System.Type>die staat voor het type te maken.</xref:System.Type>"
    return:
      type: System.Object
      description: "Een nieuw exemplaar van het type."
  overload: System.ComponentModel.PropertyDescriptor.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.PropertyDescriptor.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dit is vergelijkbaar met een ander object om te zien als ze gelijkwaardig zijn."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object te vergelijken met dit <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarden equivalent zijn; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  id: FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: FillAttributes(IList)
  nameWithType: PropertyDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.PropertyDescriptor.FillAttributes(IList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Voegt de kenmerken van de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> aan de opgegeven lijst met kenmerken in de bovenliggende klasse."
  remarks: "Voor dubbele kenmerken worden het laatst werd toegevoegd aan de lijst behouden."
  syntax:
    content: protected override void FillAttributes (System.Collections.IList attributeList);
    parameters:
    - id: attributeList
      type: System.Collections.IList
      description: "Een <xref:System.Collections.IList>die hier worden de kenmerken in de bovenliggende klasse.</xref:System.Collections.IList> Dit is in eerste instantie is leeg."
  overload: System.ComponentModel.PropertyDescriptor.FillAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties
  id: GetChildProperties
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties()
  nameWithType: PropertyDescriptor.GetChildProperties()
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert de standaard <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>."
  remarks: "Deze methode wordt doorgegeven `null` voor zowel de `instance` parameter en de `filter` parameter.       De eigenschappen voor de `instance` parameter kan afwijken van de eigenschappen van een klasse, omdat de container kunt toevoegen of verwijderen van eigenschappen als de `instance` parameter is geplaatst.       De `filter` parameter kunt combineren <xref:System.Type>en <xref:System.Attribute>objecten.</xref:System.Attribute> </xref:System.Type> Filter wordt gedefinieerd door de volgende regels: - A <xref:System.Type>object wordt beschouwd als een jokerteken; deze overeenkomt met een eigenschap met de <xref:System.Type>in de set kenmerken.</xref:System.Type> </xref:System.Type>      -Als een eigenschap geen heeft een <xref:System.Attribute>van dezelfde klasse, wordt de eigenschap niet opgenomen in de geretourneerde matrix.</xref:System.Attribute>      -Als het kenmerk een exemplaar van is <xref:System.Attribute>, de eigenschap moet een exacte overeenkomst moet worden opgenomen in de geretourneerde matrix.</xref:System.Attribute>      -Als u een <xref:System.Attribute>en de standaardeigenschap is, wordt deze opgenomen in de geretourneerde matrix, zelfs als er is geen exemplaar van <xref:System.Attribute>in de eigenschap.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een verzameling eigenschapsdescriptor."
  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  id: GetChildProperties(System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Attribute[])
  nameWithType: PropertyDescriptor.GetChildProperties(Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert een <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> met behulp van een opgegeven matrix van kenmerken als een filter."
  remarks: "Deze methode wordt doorgegeven `null` voor de `instance` parameter.       De eigenschappen voor de `instance` parameter kan afwijken van de eigenschappen van een klasse, omdat de site kunt toevoegen of verwijderen van eigenschappen als de `instance` parameter is geplaatst.       De `filter` parameter kunt combineren <xref:System.Type>en <xref:System.Attribute>objecten.</xref:System.Attribute> </xref:System.Type> Filter wordt gedefinieerd door de volgende regels: - A <xref:System.Type>object wordt beschouwd als een jokerteken; deze overeenkomt met een eigenschap met de <xref:System.Type>in de set kenmerken.</xref:System.Type> </xref:System.Type>      -Als een eigenschap geen heeft een <xref:System.Attribute>van dezelfde klasse, wordt de eigenschap niet opgenomen in de geretourneerde matrix.</xref:System.Attribute>      -Als het kenmerk een exemplaar van is <xref:System.Attribute>, de eigenschap moet een exacte overeenkomst moet worden opgenomen in de geretourneerde matrix.</xref:System.Attribute>      -Als u een <xref:System.Attribute>exemplaar en de standaardeigenschap is, wordt deze opgenomen in de geretourneerde matrix zelfs als er is geen exemplaar van de <xref:System.Attribute>in de eigenschap.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);
    parameters:
    - id: filter
      type: System.Attribute[]
      description: "Een matrix van het type <xref:System.Attribute>moet worden gebruikt als een filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> met de eigenschappen die overeenkomen met de opgegeven kenmerken."
  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  id: GetChildProperties(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Object)
  nameWithType: PropertyDescriptor.GetChildProperties(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert een <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> voor een bepaald object."
  remarks: "Deze methode wordt doorgegeven `null` voor de `filter` parameter.       De eigenschappen voor de `instance` parameter kan afwijken van de eigenschappen van een klasse, omdat de site kunt toevoegen of verwijderen van eigenschappen als de `instance` parameter is geplaatst.       De `filter` parameter kunt combineren <xref:System.Type>en <xref:System.Attribute>objecten.</xref:System.Attribute> </xref:System.Type> Filter wordt gedefinieerd door de volgende regels: - A <xref:System.Type>object wordt beschouwd als een jokerteken; deze overeenkomt met een eigenschap met de <xref:System.Type>in de set kenmerken.</xref:System.Type> </xref:System.Type>      -Als een eigenschap geen heeft een <xref:System.Attribute>van dezelfde klasse, wordt de eigenschap niet opgenomen in de geretourneerde matrix.</xref:System.Attribute>      -Als het kenmerk een exemplaar van is <xref:System.Attribute>, de eigenschap moet een exacte overeenkomst moet worden opgenomen in de geretourneerde matrix.</xref:System.Attribute>      -Als u een <xref:System.Attribute>exemplaar en de standaardeigenschap is, wordt deze opgenomen in de geretourneerde matrix zelfs als er is geen exemplaar van de <xref:System.Attribute>in de eigenschap.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Een onderdeel van de eigenschappen voor ophalen."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> met de eigenschappen voor het opgegeven onderdeel."
  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  id: GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Object,Attribute[])
  nameWithType: PropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert een <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> voor een bepaald object met een opgegeven matrix van kenmerken als een filter."
  remarks: "De eigenschappen voor de `instance` parameter kan afwijken van de eigenschappen van een klasse, omdat de site kunt toevoegen of verwijderen van eigenschappen als de `instance` parameter is geplaatst.       De `filter` parameter kunt combineren <xref:System.Type>en <xref:System.Attribute>objecten.</xref:System.Attribute> </xref:System.Type> Filter wordt gedefinieerd door de volgende regels: - A <xref:System.Type>object wordt beschouwd als een jokerteken; deze overeenkomt met een eigenschap met de <xref:System.Type>in de set kenmerken.</xref:System.Type> </xref:System.Type>      -Als een eigenschap geen heeft een <xref:System.Attribute>van dezelfde klasse, wordt de eigenschap niet opgenomen in de geretourneerde matrix.</xref:System.Attribute>      -Als het kenmerk een exemplaar van is <xref:System.Attribute>, de eigenschap moet een exacte overeenkomst moet worden opgenomen in de geretourneerde matrix.</xref:System.Attribute>      -Als u een <xref:System.Attribute>exemplaar en de standaardeigenschap is, wordt deze opgenomen in de geretourneerde matrix zelfs als er is geen exemplaar van de <xref:System.Attribute>in de eigenschap.</xref:System.Attribute> </xref:System.Attribute>       In het algemeen onderliggende eigenschappen moeten worden geretourneerd door het implementeren van de <xref:System.ComponentModel.TypeConverter.GetProperties%2A>lid is van de <xref:System.ComponentModel.TypeConverter>geretourneerd van deze eigenschap.</xref:System.ComponentModel.TypeConverter> </xref:System.ComponentModel.TypeConverter.GetProperties%2A>"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);
    parameters:
    - id: instance
      type: System.Object
      description: "Een onderdeel van de eigenschappen voor ophalen."
    - id: filter
      type: System.Attribute[]
      description: "Een matrix van het type <xref:System.Attribute>moet worden gebruikt als een filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> met de eigenschappen die overeenkomen met de opgegeven kenmerken voor het opgegeven onderdeel."
  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: PropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.PropertyDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee haalt u een editor van het opgegeven type."
  syntax:
    content: public virtual object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "Het basistype van editor, die wordt gebruikt voor het onderscheid maken tussen meerdere editors die ondersteuning biedt voor een eigenschap."
    return:
      type: System.Object
      description: "Een exemplaar van het type aangevraagde editor of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als een editor kan niet worden gevonden."
  overload: System.ComponentModel.PropertyDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.PropertyDescriptor.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert de hash-code voor dit object."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "De hash-code voor dit object."
  overload: System.ComponentModel.PropertyDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  id: GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetInvocationTarget(Type,Object)
  nameWithType: PropertyDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Deze methode retourneert het object dat moet worden gebruikt tijdens het aanroepen van leden."
  remarks: "Normaal gesproken de retourwaarde wordt niet dezelfde zijn als de `instance` doorgegeven. Als iemand een ander object gekoppeld aan dit exemplaar, of als het exemplaar een descriptor aangepast type is, kan de methode GetInvocationTarget een andere waarde retourneren."
  syntax:
    content: protected override object GetInvocationTarget (Type type, object instance);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>van de doel-aanroep.</xref:System.Type>"
    - id: instance
      type: System.Object
      description: "Het mogelijke doel van de aanroep."
    return:
      type: System.Object
      description: "De <xref:System.Object>die mogen worden gebruikt tijdens het aanroepen van leden.</xref:System.Object>"
  overload: System.ComponentModel.PropertyDescriptor.GetInvocationTarget*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  id: GetTypeFromName(System.String)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetTypeFromName(String)
  nameWithType: PropertyDescriptor.GetTypeFromName(String)
  fullName: System.ComponentModel.PropertyDescriptor.GetTypeFromName(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert een type met de naam ervan."
  remarks: "Als u wilt zoeken naar het juiste type, controleert deze methode eerst de assembly van het type dat dit <xref:System.ComponentModel.PropertyDescriptor>verwijzingen.</xref:System.ComponentModel.PropertyDescriptor> Als het type komt niet in de assembly wordt gevonden, roept <xref:System.Type.GetType%2A?displayProperty=fullName>.</xref:System.Type.GetType%2A?displayProperty=fullName>"
  syntax:
    content: protected Type GetTypeFromName (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "De assembly gekwalificeerde naam van het type om op te halen."
    return:
      type: System.Type
      description: "Een <xref:System.Type>die overeenkomt met de opgegeven typenaam of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er een overeenkomst wordt gevonden.</xref:System.Type>"
  overload: System.ComponentModel.PropertyDescriptor.GetTypeFromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: PropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValue(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer in een afgeleide klasse genegeerd, krijgt de huidige waarde van de eigenschap voor een onderdeel."
  remarks: "Deze methode wordt normaal gesproken ge√Ømplementeerd via reflectie.       Deze methode automatisch roept de methode vooraf wijzigen <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, en volgt wijzigt methode, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, van de <xref:System.ComponentModel.Design.IComponentChangeService>.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> </xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>"
  syntax:
    content: public abstract object GetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel met de eigenschap waarvoor de waarde wordt opgehaald."
    return:
      type: System.Object
      description: "De waarde van een eigenschap voor een bepaald onderdeel."
  overload: System.ComponentModel.PropertyDescriptor.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  id: GetValueChangedHandler(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetValueChangedHandler(Object)
  nameWithType: PropertyDescriptor.GetValueChangedHandler(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt de huidige set `ValueChanged` gebeurtenis-handlers voor een specifiek onderdeel"
  syntax:
    content: protected EventHandler GetValueChangedHandler (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel waarvoor u wilt ophalen, gebeurtenis-handlers."
    return:
      type: System.EventHandler
      description: "Een multicast-gebeurtenis-handler gecombineerd of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen gebeurtenis-handlers zijn momenteel toegewezen aan <code> component </code>."
  overload: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable
  id: IsLocalizable
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: IsLocalizable
  nameWithType: PropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.PropertyDescriptor.IsLocalizable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt een waarde die aangeeft of moet deze eigenschap worden gelokaliseerd, zoals opgegeven in de <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref>."
  remarks: "Wanneer een eigenschap is gemarkeerd met de <xref:System.ComponentModel.LocalizableAttribute>ingesteld op `true` en gebruikt in een visuele ontwerper, de waarden worden opgeslagen in een bronbestand.</xref:System.ComponentModel.LocalizableAttribute> Als u een eigenschap met het kenmerk te markeren en stel de eigenschap in de code, worden de bronbestanden niet gebruikt."
  syntax:
    content: public virtual bool IsLocalizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het lid is gemarkeerd met de <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref> ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.IsLocalizable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: PropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptor.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer in een afgeleide klasse genegeerd, krijgt een waarde die aangeeft of deze eigenschap alleen-lezen is."
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenschap alleen-lezen is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  id: OnValueChanged(System.Object,System.EventArgs)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: OnValueChanged(Object,EventArgs)
  nameWithType: PropertyDescriptor.OnValueChanged(Object,EventArgs)
  fullName: System.ComponentModel.PropertyDescriptor.OnValueChanged(Object,EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Geeft de `ValueChanged` gebeurtenis die u hebt ge√Ømplementeerd."
  remarks: "Deze methode moet worden aangeroepen door de implementatie van de descriptor eigenschap wanneer de waarde van eigenschap is gewijzigd."
  syntax:
    content: protected virtual void OnValueChanged (object component, EventArgs e);
    parameters:
    - id: component
      type: System.Object
      description: "Het object dat de gebeurtenis zich voordoet."
    - id: e
      type: System.EventArgs
      description: "Een <xref:System.EventArgs>waarin de gebeurtenisgegevens.</xref:System.EventArgs>"
  overload: System.ComponentModel.PropertyDescriptor.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.PropertyType
  id: PropertyType
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: PropertyType
  nameWithType: PropertyDescriptor.PropertyType
  fullName: System.ComponentModel.PropertyDescriptor.PropertyType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer in een afgeleide klasse genegeerd, krijgt het type van de eigenschap."
  remarks: "Deze eigenschap wordt normaal gesproken ge√Ømplementeerd via reflectie."
  syntax:
    content: public abstract Type PropertyType { get; }
    return:
      type: System.Type
      description: "Een <xref:System.Type>dat het type van de eigenschap vertegenwoordigt.</xref:System.Type>"
  overload: System.ComponentModel.PropertyDescriptor.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  id: RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: PropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Kunnen andere objecten wilt worden gewaarschuwd als deze eigenschap wordt gewijzigd."
  syntax:
    content: public virtual void RemoveValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel te verwijderen van de handler voor."
    - id: handler
      type: System.EventHandler
      description: "De gemachtigde te verwijderen als een listener."
  overload: System.ComponentModel.PropertyDescriptor.RemoveValueChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  id: ResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: ResetValue(Object)
  nameWithType: PropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ResetValue(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer in een afgeleide klasse genegeerd, stelt u de waarde voor deze eigenschap van het onderdeel opnieuw op de standaardwaarde."
  remarks: "Deze methode wordt normaal gesproken ge√Ømplementeerd via reflectie.       Deze methode bepaalt de waarde in te stellen van de eigenschap in de volgende volgorde van prioriteit: 1.  Er is een eigenschap met schaduw voor deze eigenschap.      2.  Er is een <xref:System.ComponentModel.DefaultValueAttribute>voor deze eigenschap.</xref:System.ComponentModel.DefaultValueAttribute>      3.  Er is een &quot;ResetMyProperty&quot;-methode die u hebt ge√Ømplementeerd, waarbij &quot;MyProperty&quot; is de naam van de eigenschap die u doorgeeft aan.       Deze methode maakt u een <xref:System.ComponentModel.Design.DesignerTransaction>automatisch in de volgende volgorde: 1.</xref:System.ComponentModel.Design.DesignerTransaction>  De methodeaanroepen de <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName>methode voor het maken van een nieuwe <xref:System.ComponentModel.Design.DesignerTransaction>vertegenwoordigt de wijzigingen.</xref:System.ComponentModel.Design.DesignerTransaction> </xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName>      2.  De methodeaanroepen de <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName>methode om aan te geven dat de transactie is gestart en de wijzigingen zijn uitgevoerd.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName>      3.  De methode stelt de eigenschap op de waarde bepaald door deze methode controleren volgorde.      4.  De methodeaanroepen de <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName>methode om aan te geven dat de wijzigingen hebben plaatsgevonden.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName>      5.  Het methodeaanroepen van de <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName>om aan te geven dat de transactie is voltooid.</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName>       Het doel van de transactie is voor de ondersteuning van `Undo` en `Redo` functionaliteit."
  syntax:
    content: public abstract void ResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel met de waarde van de eigenschap die moet worden ingesteld op de standaardwaarde."
  overload: System.ComponentModel.PropertyDescriptor.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility
  id: SerializationVisibility
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: SerializationVisibility
  nameWithType: PropertyDescriptor.SerializationVisibility
  fullName: System.ComponentModel.PropertyDescriptor.SerializationVisibility
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt een waarde die aangeeft of kan deze eigenschap moet worden geserialiseerd, zoals opgegeven in de <xref href=&quot;System.ComponentModel.DesignerSerializationVisibilityAttribute&quot;> </xref>."
  syntax:
    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
      description: "Een van de <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> opsommingswaarden die aangeeft of deze eigenschap moet worden geserialiseerd."
  overload: System.ComponentModel.PropertyDescriptor.SerializationVisibility*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: PropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptor.SetValue(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer deze worden overschreven in een afgeleide klasse, stelt de waarde van het onderdeel op een andere waarde."
  remarks: "Deze methode wordt normaal gesproken ge√Ømplementeerd via reflectie.       Deze methode maakt u een <xref:System.ComponentModel.Design.DesignerTransaction>automatisch in de volgende volgorde: 1.</xref:System.ComponentModel.Design.DesignerTransaction>  De methodeaanroepen de <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName>methode voor het maken van een nieuwe <xref:System.ComponentModel.Design.DesignerTransaction>vertegenwoordigt de wijzigingen.</xref:System.ComponentModel.Design.DesignerTransaction> </xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName>      2.  De methodeaanroepen de <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName>methode om aan te geven dat de transactie is gestart en de wijzigingen zijn uitgevoerd.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName>      3.  De methode stelt de eigenschap op de waarde bepaald door deze methode controleren volgorde.      4.  De methodeaanroepen de <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName>methode om aan te geven dat de wijzigingen hebben plaatsgevonden.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName>      5.  Het methodeaanroepen van de <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName>om aan te geven dat de transactie voltooid is.</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName>       Het doel van de transactie is voor de ondersteuning van `Undo` en `Redo` functionaliteit."
  syntax:
    content: public abstract void SetValue (object component, object value);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel met de waarde van de eigenschap die moet worden ingesteld."
    - id: value
      type: System.Object
      description: "De nieuwe waarde."
  overload: System.ComponentModel.PropertyDescriptor.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: PropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Wanneer in een afgeleide klasse genegeerd, bepaalt een waarde die aangeeft of de waarde van deze eigenschap moet worden gehandhaafd."
  remarks: "Deze methode wordt normaal gesproken ge√Ømplementeerd via reflectie."
  syntax:
    content: public abstract bool ShouldSerializeValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Het onderdeel met de eigenschap voor persistentie worden onderzocht."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenschap moet worden vastgehouden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  id: SupportsChangeEvents
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: SupportsChangeEvents
  nameWithType: PropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt een waarde die aangeeft of de wijzigingsmeldingen waarde voor deze eigenschap afkomstig van buiten de eigenschapsdescriptor zijn kunnen opgehaald."
  remarks: "De eigenschap SupportsChangeEvents geeft aan of de wijzigingsmeldingen waarde voor deze eigenschap afkomstig van buiten de eigenschapsdescriptor zoals van het onderdeel zelf zijn kunnen, of of meldingen wordt alleen afkomstig zijn van directe aanroepen worden aangebracht in de <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>methode.</xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> Bijvoorbeeld, het onderdeel worden ge√Ømplementeerd de <xref:System.ComponentModel.INotifyPropertyChanged>interface of beschikt niet over een expliciete `name``Changed` gebeurtenis voor deze eigenschap.</xref:System.ComponentModel.INotifyPropertyChanged>"
  syntax:
    content: public virtual bool SupportsChangeEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde wijzigingsmeldingen kunnen afkomstig zijn van buiten de eigenschapsdescriptor; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: System.ComponentModel.MemberDescriptor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyDescriptor(MemberDescriptor)
  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(MemberDescriptor)
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyDescriptor(MemberDescriptor,Attribute[])
  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(MemberDescriptor,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyDescriptor(String,Attribute[])
  nameWithType: PropertyDescriptor.PropertyDescriptor(String,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(String,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: AddValueChanged(Object,EventHandler)
  nameWithType: PropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.AddValueChanged(Object,EventHandler)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: CanResetValue(Object)
  nameWithType: PropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.CanResetValue(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.PropertyDescriptor.ComponentType
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: PropertyDescriptor.ComponentType
  fullName: System.ComponentModel.PropertyDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.PropertyDescriptor.Converter
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: PropertyDescriptor.Converter
  fullName: System.ComponentModel.PropertyDescriptor.Converter
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: CreateInstance(Type)
  nameWithType: PropertyDescriptor.CreateInstance(Type)
  fullName: System.ComponentModel.PropertyDescriptor.CreateInstance(Type)
- uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: PropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.PropertyDescriptor.Equals(Object)
- uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: FillAttributes(IList)
  nameWithType: PropertyDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.PropertyDescriptor.FillAttributes(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties()
  nameWithType: PropertyDescriptor.GetChildProperties()
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties(Attribute[])
  nameWithType: PropertyDescriptor.GetChildProperties(Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Attribute[])
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties(Object)
  nameWithType: PropertyDescriptor.GetChildProperties(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Object)
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties(Object,Attribute[])
  nameWithType: PropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: PropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.PropertyDescriptor.GetEditor(Type)
- uid: System.ComponentModel.PropertyDescriptor.GetHashCode
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: PropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.PropertyDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetInvocationTarget(Type,Object)
  nameWithType: PropertyDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(Type,Object)
- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetTypeFromName(String)
  nameWithType: PropertyDescriptor.GetTypeFromName(String)
  fullName: System.ComponentModel.PropertyDescriptor.GetTypeFromName(String)
- uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetValue(Object)
  nameWithType: PropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValue(Object)
- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetValueChangedHandler(Object)
  nameWithType: PropertyDescriptor.GetValueChangedHandler(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(Object)
- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: PropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.PropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: PropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: OnValueChanged(Object,EventArgs)
  nameWithType: PropertyDescriptor.OnValueChanged(Object,EventArgs)
  fullName: System.ComponentModel.PropertyDescriptor.OnValueChanged(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.PropertyDescriptor.PropertyType
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: PropertyDescriptor.PropertyType
  fullName: System.ComponentModel.PropertyDescriptor.PropertyType
- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: PropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(Object,EventHandler)
- uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ResetValue(Object)
  nameWithType: PropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ResetValue(Object)
- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SerializationVisibility
  nameWithType: PropertyDescriptor.SerializationVisibility
  fullName: System.ComponentModel.PropertyDescriptor.SerializationVisibility
- uid: System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: false
  name: DesignerSerializationVisibility
  nameWithType: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: PropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptor.SetValue(Object,Object)
- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: PropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(Object)
- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: PropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.PropertyDescriptor.#ctor*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: AddValueChanged
  nameWithType: PropertyDescriptor.AddValueChanged
- uid: System.ComponentModel.PropertyDescriptor.CanResetValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: CanResetValue
  nameWithType: PropertyDescriptor.CanResetValue
- uid: System.ComponentModel.PropertyDescriptor.ComponentType*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: PropertyDescriptor.ComponentType
- uid: System.ComponentModel.PropertyDescriptor.Converter*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: PropertyDescriptor.Converter
- uid: System.ComponentModel.PropertyDescriptor.CreateInstance*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: CreateInstance
  nameWithType: PropertyDescriptor.CreateInstance
- uid: System.ComponentModel.PropertyDescriptor.Equals*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: Equals
  nameWithType: PropertyDescriptor.Equals
- uid: System.ComponentModel.PropertyDescriptor.FillAttributes*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: FillAttributes
  nameWithType: PropertyDescriptor.FillAttributes
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties
  nameWithType: PropertyDescriptor.GetChildProperties
- uid: System.ComponentModel.PropertyDescriptor.GetEditor*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: PropertyDescriptor.GetEditor
- uid: System.ComponentModel.PropertyDescriptor.GetHashCode*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: PropertyDescriptor.GetHashCode
- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetInvocationTarget
  nameWithType: PropertyDescriptor.GetInvocationTarget
- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetTypeFromName
  nameWithType: PropertyDescriptor.GetTypeFromName
- uid: System.ComponentModel.PropertyDescriptor.GetValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetValue
  nameWithType: PropertyDescriptor.GetValue
- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetValueChangedHandler
  nameWithType: PropertyDescriptor.GetValueChangedHandler
- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: PropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: PropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: OnValueChanged
  nameWithType: PropertyDescriptor.OnValueChanged
- uid: System.ComponentModel.PropertyDescriptor.PropertyType*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: PropertyDescriptor.PropertyType
- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: RemoveValueChanged
  nameWithType: PropertyDescriptor.RemoveValueChanged
- uid: System.ComponentModel.PropertyDescriptor.ResetValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ResetValue
  nameWithType: PropertyDescriptor.ResetValue
- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SerializationVisibility
  nameWithType: PropertyDescriptor.SerializationVisibility
- uid: System.ComponentModel.PropertyDescriptor.SetValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SetValue
  nameWithType: PropertyDescriptor.SetValue
- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: PropertyDescriptor.ShouldSerializeValue
- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: PropertyDescriptor.SupportsChangeEvents
