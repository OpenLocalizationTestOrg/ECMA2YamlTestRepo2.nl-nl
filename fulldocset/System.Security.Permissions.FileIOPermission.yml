### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileIOPermission
  id: FileIOPermission
  children:
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])
  - System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  - System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  - System.Security.Permissions.FileIOPermission.AllFiles
  - System.Security.Permissions.FileIOPermission.AllLocalFiles
  - System.Security.Permissions.FileIOPermission.Copy
  - System.Security.Permissions.FileIOPermission.Equals(System.Object)
  - System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.FileIOPermission.GetHashCode
  - System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)
  - System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.FileIOPermission.IsUnrestricted
  - System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  - System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  - System.Security.Permissions.FileIOPermission.ToXml
  - System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: FileIOPermission
  nameWithType: FileIOPermission
  fullName: System.Security.Permissions.FileIOPermission
  type: Class
  summary: "Hiermee bepaalt u de mogelijkheid toegang tot bestanden en mappen. Deze klasse kan niet worden overgenomen."
  remarks: "This permission distinguishes between the following four types of file IO access provided by <xref:System.Security.Permissions.FileIOPermissionAccess>:  \n  \n-   `Read`: Read access to the contents of the file or access to information about the file, such as its length or last modification time.  \n  \n-   `Write`: Write access to the contents of the file or access to change information about the file, such as its name. Also allows for deletion and overwriting.  \n  \n-   `Append`: Ability to write to the end of a file only. No ability to read.  \n  \n-   `PathDiscovery`: Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure that is revealed in the path. This value does not grant access to files or folders represented by the path.  \n  \n> [!NOTE]\n>  Giving <xref:System.Security.Permissions.FileIOPermissionAccess> access to an assembly is similar to granting it full trust. If an application should not write to the file system, it should not have <xref:System.Security.Permissions.FileIOPermissionAccess> access.  \n  \n All these permissions are independent, meaning that rights to one do not imply rights to another. For example, `Write` permission does not imply permission to `Read` or `Append`. If more than one permission is desired, they can be combined using a bitwise OR as shown in the code example that follows. File permission is defined in terms of canonical absolute paths; calls should always be made with canonical file paths.  \n  \n FileIOPermission describes protected operations on files and folders. The <xref:System.IO.File> class helps provide secure access to files and folders. The security access check is performed when the handle to the file is created. By doing the check at creation time, the performance impact of the security check is minimized. Opening a file happens once, while reading and writing can happen multiple times. Once the file is opened, no further checks are done. If the object is passed to an untrusted caller, it can be misused. For example, file handles should not be stored in public global statics where code with less permission can access them.  \n  \n <xref:System.Security.Permissions.FileIOPermissionAccess> specifies actions that can be performed on the file or folder. In addition, these actions can be combined using a bitwise OR to form complex instances.  \n  \n Access to a folder implies access to all the files it contains, as well as access to all the files and folders in its subfolders. For example, `Read` access to C:\\folder1\\ implies `Read` access to C:\\folder1\\file1.txt, C:\\folder1\\folder2\\\\, C:\\folder1\\folder2\\file2.txt, and so on.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples illustrate code that uses FileIOPermission. After the following two lines of code, the object `f` represents permission to read all files on the client computer's local disks. The code example then demands the permission to determine whether the application has permission to read the files.  \n  \n [!code-cs[Classic FileIOPermission Example#1](~/add/codesnippet/csharp/t-system.security.permis_23_1.cs)]\n [!code-vb[Classic FileIOPermission Example#1](~/add/codesnippet/visualbasic/t-system.security.permis_23_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#1](~/add/codesnippet/cpp/t-system.security.permis_23_1.cpp)]  \n  \n After the following two lines of code, the object `f2` represents permissions to read C:\\test_r and read and write to C:\\example\\out.txt. `Read` and `Write` represent the file/folder permissions as previously described. After creating the permission, the code demands the permission to determine whether the application has the right to read and write to the file.  \n  \n [!code-cs[Classic FileIOPermission Example#2](~/add/codesnippet/csharp/t-system.security.permis_23_2.cs)]\n [!code-vb[Classic FileIOPermission Example#2](~/add/codesnippet/visualbasic/t-system.security.permis_23_2.vb)]\n [!code-cpp[Classic FileIOPermission Example#2](~/add/codesnippet/cpp/t-system.security.permis_23_2.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileIOPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(PermissionState)
  nameWithType: FileIOPermission.FileIOPermission(PermissionState)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klasse met volledig beperkt of onbeperkte machtigingen opgegeven."
  remarks: "Hiermee maakt u een volledig beperkt (`None`) of `Unrestricted` toegang tot bestanden en mappen."
  example:
  - "The following code example creates a new instance of the <xref:System.Security.Permissions.FileIOPermission> class with fully restricted read access.  \n  \n [!code-cs[Classic FileIOPermission Example#1](~/add/codesnippet/csharp/77d769e4-2464-4991-ba06-_1.cs)]\n [!code-vb[Classic FileIOPermission Example#1](~/add/codesnippet/visualbasic/77d769e4-2464-4991-ba06-_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#1](~/add/codesnippet/cpp/77d769e4-2464-4991-ba06-_1.cpp)]"
  syntax:
    content: public FileIOPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Een van de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> opsommingswaarden."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> state </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)
  id: '#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klasse met de opgegeven toegang tot het opgegeven bestand of de map."
  remarks: "Deze constructor kan slechts één van de <xref:System.Security.Permissions.FileIOPermissionAccess>waarden moet worden opgegeven voor het opgegeven bestand of map.</xref:System.Security.Permissions.FileIOPermissionAccess> Gebruik de <xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>methode voor het definiëren van complexe machtigingen.</xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>"
  example:
  - "The following code example shows the use of the FileIOPermission constructor to create a new instance of the <xref:System.Security.Permissions.FileIOPermission> class, which provides complete access to the C:\\test_r file.  \n  \n [!code-cs[Classic FileIOPermission Example#2](~/add/codesnippet/csharp/51a3f39e-30ae-4011-8c38-_1.cs)]\n [!code-vb[Classic FileIOPermission Example#2](~/add/codesnippet/visualbasic/51a3f39e-30ae-4011-8c38-_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#2](~/add/codesnippet/cpp/51a3f39e-30ae-4011-8c38-_1.cpp)]"
  syntax:
    content: public FileIOPermission (System.Security.Permissions.FileIOPermissionAccess access, string path);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> opsommingswaarden."
    - id: path
      type: System.String
      description: "Het absolute pad van het bestand of map."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> access </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - de <code> path </code> parameter is geen geldige tekenreeks.       - of - de <code> path </code> parameter geeft geen het absolute pad naar het bestand of map."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  id: '#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klasse met de opgegeven toegang tot de aangewezen bestanden en mappen."
  remarks: "Deze constructor kan slechts één <xref:System.Security.Permissions.FileIOPermissionAccess>waarde worden opgegeven voor de opgegeven bestanden en mappen.</xref:System.Security.Permissions.FileIOPermissionAccess> Gebruik de <xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>methode voor het definiëren van complexe machtigingen.</xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>"
  syntax:
    content: public FileIOPermission (System.Security.Permissions.FileIOPermissionAccess access, string[] pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> opsommingswaarden."
    - id: pathList
      type: System.String[]
      description: "Een matrix met het absolute pad van de bestanden en mappen."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> access </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - een vermelding in de <code> pathList </code> matrix is geen geldige tekenreeks."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: '#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klasse met de opgegeven toegang tot het opgegeven bestand of map en de opgegeven toegangsrechten voor informatie over het beheer van bestand."
  remarks: "Deze constructor kan slechts één <xref:System.Security.Permissions.FileIOPermissionAccess>waarde worden opgegeven voor de opgegeven bestanden of mappen.</xref:System.Security.Permissions.FileIOPermissionAccess> Gebruik de <xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>methode voor het definiëren van complexe machtigingen.</xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>       De `control` parameter geeft u op of de toegangscontrole toegangsbeheerlijst (ACL) voor het bestand of map die is opgegeven door `path` kan worden gewijzigd, weergegeven, of is niet toegankelijk.      > [!IMPORTANT] > Beschrijving personen of groepen die, of beschikt niet over toegangsrechten specifieke acties op het opgegeven bestand en de eigenschappen van een toegangsbeheerlijst (ACL).  De mogelijkheid om te wijzigen of weergeven van een ACL is een belangrijk machtiging en wees voorzichtig met moet worden verleend."
  syntax:
    content: public FileIOPermission (System.Security.Permissions.FileIOPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string path);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> opsommingswaarden."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> opsommingswaarden."
    - id: path
      type: System.String
      description: "Het absolute pad van het bestand of map."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> access </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - de <code> path </code> parameter is geen geldige tekenreeks.       - of - de <code> path </code> parameter geeft geen het absolute pad naar het bestand of map."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])
  id: '#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klasse met de opgegeven toegang tot de aangewezen bestanden en mappen en de opgegeven toegangsrechten voor informatie over het beheer van bestand."
  remarks: "Deze constructor kan slechts één <xref:System.Security.Permissions.FileIOPermissionAccess>waarde worden opgegeven voor de opgegeven bestanden en mappen.</xref:System.Security.Permissions.FileIOPermissionAccess> Gebruik de <xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>methode voor het definiëren van complexe machtigingen.</xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>       De `control` parameter geeft u op of de toegangscontrole toegangsbeheerlijst (ACL) voor het bestand of map die is opgegeven door `path` kan worden gewijzigd, weergegeven, of is niet toegankelijk.      > [!IMPORTANT] > Beschrijving personen of groepen die, of beschikt niet over toegangsrechten specifieke acties op het opgegeven bestand en de eigenschappen van een toegangsbeheerlijst (ACL).  De mogelijkheid om te wijzigen of weergeven van een ACL is een belangrijk machtiging en wees voorzichtig met moet worden verleend."
  syntax:
    content: public FileIOPermission (System.Security.Permissions.FileIOPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string[] pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> opsommingswaarden."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> opsommingswaarden."
    - id: pathList
      type: System.String[]
      description: "Een matrix met het absolute pad van de bestanden en mappen."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> access </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - een vermelding in de <code> pathList </code> matrix is geen geldige tekenreeks."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  id: AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: AddPathList(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.AddPathList(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.AddPathList(FileIOPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Voegt de toegang voor het opgegeven bestand of map op de bestaande status van de machtiging."
  remarks: "Gebruik deze methode toegang aan te passen bestands- en mapnamen door toe te voegen aan de status van de huidige machtiging."
  example:
  - "The following code example shows the use of the AddPathList method.  \n  \n [!code-cs[Classic FileIOPermission Example#2](~/add/codesnippet/csharp/179395dd-6ede-43e0-bf6e-_1.cs)]\n [!code-vb[Classic FileIOPermission Example#2](~/add/codesnippet/visualbasic/179395dd-6ede-43e0-bf6e-_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#2](~/add/codesnippet/cpp/179395dd-6ede-43e0-bf6e-_1.cpp)]"
  syntax:
    content: public void AddPathList (System.Security.Permissions.FileIOPermissionAccess access, string path);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> waarden."
    - id: path
      type: System.String
      description: "Het absolute pad van een bestand of map."
  overload: System.Security.Permissions.FileIOPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> access </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - de <code> path </code> parameter is geen geldige tekenreeks.       - of - de <code> path </code> parameter heeft niet het absolute pad naar het bestand of map opgeven."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De <code> path </code> parameter heeft een ongeldige indeling."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  id: AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: AddPathList(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.AddPathList(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.AddPathList(FileIOPermissionAccess,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Voegt de toegang voor de opgegeven bestanden en mappen naar de bestaande status van de machtiging."
  remarks: "Gebruik deze methode toegang aan te passen bestands- en mapnamen door toe te voegen aan de status van de huidige machtiging."
  syntax:
    content: public void AddPathList (System.Security.Permissions.FileIOPermissionAccess access, string[] pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> waarden."
    - id: pathList
      type: System.String[]
      description: "Een matrix met het absolute pad van de bestanden en mappen."
  overload: System.Security.Permissions.FileIOPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> access </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - een vermelding in de <code> pathList </code> matrix is niet geldig."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Een vermelding in de <code> pathList </code> matrix heeft een ongeldige indeling."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>pathList</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.AllFiles
  id: AllFiles
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: AllFiles
  nameWithType: FileIOPermission.AllFiles
  fullName: System.Security.Permissions.FileIOPermission.AllFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Opgehaald of ingesteld van de toegestane toegang tot alle bestanden."
  remarks: "Deze eigenschap opgehaald of ingesteld van de toegestane toegang tot alle bestanden op de lokale computer en netwerk-stations.       Een persoon <xref:System.Security.Permissions.FileIOPermissionAccess>waarde kan worden gecontroleerd met behulp van een bitsgewijze AND-bewerking.</xref:System.Security.Permissions.FileIOPermissionAccess>"
  example:
  - "The following code example shows the use of the AllFiles property.  \n  \n [!code-cs[Classic FileIOPermission Example#3](~/add/codesnippet/csharp/p-system.security.permis_9_1.cs)]\n [!code-vb[Classic FileIOPermission Example#3](~/add/codesnippet/visualbasic/p-system.security.permis_9_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#3](~/add/codesnippet/cpp/p-system.security.permis_9_1.cpp)]"
  syntax:
    content: public System.Security.Permissions.FileIOPermissionAccess AllFiles { get; set; }
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "De reeks bestand i/o vlaggen voor alle bestanden."
  overload: System.Security.Permissions.FileIOPermission.AllFiles*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.AllLocalFiles
  id: AllLocalFiles
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: AllLocalFiles
  nameWithType: FileIOPermission.AllLocalFiles
  fullName: System.Security.Permissions.FileIOPermission.AllLocalFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Opgehaald of ingesteld van de toegestane toegang tot alle lokale bestanden."
  remarks: "Lokale bestanden zijn opgenomen op de lokale computer. Alle bestanden die niet worden geopend via een netwerkstation zijn lokale bestanden.       Een persoon <xref:System.Security.Permissions.FileIOPermissionAccess>waarde kan worden gecontroleerd met behulp van een bitsgewijze AND-bewerking.</xref:System.Security.Permissions.FileIOPermissionAccess>"
  example:
  - "The following code example shows the use of the AllLocalFiles property.  \n  \n [!code-cs[Classic FileIOPermission Example#1](~/add/codesnippet/csharp/p-system.security.permis_10_1.cs)]\n [!code-vb[Classic FileIOPermission Example#1](~/add/codesnippet/visualbasic/p-system.security.permis_10_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#1](~/add/codesnippet/cpp/p-system.security.permis_10_1.cpp)]"
  syntax:
    content: public System.Security.Permissions.FileIOPermissionAccess AllLocalFiles { get; set; }
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "De reeks bestand i/o vlaggen voor alle lokale bestanden."
  overload: System.Security.Permissions.FileIOPermission.AllLocalFiles*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.Copy
  id: Copy
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: FileIOPermission.Copy()
  fullName: System.Security.Permissions.FileIOPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Maakt en retourneert een identieke kopie van de huidige machtiging."
  remarks: "Een kopie van de machtiging vertegenwoordigt dezelfde toegang tot bronnen als de oorspronkelijke machtiging."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Een kopie van de huidige machtiging."
  overload: System.Security.Permissions.FileIOPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FileIOPermission.Equals(Object)
  fullName: System.Security.Permissions.FileIOPermission.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee wordt bepaald of de opgegeven <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> object is gelijk aan de huidige <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref>."
  remarks: "Zie voor meer informatie <xref:System.Object.Equals%2A>.</xref:System.Object.Equals%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "De <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> object moeten worden vergeleken met de huidige <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> gelijk is aan de huidige <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.FileIOPermission.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: FileIOPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.FileIOPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee reconstrueert machtiging met een opgegeven status van een XML-codering."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "De XML-codering gebruikt de machtiging opnieuw."
  overload: System.Security.Permissions.FileIOPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> esd </code> parameter is niet geldig machtigingselement.       - of - de <code> esd </code> versienummer van de parameter is niet compatibel."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.GetHashCode
  id: GetHashCode
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FileIOPermission.GetHashCode()
  fullName: System.Security.Permissions.FileIOPermission.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Haalt een hashcode voor de <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> object dat geschikt is voor gebruik in de hash-algoritmen en gegevens structuren zoals hash-tabel."
  remarks: "De hash-code voor twee exemplaren van hetzelfde type machtiging kan afwijken, een hash-code mag daarom niet worden gebruikt om te vergelijken twee <xref:System.Security.Permissions.FileIOPermission>objecten.</xref:System.Security.Permissions.FileIOPermission>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een hash-code voor de huidige <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> object."
  overload: System.Security.Permissions.FileIOPermission.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)
  id: GetPathList(System.Security.Permissions.FileIOPermissionAccess)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: GetPathList(FileIOPermissionAccess)
  nameWithType: FileIOPermission.GetPathList(FileIOPermissionAccess)
  fullName: System.Security.Permissions.FileIOPermission.GetPathList(FileIOPermissionAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Alle bestanden en mappen met de opgegeven opgehaald <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>."
  remarks: "Deze methode gebruiken om de status van de huidige machtiging. De status van beide `Read` en `Write` toegang, twee aanroepen naar deze methode zijn vereist.      > [!NOTE] > De `access` parameter is beperkt tot de waarden van <xref:System.Security.Permissions.FileIOPermissionAccess>, die staan voor enkelvoudige typen van toegang tot het bestand.</xref:System.Security.Permissions.FileIOPermissionAccess> Deze waarden zijn <xref:System.Security.Permissions.FileIOPermissionAccess>, <xref:System.Security.Permissions.FileIOPermissionAccess>, <xref:System.Security.Permissions.FileIOPermissionAccess>, en <xref:System.Security.Permissions.FileIOPermissionAccess>.</xref:System.Security.Permissions.FileIOPermissionAccess> </xref:System.Security.Permissions.FileIOPermissionAccess> </xref:System.Security.Permissions.FileIOPermissionAccess> </xref:System.Security.Permissions.FileIOPermissionAccess> De waarden die aanvaardbaar is voor `access` omvatten geen <xref:System.Security.Permissions.FileIOPermissionAccess>en <xref:System.Security.Permissions.FileIOPermissionAccess>, die geen enkelvoudige typen van toegang tot het bestand vertegenwoordigen.</xref:System.Security.Permissions.FileIOPermissionAccess> </xref:System.Security.Permissions.FileIOPermissionAccess>"
  example:
  - "The following code example shows the use of the GetPathList method. This example is part of a larger example provided for the <xref:System.Security.Permissions.FileIOPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/cpp/996247c6-c512-46ad-9cab-_1.cpp)]\n [!code-cs[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/csharp/996247c6-c512-46ad-9cab-_1.cs)]\n [!code-vb[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/visualbasic/996247c6-c512-46ad-9cab-_1.vb)]"
  syntax:
    content: public string[] GetPathList (System.Security.Permissions.FileIOPermissionAccess access);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Een van de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> waarden die één type toegang tot het bestand vertegenwoordigt."
    return:
      type: System.String[]
      description: "Een matrix met de paden van bestanden en mappen op welke toegang die is opgegeven door de <code> access </code> parameter wordt verleend."
  overload: System.Security.Permissions.FileIOPermission.GetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>access</code>is geen geldige waarde van <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - <code>access</code> is <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>, die staat meer dan één type toegang tot bestanden of <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>, die staat niet voor elk type toegang tot het bestand."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: FileIOPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Maakt en retourneert een machtiging die is het snijpunt van de huidige machtigingen en de opgegeven."
  remarks: "Het snijpunt van twee machtigingen is een machtiging die wordt beschreven welke bewerkingen die ze beide gemeenschappelijk beschrijven. Alleen een vraag die wordt doorgegeven zowel oorspronkelijke machtigingen geeft het snijpunt."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging voor intersect met de huidige machtiging. Dit moet hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging die het snijpunt van de huidige machtigingen en de opgegeven vertegenwoordigt. Deze nieuwe machtiging is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het snijpunt leeg is."
  overload: System.Security.Permissions.FileIOPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: FileIOPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee wordt bepaald of de huidige machtiging een subset van de opgegeven machtiging."
  remarks: "De huidige machtiging is een subset van de opgegeven machtiging als een reeks bewerkingen die is opgenomen in de opgegeven machtiging is opgegeven voor de huidige machtiging. Een machtiging die leestoegang tot C:\\example.txt vertegenwoordigt is bijvoorbeeld een subset van een machtiging die leestoegang tot C: vertegenwoordigt\\\\. Als deze methode retourneert `true`, de huidige machtiging vertegenwoordigt geen meer toegang tot de beveiligde bron dan de opgegeven machtiging."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging die moet worden getest voor de relatie subset. Deze machtiging moet hetzelfde type als de huidige machtiging."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige machtiging een subset van de opgegeven machtiging is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.FileIOPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: FileIOPermission.IsUnrestricted()
  fullName: System.Security.Permissions.FileIOPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Retourneert een waarde die aangeeft of de huidige machtiging onbeperkt is."
  remarks: "Een onbeperkte machtiging geeft toegang tot alle bronnen die zijn beveiligd door de machtiging."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige machtiging onbeperkt is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.FileIOPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  id: SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: SetPathList(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.SetPathList(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.SetPathList(FileIOPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee stelt u de opgegeven toegang tot het opgegeven bestand of map, vervangt de bestaande status van de machtiging."
  remarks: "The previous state of the current permission for the specified access type is overwritten. The following code sets the access for C:\\temp to <xref:System.Security.Permissions.FileIOPermissionAccess>.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#12](~/add/codesnippet/cpp/21456ab4-f876-4c97-b331-_1.cpp)]\n [!code-vb[System.Security.Permissions.FileIOPermission#12](~/add/codesnippet/visualbasic/21456ab4-f876-4c97-b331-_1.vb)]\n [!code-cs[System.Security.Permissions.FileIOPermission#12](~/add/codesnippet/csharp/21456ab4-f876-4c97-b331-_1.cs)]  \n  \n This access will not be overwritten by the following code because the access types are not the same.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#13](~/add/codesnippet/cpp/21456ab4-f876-4c97-b331-_2.cpp)]\n [!code-vb[System.Security.Permissions.FileIOPermission#13](~/add/codesnippet/visualbasic/21456ab4-f876-4c97-b331-_2.vb)]\n [!code-cs[System.Security.Permissions.FileIOPermission#13](~/add/codesnippet/csharp/21456ab4-f876-4c97-b331-_2.cs)]"
  example:
  - "The following code example shows the use of the SetPathList method.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/cpp/21456ab4-f876-4c97-b331-_3.cpp)]\n [!code-cs[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/csharp/21456ab4-f876-4c97-b331-_3.cs)]\n [!code-vb[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/visualbasic/21456ab4-f876-4c97-b331-_3.vb)]"
  syntax:
    content: public void SetPathList (System.Security.Permissions.FileIOPermissionAccess access, string path);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> waarden."
    - id: path
      type: System.String
      description: "Het absolute pad van het bestand of map."
  overload: System.Security.Permissions.FileIOPermission.SetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> access </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - de <code> path </code> parameter is geen geldige tekenreeks.       - of - de <code> path </code> parameter heeft niet het absolute pad naar het bestand of map opgeven."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  id: SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: SetPathList(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.SetPathList(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.SetPathList(FileIOPermissionAccess,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee stelt u de opgegeven toegang tot de opgegeven bestanden en mappen, vervangen de huidige status voor toegang tot de opgegeven door de nieuwe set paden."
  remarks: "The previous state of the current permission for the specified access type is overwritten. The following code sets the access for C:\\temp to <xref:System.Security.Permissions.FileIOPermissionAccess>.  \n  \n This access will not be overwritten by the following code because the access types are not the same.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#15](~/add/codesnippet/cpp/653665a4-6451-42cc-8bd1-_1.cpp)]\n [!code-vb[System.Security.Permissions.FileIOPermission#15](~/add/codesnippet/visualbasic/653665a4-6451-42cc-8bd1-_1.vb)]\n [!code-cs[System.Security.Permissions.FileIOPermission#15](~/add/codesnippet/csharp/653665a4-6451-42cc-8bd1-_1.cs)]"
  syntax:
    content: public void SetPathList (System.Security.Permissions.FileIOPermissionAccess access, string[] pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> waarden."
    - id: pathList
      type: System.String[]
      description: "Een matrix met het absolute pad van de bestanden en mappen."
  overload: System.Security.Permissions.FileIOPermission.SetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> access </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - een vermelding in de <code> pathList </code> parameter is geen geldige tekenreeks."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: FileIOPermission.ToXml()
  fullName: System.Security.Permissions.FileIOPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee maakt u een XML-codering van de machtigingen en de huidige status."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Een XML-codering van de machtiging, met inbegrip van eventuele statusgegevens."
  overload: System.Security.Permissions.FileIOPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: FileIOPermission.Union(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee maakt u een machtiging die is de vereniging van de huidige machtigingen en de opgegeven."
  remarks: "Het resultaat van een aanroep naar Union is een machtiging die staat voor alle bewerkingen die worden vertegenwoordigd door zowel de huidige machtigingen en de opgegeven. Elke vraag die beide toestemming geeft hun union is geslaagd."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission other);
    parameters:
    - id: other
      type: System.Security.IPermission
      description: "Een machtiging te combineren met de huidige machtiging. Dit moet hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging die de samenvoeging van de huidige machtigingen en de opgegeven vertegenwoordigt."
  overload: System.Security.Permissions.FileIOPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> other </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(PermissionState)
  nameWithType: FileIOPermission.FileIOPermission(PermissionState)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,String)
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
- uid: System.Security.AccessControl.AccessControlActions
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlActions
  nameWithType: AccessControlActions
  fullName: System.Security.AccessControl.AccessControlActions
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
- uid: System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AddPathList(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.AddPathList(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.AddPathList(FileIOPermissionAccess,String)
- uid: System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AddPathList(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.AddPathList(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.AddPathList(FileIOPermissionAccess,String[])
- uid: System.Security.Permissions.FileIOPermission.AllFiles
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AllFiles
  nameWithType: FileIOPermission.AllFiles
  fullName: System.Security.Permissions.FileIOPermission.AllFiles
- uid: System.Security.Permissions.FileIOPermission.AllLocalFiles
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AllLocalFiles
  nameWithType: FileIOPermission.AllLocalFiles
  fullName: System.Security.Permissions.FileIOPermission.AllLocalFiles
- uid: System.Security.Permissions.FileIOPermission.Copy
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Copy()
  nameWithType: FileIOPermission.Copy()
  fullName: System.Security.Permissions.FileIOPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.FileIOPermission.Equals(System.Object)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Equals(Object)
  nameWithType: FileIOPermission.Equals(Object)
  fullName: System.Security.Permissions.FileIOPermission.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: FileIOPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.FileIOPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.FileIOPermission.GetHashCode
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: GetHashCode()
  nameWithType: FileIOPermission.GetHashCode()
  fullName: System.Security.Permissions.FileIOPermission.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: GetPathList(FileIOPermissionAccess)
  nameWithType: FileIOPermission.GetPathList(FileIOPermissionAccess)
  fullName: System.Security.Permissions.FileIOPermission.GetPathList(FileIOPermissionAccess)
- uid: System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: FileIOPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.Intersect(IPermission)
- uid: System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: FileIOPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.IsSubsetOf(IPermission)
- uid: System.Security.Permissions.FileIOPermission.IsUnrestricted
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: FileIOPermission.IsUnrestricted()
  fullName: System.Security.Permissions.FileIOPermission.IsUnrestricted()
- uid: System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: SetPathList(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.SetPathList(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.SetPathList(FileIOPermissionAccess,String)
- uid: System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: SetPathList(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.SetPathList(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.SetPathList(FileIOPermissionAccess,String[])
- uid: System.Security.Permissions.FileIOPermission.ToXml
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: ToXml()
  nameWithType: FileIOPermission.ToXml()
  fullName: System.Security.Permissions.FileIOPermission.ToXml()
- uid: System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: FileIOPermission.Union(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.Union(IPermission)
- uid: System.Security.Permissions.FileIOPermission.#ctor*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission
  nameWithType: FileIOPermission.FileIOPermission
- uid: System.Security.Permissions.FileIOPermission.AddPathList*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AddPathList
  nameWithType: FileIOPermission.AddPathList
- uid: System.Security.Permissions.FileIOPermission.AllFiles*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AllFiles
  nameWithType: FileIOPermission.AllFiles
- uid: System.Security.Permissions.FileIOPermission.AllLocalFiles*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AllLocalFiles
  nameWithType: FileIOPermission.AllLocalFiles
- uid: System.Security.Permissions.FileIOPermission.Copy*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Copy
  nameWithType: FileIOPermission.Copy
- uid: System.Security.Permissions.FileIOPermission.Equals*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Equals
  nameWithType: FileIOPermission.Equals
- uid: System.Security.Permissions.FileIOPermission.FromXml*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FromXml
  nameWithType: FileIOPermission.FromXml
- uid: System.Security.Permissions.FileIOPermission.GetHashCode*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: GetHashCode
  nameWithType: FileIOPermission.GetHashCode
- uid: System.Security.Permissions.FileIOPermission.GetPathList*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: GetPathList
  nameWithType: FileIOPermission.GetPathList
- uid: System.Security.Permissions.FileIOPermission.Intersect*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Intersect
  nameWithType: FileIOPermission.Intersect
- uid: System.Security.Permissions.FileIOPermission.IsSubsetOf*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: FileIOPermission.IsSubsetOf
- uid: System.Security.Permissions.FileIOPermission.IsUnrestricted*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: FileIOPermission.IsUnrestricted
- uid: System.Security.Permissions.FileIOPermission.SetPathList*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: SetPathList
  nameWithType: FileIOPermission.SetPathList
- uid: System.Security.Permissions.FileIOPermission.ToXml*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: ToXml
  nameWithType: FileIOPermission.ToXml
- uid: System.Security.Permissions.FileIOPermission.Union*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Union
  nameWithType: FileIOPermission.Union
