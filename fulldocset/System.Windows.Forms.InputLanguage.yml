### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.InputLanguage
  id: InputLanguage
  children:
  - System.Windows.Forms.InputLanguage.Culture
  - System.Windows.Forms.InputLanguage.CurrentInputLanguage
  - System.Windows.Forms.InputLanguage.DefaultInputLanguage
  - System.Windows.Forms.InputLanguage.Equals(System.Object)
  - System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)
  - System.Windows.Forms.InputLanguage.GetHashCode
  - System.Windows.Forms.InputLanguage.Handle
  - System.Windows.Forms.InputLanguage.InstalledInputLanguages
  - System.Windows.Forms.InputLanguage.LayoutName
  langs:
  - csharp
  name: InputLanguage
  nameWithType: InputLanguage
  fullName: System.Windows.Forms.InputLanguage
  type: Class
  summary: "Biedt methoden en velden voor het beheren van de invoertaal. Deze klasse kan niet worden overgenomen."
  remarks: "Een invoertaal is een cultuur/toetsenbord-indeling dat bepaalt hoe de fysieke sleutels op een toetsenbord toewijzen of tekenen tekens in een taal. De invoertaal is gebaseerd op een Windows-landinstelling-id, zoals die wordt geretourneerd door de functie Platform SDK `GetKeyboardLayout`. De landinstelling-id wordt ook een ingang naar een toetsenbordwaarde-indeling (HKL) genoemd.       Gebruik de `static` methoden die beschikbaar zijn in zoeken geïnstalleerd toewijzingen van het systeem en om de invoertaal voor een thread- of te wijzigen. Roep <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A>ophalen van de huidige invoertaal.</xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> Roep <xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A>voor de standaardtaal voor invoer.</xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> Roep <xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A>ophalen van de geïnstalleerde talen in dit systeem.</xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A> Nadat u een lijst met alle geïnstalleerde talen hebt, gebruikt u <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A>wijzigen van de huidige invoertaal naar een andere taal.</xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A>"
  example:
  - "The following code example gets a list of installed languages. The example requires that `textBox1` has been instantiated and that `textBox1.MultiLine` has been set to `true`.  \n  \n [!code-cpp[Classic InputLanguage Example#1](~/add/codesnippet/cpp/t-system.windows.forms.i_2_1.cpp)]\n [!code-vb[Classic InputLanguage Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.i_2_1.vb)]\n [!code-cs[Classic InputLanguage Example#1](~/add/codesnippet/csharp/t-system.windows.forms.i_2_1.cs)]  \n  \n The next example sets the default input language as the current input language. The example requires that `textBox1` has been instantiated and that `textBox1.MultiLine` has been set to `true`.  \n  \n [!code-cpp[Classic InputLanguage Example#2](~/add/codesnippet/cpp/t-system.windows.forms.i_2_2.cpp)]\n [!code-vb[Classic InputLanguage Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.i_2_2.vb)]\n [!code-cs[Classic InputLanguage Example#2](~/add/codesnippet/csharp/t-system.windows.forms.i_2_2.cs)]"
  syntax:
    content: public sealed class InputLanguage
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.Culture
  id: Culture
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: Culture
  nameWithType: InputLanguage.Culture
  fullName: System.Windows.Forms.InputLanguage.Culture
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee wordt de cultuur van de huidige invoertaal opgehaald."
  remarks: ''
  example:
  - "The following code example gets the <xref:System.Windows.Forms.InputLanguage> for the current input language. A text box displays this input language and the name of the input language.  \n  \n This code assumes that `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic InputLanguage.Culture Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_11_1.cpp)]\n [!code-cs[Classic InputLanguage.Culture Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_11_1.cs)]\n [!code-vb[Classic InputLanguage.Culture Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_11_1.vb)]"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "Een <xref:System.Globalization.CultureInfo>die staat voor de cultuur van de huidige invoertaal.</xref:System.Globalization.CultureInfo>"
  overload: System.Windows.Forms.InputLanguage.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.CurrentInputLanguage
  id: CurrentInputLanguage
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: CurrentInputLanguage
  nameWithType: InputLanguage.CurrentInputLanguage
  fullName: System.Windows.Forms.InputLanguage.CurrentInputLanguage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Opgehaald of ingesteld van de invoertaal voor de huidige thread."
  remarks: ''
  example:
  - "The following code example gets and displays the name of the current input language. This code assumes that `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic InputLanguage.CurrentInputLanguage Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_10_1.cpp)]\n [!code-cs[Classic InputLanguage.CurrentInputLanguage Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_10_1.cs)]\n [!code-vb[Classic InputLanguage.CurrentInputLanguage Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_10_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.InputLanguage CurrentInputLanguage { get; set; }
    return:
      type: System.Windows.Forms.InputLanguage
      description: "Een <xref href=&quot;System.Windows.Forms.InputLanguage&quot;> </xref> die staat voor de invoertaal voor de huidige thread."
  overload: System.Windows.Forms.InputLanguage.CurrentInputLanguage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De invoertaal wordt niet herkend door het systeem."
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.DefaultInputLanguage
  id: DefaultInputLanguage
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: DefaultInputLanguage
  nameWithType: InputLanguage.DefaultInputLanguage
  fullName: System.Windows.Forms.InputLanguage.DefaultInputLanguage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee wordt de standaardinvoertaal voor het systeem."
  remarks: ''
  example:
  - "The following code example gets the default input language and prints its name in a text box. This code assumes that `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic InputLanguage.DefaultInputLanguage Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_19_1.cpp)]\n [!code-cs[Classic InputLanguage.DefaultInputLanguage Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_19_1.cs)]\n [!code-vb[Classic InputLanguage.DefaultInputLanguage Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_19_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.InputLanguage DefaultInputLanguage { get; }
    return:
      type: System.Windows.Forms.InputLanguage
      description: "Een <xref href=&quot;System.Windows.Forms.InputLanguage&quot;> </xref> die vertegenwoordigt de standaard invoertaal voor het systeem."
  overload: System.Windows.Forms.InputLanguage.DefaultInputLanguage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: InputLanguage.Equals(Object)
  fullName: System.Windows.Forms.InputLanguage.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Geeft aan of twee invoertalen gelijk zijn."
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "De taal te testen op gelijkheid."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de twee talen gelijk zijn. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.InputLanguage.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)
  id: FromCulture(System.Globalization.CultureInfo)
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: FromCulture(CultureInfo)
  nameWithType: InputLanguage.FromCulture(CultureInfo)
  fullName: System.Windows.Forms.InputLanguage.FromCulture(CultureInfo)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retourneert de invoertaal die zijn gekoppeld aan de opgegeven cultuur."
  remarks: "De methode FromCulture wordt geselecteerd uit geïnstalleerde toetsenborden. In het bijzonder deze methode voert de volgende bewerkingen: 1.  Haalt de LCID gekoppeld `culture`.      2.  De volledige lijst met beschikbare invoer taal-id&quot;s (HKLs) ophalen uit de `GetKeyboardLayoutList` functie.      3.  Zoeken naar de HKL die overeenkomt met de LCID van `culture`, indien aanwezig.      4.  Retourneert het geïnstalleerde toetsenbord die HKL gekoppeld.      5.  Als geen toetsenbord wordt gevonden, retourneert `null`.      > [!NOTE] > De FromCulture methode nooit probeert te laden of een extra toetsenbord installeren als een nog niet is geïnstalleerd voor `culture`. Gebruik de functie Platform SDK `LoadKeyboardLayout`, voor het installeren van een extra toetsenbord."
  example:
  - "The following code example sets the default input language as the current input language.  \n  \n First, <xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> is called to get the system default language. Next, <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> is called to get the current input language. The results are printed in a text box. Then, calling <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> with the default input language changes the current input language to the default. The new current input language is displayed in a text box.  \n  \n This code assumes that `textBox1` has been instantiated.  \n  \n [!code-cs[Classic InputLanguage.FromCulture Example#1](~/add/codesnippet/csharp/91c45c32-452b-417e-9efa-_1.cs)]\n [!code-cpp[Classic InputLanguage.FromCulture Example#1](~/add/codesnippet/cpp/91c45c32-452b-417e-9efa-_1.cpp)]\n [!code-vb[Classic InputLanguage.FromCulture Example#1](~/add/codesnippet/visualbasic/91c45c32-452b-417e-9efa-_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.InputLanguage FromCulture (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De <xref:System.Globalization.CultureInfo>Hiermee worden de cultuur te converteren.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Windows.Forms.InputLanguage
      description: "Een <xref href=&quot;System.Windows.Forms.InputLanguage&quot;> </xref> die staat voor de eerder geselecteerde taal."
  overload: System.Windows.Forms.InputLanguage.FromCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: InputLanguage.GetHashCode()
  fullName: System.Windows.Forms.InputLanguage.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retourneert de hash-code voor deze invoer taal."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "De hashcode voor deze invoer taal."
  overload: System.Windows.Forms.InputLanguage.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.Handle
  id: Handle
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: Handle
  nameWithType: InputLanguage.Handle
  fullName: System.Windows.Forms.InputLanguage.Handle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee wordt de ingang voor de invoertaal."
  remarks: ''
  example:
  - "The following code example gets the current input language. Then it calls Handle to get the handle and prints the results in a text box. The example requires that `textBox1` has been instantiated.  \n  \n [!code-vb[Classic InputLanguage.Handle Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_27_1.vb)]\n [!code-cpp[Classic InputLanguage.Handle Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_27_1.cpp)]\n [!code-cs[Classic InputLanguage.Handle Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_27_1.cs)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "Een <xref:System.IntPtr>die staat voor de ingang van deze invoertaal.</xref:System.IntPtr>"
  overload: System.Windows.Forms.InputLanguage.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.InstalledInputLanguages
  id: InstalledInputLanguages
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: InstalledInputLanguages
  nameWithType: InputLanguage.InstalledInputLanguages
  fullName: System.Windows.Forms.InputLanguage.InstalledInputLanguages
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee wordt een lijst met alle geïnstalleerde invoertalen opgehaald."
  remarks: ''
  example:
  - "The following code example retrieves all the input languages installed on the computer and displays their names. The code calls InstalledInputLanguages to get the installed languages. A text box displays the list of language names.  \n  \n This code assumes that `textBox1` has been instantiated and that `textBox1.MultiLine` has been set to `true`.  \n  \n [!code-vb[Classic InputLanguage.InstalledInputLanguages Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_25_1.vb)]\n [!code-cpp[Classic InputLanguage.InstalledInputLanguages Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_25_1.cpp)]\n [!code-cs[Classic InputLanguage.InstalledInputLanguages Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_25_1.cs)]"
  syntax:
    content: public static System.Windows.Forms.InputLanguageCollection InstalledInputLanguages { get; }
    return:
      type: System.Windows.Forms.InputLanguageCollection
      description: "Een matrix van <xref href=&quot;System.Windows.Forms.InputLanguage&quot;> </xref> -objecten met daarin de invoertalen geïnstalleerd op de computer."
  overload: System.Windows.Forms.InputLanguage.InstalledInputLanguages*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.InputLanguage.LayoutName
  id: LayoutName
  parent: System.Windows.Forms.InputLanguage
  langs:
  - csharp
  name: LayoutName
  nameWithType: InputLanguage.LayoutName
  fullName: System.Windows.Forms.InputLanguage.LayoutName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee wordt de naam van de huidige toetsenbordindeling zoals deze wordt weergegeven in de landinstellingen van het besturingssysteem op de computer."
  remarks: ''
  example:
  - "The following code example gets the culture associated with the current input language and displays the culture name.  \n  \n First, <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> is called to get the current input language. Then, <xref:System.Windows.Forms.InputLanguage.Culture%2A> is called to get the culture information for this input language. Finally, <xref:System.Globalization.CultureInfo.EnglishName%2A> is retrieved and displayed in a text box.  \n  \n [!code-cs[Classic InputLanguage.LayoutName Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_30_1.cs)]\n [!code-cpp[Classic InputLanguage.LayoutName Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_30_1.cpp)]\n [!code-vb[Classic InputLanguage.LayoutName Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_30_1.vb)]"
  syntax:
    content: public string LayoutName { get; }
    return:
      type: System.String
      description: "De naam van de lay-out."
  overload: System.Windows.Forms.InputLanguage.LayoutName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.InputLanguage.Culture
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Culture
  nameWithType: InputLanguage.Culture
  fullName: System.Windows.Forms.InputLanguage.Culture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Forms.InputLanguage.CurrentInputLanguage
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: CurrentInputLanguage
  nameWithType: InputLanguage.CurrentInputLanguage
  fullName: System.Windows.Forms.InputLanguage.CurrentInputLanguage
- uid: System.Windows.Forms.InputLanguage
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguage
  nameWithType: InputLanguage
  fullName: System.Windows.Forms.InputLanguage
- uid: System.Windows.Forms.InputLanguage.DefaultInputLanguage
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: DefaultInputLanguage
  nameWithType: InputLanguage.DefaultInputLanguage
  fullName: System.Windows.Forms.InputLanguage.DefaultInputLanguage
- uid: System.Windows.Forms.InputLanguage.Equals(System.Object)
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Equals(Object)
  nameWithType: InputLanguage.Equals(Object)
  fullName: System.Windows.Forms.InputLanguage.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: FromCulture(CultureInfo)
  nameWithType: InputLanguage.FromCulture(CultureInfo)
  fullName: System.Windows.Forms.InputLanguage.FromCulture(CultureInfo)
- uid: System.Windows.Forms.InputLanguage.GetHashCode
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: GetHashCode()
  nameWithType: InputLanguage.GetHashCode()
  fullName: System.Windows.Forms.InputLanguage.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.InputLanguage.Handle
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Handle
  nameWithType: InputLanguage.Handle
  fullName: System.Windows.Forms.InputLanguage.Handle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.InputLanguage.InstalledInputLanguages
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: InstalledInputLanguages
  nameWithType: InputLanguage.InstalledInputLanguages
  fullName: System.Windows.Forms.InputLanguage.InstalledInputLanguages
- uid: System.Windows.Forms.InputLanguageCollection
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageCollection
  nameWithType: InputLanguageCollection
  fullName: System.Windows.Forms.InputLanguageCollection
- uid: System.Windows.Forms.InputLanguage.LayoutName
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: LayoutName
  nameWithType: InputLanguage.LayoutName
  fullName: System.Windows.Forms.InputLanguage.LayoutName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.InputLanguage.Culture*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Culture
  nameWithType: InputLanguage.Culture
- uid: System.Windows.Forms.InputLanguage.CurrentInputLanguage*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: CurrentInputLanguage
  nameWithType: InputLanguage.CurrentInputLanguage
- uid: System.Windows.Forms.InputLanguage.DefaultInputLanguage*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: DefaultInputLanguage
  nameWithType: InputLanguage.DefaultInputLanguage
- uid: System.Windows.Forms.InputLanguage.Equals*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Equals
  nameWithType: InputLanguage.Equals
- uid: System.Windows.Forms.InputLanguage.FromCulture*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: FromCulture
  nameWithType: InputLanguage.FromCulture
- uid: System.Windows.Forms.InputLanguage.GetHashCode*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: GetHashCode
  nameWithType: InputLanguage.GetHashCode
- uid: System.Windows.Forms.InputLanguage.Handle*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: Handle
  nameWithType: InputLanguage.Handle
- uid: System.Windows.Forms.InputLanguage.InstalledInputLanguages*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: InstalledInputLanguages
  nameWithType: InputLanguage.InstalledInputLanguages
- uid: System.Windows.Forms.InputLanguage.LayoutName*
  parent: System.Windows.Forms.InputLanguage
  isExternal: false
  name: LayoutName
  nameWithType: InputLanguage.LayoutName
