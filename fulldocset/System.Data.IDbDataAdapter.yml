### YamlMime:ManagedReference
items:
- uid: System.Data.IDbDataAdapter
  id: IDbDataAdapter
  children:
  - System.Data.IDbDataAdapter.DeleteCommand
  - System.Data.IDbDataAdapter.InsertCommand
  - System.Data.IDbDataAdapter.SelectCommand
  - System.Data.IDbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: IDbDataAdapter
  nameWithType: IDbDataAdapter
  fullName: System.Data.IDbDataAdapter
  type: Interface
  summary: "Vertegenwoordigt een reeks opdracht-gerelateerde eigenschappen die worden gebruikt voor het vervullen van de <xref href=&quot;System.Data.DataSet&quot;> </xref> en bijwerken van een gegevensbron, en wordt ge√Ømplementeerd door de .NET DataFramework dataproviders die toegang hebben tot relationele databases."
  remarks: "The IDbDataAdapter interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database. The IDbDataAdapter interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>. For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/add/includes/ajax-current-ext-md.md). For more information about implementing .NET Framework data providers, see [&#91;\\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852).  \n  \n An application does not create an instance of the IDbDataAdapter interface directly, but creates an instance of a class that inherits IDbDataAdapter and <xref:System.Data.Common.DbDataAdapter>.  \n  \n Classes that inherit IDbDataAdapter must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbDataAdapter interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter. In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter."
  example:
  - "The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \n  \n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.idbdataada_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.idbdataada_1.cs)]"
  syntax:
    content: 'public interface IDbDataAdapter : System.Data.IDataAdapter'
  implements:
  - System.Data.IDataAdapter
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van een SQL-instructie voor het verwijderen van records uit de gegevensset."
  remarks: "Tijdens de <xref:System.Data.Common.DbDataAdapter.Update%2A>, als deze eigenschap niet is ingesteld en gegevens van primaire sleutel is aanwezig in de <xref:System.Data.DataSet>, de DeleteCommand kan automatisch worden gegenereerd als u de `SelectCommand` eigenschap van een .NET Framework-gegevensprovider.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Vervolgens worden alle extra opdrachten die u instelt gegenereerd door de CommandBuilder. Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Wanneer de DeleteCommand wordt toegewezen aan een eerder gemaakte <xref:System.Data.IDbCommand>, wordt de <xref:System.Data.IDbCommand>niet is gekloond.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> De DeleteCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.IDbCommand>object.</xref:System.Data.IDbCommand>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_2_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_2_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>om records in de gegevensbron voor verwijderde rijen in de gegevensset te verwijderen.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van een SQL-instructie dat is gebruikt voor het invoegen van nieuwe records in de gegevensbron."
  remarks: "Tijdens de <xref:System.Data.Common.DbDataAdapter.Update%2A>, als deze eigenschap niet is ingesteld en gegevens van primaire sleutel is aanwezig in de <xref:System.Data.DataSet>, het object InsertCommand kan automatisch worden gegenereerd als u de `SelectCommand` eigenschap van een .NET Framework-gegevensprovider.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Vervolgens worden alle extra opdrachten die u instelt gegenereerd door de CommandBuilder. Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Wanneer InsertCommand is toegewezen aan een eerder gemaakte <xref:System.Data.IDbCommand>, wordt de <xref:System.Data.IDbCommand>niet is gekloond.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> Het object InsertCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.IDbCommand>object.</xref:System.Data.IDbCommand>      > [!NOTE] > Als de uitvoering van deze opdracht rijen retourneert, deze rijen kunnen worden toegevoegd aan de <xref:System.Data.DataSet>, afhankelijk van hoe u stelt de <xref:System.Data.IDbCommand.UpdatedRowSource%2A>eigenschap van de <xref:System.Data.IDbCommand>object.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_3_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>records invoegen in de gegevensbron voor nieuwe rijen in de gegevensset.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van een SQL-instructie dat is gebruikt om records te selecteren in de gegevensbron."
  remarks: "Wanneer de SelectCommand is toegewezen aan een eerder gemaakte <xref:System.Data.IDbCommand>, wordt de <xref:System.Data.IDbCommand>niet is gekloond.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> De SelectCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.IDbCommand>object.</xref:System.Data.IDbCommand>       Als de SelectCommand geen waarde alle rijen retourneert, er zijn geen tabellen worden toegevoegd aan de <xref:System.Data.DataSet>, en geen uitzondering gegenereerd.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_0_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_0_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> die wordt gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>om records te selecteren van gegevensbron voor de plaatsing in de gegevensset.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van een SQL-instructie dat is gebruikt voor het bijwerken van de records in de gegevensbron."
  remarks: "Tijdens de <xref:System.Data.Common.DbDataAdapter.Update%2A>, als deze eigenschap niet is ingesteld en gegevens van primaire sleutel is aanwezig in de <xref:System.Data.DataSet>, de UpdateCommand kan automatisch worden gegenereerd als u de `SelectCommand` eigenschap van een .NET Framework-gegevensprovider.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Vervolgens worden alle extra opdrachten die u instelt gegenereerd door de CommandBuilder. Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Wanneer de UpdateCommand wordt toegewezen aan een eerder gemaakte <xref:System.Data.IDbCommand>, wordt de <xref:System.Data.IDbCommand>niet is gekloond.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> De UpdateCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.IDbCommand>object.</xref:System.Data.IDbCommand>      > [!NOTE] > Als de uitvoering van deze opdracht rijen retourneert, deze rijen zijn toegevoegd aan de <xref:System.Data.DataSet>.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_1_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_1_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>records in de gegevensbron voor gewijzigde rijen in de gegevensset wilt bijwerken.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.IDbDataAdapter.DeleteCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.IDbDataAdapter.InsertCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.IDbDataAdapter.DeleteCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbDataAdapter.InsertCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
