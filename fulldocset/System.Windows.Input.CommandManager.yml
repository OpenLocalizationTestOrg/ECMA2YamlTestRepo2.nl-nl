### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.CommandManager
  id: CommandManager
  children:
  - System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandManager.CanExecuteEvent
  - System.Windows.Input.CommandManager.ExecutedEvent
  - System.Windows.Input.CommandManager.InvalidateRequerySuggested
  - System.Windows.Input.CommandManager.PreviewCanExecuteEvent
  - System.Windows.Input.CommandManager.PreviewExecutedEvent
  - System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)
  - System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)
  - System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandManager.RequerySuggested
  langs:
  - csharp
  name: CommandManager
  nameWithType: CommandManager
  fullName: System.Windows.Input.CommandManager
  type: Class
  summary: "Opdracht gerelateerde hulpprogrammamethoden die registreren <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> en <xref href=&quot;System.Windows.Input.InputBinding&quot;> </xref> objecten voor eigenaren van de klasse en opdrachten, toevoegen en verwijderen van de gebeurtenis-handlers opdracht en biedt services voor het opvragen van de status van een opdracht."
  remarks: "De CommandManager is verantwoordelijk voor het beheren van routering opdrachten.  Zie voor meer informatie over bestuurt [bestuurt overzicht](~/add/includes/ajax-current-ext-md.md).       Gebruik <xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A>registreren een <xref:System.Windows.Input.CommandBinding>naar een klasse in plaats van een exemplaar.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A>       Gebruik <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>registreren een <xref:System.Windows.Input.InputBinding>naar een klasse in plaats van een exemplaar.</xref:System.Windows.Input.InputBinding> </xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>       De <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>methode zorgt ervoor dat de CommandManager om te genereren voor de <xref:System.Windows.Input.CommandManager.RequerySuggested>gebeurtenis.</xref:System.Windows.Input.CommandManager.RequerySuggested> </xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>  De <xref:System.Windows.Input.CommandManager.RequerySuggested>gebeurtenis informeert de Opdrachtbron van een om op te vragen van de opdracht die gekoppeld aan om te bepalen is of de opdracht kan worden uitgevoerd.</xref:System.Windows.Input.CommandManager.RequerySuggested>"
  syntax:
    content: public sealed class CommandManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Voegt de opgegeven <xref href=&quot;System.Windows.Input.CanExecuteRoutedEventHandler&quot;> </xref> aan het opgegeven element."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/add/codesnippet/xaml/CommandingOverviewSnippets/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \n  \n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \n  \n And finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the AddCanExecuteHandler and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]"
  syntax:
    content: public static void AddCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Het element koppelen `handler` aan."
    - id: handler
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "De handler kan worden uitgevoerd."
  overload: System.Windows.Input.CommandManager.AddCanExecuteHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  id: AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Voegt de opgegeven <xref href=&quot;System.Windows.Input.ExecutedRoutedEventHandler&quot;> </xref> aan het opgegeven element."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/add/codesnippet/xaml/CommandingOverviewSnippets/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \n  \n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \n  \n And finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and AddExecutedHandler.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]"
  syntax:
    content: public static void AddExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Het element koppelen `handler` aan."
    - id: handler
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "De handler uitgevoerd."
  overload: System.Windows.Input.CommandManager.AddExecutedHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Voegt de opgegeven <xref href=&quot;System.Windows.Input.CanExecuteRoutedEventHandler&quot;> </xref> aan het opgegeven element."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/add/codesnippet/xaml/CommandingOverviewSnippets/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \n  \n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \n  \n Finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]"
  syntax:
    content: public static void AddPreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Het element koppelen `handler` aan."
    - id: handler
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "De handler kan worden uitgevoerd."
  overload: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  id: AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Voegt de opgegeven <xref href=&quot;System.Windows.Input.ExecutedRoutedEventHandler&quot;> </xref> aan het opgegeven element."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/add/codesnippet/xaml/CommandingOverviewSnippets/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \n  \n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \n  \n Finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]"
  syntax:
    content: public static void AddPreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Het element koppelen `handler` aan."
    - id: handler
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "De handler kan worden uitgevoerd."
  overload: System.Windows.Input.CommandManager.AddPreviewExecutedHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.CanExecuteEvent
  id: CanExecuteEvent
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: CanExecuteEvent
  nameWithType: CommandManager.CanExecuteEvent
  fullName: System.Windows.Input.CommandManager.CanExecuteEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identificeert de <xref:System.Windows.Input.CommandManager.CanExecute>gebeurtenis gekoppeld.</xref:System.Windows.Input.CommandManager.CanExecute>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent CanExecuteEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.ExecutedEvent
  id: ExecutedEvent
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: ExecutedEvent
  nameWithType: CommandManager.ExecutedEvent
  fullName: System.Windows.Input.CommandManager.ExecutedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identificeert de <xref:System.Windows.Input.CommandManager.Executed>gebeurtenis gekoppeld.</xref:System.Windows.Input.CommandManager.Executed>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent ExecutedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.InvalidateRequerySuggested
  id: InvalidateRequerySuggested
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: InvalidateRequerySuggested()
  nameWithType: CommandManager.InvalidateRequerySuggested()
  fullName: System.Windows.Input.CommandManager.InvalidateRequerySuggested()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hiermee wordt de <xref href=&quot;System.Windows.Input.CommandManager&quot;> </xref> om te genereren voor de <xref href=&quot;System.Windows.Input.CommandManager.RequerySuggested&quot;> </xref> gebeurtenis."
  remarks: "De <xref:System.Windows.Input.CommandManager>alleen besteedt aandacht aan bepaalde voorwaarden om te bepalen wanneer het doel van de opdracht is gewijzigd, zoals een wijziging in de toetsenbordfocus.</xref:System.Windows.Input.CommandManager>  In situaties waar de <xref:System.Windows.Input.CommandManager>niet voldoende herkent een wijziging in de omstandigheden die ertoe leiden een opdracht dat voor het niet mogelijk om uit te voeren, InvalidateRequerySuggested kan worden aangeroepen om af te dwingen de <xref:System.Windows.Input.CommandManager>om te genereren voor de <xref:System.Windows.Input.CommandManager.RequerySuggested>gebeurtenis.</xref:System.Windows.Input.CommandManager.RequerySuggested> </xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager>"
  example:
  - "The following example uses a <xref:System.Windows.Threading.DispatcherTimer> to periodically call InvalidateRequerySuggested to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.  \n  \n [!code-vb[InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimer)]\n [!code-cs[InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimer)]"
  syntax:
    content: public static void InvalidateRequerySuggested ();
    parameters: []
  overload: System.Windows.Input.CommandManager.InvalidateRequerySuggested*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.PreviewCanExecuteEvent
  id: PreviewCanExecuteEvent
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: PreviewCanExecuteEvent
  nameWithType: CommandManager.PreviewCanExecuteEvent
  fullName: System.Windows.Input.CommandManager.PreviewCanExecuteEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identificeert de <xref:System.Windows.Input.CommandManager.PreviewCanExecute>gebeurtenis gekoppeld.</xref:System.Windows.Input.CommandManager.PreviewCanExecute>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewCanExecuteEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.PreviewExecutedEvent
  id: PreviewExecutedEvent
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: PreviewExecutedEvent
  nameWithType: CommandManager.PreviewExecutedEvent
  fullName: System.Windows.Input.CommandManager.PreviewExecutedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identificeert de <xref:System.Windows.Input.CommandManager.PreviewExecuted>gebeurtenis gekoppeld.</xref:System.Windows.Input.CommandManager.PreviewExecuted>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewExecutedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)
  id: RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RegisterClassCommandBinding(Type,CommandBinding)
  nameWithType: CommandManager.RegisterClassCommandBinding(Type,CommandBinding)
  fullName: System.Windows.Input.CommandManager.RegisterClassCommandBinding(Type,CommandBinding)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Registreert een <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> met het opgegeven type."
  remarks: "Deze methode kan een <xref:System.Windows.Input.CommandBinding>worden gekoppeld aan een klasse in plaats daarvan dan een exemplaar van een klasse.</xref:System.Windows.Input.CommandBinding>"
  syntax:
    content: public static void RegisterClassCommandBinding (Type type, System.Windows.Input.CommandBinding commandBinding);
    parameters:
    - id: type
      type: System.Type
      description: "De klasse waarmee registreren `commandBinding`."
    - id: commandBinding
      type: System.Windows.Input.CommandBinding
      description: "De opdrachtbinding om te registreren."
  overload: System.Windows.Input.CommandManager.RegisterClassCommandBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>commandBinding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)
  id: RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RegisterClassInputBinding(Type,InputBinding)
  nameWithType: CommandManager.RegisterClassInputBinding(Type,InputBinding)
  fullName: System.Windows.Input.CommandManager.RegisterClassInputBinding(Type,InputBinding)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Registreert de opgegeven <xref href=&quot;System.Windows.Input.InputBinding&quot;> </xref> met het opgegeven type."
  remarks: "Deze methode kan een <xref:System.Windows.Input.InputBinding>worden gekoppeld aan een type in plaats van een exemplaar van een klasse.</xref:System.Windows.Input.InputBinding>"
  syntax:
    content: public static void RegisterClassInputBinding (Type type, System.Windows.Input.InputBinding inputBinding);
    parameters:
    - id: type
      type: System.Type
      description: "Het type registreren `inputBinding` met."
    - id: inputBinding
      type: System.Windows.Input.InputBinding
      description: "De invoer binding te registreren."
  overload: System.Windows.Input.CommandManager.RegisterClassInputBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>inputBinding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hiermee wordt de opgegeven <xref href=&quot;System.Windows.Input.CanExecuteRoutedEventHandler&quot;> </xref> uit het opgegeven element."
  remarks: ''
  example:
  - "The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]"
  syntax:
    content: public static void RemoveCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Het element verwijderen `handler` uit."
    - id: handler
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "De handler kan worden uitgevoerd."
  overload: System.Windows.Input.CommandManager.RemoveCanExecuteHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  id: RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hiermee wordt de opgegeven <xref href=&quot;System.Windows.Input.ExecutedRoutedEventHandler&quot;> </xref> uit het opgegeven element."
  remarks: ''
  example:
  - "The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]"
  syntax:
    content: public static void RemoveExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Het element verwijderen `handler` uit."
    - id: handler
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "De handler uitgevoerd."
  overload: System.Windows.Input.CommandManager.RemoveExecutedHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hiermee wordt de opgegeven <xref href=&quot;System.Windows.Input.CanExecuteRoutedEventHandler&quot;> </xref> uit het opgegeven element."
  remarks: ''
  example:
  - "The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]"
  syntax:
    content: public static void RemovePreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Het element verwijderen `handler` uit."
    - id: handler
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "De handler kan worden uitgevoerd."
  overload: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  id: RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hiermee wordt de opgegeven <xref href=&quot;System.Windows.Input.ExecutedRoutedEventHandler&quot;> </xref> uit het opgegeven element."
  remarks: ''
  example:
  - "The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]"
  syntax:
    content: public static void RemovePreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Het element verwijderen `handler` uit."
    - id: handler
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "De handler uitgevoerd."
  overload: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RequerySuggested
  id: RequerySuggested
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RequerySuggested
  nameWithType: CommandManager.RequerySuggested
  fullName: System.Windows.Input.CommandManager.RequerySuggested
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Deze gebeurtenis treedt op wanneer de <xref href=&quot;System.Windows.Input.CommandManager&quot;> </xref> detecteert voorwaarden die de mogelijkheid van een opdracht wordt uitgevoerd kunnen worden gewijzigd."
  remarks: "Omdat deze gebeurtenis statisch is, kan deze alleen naar de handler bevatten als een zwakke verwijzing.  Objecten die naar deze gebeurtenis luisteren dient te houden met een sterke verwijzing naar de gebeurtenis-handler om te voorkomen dat de garbage collector zijn verzameld. Dit kan worden bereikt door een persoonlijke veld hebben en het toewijzen van de handler als de waarde vóór of na het koppelen aan deze gebeurtenis."
  syntax:
    content: public static event EventHandler RequerySuggested;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Input.CanExecuteRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: CanExecuteRoutedEventHandler
  nameWithType: CanExecuteRoutedEventHandler
  fullName: System.Windows.Input.CanExecuteRoutedEventHandler
- uid: System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
- uid: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.CanExecuteEvent
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: CanExecuteEvent
  nameWithType: CommandManager.CanExecuteEvent
  fullName: System.Windows.Input.CommandManager.CanExecuteEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.CommandManager.ExecutedEvent
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: ExecutedEvent
  nameWithType: CommandManager.ExecutedEvent
  fullName: System.Windows.Input.CommandManager.ExecutedEvent
- uid: System.Windows.Input.CommandManager.InvalidateRequerySuggested
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: InvalidateRequerySuggested()
  nameWithType: CommandManager.InvalidateRequerySuggested()
  fullName: System.Windows.Input.CommandManager.InvalidateRequerySuggested()
- uid: System.Windows.Input.CommandManager.PreviewCanExecuteEvent
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: PreviewCanExecuteEvent
  nameWithType: CommandManager.PreviewCanExecuteEvent
  fullName: System.Windows.Input.CommandManager.PreviewCanExecuteEvent
- uid: System.Windows.Input.CommandManager.PreviewExecutedEvent
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: PreviewExecutedEvent
  nameWithType: CommandManager.PreviewExecutedEvent
  fullName: System.Windows.Input.CommandManager.PreviewExecutedEvent
- uid: System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RegisterClassCommandBinding(Type,CommandBinding)
  nameWithType: CommandManager.RegisterClassCommandBinding(Type,CommandBinding)
  fullName: System.Windows.Input.CommandManager.RegisterClassCommandBinding(Type,CommandBinding)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Input.CommandBinding
  parent: System.Windows.Input
  isExternal: false
  name: CommandBinding
  nameWithType: CommandBinding
  fullName: System.Windows.Input.CommandBinding
- uid: System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RegisterClassInputBinding(Type,InputBinding)
  nameWithType: CommandManager.RegisterClassInputBinding(Type,InputBinding)
  fullName: System.Windows.Input.CommandManager.RegisterClassInputBinding(Type,InputBinding)
- uid: System.Windows.Input.InputBinding
  parent: System.Windows.Input
  isExternal: false
  name: InputBinding
  nameWithType: InputBinding
  fullName: System.Windows.Input.InputBinding
- uid: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.RequerySuggested
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RequerySuggested
  nameWithType: CommandManager.RequerySuggested
  fullName: System.Windows.Input.CommandManager.RequerySuggested
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Input.CommandManager.AddCanExecuteHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddCanExecuteHandler
  nameWithType: CommandManager.AddCanExecuteHandler
- uid: System.Windows.Input.CommandManager.AddExecutedHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddExecutedHandler
  nameWithType: CommandManager.AddExecutedHandler
- uid: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddPreviewCanExecuteHandler
  nameWithType: CommandManager.AddPreviewCanExecuteHandler
- uid: System.Windows.Input.CommandManager.AddPreviewExecutedHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddPreviewExecutedHandler
  nameWithType: CommandManager.AddPreviewExecutedHandler
- uid: System.Windows.Input.CommandManager.InvalidateRequerySuggested*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: InvalidateRequerySuggested
  nameWithType: CommandManager.InvalidateRequerySuggested
- uid: System.Windows.Input.CommandManager.RegisterClassCommandBinding*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RegisterClassCommandBinding
  nameWithType: CommandManager.RegisterClassCommandBinding
- uid: System.Windows.Input.CommandManager.RegisterClassInputBinding*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RegisterClassInputBinding
  nameWithType: CommandManager.RegisterClassInputBinding
- uid: System.Windows.Input.CommandManager.RemoveCanExecuteHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemoveCanExecuteHandler
  nameWithType: CommandManager.RemoveCanExecuteHandler
- uid: System.Windows.Input.CommandManager.RemoveExecutedHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemoveExecutedHandler
  nameWithType: CommandManager.RemoveExecutedHandler
- uid: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemovePreviewCanExecuteHandler
  nameWithType: CommandManager.RemovePreviewCanExecuteHandler
- uid: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemovePreviewExecutedHandler
  nameWithType: CommandManager.RemovePreviewExecutedHandler
