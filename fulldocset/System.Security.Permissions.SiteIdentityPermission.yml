### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SiteIdentityPermission
  id: SiteIdentityPermission
  children:
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.SiteIdentityPermission.Copy
  - System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.Site
  - System.Security.Permissions.SiteIdentityPermission.ToXml
  - System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission
  fullName: System.Security.Permissions.SiteIdentityPermission
  type: Class
  summary: "Hiermee definieert u de machtiging identiteit voor de website van waaraf de code is gemaakt. Deze klasse kan niet worden overgenomen."
  remarks: "Using this class, it is possible to ensure that callers are from a specific Web site. Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SiteIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> klasse met de opgegeven <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "De status volledig beperkte van <xref:System.Security.Permissions.SiteIdentityPermission>overeenkomt met sites zonder.</xref:System.Security.Permissions.SiteIdentityPermission> Deze constructor voor consistentie met het ontwerp van andere machtigingen is opgenomen, maar is niet in de praktijk nuttig.      > [!NOTE] > In de .NET Framework-versies 1.0 en 1.1, Identiteitsmachtigingen kunnen geen hebben een <xref:System.Security.Permissions.PermissionState>machtiging statuswaarde.</xref:System.Security.Permissions.PermissionState> Beginnen met de .NET Framework versie 2.0, kunnen Identiteitsmachtigingen elke waarde van de status machtiging hebben. Dit betekent dat in de versies 2.0 en hoger, Identiteitsmachtigingen hetzelfde gedrag als de machtigingen die u implementeert de <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> Dat wil zeggen, een aanvraag voor een identiteit altijd is geslaagd, ongeacht de identiteit van de assembly, als de assembly heeft gekregen volledig vertrouwen.       Aanvragen van de Identiteitsmachtigingen zijn in de .NET Framework-versies 1.0 en 1.1, effectieve, zelfs wanneer de aanroepende assembly volledig vertrouwd. Hoewel de aanroepende assembly volledig vertrouwen heeft, mislukt een aanvraag voor een identiteit machtiging dat wil zeggen, als de assembly niet aan de gevraagde criteria voldoet. Beginnen met de .NET Framework versie 2.0, zijn verzoeken voor Identiteitsmachtigingen niet effectief als de aanroepende assembly volledig vertrouwen. Dit zorgt ervoor consistentie voor alle machtigingen, de behandeling van Identiteitsmachtigingen uitzonderlijke gevallen elimineren."
  syntax:
    content: public SiteIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Een van de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> waarden."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> state </code> parameter is geen geldige waarde van <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> klasse vertegenwoordigt de identiteit van de opgegeven site."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match."
  syntax:
    content: public SiteIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "De expressie van de naam of het jokerteken voor site."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> site </code> parameter is geen geldige tekenreeks of komt niet overeen met een geldig jokerteken sitenaam op."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Maakt en retourneert een identieke kopie van de huidige machtiging."
  remarks: "Een kopie van de machtiging vertegenwoordigt dezelfde toegang tot bronnen of dezelfde site-id als de oorspronkelijke machtiging."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Een kopie van de huidige machtiging."
  overload: System.Security.Permissions.SiteIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee reconstrueert machtiging met een opgegeven status van een XML-codering."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "De XML-codering voor het gebruik van de machtiging opnieuw."
  overload: System.Security.Permissions.SiteIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> esd </code> parameter is niet geldig machtigingselement.       - of - de <code> esd </code> versienummer van de parameter is niet geldig."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Maakt en retourneert een machtiging die is het snijpunt van de huidige machtigingen en de opgegeven."
  remarks: "Het snijpunt van twee machtigingen is een machtiging die beschrijft de websites die ze beide gemeenschappelijk beschrijven. Alleen een vraag die wordt doorgegeven zowel oorspronkelijke machtigingen geeft het snijpunt. Bijvoorbeeld, het snijpunt van een machtiging die vertegenwoordigt toegang tot www.fourthcoffee.com en één die toegang tot vertegenwoordigt *. fourthcoffee.com is een machtiging die toegang tot www.fourthcoffee.com vertegenwoordigt.       Het snijpunt van twee identieke site Identiteitsmachtigingen is dezelfde machtiging. Het snijpunt van twee verschillende (geen jokertekens) expressies is een leeg machtiging. Het snijpunt van een expressie met jokertekens en een overeenkomende site is de site. Het snijpunt van twee jokertekens expressies die overeenkomen met de langer, is meer specifieke van de twee expressies."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging voor intersect met de huidige machtiging. Deze moeten van hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging die het snijpunt van de huidige machtigingen en de opgegeven vertegenwoordigt. Deze nieuwe machtiging is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het snijpunt leeg is."
  overload: System.Security.Permissions.SiteIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee wordt bepaald of de huidige machtiging een subset van de opgegeven machtiging."
  remarks: "De huidige machtiging is een subset van de opgegeven machtiging als de huidige machtiging is opgegeven voor een site die geheel is opgenomen in de opgegeven machtiging.       De volgende tabel bevat de waarde van IsSubsetOf voor een bereik met waarden van de huidige machtigingen en de opgegeven.      | Huidige machtiging | Opgegeven machtiging | IsSubsetOf |   |------------------------|--------------------------|----------------|   | www.fourthcoffee.com | www.fourthcoffee.com | `true`|   | www.fourthcoffee.com | www.tailspintoys.com | `false`|   | www.fourthcoffee.com | *. fourthcoffee.com| `true`|   | www.fourthcoffee.com | *.com| `true`|   | *. fourthcoffee.com| www.fourthcoffee.com | `false`|   | *. fourthcoffee.com| *. fourthcoffee.com| `true`|   | *. fourthcoffee.com| *.com| `true`|   | Anything except `None`|*|`true`|   | `None`| Alles |`true`|"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging die moet worden getest voor de relatie subset. Deze machtiging moet van hetzelfde type als de huidige machtiging."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige machtiging een subset van de opgegeven machtiging is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  id: Site
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Opgehaald of ingesteld van de huidige site."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence."
  syntax:
    content: public string Site { get; set; }
    return:
      type: System.String
      description: "De huidige site."
  overload: System.Security.Permissions.SiteIdentityPermission.Site*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De identiteit van de site kan niet worden opgehaald omdat er een niet-eenduidige identiteit."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee maakt u een XML-codering van de machtigingen en de huidige status."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Een XML-codering van de machtiging, met inbegrip van eventuele statusgegevens."
  overload: System.Security.Permissions.SiteIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee maakt u een machtiging die is de vereniging van de huidige machtigingen en de opgegeven."
  remarks: "The result of a call to Union is a permission that represents all the sites represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to \\*.fourthcoffee.com.  \n  \n The union of a permission and `null` is the permission that is not `null`. The union of a permission and a subset of that permission is the permission that contains the subset. Any other combination results in an <xref:System.ArgumentException> being thrown. For example, the union of the site identity www.fourthcoffee.com and the site identity www.tailspintoys.com results in an exception because neither is a subset of the other."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Een machtiging te combineren met de huidige machtiging. Deze moeten van hetzelfde type als de huidige machtiging."
    return:
      type: System.Security.IPermission
      description: "Een nieuwe machtiging die de samenvoeging van de huidige machtigingen en de opgegeven vertegenwoordigt."
  overload: System.Security.Permissions.SiteIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> target </code> parameter is niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is niet van hetzelfde type als de huidige machtiging.       - of - de machtigingen niet gelijk zijn en één is niet een subset van de andere."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission.SiteIdentityPermission
- uid: System.Security.Permissions.SiteIdentityPermission.Copy*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: SiteIdentityPermission.Copy
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: SiteIdentityPermission.FromXml
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: SiteIdentityPermission.Intersect
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: SiteIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.SiteIdentityPermission.Site*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: SiteIdentityPermission.ToXml
- uid: System.Security.Permissions.SiteIdentityPermission.Union*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union
  nameWithType: SiteIdentityPermission.Union
