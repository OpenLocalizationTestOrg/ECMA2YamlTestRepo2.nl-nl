### YamlMime:ManagedReference
items:
- uid: System.Numerics.Vector2
  id: Vector2
  children:
  - System.Numerics.Vector2.#ctor(System.Single)
  - System.Numerics.Vector2.#ctor(System.Single,System.Single)
  - System.Numerics.Vector2.Abs(System.Numerics.Vector2)
  - System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.CopyTo(System.Single[])
  - System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)
  - System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Equals(System.Numerics.Vector2)
  - System.Numerics.Vector2.Equals(System.Object)
  - System.Numerics.Vector2.GetHashCode
  - System.Numerics.Vector2.Length
  - System.Numerics.Vector2.LengthSquared
  - System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)
  - System.Numerics.Vector2.Negate(System.Numerics.Vector2)
  - System.Numerics.Vector2.Normalize(System.Numerics.Vector2)
  - System.Numerics.Vector2.One
  - System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)
  - System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)
  - System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.ToString
  - System.Numerics.Vector2.ToString(System.String)
  - System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  - System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  - System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  - System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  - System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  - System.Numerics.Vector2.UnitX
  - System.Numerics.Vector2.UnitY
  - System.Numerics.Vector2.X
  - System.Numerics.Vector2.Y
  - System.Numerics.Vector2.Zero
  langs:
  - csharp
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
  type: Struct
  summary: "Hiermee geeft u een vector met twee enkele precisie drijvende-kommawaarden."
  remarks: "De structuur Vector2 biedt ondersteuning voor hardwareversnelling."
  syntax:
    content: 'public struct Vector2 : IEquatable<System.Numerics.Vector2>, IFormattable'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Vector2>
  - System.IFormattable
  platform:
  - net462
- uid: System.Numerics.Vector2.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Vector2(Single)
  nameWithType: Vector2.Vector2(Single)
  fullName: System.Numerics.Vector2.Vector2(Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Maakt een nieuw <xref href=&quot;System.Numerics.Vector2&quot;> </xref> object waarvan de twee elementen dezelfde waarde hebben."
  syntax:
    content: public Vector2 (float value);
    parameters:
    - id: value
      type: System.Single
      description: "De waarde toewijzen aan beide elementen."
  overload: System.Numerics.Vector2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Vector2(Single,Single)
  nameWithType: Vector2.Vector2(Single,Single)
  fullName: System.Numerics.Vector2.Vector2(Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Maakt een vector waarvan de elementen de opgegeven waarden hebben."
  syntax:
    content: public Vector2 (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "De waarde toewijzen aan de <xref href=&quot;System.Numerics.Vector2.X&quot;> </xref> veld."
    - id: y
      type: System.Single
      description: "De waarde toewijzen aan de <xref href=&quot;System.Numerics.Vector2.Y&quot;> </xref> veld."
  overload: System.Numerics.Vector2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Abs(System.Numerics.Vector2)
  id: Abs(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Abs(Vector2)
  nameWithType: Vector2.Abs(Vector2)
  fullName: System.Numerics.Vector2.Abs(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een vector waarvan de elementen de absolute waarden van elk van de opgegeven vector elementen zijn."
  syntax:
    content: public static System.Numerics.Vector2 Abs (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Een vector."
    return:
      type: System.Numerics.Vector2
      description: "De absolute waarde vector."
  overload: System.Numerics.Vector2.Abs*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Add(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Add(Vector2,Vector2)
  nameWithType: Vector2.Add(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Add(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Twee vectoren opgeteld."
  syntax:
    content: public static System.Numerics.Vector2 Add (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector om toe te voegen."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector om toe te voegen."
    return:
      type: System.Numerics.Vector2
      description: "De opgetelde vector."
  overload: System.Numerics.Vector2.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Clamp(Vector2,Vector2,Vector2)
  nameWithType: Vector2.Clamp(Vector2,Vector2,Vector2)
  fullName: System.Numerics.Vector2.Clamp(Vector2,Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Een vector tussen een minimale en maximale waarde is beperkt."
  syntax:
    content: public static System.Numerics.Vector2 Clamp (System.Numerics.Vector2 value1, System.Numerics.Vector2 min, System.Numerics.Vector2 max);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "De vector te beperken."
    - id: min
      type: System.Numerics.Vector2
      description: "De minimumwaarde."
    - id: max
      type: System.Numerics.Vector2
      description: "De maximumwaarde."
    return:
      type: System.Numerics.Vector2
      description: "De beperkte vector."
  overload: System.Numerics.Vector2.Clamp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.CopyTo(System.Single[])
  id: CopyTo(System.Single[])
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: CopyTo(Single[])
  nameWithType: Vector2.CopyTo(Single[])
  fullName: System.Numerics.Vector2.CopyTo(Single[])
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "De elementen van de vector kopieert naar een opgegeven matrix."
  remarks: '`array` must have at least two elements. The method copies the vector''s elements starting at index 0.'
  syntax:
    content: public void CopyTo (float[] array);
    parameters:
    - id: array
      type: System.Single[]
      description: "De doelmatrix."
  overload: System.Numerics.Vector2.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het aantal elementen in de huidige sessie is groter dan in de matrix."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>is multidimensionaal."
  platform:
  - net462
- uid: System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)
  id: CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: CopyTo(Single[],Int32)
  nameWithType: Vector2.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector2.CopyTo(Single[],Int32)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee kopieert u de elementen van de vector voor een opgegeven matrix beginnen bij de positie van een opgegeven index."
  remarks: '`array`moet een voldoende aantal elementen voor de twee vectorelementen hebben. Met andere woorden, elementen `index` en `index` + 1 moet al bestaan `array`.'
  syntax:
    content: public void CopyTo (float[] array, int index);
    parameters:
    - id: array
      type: System.Single[]
      description: "De doelmatrix."
    - id: index
      type: System.Int32
      description: "De index waarop u wilt kopiëren van het eerste element van de vector."
  overload: System.Numerics.Vector2.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het aantal elementen in de huidige sessie is groter dan in de matrix."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>is kleiner dan nul.       - of - <code>index</code> is groter dan of gelijk zijn aan de matrixlengte."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>is multidimensionaal."
  platform:
  - net462
- uid: System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Distance(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Distance(Vector2,Vector2)
  nameWithType: Vector2.Distance(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Distance(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Berekent de Euclidean afstand tussen de twee opgegeven punten."
  syntax:
    content: public static float Distance (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Het eerste punt."
    - id: value2
      type: System.Numerics.Vector2
      description: "Het tweede punt."
    return:
      type: System.Single
      description: "De afstand."
  overload: System.Numerics.Vector2.Distance*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)
  id: DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: DistanceSquared(Vector2,Vector2)
  nameWithType: Vector2.DistanceSquared(Vector2,Vector2)
  fullName: System.Numerics.Vector2.DistanceSquared(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert de Euclidean afstand kwadraat tussen twee opgegeven punten."
  syntax:
    content: public static float DistanceSquared (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Het eerste punt."
    - id: value2
      type: System.Numerics.Vector2
      description: "Het tweede punt."
    return:
      type: System.Single
      description: "De afstand kwadraat."
  overload: System.Numerics.Vector2.DistanceSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Divide(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Divide(Vector2,Vector2)
  nameWithType: Vector2.Divide(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Divide(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "De eerste vector delen door het tweede."
  syntax:
    content: public static System.Numerics.Vector2 Divide (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector."
    return:
      type: System.Numerics.Vector2
      description: "De vector ten gevolge van de afdeling."
  overload: System.Numerics.Vector2.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)
  id: Divide(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Divide(Vector2,Single)
  nameWithType: Vector2.Divide(Vector2,Single)
  fullName: System.Numerics.Vector2.Divide(Vector2,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "De opgegeven vector delen door een bepaalde scalaire waarde."
  syntax:
    content: public static System.Numerics.Vector2 Divide (System.Numerics.Vector2 left, float divisor);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De vector."
    - id: divisor
      type: System.Single
      description: "De scalaire waarde."
    return:
      type: System.Numerics.Vector2
      description: "De vector die het resultaat van de afdeling."
  overload: System.Numerics.Vector2.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Dot(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Dot(Vector2,Vector2)
  nameWithType: Vector2.Dot(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Dot(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert het product punt van twee vectoren."
  syntax:
    content: public static float Dot (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: value2
      type: System.Numerics.Vector2
      description: "De tweede vector."
    return:
      type: System.Single
      description: "De product-punt."
  overload: System.Numerics.Vector2.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Equals(System.Numerics.Vector2)
  id: Equals(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Equals(Vector2)
  nameWithType: Vector2.Equals(Vector2)
  fullName: System.Numerics.Vector2.Equals(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een waarde die aangeeft of dit exemplaar en een andere vector gelijk zijn."
  remarks: "Er zijn twee vectoren gelijk als hun <xref:System.Numerics.Vector2>en <xref:System.Numerics.Vector2>elementen zijn gelijk.</xref:System.Numerics.Vector2> </xref:System.Numerics.Vector2>"
  syntax:
    content: public bool Equals (System.Numerics.Vector2 other);
    parameters:
    - id: other
      type: System.Numerics.Vector2
      description: "De andere vector."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de twee vectoren gelijk zijn. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Vector2.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Vector2.Equals(Object)
  fullName: System.Numerics.Vector2.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een waarde die aangeeft of dit exemplaar en een opgegeven object gelijk zijn."
  remarks: "Het huidige exemplaar en `obj` gelijk zijn als `obj` is een <xref:System.Numerics.Vector2>object en hun <xref:System.Numerics.Vector2.X>en <xref:System.Numerics.Vector2.Y>elementen zijn gelijk.</xref:System.Numerics.Vector2.Y> </xref:System.Numerics.Vector2.X> </xref:System.Numerics.Vector2>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object dat moet worden vergeleken met het huidige exemplaar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het huidige exemplaar en <code> obj </code> zijn gelijk zijn, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;> </xref>. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector2.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Vector2.GetHashCode()
  fullName: System.Numerics.Vector2.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert de hash-code voor dit exemplaar."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "De hash-code."
  overload: System.Numerics.Vector2.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Length
  id: Length
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Length()
  nameWithType: Vector2.Length()
  fullName: System.Numerics.Vector2.Length()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert de lengte van de vector."
  syntax:
    content: public float Length ();
    parameters: []
    return:
      type: System.Single
      description: "De lengte van de vector."
  overload: System.Numerics.Vector2.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.LengthSquared
  id: LengthSquared
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: LengthSquared()
  nameWithType: Vector2.LengthSquared()
  fullName: System.Numerics.Vector2.LengthSquared()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert de lengte van de vector kwadraat."
  remarks: "Deze bewerking biedt betere prestaties dan een aanroep van de <xref:System.Numerics.Vector2.Length%2A>methode.</xref:System.Numerics.Vector2.Length%2A>"
  syntax:
    content: public float LengthSquared ();
    parameters: []
    return:
      type: System.Single
      description: "De lengte van de vector kwadraat."
  overload: System.Numerics.Vector2.LengthSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  id: Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Lerp(Vector2,Vector2,Single)
  nameWithType: Vector2.Lerp(Vector2,Vector2,Single)
  fullName: System.Numerics.Vector2.Lerp(Vector2,Vector2,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Voert een lineaire interpolatie tussen twee vectoren op basis van het opgegeven gewicht."
  syntax:
    content: public static System.Numerics.Vector2 Lerp (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2, float amount);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: value2
      type: System.Numerics.Vector2
      description: "De tweede vector."
    - id: amount
      type: System.Single
      description: "Een waarde tussen 0 en 1 het gewicht van geeft `value2`."
    return:
      type: System.Numerics.Vector2
      description: "De geïnterpoleerde vector."
  overload: System.Numerics.Vector2.Lerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Max(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Max(Vector2,Vector2)
  nameWithType: Vector2.Max(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Max(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een vector waarvan de elementen het maximum van elk van de paren van elementen in de twee opgegeven vectoren zijn."
  syntax:
    content: public static System.Numerics.Vector2 Max (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: value2
      type: System.Numerics.Vector2
      description: "De tweede vector."
    return:
      type: System.Numerics.Vector2
      description: "De gemaximaliseerd vector."
  overload: System.Numerics.Vector2.Max*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Min(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Min(Vector2,Vector2)
  nameWithType: Vector2.Min(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Min(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een vector waarvan de elementen het minimum van elk van de paren van elementen in de twee opgegeven vectoren zijn."
  syntax:
    content: public static System.Numerics.Vector2 Min (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: value2
      type: System.Numerics.Vector2
      description: "De tweede vector."
    return:
      type: System.Numerics.Vector2
      description: "De vector geminimaliseerd."
  overload: System.Numerics.Vector2.Min*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Multiply(Vector2,Vector2)
  nameWithType: Vector2.Multiply(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Multiply(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Twee vectoren vermenigvuldigen samen."
  syntax:
    content: public static System.Numerics.Vector2 Multiply (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector."
    return:
      type: System.Numerics.Vector2
      description: "De product-vector."
  overload: System.Numerics.Vector2.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)
  id: Multiply(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Multiply(Vector2,Single)
  nameWithType: Vector2.Multiply(Vector2,Single)
  fullName: System.Numerics.Vector2.Multiply(Vector2,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Een vector vermenigvuldigen door een opgegeven scalaire."
  syntax:
    content: public static System.Numerics.Vector2 Multiply (System.Numerics.Vector2 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De vector wilt vermenigvuldigen."
    - id: right
      type: System.Single
      description: "De scalaire waarde."
    return:
      type: System.Numerics.Vector2
      description: "De schaal vector."
  overload: System.Numerics.Vector2.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)
  id: Multiply(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Multiply(Single,Vector2)
  nameWithType: Vector2.Multiply(Single,Vector2)
  fullName: System.Numerics.Vector2.Multiply(Single,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Een scalaire waarde vermenigvuldigd met een opgegeven vector."
  syntax:
    content: public static System.Numerics.Vector2 Multiply (float left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Single
      description: "De schaal waarde."
    - id: right
      type: System.Numerics.Vector2
      description: "De vector."
    return:
      type: System.Numerics.Vector2
      description: "De schaal vector."
  overload: System.Numerics.Vector2.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Negate(System.Numerics.Vector2)
  id: Negate(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Negate(Vector2)
  nameWithType: Vector2.Negate(Vector2)
  fullName: System.Numerics.Vector2.Negate(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Een opgegeven vector genegeerd."
  syntax:
    content: public static System.Numerics.Vector2 Negate (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "De vector voor een instructie."
    return:
      type: System.Numerics.Vector2
      description: "De genegeerde vector."
  overload: System.Numerics.Vector2.Negate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Normalize(System.Numerics.Vector2)
  id: Normalize(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Normalize(Vector2)
  nameWithType: Vector2.Normalize(Vector2)
  fullName: System.Numerics.Vector2.Normalize(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een vector met dezelfde richting als de opgegeven vector, maar met een lengte van een."
  syntax:
    content: public static System.Numerics.Vector2 Normalize (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "De vector normaliseren."
    return:
      type: System.Numerics.Vector2
      description: "De genormaliseerde vector."
  overload: System.Numerics.Vector2.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.One
  id: One
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: One
  nameWithType: Vector2.One
  fullName: System.Numerics.Vector2.One
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee haalt u een vector waarvan de elementen 2 gelijk zijn aan één zijn."
  syntax:
    content: public static System.Numerics.Vector2 One { get; }
    return:
      type: System.Numerics.Vector2
      description: "Een vector waarvan de twee elementen gelijk zijn aan één zijn (dat wil zeggen, wordt de vector `(1,1)`."
  overload: System.Numerics.Vector2.One*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Addition(Vector2,Vector2)
  nameWithType: Vector2.op_Addition(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Addition(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Twee vectoren opgeteld."
  remarks: "De methode toevoeging definieert de optelling voor <xref:System.Numerics.Vector2>objecten.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Addition (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector om toe te voegen."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector om toe te voegen."
    return:
      type: System.Numerics.Vector2
      description: "De opgetelde vector."
  overload: System.Numerics.Vector2.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Division(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Division(Vector2,Vector2)
  nameWithType: Vector2.op_Division(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Division(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "De eerste vector delen door het tweede."
  remarks: "De methode deling definieert de deling-bewerking voor <xref:System.Numerics.Vector2>objecten.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Division (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector."
    return:
      type: System.Numerics.Vector2
      description: "De vector die het resultaat van de deling van <code> left </code> door <code> right </code>."
  overload: System.Numerics.Vector2.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)
  id: op_Division(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Division(Vector2,Single)
  nameWithType: Vector2.op_Division(Vector2,Single)
  fullName: System.Numerics.Vector2.op_Division(Vector2,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "De opgegeven vector delen door een bepaalde scalaire waarde."
  remarks: "De methode deling definieert de deling-bewerking voor <xref:System.Numerics.Vector2>objecten.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Division (System.Numerics.Vector2 value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "De vector."
    - id: value2
      type: System.Single
      description: "De scalaire waarde."
    return:
      type: System.Numerics.Vector2
      description: "Het resultaat van de deling."
  overload: System.Numerics.Vector2.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Equality(Vector2,Vector2)
  nameWithType: Vector2.op_Equality(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Equality(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een waarde die aangeeft of elk paar van elementen in de twee opgegeven vectoren gelijk is."
  remarks: "Twee <xref:System.Numerics.Vector2>objecten zijn gelijk als elke waarde in `left` gelijk is aan de overeenkomstige waarde in `right`.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static bool op_Equality (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector moet worden vergeleken."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector om te vergelijken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector2.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Inequality(Vector2,Vector2)
  nameWithType: Vector2.op_Inequality(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Inequality(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een waarde die aangeeft of twee opgegeven vectoren niet gelijk zijn."
  syntax:
    content: public static bool op_Inequality (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector moet worden vergeleken."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector om te vergelijken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector2.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Multiply(Vector2,Vector2)
  nameWithType: Vector2.op_Multiply(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Multiply(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Twee vectoren vermenigvuldigen samen."
  remarks: "De vermenigvuldigen methode definieert u de vermenigvuldiging voor <xref:System.Numerics.Vector2>objecten.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Multiply (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector."
    return:
      type: System.Numerics.Vector2
      description: "De product-vector."
  overload: System.Numerics.Vector2.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)
  id: op_Multiply(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Multiply(Vector2,Single)
  nameWithType: Vector2.op_Multiply(Vector2,Single)
  fullName: System.Numerics.Vector2.op_Multiply(Vector2,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Veelvouden de opgegeven vector door de opgegeven scalaire waarde."
  remarks: "De <xref:System.Numerics.Vector2.op_Multiply%2A>methode definieert de vermenigvuldiging voor <xref:System.Numerics.Vector2>objecten.</xref:System.Numerics.Vector2> </xref:System.Numerics.Vector2.op_Multiply%2A>"
  syntax:
    content: public static System.Numerics.Vector2 op_Multiply (System.Numerics.Vector2 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De vector."
    - id: right
      type: System.Single
      description: "De scalaire waarde."
    return:
      type: System.Numerics.Vector2
      description: "De schaal vector."
  overload: System.Numerics.Vector2.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)
  id: op_Multiply(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Multiply(Single,Vector2)
  nameWithType: Vector2.op_Multiply(Single,Vector2)
  fullName: System.Numerics.Vector2.op_Multiply(Single,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Veelvouden scalaire waarde door de opgegeven vector."
  remarks: "De <xref:System.Numerics.Vector2.op_Multiply%2A>methode definieert de vermenigvuldiging voor <xref:System.Numerics.Vector2>objecten.</xref:System.Numerics.Vector2> </xref:System.Numerics.Vector2.op_Multiply%2A>"
  syntax:
    content: public static System.Numerics.Vector2 op_Multiply (float left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Single
      description: "De vector."
    - id: right
      type: System.Numerics.Vector2
      description: "De scalaire waarde."
    return:
      type: System.Numerics.Vector2
      description: "De schaal vector."
  overload: System.Numerics.Vector2.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Subtraction(Vector2,Vector2)
  nameWithType: Vector2.op_Subtraction(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Subtraction(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee verwijdert u de tweede vector van de eerste."
  remarks: "De methode aftrekken definieert u de bewerking aftrekken voor <xref:System.Numerics.Vector2>objecten.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Subtraction (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector."
    return:
      type: System.Numerics.Vector2
      description: "De vector die het resultaat is van een af te trekken <code> right </code> van <code> left </code>."
  overload: System.Numerics.Vector2.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)
  id: op_UnaryNegation(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_UnaryNegation(Vector2)
  nameWithType: Vector2.op_UnaryNegation(Vector2)
  fullName: System.Numerics.Vector2.op_UnaryNegation(Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "De opgegeven vector genegeerd."
  remarks: "De methode UnaryNegation definieert de negatie monadische bewerking voor <xref:System.Numerics.Vector2>objecten.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_UnaryNegation (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "De vector voor een instructie."
    return:
      type: System.Numerics.Vector2
      description: "De genegeerde vector."
  overload: System.Numerics.Vector2.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Reflect(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Reflect(Vector2,Vector2)
  nameWithType: Vector2.Reflect(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Reflect(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert de licentierapporten met vector uit een oppervlak dat de opgegeven normale heeft."
  syntax:
    content: public static System.Numerics.Vector2 Reflect (System.Numerics.Vector2 vector, System.Numerics.Vector2 normal);
    parameters:
    - id: vector
      type: System.Numerics.Vector2
      description: "De bronvector."
    - id: normal
      type: System.Numerics.Vector2
      description: "De normale van het oppervlak uitschakelen worden doorgevoerd."
    return:
      type: System.Numerics.Vector2
      description: "De gereflecteerde vector."
  overload: System.Numerics.Vector2.Reflect*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)
  id: SquareRoot(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: SquareRoot(Vector2)
  nameWithType: Vector2.SquareRoot(Vector2)
  fullName: System.Numerics.Vector2.SquareRoot(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een vector waarvan de elementen de vierkantswortel van elk van de elementen van een opgegeven vector zijn."
  syntax:
    content: public static System.Numerics.Vector2 SquareRoot (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Een vector."
    return:
      type: System.Numerics.Vector2
      description: "De vierkantswortel vector."
  overload: System.Numerics.Vector2.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Subtract(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Subtract(Vector2,Vector2)
  nameWithType: Vector2.Subtract(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Subtract(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee verwijdert u de tweede vector van de eerste."
  syntax:
    content: public static System.Numerics.Vector2 Subtract (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "De eerste vector."
    - id: right
      type: System.Numerics.Vector2
      description: "De tweede vector."
    return:
      type: System.Numerics.Vector2
      description: "De vector verschil."
  overload: System.Numerics.Vector2.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.ToString
  id: ToString
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: ToString()
  nameWithType: Vector2.ToString()
  fullName: System.Numerics.Vector2.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert de tekenreeksweergave van het huidige exemplaar van het gebruik van standaardopmaak."
  remarks: "Deze methode retourneert een tekenreeks waarin elk element van de vector is geformatteerd met het gebruik van de tekenreeks &quot;G&quot;-notatie (standaard) en de opmaak conventies van de cultuur van de huidige thread. De &quot;\\<&quot; en &quot; > &quot; tekens worden gebruikt om te beginnen en eindigen van de tekenreeks en de huidige cultuur <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>eigenschap gevolgd door een spatie wordt gebruikt voor het scheiden van elk element.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "De tekenreeksweergave van het huidige exemplaar."
  overload: System.Numerics.Vector2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: ToString(String)
  nameWithType: Vector2.ToString(String)
  fullName: System.Numerics.Vector2.ToString(String)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert de tekenreeksweergave van het huidige exemplaar van de opgegeven tekenreeks wordt gebruikt om afzonderlijke elementen."
  remarks: "Deze methode retourneert een tekenreeks waarin elk element van de vector is geformatteerd met `format` en de huidige cultuur opmaak van overeenkomsten. De &quot;\\<&quot; en &quot; > &quot; tekens worden gebruikt om te beginnen en eindigen van de tekenreeks en de huidige cultuur <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>eigenschap gevolgd door een spatie wordt gebruikt voor het scheiden van elk element.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: "Een [standaard](~/add/includes/ajax-current-ext-md.md) of [tekenreeks met aangepaste numerieke indeling](~/add/includes/ajax-current-ext-md.md) die de indeling van afzonderlijke elementen definieert."
    return:
      type: System.String
      description: "De tekenreeksweergave van het huidige exemplaar."
  overload: System.Numerics.Vector2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: ToString(String,IFormatProvider)
  nameWithType: Vector2.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector2.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert de tekenreeksweergave van het huidige exemplaar van de opgegeven tekenreeks wordt gebruikt om afzonderlijke elementen en de provider van de opgegeven indeling voor het definiëren van cultuur-specifieke opmaak."
  remarks: "Deze methode retourneert een tekenreeks waarin elk element van de vector is geformatteerd met `format` en `formatProvider`. De &quot;\\<&quot; en &quot; > &quot; tekens worden gebruikt om te beginnen en eindigen van de tekenreeks en de indeling van de provider <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>eigenschap gevolgd door een spatie is gebruikt voor het scheiden van elk element.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format, IFormatProvider formatProvider);
    parameters:
    - id: format
      type: System.String
      description: "Een [standaard](~/add/includes/ajax-current-ext-md.md) of [tekenreeks met aangepaste numerieke indeling](~/add/includes/ajax-current-ext-md.md) die de indeling van afzonderlijke elementen definieert."
    - id: formatProvider
      type: System.IFormatProvider
      description: "Een provider van het type indeling waaruit cultuur-specifieke opmaak gegevens."
    return:
      type: System.String
      description: "De tekenreeksweergave van het huidige exemplaar."
  overload: System.Numerics.Vector2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  id: Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Transform(Vector2,Matrix3x2)
  nameWithType: Vector2.Transform(Vector2,Matrix3x2)
  fullName: System.Numerics.Vector2.Transform(Vector2,Matrix3x2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee transformeert u een vector door een opgegeven 3 x 2-matrix."
  syntax:
    content: public static System.Numerics.Vector2 Transform (System.Numerics.Vector2 position, System.Numerics.Matrix3x2 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector2
      description: "De vector te transformeren."
    - id: matrix
      type: System.Numerics.Matrix3x2
      description: "De transformatiematrix."
    return:
      type: System.Numerics.Vector2
      description: "De getransformeerde vector."
  overload: System.Numerics.Vector2.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Transform(Vector2,Matrix4x4)
  nameWithType: Vector2.Transform(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector2.Transform(Vector2,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee transformeert u een vector door een opgegeven 4 x 4-matrix."
  syntax:
    content: public static System.Numerics.Vector2 Transform (System.Numerics.Vector2 position, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector2
      description: "De vector te transformeren."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "De transformatiematrix."
    return:
      type: System.Numerics.Vector2
      description: "De getransformeerde vector."
  overload: System.Numerics.Vector2.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Transform(Vector2,Quaternion)
  nameWithType: Vector2.Transform(Vector2,Quaternion)
  fullName: System.Numerics.Vector2.Transform(Vector2,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee transformeert u een vector door de opgegeven waarde voor Quaternion."
  syntax:
    content: public static System.Numerics.Vector2 Transform (System.Numerics.Vector2 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "De vector moet worden gedraaid."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "De draaihoek om toe te passen."
    return:
      type: System.Numerics.Vector2
      description: "De getransformeerde vector."
  overload: System.Numerics.Vector2.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  id: TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: TransformNormal(Vector2,Matrix3x2)
  nameWithType: Vector2.TransformNormal(Vector2,Matrix3x2)
  fullName: System.Numerics.Vector2.TransformNormal(Vector2,Matrix3x2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee transformeert u een normale vector door de opgegeven 3 x 2-matrix."
  syntax:
    content: public static System.Numerics.Vector2 TransformNormal (System.Numerics.Vector2 normal, System.Numerics.Matrix3x2 matrix);
    parameters:
    - id: normal
      type: System.Numerics.Vector2
      description: "De bronvector."
    - id: matrix
      type: System.Numerics.Matrix3x2
      description: "De matrix."
    return:
      type: System.Numerics.Vector2
      description: "De getransformeerde vector."
  overload: System.Numerics.Vector2.TransformNormal*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  id: TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: TransformNormal(Vector2,Matrix4x4)
  nameWithType: Vector2.TransformNormal(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector2.TransformNormal(Vector2,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee transformeert u een normale vector door de opgegeven 4 x 4-matrix."
  syntax:
    content: public static System.Numerics.Vector2 TransformNormal (System.Numerics.Vector2 normal, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: normal
      type: System.Numerics.Vector2
      description: "De bronvector."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "De matrix."
    return:
      type: System.Numerics.Vector2
      description: "De getransformeerde vector."
  overload: System.Numerics.Vector2.TransformNormal*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.UnitX
  id: UnitX
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: UnitX
  nameWithType: Vector2.UnitX
  fullName: System.Numerics.Vector2.UnitX
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee haalt u de vector (1,0)."
  syntax:
    content: public static System.Numerics.Vector2 UnitX { get; }
    return:
      type: System.Numerics.Vector2
      description: "De vector `(1,0)`."
  overload: System.Numerics.Vector2.UnitX*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.UnitY
  id: UnitY
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: UnitY
  nameWithType: Vector2.UnitY
  fullName: System.Numerics.Vector2.UnitY
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hiermee haalt u de vector (0,1)."
  syntax:
    content: public static System.Numerics.Vector2 UnitY { get; }
    return:
      type: System.Numerics.Vector2
      description: "De vector `(0,1)`."
  overload: System.Numerics.Vector2.UnitY*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.X
  id: X
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: X
  nameWithType: Vector2.X
  fullName: System.Numerics.Vector2.X
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "De X-component van de vector."
  syntax:
    content: public float X;
    return:
      type: System.Single
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Y
  id: Y
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Y
  nameWithType: Vector2.Y
  fullName: System.Numerics.Vector2.Y
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "De Y-component van de vector."
  syntax:
    content: public float Y;
    return:
      type: System.Single
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Zero
  id: Zero
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Zero
  nameWithType: Vector2.Zero
  fullName: System.Numerics.Vector2.Zero
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Retourneert een vector waarvan de elementen 2 gelijk aan nul zijn."
  syntax:
    content: public static System.Numerics.Vector2 Zero { get; }
    return:
      type: System.Numerics.Vector2
      description: "Een vector waarvan de twee elementen gelijk aan nul zijn (dat wil zeggen, wordt de vector `(0,0)`."
  overload: System.Numerics.Vector2.Zero*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.RankException
  isExternal: true
  name: System.RankException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Numerics.Vector2.#ctor(System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Vector2(Single)
  nameWithType: Vector2.Vector2(Single)
  fullName: System.Numerics.Vector2.Vector2(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Vector2.#ctor(System.Single,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Vector2(Single,Single)
  nameWithType: Vector2.Vector2(Single,Single)
  fullName: System.Numerics.Vector2.Vector2(Single,Single)
- uid: System.Numerics.Vector2.Abs(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Abs(Vector2)
  nameWithType: Vector2.Abs(Vector2)
  fullName: System.Numerics.Vector2.Abs(Vector2)
- uid: System.Numerics.Vector2
  parent: System.Numerics
  isExternal: false
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Add(Vector2,Vector2)
  nameWithType: Vector2.Add(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Add(Vector2,Vector2)
- uid: System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Clamp(Vector2,Vector2,Vector2)
  nameWithType: Vector2.Clamp(Vector2,Vector2,Vector2)
  fullName: System.Numerics.Vector2.Clamp(Vector2,Vector2,Vector2)
- uid: System.Numerics.Vector2.CopyTo(System.Single[])
  parent: System.Numerics.Vector2
  isExternal: false
  name: CopyTo(Single[])
  nameWithType: Vector2.CopyTo(Single[])
  fullName: System.Numerics.Vector2.CopyTo(Single[])
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector2
  isExternal: false
  name: CopyTo(Single[],Int32)
  nameWithType: Vector2.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector2.CopyTo(Single[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Distance(Vector2,Vector2)
  nameWithType: Vector2.Distance(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Distance(Vector2,Vector2)
- uid: System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: DistanceSquared(Vector2,Vector2)
  nameWithType: Vector2.DistanceSquared(Vector2,Vector2)
  fullName: System.Numerics.Vector2.DistanceSquared(Vector2,Vector2)
- uid: System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Divide(Vector2,Vector2)
  nameWithType: Vector2.Divide(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Divide(Vector2,Vector2)
- uid: System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Divide(Vector2,Single)
  nameWithType: Vector2.Divide(Vector2,Single)
  fullName: System.Numerics.Vector2.Divide(Vector2,Single)
- uid: System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Dot(Vector2,Vector2)
  nameWithType: Vector2.Dot(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Dot(Vector2,Vector2)
- uid: System.Numerics.Vector2.Equals(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Equals(Vector2)
  nameWithType: Vector2.Equals(Vector2)
  fullName: System.Numerics.Vector2.Equals(Vector2)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector2.Equals(System.Object)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Equals(Object)
  nameWithType: Vector2.Equals(Object)
  fullName: System.Numerics.Vector2.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Vector2.GetHashCode
  parent: System.Numerics.Vector2
  isExternal: false
  name: GetHashCode()
  nameWithType: Vector2.GetHashCode()
  fullName: System.Numerics.Vector2.GetHashCode()
- uid: System.Numerics.Vector2.Length
  parent: System.Numerics.Vector2
  isExternal: false
  name: Length()
  nameWithType: Vector2.Length()
  fullName: System.Numerics.Vector2.Length()
- uid: System.Numerics.Vector2.LengthSquared
  parent: System.Numerics.Vector2
  isExternal: false
  name: LengthSquared()
  nameWithType: Vector2.LengthSquared()
  fullName: System.Numerics.Vector2.LengthSquared()
- uid: System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Lerp(Vector2,Vector2,Single)
  nameWithType: Vector2.Lerp(Vector2,Vector2,Single)
  fullName: System.Numerics.Vector2.Lerp(Vector2,Vector2,Single)
- uid: System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Max(Vector2,Vector2)
  nameWithType: Vector2.Max(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Max(Vector2,Vector2)
- uid: System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Min(Vector2,Vector2)
  nameWithType: Vector2.Min(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Min(Vector2,Vector2)
- uid: System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Multiply(Vector2,Vector2)
  nameWithType: Vector2.Multiply(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Multiply(Vector2,Vector2)
- uid: System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Multiply(Vector2,Single)
  nameWithType: Vector2.Multiply(Vector2,Single)
  fullName: System.Numerics.Vector2.Multiply(Vector2,Single)
- uid: System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Multiply(Single,Vector2)
  nameWithType: Vector2.Multiply(Single,Vector2)
  fullName: System.Numerics.Vector2.Multiply(Single,Vector2)
- uid: System.Numerics.Vector2.Negate(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Negate(Vector2)
  nameWithType: Vector2.Negate(Vector2)
  fullName: System.Numerics.Vector2.Negate(Vector2)
- uid: System.Numerics.Vector2.Normalize(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Normalize(Vector2)
  nameWithType: Vector2.Normalize(Vector2)
  fullName: System.Numerics.Vector2.Normalize(Vector2)
- uid: System.Numerics.Vector2.One
  parent: System.Numerics.Vector2
  isExternal: false
  name: One
  nameWithType: Vector2.One
  fullName: System.Numerics.Vector2.One
- uid: System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Addition(Vector2,Vector2)
  nameWithType: Vector2.op_Addition(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Addition(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Division(Vector2,Vector2)
  nameWithType: Vector2.op_Division(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Division(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Division(Vector2,Single)
  nameWithType: Vector2.op_Division(Vector2,Single)
  fullName: System.Numerics.Vector2.op_Division(Vector2,Single)
- uid: System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Equality(Vector2,Vector2)
  nameWithType: Vector2.op_Equality(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Equality(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Inequality(Vector2,Vector2)
  nameWithType: Vector2.op_Inequality(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Inequality(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Multiply(Vector2,Vector2)
  nameWithType: Vector2.op_Multiply(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Multiply(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Multiply(Vector2,Single)
  nameWithType: Vector2.op_Multiply(Vector2,Single)
  fullName: System.Numerics.Vector2.op_Multiply(Vector2,Single)
- uid: System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Multiply(Single,Vector2)
  nameWithType: Vector2.op_Multiply(Single,Vector2)
  fullName: System.Numerics.Vector2.op_Multiply(Single,Vector2)
- uid: System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Subtraction(Vector2,Vector2)
  nameWithType: Vector2.op_Subtraction(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Subtraction(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_UnaryNegation(Vector2)
  nameWithType: Vector2.op_UnaryNegation(Vector2)
  fullName: System.Numerics.Vector2.op_UnaryNegation(Vector2)
- uid: System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Reflect(Vector2,Vector2)
  nameWithType: Vector2.Reflect(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Reflect(Vector2,Vector2)
- uid: System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: SquareRoot(Vector2)
  nameWithType: Vector2.SquareRoot(Vector2)
  fullName: System.Numerics.Vector2.SquareRoot(Vector2)
- uid: System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Subtract(Vector2,Vector2)
  nameWithType: Vector2.Subtract(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Subtract(Vector2,Vector2)
- uid: System.Numerics.Vector2.ToString
  parent: System.Numerics.Vector2
  isExternal: false
  name: ToString()
  nameWithType: Vector2.ToString()
  fullName: System.Numerics.Vector2.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Vector2.ToString(System.String)
  parent: System.Numerics.Vector2
  isExternal: false
  name: ToString(String)
  nameWithType: Vector2.ToString(String)
  fullName: System.Numerics.Vector2.ToString(String)
- uid: System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector2
  isExternal: false
  name: ToString(String,IFormatProvider)
  nameWithType: Vector2.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector2.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Transform(Vector2,Matrix3x2)
  nameWithType: Vector2.Transform(Vector2,Matrix3x2)
  fullName: System.Numerics.Vector2.Transform(Vector2,Matrix3x2)
- uid: System.Numerics.Matrix3x2
  parent: System.Numerics
  isExternal: false
  name: Matrix3x2
  nameWithType: Matrix3x2
  fullName: System.Numerics.Matrix3x2
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Transform(Vector2,Matrix4x4)
  nameWithType: Vector2.Transform(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector2.Transform(Vector2,Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Transform(Vector2,Quaternion)
  nameWithType: Vector2.Transform(Vector2,Quaternion)
  fullName: System.Numerics.Vector2.Transform(Vector2,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: TransformNormal(Vector2,Matrix3x2)
  nameWithType: Vector2.TransformNormal(Vector2,Matrix3x2)
  fullName: System.Numerics.Vector2.TransformNormal(Vector2,Matrix3x2)
- uid: System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector2
  isExternal: false
  name: TransformNormal(Vector2,Matrix4x4)
  nameWithType: Vector2.TransformNormal(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector2.TransformNormal(Vector2,Matrix4x4)
- uid: System.Numerics.Vector2.UnitX
  parent: System.Numerics.Vector2
  isExternal: false
  name: UnitX
  nameWithType: Vector2.UnitX
  fullName: System.Numerics.Vector2.UnitX
- uid: System.Numerics.Vector2.UnitY
  parent: System.Numerics.Vector2
  isExternal: false
  name: UnitY
  nameWithType: Vector2.UnitY
  fullName: System.Numerics.Vector2.UnitY
- uid: System.Numerics.Vector2.X
  parent: System.Numerics.Vector2
  isExternal: false
  name: X
  nameWithType: Vector2.X
  fullName: System.Numerics.Vector2.X
- uid: System.Numerics.Vector2.Y
  parent: System.Numerics.Vector2
  isExternal: false
  name: Y
  nameWithType: Vector2.Y
  fullName: System.Numerics.Vector2.Y
- uid: System.Numerics.Vector2.Zero
  parent: System.Numerics.Vector2
  isExternal: false
  name: Zero
  nameWithType: Vector2.Zero
  fullName: System.Numerics.Vector2.Zero
- uid: System.Numerics.Vector2.#ctor*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Vector2
  nameWithType: Vector2.Vector2
- uid: System.Numerics.Vector2.Abs*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Abs
  nameWithType: Vector2.Abs
- uid: System.Numerics.Vector2.Add*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Add
  nameWithType: Vector2.Add
- uid: System.Numerics.Vector2.Clamp*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Clamp
  nameWithType: Vector2.Clamp
- uid: System.Numerics.Vector2.CopyTo*
  parent: System.Numerics.Vector2
  isExternal: false
  name: CopyTo
  nameWithType: Vector2.CopyTo
- uid: System.Numerics.Vector2.Distance*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Distance
  nameWithType: Vector2.Distance
- uid: System.Numerics.Vector2.DistanceSquared*
  parent: System.Numerics.Vector2
  isExternal: false
  name: DistanceSquared
  nameWithType: Vector2.DistanceSquared
- uid: System.Numerics.Vector2.Divide*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Divide
  nameWithType: Vector2.Divide
- uid: System.Numerics.Vector2.Dot*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Dot
  nameWithType: Vector2.Dot
- uid: System.Numerics.Vector2.Equals*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Equals
  nameWithType: Vector2.Equals
- uid: System.Numerics.Vector2.GetHashCode*
  parent: System.Numerics.Vector2
  isExternal: false
  name: GetHashCode
  nameWithType: Vector2.GetHashCode
- uid: System.Numerics.Vector2.Length*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Length
  nameWithType: Vector2.Length
- uid: System.Numerics.Vector2.LengthSquared*
  parent: System.Numerics.Vector2
  isExternal: false
  name: LengthSquared
  nameWithType: Vector2.LengthSquared
- uid: System.Numerics.Vector2.Lerp*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Lerp
  nameWithType: Vector2.Lerp
- uid: System.Numerics.Vector2.Max*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Max
  nameWithType: Vector2.Max
- uid: System.Numerics.Vector2.Min*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Min
  nameWithType: Vector2.Min
- uid: System.Numerics.Vector2.Multiply*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Multiply
  nameWithType: Vector2.Multiply
- uid: System.Numerics.Vector2.Negate*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Negate
  nameWithType: Vector2.Negate
- uid: System.Numerics.Vector2.Normalize*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Normalize
  nameWithType: Vector2.Normalize
- uid: System.Numerics.Vector2.One*
  parent: System.Numerics.Vector2
  isExternal: false
  name: One
  nameWithType: Vector2.One
- uid: System.Numerics.Vector2.op_Addition*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Addition
  nameWithType: Vector2.op_Addition
- uid: System.Numerics.Vector2.op_Division*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Division
  nameWithType: Vector2.op_Division
- uid: System.Numerics.Vector2.op_Equality*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Equality
  nameWithType: Vector2.op_Equality
- uid: System.Numerics.Vector2.op_Inequality*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Inequality
  nameWithType: Vector2.op_Inequality
- uid: System.Numerics.Vector2.op_Multiply*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Multiply
  nameWithType: Vector2.op_Multiply
- uid: System.Numerics.Vector2.op_Subtraction*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Subtraction
  nameWithType: Vector2.op_Subtraction
- uid: System.Numerics.Vector2.op_UnaryNegation*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_UnaryNegation
  nameWithType: Vector2.op_UnaryNegation
- uid: System.Numerics.Vector2.Reflect*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Reflect
  nameWithType: Vector2.Reflect
- uid: System.Numerics.Vector2.SquareRoot*
  parent: System.Numerics.Vector2
  isExternal: false
  name: SquareRoot
  nameWithType: Vector2.SquareRoot
- uid: System.Numerics.Vector2.Subtract*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Subtract
  nameWithType: Vector2.Subtract
- uid: System.Numerics.Vector2.ToString*
  parent: System.Numerics.Vector2
  isExternal: false
  name: ToString
  nameWithType: Vector2.ToString
- uid: System.Numerics.Vector2.Transform*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Transform
  nameWithType: Vector2.Transform
- uid: System.Numerics.Vector2.TransformNormal*
  parent: System.Numerics.Vector2
  isExternal: false
  name: TransformNormal
  nameWithType: Vector2.TransformNormal
- uid: System.Numerics.Vector2.UnitX*
  parent: System.Numerics.Vector2
  isExternal: false
  name: UnitX
  nameWithType: Vector2.UnitX
- uid: System.Numerics.Vector2.UnitY*
  parent: System.Numerics.Vector2
  isExternal: false
  name: UnitY
  nameWithType: Vector2.UnitY
- uid: System.Numerics.Vector2.Zero*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Zero
  nameWithType: Vector2.Zero
