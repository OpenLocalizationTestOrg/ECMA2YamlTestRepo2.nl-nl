### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.ProcessModelSection
  id: ProcessModelSection
  children:
  - System.Web.Configuration.ProcessModelSection.#ctor
  - System.Web.Configuration.ProcessModelSection.AutoConfig
  - System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  - System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  - System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  - System.Web.Configuration.ProcessModelSection.CpuMask
  - System.Web.Configuration.ProcessModelSection.ElementProperty
  - System.Web.Configuration.ProcessModelSection.Enable
  - System.Web.Configuration.ProcessModelSection.IdleTimeout
  - System.Web.Configuration.ProcessModelSection.LogLevel
  - System.Web.Configuration.ProcessModelSection.MaxAppDomains
  - System.Web.Configuration.ProcessModelSection.MaxIOThreads
  - System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  - System.Web.Configuration.ProcessModelSection.MemoryLimit
  - System.Web.Configuration.ProcessModelSection.MinIOThreads
  - System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  - System.Web.Configuration.ProcessModelSection.Password
  - System.Web.Configuration.ProcessModelSection.PingFrequency
  - System.Web.Configuration.ProcessModelSection.PingTimeout
  - System.Web.Configuration.ProcessModelSection.Properties
  - System.Web.Configuration.ProcessModelSection.RequestLimit
  - System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  - System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  - System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  - System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  - System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  - System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  - System.Web.Configuration.ProcessModelSection.Timeout
  - System.Web.Configuration.ProcessModelSection.UserName
  - System.Web.Configuration.ProcessModelSection.WebGarden
  langs:
  - csharp
  name: ProcessModelSection
  nameWithType: ProcessModelSection
  fullName: System.Web.Configuration.ProcessModelSection
  type: Class
  summary: "Configureert instellingen voor de ASP.NET-procesmodel op een webserver voor Internet Information Services (IIS). Deze klasse kan niet worden overgenomen."
  remarks: "De klasse ProcessModelSection biedt een manier om programmatisch toegang en wijzig de `processModel` gedeelte van een configuratiebestand.       De klasse ProcessModelSection bepaalt verschillende aspecten van de ASP.NET-werkproces, met inbegrip van de levensduur, het aantal exemplaren tegelijk welke beveiligings-id dat deze wordt uitgevoerd onder, gemaakt en de grootte van de CLR thread-groep aanvragen.       Wanneer ASP.NET wordt uitgevoerd onder IIS 6 in de native modus, wordt ASP.NET maakt gebruik van de IIS 6-procesmodel en de meeste instellingen in deze sectie worden genegeerd. Gebruik de gebruikersinterface (UI) van een IIS-beheer om deze eigenschappen te configureren. ASP.NET maakt nog steeds gebruik van de volgende eigenschappen, die kunnen worden geconfigureerd via het configuratiebestand: <xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>, <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>, en <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>.</xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> </xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>       De `processModel` sectie kan niet worden versleuteld met het hulpprogramma of functie beveiligd configuratie omdat deze wordt gebruikt door de ASP.NET-ISAPI-extensie."
  example:
  - "This example demonstrates how to specify values declaratively for several attributes of the `processModel` section, which can also be accessed as members of the ProcessModelSection class.  \n  \n The following configuration file example shows how to specify values declaratively for the `processModel` section.  \n  \n```  \n<processModel   \n  enable=\"True\" timeout=\"Infinite\"   \n  idleTimeout=\"Infinite\"   \n  shutdownTimeout=\"00:00:05\" requestLimit=\"Infinite\"  \n  requestQueueLimit=\"5000\" restartQueueLimit=\"10\"   \n  memoryLimit=\"60\" webGarden=\"False\" cpuMask=\"0xffffffff\"   \n  userName=\"machine\" password=\"AutoGenerate\" logLevel=\"Errors\"  \n  clientConnectedCheck=\"00:00:05\"   \n  comAuthenticationLevel=\"Connect\" comImpersonationLevel=\"Impersonate\"  \n  responseDeadlockInterval=\"00:03:00\"   \n  responseRestartDeadlockInterval=\"00:03:00\" autoConfig=\"True\"  \n  maxWorkerThreads=\"20\" maxIoThreads=\"20\" minWorkerThreads=\"1\"  \n  minIoThreads=\"1\" serverErrorMessageFile=\"\" pingFrequency=\"Infinite\"  \n  pingTimeout=\"Infinite\" asyncOption=\"20\" maxAppDomains=\"2000\"   \n/>  \n```  \n  \n The following code example demonstrates how to use the ProcessModelSection class.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#1](~/add/codesnippet/csharp/t-system.web.configurati_87_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_87_1.vb)]"
  syntax:
    content: 'public sealed class ProcessModelSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ProcessModelSection()
  nameWithType: ProcessModelSection.ProcessModelSection()
  fullName: System.Web.Configuration.ProcessModelSection.ProcessModelSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Configuration.ProcessModelSection&quot;> </xref> klasse met de standaardinstellingen."
  remarks: "De constructor ProcessModelSection is niet bedoeld voor rechtstreeks gebruik vanuit uw code. Deze wordt aangeroepen door de ASP.NET-configuratiesysteem. Verkrijgen van een exemplaar van de <xref:System.Web.Configuration.ProcessModelSection>klasse met behulp van de <xref:System.Configuration.Configuration.GetSection%2A>methode.</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.ProcessModelSection>"
  syntax:
    content: public ProcessModelSection ();
    parameters: []
  overload: System.Web.Configuration.ProcessModelSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig
  id: AutoConfig
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
  fullName: System.Web.Configuration.ProcessModelSection.AutoConfig
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of ASP.NET prestatie-instellingen worden automatisch geconfigureerd voor ASP.NET-toepassingen."
  remarks: "Als de AutoConfig-waarde is ingesteld op `false`, expliciete Web.config waarden worden gebruikt om te bepalen van de configuratie van de prestaties voor de ASP.NET-toepassing. Als de AutoConfig-waarde is ingesteld op `true`, de prestatie-instellingen automatisch geconfigureerd voor de ASP.NET-toepassing.       De waarde AutoConfig expliciet is ingesteld op `true` in het Machine.config-bestand. De standaardwaarde van de code is ingesteld op `false`.  Als de waarde AutoConfig van Machine.config wordt verwijderd, worden de expliciete instellingen worden gebruikt in plaats van de instellingen automatisch geconfigureerd."
  syntax:
    content: public bool AutoConfig { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de prestatie-instellingen worden automatisch geconfigureerd voor ASP.NET-toepassingen. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.AutoConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  id: ClientConnectedCheck
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
  fullName: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld wordt een waarde die aangeeft hoe lang een aanvraag achtergebleven in de wachtrij."
  remarks: "Deze eigenschap geeft u op hoe lang een aanvraag is in de wachtrij geplaatst voordat de controle van een client verbonden door ASP.NET wordt uitgevoerd.      > [!NOTE] > Als het interval is verstreken terwijl de aanvraag nog steeds in de wachtrij staat, controleert u een client verbonden hoofdzakelijk plaats voordat de aanvraag via doorgeven aan de ASP.NET-werkproces voor de verwerking."
  example:
  - "The following code example shows how to access and modify the ClientConnectedCheck property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#18](~/add/codesnippet/csharp/p-system.web.configurati_355_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#18](~/add/codesnippet/visualbasic/p-system.web.configurati_355_1.vb)]"
  syntax:
    content: public TimeSpan ClientConnectedCheck { get; set; }
    return:
      type: System.TimeSpan
      description: "Een <xref:System.TimeSpan>waarde die aangeeft van de wachtrij tijd.</xref:System.TimeSpan> De standaardwaarde is 5 seconden."
  overload: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  id: ComAuthenticationLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft het verificatieniveau voor DCOM-beveiliging."
  remarks: "Wanneer de waarde van deze eigenschap is ingesteld op <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel>, DCOM bepaalt het verificatieniveau met behulp van de algoritme van de normale beveiligingsonderhandeling.</xref:System.Web.Configuration.ProcessModelComAuthenticationLevel> De standaardwaarde die is toegewezen aan deze eigenschap, zoals opgegeven in het Machine.config-bestand is <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel>.</xref:System.Web.Configuration.ProcessModelComAuthenticationLevel> In dit geval verifieert DCOM de referenties van de client alleen wanneer de client tot stand een relatie met de server brengt."
  example:
  - "The following code example shows how to access the ComAuthenticationLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#21](~/add/codesnippet/csharp/p-system.web.configurati_143_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#21](~/add/codesnippet/visualbasic/p-system.web.configurati_143_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelComAuthenticationLevel ComAuthenticationLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelComAuthenticationLevel
      description: "Een van de <xref href=&quot;System.Web.Configuration.ProcessModelComAuthenticationLevel&quot;> </xref> waarden. De standaardwaarde is <xref href=&quot;System.Web.Configuration.ProcessModelComAuthenticationLevel&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  id: ComImpersonationLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft het verificatieniveau voor COM-beveiliging."
  remarks: "Wanneer de waarde van deze eigenschap is ingesteld op <xref:System.Web.Configuration.ProcessModelComImpersonationLevel>, DCOM bepaalt het imitatieniveau met behulp van de algoritme van de normale beveiligingsonderhandeling.</xref:System.Web.Configuration.ProcessModelComImpersonationLevel> De standaardwaarde die is toegewezen aan deze eigenschap, zoals opgegeven in het Machine.config-bestand is <xref:System.Web.Configuration.ProcessModelComImpersonationLevel>.</xref:System.Web.Configuration.ProcessModelComImpersonationLevel> Het server-proces kan in dit geval de beveiligingscontext van de client namens de client te imiteren."
  example:
  - "The following code example shows how to access the ComImpersonationLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#22](~/add/codesnippet/csharp/p-system.web.configurati_249_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#22](~/add/codesnippet/visualbasic/p-system.web.configurati_249_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelComImpersonationLevel ComImpersonationLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelComImpersonationLevel
      description: "Een van de <xref href=&quot;System.Web.Configuration.ProcessModelComImpersonationLevel&quot;> </xref> waarden. De standaardwaarde is <xref href=&quot;System.Web.Configuration.ProcessModelComImpersonationLevel&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.CpuMask
  id: CpuMask
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
  fullName: System.Web.Configuration.ProcessModelSection.CpuMask
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft welke processors op een server met meerdere processors komen in aanmerking voor het uitvoeren van ASP.NET-processen."
  remarks: "De waarde CpuMask geeft een bitpatroon die aangeeft van de CPU&quot;s die in aanmerking voor het uitvoeren van ASP.NET-threads. Als de <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>eigenschap is ingesteld op `true`, CpuMask werkprocessen die aan het aantal geldige CPU&quot;s beperkt.</xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> Het toegestane maximum aantal werkprocessen is gelijk aan het aantal CPU&quot;s. Standaard alle CPU&quot;s zijn ingeschakeld en ASP.NET een proces gestart voor elke CPU. Als de <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>eigenschap is ingesteld op `false`, wordt het kenmerk CpuMask genegeerd en wordt slechts één werkproces wordt uitgevoerd.</xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>"
  example:
  - "The following code example shows how to access the CpuMask property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#25](~/add/codesnippet/csharp/p-system.web.configurati_174_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#25](~/add/codesnippet/visualbasic/p-system.web.configurati_174_1.vb)]"
  syntax:
    content: public int CpuMask { get; set; }
    return:
      type: System.Int32
      description: "Het getal voor het bitpatroon om toe te passen. De standaardwaarde is 0xFFFFFFFF."
  overload: System.Web.Configuration.ProcessModelSection.CpuMask*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty
  id: ElementProperty
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
  fullName: System.Web.Configuration.ProcessModelSection.ElementProperty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }
    return:
      type: System.Configuration.ConfigurationElementProperty
      description: "Moet worden toegevoegd."
  overload: System.Web.Configuration.ProcessModelSection.ElementProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Enable
  id: Enable
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Enable
  nameWithType: ProcessModelSection.Enable
  fullName: System.Web.Configuration.ProcessModelSection.Enable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of het procesmodel is ingeschakeld."
  remarks: "De eigenschap inschakelen geeft of ASP.NET in een externe werkproces wordt gehost. Als Enable `true`, ASP.NET gehoste in een externe werkproces; anders is, wordt deze rechtstreeks in Inetinfo.exe wordt uitgevoerd.      > [!NOTE] > ASP.NET Inetinfo.exe uitgevoerd wordt niet aanbevolen omdat dit omvat het uitvoeren van de toepassing in de beveiligingscontext van het lokale systeem. Wanneer ASP.NET wordt uitgevoerd in de native modus van Internet Information Services (IIS) 6, deze instelling wordt genegeerd, dus meestal er geen reden is worden ingesteld op `false`."
  example:
  - "The following code example shows how to access the Enable property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#2](~/add/codesnippet/csharp/p-system.web.configurati_95_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_95_1.vb)]"
  syntax:
    content: public bool Enable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het procesmodel is ingeschakeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.Enable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout
  id: IdleTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
  fullName: System.Web.Configuration.ProcessModelSection.IdleTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van de periode van inactiviteit waarna ASP.NET automatisch het werkproces eindigt."
  remarks: 'Het werkproces is opnieuw opgestart (bestelbare) wanneer de waarde van de eigenschap IdleTimeout is bereikt. Standaard slechts twee voorwaarden ertoe leiden dat het proces heen: het proces overschrijdt de toegestane geheugenlimiet of het proces overschrijdt het toegestane aantal aanvragen in de wachtrij kunnen worden geplaatst. U kunt andere voorwaarden toevoegen aan de standaardwaarden. U kunt bijvoorbeeld de eigenschap IdleTimeout beperken van de tijd die het werkproces inactief is.'
  example:
  - "The following code example shows how to access the IdleTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#16](~/add/codesnippet/csharp/p-system.web.configurati_88_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#16](~/add/codesnippet/visualbasic/p-system.web.configurati_88_1.vb)]"
  syntax:
    content: public TimeSpan IdleTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Een <xref:System.TimeSpan>waarde die aangeeft niet-actieve tijd.</xref:System.TimeSpan> De standaardwaarde is oneindig, wat overeenkomt met <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.Web.Configuration.ProcessModelSection.IdleTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.LogLevel
  id: LogLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
  fullName: System.Web.Configuration.ProcessModelSection.LogLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van de typen gebeurtenissen naar het gebeurtenislogboek wordt geschreven."
  remarks: "Met deze eigenschap correct, kunt u de fouten die het systeem niet kunt aanmelden filteren. Nadat u een idee van de toepassing storingen of knelpunten hebt, is het raadzaam het opstellen van een strategie die wordt beperkt het aantal fouten dat u geïnteresseerd bent in."
  example:
  - "The following code example shows how to access the LogLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#23](~/add/codesnippet/csharp/p-system.web.configurati_246_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#23](~/add/codesnippet/visualbasic/p-system.web.configurati_246_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelLogLevel LogLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelLogLevel
      description: "Een van de <xref href=&quot;System.Web.Configuration.ProcessModelLogLevel&quot;> </xref> waarden. De standaardwaarde is <xref href=&quot;System.Web.Configuration.ProcessModelLogLevel&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.LogLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  id: MaxAppDomains
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
  fullName: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van het maximum aantal toegestane toepassingsdomeinen in één proces."
  remarks: "Als de MaxAppDomains drempelwaarde wordt overschreden, wordt het minst gebruikt toepassingsdomein afgesloten als er een nieuw toepassingsdomein moet beginnen."
  example:
  - "The following code example shows how to access the MaxAppDomains property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#27](~/add/codesnippet/csharp/p-system.web.configurati_284_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#27](~/add/codesnippet/visualbasic/p-system.web.configurati_284_1.vb)]"
  syntax:
    content: public int MaxAppDomains { get; set; }
    return:
      type: System.Int32
      description: "Het maximaal toegestane aantal toepassingsdomeinen in één proces."
  overload: System.Web.Configuration.ProcessModelSection.MaxAppDomains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  id: MaxIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van het maximum aantal i/o-threads per processor in de CLR-thread-groep."
  remarks: "De waarde van MaxIOThreads moet groter dan of gelijk aan de <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>instellen in de `httpRuntime` configuratiesectie.</xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>       U kunt sommige controle over het CPU-gebruik hebben door het aantal werkthreads en i/o-threads die met behulp van de <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>Eigenschappen en MaxIOThreads respectievelijk.</xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>       Het verschil tussen de twee typen threads is dat de laatste zijn gebonden aan i/o-objecten, zoals een stream of een pipe en de voormalige traditionele onbeperkte threads zijn. Voor Internet Information Services (IIS) versie 6.0 en hoger, ASP.NET aanvragen worden verwerkt op werkthreads. Dit is omdat ASP.NET is geïntegreerd in IIS.       Deze threads zijn afkomstig van het hele proces CLR thread-groep die horen bij een toepassing.      > [!NOTE] > Meestal de standaardwaarden voor de toegestane threads voldoende zijn om te blijven van het maximale CPU-gebruik. Als voor een bepaalde reden die uw toepassing traag is, kunt u externe bronnen mogelijk wachten, probeert u kan Verhoog het aantal threads op een waarde minder dan 100."
  example:
  - "The following code example shows how to access the MaxIOThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#5](~/add/codesnippet/csharp/p-system.web.configurati_295_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_295_1.vb)]"
  syntax:
    content: public int MaxIOThreads { get; set; }
    return:
      type: System.Int32
      description: "Het maximum aantal threads. De standaardwaarde is 20."
  overload: System.Web.Configuration.ProcessModelSection.MaxIOThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  id: MaxWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van de maximale hoeveelheid werkthreads per processor in de CLR-thread-groep."
  remarks: "De waarde van MaxWorkerThreads moet groter dan of gelijk aan de <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>instellen in de `httpRuntime` configuratiesectie.</xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>       U kunt sommige controle over het CPU-gebruik hebben door het aantal werkthreads en i/o-threads die met de eigenschap MaxWorkerThreads en, de <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>eigenschap, respectievelijk.</xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>       Het verschil tussen de twee typen threads is dat de laatste zijn gebonden aan i/o-objecten, zoals een stream of een pipe en de voormalige traditionele onbeperkte threads zijn. Voor Internet Information Services (IIS) versie 6.0 en hoger, ASP.NET aanvragen worden verwerkt op werkthreads. Dit is omdat ASP.NET is geïntegreerd in IIS.       Deze threads zijn afkomstig van het hele proces CLR thread-groep die horen bij een toepassing.      > [!NOTE] > Meestal de standaardwaarden voor de toegestane threads voldoende zijn om te blijven van het maximale CPU-gebruik. Als voor een bepaalde reden die uw toepassing traag is, kunt u externe bronnen mogelijk wachten, probeert u kan Verhoog het aantal threads op een waarde minder dan 100."
  example:
  - "The following code example shows how to access the MaxWorkerThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#7](~/add/codesnippet/csharp/p-system.web.configurati_48_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_48_1.vb)]"
  syntax:
    content: public int MaxWorkerThreads { get; set; }
    return:
      type: System.Int32
      description: "Het maximum aantal threads. De standaardwaarde is 20."
  overload: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit
  id: MemoryLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
  fullName: System.Web.Configuration.ProcessModelSection.MemoryLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van de grootte van de maximaal toegestane hoeveelheid geheugen."
  remarks: "De geheugengrootte wordt uitgedrukt als percentage van het systeemgeheugen. Dit is de hoeveelheid geheugen die een werkproces gebruiken kan voordat ASP.NET opnieuw wordt opgestart (bounces) deze."
  example:
  - "The following code example shows how to access the MemoryLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#3](~/add/codesnippet/csharp/p-system.web.configurati_265_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_265_1.vb)]"
  syntax:
    content: public int MemoryLimit { get; set; }
    return:
      type: System.Int32
      description: "Het percentage van het systeemgeheugen. De standaardwaarde is 60 procent."
  overload: System.Web.Configuration.ProcessModelSection.MemoryLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads
  id: MinIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinIOThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van het minimum aantal i/o-threads per processor in de CLR-thread-groep."
  remarks: ''
  example:
  - "The following code example shows how to access the MinIOThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#4](~/add/codesnippet/csharp/p-system.web.configurati_296_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_296_1.vb)]"
  syntax:
    content: public int MinIOThreads { get; set; }
    return:
      type: System.Int32
      description: "Het minimale aantal i/o-threads per processor in de CLR-thread-groep."
  overload: System.Web.Configuration.ProcessModelSection.MinIOThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  id: MinWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van het minimum aantal werkthreads per processor in de CLR-thread-groep."
  remarks: ''
  example:
  - "The following code example shows how to access the MinWorkerThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#6](~/add/codesnippet/csharp/p-system.web.configurati_183_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_183_1.vb)]"
  syntax:
    content: public int MinWorkerThreads { get; set; }
    return:
      type: System.Int32
      description: "Het minimum aantal werkthreads per processor in de CLR-thread-groep"
  overload: System.Web.Configuration.ProcessModelSection.MinWorkerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Password
  id: Password
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Password
  nameWithType: ProcessModelSection.Password
  fullName: System.Web.Configuration.ProcessModelSection.Password
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van het wachtwoord moet worden gebruikt voor de Windows-identiteit."
  remarks: "De eigenschap voor het wachtwoord moet worden gebruikt met de <xref:System.Web.Configuration.ProcessModelSection.UserName%2A>eigenschap.</xref:System.Web.Configuration.ProcessModelSection.UserName%2A>       Indien aanwezig, veroorzaken waarden van deze eigenschappen in het werkproces uit te voeren met de geconfigureerde identiteit van Windows."
  example:
  - "The following code example shows how to access the Password property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#20](~/add/codesnippet/csharp/p-system.web.configurati_258_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#20](~/add/codesnippet/visualbasic/p-system.web.configurati_258_1.vb)]"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "Het wachtwoord te gebruiken. De standaardwaarde is automatisch genereren."
  overload: System.Web.Configuration.ProcessModelSection.Password*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency
  id: PingFrequency
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
  fullName: System.Web.Configuration.ProcessModelSection.PingFrequency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van het interval waarmee de ISAPI-extensie het werkproces om te bepalen pingt of deze wordt uitgevoerd."
  remarks: "Het werkproces is opnieuw opgestart (bestelbare) als deze niet wordt uitgevoerd nadat het PingFrequency-interval is verstreken."
  example:
  - "The following code example shows how to access the PingFrequency property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#13](~/add/codesnippet/csharp/p-system.web.configurati_14_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_14_1.vb)]"
  syntax:
    content: public TimeSpan PingFrequency { get; set; }
    return:
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>definiëren het tijdsinterval.</xref:System.TimeSpan> De standaardwaarde is 30 seconden."
  overload: System.Web.Configuration.ProcessModelSection.PingFrequency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout
  id: PingTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
  fullName: System.Web.Configuration.ProcessModelSection.PingTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft het tijdsinterval waarna een niet-responsief werkproces opnieuw wordt opgestart."
  remarks: "De ISAPI-extensies ping het werkproces met de <xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A>interval.</xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> Als het werkproces niet binnen het interval PingTimeout reageert, wordt het proces opnieuw gestart."
  example:
  - "The following code example shows how to access the PingTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#14](~/add/codesnippet/csharp/p-system.web.configurati_399_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#14](~/add/codesnippet/visualbasic/p-system.web.configurati_399_1.vb)]"
  syntax:
    content: public TimeSpan PingTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>definiëren het tijdsinterval.</xref:System.TimeSpan> De standaardwaarde is 5 seconden."
  overload: System.Web.Configuration.ProcessModelSection.PingTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Properties
  id: Properties
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Properties
  nameWithType: ProcessModelSection.Properties
  fullName: System.Web.Configuration.ProcessModelSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Moet worden toegevoegd."
  overload: System.Web.Configuration.ProcessModelSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit
  id: RequestLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van het aantal aanvragen dat is toegestaan voordat het werkproces gerecycled wordt."
  remarks: "Als het aantal aanvragen wordt overschreden, wordt een nieuw werkproces ter vervanging van het huidige proces in ASP.NET automatisch gestart."
  example:
  - "The following code example shows how to use the RequestLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#8](~/add/codesnippet/csharp/p-system.web.configurati_185_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_185_1.vb)]"
  syntax:
    content: public int RequestLimit { get; set; }
    return:
      type: System.Int32
      description: "Het aantal toegestane aanvragen. De standaardwaarde is oneindig."
  overload: System.Web.Configuration.ProcessModelSection.RequestLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  id: RequestQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die het aantal aanvragen dat is toegestaan in de wachtrij aangeeft."
  remarks: "Als het aantal aanvragen dat is toegestaan in de wachtrij is overschreden, wordt ASP.NET wordt teruggestuurd &quot;&503;-Server te bezet &quot; fouten op nieuwe aanvragen. Wanneer deze limiet is bereikt, wordt het systeem wordt uitgevoerd in abnormale voorwaarden. Dit kan een symptoom zijn van een storing of misschien, just hoge belasting. Opnieuw opstarten (venster) het werkproces mogelijk de enige manier om verdere problemen te voorkomen."
  example:
  - "The following code example shows how to use the RequestQueueLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/csharp/p-system.web.configurati_126_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_126_1.vb)]"
  syntax:
    content: public int RequestQueueLimit { get; set; }
    return:
      type: System.Int32
      description: "Het aantal aanvragen dat is toegestaan in de wachtrij. De standaardwaarde is 5000."
  overload: System.Web.Configuration.ProcessModelSection.RequestQueueLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  id: ResponseDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft het tijdsinterval voor het werkproces om te reageren."
  remarks: "Het proces opnieuw wordt gestart als er aanvragen in de wachtrij en als er is geen antwoord in de tijdsinterval die is gedefinieerd door ResponseDeadlockInterval zijn."
  example:
  - "The following code example shows how to use the ResponseDeadlockInterval property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#17](~/add/codesnippet/csharp/p-system.web.configurati_402_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#17](~/add/codesnippet/visualbasic/p-system.web.configurati_402_1.vb)]"
  syntax:
    content: public TimeSpan ResponseDeadlockInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>definiëren van het interval.</xref:System.TimeSpan> De standaardwaarde is 3 minuten."
  overload: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  id: ResponseRestartDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Niet meer gebruikt."
  remarks: "Deze eigenschap wordt niet meer gebruikt door ASP.NET en is uitsluitend aangeboden voor achterwaartse compatibiliteit. Er wordt een configuratiefout veroorzaakt als deze al aanwezig in een configuratiebestand is. Alle recycling in het geval van een deadlock wordt nu beheerd door de <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>eigenschap.</xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>"
  example:
  - "The following code example shows how to access the ResponseRestartDeadlockInterval property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#11](~/add/codesnippet/csharp/p-system.web.configurati_58_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#11](~/add/codesnippet/visualbasic/p-system.web.configurati_58_1.vb)]"
  syntax:
    content: public TimeSpan ResponseRestartDeadlockInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "Niet van toepassing."
  overload: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  id: RestartQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft dat het maximale aantal aanvragen in de wachtrij geplaatst door de ISAPI tijdens het wachten op een nieuw werkproces gestart de aanvragen voor de verwerking."
  remarks: "Wanneer deze limiet wordt overschreden, wordt een clientaanvraag 503-fout ontvangen totdat het werkproces gereed is."
  example:
  - "The following code example shows how to access the RestartQueueLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#9](~/add/codesnippet/csharp/p-system.web.configurati_255_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_255_1.vb)]"
  syntax:
    content: public int RestartQueueLimit { get; set; }
    return:
      type: System.Int32
      description: "Het aantal aanvragen in de wachtrij. De standaardwaarde is 10."
  overload: System.Web.Configuration.ProcessModelSection.RestartQueueLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  id: ServerErrorMessageFile
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
  fullName: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van het bestand waarvan de inhoud moet worden gebruikt wanneer er een onherstelbare fout optreedt."
  remarks: "Het bestand waarvan de inhoud wordt gebruikt in plaats van het standaardbericht van de Server niet beschikbaar.       Locatie van het bestand kan een relatieve of een absoluut bestandspad zijn."
  example:
  - "The following code example shows how to use the ServerErrorMessageFile property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#28](~/add/codesnippet/csharp/p-system.web.configurati_154_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#28](~/add/codesnippet/visualbasic/p-system.web.configurati_154_1.vb)]"
  syntax:
    content: public string ServerErrorMessageFile { get; set; }
    return:
      type: System.String
      description: "Het pad van het bestand dat wordt gebruikt wanneer er een onherstelbare fout optreedt."
  overload: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  id: ShutdownTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
  fullName: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van de tijd die is toegestaan voor het werkproces af te sluiten."
  remarks: "Deze eigenschap geeft het aantal minuten dat is toegestaan voor het werkproces wordt afgesloten. Wanneer de time-out is verlopen, ASP.NET het werkproces wordt geforceerd afgesloten."
  example:
  - "The following code example shows how to use the ShutdownTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#15](~/add/codesnippet/csharp/p-system.web.configurati_202_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#15](~/add/codesnippet/visualbasic/p-system.web.configurati_202_1.vb)]"
  syntax:
    content: public TimeSpan ShutdownTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>definiëren van het interval.</xref:System.TimeSpan> De standaardwaarde is 5 seconden."
  overload: System.Web.Configuration.ProcessModelSection.ShutdownTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Timeout
  id: Timeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
  fullName: System.Web.Configuration.ProcessModelSection.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft hoeveel minuten totdat ASP.NET wordt een nieuw werkproces gestart."
  remarks: "ASP.NET start een nieuw werkproces ter vervanging van het huidige proces."
  example:
  - "The following code example shows how to use the Timeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/csharp/p-system.web.configurati_144_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_144_1.vb)]"
  syntax:
    content: public TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>definiëren van het interval.</xref:System.TimeSpan> De standaardwaarde is oneindig."
  overload: System.Web.Configuration.ProcessModelSection.Timeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.UserName
  id: UserName
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: UserName
  nameWithType: ProcessModelSection.UserName
  fullName: System.Web.Configuration.ProcessModelSection.UserName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van de gebruikersnaam voor een Windows-identiteit."
  remarks: "Indien aanwezig, wordt een Windows-identiteit die afwijkt van het standaardproces gedefinieerd door de gebruikersnaam. Deze id wordt gebruikt voor het uitvoeren van de ASP.NET-werkproces.       Standaard gebruikersnaam is ingesteld op de speciale waarde Machine en het proces wordt uitgevoerd onder een gebruikersaccount ASPNET die automatisch wordt gemaakt wanneer ASP.NET wordt geïnstalleerd.       De <xref:System.Web.Configuration.ProcessModelSection.Password%2A>eigenschap moet worden gebruikt met de eigenschap UserName.</xref:System.Web.Configuration.ProcessModelSection.Password%2A>       Indien aanwezig, veroorzaken waarden van deze eigenschappen in het werkproces uit te voeren met de geconfigureerde identiteit van Windows.      > [!NOTE] > Als de eigenschap UserName is ingesteld op het systeem, met het wachtwoord AutoGenerate, een entiteit die het proces wordt als een Administrator-account en alle ASP.NET-gebruikerscode uitgevoerd onder het proces voor het volledige beheerdersrechten hebben waarmee wordt gedefinieerd. Dus aandacht besteedt aan deze melding, voor de machtigingen die zijn toegestaan."
  example:
  - "The following code example shows how to access the UserName property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#19](~/add/codesnippet/csharp/p-system.web.configurati_166_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#19](~/add/codesnippet/visualbasic/p-system.web.configurati_166_1.vb)]"
  syntax:
    content: public string UserName { get; set; }
    return:
      type: System.String
      description: "De naam van de gebruiker. De standaardwaarde is de Machine."
  overload: System.Web.Configuration.ProcessModelSection.UserName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.WebGarden
  id: WebGarden
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
  fullName: System.Web.Configuration.ProcessModelSection.WebGarden
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van een waarde voor het inschakelen van de beschikbare CPU&quot;s naar de werkprocessen worden uitgevoerd."
  remarks: "De eigenschap WebGarden moet worden gebruikt met de <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>eigenschap.</xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>       Als de WebGarden-eigenschap is ingesteld op `false`, wordt de <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>kenmerk genegeerd en wordt slechts één werkproces wordt uitgevoerd.</xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>      > [!NOTE] > Een webGarden wordt aangeroepen door een webserver met meerdere processors."
  example:
  - "The following code example shows how to access the WebGarden property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#24](~/add/codesnippet/csharp/p-system.web.configurati_94_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#24](~/add/codesnippet/visualbasic/p-system.web.configurati_94_1.vb)]"
  syntax:
    content: public bool WebGarden { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, als <> </> *> wordt gebruikt voor de werkprocessen worden toegewezen aan het aantal processors in aanmerking komende; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <>*> is ignored."
  overload: System.Web.Configuration.ProcessModelSection.WebGarden*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.ProcessModelSection.#ctor
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ProcessModelSection()
  nameWithType: ProcessModelSection.ProcessModelSection()
  fullName: System.Web.Configuration.ProcessModelSection.ProcessModelSection()
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
  fullName: System.Web.Configuration.ProcessModelSection.AutoConfig
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
  fullName: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelComAuthenticationLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelComAuthenticationLevel
  nameWithType: ProcessModelComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelComImpersonationLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelComImpersonationLevel
  nameWithType: ProcessModelComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelSection.CpuMask
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
  fullName: System.Web.Configuration.ProcessModelSection.CpuMask
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
  fullName: System.Web.Configuration.ProcessModelSection.ElementProperty
- uid: System.Configuration.ConfigurationElementProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementProperty
  nameWithType: ConfigurationElementProperty
  fullName: System.Configuration.ConfigurationElementProperty
- uid: System.Web.Configuration.ProcessModelSection.Enable
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Enable
  nameWithType: ProcessModelSection.Enable
  fullName: System.Web.Configuration.ProcessModelSection.Enable
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
  fullName: System.Web.Configuration.ProcessModelSection.IdleTimeout
- uid: System.Web.Configuration.ProcessModelSection.LogLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
  fullName: System.Web.Configuration.ProcessModelSection.LogLevel
- uid: System.Web.Configuration.ProcessModelLogLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelLogLevel
  nameWithType: ProcessModelLogLevel
  fullName: System.Web.Configuration.ProcessModelLogLevel
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
  fullName: System.Web.Configuration.ProcessModelSection.MaxAppDomains
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
  fullName: System.Web.Configuration.ProcessModelSection.MemoryLimit
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.Password
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Password
  nameWithType: ProcessModelSection.Password
  fullName: System.Web.Configuration.ProcessModelSection.Password
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
  fullName: System.Web.Configuration.ProcessModelSection.PingFrequency
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
  fullName: System.Web.Configuration.ProcessModelSection.PingTimeout
- uid: System.Web.Configuration.ProcessModelSection.Properties
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Properties
  nameWithType: ProcessModelSection.Properties
  fullName: System.Web.Configuration.ProcessModelSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestLimit
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
  fullName: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
  fullName: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
- uid: System.Web.Configuration.ProcessModelSection.Timeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
  fullName: System.Web.Configuration.ProcessModelSection.Timeout
- uid: System.Web.Configuration.ProcessModelSection.UserName
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: UserName
  nameWithType: ProcessModelSection.UserName
  fullName: System.Web.Configuration.ProcessModelSection.UserName
- uid: System.Web.Configuration.ProcessModelSection.WebGarden
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
  fullName: System.Web.Configuration.ProcessModelSection.WebGarden
- uid: System.Web.Configuration.ProcessModelSection.#ctor*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ProcessModelSection
  nameWithType: ProcessModelSection.ProcessModelSection
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelSection.CpuMask*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
- uid: System.Web.Configuration.ProcessModelSection.Enable*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Enable
  nameWithType: ProcessModelSection.Enable
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
- uid: System.Web.Configuration.ProcessModelSection.LogLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.Password*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Password
  nameWithType: ProcessModelSection.Password
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
- uid: System.Web.Configuration.ProcessModelSection.Properties*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Properties
  nameWithType: ProcessModelSection.Properties
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
- uid: System.Web.Configuration.ProcessModelSection.Timeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
- uid: System.Web.Configuration.ProcessModelSection.UserName*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: UserName
  nameWithType: ProcessModelSection.UserName
- uid: System.Web.Configuration.ProcessModelSection.WebGarden*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
