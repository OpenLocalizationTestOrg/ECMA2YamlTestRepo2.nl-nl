### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ReliableSession
  id: ReliableSession
  children:
  - System.ServiceModel.ReliableSession.#ctor
  - System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  - System.ServiceModel.ReliableSession.InactivityTimeout
  - System.ServiceModel.ReliableSession.Ordered
  langs:
  - csharp
  name: ReliableSession
  nameWithType: ReliableSession
  fullName: System.ServiceModel.ReliableSession
  type: Class
  summary: "Biedt snel toegang tot de eigenschappen van een betrouwbare sessie bindingselement die beschikbaar zijn wanneer u een van de bindingen van het systeem worden geleverd."
  remarks: "De eigenschappen die zijn opgenomen in de klasse ReliableSession zijn de subset van de in de <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>die beschikbaar zijn in een vooraf gedefinieerde binding.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement> Deze subset bestaat uit de <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>en <xref:System.ServiceModel.ReliableSession.Ordered%2A>Eigenschappen.</xref:System.ServiceModel.ReliableSession.Ordered%2A> </xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> De klasse ReliableSession verwijst naar dezelfde objecten als biedt de <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, zodat de waarde van een wijzigt, worden de waarde van de andere te.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement> Deze klasse worden verzameld van deze twee eigenschappen van betrouwbare sessie bindingselement elkaar voor betere zichtbaarheid."
  example:
  - "The following example shows how to create a new reliable session, and access and change the property values of that session. The ReliableSession class allows you to write:  \n  \n [!code-cs[UEReliableSession#1](~/add/codesnippet/csharp/t-system.servicemodel.re_0_1.cs)]\n [!code-vb[UEReliableSession#1](~/add/codesnippet/visualbasic/t-system.servicemodel.re_0_1.vb)]"
  syntax:
    content: public class ReliableSession
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: ReliableSession()
  nameWithType: ReliableSession.ReliableSession()
  fullName: System.ServiceModel.ReliableSession.ReliableSession()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref> klasse."
  syntax:
    content: public ReliableSession ();
    parameters: []
  overload: System.ServiceModel.ReliableSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  id: '#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)'
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: ReliableSession(ReliableSessionBindingElement)
  nameWithType: ReliableSession.ReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.ReliableSession.ReliableSession(ReliableSessionBindingElement)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref> klasse vanuit een betrouwbare sessie bindingselement."
  remarks: ''
  example:
  - >-
    [!code-cs[UEReliableSession#1](~/add/codesnippet/csharp/80f1598c-ddfc-4656-a81f-_1.cs)]
     [!code-vb[UEReliableSession#1](~/add/codesnippet/visualbasic/80f1598c-ddfc-4656-a81f-_1.vb)]
  syntax:
    content: public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);
    parameters:
    - id: reliableSessionBindingElement
      type: System.ServiceModel.Channels.ReliableSessionBindingElement
      description: "De <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> waarvan de eigenschapwaarden worden gebruikt voor het initialiseren van de betrouwbare sessie."
  overload: System.ServiceModel.ReliableSession.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reliableSessionBindingElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
  fullName: System.ServiceModel.ReliableSession.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van een interval van de tijd die een service inactief kan zijn voordat u afsluit."
  remarks: "De eigenschap opgehaald en ingesteld van de waarde van de <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>eigenschap.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>       Activiteit van een kanaal is gedefinieerd als een toepassing of infrastructuur bericht ontvangen. De eigenschap van de time-out voor inactiviteit bepaalt de maximale hoeveelheid tijd tot een niet-actieve sessie actief houden. Als meer dan het opgegeven tijdsinterval InactivityTimeout zonder activiteit is geslaagd, wordt de sessie afgebroken door de infrastructuur en de kanaal-fouten. De betrouwbare sessie is eenzijdig verwijderd.       Als de betreffende toepassing geen berichten heeft verzenden vervolgens de betrouwbare sessie is vanwege inactiviteit; normaal gesproken niet mislukt in plaats daarvan blijft een keepalive-mechanisme de sessie actief voor onbepaalde tijd. Houd er rekening mee dat de verzender onafhankelijk de betrouwbare sessie afbreken kan als er geen toepassingsberichten worden verzonden of ontvangen. De time-out voor inactiviteit verloopt dus doorgaans als netwerkcondities zodanig dat geen berichten van een sortering worden ontvangen of als er een fout op de afzender.       Deze time-out instelling voorkomt u dat de server naar een beveiligingssessie houden als de client niet wordt gesloten. Als de beveiligingssessie een bericht niet voor het tijdsinterval inactiviteit ontvangen heeft, is dit gesloten door de server. Dit vermindert mogelijke een denial of service-aanval.       Wanneer u een betrouwbare sessie gebruikt, zijn er twee verschillende inactiviteit timers die moeten worden voldaan aan de verbinding actief houden. Als een van deze timers inactiviteit uitvalt, wordt de verbinding verbroken.      -De eerste inactiviteitstimer is op de betrouwbare sessie en de InactivityTimeout wordt genoemd. Deze inactiviteitstimer wordt geactiveerd als er geen berichten, toepassing of infrastructuur, zijn ontvangen binnen de time-outperiode. Een bericht infrastructuur is een bericht dat wordt gegenereerd omwille van een van de protocollen in de kanaal-stack, zoals een keep-alive of een bevestiging, in plaats van met toepassingsgegevens.      -De tweede inactiviteitstimer is op de service en gebruikt de <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>instellen van de binding.</xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> Deze inactiviteitstimer wordt geactiveerd als er geen toepassingsberichten worden ontvangen binnen de time-outperiode.       Omdat de verbinding wordt verbroken als de inactiviteitstimer wordt geactiveerd, verhogen InactivityTimeout zodra deze groter dan is <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>heeft geen effect.</xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> De standaardwaarde voor zowel deze time-outs is 10 minuten zodat u altijd te verhogen voor het maken van een verschil bij het gebruik van een betrouwbare sessie van beide."
  example:
  - >-
    [!code-cs[UEReliableSession#2](~/add/codesnippet/csharp/p-system.servicemodel.re_0_1.cs)]
     [!code-vb[UEReliableSession#2](~/add/codesnippet/visualbasic/p-system.servicemodel.re_0_1.vb)]
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>die aangeeft dat de tijdsinterval die een service inactief voordat het wordt gesloten.</xref:System.TimeSpan> De standaardwaarde is 10 minuten."
  overload: System.ServiceModel.ReliableSession.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde ingesteld is kleiner dan of gelijk zijn aan nul."
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.Ordered
  id: Ordered
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSession.Ordered
  fullName: System.ServiceModel.ReliableSession.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de volgorde waarin berichten worden verzonden door levering van berichten moet worden bewaard."
  remarks: "De eigenschap opgehaald en ingesteld van de waarde van de <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>eigenschap.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>"
  example:
  - >-
    [!code-cs[UEReliableSession#2](~/add/codesnippet/csharp/p-system.servicemodel.re_1_1.cs)]
     [!code-vb[UEReliableSession#2](~/add/codesnippet/visualbasic/p-system.servicemodel.re_1_1.vb)]
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als berichten moeten worden afgeleverd in de volgorde waarin ze worden verzonden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ReliableSession.Ordered*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.ReliableSession.#ctor
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession()
  nameWithType: ReliableSession.ReliableSession()
  fullName: System.ServiceModel.ReliableSession.ReliableSession()
- uid: System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession(ReliableSessionBindingElement)
  nameWithType: ReliableSession.ReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.ReliableSession.ReliableSession(ReliableSessionBindingElement)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement
- uid: System.ServiceModel.ReliableSession.InactivityTimeout
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
  fullName: System.ServiceModel.ReliableSession.InactivityTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ReliableSession.Ordered
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: Ordered
  nameWithType: ReliableSession.Ordered
  fullName: System.ServiceModel.ReliableSession.Ordered
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ReliableSession.#ctor*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession
  nameWithType: ReliableSession.ReliableSession
- uid: System.ServiceModel.ReliableSession.InactivityTimeout*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
- uid: System.ServiceModel.ReliableSession.Ordered*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: Ordered
  nameWithType: ReliableSession.Ordered
