### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.NetCodeGroup
  id: NetCodeGroup
  children:
  - System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  - System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  - System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  - System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  - System.Security.Policy.NetCodeGroup.AttributeString
  - System.Security.Policy.NetCodeGroup.Copy
  - System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.Equals(System.Object)
  - System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  - System.Security.Policy.NetCodeGroup.GetHashCode
  - System.Security.Policy.NetCodeGroup.MergeLogic
  - System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.PermissionSetName
  - System.Security.Policy.NetCodeGroup.ResetConnectAccess
  - System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: NetCodeGroup
  nameWithType: NetCodeGroup
  fullName: System.Security.Policy.NetCodeGroup
  type: Class
  summary: "Geeft het recht van de webserver naar de site waarvan de assembly is gedownload. Deze klasse kan niet worden overgenomen."
  remarks: "Groepen zijn de bouwstenen van code access security-beleid. Elke beleidsniveau bestaat uit een hoofdcodegroep waarvoor een of meer onderliggende groepen. Elke groep van onderliggende code kan hebben een eigen onderliggende codegroepen; Dit gedrag wordt uitgebreid naar een willekeurig aantal niveaus, een boomstructuur vormen. Elke codegroep bevat een lidmaatschapsvoorwaarde waarmee wordt bepaald of een bepaalde assembly bij de groep hoort, op basis van het bewijs van die assembly. Alleen groepen waarvan van de lidmaatschapsvoorwaarden overeen met een bepaalde assembly, samen met hun codegroepen onderliggende code access security-beleid van toepassing.       NetCodeGroup te heeft dezelfde samenvoegen heeft als die van <xref:System.Security.Policy.UnionCodeGroup>; vormt de samenvoeging van de <xref:System.Security.Policy.PolicyStatement>objecten van alle overeenkomende onderliggende code groepen en de <xref:System.Security.Policy.PolicyStatement>wordt gegenereerd uit de invoer <xref:System.Security.Policy.Url>bewijs.</xref:System.Security.Policy.Url> </xref:System.Security.Policy.PolicyStatement> </xref:System.Security.Policy.PolicyStatement> </xref:System.Security.Policy.UnionCodeGroup> NetCodeGroup te resulteert echter in een machtiging met een dynamisch berekende <xref:System.Net.WebPermission>of verleent toegang tot een verbinding maken met de site waarvan de code wordt uitgevoerd. <xref:System.Security.Policy.UnionCodeGroup>gewoon retourneert een statische machtigingenset.</xref:System.Security.Policy.UnionCodeGroup> </xref:System.Net.WebPermission>       Wanneer een NetCodeGroup te is gemaakt, bevat deze de verbinding toegang standaardregels weergegeven in de volgende tabel.      | URI-schema | Regel |   |----------------|----------|   | bestand | Er is geen toegang tot de verbindingen met de oorspronkelijke server is toegestaan. |   | http | HTTP en HTTPS-toegang is toegestaan via de poort van oorsprong. |   | https | HTTPS-toegang is toegestaan via de poort van oorsprong. |       U kunt beheren met het schema en de poort die code is toegestaan voor gebruik bij verbinding met de site van oorsprong door een <xref:System.Security.Policy.CodeConnectAccess>object met de juiste <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>en <xref:System.Security.Policy.CodeConnectAccess.Port%2A>eigenschap waarden naar de <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>methode.</xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> </xref:System.Security.Policy.CodeConnectAccess.Port%2A> </xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> </xref:System.Security.Policy.CodeConnectAccess> Kunt u de toegangsregel van een verbinding die wordt gebruikt wanneer het schema van de oorsprong niet aanwezig in het bewijs is of wordt niet herkend door te geven <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>(&quot;&quot;) als het schema.</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> U kunt ook een verbinding toegangsregel die van toepassing als er geen regel voor verbinding met een overeenkomende schema door op te geven maken <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>(&quot; * &quot;) als het schema.</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>      > [!NOTE] > Als code het URI-schema als bewijs niet verzenden komt, toegang is toegestaan volgens een schema terug naar de bronsite."
  example:
  - "The following code example demonstrates creating a NetCodeGroup and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/t-system.security.policy_8_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/t-system.security.policy_8_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NetCodeGroup : System.Security.Policy.CodeGroup
  inheritance:
  - System.Object
  - System.Security.Policy.CodeGroup
  implements: []
  inheritedMembers:
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  id: '#ctor(System.Security.Policy.IMembershipCondition)'
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref> klasse."
  remarks: "Wanneer een <xref:System.Security.Policy.NetCodeGroup>is gemaakt, de verbinding toegang standaardregels weergegeven in de volgende tabel bevat.</xref:System.Security.Policy.NetCodeGroup>      | Schema | Regel |   |------------|----------|   | bestand | Er is geen toegang tot de verbindingen met de oorspronkelijke server is toegestaan. |   | http | HTTP en HTTPS-toegang is toegestaan via de poort van oorsprong. |   | https | HTTPS-toegang is toegestaan via de poort van oorsprong. |"
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/e7170b34-662f-4231-84e8-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/e7170b34-662f-4231-84e8-_1.cpp)]"
  syntax:
    content: public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: "Een lidmaatschapsvoorwaarde bewijs om te bepalen of deze codegroep code access security-beleid van toepassing is te testen."
  overload: System.Security.Policy.NetCodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>membershipCondition</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het type van de <code> membershipCondition </code> parameter is niet geldig."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  id: AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Bevat een waarde die wordt gebruikt voor toegang tot de verbindingen voor code met een onbekende of niet-herkende oorsprong schema opgeven."
  remarks: "Bij het aanroepen van de <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>methode, geeft u een schema en een bijbehorende <xref:System.Security.Policy.CodeConnectAccess>object.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> Alle <xref:System.Security.Policy.CodeConnectAccess>objecten die u toevoegt aan de <xref:System.Security.Policy.NetCodeGroup>AbsentOriginScheme gebruiken als het schema van de oorsprong worden toegepast wanneer de code oorsprong schema is niet aanwezig in de bewijs of geen schema wordt herkend door de <xref:System.Security.Policy.NetCodeGroup>object.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       Om op te geven de <xref:System.Security.Policy.CodeConnectAccess>objecten moet worden gebruikt wanneer de code oorsprong schema komt niet overeen met een van de schema&quot;s die zijn opgenomen in de reeks oorsprong schema&quot;s die zijn toegevoegd aan de huidige <xref:System.Security.Policy.NetCodeGroup>object, gebruikt u de <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>waarde.</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> </xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       De waarde van het veld AbsentOriginScheme is een lege tekenreeks (&quot;&quot;)."
  syntax:
    content: public static readonly string AbsentOriginScheme;
    return:
      type: System.String
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  id: AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "De opgegeven Verbindingstoegang toegevoegd aan de huidige codegroep."
  remarks: "U kunt meerdere toevoegen <xref:System.Security.Policy.CodeConnectAccess>objecten voor dezelfde `origin scheme`.</xref:System.Security.Policy.CodeConnectAccess> Als een `origin scheme` heeft al een of meer gekoppeld <xref:System.Security.Policy.CodeConnectAccess>objecten, geven `null` voor `connectAccess` heeft geen effect.</xref:System.Security.Policy.CodeConnectAccess> Als het schema van de oorsprong komt niet hebt gekoppeld <xref:System.Security.Policy.CodeConnectAccess>objecten, geven `null` voor `connectAccess` wordt voorkomen dat code met een schema oorsprong die overeenkomt met `originScheme` toegang krijgen tot de bronserver.</xref:System.Security.Policy.CodeConnectAccess>"
  example:
  - "The following code example demonstrates creating and adding <xref:System.Security.Policy.CodeConnectAccess> objects to a <xref:System.Security.Policy.NetCodeGroup>.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/c09efa70-70d7-4f2a-aa3b-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/c09efa70-70d7-4f2a-aa3b-_1.cpp)]"
  syntax:
    content: public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);
    parameters:
    - id: originScheme
      type: System.String
      description: "Een <xref:System.String>met het schema voor het vergelijken van de code-schema.</xref:System.String>"
    - id: connectAccess
      type: System.Security.Policy.CodeConnectAccess
      description: "Een <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref> die aangeeft dat het schema en de poort code kunt gebruiken om te verbinden terug naar de bronserver."
  overload: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>originScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>originScheme</code>bevat tekens die niet zijn toegestaan in schema&quot;s.       -or-       <code>originScheme</code> = <xref href=&quot;System.Security.Policy.NetCodeGroup.AbsentOriginScheme&quot;></xref> and <code>connectAccess</code> specifies <xref href=&quot;System.Security.Policy.CodeConnectAccess.OriginScheme&quot;></xref> as its scheme."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  id: AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Bevat een waarde die wordt gebruikt voor het opgeven van een ander niet-gespecificeerde oorsprong criterium."
  remarks: "Bij het aanroepen van de <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>methode, geeft u een schema en een bijbehorende <xref:System.Security.Policy.CodeConnectAccess>object.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> U kunt de waarde van het veld AnyOtherOriginScheme gebruiken om op te geven de <xref:System.Security.Policy.CodeConnectAccess>objecten die moeten worden gebruikt voor een schema dat u niet expliciet is opgenomen in de reeks oorsprong schema&quot;s die zijn toegevoegd aan de huidige <xref:System.Security.Policy.NetCodeGroup>object.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       De <xref:System.Security.Policy.CodeConnectAccess>objecten die zijn opgegeven met het veld AnyOtherOriginScheme worden alleen gebruikt als de code oorsprong schema komt niet overeen met een van de schema&quot;s die zijn opgenomen in de reeks oorsprong schema&quot;s die zijn toegevoegd aan de huidige <xref:System.Security.Policy.NetCodeGroup>object.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       Om op te geven de <xref:System.Security.Policy.CodeConnectAccess>objecten toe te passen wanneer de code oorsprong schema niet beschikbaar in de bewijs is of niet wordt herkend, gebruiken de <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>waarde.</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> </xref:System.Security.Policy.CodeConnectAccess>       De waarde van het veld AnyOtherOriginScheme is &quot; * &quot;."
  syntax:
    content: public static readonly string AnyOtherOriginScheme;
    return:
      type: System.String
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  id: AttributeString
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee haalt u een tekenreeksrepresentatie van de kenmerken van de beleid-instructie voor de codegroep."
  syntax:
    content: public override string AttributeString { get; }
    return:
      type: System.String
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Policy.NetCodeGroup.AttributeString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee wordt een grondige kopie van de huidige codegroep."
  remarks: "Deze methode maakt een diepe kopie van de codegroep, wat betekent dat ook kopieën van alle objecten in die de codegroep bevat worden aangebracht."
  syntax:
    content: public override System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: "Een gelijkwaardige kopie van de huidige codegroep, inclusief het van lidmaatschapsvoorwaarden en de onderliggende codegroepen."
  overload: System.Security.Policy.NetCodeGroup.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "Moet worden toegevoegd."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "Moet worden toegevoegd."
  overload: System.Security.Policy.NetCodeGroup.CreateXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee wordt bepaald of de opgegeven code-groep gelijk aan de huidige groep in de code is."
  remarks: "De volgende gegevens worden gebruikt om te bepalen van de gelijkheid van twee <xref:System.Security.Policy.NetCodeGroup>objecten: - de <xref:System.Security.Policy.CodeGroup.Name%2A>en <xref:System.Security.Policy.CodeGroup.Description%2A>Eigenschappen.</xref:System.Security.Policy.CodeGroup.Description%2A> </xref:System.Security.Policy.CodeGroup.Name%2A> </xref:System.Security.Policy.NetCodeGroup>      -De <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>eigenschap.</xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>      -De verzameling van oorsprong schema&quot;s en de bijbehorende <xref:System.Security.Policy.CodeConnectAccess>objecten.</xref:System.Security.Policy.CodeConnectAccess>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "De <xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref> object moeten worden vergeleken met de huidige groep in de code."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven code gelijk aan de huidige codegroep is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.NetCodeGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  id: GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee haalt u de verbindingsgegevens van de toegang voor de huidige groep in de code."
  remarks: "In elke dictionary-vermelding de <xref:System.Collections.DictionaryEntry.Key%2A>eigenschapswaarde wordt het schema van de oorsprong, en de <xref:System.Collections.DictionaryEntry.Value%2A>eigenschapswaarde is de matrix van gekoppelde <xref:System.Security.Policy.CodeConnectAccess>objecten.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Collections.DictionaryEntry.Value%2A> </xref:System.Collections.DictionaryEntry.Key%2A> Als er geen bijbehorende <xref:System.Security.Policy.CodeConnectAccess>objecten, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName>retourneert een lege matrix.</xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> </xref:System.Security.Policy.CodeConnectAccess>"
  example:
  - "The following code example demonstrates displaying the connection access rules for a <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n [!code-cs[NclCodeGroup#8](~/add/codesnippet/csharp/m-system.security.policy_21_1.cs)]\n [!code-cpp[NclCodeGroup#8](~/add/codesnippet/cpp/m-system.security.policy_21_1.cpp)]"
  syntax:
    content: public System.Collections.DictionaryEntry[] GetConnectAccessRules ();
    parameters: []
    return:
      type: System.Collections.DictionaryEntry[]
      description: "Een <xref:System.Collections.DictionaryEntry>matrix met toegang tot verbindingsgegevens.</xref:System.Collections.DictionaryEntry>"
  overload: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee wordt de hash-code van de huidige codegroep opgehaald."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "De hashcode van de huidige groep in de code."
  overload: System.Security.Policy.NetCodeGroup.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee haalt u de logica te gebruiken voor het samenvoegen van groepen."
  syntax:
    content: public override string MergeLogic { get; }
    return:
      type: System.String
      description: "De tekenreeks &quot;Union&quot;."
  overload: System.Security.Policy.NetCodeGroup.MergeLogic*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "Moet worden toegevoegd."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "Moet worden toegevoegd."
  overload: System.Security.Policy.NetCodeGroup.ParseXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  id: PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee wordt de naam van de <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> voor de codegroep."
  syntax:
    content: public override string PermissionSetName { get; }
    return:
      type: System.String
      description: "Altijd de tekenreeks &quot;Dezelfde website.&quot;"
  overload: System.Security.Policy.NetCodeGroup.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  id: ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee verwijdert u alle access-verbindingsgegevens voor de huidige groep in de code."
  remarks: "Gebruik deze methode om te verwijderen van het systeem geleverd verbinding toegang standaardregels.       De standaardregels worden weergegeven in de volgende tabel.      | Schema | Regel |   |------------|----------|   | bestand | Er is geen toegang tot de verbindingen met de oorspronkelijke server is toegestaan. |   | http | HTTP en HTTPS-toegang is toegestaan via de poort van oorsprong. |   | https | HTTPS-toegang is toegestaan via de poort van oorsprong. |"
  example:
  - "The following code example demonstrates calling this method to remove the default code access connection rules.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/m-system.security.policy_32_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/m-system.security.policy_32_1.cpp)]"
  syntax:
    content: public void ResetConnectAccess ();
    parameters: []
  overload: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Beleid voor de codegroep en de afhankelijkheden voor een set bewijs oplossing."
  remarks: "Deze methode evalueert opgegeven bewijs van een assembly te laden, de codegroep door eerst de lidmaatschapsvoorwaarde op basis van de opgegeven bewijs controleren. Als er een overeenkomst is, retourneert deze methode een instructie beleid voor de codegroep, met inbegrip van de evaluatie van onderliggende codegroepen.       De werking van deze methode is als volgt: als de lidmaatschapsvoorwaarde komt niet overeen met de opgegeven bewijs, geretourneerd `null`; anders set zin de machtigingenset moeten worden geretourneerd (P) gelijk is aan de codegroep beleidsverklaring en doorgaan. Voor elke groep onderliggende code kunt oplossen door de codegroep met de dezelfde bewijs; Als het resultaat niet is `null`, die beleidsverklaring retourneren. Als er geen onderliggende codegroep overeenkomen, retourneren P (overzicht van de bovenliggende beleid)."
  syntax:
    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> voor de assembly."
    return:
      type: System.Security.Policy.PolicyStatement
      description: "Een <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref> die bestaat uit de machtigingen verleend door de codegroep met optionele kenmerken of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de codegroep niet van toepassing (de lidmaatschapsvoorwaarde komt niet overeen met de opgegeven bewijs)."
  overload: System.Security.Policy.NetCodeGroup.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Meer dan één codegroep (inclusief de code bovenliggende groep en alle onderliggende groepen) is gemarkeerd als <xref href=&quot;System.Security.Policy.PolicyStatementAttribute&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee wordt het overeenkomende codegroepen."
  remarks: "Deze methode evalueert opgegeven bewijs van een assembly te laden, de codegroep door eerst de lidmaatschapsvoorwaarde op basis van de opgegeven bewijs controleren. Als er een overeenkomst is, retourneert deze methode een hoofdcodegroep. De codegroep die wordt geretourneerd kan onderliggende codegroepen die op zijn beurt ook onderliggende codegroepen, wellicht zodat de geretourneerde waarde geeft de volledige reeks codegroepen die met de opgegeven bewijsmateriaal overeenkomen bevatten."
  syntax:
    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Het bewijs van de assembly."
    return:
      type: System.Security.Policy.CodeGroup
      description: "De volledige set van codegroepen die met de bewijsmateriaal overeenkomen."
  overload: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Policy.CodeGroup
  isExternal: false
  name: System.Security.Policy.CodeGroup
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
- uid: System.Security.Policy.CodeConnectAccess
  parent: System.Security.Policy
  isExternal: false
  name: CodeConnectAccess
  nameWithType: CodeConnectAccess
  fullName: System.Security.Policy.CodeConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.NetCodeGroup.#ctor*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup
  nameWithType: NetCodeGroup.NetCodeGroup
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess
  nameWithType: NetCodeGroup.AddConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AttributeString*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy
  nameWithType: NetCodeGroup.Copy
- uid: System.Security.Policy.NetCodeGroup.CreateXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml
  nameWithType: NetCodeGroup.CreateXml
- uid: System.Security.Policy.NetCodeGroup.Equals*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals
  nameWithType: NetCodeGroup.Equals
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules
  nameWithType: NetCodeGroup.GetConnectAccessRules
- uid: System.Security.Policy.NetCodeGroup.GetHashCode*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode
  nameWithType: NetCodeGroup.GetHashCode
- uid: System.Security.Policy.NetCodeGroup.MergeLogic*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml
  nameWithType: NetCodeGroup.ParseXml
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess
  nameWithType: NetCodeGroup.ResetConnectAccess
- uid: System.Security.Policy.NetCodeGroup.Resolve*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve
  nameWithType: NetCodeGroup.Resolve
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups
