### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonAcl
  id: CommonAcl
  children:
  - System.Security.AccessControl.CommonAcl.BinaryLength
  - System.Security.AccessControl.CommonAcl.Count
  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAcl.IsCanonical
  - System.Security.AccessControl.CommonAcl.IsContainer
  - System.Security.AccessControl.CommonAcl.IsDS
  - System.Security.AccessControl.CommonAcl.Item(System.Int32)
  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - System.Security.AccessControl.CommonAcl.Revision
  langs:
  - csharp
  name: CommonAcl
  nameWithType: CommonAcl
  fullName: System.Security.AccessControl.CommonAcl
  type: Class
  summary: "Vertegenwoordigt een toegangsbeheerlijst (ACL) en is de basisklasse voor de <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> en <xref href=&quot;System.Security.AccessControl.SystemAcl&quot;> </xref> klassen."
  remarks: "-   Bepaalde combinaties van overname en toegang masker vlaggen zijn nutteloos:-een ACE access control entry () met een nul-toegangsmasker wordt verwijderd.      -Overnemen-only ACE&quot;s binnen de object-ACL&quot;s worden verwijderd.      - <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.InheritanceFlags>, en <xref:System.Security.AccessControl.InheritanceFlags>vlaggen bij alle vermeldingen voor toegangsbeheer in leaf object-ACL&quot;s worden gewist.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags> </xref:System.Security.AccessControl.PropagationFlags>      -ACE&quot;s waarvoor een <xref:System.Security.AccessControl.PropagationFlags>vlag in het ontbreken van de <xref:System.Security.AccessControl.InheritanceFlags>of <xref:System.Security.AccessControl.InheritanceFlags>vlag zijn nutteloos; ze zijn verwijderd.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags>      -De <xref:System.Security.AccessControl.PropagationFlags>vlag in het ontbreken van de <xref:System.Security.AccessControl.InheritanceFlags>of <xref:System.Security.AccessControl.InheritanceFlags>vlag kan worden verwijderd.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags>      -ACE&quot;s waarvoor een <xref:System.Security.AccessControl.AuditFlags>waarde van <xref:System.Security.AccessControl.AuditFlags>of <xref:System.Security.AccessControl.AuditFlags>in discretionaire toegangsbeheer lijsten (DACL&quot;s) worden verwijderd.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>      -Een ACE waarvoor geen een audit <xref:System.Security.AccessControl.AuditFlags>of <xref:System.Security.AccessControl.AuditFlags>wordt verwijderd.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>      -Van-DACL&quot;s, SystemAudit en SystemAlarm ACE&quot;s verwijderd.      -Op systeem toegangsbeheerlijsten (SACL&quot;s), worden AccessAllowed en AccessDenied ACE&quot;s verwijderd.       Canonieke volgorde gehandhaafd door het volgende algoritme:-expliciete ACE&quot;s hebben voorrang op overgenomen ACE&quot;s; Deze regel geldt voor zowel DACL&quot;s en SACL&quot;s.      -In DACL&quot;s tussen de expliciete ACE&quot;s voorrang ACE&quot;s die toegang weigeren boven ACE&quot;s die toegang toestaan. De vermeldingen voor toegangsbeheer die voorafgaan object ACE&quot;s voor directoryobject ACL&quot;s.      -Alle algemene ACE&quot;s hebben voorrang op noncommon ACE&quot;s.      -Overgenomen ACE&quot;s behouden hun relatieve volgorde na canonicity.      -Niet-herkende en aangepaste ACE&quot;s zijn niet toegestaan in DACL&quot;s en SACL&quot;s.      -Binnen aaneengesloten bereiken (expliciete AccessDenied en AccessAllowed ACE&quot;s op alle expliciete ACE&quot;s in SACL&quot;s DACL&quot;s), de ACE&quot;s worden gesorteerd met behulp van de <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A>methoden van de <xref:System.Security.Principal.SecurityIdentifier>objecten gekoppeld met de vermeldingen voor toegangsbeheer.</xref:System.Security.Principal.SecurityIdentifier> </xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A>       Aangrenzende ACE&quot;s worden gecombineerd, indien van toepassing.  Dit vermindert de grootte van de ACL zonder de access control-semantiek het kent."
  syntax:
    content: 'public abstract class CommonAcl : System.Security.AccessControl.GenericAcl'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee haalt u de lengte in bytes van de binaire voorstelling van het huidige <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object. Deze lengte moet worden gebruikt voor het marshallen van de toegangsbeheerlijst (ACL) in een binaire matrix met behulp van de <xref:System.Security.AccessControl.CommonAcl.GetBinaryForm*>methode.</xref:System.Security.AccessControl.CommonAcl.GetBinaryForm*>"
  syntax:
    content: public override sealed int BinaryLength { get; }
    return:
      type: System.Int32
      description: "De lengte in bytes, van de binaire voorstelling van het huidige <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object."
  overload: System.Security.AccessControl.CommonAcl.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Count
  id: Count
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee haalt u het aantal vermeldingen voor toegangsbeheer (ACE&quot;s) in de huidige <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object."
  syntax:
    content: public override sealed int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal ACE&quot;s in de huidige <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object."
  overload: System.Security.AccessControl.CommonAcl.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gemarshald van de inhoud van de <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object in de opgegeven byte matrix te beginnen bij de opgegeven offset."
  syntax:
    content: public override sealed void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "De bytematrix waarin de inhoud van de <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> is gemarshald."
    - id: offset
      type: System.Int32
      description: "De verschuiving waar starten marshallen."
  overload: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  id: IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee wordt een Booleaanse waarde die aangeeft of de toegangscontrole-vermeldingen (ACE&quot;s) in de huidige <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object zich in de canonieke volgorde."
  syntax:
    content: public bool IsCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de ACE&quot;s in de huidige <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object zich in de canonieke volgorde; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonAcl.IsCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Sets of de <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object is een container."
  syntax:
    content: public bool IsContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object is een container."
  overload: System.Security.AccessControl.CommonAcl.IsContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsDS
  id: IsDS
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Sets of de huidige <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> -object is een directory object toegangsbeheerlijst (ACL)."
  syntax:
    content: public bool IsDS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> -object is een Active directory-object-ACL."
  overload: System.Security.AccessControl.CommonAcl.IsDS*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> bij de opgegeven index."
  syntax:
    content: public override sealed System.Security.AccessControl.GenericAce this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> ophalen of instellen."
    return:
      type: System.Security.AccessControl.GenericAce
      description: "De <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> bij de opgegeven index."
  overload: System.Security.AccessControl.CommonAcl.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  id: Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle vermeldingen voor toegangsbeheer (ACE&quot;s) deel uit van deze <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object die zijn gekoppeld aan de opgegeven <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> object."
  syntax:
    content: public void Purge (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "De <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> object om te controleren."
  overload: System.Security.AccessControl.CommonAcl.Purge*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  id: RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle overgenomen vermeldingen voor toegangsbeheer (ACE&quot;s) van deze <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> object."
  syntax:
    content: public void RemoveInheritedAces ();
    parameters: []
  overload: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Revision
  id: Revision
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Haalt het revisieniveau van de <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref>."
  syntax:
    content: public override sealed byte Revision { get; }
    return:
      type: System.Byte
      description: "Een bytewaarde waarmee het revisieniveau van de <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref>."
  overload: System.Security.AccessControl.CommonAcl.Revision*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: System.Security.AccessControl.GenericAcl
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CommonAcl.Count
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
- uid: System.Security.AccessControl.GenericAce
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAce
  nameWithType: GenericAce
  fullName: System.Security.AccessControl.GenericAce
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
- uid: System.Security.AccessControl.CommonAcl.Revision
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.CommonAcl.BinaryLength*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
- uid: System.Security.AccessControl.CommonAcl.Count*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm
  nameWithType: CommonAcl.GetBinaryForm
- uid: System.Security.AccessControl.CommonAcl.IsCanonical*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
- uid: System.Security.AccessControl.CommonAcl.IsContainer*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item
  nameWithType: CommonAcl.Item
- uid: System.Security.AccessControl.CommonAcl.Purge*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge
  nameWithType: CommonAcl.Purge
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces
  nameWithType: CommonAcl.RemoveInheritedAces
- uid: System.Security.AccessControl.CommonAcl.Revision*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
