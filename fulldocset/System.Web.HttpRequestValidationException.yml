### YamlMime:ManagedReference
items:
- uid: System.Web.HttpRequestValidationException
  id: HttpRequestValidationException
  children:
  - System.Web.HttpRequestValidationException.#ctor
  - System.Web.HttpRequestValidationException.#ctor(System.String)
  - System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException
  fullName: System.Web.HttpRequestValidationException
  type: Class
  summary: "De uitzondering die wordt gegenereerd wanneer een mogelijk schadelijke invoerreeks wordt ontvangen van de client als onderdeel van de gegevens van aanvragen. Deze klasse kan niet worden overgenomen."
  remarks: "Beperkingen en valideren van invoer van de gebruiker is het essentieel zijn in een webtoepassing om hackeraanvallen die afhankelijk van schadelijke invoer tekenreeksen zijn te voorkomen. Cross-site scripting aanvallen zijn een voorbeeld van dergelijke hacks. Andere typen schadelijke of ongewenste gegevens kunnen worden doorgegeven in een aanvraag tot en met verschillende vormen van de invoer. Door het beperken van de soorten gegevens die op een laag niveau in een toepassing wordt doorgegeven, kunt u voorkomen dat ongewenste gebeurtenissen, zelfs als programmeurs die met behulp van uw code plaats niet de juiste validatie-technieken aanwezig.       Aanvraagvalidatie detecteert mogelijk schadelijke client invoer en genereert deze uitzondering om af te breken verwerking van de aanvraag. Een aanvraag afbreken kan duiden op een poging tot inbreuk op de beveiliging van uw toepassing, zoals een cross-site scripting-aanval. Het is raadzaam dat uw toepassing expliciet controleren alle invoer met betrekking tot de aanvraag wordt afgebroken. U kunt echter uitschakelen Aanvraagvalidatie door in te stellen de `validateRequest` kenmerk in de richtlijn `false`, zoals wordt weergegeven in het volgende voorbeeld: `<%@ Page validateRequest=&quot;false&quot; %>` als wilt uitschakelen aanvraagvalidatie voor uw toepassing, moet u aanpast of een Web.config-bestand voor uw toepassing en een set maakt de `validateRequest` kenmerk van de `pages` sectie naar `false`, zoals wordt weergegeven in het volgende voorbeeld: ```   <configuration>      <system.web>        <pages validateRequest=&quot;false&quot; />      </system.web>    </configuration>    ``` aanvraagvalidatie voor alle toepassingen op uw server uitschakelen , kunt u deze wijziging in het Machine.config-bestand.      > [!NOTE] > Is het raadzaam dat uw toepassing expliciet alle invoer gebruikt naast de Aanvraagvalidatie uitgevoerd door ASP.NET controleren. De validatiefunctie aanvraag kan niet alle catch-aanvallen, met name voor die specifiek op basis van uw toepassingslogica worden ontworpen."
  example:
  - "The following code example demonstrates how to check for malicious user input by using an HttpRequestValidationException.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpRequestValidationException#1](~/add/codesnippet/visualbasic/t-system.web.httprequest_1.aspx)]\n [!code-cs[HttpRequestValidationException#1](~/add/codesnippet/csharp/t-system.web.httprequest_1.aspx)]"
  syntax:
    content: 'public sealed class HttpRequestValidationException : System.Web.HttpException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  - System.Web.HttpException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  - System.Web.HttpException.CreateFromLastError(System.String)
  - System.Web.HttpException.GetHtmlErrorMessage
  - System.Web.HttpException.GetHttpCode
  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.WebEventCode
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor
  id: '#ctor'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt een nieuw exemplaar van de <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> klasse."
  syntax:
    content: public HttpRequestValidationException ();
    parameters: []
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt een nieuw <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> uitzondering met het opgegeven foutbericht."
  remarks: "De inhoud van de `message` parameter is bedoeld als menselijke kan worden gelezen. De aanroeper van de constructor HttpRequestValidationException is vereist om ervoor te zorgen dat de `message` tekenreeks is gelokaliseerd."
  syntax:
    content: public HttpRequestValidationException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een tekenreeks die de fout wordt beschreven."
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> klasse met een opgegeven foutbericht en een verwijzing naar de interne uitzondering dat de oorzaak van de uitzondering."
  remarks: "Een uitzondering die is gegenereerd als direct resultaat van een eerdere uitzondering moet een verwijzing bevatten naar de vorige uitzondering in de <xref:System.Exception.InnerException%2A>eigenschap.</xref:System.Exception.InnerException%2A> De <xref:System.Exception.InnerException%2A>eigenschap dezelfde waarde die is doorgegeven aan de constructor HttpRequestValidationException of `null` als de <xref:System.Exception.InnerException%2A>eigenschap levert niet de waarde van de binnenste uitzondering voor de constructor HttpRequestValidationException.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public HttpRequestValidationException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Een foutbericht met uitleg over de reden voor de uitzondering."
    - id: innerException
      type: System.Exception
      description: "De uitzondering die de oorzaak van de huidige uitzondering. Als deze parameter niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, de huidige uitzondering is opgetreden tijdens een <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> blok die verantwoordelijk is voor de interne uitzondering."
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.HttpException
  isExternal: false
  name: System.Web.HttpException
- uid: System.Web.HttpRequestValidationException.#ctor
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpRequestValidationException.#ctor*
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException.HttpRequestValidationException
