### YamlMime:ManagedReference
items:
- uid: System.Windows.LogicalTreeHelper
  id: LogicalTreeHelper
  children:
  - System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  - System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  langs:
  - csharp
  name: LogicalTreeHelper
  nameWithType: LogicalTreeHelper
  fullName: System.Windows.LogicalTreeHelper
  type: Class
  summary: "Statische methoden voor het opvragen van objecten in de logische structuur biedt."
  remarks: "De LogicalTreeHelper klasse biedt methoden die u gebruiken kunt om terug te keren onderliggende verzamelingen van objecten of specifieke objecten uit binnen subknooppunten van de logische structuur. De meeste van de object-structuur-bewerkingen die u normaal gesproken uitvoert worden echter ook blootgesteld door dezelfde methoden of eigenschappen op <xref:System.Windows.FrameworkElement>of <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Bijvoorbeeld, probeert u het volgende: - in plaats van het aanroepen van de statische <xref:System.Windows.LogicalTreeHelper.GetChildren%2A>methode, die een enumerator voor het logische onderliggende objecten retourneert, gebruikt u de toegewezen verzameling weergegeven in het inhoudsmodel voor dat object.</xref:System.Windows.LogicalTreeHelper.GetChildren%2A> Bijna alle objecten die ondersteuning bieden voor een inhoudsmodel tonen enige eigenschap die bevat de verzameling onderliggende objecten en verzameling interface rechtstreeks ondersteuning biedt voor die verzameling.      -In plaats van het aanroepen van de statische <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>methode voor het verkrijgen van een onderliggend object door te geven van de naam, de aanroep van de <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>of <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>methode voor specifieke objecten.</xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>       LogicalTreeHelper is vooral handig voor analyse-scenario&quot;s waarin u onderweg omhoog of omlaag in de logische structuur recursief tot en met meerdere niveaus en wilt gebruiken een consistente benadering voor het onderzoeken van de verschillende bovenliggende of onderliggende objecten. In dit geval u opent mogelijk een combinatie van inhoud modellen, en het meer inhoud-model met specifieke API&quot;s is te complex."
  syntax:
    content: public static class LogicalTreeHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  id: BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Probeert te zorgen dat de gevraagde UI-element in de weergave en genereert de <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> gebeurtenis op de doelserver om de resultaten gerapporteerd."
  remarks: "Het is doorgaans handiger om aan te roepen het Exemplaarmethoden <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName>of <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName>in plaats van deze methode statische hulpprogramma.</xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName> Het gedrag van het Exemplaarmethoden is gelijk aan het gedrag van de statische methode.       Zelfs als de `current` UI opgegeven element is een <xref:System.Windows.FrameworkContentElement>, de resulterende gebeurtenis nog steeds hetzelfde <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>gebeurtenis met de oorspronkelijke <xref:System.Windows.FrameworkContentElement>worden geïdentificeerd door het controleren van de gegevens van de gebeurtenis van de gebeurtenis.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement>"
  syntax:
    content: public static void BringIntoView (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "De UI-element in de weergave te brengen."
  overload: System.Windows.LogicalTreeHelper.BringIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  id: FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Probeert opzoeken en retourneren van een object dat de opgegeven naam. De zoekactie wordt gestart vanuit het opgegeven object en blijft in subknooppunten van de logische structuur."
  remarks: "De methoden <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>en <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>Oppervlakkig gezien lijken vergelijkbaar zijn met FindLogicalNode, maar werkt door verschillende logica:-de richting van de zoekactie voor FindLogicalNode is naar de onderliggende objecten (omlaag in de boomstructuur); de richting van de zoekactie voor de `FindName` methoden is naar de bovenliggende objecten (omhoog in de boomstructuur).</xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>      -De `FindName` methoden zijn bepaald door het concept van een XAML-namescope. Met behulp van `FindName` wordt gegarandeerd dat slechts één object met die naam bestaat, omdat de XAML namescopes uniekheid afdwingen. Daarentegen FindLogicalNode XAML namescope negeert en mogelijk cross-XAML namescope grenzen tijdens de zoekopdracht. Hierdoor is er geen garantie Uniekheid van de `elementName` naam zodra grenzen worden overschreden. Zie voor meer informatie over XAML namescopes [WPF XAML Namescopes](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);
    parameters:
    - id: logicalTreeNode
      type: System.Windows.DependencyObject
      description: "Het object om te beginnen met het zoeken van. Dit object moet een <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> of een <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    - id: elementName
      type: System.String
      description: "De naam van het object te vinden."
    return:
      type: System.Windows.DependencyObject
      description: "Het object met de overeenkomende naam als een wordt gevonden; retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen overeenkomende naam is gevonden in de logische structuur."
  overload: System.Windows.LogicalTreeHelper.FindLogicalNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  id: GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Retourneert de collectie direct onderliggende objecten van het opgegeven object door de logische structuur te verwerken."
  remarks: "Gebruik deze methode handtekening en helper voornamelijk wanneer u niet zeker weet of `current` is een <xref:System.Windows.FrameworkElement>of <xref:System.Windows.FrameworkContentElement>en ook niet zeker weet of de klasse ondersteunt een eigen verzameling inhoudsmodel.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Als u het type van het object dat u een query uitvoeren bepalen kunt wilt, controleert u de specifieke eigenschap inhoud waarvan u weet dat op dat type bestaat. Als u weet dat het object u zoekt is bijvoorbeeld een <xref:System.Windows.Controls.ItemsControl>, Controleer de <xref:System.Windows.Controls.ItemsControl.Items%2A>eigenschap ophalen van een sterk getypeerde verzameling, die ondersteuning voor verzameling interface heeft en is waarschijnlijk meer doen dan een enumerator.</xref:System.Windows.Controls.ItemsControl.Items%2A> </xref:System.Windows.Controls.ItemsControl>"
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Het object waarvan de logische structuur kan verwerken. Dit is verwacht gedrag kan een <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> of <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Collections.IEnumerable
      description: "De verzameling invoeroverzicht van direct onderliggende objecten van de logische structuur van het opgegeven object."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  id: GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Retourneert de collectie direct onderliggende objecten van het opgegeven <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref> door de logische structuur te verwerken."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkContentElement
      description: "Het object waarvan de logische structuur kan verwerken."
    return:
      type: System.Collections.IEnumerable
      description: "De inventariseerbare collectie direct onderliggende objecten vanaf <code> current </code> in de logische structuur."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  id: GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Retourneert de collectie direct onderliggende objecten van het opgegeven <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> door de logische structuur te verwerken."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkElement
      description: "Het object waarvan de logische structuur kan verwerken."
    return:
      type: System.Collections.IEnumerable
      description: "De inventariseerbare collectie direct onderliggende objecten vanaf <code> current </code> in de logische structuur."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  id: GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Retourneert het bovenliggende object van het opgegeven object door de logische structuur te verwerken."
  remarks: "Deze methode is alleen een wrapper die opgehaald van de versie van het juiste type (<xref:System.Windows.FrameworkElement> of <xref:System.Windows.FrameworkContentElement>) van de <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName>of <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName>eigenschap; daarom tenzij u kan niet bepalen de `current` type, kunt u de eigenschappen van de respectieve exemplaar in plaats daarvan te controleren.</xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement>"
  syntax:
    content: public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Het object te vinden van het bovenliggende object voor. Dit is verwacht gedrag kan een <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> of een <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Windows.DependencyObject
      description: "Het aangevraagde bovenliggende object."
  overload: System.Windows.LogicalTreeHelper.GetParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
- uid: System.Windows.FrameworkContentElement
  parent: System.Windows
  isExternal: false
  name: FrameworkContentElement
  nameWithType: FrameworkContentElement
  fullName: System.Windows.FrameworkContentElement
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
- uid: System.Windows.LogicalTreeHelper.BringIntoView*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView
  nameWithType: LogicalTreeHelper.BringIntoView
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode
  nameWithType: LogicalTreeHelper.FindLogicalNode
- uid: System.Windows.LogicalTreeHelper.GetChildren*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren
  nameWithType: LogicalTreeHelper.GetChildren
- uid: System.Windows.LogicalTreeHelper.GetParent*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent
  nameWithType: LogicalTreeHelper.GetParent
