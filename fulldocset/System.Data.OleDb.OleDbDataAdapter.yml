### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbDataAdapter
  id: OleDbDataAdapter
  children:
  - System.Data.OleDb.OleDbDataAdapter.#ctor
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  - System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  - System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  - System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  - System.Data.OleDb.OleDbDataAdapter.InsertCommand
  - System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.OleDb.OleDbDataAdapter.RowUpdated
  - System.Data.OleDb.OleDbDataAdapter.RowUpdating
  - System.Data.OleDb.OleDbDataAdapter.SelectCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  - System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter
  fullName: System.Data.OleDb.OleDbDataAdapter
  type: Class
  summary: "Hiermee geeft u een reeks opdrachten voor gegevens en de verbinding met een database die worden gebruikt voor het vervullen van de <xref href=&quot;System.Data.DataSet&quot;> </xref> en de gegevensbron bijwerken."
  remarks: "De interne OleDbDataAdapter fungeert als een brug tussen een <xref:System.Data.DataSet>en de gegevensbron voor het ophalen en opslaan van gegevens.</xref:System.Data.DataSet> De interne OleDbDataAdapter biedt deze brug door middel van <xref:System.Data.Common.DbDataAdapter.Fill%2A>om gegevens te laden uit de gegevensbron in de <xref:System.Data.DataSet>, en het gebruik van <xref:System.Data.Common.DbDataAdapter.Update%2A>voor het verzenden van wijzigingen in de <xref:System.Data.DataSet>terug naar de gegevensbron.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       Wanneer de interne OleDbDataAdapter vult een <xref:System.Data.DataSet>, wordt gemaakt de juiste tabellen en kolommen voor de geretourneerde gegevens als deze niet al bestaan.</xref:System.Data.DataSet> Primaire-sleutelgegevens is echter niet opgenomen in het schema impliciet gemaakt tenzij de <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>eigenschap is ingesteld op <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Misschien hebt u ook de interne OleDbDataAdapter het schema van het <xref:System.Data.DataSet>inclusief informatie over primaire sleutels, voordat het vullen met gegevens met behulp van <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> </xref:System.Data.DataSet> maken Zie voor meer informatie [bestaande beperkingen toe te voegen aan een gegevensset](~/add/includes/ajax-current-ext-md.md).       Houd er rekening mee dat sommige OLE DB-providers, met inbegrip van de provider MSDataShape niet basistabel of een primaire-sleutelgegevens retourneren. Daarom instellen de interne OleDbDataAdapter correct de <xref:System.Data.DataTable.PrimaryKey%2A>eigenschap op alle gemaakte <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> niet In dergelijke gevallen moet u expliciet primaire sleutels voor tabellen in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> opgeven       De interne OleDbDataAdapter bevat ook de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, en <xref:System.Data.Common.DataAdapter.TableMappings%2A>Eigenschappen om het laden en het bijwerken van gegevens te vergemakkelijken.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>       Wanneer u een exemplaar van de interne OleDbDataAdapter maakt, worden de eigenschappen ingesteld op de oorspronkelijke waarden. Zie de interne OleDbDataAdapter-constructor voor een lijst van deze waarden."
  example:
  - "The following example uses the <xref:System.Data.OleDb.OleDbCommand>, OleDbDataAdapter and <xref:System.Data.OleDb.OleDbConnection>, to select records from an Access data source, and populate a <xref:System.Data.DataSet> with the selected rows. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is an SQL SELECT statement.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_7_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_7_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.Common.DbDataAdapter.ClearBatch
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.ExecuteBatch
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.InitializeBatching
  - System.Data.Common.DbDataAdapter.TerminateBatching
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.UpdateBatchSize
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter()
  nameWithType: OleDbDataAdapter.OleDbDataAdapter()
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klasse."
  remarks: "Wanneer u een exemplaar van maakt <xref:System.Data.OleDb.OleDbDataAdapter>, de volgende eigenschappen voor lezen/schrijven zijn ingesteld op de volgende beginwaarden.</xref:System.Data.OleDb.OleDbDataAdapter>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       U kunt de waarde van een van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_28_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_28_1.cs)]"
  syntax:
    content: public OleDbDataAdapter ();
    parameters: []
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  id: '#ctor(System.Data.OleDb.OleDbCommand)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(OleDbCommand)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klasse met de opgegeven <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> als de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>eigenschap.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Deze implementatie van de <xref:System.Data.OleDb.OleDbDataAdapter>constructor stelt de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>eigenschap in op de opgegeven waarde in de `selectCommand` parameter.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter>       Wanneer u een exemplaar van maakt <xref:System.Data.OleDb.OleDbDataAdapter>, de volgende eigenschappen voor lezen/schrijven zijn ingesteld op de volgende beginwaarden.</xref:System.Data.OleDb.OleDbDataAdapter>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       U kunt de waarde van een van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_17_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_17_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.OleDb.OleDbCommand
      description: "Een <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> die een SELECT-instructie of opgeslagen procedure is en is ingesteld als de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>eigenschap van de <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(String,OleDbConnection)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klasse met een <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Deze implementatie van de <xref:System.Data.OleDb.OleDbDataAdapter>wordt geopend en wordt gesloten een <xref:System.Data.OleDb.OleDbConnection>Als deze nog niet is geopend.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbDataAdapter> Dit is handig in een toepassing die moet worden aangeroepen de <xref:System.Data.Common.DbDataAdapter.Fill%2A>methode voor twee of meer <xref:System.Data.OleDb.OleDbDataAdapter>objecten.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Als de <xref:System.Data.OleDb.OleDbConnection>is al is geopend, moet u expliciet aanroepen <xref:System.Data.OleDb.OleDbConnection.Close%2A>of **Dispose** deze sluiten</xref:System.Data.OleDb.OleDbConnection.Close%2A> </xref:System.Data.OleDb.OleDbConnection>       Wanneer u een exemplaar van maakt <xref:System.Data.OleDb.OleDbDataAdapter>, de volgende eigenschappen voor lezen/schrijven zijn ingesteld op de volgende beginwaarden.</xref:System.Data.OleDb.OleDbDataAdapter>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       U kunt de waarde van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/add/codesnippet/visualbasic/f3cd089b-2d52-49c5-b101-_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/add/codesnippet/csharp/f3cd089b-2d52-49c5-b101-_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Een tekenreeks die een SQL SELECT-instructie of opgeslagen procedure moet worden gebruikt door de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>eigenschap van de <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
    - id: selectConnection
      type: System.Data.OleDb.OleDbConnection
      description: "Een <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> die staat voor de verbinding."
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(String,String)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klasse met een <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Deze overbelasting van de <xref:System.Data.OleDb.OleDbDataAdapter>constructor gebruikt de `selectConnectionString` parameter in te stellen de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>eigenschap.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter> De verbinding worden echter niet geopend. U moet nog steeds expliciet de verbinding openen.       Wanneer u een exemplaar van maakt <xref:System.Data.OleDb.OleDbDataAdapter>, de volgende eigenschappen voor lezen/schrijven zijn ingesteld op de volgende beginwaarden.</xref:System.Data.OleDb.OleDbDataAdapter>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       U kunt de waarde van een van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_4_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_4_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Een tekenreeks die een SQL SELECT-instructie of opgeslagen procedure moet worden gebruikt door de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>eigenschap van de <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
    - id: selectConnectionString
      type: System.String
      description: "De verbindingstekenreeks."
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Moet worden toegevoegd."
    - id: command
      type: System.Data.IDbCommand
      description: "Moet worden toegevoegd."
    - id: statementType
      type: System.Data.StatementType
      description: "Moet worden toegevoegd."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Moet worden toegevoegd."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Moet worden toegevoegd."
  overload: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Moet worden toegevoegd."
    - id: command
      type: System.Data.IDbCommand
      description: "Moet worden toegevoegd."
    - id: statementType
      type: System.Data.StatementType
      description: "Moet worden toegevoegd."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Moet worden toegevoegd."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Moet worden toegevoegd."
  overload: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opgehaald of ingesteld van een SQL-instructie of opgeslagen procedure voor het verwijderen van records uit de gegevensset."
  remarks: "Tijdens <xref:System.Data.Common.DbDataAdapter.Update%2A>, als deze eigenschap niet is ingesteld en gegevens van primaire sleutel aanwezig in het <xref:System.Data.DataSet>DeleteCommand kan worden gegenereerd, automatisch als u de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>eigenschap en gebruik de <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> instellen is</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Vervolgens worden alle extra opdrachten die u instelt gegenereerd door de <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Wanneer de DeleteCommand wordt toegewezen aan een eerder gemaakte <xref:System.Data.OleDb.OleDbCommand>, wordt de <xref:System.Data.OleDb.OleDbCommand>niet is gekloond.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> De DeleteCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.OleDb.OleDbCommand>object.</xref:System.Data.OleDb.OleDbCommand>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_21_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_21_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Een <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>Verwijderde records verwijderen uit de gegevensbron die overeenkomen met rijen in de <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  id: Fill(System.Data.DataTable,System.Object)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: Fill(DataTable,Object)
  nameWithType: OleDbDataAdapter.Fill(DataTable,Object)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataTable,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Wordt toegevoegd of vernieuwt rijen in een <xref href=&quot;System.Data.DataTable&quot;> </xref> overeenkomen met die in een ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;> </xref> object met de opgegeven <xref href=&quot;System.Data.DataTable&quot;> </xref> en ADO-objecten."
  remarks: "De koppeling tussen ActiveX Data Objects (ADO) en ADO.NET is een eenrichtingsbewerking in die u gegevens van ADO kopiëren kunt de <xref:System.Data.DataSet>, maar de updates op de gegevens moeten worden verwerkt door ADO.NET.</xref:System.Data.DataSet>       Deze overbelasting van de methode opvulling sluit de invoer niet `Recordset` na voltooiing van de doorvoerbewerking.       Bij het verwerken van batch SQL-instructies die deze implementatie van de opvulling van meerdere resultaten retourneren en <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>voor de OLE DB.NET Framework-gegevensprovider schema-informatie voor alleen het eerste resultaat opgehaald.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       De doorvoerbewerking worden de rijen toegevoegd aan de opgegeven bestemming <xref:System.Data.DataTable>object in de <xref:System.Data.DataSet>, maken de <xref:System.Data.DataTable>object als deze niet al bestaat.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> Bij het maken van een <xref:System.Data.DataTable>object, de doorvoerbewerking maakt normaal gesproken alleen naam kolommetagegevens.</xref:System.Data.DataTable> Echter, als de <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>eigenschap is ingesteld op `AddWithKey`, beperkingen en de juiste primaire sleutels zijn gemaakt.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>       U kunt de methode opvulling meerdere keren gebruiken op de dezelfde <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Als een primaire sleutel bestaat, worden binnenkomende rijen worden samengevoegd met overeenkomende rijen die al bestaan. Als er geen primaire sleutel bevat, zijn binnenkomende rijen toegevoegd aan de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Als primaire-sleutelgegevens aanwezig is, alle dubbele rijen zijn afgestemd en slechts één keer in de <xref:System.Data.DataTable>die overeenkomt met de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> voorkomen Primaire-sleutelgegevens kan worden ingesteld via <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, door te geven de <xref:System.Data.DataTable.PrimaryKey%2A>eigenschap van de <xref:System.Data.DataTable>, of door de <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>eigenschap `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Als de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>de resultaten van een OUTER JOIN retourneert de `DataAdapter` stelt een <xref:System.Data.DataTable.PrimaryKey%2A>waarde voor de resulterende <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> niet</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> De primaire sleutel om ervoor te zorgen dat de dubbele rijen op de juiste manier worden omgezet, moet u expliciet definiëren. Zie voor meer informatie [primaire sleutels definiëren](~/add/includes/ajax-current-ext-md.md).       Correct werken met .NET Framework Data Provider voor OLE DB `AddWithKey` vereist dat native OLE DB-provider vereist primaire-sleutelgegevens verkrijgt door de eigenschap DBPROP_UNIQUEROWS en wordt vervolgens bepaald welke kolommen zijn primaire sleutelkolommen door DBCOLUMN_KEYCOLUMN in in de `IColumnsRowset`. U kunt ook kan de gebruiker expliciet de primaire-sleutelbeperkingen op elke <xref:System.Data.DataTable>.</xref:System.Data.DataTable> instellen Dit zorgt ervoor dat inkomende records die overeenkomen met bestaande records worden bijgewerkt in plaats van toegevoegd.       Als de <xref:System.Data.OleDb.OleDbDataAdapter>tegenkomt dubbele kolommen tijdens het vullen van een <xref:System.Data.DataTable>, genereert namen voor de volgende kolommen in het gebruik van het patroon &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3 &quot;, enzovoort.</xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter> Lege kolomnamen worden toegevoegd aan de <xref:System.Data.DataTable>, met een lege tekenreeks voor de eerste kolom, gevolgd door &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, enzovoort voor de volgende lege kolommen.</xref:System.Data.DataTable>       Waarden in de ADO `Recordset` of `Record` objecten worden geconverteerd naar de common language runtime-typen voor opslag in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet>      > [!CAUTION] > Deze overbelasting van de opvulling-methode niet impliciet aanroepen `Close` op het object ADO wanneer de doorvoerbewerking voltooid is. Daarom altijd aanroepen `Close` wanneer u klaar bent met ADO `Recordset` of `Record` objecten. Dit zorgt ervoor dat de onderliggende verbinding met een gegevensbron tijdig worden vrijgegeven en voorkomt ook dat er mogelijk toegangsfouten vanwege niet-beheerde ADO-objecten door de garbage collector wordt vrijgemaakt wanneer bestaande verwijzingen, nog bestaan.       Als u aanroept de `TableMappings.Add` methode op een `DataAdapter` en u de parameter van de tabel source expliciet toewijzen aan een lege tekenreeks, de gegevensset is gevuld met behulp van de brontabel, maar de gegevensset wordt gevuld met nothing. Bijvoorbeeld, in het volgende voorbeeld `rDataSet` wordt gevuld met nothing.      ```   rAdapter.TableMappings.Add(&quot;source table&quot;, &quot;&quot;);   rAdapter.Fill(rDataSet, &quot;source table&quot;);      ```In dit voorbeeld ziet hoe u een resultaat kunt overslaan bij omgaan met meerdere resultaten.       Het volgende voorbeeld wordt een <xref:System.Data.OleDb.OleDbDataAdapter>voor het vervullen van een <xref:System.Data.DataTable>een ADO `Recordset`.</xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter> In dit voorbeeld wordt ervan uitgegaan dat u hebt gemaakt dat een ADO `Recordset`.      ```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        Dim custTable As DataTable = New DataTable(&quot;Customers&quot;)        custTable.Columns.Add(&quot;CustomerID&quot;, Type.GetType(&quot;System.String&quot;))        custTable.Columns.Add(&quot;CompanyName&quot;, Type.GetType(&quot;System.String&quot;))        custDS.Tables.Add(custTable)        &quot;Use ADO objects from ADO library (msado15.dll) imported        &quot; as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1)        adoRS.Open(&quot;SELECT CustomerID, CompanyName FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custTable, adoRS)        adoRS.Close()        adoConn.Close()   ```      ```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        DataTable custTable = new DataTable(&quot;Customers&quot;);        custTable.Columns.Add(&quot;CustomerID&quot;, typeof(String));        custTable.Columns.Add(&quot;CompanyName&quot;, typeof(String));        custDS.Tables.Add(custTable);        //Use ADO objects from ADO library (msado15.dll) imported        //  as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1);        adoRS.Open(&quot;SELECT CustomerID, CompanyName FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custTable, adoRS);        adoRS.Close();        adoConn.Close();   ```"
  syntax:
    content: public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> te vullen met records en, indien vereist, schema."
    - id: ADODBRecordSet
      type: System.Object
      description: "An ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;></xref> object."
    return:
      type: System.Int32
      description: "Het aantal rijen is vernieuwd en de <xref href=&quot;System.Data.DataTable&quot;> </xref>. Dit omvat geen rijen zijn beïnvloed door de instructies die geen rijen geretourneerd."
  overload: System.Data.OleDb.OleDbDataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  id: Fill(System.Data.DataSet,System.Object,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: Fill(DataSet,Object,String)
  nameWithType: OleDbDataAdapter.Fill(DataSet,Object,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataSet,Object,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Wordt toegevoegd of vernieuwt rijen in de <xref href=&quot;System.Data.DataSet&quot;> </xref> overeenkomen met die in een ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;> </xref> object met de opgegeven <xref href=&quot;System.Data.DataSet&quot;> </xref>, ADO-object als bron tabelnaam worden opgegeven."
  remarks: "De koppeling tussen ActiveX Data Objects (ADO) en ADO.NET is een eenrichtingsbewerking in die u gegevens van ADO kopiëren kunt de <xref:System.Data.DataSet>, maar de updates op de gegevens moeten worden verwerkt door ADO.NET.</xref:System.Data.DataSet>       De <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>methode meerdere resultaten doorlopen door het aanroepen van de `NextRecordset` methode op de `Recordset`, sluiten van de invoer `Recordset` na voltooiing van de <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>bewerking.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>       De <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>bewerking worden de rijen toegevoegd aan de opgegeven bestemming <xref:System.Data.DataTable>object in de <xref:System.Data.DataSet>, maken de <xref:System.Data.DataTable>object als deze niet al bestaat.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> Bij het maken van een <xref:System.Data.DataTable>object, de <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>bewerking maakt normaal gesproken alleen naam kolommetagegevens.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> </xref:System.Data.DataTable> Echter, als de <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>eigenschap is ingesteld op `AddWithKey`, beperkingen en de juiste primaire sleutels zijn gemaakt.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>       Als primaire-sleutelgegevens aanwezig is, alle dubbele rijen zijn afgestemd en slechts één keer in de <xref:System.Data.DataTable>die overeenkomt met de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> voorkomen Primaire-sleutelgegevens kan worden ingesteld via <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, door te geven de <xref:System.Data.DataTable.PrimaryKey%2A>eigenschap van de <xref:System.Data.DataTable>, of door de <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>eigenschap `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Correct werken met .NET Framework Data Provider voor OLE DB `AddWithKey` vereist native OLE DB-provider vereist primaire-sleutelgegevens verkrijgen door de eigenschap DBPROP_UNIQUEROWS en vervolgens bepalen welke kolommen zijn primaire sleutelkolommen door DBCOLUMN_KEYCOLUMN in in de **IColumnsRowset**. U kunt ook kan de gebruiker expliciet de primaire-sleutelbeperkingen op elke <xref:System.Data.DataTable>.</xref:System.Data.DataTable> instellen Dit zorgt ervoor dat inkomende records die overeenkomen met bestaande records worden bijgewerkt in plaats van toegevoegd.       Als de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>de resultaten van een OUTER JOIN retourneert de `DataAdapter` stelt een <xref:System.Data.DataTable.PrimaryKey%2A>waarde voor de resulterende <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> niet</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> De primaire sleutel om ervoor te zorgen dat de dubbele rijen op de juiste manier worden omgezet, moet u expliciet definiëren. Zie voor meer informatie [primaire sleutels definiëren](~/add/includes/ajax-current-ext-md.md).       Als de `Recordset` is gesloten voordat het starten van de <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>bewerking, er zijn geen foutresultaten.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> Dit is vereist voor de verwerking van meerdere resultaten omdat query&quot;s die geen rijen retourneren worden aangegeven door een gesloten `Recordset`. De <xref:System.Data.OleDb.OleDbDataAdapter>alleen aanroepen `NextRecordset` op de gesloten `Recordset` en wordt de verwerking vervolgd.</xref:System.Data.OleDb.OleDbDataAdapter>       Als een fout is opgetreden tijdens het vullen van de gegevensset, rijen die zijn toegevoegd voordat het exemplaar van de fout blijft aanwezig in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> De rest van de bewerking is afgebroken.       Als de <xref:System.Data.Common.DbDataAdapter>object dubbele kolommen tegenkomt tijdens het vullen van een <xref:System.Data.DataTable>, genereert namen voor de volgende kolommen in het gebruik van het patroon &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3 &quot;, enzovoort.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Als de inkomende gegevens naamloze kolommen bevat, worden geplaatst de <xref:System.Data.DataSet>volgens het patroon &quot;Kolom1&quot;, &quot;Kolom2&quot;, enzovoort.</xref:System.Data.DataSet> Wanneer meerdere resultatensets worden toegevoegd aan de <xref:System.Data.DataSet>elke resultatenset wordt geplaatst in een afzonderlijke tabel.</xref:System.Data.DataSet> Als u meer resultatensets worden benoemd met integraal waarden toe te voegen aan de opgegeven tabelnaam (bijvoorbeeld &quot;Tabel&quot;, &quot;Table1&quot;, &quot;Tabel2&quot;, enzovoort.). Toepassingen die gebruikmaken van de kolom- en tabelnamen moeten ervoor zorgen dat wordt veroorzaakt een conflict met deze patronen naming wordt niet uitgevoerd.       Waarden in de ADO `Recordset` of `Record` objecten worden geconverteerd naar de common language runtime-typen voor opslag in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet>      > [!NOTE] > Deze overbelasting van de <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>methode impliciet roept `Close` op het object ADO wanneer de doorvoerbewerking voltooid is.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>       Het volgende voorbeeld wordt een <xref:System.Data.OleDb.OleDbDataAdapter>voor het vervullen van een <xref:System.Data.DataSet>een ADO `Recordset` die een ADO `Record` object.</xref:System.Data.DataSet> </xref:System.Data.OleDb.OleDbDataAdapter> In dit voorbeeld wordt ervan uitgegaan dat u hebt gemaakt dat een ADO `RecordSet` en `Record` object.      ```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        &quot;Use ADO objects from ADO library (msado15.dll) imported        &quot; as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1)        adoRS.Open(&quot;SELECT * FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custDS, adoRS, &quot;Customers&quot;)        adoConn.Close()   ```      ```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        //Use ADO objects from ADO library (msado15.dll) imported        // as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1);        adoRS.Open(&quot;SELECT * FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custDS, adoRS, &quot;Customers&quot;);        adoConn.Close();   ```"
  syntax:
    content: public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Een <xref href=&quot;System.Data.DataSet&quot;> </xref> te vullen met records en, indien vereist, schema."
    - id: ADODBRecordSet
      type: System.Object
      description: "An ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;></xref> object."
    - id: srcTable
      type: System.String
      description: "De brontabel gebruikt voor de Tabeltoewijzingen."
    return:
      type: System.Int32
      description: "Het aantal rijen is toegevoegd aan of vernieuwd in de <xref href=&quot;System.Data.DataSet&quot;> </xref>. Dit omvat geen rijen zijn beïnvloed door de instructies die geen rijen geretourneerd."
  overload: System.Data.OleDb.OleDbDataAdapter.Fill*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "De brontabel is ongeldig."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opgehaald of ingesteld van een SQL-instructie of opgeslagen procedure gebruikt voor het invoegen van nieuwe records in de gegevensbron."
  remarks: "Tijdens <xref:System.Data.Common.DbDataAdapter.Update%2A>, als deze eigenschap niet is ingesteld en gegevens van primaire sleutel aanwezig in het <xref:System.Data.DataSet>InsertCommand kan worden gegenereerd, automatisch als u de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>eigenschap en gebruik de <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> instellen is</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Vervolgens worden alle extra opdrachten die u instelt gegenereerd door de <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Wanneer InsertCommand is toegewezen aan een eerder gemaakte <xref:System.Data.OleDb.OleDbCommand>, wordt de <xref:System.Data.OleDb.OleDbCommand>niet is gekloond.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> Het object InsertCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.OleDb.OleDbCommand>object.</xref:System.Data.OleDb.OleDbCommand>      > [!NOTE] > Als de uitvoering van deze opdracht rijen retourneert, deze rijen kunnen worden toegevoegd aan de <xref:System.Data.DataSet>, afhankelijk van hoe u stelt de <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>eigenschap van de <xref:System.Data.OleDb.OleDbCommand>object.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_9_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_9_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Een <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>records invoegen in de gegevensbron die overeenkomen met de nieuwe rijen in de <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Moet worden toegevoegd."
  overload: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Moet worden toegevoegd."
  overload: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OleDbDataAdapter.RowUpdated
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Deze gebeurtenis treedt op tijdens <xref:System.Data.Common.DbDataAdapter.Update*>nadat een opdracht is uitgevoerd voor de gegevensbron.</xref:System.Data.Common.DbDataAdapter.Update*> De poging om bij te werken is gedaan. Daarom wordt de gebeurtenis plaatsvindt."
  remarks: "Als u werkt met <xref:System.Data.Common.DbDataAdapter.Update%2A>, er zijn twee gebeurtenissen die per gegevensrij bijgewerkt plaatsvinden.</xref:System.Data.Common.DbDataAdapter.Update%2A> De volgorde van de uitvoering is als volgt: 1.  De waarden in de <xref:System.Data.DataRow>worden verplaatst naar de parameterwaarden.</xref:System.Data.DataRow>      2.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  De opdracht wordt uitgevoerd.      4.  Als de opdracht is ingesteld op `FirstReturnedRecord`, de eerste geretourneerd resultaat wordt geplaatst in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Als er output-parameters, zijn ze in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow> geplaatst      6.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>wordt aangeroepen.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and RowUpdated events being used.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.OleDb.OleDbRowUpdatedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OleDbDataAdapter.RowUpdating
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Deze gebeurtenis treedt op tijdens <xref:System.Data.Common.DbDataAdapter.Update*>voordat een opdracht is uitgevoerd voor de gegevensbron.</xref:System.Data.Common.DbDataAdapter.Update*> De poging om bij te werken is gedaan. Daarom wordt de gebeurtenis plaatsvindt."
  remarks: "Als u werkt met <xref:System.Data.Common.DbDataAdapter.Update%2A>, er zijn twee gebeurtenissen die per gegevensrij bijgewerkt plaatsvinden.</xref:System.Data.Common.DbDataAdapter.Update%2A> De volgorde van de uitvoering is als volgt: 1.  De waarden in de <xref:System.Data.DataRow>worden verplaatst naar de parameterwaarden.</xref:System.Data.DataRow>      2.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  De opdracht wordt uitgevoerd.      4.  Als de opdracht is ingesteld op `FirstReturnedRecord`, de eerste geretourneerd resultaat wordt geplaatst in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Als er output-parameters, zijn ze in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow> geplaatst      6.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>wordt aangeroepen.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows the RowUpdating and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.OleDb.OleDbRowUpdatingEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opgehaald of ingesteld van een SQL-instructie of opgeslagen procedure gebruikt om records te selecteren in de gegevensbron."
  remarks: "Wanneer de SelectCommand is toegewezen aan een eerder gemaakte <xref:System.Data.OleDb.OleDbCommand>, wordt de <xref:System.Data.OleDb.OleDbCommand>niet is gekloond.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> De SelectCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.OleDb.OleDbCommand>object.</xref:System.Data.OleDb.OleDbCommand>       Als de SelectCommand geen rijen retourneert, er zijn geen tabellen worden toegevoegd aan de <xref:System.Data.DataSet>, en geen uitzondering gegenereerd.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the SelectCommand and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_3_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Een <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> die wordt gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Fill*>om records te selecteren van gegevensbron voor de plaatsing in de <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Fill*>"
  overload: System.Data.OleDb.OleDbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Zie voor een beschrijving van dit lid, <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.OleDb.OleDbDataAdapter>exemplaar is geconverteerd naar een <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> wordt gebruikt tijdens een update om records in de gegevensbron voor verwijderde rijen in de gegevensset te verwijderen."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Zie voor een beschrijving van dit lid, <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.OleDb.OleDbDataAdapter>exemplaar is geconverteerd naar een <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> die tijdens het bijwerken wordt gebruikt voor het invoegen van records uit een gegevensbron voor de plaatsing in de gegevensset."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Zie voor een beschrijving van dit lid, <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.OleDb.OleDbDataAdapter>exemplaar is geconverteerd naar een <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> die tijdens het bijwerken wordt gebruikt om records te selecteren van een gegevensbron voor de plaatsing in de gegevensset."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Zie voor een beschrijving van dit lid, <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.OleDb.OleDbDataAdapter>exemplaar is geconverteerd naar een <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.IDbCommand&quot;> </xref> wordt gebruikt tijdens een update-update-records in de gegevensbron voor gewijzigde rijen in de gegevensset."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Zie voor een beschrijving van dit lid &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.OleDb.OleDbDataAdapter>exemplaar is geconverteerd naar een <xref:System.ICloneable>interface.</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Een nieuwe <xref:System.Object>die een kopie van dit exemplaar.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Opgehaald of ingesteld van een SQL-instructie of opgeslagen procedure gebruikt voor het bijwerken van de records in de gegevensbron."
  remarks: "Tijdens <xref:System.Data.Common.DbDataAdapter.Update%2A>, als deze eigenschap niet is ingesteld en gegevens van primaire sleutel aanwezig in het <xref:System.Data.DataSet>UpdateCommand kan worden gegenereerd, automatisch als u de <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>eigenschap en gebruik de <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> instellen is</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Vervolgens worden alle extra opdrachten die u instelt gegenereerd door de <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Wanneer de UpdateCommand wordt toegewezen aan een eerder gemaakte <xref:System.Data.OleDb.OleDbCommand>, wordt de <xref:System.Data.OleDb.OleDbCommand>niet is gekloond.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> De UpdateCommand onderhoudt een verwijzing naar het eerder gemaakte <xref:System.Data.OleDb.OleDbCommand>object.</xref:System.Data.OleDb.OleDbCommand>      > [!NOTE] > Als de uitvoering van deze opdracht rijen retourneert, deze rijen kunnen worden samengevoegd met de <xref:System.Data.DataSet>, afhankelijk van hoe u stelt de <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>eigenschap van de <xref:System.Data.OleDb.OleDbCommand>object.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_7_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_7_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Een <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> gebruikt tijdens <xref:System.Data.Common.DbDataAdapter.Update*>gewijzigd om bij te werken records in de gegevensbron die overeenkomen met rijen in de <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter()
  nameWithType: OleDbDataAdapter.OleDbDataAdapter()
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter()
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(OleDbCommand)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(String,OleDbConnection)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(String,String)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,String)
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill(DataTable,Object)
  nameWithType: OleDbDataAdapter.Fill(DataTable,Object)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataTable,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill(DataSet,Object,String)
  nameWithType: OleDbDataAdapter.Fill(DataSet,Object,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataSet,Object,String)
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OleDbDataAdapter.RowUpdated
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdated
- uid: System.Data.OleDb.OleDbRowUpdatedEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbRowUpdatedEventHandler
  nameWithType: OleDbRowUpdatedEventHandler
  fullName: System.Data.OleDb.OleDbRowUpdatedEventHandler
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OleDbDataAdapter.RowUpdating
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdating
- uid: System.Data.OleDb.OleDbRowUpdatingEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbRowUpdatingEventHandler
  nameWithType: OleDbRowUpdatingEventHandler
  fullName: System.Data.OleDb.OleDbRowUpdatingEventHandler
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbDataAdapter.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter.OleDbDataAdapter
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.Fill*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill
  nameWithType: OleDbDataAdapter.Fill
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OleDbDataAdapter.OnRowUpdated
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OleDbDataAdapter.OnRowUpdating
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
