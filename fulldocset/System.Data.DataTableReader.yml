### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableReader
  id: DataTableReader
  children:
  - System.Data.DataTableReader.#ctor(System.Data.DataTable)
  - System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  - System.Data.DataTableReader.Close
  - System.Data.DataTableReader.Depth
  - System.Data.DataTableReader.FieldCount
  - System.Data.DataTableReader.GetBoolean(System.Int32)
  - System.Data.DataTableReader.GetByte(System.Int32)
  - System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetChar(System.Int32)
  - System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetDataTypeName(System.Int32)
  - System.Data.DataTableReader.GetDateTime(System.Int32)
  - System.Data.DataTableReader.GetDecimal(System.Int32)
  - System.Data.DataTableReader.GetDouble(System.Int32)
  - System.Data.DataTableReader.GetEnumerator
  - System.Data.DataTableReader.GetFieldType(System.Int32)
  - System.Data.DataTableReader.GetFloat(System.Int32)
  - System.Data.DataTableReader.GetGuid(System.Int32)
  - System.Data.DataTableReader.GetInt16(System.Int32)
  - System.Data.DataTableReader.GetInt32(System.Int32)
  - System.Data.DataTableReader.GetInt64(System.Int32)
  - System.Data.DataTableReader.GetName(System.Int32)
  - System.Data.DataTableReader.GetOrdinal(System.String)
  - System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  - System.Data.DataTableReader.GetSchemaTable
  - System.Data.DataTableReader.GetString(System.Int32)
  - System.Data.DataTableReader.GetValue(System.Int32)
  - System.Data.DataTableReader.GetValues(System.Object[])
  - System.Data.DataTableReader.HasRows
  - System.Data.DataTableReader.IsClosed
  - System.Data.DataTableReader.IsDBNull(System.Int32)
  - System.Data.DataTableReader.Item(System.Int32)
  - System.Data.DataTableReader.Item(System.String)
  - System.Data.DataTableReader.NextResult
  - System.Data.DataTableReader.Read
  - System.Data.DataTableReader.RecordsAffected
  langs:
  - csharp
  name: DataTableReader
  nameWithType: DataTableReader
  fullName: System.Data.DataTableReader
  type: Class
  summary: "De DataTableReader verkrijgt de inhoud van een of meer <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten in de vorm van een of meer alleen-lezen, alleen resultatensets."
  remarks: "De DataTableReader werkt veel net als andere gegevenslezer, zoals het <xref:System.Data.SqlClient.SqlDataReader>behalve dat de DataTableReader biedt voor iteratie van rijen in een <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.SqlClient.SqlDataReader> Met andere woorden, biedt voor iteratie van rijen in een cache. De gegevens in de cache kan worden gewijzigd terwijl de DataTableReader actief is en de lezer automatisch de positie onderhoudt.       Bij het maken van een DataTableReader van een <xref:System.Data.DataTable>, het resulterende DataTableReader-object bevat een resultatenset met dezelfde gegevens als de <xref:System.Data.DataTable>van waarin deze is gemaakt, met uitzondering van de rijen die zijn gemarkeerd als verwijderd.</xref:System.Data.DataTable> </xref:System.Data.DataTable> De kolommen worden weergegeven in dezelfde volgorde als in de oorspronkelijke <xref:System.Data.DataTable>.</xref:System.Data.DataTable> De structuur van het geretourneerde resultaat is identiek zijn in het schema en de gegevens naar de oorspronkelijke <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Een DataTableReader dat is gemaakt door het aanroepen van de <xref:System.Data.DataSet.GetDataReader%2A>methode van een <xref:System.Data.DataSet>object bevat meerdere resultatensets als de <xref:System.Data.DataSet>bevat meer dan één tabel.</xref:System.Data.DataSet> </xref:System.Data.DataSet> </xref:System.Data.DataSet.GetDataReader%2A> De resultaten zijn in dezelfde volgorde als de <xref:System.Data.DataTable>objecten in de <xref:System.Data.DataTableCollection>van de <xref:System.Data.DataSet>object.</xref:System.Data.DataSet> </xref:System.Data.DataTableCollection> </xref:System.Data.DataTable>       De geretourneerde resultatenset bevat alleen de huidige versie van elke <xref:System.Data.DataRow>; rijen die zijn gemarkeerd voor verwijdering worden overgeslagen.</xref:System.Data.DataRow>       De `DataTableReader` biedt een stabiele iterator; dat wil zeggen, de inhoud van de `DataTableReader` ongeldig worden niet gemaakt als de grootte van de onderliggende verzameling is gewijzigd tijdens een herhaling. Bijvoorbeeld, als er een of meer rijen in de <xref:System.Data.DataTable.Rows%2A>verzameling worden verwijderd of is verwijderd tijdens herhaling, de huidige positie binnen de `DataTableReader` op de juiste wijze wordt bijgehouden en het biedt de iterator niet ongeldig te maken.</xref:System.Data.DataTable.Rows%2A>"
  syntax:
    content: 'public sealed class DataTableReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  id: '#ctor(System.Data.DataTable)'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.DataTableReader&quot;> </xref> klasse met behulp van de gegevens van de opgegeven <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  syntax:
    content: public DataTableReader (System.Data.DataTable dataTable);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "De <xref href=&quot;System.Data.DataTable&quot;> </xref> van waaruit de nieuwe <xref href=&quot;System.Data.DataTableReader&quot;> </xref> verkrijgt de resultatenset."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  id: '#ctor(System.Data.DataTable[])'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.DataTableReader&quot;> </xref> klasse met behulp van de opgegeven matrix met <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten."
  remarks: "Als u een <xref:System.Data.DataTableReader>op basis van alle of een subset van de tabellen in een specifieke <xref:System.Data.Dataset>, Roep de `DataSet`van <xref:System.Data.DataSet.GetDataReader%2A>methode.</xref:System.Data.DataSet.GetDataReader%2A> </xref:System.Data.Dataset> </xref:System.Data.DataTableReader> Als u wilt maken van een nieuwe <xref:System.Data.DataTableReader>exemplaar op basis van een groep `DataTable` exemplaren die niet anders gerelateerd, gebruiken deze constructor.</xref:System.Data.DataTableReader> U kunt ook te profiteren van deze constructor voor het rangschikken van de volgorde van de `DataTables` binnen de `DataTableReader`als hun ordening binnen hun bron `DataSet` niet voldoet aan uw behoeften."
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.ctor#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_20_1.vb)]\n [!code-cs[DataWorks DataTableReader.ctor#1](~/add/codesnippet/csharp/m-system.data.datatabler_20_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public DataTableReader (System.Data.DataTable[] dataTables);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "De matrix van <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten die de resultaten voor de nieuwe levert <xref href=&quot;System.Data.DataTableReader&quot;> </xref> object."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Close
  id: Close
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee sluit u de huidige <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Het aanroepen van `Close()` op een gesloten `DataTableReader` object niet afkomstig van een fout opgetreden."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.DataTableReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Depth
  id: Depth
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De diepte van het nesten van voor de huidige rij van de <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: '`DataTableReader`ondersteunt niet nesten. De `Depth` eigenschap retourneert altijd nul.'
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "De diepte van het nesten van voor de huidige rij. altijd nul."
  overload: System.Data.DataTableReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.FieldCount
  id: FieldCount
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retourneert het aantal kolommen in de huidige rij."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Wanneer niet gepositioneerd in een geldige resultaatset 0; anders is het aantal kolommen in de huidige rij."
  overload: System.Data.DataTableReader.FieldCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om op te halen van het aantal velden in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de waarde van de opgegeven kolom als een <xref:System.Boolean>.</xref:System.Boolean>"
  remarks: "Er is geen conversies worden uitgevoerd; daarom de gegevens zijn opgehaald al moet een Booleaanse waarde of omgezet in een Booleaanse waarde of er is een uitzondering gegenereerd.       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/csharp/m-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Boolean
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetBoolean*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom als een byte."
  remarks: "Er is geen conversies worden uitgevoerd; de opgehaalde gegevens moet daarom al een byte of omgezet in een byte.       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_8_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/csharp/m-system.data.datatabler_8_1.cs)]"
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Byte
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetByte*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een byte."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Een stroom beginnen bij de offset van de opgegeven kolom in de buffer als een matrix die beginnen bij de opgegeven buffer-offset bytes leest."
  remarks: "`GetBytes`retourneert het aantal beschikbare bytes in het veld. De meeste gevallen is dit de exacte lengte van het veld. Echter het getal dat wordt geretourneerd, kan kleiner zijn dan de waarde true lengte van het veld als `GetBytes` al is gebruikt voor het verkrijgen van bytes van het veld. Kan dit het geval is, bijvoorbeeld wanneer de <xref:System.Data.DataTableReader>leest de structuur van een grote hoeveelheden gegevens in een buffer als u een buffer die is doorgegeven `null` (`Nothing` in Visual Basic), `GetBytes` retourneert de lengte van het gehele veld in bytes, niet de resterende grootte op basis van de parameter buffer-offset.</xref:System.Data.DataTableReader>       Er is geen conversies worden uitgevoerd; de opgehaalde gegevens moet daarom al in een bytematrix of omgezet in een byte-matrix."
  example:
  - "The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\\ folder. In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.  \n  \n [!code-cs[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/csharp/ff921727-bdbe-4741-b853-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/visualbasic/ff921727-bdbe-4741-b853-_1.vb)]"
  syntax:
    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    - id: dataIndex
      type: System.Int64
      description: "De index binnen het veld van waaruit de leesbewerking gestart."
    - id: buffer
      type: System.Byte[]
      description: "De buffer waarin de stroom van bytes lezen."
    - id: bufferIndex
      type: System.Int32
      description: "De index binnen de buffer op waarop u wilt beginnen met het plaatsen van de gegevens."
    - id: length
      type: System.Int32
      description: "De maximale lengte kopiëren naar de buffer."
    return:
      type: System.Int64
      description: "Het werkelijke aantal gelezen bytes."
  overload: System.Data.DataTableReader.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen byte-matrix."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom als een teken."
  remarks: "Er is geen conversies worden uitgevoerd; de opgehaalde gegevens moet daarom al een teken of omgezet in een teken.       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_16_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/csharp/m-system.data.datatabler_16_1.cs)]"
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Char
      description: "De waarde van de kolom."
  overload: System.Data.DataTableReader.GetChar*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Het opgegeven veld bevat geen een teken."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retourneert de waarde van de opgegeven kolom als een tekenmatrix."
  remarks: "`GetChars`retourneert het aantal beschikbare tekens in het veld. De meeste gevallen is dit de exacte lengte van het veld. Echter het getal dat wordt geretourneerd, kan kleiner zijn dan de waarde true lengte van het veld als `GetChars` al is gebruikt voor het verkrijgen van tekens van het veld.       Het werkelijke aantal tekens lezen kan niet kleiner zijn dan de vereiste lengte als het einde van het veld is bereikt. Als u een buffer die null doorgeeft (`Nothing` in Visual Basic), `GetChars` retourneert de lengte van het gehele veld in tekens, niet de resterende grootte op basis van de parameter buffer-offset.       Er is geen conversies worden uitgevoerd; de gegevens worden opgehaald moet daarom al in een tekenmatrix of omgezet in een tekenmatrix."
  example:
  - "The following example demonstrates the `GetChars` method. The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second. In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`. `TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.  \n  \n This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array. Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.  \n  \n [!code-cs[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/csharp/299b411e-96a3-40b6-89fc-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/visualbasic/299b411e-96a3-40b6-89fc-_1.vb)]"
  syntax:
    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    - id: dataIndex
      type: System.Int64
      description: "De index binnen het veld van waaruit de leesbewerking gestart."
    - id: buffer
      type: System.Char[]
      description: "De buffer in om te lezen van de stroom van tekens."
    - id: bufferIndex
      type: System.Int32
      description: "De index binnen de buffer op waarop u wilt beginnen met het plaatsen van de gegevens."
    - id: length
      type: System.Int32
      description: "De maximale lengte kopiëren naar de buffer."
    return:
      type: System.Int64
      description: "Het werkelijke aantal tekens is gelezen."
  overload: System.Data.DataTableReader.GetChars*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat een tekenmatrix geen."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u een tekenreeks voor het gegevenstype van de opgegeven kolom."
  remarks: "De methode GetDataTypeName altijd retourneert het type van de onderliggende <xref:System.Data.DataColumn>in plaats van een type providerspecifieke.</xref:System.Data.DataColumn>"
  example:
  - "The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:  \n  \n [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_10_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/csharp/m-system.data.datatabler_10_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \nID: Int32  \nName: String  \n```"
  syntax:
    content: public override string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.String
      description: "Een tekenreeks die het gegevenstype van de kolom vertegenwoordigt."
  overload: System.Data.DataTableReader.GetDataTypeName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de waarde van de opgegeven kolom als een <xref:System.DateTime>object.</xref:System.DateTime>"
  remarks: "Er is geen conversies worden uitgevoerd; de opgehaalde gegevens al moet daarom een <xref:System.DateTime>of omgezet in een `DataTime`.</xref:System.DateTime>       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_23_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/csharp/m-system.data.datatabler_23_1.cs)]"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.DateTime
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een DateTime-waarde."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de waarde van de opgegeven kolom als een <xref:System.Decimal>.</xref:System.Decimal>"
  remarks: "Er is geen conversies worden uitgevoerd; de opgehaalde gegevens al moet daarom een <xref:System.Decimal>of omgezet in een `Decimal`.</xref:System.Decimal>       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/csharp/m-system.data.datatabler_4_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_4_1.vb)]"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Decimal
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetDecimal*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> waarde."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de kolom als een getal met dubbele precisie drijvende komma."
  remarks: "Er is geen conversies worden uitgevoerd; daarom de gegevens zijn opgehaald, moet al een getal met dubbele precisie drijvende komma of moet worden omgezet in een getal met dubbele precisie drijvende komma.       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/csharp/m-system.data.datatabler_19_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_19_1.vb)]"
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Het rangtelwoord voor de op nul gebaseerde van de kolom."
    return:
      type: System.Double
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetDouble*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een getal met dubbele precisie drijvende komma."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retourneert een enumerator die kan worden gebruikt voor items in de verzameling doorlopen."
  remarks: "Enumerators kunnen alleen voor het lezen van de gegevens in de <xref:System.Data.DataTableReader>.</xref:System.Data.DataTableReader> Enumerators kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.       De enumerator bevindt zich op het eerste vóór het eerste element in de verzameling. Op deze functie, het aanroepen van <xref:System.Collections.IEnumerator.Current%2A>er een uitzondering gegenereerd.</xref:System.Collections.IEnumerator.Current%2A> Daarom moet u aanroepen `MoveNext` vooruitgeschoven van de enumerator naar het eerste element van de verzameling voordat het lezen van `Current`.       `Current`retourneert een <xref:System.Data.Common.DbDataRecord>, en retourneert hetzelfde object totdat de <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>wordt aangeroepen.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Data.Common.DbDataRecord> `MoveNext`Hiermee stelt u `Current` naar het volgende element.       Na het einde van de verzameling wordt doorgegeven, de enumerator is geplaatst na het laatste element in de verzameling en roepen `MoveNext` wordt false geretourneerd. Als de laatste aanroep aan `MoveNext` geretourneerd `false`, aanroepende `Current` er een uitzondering gegenereerd. Bovendien, omdat de <xref:System.Data.DataTableReader>biedt alleen toegang tot de gegevens, het aanroepen van de <xref:System.Collections.IEnumerator.Reset%2A>methode van de IEnumerator genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Data.DataTableReader>       De <xref:System.Data.DataTableReader>biedt een enumerator voor een stabiele.</xref:System.Data.DataTableReader> Dit betekent dat zelfs als de rij verwijderen of toevoegen in de onderliggende gegevens optreden, de enumerator geretourneerd door een aanroep naar GetEnumerator nog geldig is."
  example:
  - "The following example demonstrates the use of the GetEnumerator method. This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.  \n  \n [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_7_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/csharp/m-system.data.datatabler_7_1.cs)]  \n  \n The procedure displays the following text in the Console window:  \n  \n```  \nPeter  \nMary  \nRuss  \n```"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een <xref:System.Collections.IEnumerator>-object met de itemverzameling.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataTableReader.GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref:System.Type>die het gegevenstype van het object.</xref:System.Type>"
  remarks: ''
  example:
  - "Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/csharp/m-system.data.datatabler_13_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_13_1.vb)]"
  syntax:
    content: public override Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Type
      description: "De <xref:System.Type>die het gegevenstype van het object.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom als een getal met enkele precisie drijvende komma."
  remarks: "Er is geen conversies worden uitgevoerd; daarom de gegevens zijn opgehaald, moet al een getal met enkele precisie drijvende komma of moet worden omgezet in een getal met enkele precisie drijvende komma.       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/csharp/m-system.data.datatabler_11_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_11_1.vb)]"
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Single
      description: "De waarde van de kolom."
  overload: System.Data.DataTableReader.GetFloat*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een getal met enkele precisie drijvende komma."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom als een globally unique identifier (GUID)."
  remarks: "Er is geen conversies worden uitgevoerd; de opgehaalde gegevens al moet daarom een <xref:System.Guid>of omgezet in een `Guid`.</xref:System.Guid>       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/csharp/m-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Guid
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetGuid*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat een GUID niet."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom als een 16-bits geheel getal met teken."
  remarks: "Er is geen conversies worden uitgevoerd; de opgehaalde gegevens al moet daarom een <xref:System.Int16>of omgezet in een `Int16`.</xref:System.Int16>       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_1_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/csharp/m-system.data.datatabler_1_1.cs)]"
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord"
    return:
      type: System.Int16
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetInt16*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een 16-bits geheel getal met teken."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom als een 32-bits geheel getal met teken."
  remarks: "Er is geen conversies worden uitgevoerd; de opgehaalde gegevens al moet daarom een <xref:System.Int32>of omgezet in een `Int32`.</xref:System.Int32>       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/csharp/m-system.data.datatabler_15_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_15_1.vb)]"
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord"
    return:
      type: System.Int32
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetInt32*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een 32-bits ondertekende integer-waarde."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom als een 64-bits geheel getal met teken."
  remarks: "Er is geen conversies worden uitgevoerd; de opgehaalde gegevens al moet daarom een <xref:System.Int64>of omgezet in een `Int64`.</xref:System.Int64>       Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_5_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/csharp/m-system.data.datatabler_5_1.cs)]"
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord"
    return:
      type: System.Int64
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetInt64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een 64-bits ondertekende integer-waarde."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de waarde van de opgegeven kolom als een <xref:System.String>.</xref:System.String>"
  remarks: "De `GetName` en <xref:System.Data.DataTableReader.GetOrdinal%2A>methoden inverse functionaliteit bieden.</xref:System.Data.DataTableReader.GetOrdinal%2A> Dat wil zeggen, het aanroepen van `GetOrdinal` op de geretourneerde waarde van aanroepen `GetName` als resultaat moet de oorspronkelijke parameter doorgegeven aan `GetName`; geldt ook voor het aanroepen van de procedures in de omgekeerde volgorde."
  example:
  - "The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetName#1](~/add/codesnippet/csharp/m-system.data.datatabler_6_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_6_1.vb)]"
  syntax:
    content: public override string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord"
    return:
      type: System.String
      description: "De naam van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de kolom rangtelwoord, krijgt de naam van de kolom."
  remarks: "Omdat de meeste van de methoden die is opgegeven door de <xref:System.Data.DataTableReader>klasse moet worden opgegeven met een met rangtelwoord kolomnummer, kunt u de `GetOrdinal` methode voor het ophalen van het nummer van de kolom, krijgt de naam van de kolom.</xref:System.Data.DataTableReader>       `GetOrdinal`voert eerst een hoofdlettergevoelige zoekactie. Als dit mislukt, wordt een tweede hoofdlettergevoelige zoekactie wordt uitgevoerd. Als het nummer van de kolom is niet gevonden. een `IndexOutOfRangeException` gegenereerd.       `GetOrdinal`kana breedte is hoofdlettergevoelig.       Omdat lookups op basis van een rangtelwoord efficiënter dan benoemde zoekacties zijn, is het aan te roepen inefficiënte `GetOrdinal` binnen een For-lus. Tijd besparen door het aanroepen van `GetOrdinal` één keer en het toewijzen van de resultaten naar een geheel getal variabele voor gebruik binnen de lus"
  example:
  - "If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information. In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :  \n  \n [!code-cs[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.datatabler_3_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_3_1.vb)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de kolom."
    return:
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
  overload: System.Data.DataTableReader.GetOrdinal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De opgegeven naam is geen geldige kolomnaam."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt het type van de opgegeven kolom in provider-specifieke indeling."
  remarks: "Omdat de <xref:System.Data.DataTableReader>altijd retourneert het type opgeslagen in de onderliggende <xref:System.Data.DataColumn>de waarde die is geretourneerd door het aanroepen van de methode GetProviderSpecificFieldType altijd geeft hetzelfde type als het type dat is opgeslagen in de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Wanneer u werkt met de <xref:System.Data.DataTableReader>klasse, aanroepen van de methode GetProviderSpecificFieldType hetzelfde type als het aanroepen retourneert de <xref:System.Type.GetType%2A>methode.</xref:System.Type.GetType%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Type
      description: "De <xref:System.Type>die het gegevenstype van het object.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetProviderSpecificFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom in provider-specifieke indeling."
  remarks: "Omdat de <xref:System.Data.DataTableReader>altijd retourneert het type opgeslagen in de onderliggende <xref:System.Data.DataColumn>de waarde die is geretourneerd door het aanroepen van de methode GetProviderSpecificValue altijd retourneert gegevens van hetzelfde type als de gegevens die zijn opgeslagen in de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Wanneer u werkt met de <xref:System.Data.DataTableReader>klasse, aanroepen van de methode GetProviderSpecificValue retourneert dezelfde waarde en typ als aanroepen de <xref:System.Data.DataTableReader.GetValue%2A>methode.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde nummer van de kolom waarvan de waarde wordt opgehaald."
    return:
      type: System.Object
      description: "De waarde van de opgegeven kolom in de provider-specifieke indeling."
  overload: System.Data.DataTableReader.GetProviderSpecificValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten<xref href=&quot;System.Data.DataTableReader&quot;></xref>"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Vult de opgegeven matrix met providerspecifieke type-informatie voor alle kolommen in de <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Omdat de <xref:System.Data.DataTableReader>altijd retourneert de gegevens van het type opgeslagen in de onderliggende <xref:System.Data.DataColumn>de waarden die door het aanroepen van de methode altijd van hetzelfde type als de gegevens die zijn opgeslagen in de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> is GetProviderSpecificValues</xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Wanneer u werkt met de <xref:System.Data.DataTableReader>klasse, aanroepen van de methode GetProviderSpecificValues retourneert dezelfde waarden en typen als aanroepen de <xref:System.Data.DataTableReader.GetValues%2A>methode.</xref:System.Data.DataTableReader.GetValues%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Een matrix met objecten om te worden ingevuld met informatie over de kolommen in de <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "Het aantal kolomwaarden gekopieerd naar de matrix."
  overload: System.Data.DataTableReader.GetProviderSpecificValues*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Retourneert een <xref href=&quot;System.Data.DataTable&quot;> </xref> die beschrijft de kolommetagegevens van de van de <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "De GetSchemaTable-methode retourneert metagegevens over elke kolom in de volgende volgorde: | DataReader kolom | Beschrijving |   |-----------------------|-----------------|   | ColumnName | De naam van de kolom die wordt weergegeven in de <xref:System.Data.DataTable>. |   | ColumnOrdinal | Het rangtelwoord voor de van de kolom |   | ColumnSize | 1 als de <xref:System.Data.Common.SchemaTableColumn.ColumnSize>(of <xref:System.Data.DataColumn.MaxLength%2A>) eigenschap van de <xref:System.Data.DataColumn>kan niet worden bepaald of is niet relevant; anders 0 of een positief geheel getal met de `MaxLength` waarde. |   | NumericPrecision | Als het kolomtype een numeriek type is, dit is de maximale precisie van de kolom.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.MaxLength%2A> </xref:System.Data.Common.SchemaTableColumn.ColumnSize> </xref:System.Data.DataTable> Als het kolomtype niet een numeriek gegevenstype is, dit is een null-waarde. |   | NumericScale | Als het gegevenstype van kolom heeft een onderdeel van de schaal, moet u het aantal cijfers retourneren aan de rechterkant van de decimale komma. Anders retourneert een null-waarde. |   | Gegevenstype | Het onderliggende type van de kolom. |   | ProviderType | De indicator van het gegevenstype van de kolom. Als het gegevenstype van de kolom varieert de ene rij, is deze waarde <xref:System.Object>.</xref:System.Object> In deze kolom mag geen null-waarde bevatten. |   | IsLong | `true` als het gegevenstype van de kolom <xref:System.String>en de bijbehorende <xref:System.Data.DataColumn.MaxLength%2A>eigenschap is -1.</xref:System.Data.DataColumn.MaxLength%2A> </xref:System.String> Anders `false`. |   | AllowDBNull | `true` als de AllowDbNull-beperking is ingesteld op true voor de kolom, anders wordt `false`. |   | IsReadOnly | `true` als de kolom niet kan gewijzigd, anders worden `false`. |   | IsRowVersion | `false`, voor elke kolom. |   | IsUnique | `true`: Er zijn geen twee rijen in de <xref:System.Data.DataTable>kunt hebben dezelfde waarde in deze kolom.</xref:System.Data.DataTable> `IsUnique`waar als de kolom vertegenwoordigt een sleutel kan worden gegarandeerd zelf of als er een beperking van het type unieke die alleen voor deze kolom geldt is. `false`: De kolom kan bevatten dubbele waarden in de `DataTable`. De standaardwaarde van deze kolom is `false`. |   | IsKey | `true`: De kolom is een van de kolommen die samen unieke identificatie van de rij in de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> De set kolommen met `IsKey` ingesteld op `true` moet een unieke identificatie voor een rij in de `DataTable`. Is het niet noodzakelijk dat deze verzameling kolommen een minimaal aantal kolommen is. Deze verzameling kolommen kan worden gegenereerd vanuit een `DataTable` primaire sleutel, een unique-beperking of een unieke index. `false`: De kolom is niet vereist voor het aanduiden van de rij. Deze waarde is `true` als de kolom deel van een enkelvoudige of samengestelde primaire sleutel uitmaakt. Anders wordt de waarde ervan `false`. |   | IsAutoIncrement | `true`: De kolom waarden worden toegewezen aan nieuwe rijen met vaste intervallen. `false`: De kolom heeft geen waarden toewijzen aan nieuwe rijen met vaste intervallen. De standaardwaarde van deze kolom is `false`. |   | BaseCatalogName | De naam van de catalogus in het gegevensarchief die de kolom bevat. `Null`Als de basis catalogusnaam niet bepalen. De standaardwaarde voor deze kolom is een `null` waarde. |   | BaseSchemaName | Deze waarde is altijd `Null`. |   | BaseTableName | De naam van de <xref:System.Data.DataTable>. |   | BaseColumnName | De naam van de kolom in de <xref:System.Data.DataTable>. |   | AutoIncrementSeed | De waarde van de eigenschap van <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementSeed%2A>. |   | AutoIncrementStep | De waarde van de eigenschap van <xref:System.Data.DataTable> <xref:System.Data.DataColumn.AutoIncrementStep%2A>. |   | DefaultValue | De waarde van de eigenschap van <xref:System.Data.DataColumn> <xref:System.Data.DataColumn.DefaultValue%2A>. |   | Expressie | De expressietekenreeks als de huidige kolom een expressiekolom is en alle kolommen die worden gebruikt in de expressie deel uitmaken van dezelfde `T:System.Data.DataTable` die de expressiekolom bevat; anders `null`. |   | ColumnMapping | De <xref:System.Data.MappingType>waarde die is gekoppeld aan de <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> </xref:System.Data.MappingType> </xref:System.Data.DataColumn.DefaultValue%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataColumn.AutoIncrementStep%2A> </xref:System.Data.DataTable> </xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataTable> Het type zijn `Attribute`, `Element`, `Hidden`, of `SimpleContent`. De standaardwaarde is `Element`. |   | BaseTableNamespace | De waarde van de eigenschap van <xref:System.Data.DataTable> <xref:System.Data.DataTable.Namespace%2A>. |   | BaseColumnNamespace | De waarde van de <xref:System.Data.DataColumn>van <xref:System.Data.DataColumn.Namespace%2A>eigenschap. |</xref:System.Data.DataColumn.Namespace%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable.Namespace%2A> </xref:System.Data.DataTable>"
  example:
  - "The following console application example retrieves schema information about the specified column. Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/csharp/m-system.data.datatabler_14_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_14_1.vb)]"
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die beschrijft de kolommetagegevens van de."
  overload: System.Data.DataTableReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref href=&quot;System.Data.DataTableReader&quot;> </xref> is gesloten."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom als een tekenreeks."
  remarks: "Roep <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien of er null-waarden zijn voordat u deze methode aanroept.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetString#1](~/add/codesnippet/csharp/m-system.data.datatabler_17_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetString#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_17_1.vb)]"
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord"
    return:
      type: System.String
      description: "De waarde van de opgegeven kolom."
  overload: System.Data.DataTableReader.GetString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "De opgegeven kolom bevat geen een tekenreeks."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom in de oorspronkelijke indeling."
  remarks: "Hoewel u kunt aanroepen <xref:System.Data.DataTableReader.IsDBNull%2A>om te zien als er null-waarden zijn voordat u deze methode aanroept, hoeft u niet om dit te doen.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name. Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.  \n  \n [!code-cs[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/csharp/m-system.data.datatabler_22_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_22_1.vb)]"
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord"
    return:
      type: System.Object
      description: "De waarde van de opgegeven kolom. Deze methode retourneert <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> voor null-kolommen."
  overload: System.Data.DataTableReader.GetValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot kolommen in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een matrix met objecten met de kolomwaarden van de huidige rij gevuld."
  remarks: "Voor de meeste toepassingen biedt deze methode een efficiënte manier voor het ophalen van alle kolommen, in plaats van elke kolom afzonderlijk ophalen. Als uw bedoeling is om het ophalen van alle kolomwaarden van een rij in de <xref:System.Data.DataTableReader>, wordt de `GetValues` methode biedt de meest efficiënte oplossing.</xref:System.Data.DataTableReader>       U kunt doorgeven een <xref:System.Object>matrix met minder dan het aantal kolommen die zijn opgenomen in de resulterende rijlengte.</xref:System.Object> De hoeveelheid gegevens de `Object` matrix wordt gekopieerd naar de matrix kan bevatten. U kunt ook doorgeven een `Object` matrix waarvan is langer dan het aantal kolommen die zijn opgenomen in de resulterende rij waarin geval de aanvullende matrixelementen blijft ongewijzigd door de methodeaanroep van.       Deze methode plaatst `DBNull` in de uitvoermatrix voor null-kolommen."
  example:
  - "The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \n  \n [!code-cs[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/csharp/m-system.data.datatabler_21_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_21_1.vb)]"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Een matrix van <xref:System.Object>waarin het kopiëren van de kolomwaarden uit de <xref href=&quot;System.Data.DataTableReader&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Het aantal kolomwaarden gekopieerd naar de matrix."
  overload: System.Data.DataTableReader.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.HasRows
  id: HasRows
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een waarde die aangeeft of de <xref href=&quot;System.Data.DataTableReader&quot;> </xref> bevat een of meer rijen."
  remarks: "De `HasRows` eigenschap retourneert informatie over de huidige resultatenset. Als de <xref:System.Data.DataTableReader>bevat meerdere resultatensets sets, bekijk de waarde van de `HasRows` eigenschap onmiddellijk nadat u de <xref:System.Data.DataTableReader.NextResult%2A>methode om te bepalen of de nieuwe resultatenset rijen bevat.</xref:System.Data.DataTableReader.NextResult%2A> </xref:System.Data.DataTableReader>       Gebruik de `HasRows` eigenschap om te voorkomen dat de vereiste om aan te roepen de <xref:System.Data.DataTableReader.Read%2A>methode van de <xref:System.Data.DataTableReader>Als er geen rijen binnen de huidige resultatenset.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.Read%2A>"
  example:
  - "The following example fills two <xref:System.Data.DataTable> instances with data. The first <xref:System.Data.DataTable> contains one row, and the second contains no rows. The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the HasRows property of each before it makes the call to PrintData.  \n  \n [!code-cs[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/csharp/p-system.data.datatabler_1_1.cs)]\n [!code-vb[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_1_1.vb)]"
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Data.DataTableReader&quot;> </xref> bevat een of meer rijen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.HasRows*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan informatie ophalen over een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.IsClosed
  id: IsClosed
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een waarde die aangeeft of de <xref href=&quot;System.Data.DataTableReader&quot;> </xref> is gesloten."
  remarks: "<xref:System.Data.DataTableReader.Close%2A>is de enige methode en `IsClosed` en <xref:System.Data.DataTableReader.RecordsAffected%2A>zijn de enige eigenschappen die kunnen worden geopend na de <xref:System.Data.DataTableReader>is gesloten.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.RecordsAffected%2A></xref:System.Data.DataTableReader.Close%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "Retourneert <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> als de <xref href=&quot;System.Data.DataTableReader&quot;> </xref> is gesloten, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een waarde die aangeeft of de kolom niet-bestaande of ontbrekende waarden bevat."
  remarks: "Deze methode aanroepen om te zien of er null kolomwaarden voordat u de getypeerde get-methoden (bijvoorbeeld <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, enzovoort) om te voorkomen dat een fout.</xref:System.Data.DataTableReader.GetChar%2A> </xref:System.Data.DataTableReader.GetByte%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_18_1.vb)]\n [!code-cs[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/csharp/m-system.data.datatabler_18_1.cs)]"
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van de opgegeven kolom is gelijk aan <xref href=&quot;System.DBNull&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsDBNull*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom in de oorspronkelijke indeling die de kolom met rangtelwoord opgegeven."
  remarks: "Deze overbelasting voor <xref:System.Data.DataTableReader.Item%2A>gedraagt zich identiek aan de <xref:System.Data.DataTableReader.GetValue%2A>methode.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>. The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.  \n  \n [!code-vb[DataWorks DataTableReader.Item#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.Item#1](~/add/codesnippet/csharp/p-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "De op nul gebaseerde kolom met rangtelwoord."
    return:
      type: System.Object
      description: "De waarde van de opgegeven kolom in de oorspronkelijke indeling."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De doorgegeven index is buiten het bereik van 0 tot en met <xref:System.Data.DataTableReader.FieldCount*>- 1.</xref:System.Data.DataTableReader.FieldCount*>"
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt de waarde van de opgegeven kolom in de oorspronkelijke indeling opgegeven naam van de kolom."
  remarks: "Een hoofdlettergevoelige zoekactie wordt eerst uitgevoerd. Als dit mislukt, wordt een tweede hoofdlettergevoelige zoekactie wordt uitgevoerd.       Deze methode is hoofdlettergevoelig kana breedte.       Deze overbelaste versie van <xref:System.Data.DataTableReader.Item%2A>komt overeen met het aanroepen van de <xref:System.Data.DataTableReader.GetOrdinal%2A>methode en vervolgens later het aanroepen van de <xref:System.Data.DataTableReader.GetValue%2A>methode.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.GetOrdinal%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column. Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.  \n  \n [!code-vb[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/csharp/p-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "De naam van de kolom."
    return:
      type: System.Object
      description: "De waarde van de opgegeven kolom in de oorspronkelijke indeling."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De opgegeven naam is geen geldige kolomnaam."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Gegevens ophalen uit een verwijderde rij is een poging gedaan."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.NextResult
  id: NextResult
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verplaatst de <xref href=&quot;System.Data.DataTableReader&quot;> </xref> met de volgende resultaat, indien van toepassing."
  remarks: "Gebruikt voor het verwerken van meerdere resultaten dat kunnen worden gegenereerd door het maken van een <xref:System.Data.DataTableReader>via een <xref:System.Data.DataSet>die bevat twee of meer tabellen, of een matrix met twee of meer <xref:System.Data.DataTable>exemplaren.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTableReader>       Een nieuwe <xref:System.Data.DataTableReader>is geplaatst op het eerste resultaat.</xref:System.Data.DataTableReader>"
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_9_1.vb)]\n [!code-cs[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/csharp/m-system.data.datatabler_9_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als er een andere resultatenset; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.NextResult*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te navigeren binnen een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.Read
  id: Read
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verplaatst de <xref href=&quot;System.Data.DataTableReader&quot;> </xref> naar de volgende record."
  remarks: "De standaardpositie van de <xref:System.Data.DataTableReader>vóór de eerste record.</xref:System.Data.DataTableReader> Daarom moet u aanroepen `Read` starten toegang tot alle gegevens."
  example:
  - "The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.Read#1](~/add/codesnippet/csharp/m-system.data.datatabler_12_1.cs)]\n [!code-vb[DataWorks DataTableReader.Read#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_12_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als er een nieuwe rij worden gelezen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een poging gedaan om te lezen of toegang tot een kolom in een gesloten <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u het aantal rijen ingevoegd, gewijzigd of verwijderd door de uitvoering van de SQL-instructie."
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "De <xref href=&quot;System.Data.DataTableReader&quot;> </xref> biedt geen ondersteuning voor deze eigenschap en altijd de waarde 0."
  overload: System.Data.DataTableReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.Close
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
- uid: System.Data.DataTableReader.Depth
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableReader.FieldCount
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.DataTableReader.GetEnumerator
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
- uid: System.Data.DataTableReader.GetName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetSchemaTable
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
- uid: System.Data.DataTableReader.GetString(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
- uid: System.Data.DataTableReader.HasRows
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
- uid: System.Data.DataTableReader.Item(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
- uid: System.Data.DataTableReader.Item(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
- uid: System.Data.DataTableReader.NextResult
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
- uid: System.Data.DataTableReader.Read
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
- uid: System.Data.DataTableReader.RecordsAffected
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
- uid: System.Data.DataTableReader.#ctor*
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader
  nameWithType: DataTableReader.DataTableReader
- uid: System.Data.DataTableReader.Close*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close
  nameWithType: DataTableReader.Close
- uid: System.Data.DataTableReader.Depth*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
- uid: System.Data.DataTableReader.FieldCount*
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean
  nameWithType: DataTableReader.GetBoolean
- uid: System.Data.DataTableReader.GetByte*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte
  nameWithType: DataTableReader.GetByte
- uid: System.Data.DataTableReader.GetBytes*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes
  nameWithType: DataTableReader.GetBytes
- uid: System.Data.DataTableReader.GetChar*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar
  nameWithType: DataTableReader.GetChar
- uid: System.Data.DataTableReader.GetChars*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars
  nameWithType: DataTableReader.GetChars
- uid: System.Data.DataTableReader.GetDataTypeName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DataTableReader.GetDataTypeName
- uid: System.Data.DataTableReader.GetDateTime*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime
  nameWithType: DataTableReader.GetDateTime
- uid: System.Data.DataTableReader.GetDecimal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal
  nameWithType: DataTableReader.GetDecimal
- uid: System.Data.DataTableReader.GetDouble*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble
  nameWithType: DataTableReader.GetDouble
- uid: System.Data.DataTableReader.GetEnumerator*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DataTableReader.GetEnumerator
- uid: System.Data.DataTableReader.GetFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType
  nameWithType: DataTableReader.GetFieldType
- uid: System.Data.DataTableReader.GetFloat*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat
  nameWithType: DataTableReader.GetFloat
- uid: System.Data.DataTableReader.GetGuid*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid
  nameWithType: DataTableReader.GetGuid
- uid: System.Data.DataTableReader.GetInt16*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16
  nameWithType: DataTableReader.GetInt16
- uid: System.Data.DataTableReader.GetInt32*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32
  nameWithType: DataTableReader.GetInt32
- uid: System.Data.DataTableReader.GetInt64*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64
  nameWithType: DataTableReader.GetInt64
- uid: System.Data.DataTableReader.GetName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName
  nameWithType: DataTableReader.GetName
- uid: System.Data.DataTableReader.GetOrdinal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DataTableReader.GetOrdinal
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DataTableReader.GetProviderSpecificFieldType
- uid: System.Data.DataTableReader.GetProviderSpecificValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DataTableReader.GetProviderSpecificValue
- uid: System.Data.DataTableReader.GetProviderSpecificValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DataTableReader.GetProviderSpecificValues
- uid: System.Data.DataTableReader.GetSchemaTable*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DataTableReader.GetSchemaTable
- uid: System.Data.DataTableReader.GetString*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString
  nameWithType: DataTableReader.GetString
- uid: System.Data.DataTableReader.GetValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue
  nameWithType: DataTableReader.GetValue
- uid: System.Data.DataTableReader.GetValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues
  nameWithType: DataTableReader.GetValues
- uid: System.Data.DataTableReader.HasRows*
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull
  nameWithType: DataTableReader.IsDBNull
- uid: System.Data.DataTableReader.Item*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item
  nameWithType: DataTableReader.Item
- uid: System.Data.DataTableReader.NextResult*
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult
  nameWithType: DataTableReader.NextResult
- uid: System.Data.DataTableReader.Read*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read
  nameWithType: DataTableReader.Read
- uid: System.Data.DataTableReader.RecordsAffected*
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
