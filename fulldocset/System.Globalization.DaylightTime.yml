### YamlMime:ManagedReference
items:
- uid: System.Globalization.DaylightTime
  id: DaylightTime
  children:
  - System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  - System.Globalization.DaylightTime.Delta
  - System.Globalization.DaylightTime.End
  - System.Globalization.DaylightTime.Start
  langs:
  - csharp
  name: DaylightTime
  nameWithType: DaylightTime
  fullName: System.Globalization.DaylightTime
  type: Class
  summary: "Hiermee definieert u de periode van zomertijd."
  remarks: "Zomertijd is een periode tijdens het jaar wanneer van de klok geavanceerde, meestal met een uur, om te profiteren van uitgebreide daylight uur. De klok is aan het einde van de periode weer ingesteld op de standaardtijd.      > [!WARNING] > De DaylightTime-object geretourneerd door de <xref:System.TimeZone.GetDaylightChanges%2A?displayProperty=fullName>methode herkent alleen de regel in de tijdzone aanpassing die is actief en eventuele eerdere aanpassing regels waarvoor het systeem gegevens heeft worden genegeerd.</xref:System.TimeZone.GetDaylightChanges%2A?displayProperty=fullName> Toepassing in plaats daarvan de huidige aanpassing regel terug in de tijd op perioden wanneer deze niet van kracht zijn mogelijk. Voor het ophalen van informatie over de aanpassing van bekende regels voor een bepaalde tijdzone, gebruiken de <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName>methode.</xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DaylightTime
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  id: '#ctor(System.DateTime,System.DateTime,System.TimeSpan)'
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: DaylightTime(DateTime,DateTime,TimeSpan)
  nameWithType: DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
  fullName: System.Globalization.DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Globalization.DaylightTime&quot;> </xref> klasse met de opgegeven start, eindgebruikers en tijdsgegevens verschil."
  remarks: "De `start` parameter als de waarde van de <xref:System.Globalization.DaylightTime.Start%2A>eigenschap van het nieuwe object.</xref:System.Globalization.DaylightTime.Start%2A> De `end` parameter als de waarde van de <xref:System.Globalization.DaylightTime.End%2A>eigenschap van het nieuwe object.</xref:System.Globalization.DaylightTime.End%2A> De `delta` parameter als de waarde van de <xref:System.Globalization.DaylightTime.Delta%2A>eigenschap van het nieuwe object.</xref:System.Globalization.DaylightTime.Delta%2A>"
  syntax:
    content: public DaylightTime (DateTime start, DateTime end, TimeSpan delta);
    parameters:
    - id: start
      type: System.DateTime
      description: "Het object waarmee de datum en tijd waarop de zomertijd begint. De waarde moet in de lokale tijd."
    - id: end
      type: System.DateTime
      description: "Het object waarmee de datum en tijd waarop de zomertijd eindigt. De waarde moet in de lokale tijd."
    - id: delta
      type: System.TimeSpan
      description: "Het object dat het verschil tussen de standaardtijd- en wintertijd, in ticks vertegenwoordigt."
  overload: System.Globalization.DaylightTime.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.Delta
  id: Delta
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: Delta
  nameWithType: DaylightTime.Delta
  fullName: System.Globalization.DaylightTime.Delta
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee haalt u de tijdsinterval die het verschil tussen de standaardtijd- en wintertijd is."
  remarks: "Deze eigenschap komt overeen met de <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A?displayProperty=fullName>eigenschap.</xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A?displayProperty=fullName> In het algemeen de <xref:System.TimeZoneInfo>klasse is een nauwkeurige bron van informatie over aanpassingen tijdzone dan de <xref:System.TimeZone>en <xref:System.Globalization.DaylightTime>klassen.</xref:System.Globalization.DaylightTime> </xref:System.TimeZone> </xref:System.TimeZoneInfo>       Als de waarde van eigenschap aan het begin van de zomer-en wintertijd positief is, is, wordt de kloktijd geavanceerde door de lengte van de tijd die is opgegeven door deze eigenschap. De kloktijd wordt aan het einde van de zomer-en wintertijd, opnieuw ingesteld door de lengte van de tijd die is opgegeven door deze eigenschap. Als de waarde van eigenschap negatief is, wordt de kloktijd terug aan het begin van de zomer-en wintertijd worden gezet en geavanceerde aan het einde."
  syntax:
    content: public TimeSpan Delta { get; }
    return:
      type: System.TimeSpan
      description: "De tijdsinterval die het verschil tussen standaardtijd- en wintertijd aangeeft."
  overload: System.Globalization.DaylightTime.Delta*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.End
  id: End
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: End
  nameWithType: DaylightTime.End
  fullName: System.Globalization.DaylightTime.End
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee haalt u het object dat staat voor de datum en tijd wanneer de zomertijd is verlopen."
  remarks: "Deze eigenschap komt overeen met de <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A?displayProperty=fullName>eigenschap.</xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A?displayProperty=fullName> In het algemeen de <xref:System.TimeZoneInfo>klasse is een nauwkeurige bron van informatie over aanpassingen tijdzone dan de <xref:System.TimeZone>en <xref:System.Globalization.DaylightTime>klassen.</xref:System.Globalization.DaylightTime> </xref:System.TimeZone> </xref:System.TimeZoneInfo>       Wanneer de periode voor zomertijd wordt beÃ«indigd, wordt de kloktijd opnieuw ingesteld op (standaardtijd)."
  syntax:
    content: public DateTime End { get; }
    return:
      type: System.DateTime
      description: "Het object dat staat voor de datum en tijd wanneer de zomertijd is verlopen. De waarde is in de lokale tijd."
  overload: System.Globalization.DaylightTime.End*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.DaylightTime.Start
  id: Start
  parent: System.Globalization.DaylightTime
  langs:
  - csharp
  name: Start
  nameWithType: DaylightTime.Start
  fullName: System.Globalization.DaylightTime.Start
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee haalt u het object waarmee de datum en tijd waarop de zomertijd periode begint."
  remarks: "Deze eigenschap komt overeen met de <xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A?displayProperty=fullName>eigenschap.</xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A?displayProperty=fullName> In het algemeen de <xref:System.TimeZoneInfo>klasse is een nauwkeurige bron van informatie over aanpassingen tijdzone dan de <xref:System.TimeZone>en <xref:System.Globalization.DaylightTime>klassen.</xref:System.Globalization.DaylightTime> </xref:System.TimeZone> </xref:System.TimeZoneInfo>       Wanneer de periode voor zomertijd begint, de kloktijd is geavanceerde door het aantal ticks gedefinieerd door de <xref:System.Globalization.DaylightTime.Delta%2A>eigenschap om te profiteren van de uitgebreide daylight uur.</xref:System.Globalization.DaylightTime.Delta%2A>"
  syntax:
    content: public DateTime Start { get; }
    return:
      type: System.DateTime
      description: "Het object waarmee de datum en tijd waarop de zomertijd periode begint. De waarde is in de lokale tijd."
  overload: System.Globalization.DaylightTime.Start*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Globalization.DaylightTime.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: DaylightTime(DateTime,DateTime,TimeSpan)
  nameWithType: DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
  fullName: System.Globalization.DaylightTime.DaylightTime(DateTime,DateTime,TimeSpan)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Globalization.DaylightTime.Delta
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Delta
  nameWithType: DaylightTime.Delta
  fullName: System.Globalization.DaylightTime.Delta
- uid: System.Globalization.DaylightTime.End
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: End
  nameWithType: DaylightTime.End
  fullName: System.Globalization.DaylightTime.End
- uid: System.Globalization.DaylightTime.Start
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Start
  nameWithType: DaylightTime.Start
  fullName: System.Globalization.DaylightTime.Start
- uid: System.Globalization.DaylightTime.#ctor*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: DaylightTime
  nameWithType: DaylightTime.DaylightTime
- uid: System.Globalization.DaylightTime.Delta*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Delta
  nameWithType: DaylightTime.Delta
- uid: System.Globalization.DaylightTime.End*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: End
  nameWithType: DaylightTime.End
- uid: System.Globalization.DaylightTime.Start*
  parent: System.Globalization.DaylightTime
  isExternal: false
  name: Start
  nameWithType: DaylightTime.Start
