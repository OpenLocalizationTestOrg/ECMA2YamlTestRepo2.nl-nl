### YamlMime:ManagedReference
items:
- uid: System.Xml.IStreamProvider
  id: IStreamProvider
  children:
  - System.Xml.IStreamProvider.GetStream
  - System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  langs:
  - csharp
  name: IStreamProvider
  nameWithType: IStreamProvider
  fullName: System.Xml.IStreamProvider
  type: Interface
  summary: "Hiermee geeft u een interface die kan worden geïmplementeerd door klassen streams leveren."
  remarks: "Bij het schrijven van een uitgaand bericht met een gestreamde hoofdtekst van een XML-schrijver de <xref:System.ServiceModel.Channels.Message>gebruikt een reeks van aanroepen is vergelijkbaar met het volgende in de <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>uitvoering:-schrijven van alle benodigde informatie voorafgaand aan de stroom (bijvoorbeeld de opening XML-code).</xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> </xref:System.ServiceModel.Channels.Message>      -De stroom schrijven.      -Alle informatie op te volgen (bijvoorbeeld de afsluitende XML-code) van de stroom schrijven.       Dit werkt goed met coderingen die vergelijkbaar met de tekstuele XML-codering zijn. Er zijn echter enkele coderingen die plaats geen XML-infoset gegevens (bijvoorbeeld tags voor het starten en beëindigen van de XML-elementen) samen met de gegevens in de elementen. In de MTOM-codering vereist is, het bericht splitsen in meerdere delen. Een gedeelte bevat de XML-infoset dat verwijzingen naar andere onderdelen voor de inhoud van het werkelijke element kan bevatten. Omdat de XML-infoset wordt normaal gesproken kleine vergeleken met de gestreamde inhoud, is het verstandig de infoset buffer en schrijf vervolgens de inhoud in een gestreamde manier schrijf deze uit. Dit betekent dat op het moment dat de afsluitende elementcode is geschreven, we moeten hebben nog moet worden geschreven uit de stroom.       Voor dit doel is de interface IStreamProvider wordt gebruikt. De interface heeft een <xref:System.Xml.IStreamProvider.GetStream>methode die de stroom moet worden geschreven als resultaat geeft.</xref:System.Xml.IStreamProvider.GetStream> De juiste manier schrijven van een gestreamde berichttekst in <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>is als volgt: - schrijven alle benodigde informatie voorafgaand aan de stroom (bijvoorbeeld de opening XML-code) - aanroepen de `WriteValue` overbelasting van de <xref:System.Xml.XmlDictionaryWriter>dat een IStreamProvider houdt met een `IStreamProvider` implementatie die als resultaat de stroom geeft moet worden geschreven.</xref:System.Xml.XmlDictionaryWriter> </xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>      -Alle informatie die na de stroom (bijvoorbeeld de afsluitende XML-code) met deze methode schrijven, de XML-writer is een keuze uit het aanroepen <xref:System.Xml.IStreamProvider.GetStream>en gestroomde gegevens wegschrijven.</xref:System.Xml.IStreamProvider.GetStream> De XML-tekst en binaire schrijvers wordt bijvoorbeeld onmiddellijk aanroepen en de gestreamde inhoud tussen de begin- en afsluitcodes uitschrijven. De MTOM-writer kan besluiten om aan te roepen <xref:System.Xml.IStreamProvider.GetStream>later, wanneer het is klaar om te schrijven van het juiste deel van het bericht.</xref:System.Xml.IStreamProvider.GetStream>"
  syntax:
    content: public interface IStreamProvider
  implements: []
  platform:
  - net462
- uid: System.Xml.IStreamProvider.GetStream
  id: GetStream
  parent: System.Xml.IStreamProvider
  langs:
  - csharp
  name: GetStream()
  nameWithType: IStreamProvider.GetStream()
  fullName: System.Xml.IStreamProvider.GetStream()
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Hiermee haalt u een stream."
  remarks: "Deze methode kan worden gebruikt om te retourneren van de stroom moet worden geschreven."
  syntax:
    content: public System.IO.Stream GetStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object.</xref:System.IO.Stream>"
  overload: System.Xml.IStreamProvider.GetStream*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  id: ReleaseStream(System.IO.Stream)
  parent: System.Xml.IStreamProvider
  langs:
  - csharp
  name: ReleaseStream(Stream)
  nameWithType: IStreamProvider.ReleaseStream(Stream)
  fullName: System.Xml.IStreamProvider.ReleaseStream(Stream)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Versies van een stroom om uit te voeren."
  syntax:
    content: public void ReleaseStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De stroom wordt vrijgegeven."
  overload: System.Xml.IStreamProvider.ReleaseStream*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.IStreamProvider.GetStream
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: GetStream()
  nameWithType: IStreamProvider.GetStream()
  fullName: System.Xml.IStreamProvider.GetStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: ReleaseStream(Stream)
  nameWithType: IStreamProvider.ReleaseStream(Stream)
  fullName: System.Xml.IStreamProvider.ReleaseStream(Stream)
- uid: System.Xml.IStreamProvider.GetStream*
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: GetStream
  nameWithType: IStreamProvider.GetStream
- uid: System.Xml.IStreamProvider.ReleaseStream*
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: ReleaseStream
  nameWithType: IStreamProvider.ReleaseStream
