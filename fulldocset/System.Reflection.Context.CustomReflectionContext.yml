### YamlMime:ManagedReference
items:
- uid: System.Reflection.Context.CustomReflectionContext
  id: CustomReflectionContext
  children:
  - System.Reflection.Context.CustomReflectionContext.#ctor
  - System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  - System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  - System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  - System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  langs:
  - csharp
  name: CustomReflectionContext
  nameWithType: CustomReflectionContext
  fullName: System.Reflection.Context.CustomReflectionContext
  type: Class
  summary: "Vertegenwoordigt een aanpasbare reflectiecontext."
  remarks: "CustomReflectionContext biedt een manier waarop u wilt toevoegen of verwijderen van aangepaste kenmerken van reflectie objecten of dummy-eigenschappen voor die objecten toevoegen zonder opnieuw implementeren van het model voltooid reflectie. De standaardwaarde CustomReflectionContext verpakt gewoon reflectie objecten zonder wijzigingen, maar door subclassing en de relevante methoden te overschrijven, u kunt toevoegen, verwijderen, of wijzig de kenmerken die voor alle gereflecteerde parameter of lid is gelden, of nieuwe eigenschappen toevoegen aan een gereflecteerde type.       Stel bijvoorbeeld dat uw code de overeenkomst van het toepassen van een bepaald kenmerk factory methoden volgt, maar nu moet u werken met de code van derden die beschikt niet over de kenmerken. U kunt CustomReflectionContext gebruiken om op te geven van een regel voor het identificeren van de objecten hebben kenmerken en objecten in deze kenmerken opgeven wanneer ze worden weergegeven vanuit uw code.       CustomReflectionContext als effectief wilt gebruiken, moet de code die gebruikmaakt van de gereflecteerde objecten het begrip van het opgeven van een reflectiecontext in plaats van ervan uitgaande dat alle gereflecteerde objecten gekoppeld aan de context van de reflectie runtime zijn ondersteunen. Veel reflectie methoden in .NET Framework bieden een <xref:System.Reflection.ReflectionContext>parameter voor dit doel.</xref:System.Reflection.ReflectionContext>       Voor het wijzigen van de kenmerken die worden toegepast op een gereflecteerde parameter of lid, overschrijven de <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>of <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>methode.</xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> </xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> Deze methoden het gereflecteerde object en de lijst met kenmerken onder de huidige reflectiecontext, en retourneren de lijst met kenmerken in de reflectiecontext van de aangepaste heeft.      > [!WARNING] > CustomReflectionContext methoden mag geen toegang krijgen tot de lijst met kenmerken van een gespiegeld object of de methode rechtstreeks door het aanroepen van de <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>methode voor het opgegeven <xref:System.Reflection.MemberInfo>of <xref:System.Reflection.ParameterInfo>-instantie, maar in plaats daarvan moet gebruiken de `declaredAttributes` lijst die wordt doorgegeven als een parameter voor de <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A>methode overloads.</xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>       Om de eigenschappen voor een gereflecteerde type toevoegen, overschrijven de <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>methode.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> De methode accepteert een parameter geeft u het type gereflecteerde en retourneert een lijst van extra eigenschappen. Moet u de <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>methode voor het maken van de eigenschapobjecten om terug te keren.</xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> U kunt gemachtigden opgeven wanneer de eigenschap maken die als de eigenschapsaccessor fungeert en kunt u een van de accessors voor het maken van een alleen-lezen of alleen-schrijven eigenschap weglaten. Houd er rekening mee dat dergelijke dummy eigenschappen geen metagegevens of algemene tussenliggende Language (CIL) back-ups maken hebben.      > [!WARNING] > Wees voorzichtig bij het gelijkheid tussen gereflecteerde objecten wanneer u met reflectie contexten werkt, omdat de objecten kunnen hetzelfde object gereflecteerde in meerdere contexten vertegenwoordigen. U kunt de <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A>methode voor een bepaalde reflectiecontext versie van een object gereflecteerde.</xref:System.Reflection.Context.CustomReflectionContext.MapType%2A>      > [!WARNING] > A CustomReflectionContext object verandert de kenmerken die zijn geretourneerd door een bepaalde reflectie-object, zoals die worden verkregen door de <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>methode.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Dit geen invloed heeft op het aangepaste kenmerkgegevens die zijn geretourneerd door de <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A>methode en deze twee lijsten niet overeenkomt met wanneer u een aangepaste reflectiecontext.</xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A>"
  example:
  - "The following example demonstrates how to subclass  CustomReflectionContext to add a custom attribute to all the members of a given type whose names begin with \"To\". To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.  \n  \n [!code-cs[System.Reflection.Context.CustomReflectionContext#1](~/add/codesnippet/csharp/system.reflection.context.customreflectioncontext.consoleapplication1/program.cs#1)]"
  syntax:
    content: 'public abstract class CustomReflectionContext : System.Reflection.ReflectionContext'
  inheritance:
  - System.Reflection.ReflectionContext
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.#ctor
  id: '#ctor'
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CustomReflectionContext()
  nameWithType: CustomReflectionContext.CustomReflectionContext()
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()
  type: Constructor
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Reflection.Context.CustomReflectionContext&quot;> </xref> klasse."
  syntax:
    content: protected CustomReflectionContext ();
    parameters: []
  overload: System.Reflection.Context.CustomReflectionContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  id: '#ctor(System.Reflection.ReflectionContext)'
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CustomReflectionContext(ReflectionContext)
  nameWithType: CustomReflectionContext.CustomReflectionContext(ReflectionContext)
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(ReflectionContext)
  type: Constructor
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Reflection.Context.CustomReflectionContext&quot;> </xref> klasse met de opgegeven reflectiecontext als uitgangspunt."
  syntax:
    content: protected CustomReflectionContext (System.Reflection.ReflectionContext source);
    parameters:
    - id: source
      type: System.Reflection.ReflectionContext
      description: "De reflectiecontext om te gebruiken als basis."
  overload: System.Reflection.Context.CustomReflectionContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  id: AddProperties(System.Type)
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: AddProperties(Type)
  nameWithType: CustomReflectionContext.AddProperties(Type)
  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(Type)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Wanneer in een afgeleide klasse genegeerd, biedt een verzameling van extra eigenschappen voor het opgegeven type, zoals wordt weergegeven in deze reflectiecontext."
  remarks: "Deze methode als u wilt opgeven welke eigenschappen moeten worden toegevoegd aan een bepaald type overschrijven. Gebruik voor het maken van de eigenschappen van de <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>methode.</xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo> AddProperties (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Het type eigenschappen die u wilt toevoegen."
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
      description: "Een verzameling van extra eigenschappen voor het opgegeven type."
  overload: System.Reflection.Context.CustomReflectionContext.AddProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Hiermee maakt u een object met een eigenschap moet worden toegevoegd aan een type moet worden gebruikt met de <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>methode.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>"
  remarks: "Objecten die worden geretourneerd door deze methode zijn niet voltooid <xref:System.Reflection.PropertyInfo>objecten en mag alleen worden gebruikt in de context van de <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>methode.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> </xref:System.Reflection.PropertyInfo>"
  syntax:
    content: protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func<object,object> getter, Action<object,object> setter);
    parameters:
    - id: propertyType
      type: System.Type
      description: "Het type van de eigenschap maken."
    - id: name
      type: System.String
      description: "De naam van de eigenschap maken."
    - id: getter
      type: System.Func{System.Object,System.Object}
      description: "Een object met de eigenschap <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
    - id: setter
      type: System.Action{System.Object,System.Object}
      description: "Een object met de eigenschap <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
    return:
      type: System.Reflection.PropertyInfo
      description: "Een object dat de eigenschap vertegenwoordigt."
  overload: System.Reflection.Context.CustomReflectionContext.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Hiermee maakt u een object met een eigenschap moet worden toegevoegd aan een type moet worden gebruikt met de <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>methode en het gebruik van de opgegeven aangepaste kenmerken.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>"
  remarks: "Objecten die worden geretourneerd door deze methode zijn niet voltooid <xref:System.Reflection.PropertyInfo>objecten en mag alleen worden gebruikt in de context van de <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>methode.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> </xref:System.Reflection.PropertyInfo>"
  syntax:
    content: protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func<object,object> getter, Action<object,object> setter, System.Collections.Generic.IEnumerable<Attribute> propertyCustomAttributes, System.Collections.Generic.IEnumerable<Attribute> getterCustomAttributes, System.Collections.Generic.IEnumerable<Attribute> setterCustomAttributes);
    parameters:
    - id: propertyType
      type: System.Type
      description: "Het type van de eigenschap maken."
    - id: name
      type: System.String
      description: "De naam van de eigenschap maken."
    - id: getter
      type: System.Func{System.Object,System.Object}
      description: "Een object met de eigenschap <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
    - id: setter
      type: System.Action{System.Object,System.Object}
      description: "Een object met de eigenschap <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
    - id: propertyCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "Een verzameling van aangepaste kenmerken toe te passen aan de eigenschap."
    - id: getterCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "Een verzameling van aangepaste kenmerken toe te passen aan de eigenschap <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
    - id: setterCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "Een verzameling van aangepaste kenmerken toe te passen aan de eigenschap <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
    return:
      type: System.Reflection.PropertyInfo
      description: "Een object dat de eigenschap vertegenwoordigt."
  overload: System.Reflection.Context.CustomReflectionContext.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Wanneer in een afgeleide klasse genegeerd, biedt een lijst met aangepaste kenmerken voor het opgegeven lid, zoals wordt weergegeven in deze reflectiecontext."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable<object> declaredAttributes);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "Het lid waarvan de aangepaste kenmerken worden geretourneerd."
    - id: declaredAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "Een verzameling van de kenmerken van het lid in de huidige context."
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "Een verzameling die de aangepaste kenmerken van het opgegeven lid in deze reflectiecontext vertegenwoordigt."
  overload: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Wanneer in een afgeleide klasse genegeerd, biedt een lijst met aangepaste kenmerken voor de opgegeven parameter, zoals wordt weergegeven in deze reflectiecontext."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable<object> declaredAttributes);
    parameters:
    - id: parameter
      type: System.Reflection.ParameterInfo
      description: "De parameter waarvan u de aangepaste kenmerken worden geretourneerd."
    - id: declaredAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "Een verzameling van de parameter-kenmerken in de huidige context."
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "Een verzameling die de aangepaste kenmerken van de opgegeven parameter in deze reflectiecontext vertegenwoordigt."
  overload: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  id: MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: MapAssembly(Assembly)
  nameWithType: CustomReflectionContext.MapAssembly(Assembly)
  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(Assembly)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Hiermee haalt de weergave in deze reflectiecontext van een assembly die wordt vertegenwoordigd door een object van een andere reflectiecontext."
  syntax:
    content: public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "De externe weergave van de assembly vertegenwoordigt in deze context."
    return:
      type: System.Reflection.Assembly
      description: "De weergave van de assembly in deze reflectiecontext."
  overload: System.Reflection.Context.CustomReflectionContext.MapAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  id: MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: MapType(TypeInfo)
  nameWithType: CustomReflectionContext.MapType(TypeInfo)
  fullName: System.Reflection.Context.CustomReflectionContext.MapType(TypeInfo)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Hiermee haalt de weergave in deze reflectiecontext van een type dat wordt vertegenwoordigd door een object van een andere reflectiecontext."
  syntax:
    content: public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);
    parameters:
    - id: type
      type: System.Reflection.TypeInfo
      description: "De externe weergave van het type om weer te geven in deze context."
    return:
      type: System.Reflection.TypeInfo
      description: "De weergave van het type in deze reflectiecontext."
  overload: System.Reflection.Context.CustomReflectionContext.MapType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Reflection.ReflectionContext
  isExternal: false
  name: System.Reflection.ReflectionContext
- uid: System.Reflection.Context.CustomReflectionContext.#ctor
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CustomReflectionContext()
  nameWithType: CustomReflectionContext.CustomReflectionContext()
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()
- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CustomReflectionContext(ReflectionContext)
  nameWithType: CustomReflectionContext.CustomReflectionContext(ReflectionContext)
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(ReflectionContext)
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: AddProperties(Type)
  nameWithType: CustomReflectionContext.AddProperties(Type)
  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(Type)
- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<PropertyInfo>
  nameWithType: IEnumerable<PropertyInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Reflection.PropertyInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Object,System.Object}
  parent: System
  isExternal: true
  name: Func<Object,Object>
  nameWithType: Func<Object,Object>
  fullName: System.Func<System.Object,System.Object>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Action{System.Object,System.Object}
  parent: System
  isExternal: true
  name: Action<Object,Object>
  nameWithType: Action<Object,Object>
  fullName: System.Action<System.Object,System.Object>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
- uid: System.Collections.Generic.IEnumerable{System.Attribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Attribute>
  nameWithType: IEnumerable<Attribute>
  fullName: System.Collections.Generic.IEnumerable<System.Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Attribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
- uid: System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapAssembly(Assembly)
  nameWithType: CustomReflectionContext.MapAssembly(Assembly)
  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapType(TypeInfo)
  nameWithType: CustomReflectionContext.MapType(TypeInfo)
  fullName: System.Reflection.Context.CustomReflectionContext.MapType(TypeInfo)
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: true
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Reflection.Context.CustomReflectionContext.#ctor*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CustomReflectionContext
  nameWithType: CustomReflectionContext.CustomReflectionContext
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: AddProperties
  nameWithType: CustomReflectionContext.AddProperties
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CreateProperty
  nameWithType: CustomReflectionContext.CreateProperty
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: GetCustomAttributes
  nameWithType: CustomReflectionContext.GetCustomAttributes
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapAssembly
  nameWithType: CustomReflectionContext.MapAssembly
- uid: System.Reflection.Context.CustomReflectionContext.MapType*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapType
  nameWithType: CustomReflectionContext.MapType
