### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlReader
  id: XamlReader
  children:
  - System.Xaml.XamlReader.#ctor
  - System.Xaml.XamlReader.Close
  - System.Xaml.XamlReader.Dispose(System.Boolean)
  - System.Xaml.XamlReader.IsDisposed
  - System.Xaml.XamlReader.IsEof
  - System.Xaml.XamlReader.Member
  - System.Xaml.XamlReader.Namespace
  - System.Xaml.XamlReader.NodeType
  - System.Xaml.XamlReader.Read
  - System.Xaml.XamlReader.ReadSubtree
  - System.Xaml.XamlReader.SchemaContext
  - System.Xaml.XamlReader.Skip
  - System.Xaml.XamlReader.System#IDisposable#Dispose
  - System.Xaml.XamlReader.Type
  - System.Xaml.XamlReader.Value
  langs:
  - csharp
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
  type: Class
  summary: "Biedt de basisdefinities voor klassen die verbruiken XAML-invoer en XAML knooppunt stromen produceren."
  remarks: "XamlReader is een abstracte klasse en biedt geen implementaties of de definities die het resultaat van een werkende voor alle leden hebben. Leden die u een implementatie in XamlReader hebt worden vermeld in de opmerkingen voor dat dit lid. In het bijzonder heeft XamlReader verschillende abstracte leden die moeten worden geïmplementeerd en verschillende virtuele leden.       Leden van de virtuele, <xref:System.Xaml.XamlReader.ReadSubtree%2A>en <xref:System.Xaml.XamlReader.Skip%2A>elk bieden een standaardimplementatie die geschikt is voor de meeste gevallen.</xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.ReadSubtree%2A> Echter, de <xref:System.Xaml.XamlReader.ReadSubtree%2A>en <xref:System.Xaml.XamlReader.Skip%2A>standaard implementaties zijn afhankelijk van andere verwacht gedrag van de uitvoerende XAML-lezer; in het bijzonder, zijn ze afhankelijk van de <xref:System.Xaml.XamlReader.Read%2A>overschrijven.</xref:System.Xaml.XamlReader.Read%2A> </xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.ReadSubtree%2A> <xref:System.Xaml.XamlReader.Dispose%2A>is ook een virtuele lid dat een standaardimplementatie werkende heeft.</xref:System.Xaml.XamlReader.Dispose%2A>       De volgende twee klassen zijn het meest relevant en praktisch afgeleide klassen in .NET Framework XAML-Services en de assembly System.Xaml:- <xref:System.Xaml.XamlObjectReader>, die een objectgrafiek, zoals de actieve objectgrafiek van een toepassing tijdens de uitvoering wordt gelezen.</xref:System.Xaml.XamlObjectReader>      - <xref:System.Xaml.XamlXmlReader>, welke luidt XAML in de vorm van een XML-bestand met behulp van een algemene <xref:System.Xml.XmlReader>die laadt het bestand als een tussenliggende helper-klasse.</xref:System.Xml.XmlReader> </xref:System.Xaml.XamlXmlReader>       Andere XAML lezers van andere frameworks opnemen <xref:System.Windows.Baml2006.Baml2006Reader>en <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</xref:System.Activities.Debugger.XamlDebuggerXmlReader> </xref:System.Windows.Baml2006.Baml2006Reader>       XamlReader verschilt van [!INCLUDE[TLA#tla_xmldom](~/add/includes/tlasharptla-xmldom-md.md)] en <xref:System.Xml.XmlReader>principes ontwerpen omdat XamlReader beschikt niet over een `Create` methode om te retourneren van onderliggende standaard XAML lezer implementaties.</xref:System.Xml.XmlReader> In plaats daarvan moet u specifieke afgeleide XAML lezer klassen instantiëren door het aanroepen van hun constructors of andere helper-klasse-specifieke API&quot;s.      ## Substructuur lezers voor de meeste, u in de context van bepaalde klassen van de XAML lezer die zijn afgeleid van XamlReader XamlReader-API niet aanroepen. Echter in een bepaalde aanvraag opent u XamlReader API op een praktische XAML reader-exemplaar zijn dat is niet openbaar en geen afgeleide van <xref:System.Xaml.XamlObjectReader>of <xref:System.Xaml.XamlXmlReader>.</xref:System.Xaml.XamlXmlReader> </xref:System.Xaml.XamlObjectReader> In dit geval is bij het aanroepen van <xref:System.Xaml.XamlReader.ReadSubtree%2A>, die een XamlReader-exemplaar geretourneerd.</xref:System.Xaml.XamlReader.ReadSubtree%2A> De standaardimplementatie is de XamlReader die wordt geretourneerd door deze API een interne klasse.       Het XamlReader verkregen voor het lezen van de substructuur geldige acties voor API&quot;s, zoals <xref:System.Xaml.XamlReader.Read%2A>en <xref:System.Xaml.XamlReader.NodeType%2A>, en deze acties zijn gebaseerd op de klasse van de bovenliggende lezer</xref:System.Xaml.XamlReader.NodeType%2A> </xref:System.Xaml.XamlReader.Read%2A> Dit ontwerp kunt de interne klasse voor het bijhouden van het niveau van het frame waarin de substructuur is ingevoerd. De substructuur fungeert XamlReader zorgt ervoor dat als het huidige knooppunt wordt verplaatst buiten de grenzen van de substructuur, de lezer bepaalde substructuur rapporteert de einde van het bestand of `null` op het huidige knooppunt.       Opmerkingen over het gebruik van de lezer substructuur zijn opgenomen in bepaalde XamlReader APIs."
  syntax:
    content: 'public abstract class XamlReader : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.#ctor
  id: '#ctor'
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Xaml.XamlReader.XamlReader()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert de <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> klasse."
  syntax:
    content: protected XamlReader ();
    parameters: []
  overload: System.Xaml.XamlReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Close
  id: Close
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Close()
  nameWithType: XamlReader.Close()
  fullName: System.Xaml.XamlReader.Close()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee sluit u de XAML-knooppuntstroom."
  remarks: "In de basisimplementatie aanroepen sluiten aanroepen <xref:System.Xaml.XamlReader.Dispose%2A>met de `isDisposing` parameter als `true`.</xref:System.Xaml.XamlReader.Dispose%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Xaml.XamlReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XamlReader.Dispose(Boolean)
  fullName: System.Xaml.XamlReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>, en desgewenst de beheerde bronnen vrij."
  remarks: "U moet de basisklasse ophalen aanroepen <xref:System.Xaml.XamlReader.IsDisposed%2A>= `true`.</xref:System.Xaml.XamlReader.IsDisposed%2A>"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van de beheerde bronnen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.IsDisposed
  id: IsDisposed
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
  fullName: System.Xaml.XamlReader.IsDisposed
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Opgehaald of <xref:System.Xaml.XamlReader.Dispose*>is aangeroepen.</xref:System.Xaml.XamlReader.Dispose*>"
  syntax:
    content: protected bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <xref:System.Xaml.XamlReader.Dispose*>is aangeroepen, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.XamlReader.Dispose*>"
  overload: System.Xaml.XamlReader.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.IsEof
  id: IsEof
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: IsEof
  nameWithType: XamlReader.IsEof
  fullName: System.Xaml.XamlReader.IsEof
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer in een afgeleide klasse geïmplementeerd, krijgt een waarde die rapporten of de positie van de lezer aan het einde van bestand is."
  remarks: "De substructuur lezers kunnen IsEof, met gedrag die overeenkomt met de grenzen van de ingevoerde substructuur correct aanroepen. Zie voor meer informatie de sectie &quot;Substructuur lezers&quot; in <xref:System.Xaml.XamlReader>, of Raadpleeg <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract bool IsEof { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u de positie op de conceptuele einde van bestand van de XAML-knooppuntstroom; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.IsEof*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Member
  id: Member
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Member
  nameWithType: XamlReader.Member
  fullName: System.Xaml.XamlReader.Member
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer in een afgeleide klasse geïmplementeerd, krijgt u het huidige lid in op de positie lezer als de positie van de lezer zich op een <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>."
  remarks: "Substructuur lezers kunnen lid, aanroepen met gedrag beperkingen. Zie voor meer informatie de sectie &quot;Substructuur lezers&quot; in <xref:System.Xaml.XamlReader>, of Raadpleeg <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlMember Member { get; }
    return:
      type: System.Xaml.XamlMember
      description: "Het huidige lid; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als de positie van de lezer niet op een lid is."
  overload: System.Xaml.XamlReader.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Namespace
  id: Namespace
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Namespace
  nameWithType: XamlReader.Namespace
  fullName: System.Xaml.XamlReader.Namespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer in een afgeleide klasse geïmplementeerd, krijgt de XAML-naamruimte-informatie van het huidige knooppunt."
  remarks: "Het ontwerp van deze API is om te retourneren van een niet-null-resultaat alleen als het <xref:System.Xaml.XamlReader.NodeType%2A>is van het huidige knooppunt <xref:System.Xaml.XamlNodeType>.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlReader.NodeType%2A> De eigenschap wordt niet gerapporteerd voor de XAML-naamruimte die van toepassing op objecten of leden in een algemeen bereik zin zoals geïnterpreteerd in de context van een XAML-schema. Uw toepassing moet een manier bieden waarmee cache-informatie voor de fungeert XAML-naamruimte zoals deze passeert XAML-knooppunten, als u deze informatie op een manier dan hoe de XAML-schemacontext deze aan een schrijver rapporteert. Zie<xref:System.Xaml.XamlXmlReader.Namespace%2A> voor opmerkingen bij de implementatie van de referentie.</xref:System.Xaml.XamlXmlReader.Namespace%2A>"
  syntax:
    content: public abstract System.Xaml.NamespaceDeclaration Namespace { get; }
    return:
      type: System.Xaml.NamespaceDeclaration
      description: "De XAML-naamruimte informatie, indien deze beschikbaar is. anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.NodeType
  id: NodeType
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: NodeType
  nameWithType: XamlReader.NodeType
  fullName: System.Xaml.XamlReader.NodeType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer in een afgeleide klasse geïmplementeerd, krijgt het type van het huidige knooppunt."
  remarks: "Substructuur lezers kunnen NodeType, aanroepen met gedrag beperkingen. Zie voor meer informatie de sectie &quot;Substructuur lezers&quot; in <xref:System.Xaml.XamlReader>, of Raadpleeg <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlNodeType NodeType { get; }
    return:
      type: System.Xaml.XamlNodeType
      description: "Een waarde van de <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> opsomming."
  overload: System.Xaml.XamlReader.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Read
  id: Read
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Read()
  nameWithType: XamlReader.Read()
  fullName: System.Xaml.XamlReader.Read()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer een geïmplementeerd in een afgeleide klasse, biedt het volgende XAML-knooppunt van de bron, als een knooppunt beschikbaar is."
  remarks: "Substructuur lezers kunnen lezen, met beperkingen gedrag aanroepen. Zie voor meer informatie de sectie &quot;Substructuur lezers&quot; in <xref:System.Xaml.XamlReader>, of Raadpleeg <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Indien een knooppunt beschikbaar is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.ReadSubtree
  id: ReadSubtree
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: ReadSubtree()
  nameWithType: XamlReader.ReadSubtree()
  fullName: System.Xaml.XamlReader.ReadSubtree()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> dat is gebaseerd op de huidige <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>, waarbij de geretourneerde <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> wordt gebruikt voor een substructuur van de structuur van XAML knooppunt doorlopen."
  remarks: "Deze methode heeft een standaardimplementatie en retourneert een geldige <xref:System.Xaml.XamlReader>.</xref:System.Xaml.XamlReader> De geretourneerde <xref:System.Xaml.XamlReader>is een interne klasse die bepaalde beperkt <xref:System.Xaml.XamlReader>Acties.</xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader> De beperkingen zijn consistent doel te lezen alleen een dimensioned substructuur van een grotere bron voor de verzameling van een XAML-knooppunten en einde van het bestand retourneren of `null` op het huidige knooppunt wanneer de substructuur is afgesloten.       In het algemeen moet u het huidige knooppunt van de eerste controleren <xref:System.Xaml.XamlReader.Read%2A>om te bepalen of u een lezer substructuur moet.</xref:System.Xaml.XamlReader.Read%2A> Hoe u dit selectievakje inschakelt, mogelijk implementatie-specifieke; Vermijd echter meerdere substructuur lezers voor elke substructuur maken. Bovendien voorkomen aanroepen van een lezer substructuur voor bepaalde gevallen knooppunt (bijvoorbeeld voor <xref:System.Xaml.XamlNodeType>) die geen een substructuur van knooppunten kan bevatten.</xref:System.Xaml.XamlNodeType>       Nadat u een lezer substructuur verkregen, moet u aanroepen <xref:System.Xaml.XamlReader.Read%2A>op het verkrijgen van een huidige knooppunt (of bel <xref:System.Xaml.XamlReader.Skip%2A>verkrijgen van een knooppunt van de volgende).</xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.Read%2A> U bent niet automatisch ophalen de positie van een eerste knooppunt uit de lezer substructuur wanneer u deze maakt.       De lezer die u verkrijgen door het aanroepen van ReadSubtree van de standaardimplementatie van deze is een interne klasse. De interne klasse wordt het gedrag op basis van de <xref:System.Xaml.XamlReader>implementatie die wordt gebruikt wanneer ReadSubtree wordt aangeroepen.</xref:System.Xaml.XamlReader> Het doel van de interne klasse is inpakken van de <xref:System.Xaml.XamlReader.Read%2A>en het gedrag van de algemene traversal.</xref:System.Xaml.XamlReader.Read%2A> Het transport blijft in de beoogde substructuur door het bijhouden van <xref:System.Xaml.XamlNodeType>/<xref:System.Xaml.XamlNodeType> paren of <xref:System.Xaml.XamlNodeType>/<xref:System.Xaml.XamlNodeType> paren.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> Deze ook correct retourneert `false` voor <xref:System.Xaml.XamlReader.Read%2A>en `true` voor <xref:System.Xaml.XamlReader.IsEof%2A>wanneer de lezer is aan het einde van de substructuur, zoals gedefinieerd door het invoerpunt.</xref:System.Xaml.XamlReader.IsEof%2A> </xref:System.Xaml.XamlReader.Read%2A> In het algemeen kunt u wordt ervan uitgegaan dat elke <xref:System.Xaml.XamlReader>API u vanuit een substructuur lezer aanroept heeft de dezelfde implementatie als de algemene <xref:System.Xaml.XamlReader>, met uitzondering van het begrenzingsvak gedrag transport.</xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader>       Er is echter ReadSubtree virtuele. Daarom een specifieke <xref:System.Xaml.XamlReader>implementatie kan bieden gedrag die van afwijkt de <xref:System.Xaml.XamlReader>gedrag van interne wrapper; en een <xref:System.Xaml.XamlReader>implementatie kan zelfs substructuur lezer functionaliteit uitschakelen door te retourneren <xref:System.NotImplementedException>of andere uitzonderingen.</xref:System.NotImplementedException> </xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public virtual System.Xaml.XamlReader ReadSubtree ();
    parameters: []
    return:
      type: System.Xaml.XamlReader
      description: "Een nieuwe XAML lezer exemplaar voor de substructuur."
  overload: System.Xaml.XamlReader.ReadSubtree*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
  fullName: System.Xaml.XamlReader.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer een geïmplementeerd in een afgeleide klasse, haalt een object dat contextinformatie XAML-schema voor de gegevensset."
  syntax:
    content: public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "Een object dat contextinformatie XAML-schema voor de informatie is ingesteld."
  overload: System.Xaml.XamlReader.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Skip
  id: Skip
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Skip()
  nameWithType: XamlReader.Skip()
  fullName: System.Xaml.XamlReader.Skip()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Slaat het huidige knooppunt en de positie van de lezer verplaatst naar het volgende knooppunt."
  remarks: "Eenmaal is overgeslagen, <xref:System.Xaml.XamlReader.Read%2A>wordt aangeroepen door de standaardwaarde Skip-implementatie.</xref:System.Xaml.XamlReader.Read%2A> U doorgaans niet aanroepen overslaan en <xref:System.Xaml.XamlReader.Read%2A>in de reeks.</xref:System.Xaml.XamlReader.Read%2A>       In de implementatie van overslaan standaard verschillende acties worden uitgevoerd, afhankelijk van welke <xref:System.Xaml.XamlReader.NodeType%2A>de positie van de lezer is momenteel ingeschakeld.</xref:System.Xaml.XamlReader.NodeType%2A> Als de positie van de lezer is momenteel aanwezig is op een <xref:System.Xaml.XamlNodeType>of <xref:System.Xaml.XamlNodeType>, lid of het object wordt overgeslagen.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> Voor andere <xref:System.Xaml.XamlReader.NodeType%2A>waarden, wordt er geen actie ondernomen dan aanroepen <xref:System.Xaml.XamlReader.Read%2A>vanaf de huidige positie.</xref:System.Xaml.XamlReader.Read%2A> </xref:System.Xaml.XamlReader.NodeType%2A>       Substructuur lezers kunnen overslaan, aanroepen met gedrag beperkingen. Zie voor meer informatie de sectie &quot;Substructuur lezers&quot; in <xref:System.Xaml.XamlReader>, of Raadpleeg <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>       Het gedrag van de boomstructuur knooppunt van overslaan is gebaseerd op de equivalente XML <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>.</xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName> Op basis van de <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>gedrag equivalentie, overslaan slaat het knooppunt en de substructuur, niet alleen het knooppunt één vermelding.</xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>"
  syntax:
    content: public virtual void Skip ();
    parameters: []
  overload: System.Xaml.XamlReader.Skip*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: XamlReader.System.IDisposable.Dispose()
  fullName: System.Xaml.XamlReader.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Versies van alle resources die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> klasse."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Xaml.XamlReader.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Type
  id: Type
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Type
  nameWithType: XamlReader.Type
  fullName: System.Xaml.XamlReader.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer in een afgeleide klasse geïmplementeerd, krijgt de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> van het huidige knooppunt."
  remarks: "Substructuur lezers kunnen Type gedrag beperkingen aanroepen. Zie voor meer informatie de sectie &quot;Substructuur lezers&quot; in <xref:System.Xaml.XamlReader>, of Raadpleeg <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "De <xref href=&quot;System.Xaml.XamlType&quot;> </xref> van het huidige knooppunt; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als de huidige positie van de lezer niet op een object is."
  overload: System.Xaml.XamlReader.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Value
  id: Value
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Value
  nameWithType: XamlReader.Value
  fullName: System.Xaml.XamlReader.Value
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer in een afgeleide klasse geïmplementeerd, krijgt de waarde van het huidige knooppunt."
  syntax:
    content: public abstract object Value { get; }
    return:
      type: System.Object
      description: "De waarde van het huidige knooppunt. of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als de huidige positie van de lezer is niet op een <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> knooppunttype."
  overload: System.Xaml.XamlReader.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xaml.XamlReader.#ctor
  parent: System.Xaml.XamlReader
  isExternal: false
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Xaml.XamlReader.XamlReader()
- uid: System.Xaml.XamlReader.Close
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Close()
  nameWithType: XamlReader.Close()
  fullName: System.Xaml.XamlReader.Close()
- uid: System.Xaml.XamlReader.Dispose(System.Boolean)
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XamlReader.Dispose(Boolean)
  fullName: System.Xaml.XamlReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlReader.IsDisposed
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
  fullName: System.Xaml.XamlReader.IsDisposed
- uid: System.Xaml.XamlReader.IsEof
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsEof
  nameWithType: XamlReader.IsEof
  fullName: System.Xaml.XamlReader.IsEof
- uid: System.Xaml.XamlReader.Member
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Member
  nameWithType: XamlReader.Member
  fullName: System.Xaml.XamlReader.Member
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlReader.Namespace
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Namespace
  nameWithType: XamlReader.Namespace
  fullName: System.Xaml.XamlReader.Namespace
- uid: System.Xaml.NamespaceDeclaration
  parent: System.Xaml
  isExternal: false
  name: NamespaceDeclaration
  nameWithType: NamespaceDeclaration
  fullName: System.Xaml.NamespaceDeclaration
- uid: System.Xaml.XamlReader.NodeType
  parent: System.Xaml.XamlReader
  isExternal: false
  name: NodeType
  nameWithType: XamlReader.NodeType
  fullName: System.Xaml.XamlReader.NodeType
- uid: System.Xaml.XamlNodeType
  parent: System.Xaml
  isExternal: false
  name: XamlNodeType
  nameWithType: XamlNodeType
  fullName: System.Xaml.XamlNodeType
- uid: System.Xaml.XamlReader.Read
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Read()
  nameWithType: XamlReader.Read()
  fullName: System.Xaml.XamlReader.Read()
- uid: System.Xaml.XamlReader.ReadSubtree
  parent: System.Xaml.XamlReader
  isExternal: false
  name: ReadSubtree()
  nameWithType: XamlReader.ReadSubtree()
  fullName: System.Xaml.XamlReader.ReadSubtree()
- uid: System.Xaml.XamlReader
  parent: System.Xaml
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
- uid: System.Xaml.XamlReader.SchemaContext
  parent: System.Xaml.XamlReader
  isExternal: false
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
  fullName: System.Xaml.XamlReader.SchemaContext
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlReader.Skip
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Skip()
  nameWithType: XamlReader.Skip()
  fullName: System.Xaml.XamlReader.Skip()
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose
  parent: System.Xaml.XamlReader
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: XamlReader.System.IDisposable.Dispose()
  fullName: System.Xaml.XamlReader.System.IDisposable.Dispose()
- uid: System.Xaml.XamlReader.Type
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Type
  nameWithType: XamlReader.Type
  fullName: System.Xaml.XamlReader.Type
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlReader.Value
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Value
  nameWithType: XamlReader.Value
  fullName: System.Xaml.XamlReader.Value
- uid: System.Xaml.XamlReader.#ctor*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader.XamlReader
- uid: System.Xaml.XamlReader.Close*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Close
  nameWithType: XamlReader.Close
- uid: System.Xaml.XamlReader.Dispose*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Dispose
  nameWithType: XamlReader.Dispose
- uid: System.Xaml.XamlReader.IsDisposed*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
- uid: System.Xaml.XamlReader.IsEof*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsEof
  nameWithType: XamlReader.IsEof
- uid: System.Xaml.XamlReader.Member*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Member
  nameWithType: XamlReader.Member
- uid: System.Xaml.XamlReader.Namespace*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Namespace
  nameWithType: XamlReader.Namespace
- uid: System.Xaml.XamlReader.NodeType*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: NodeType
  nameWithType: XamlReader.NodeType
- uid: System.Xaml.XamlReader.Read*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Read
  nameWithType: XamlReader.Read
- uid: System.Xaml.XamlReader.ReadSubtree*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: ReadSubtree
  nameWithType: XamlReader.ReadSubtree
- uid: System.Xaml.XamlReader.SchemaContext*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
- uid: System.Xaml.XamlReader.Skip*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Skip
  nameWithType: XamlReader.Skip
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: XamlReader.System.IDisposable.Dispose
- uid: System.Xaml.XamlReader.Type*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Type
  nameWithType: XamlReader.Type
- uid: System.Xaml.XamlReader.Value*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Value
  nameWithType: XamlReader.Value
