### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  id: SqlPersistenceProviderFactory
  children:
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  langs:
  - csharp
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  type: Class
  summary: "Een systeem geleverde <xref href=&quot;System.ServiceModel.Persistence.PersistenceProviderFactory&quot;> </xref> implementatie gebruikt voor het maken een <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> -exemplaar dat gebruikmaakt van een SQL-database voor het opslaan van gegevens van de gebruikersstatus persistente service."
  remarks: "De klasse SqlPersistenceProviderFactory vertegenwoordigt een klasse factory voor een volledig functionele, duurzaam service persistentieprovider. U kunt deze provider systeem geleverde behouden op te halen statusinformatie over een duurzame [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service.       Naast de persistentie, de provider die is gemaakt door de SqlPersistenceProviderFactory klasse implementeert vergrendeling van service status gegevensrecords door overgenomen van de abstracte <xref:System.ServiceModel.Persistence.LockingPersistenceProvider>klasse.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider>  Methoden die interactie met hebben permanente gegevens (zoals <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A>of <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) hebben een optionele parameter (`lockInstance`) waarmee wordt gedefinieerd of vergrendelingen op de betrokken gegevens worden vrijgegeven of bijgehouden.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A> </xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A>      > [!NOTE] > <xref:System.ServiceModel.Persistence.PersistenceException>uitzonderingen worden veroorzaakt door SqlPersistenceProviderFactory hebben geen hun uitzonderingsdetails standaard verborgen.</xref:System.ServiceModel.Persistence.PersistenceException> Ter bescherming tegen beveiligingsproblemen, kunnen deze gegevens worden verborgen door in te stellen <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A>naar `false`.</xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A>      > [!NOTE] > De SQL-persistentieprovider opgeslagen en gegevens ophaalt uit een SQL Server-database. De host moet een beveiligde SQL Server-omgeving te beschermen tegen kwaadwillende personen lezen/schrijven toegang krijgen tot de status van het exemplaar in de database of op de kabel tussen de toepassing en de database maken."
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProviderFactory
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> klasse, geconfigureerd met de opgegeven parameter-verzameling."
  remarks: "Deze constructor kan worden gebruikt om op te geven willekeurig `lockTimeout`, `connectionString`, en `serializeAsText` zonder op te geven van de andere parameters zoals vereist door de andere constructors (bijvoorbeeld om op te geven de `connectionString` en `lockTimeout` parameters zonder op te geven de `serializeAsText` parameter.)"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.  \n  \n [!code-cs[SqlPersistenceProviderFactory#3](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#3)]"
  syntax:
    content: public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "De verzameling parameters die worden gebruikt door de nieuwe persistentieproviderfactory. Geldige parameters zijn <xref uid=&quot;langword_csharp_lockTimeout&quot; name=&quot;lockTimeout&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>, en <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> klasse, geconfigureerd met de opgegeven verbindingsreeks."
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.  \n  \n [!code-cs[SqlPersistenceProviderFactory#2](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#2)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "De verbindingsparameters voor het nieuwe exemplaar van de persistentie-provider."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String,Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> klasse, geconfigureerd met de opgegeven verbindingsreeks en <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;> </xref> parameters."
  remarks: "De standaardwaarde voor `serializeAsText` is `false`, wat aangeeft dat deze informatie persistentie wordt geserialiseerd als binaire gegevens."
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-cs[SqlPersistenceProviderFactory#1](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#1)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);
    parameters:
    - id: connectionString
      type: System.String
      description: "De verbindingsparameters voor het nieuwe exemplaar van de persistentie-provider."
    - id: serializeAsText
      type: System.Boolean
      description: "Hiermee geeft u op of de gegevens wordt geserialiseerd als tekst in plaats van binair."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Boolean,System.TimeSpan)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> klasse, geconfigureerd met de opgegeven verbindingsreeks <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;> </xref>, en <xref uid=&quot;langword_csharp_lockTimeout&quot; name=&quot;lockTimeout&quot; href=&quot;&quot;> </xref> parameters."
  remarks: "De standaardwaarde voor `serializeAsText` is `false`, wat aangeeft dat deze informatie persistentie wordt geserialiseerd als binaire gegevens.       De standaardwaarde voor `lockTimeout` is `TimeSpan.Zero`, wat aangeeft dat vergrendelen wordt niet gebruikt. Als `TimeSpan.MaxValue` wordt gebruikt, en vervolgens vergrendelingen voor onbepaalde tijd worden bewaard."
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-cs[SqlPersistenceProviderFactory#0](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#0)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);
    parameters:
    - id: connectionString
      type: System.String
      description: "De verbindingsparameters voor het nieuwe persistentie provider factory-exemplaar."
    - id: serializeAsText
      type: System.Boolean
      description: "Hiermee geeft u op of de gegevens wordt geserialiseerd als tekst in plaats van binair."
    - id: lockTimeout
      type: System.TimeSpan
      description: "De time-out voor de eigenaar van de vergrendeling. Vergrendelde exemplaren zijn automatisch gedeblokkeerd na deze periode. Er is een time-out van <xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;> </xref> geeft aan dat er geen vergrendeling wordt gebruikt."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  id: ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee wordt de verbindingsparameters voor persistentie providerexemplaren gemaakt met deze factory."
  remarks: ''
  example:
  - "The following code example shows how to set and access the `ConnectionString` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#4](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#4)]"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "De verbindingsparameters voor persistentie providerexemplaren gemaakt met deze factory."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  id: CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initialiseert een nieuw <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> exemplaar die gebruikmaakt van een SQL-database als het persistentie-archief."
  remarks: "De huidige parameters van de gegevensfactory maken maakt gebruik van de persistentieprovider geïnitialiseerd (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, en <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), zelfs als de factory-parameters zijn gewijzigd nadat de persistentieprovider is gemaakt.</xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A> </xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A> </xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>"
  example:
  - "The following code example shows how to execute the `CreateProvider` method. Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.  \n  \n [!code-cs[SqlPersistenceProviderFactory#7](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#7)]"
  syntax:
    content: public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "De unieke id van de persistentieprovider wordt gemaakt."
    return:
      type: System.ServiceModel.Persistence.PersistenceProvider
      description: "Een nieuw gemaakt <xref href=&quot;System.ServiceModel.Persistence.PersistenceProvider&quot;> </xref>."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee haalt u de standaardtime-outwaarde gebruikt wanneer de persistentie-providers die zijn gemaakt met deze factory zijn gesloten."
  remarks: "De standaardwaarde voor de time-out voor sluiten is 15 seconden."
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "De standaardtime-outwaarde."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee haalt u de standaardtime-outwaarde die wordt gebruikt wanneer persistentieprovider wordt geopend."
  remarks: "De standaardwaarde voor de open time-outwaarde is 15 seconden."
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "De standaardtime-outwaarde."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  id: LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "De time-out voor vergrendeling eigendom gebruikt door de persistentie providerexemplaren gemaakt door dit exemplaar. Vergrendelde exemplaren zijn automatisch gedeblokkeerd na deze periode."
  remarks: "Er is een time-out van `TimeSpan.Zero` geeft aan dat er geen vergrendeling wordt gebruikt."
  example:
  - "The following code example shows how to access the `LockTimeout` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#5](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#5)]"
  syntax:
    content: public TimeSpan LockTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "De time-outwaarde voor de eigenaar van de vergrendeling."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee geeft u de fase afbreken."
  remarks: '`OnAbort`wordt geactiveerd wanneer de ServiceHost is onverwacht afgesloten en actieve opdrachten die momenteel wordt verwerkt, worden gesloten.'
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee geeft u het begin van de fase sluiten."
  remarks: "De sluiten fase treedt op wanneer de service is gestopt."
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De periode waarna de persistentieprovider deze poging afgebroken."
    - id: callback
      type: System.AsyncCallback
      description: "De methode die moet worden aangeroepen wanneer de bewerking is voltooid."
    - id: state
      type: System.Object
      description: "Een gebruiker gemaakte object dat wordt onderscheiden van deze asynchrone bewerking van andere bewerkingen."
    return:
      type: System.IAsyncResult
      description: "De status van de aanroep van de asynchrone methode OnBeginClose."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee geeft u het begin van de Open-fase."
  remarks: "De Open fase treedt op wanneer de service is geopend."
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De periode waarna de persistentieprovider deze poging afgebroken."
    - id: callback
      type: System.AsyncCallback
      description: "De methode die moet worden aangeroepen wanneer de bewerking is voltooid."
    - id: state
      type: System.Object
      description: "Een gebruiker gemaakte object dat wordt onderscheiden van deze asynchrone bewerking van andere bewerkingen."
    return:
      type: System.IAsyncResult
      description: "De status van de aanroep van de asynchrone methode OnBeginOpen."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee geeft u de fase sluiten."
  remarks: "De sluiten fase treedt op wanneer de service is gestopt."
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De periode waarna de persistentieprovider deze poging afgebroken."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee geeft u het einde van de fase sluiten."
  remarks: "De sluiten fase treedt op wanneer de service is gestopt."
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Een verwijzing naar het resultaat van de bewerking."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee geeft u het einde van de Open-fase."
  remarks: "De Open fase treedt op wanneer de service is geopend."
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Een verwijzing naar het resultaat van de bewerking."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee geeft u de Open-fase."
  remarks: "De Open fase treedt op wanneer de service is geopend."
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De periode waarna de persistentieprovider deze poging afgebroken."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  id: SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Hiermee geeft u op of de gegevens wordt geserialiseerd als tekst in plaats van binaire persistentie-providers die zijn gemaakt met deze factory."
  remarks: "De standaardwaarde voor `serializeAsText` is `false`, wat aangeeft dat deze informatie persistentie wordt geserialiseerd als binaire gegevens."
  example:
  - "The following code example shows how to access the `SerializeAsText` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#6](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#6)]"
  syntax:
    content: public bool SerializeAsText { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de service-informatie wordt geserialiseerd als tekst. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Persistence.PersistenceProviderFactory
  isExternal: false
  name: System.ServiceModel.Persistence.PersistenceProviderFactory
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String,Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)
- uid: System.ServiceModel.Persistence.PersistenceProvider
  parent: System.ServiceModel.Persistence
  isExternal: false
  name: PersistenceProvider
  nameWithType: PersistenceProvider
  fullName: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider
  nameWithType: SqlPersistenceProviderFactory.CreateProvider
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort
  nameWithType: SqlPersistenceProviderFactory.OnAbort
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose
  nameWithType: SqlPersistenceProviderFactory.OnClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose
  nameWithType: SqlPersistenceProviderFactory.OnEndClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen
  nameWithType: SqlPersistenceProviderFactory.OnOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
