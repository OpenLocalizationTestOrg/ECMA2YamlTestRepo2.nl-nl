### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  id: NameObjectCollectionBase
  children:
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: NameObjectCollectionBase
  nameWithType: NameObjectCollectionBase
  fullName: System.Collections.Specialized.NameObjectCollectionBase
  type: Class
  summary: "Biedt de <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> basisklasse voor een verzameling die is gekoppeld <xref:System.String>sleutels en <xref:System.Object>waarden die kunnen worden geopend met de sleutel of met de index.</xref:System.Object> </xref:System.String>"
  remarks: "De onderliggende structuur voor deze klasse is een hashtabel.       Elk element is een sleutel-waardepaar.       De capaciteit van een NameObjectCollectionBase is het aantal elementen die de NameObjectCollectionBase kan bevatten. Wanneer elementen worden toegevoegd aan een NameObjectCollectionBase, de capaciteit automatisch wordt verhoogd door Hertoewijzing zoals wordt vereist.       De hash-codeprovider verdeelt hash-codes voor sleutels in het NameObjectCollectionBase-exemplaar. De standaardprovider voor de hash-code is de <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. De standaardvergelijkingsfunctie is de <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Deze klasse maakt gebruik van cultuur-gevoelige tekenreeksvergelijkingen in .NET Framework versie 1.0. In .NET Framework versie 1.1 of hoger, deze klasse gebruikt echter <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>bij het vergelijken van tekenreeksen.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> Zie voor meer informatie over de invloed van cultuur op vergelijkingen en sorteren [-cultuurgebonden tekenreeksbewerkingen uitvoeren](~/add/includes/ajax-current-ext-md.md).       `null`is toegestaan als een sleutel of een waarde.      > [!CAUTION] > De <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>methode geen onderscheid gemaakt tussen `null` die wordt geretourneerd omdat de opgegeven sleutel is niet gevonden en `null` die wordt geretourneerd omdat de waarde die is gekoppeld aan de sleutel `null`.</xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>"
  example:
  - "The following code example shows how to implement and use the NameObjectCollectionBase class.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/cpp/t-system.collections.spe_0_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/csharp/t-system.collections.spe_0_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#1](~/add/codesnippet/visualbasic/t-system.collections.spe_0_1.vb)]"
  syntax:
    content: 'public abstract class NameObjectCollectionBase : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase()
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasse die is leeg."
  remarks: "De capaciteit van een <xref:System.Collections.Specialized.NameObjectCollectionBase>is het aantal elementen die de <xref:System.Collections.Specialized.NameObjectCollectionBase>kan bevatten.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Wanneer elementen worden toegevoegd aan een <xref:System.Collections.Specialized.NameObjectCollectionBase>, de capaciteit automatisch verhoogd zoals wordt vereist door het opnieuw toewijzen van de interne matrix.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Als de grootte van de verzameling kan worden geschat, voorkomen geven de begincapaciteit moet een aantal formaatwijzigingen bij het toevoegen van elementen in de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase> uitvoeren       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Specialized.NameObjectCollectionBase>exemplaar.</xref:System.Collections.Specialized.NameObjectCollectionBase> De standaardprovider voor de hash-code is de <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. De standaardvergelijkingsfunctie is de <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Deze constructor is een bewerking O(1)."
  syntax:
    content: protected NameObjectCollectionBase ();
    parameters: []
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasse die leeg is, heeft de eerste standaardcapaciteit en gebruikmaakt van de opgegeven <xref:System.Collections.IEqualityComparer>object.</xref:System.Collections.IEqualityComparer>"
  remarks: "De capaciteit van een <xref:System.Collections.Specialized.NameObjectCollectionBase>-object is het aantal elementen die de <xref:System.Collections.Specialized.NameObjectCollectionBase>kan bevatten.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Wanneer elementen worden toegevoegd aan een <xref:System.Collections.Specialized.NameObjectCollectionBase>, de capaciteit automatisch verhoogd zoals wordt vereist door het opnieuw toewijzen van de interne matrix.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Als de grootte van de verzameling kan worden geschat, voorkomen geven de begincapaciteit moet een aantal formaatwijzigingen bij het toevoegen van elementen in de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase> uitvoeren       De <xref:System.Collections.IEqualityComparer>object combineert de vergelijkingsfunctie en de hash-code-provider.</xref:System.Collections.IEqualityComparer>  De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>  De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn.       Deze constructor is een bewerking O(1)."
  syntax:
    content: protected NameObjectCollectionBase (System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "De <xref:System.Collections.IEqualityComparer>object gebruiken om te bepalen of er twee sleutels gelijk zijn en voor het genereren van hash-codes voor de sleutels in de verzameling.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(Int32)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasse die leeg is, heeft de opgegeven capaciteit van de eerste en de standaardprovider voor de hash-code en de standaardvergelijkingsfunctie gebruikt."
  remarks: "De capaciteit van een <xref:System.Collections.Specialized.NameObjectCollectionBase>is het aantal elementen die de <xref:System.Collections.Specialized.NameObjectCollectionBase>kan bevatten.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Wanneer elementen worden toegevoegd aan een <xref:System.Collections.Specialized.NameObjectCollectionBase>, de capaciteit automatisch verhoogd zoals wordt vereist door het opnieuw toewijzen van de interne matrix.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Als de grootte van de verzameling kan worden geschat, voorkomen geven de begincapaciteit moet een aantal formaatwijzigingen bij het toevoegen van elementen in de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase> uitvoeren       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Specialized.NameObjectCollectionBase>exemplaar.</xref:System.Collections.Specialized.NameObjectCollectionBase> De standaardprovider voor de hash-code is de <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. De standaardvergelijkingsfunctie is de <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is `capacity`."
  syntax:
    content: protected NameObjectCollectionBase (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Het geschatte aantal vermeldingen die het <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar in eerste instantie kan bevatten."
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>is kleiner dan nul."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasse die leeg is, heeft de eerste standaardcapaciteit en maakt gebruik van de provider van de opgegeven hash-code en de opgegeven vergelijkingsfunctie."
  remarks: "De capaciteit van een <xref:System.Collections.Specialized.NameObjectCollectionBase>is het aantal elementen die de <xref:System.Collections.Specialized.NameObjectCollectionBase>kan bevatten.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Wanneer elementen worden toegevoegd aan een <xref:System.Collections.Specialized.NameObjectCollectionBase>, de capaciteit automatisch verhoogd zoals wordt vereist door het opnieuw toewijzen van de interne matrix.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Als de grootte van de verzameling kan worden geschat, voorkomen geven de begincapaciteit moet een aantal formaatwijzigingen bij het toevoegen van elementen in de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase> uitvoeren       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Specialized.NameObjectCollectionBase>exemplaar.</xref:System.Collections.Specialized.NameObjectCollectionBase> De standaardprovider voor de hash-code is de <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. De standaardvergelijkingsfunctie is de <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Deze constructor is een bewerking O(1)."
  syntax:
    content: protected NameObjectCollectionBase (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "De <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> die levert de hash-codes voor alle sleutels in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
    - id: comparer
      type: System.Collections.IComparer
      description: "De <xref:System.Collections.IComparer>gebruiken om te bepalen of er twee sleutels gelijk zijn.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(Int32,IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasse die leeg is, heeft de opgegeven begincapaciteit en gebruikmaakt van de opgegeven <xref:System.Collections.IEqualityComparer>object.</xref:System.Collections.IEqualityComparer>"
  remarks: "De capaciteit van een <xref:System.Collections.Specialized.NameObjectCollectionBase>-object is het aantal elementen die de <xref:System.Collections.Specialized.NameObjectCollectionBase>kan bevatten.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Wanneer elementen worden toegevoegd aan een <xref:System.Collections.Specialized.NameObjectCollectionBase>, de capaciteit automatisch verhoogd zoals wordt vereist door het opnieuw toewijzen van de interne matrix.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Als de grootte van de verzameling kan worden geschat, voorkomen geven de begincapaciteit moet een aantal formaatwijzigingen bij het toevoegen van elementen in de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase> uitvoeren       De <xref:System.Collections.IEqualityComparer>object combineert de vergelijkingsfunctie en de hash-code-provider.</xref:System.Collections.IEqualityComparer>  De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>  De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn.       Deze constructor is een O (`n`)-bewerking, waarbij `n` is de `capacity` parameter."
  syntax:
    content: protected NameObjectCollectionBase (int capacity, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Het geschatte aantal vermeldingen die het <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> -object in eerste instantie kan bevatten."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "De <xref:System.Collections.IEqualityComparer>object gebruiken om te bepalen of er twee sleutels gelijk zijn en voor het genereren van hash-codes voor de sleutels in de verzameling.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>is kleiner dan nul."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasse die kan worden geserialiseerd en gebruikmaakt van de opgegeven <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> en &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt;."
  remarks: "Deze constructor is een bewerking O(1)."
  syntax:
    content: protected NameObjectCollectionBase (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Een <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> -object dat de vereiste voor het serialiseren van de nieuwe informatie bevat <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Een &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt; object met de bron en bestemming van de geserialiseerde stroom die zijn gekoppeld aan de nieuwe <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> klasse die leeg is, heeft de opgegeven begincapaciteit en maakt gebruik van de provider van de opgegeven hash-code en de opgegeven vergelijkingsfunctie."
  remarks: "De capaciteit van een <xref:System.Collections.Specialized.NameObjectCollectionBase>is het aantal elementen die de <xref:System.Collections.Specialized.NameObjectCollectionBase>kan bevatten.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Wanneer elementen worden toegevoegd aan een <xref:System.Collections.Specialized.NameObjectCollectionBase>, de capaciteit automatisch verhoogd zoals wordt vereist door het opnieuw toewijzen van de interne matrix.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Als de grootte van de verzameling kan worden geschat, voorkomen geven de begincapaciteit moet een aantal formaatwijzigingen bij het toevoegen van elementen in de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase> uitvoeren       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Specialized.NameObjectCollectionBase>exemplaar.</xref:System.Collections.Specialized.NameObjectCollectionBase> De standaardprovider voor de hash-code is de <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. De standaardvergelijkingsfunctie is de <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is `capacity`."
  syntax:
    content: protected NameObjectCollectionBase (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Het geschatte aantal vermeldingen die het <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar in eerste instantie kan bevatten."
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "De <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> die levert de hash-codes voor alle sleutels in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
    - id: comparer
      type: System.Collections.IComparer
      description: "De <xref:System.Collections.IComparer>gebruiken om te bepalen of er twee sleutels gelijk zijn.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>is kleiner dan nul."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  id: BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseAdd(String,Object)
  nameWithType: NameObjectCollectionBase.BaseAdd(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Voegt een item met de opgegeven sleutel en waarde in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "Als <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>al gelijk is aan de capaciteit, de capaciteit van de <xref:System.Collections.Specialized.NameObjectCollectionBase>wordt verhoogd met automatisch opnieuw toewijzen van de interne matrix en de bestaande elementen zijn gekopieerd naar de nieuwe matrix voordat het nieuwe element is toegevoegd.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Als <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>is kleiner dan de capaciteit is deze methode een bewerking O(1).</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> Als de capaciteit worden verhoogd moet om ruimte is voor het nieuwe element, deze methode wordt een O (`n`) bewerking, waarbij `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses BaseAdd to create a new <xref:System.Collections.Specialized.NameObjectCollectionBase> with elements from an <xref:System.Collections.IDictionary>.  \n  \n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/visualbasic/08f4bd55-361e-4a55-bdc1-_1.vb)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/cpp/08f4bd55-361e-4a55-bdc1-_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/add/codesnippet/csharp/08f4bd55-361e-4a55-bdc1-_1.cs)]"
  syntax:
    content: protected void BaseAdd (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "De <xref:System.String>sleutel van de vermelding die wordt toegevoegd.</xref:System.String> De sleutel mag <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "De <xref:System.Object>waarde van de vermelding die wordt toegevoegd.</xref:System.Object> De waarde kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  id: BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseClear()
  nameWithType: NameObjectCollectionBase.BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee verwijdert u alle vermeldingen uit de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>is ingesteld op nul en verwijzingen naar andere objecten in de elementen van de verzameling ook worden vrijgegeven.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       Deze methode is een bewerking O(1)."
  example:
  - "The following code example uses BaseClear to remove all elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/csharp/m-system.collections.spe_13_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/visualbasic/m-system.collections.spe_13_1.vb)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/add/codesnippet/cpp/m-system.collections.spe_13_1.cpp)]"
  syntax:
    content: protected void BaseClear ();
    parameters: []
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseClear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGet(Int32)
  nameWithType: NameObjectCollectionBase.BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "De waarde van het item opgehaald bij de opgegeven index van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "Deze methode is een bewerking O(1)."
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/m-system.collections.spe_24_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/m-system.collections.spe_24_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/m-system.collections.spe_24_1.vb)]"
  syntax:
    content: protected object BaseGet (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de waarde om op te halen."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die staat voor de waarde van het item in de opgegeven index.</xref:System.Object>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>valt buiten het geldige bereik van indexen voor de verzameling."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  id: BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGet(String)
  nameWithType: NameObjectCollectionBase.BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "De waarde van het eerste item opgehaald met de opgegeven sleutel uit de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "Als de verzameling meerdere vermeldingen met de opgegeven sleutel bevat, retourneert deze methode alleen de eerste vermelding. Als u de waarden van de volgende vermeldingen met dezelfde sleutel, gebruikt u de enumerator voor de collectie doorlopen en vergelijkt u de sleutels.      > [!CAUTION] > Deze methode retourneert `null` in de volgende gevallen: 1) als de opgegeven sleutel is niet gevonden; en 2) als de opgegeven sleutel is gevonden en de bijbehorende waarde `null`. Deze methode maakt geen onderscheid tussen de twee gevallen.       Deze methode is een bewerking O(1)."
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and BaseGet to get specific keys and values.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/m-system.collections.spe_41_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/m-system.collections.spe_41_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/m-system.collections.spe_41_1.vb)]"
  syntax:
    content: protected object BaseGet (string name);
    parameters:
    - id: name
      type: System.String
      description: "De <xref:System.String>sleutel van het item ophalen.</xref:System.String> De sleutel mag <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de waarde van het eerste item vertegenwoordigt met de opgegeven sleutel als gevonden, anders wordt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetAllKeys()
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retourneert een <xref:System.String>matrix met de sleutels in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar.</xref:System.String>"
  remarks: "Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses BaseGetAllKeys and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> to get an array of the keys or an array of the values.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/csharp/m-system.collections.spe_38_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/cpp/m-system.collections.spe_38_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/visualbasic/m-system.collections.spe_38_1.vb)]"
  syntax:
    content: protected string[] BaseGetAllKeys ();
    parameters: []
    return:
      type: System.String[]
      description: "Een <xref:System.String>matrix met de sleutels in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar.</xref:System.String>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  id: BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetAllValues()
  nameWithType: NameObjectCollectionBase.BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retourneert een <xref:System.Object>matrix met alle waarden in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar.</xref:System.Object>"
  remarks: "Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> and BaseGetAllValues to get an array of the keys or an array of the values.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/csharp/m-system.collections.spe_32_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/cpp/m-system.collections.spe_32_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/add/codesnippet/visualbasic/m-system.collections.spe_32_1.vb)]"
  syntax:
    content: protected object[] BaseGetAllValues ();
    parameters: []
    return:
      type: System.Object[]
      description: "Een <xref:System.Object>matrix met alle waarden in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar.</xref:System.Object>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  id: BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetAllValues(Type)
  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(Type)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retourneert een matrix van het opgegeven type met de waarden in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: protected object[] BaseGetAllValues (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Een <xref:System.Type>die staat voor het type array om terug te keren.</xref:System.Type>"
    return:
      type: System.Object[]
      description: "Een matrix van het opgegeven type met de waarden in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>is geen geldige <xref:System.Type>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseGetKey(Int32)
  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "De sleutel van het item opgehaald bij de opgegeven index van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "Deze methode is een bewerking O(1)."
  example:
  - "The following code example uses BaseGetKey and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/cpp/3cf5a014-1166-4fdc-b41d-_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/csharp/3cf5a014-1166-4fdc-b41d-_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/add/codesnippet/visualbasic/3cf5a014-1166-4fdc-b41d-_1.vb)]"
  syntax:
    content: protected string BaseGetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de sleutel op te halen."
    return:
      type: System.String
      description: "Een <xref:System.String>die staat voor de sleutel van de vermelding in de opgegeven index.</xref:System.String>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>valt buiten het geldige bereik van indexen voor de verzameling."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  id: BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseHasKeys()
  nameWithType: NameObjectCollectionBase.BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Haalt een waarde die aangeeft of de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar bevat items waarvan sleutels niet zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Deze methode is een bewerking O(1)."
  example:
  - "The following code example uses BaseHasKeys to determine if the collection contains keys that are not `null`.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/cpp/m-system.collections.spe_17_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/visualbasic/m-system.collections.spe_17_1.vb)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/add/codesnippet/csharp/m-system.collections.spe_17_1.cs)]"
  syntax:
    content: protected bool BaseHasKeys ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar bevat items waarvan sleutels niet zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  id: BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseRemove(String)
  nameWithType: NameObjectCollectionBase.BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee verwijdert u de vermeldingen met de opgegeven sleutel uit de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "Als de <xref:System.Collections.Specialized.NameObjectCollectionBase>bevat geen element met de opgegeven sleutel de <xref:System.Collections.Specialized.NameObjectCollectionBase>blijft ongewijzigd.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> Er is geen uitzondering is opgetreden.       In verzamelingen van aangrenzende elementen, zoals lijsten, verplaatsen de elementen die achter de verwijderde element omhoog naar de vrijgekomen spot in beslag nemen. Als de verzameling is geïndexeerd, worden de indexen van de elementen die verplaatst worden ook bijgewerkt. Dit gedrag is niet van toepassing op verzamelingen waar elementen conceptueel gezien zijn gegroepeerd in buckets, zoals een hash-tabel.       Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses BaseRemove and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/csharp/6fd86396-bc06-4c0a-8ef5-_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/cpp/6fd86396-bc06-4c0a-8ef5-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/visualbasic/6fd86396-bc06-4c0a-8ef5-_1.vb)]"
  syntax:
    content: protected void BaseRemove (string name);
    parameters:
    - id: name
      type: System.String
      description: "De <xref:System.String>sleutel van de vermeldingen te verwijderen.</xref:System.String> De sleutel mag <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseRemoveAt(Int32)
  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee verwijdert u de vermelding in de opgegeven index van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "In verzamelingen van aangrenzende elementen, zoals lijsten, verplaatsen de elementen die achter de verwijderde element omhoog naar de vrijgekomen spot in beslag nemen. Als de verzameling is geïndexeerd, worden de indexen van de elementen die verplaatst worden ook bijgewerkt. Dit gedrag is niet van toepassing op verzamelingen waar elementen conceptueel gezien zijn gegroepeerd in buckets, zoals een hash-tabel.       Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> and BaseRemoveAt to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.  \n  \n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/csharp/c118a875-5132-4e70-b0e9-_1.cs)]\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/cpp/c118a875-5132-4e70-b0e9-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/add/codesnippet/visualbasic/c118a875-5132-4e70-b0e9-_1.vb)]"
  syntax:
    content: protected void BaseRemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de vermelding te verwijderen."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>valt buiten het geldige bereik van indexen voor de verzameling."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  id: BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseSet(Int32,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(Int32,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee stelt u de waarde van het item in de opgegeven index van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "Deze methode is een bewerking O(1)."
  example:
  - "The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> to set the value of a specific element.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/cpp/2287b31c-3439-4899-9c69-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/visualbasic/2287b31c-3439-4899-9c69-_1.vb)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/csharp/2287b31c-3439-4899-9c69-_1.cs)]"
  syntax:
    content: protected void BaseSet (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de vermelding in te stellen."
    - id: value
      type: System.Object
      description: "De <xref:System.Object>die staat voor de nieuwe waarde van het item in te stellen.</xref:System.Object> De waarde kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>valt buiten het geldige bereik van indexen voor de verzameling."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  id: BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: BaseSet(String,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee stelt u de waarde van het eerste item met de opgegeven sleutel in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> -exemplaar als gevonden; anders is, voegt u een item met de opgegeven sleutel en waarde in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "Als de verzameling meerdere vermeldingen met de opgegeven sleutel bevat, wordt met deze methode alleen de eerste vermelding ingesteld. Gebruik de enumerator om de collectie doorlopen en vergelijkt u de sleutels te stellen de waarden van de volgende vermeldingen met dezelfde sleutel.       Deze methode is een bewerking O(1)."
  example:
  - "The following code example uses BaseSet to set the value of a specific element.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/cpp/3574a9bc-5d60-40e9-a4ae-_1.cpp)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/visualbasic/3574a9bc-5d60-40e9-a4ae-_1.vb)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/add/codesnippet/csharp/3574a9bc-5d60-40e9-a4ae-_1.cs)]"
  syntax:
    content: protected void BaseSet (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "De <xref:System.String>sleutel van het item in te stellen.</xref:System.String> De sleutel mag <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: value
      type: System.Object
      description: "De <xref:System.Object>die staat voor de nieuwe waarde van het item in te stellen.</xref:System.Object> De waarde kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  id: Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: Count
  nameWithType: NameObjectCollectionBase.Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee wordt het aantal sleutel/waarde-paren die zijn opgenomen in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "De capaciteit is het aantal elementen die de <xref:System.Collections.Specialized.NameObjectCollectionBase>kunt opslaan.</xref:System.Collections.Specialized.NameObjectCollectionBase> Aantal is het aantal elementen die daadwerkelijk in de <xref:System.Collections.Specialized.NameObjectCollectionBase>.</xref:System.Collections.Specialized.NameObjectCollectionBase>       De capaciteit is altijd groter zijn dan of gelijk aan Count. Als het aantal hoger is dan de capaciteit tijdens het toevoegen van elementen, wordt de capaciteit automatisch verhoogd met het opnieuw toewijzen van de interne matrix voordat de oude elementen kopiëren en toevoegen van nieuwe elementen.       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal sleutel/waarde-paren die zijn opgenomen in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  overload: System.Collections.Specialized.NameObjectCollectionBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: NameObjectCollectionBase.GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retourneert een enumerator die doorloopt de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref>."
  remarks: "Deze enumerator retourneert de sleutels van de verzameling als tekenreeksen.       De `foreach` -instructie van de taal C# (`for each` in Visual Basic) de complexiteit van de opsommingen worden verborgen.  Daarom kan het gebruik `foreach` wordt aanbevolen, in plaats van rechtstreeks bewerken van de enumerator.       Enumerators kunnen worden gebruikt om de gegevens in de verzameling te lezen, maar ze kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.       In eerste instantie bevindt de enumerator zich vóór het eerste element in de verzameling. <xref:System.Collections.IEnumerator.Reset%2A>brengt ook de enumerator terug naar deze positie.</xref:System.Collections.IEnumerator.Reset%2A>  Op deze positie <xref:System.Collections.IEnumerator.Current%2A>is niet gedefinieerd.</xref:System.Collections.IEnumerator.Current%2A> U moet daarom aanroepen <xref:System.Collections.IEnumerator.MoveNext%2A>om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>retourneert de hetzelfde object totdat de <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>wordt aangeroepen.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Hiermee stelt u <xref:System.Collections.IEnumerator.Current%2A>naar het volgende element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Als <xref:System.Collections.IEnumerator.MoveNext%2A>geeft het einde van de verzameling, de enumerator bevindt zich na het laatste element in de verzameling en <xref:System.Collections.IEnumerator.MoveNext%2A>retourneert `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Wanneer de enumerator is op deze positie, volgende aanroepen naar <xref:System.Collections.IEnumerator.MoveNext%2A>ook retourneren `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Als de laatste aanroep aan <xref:System.Collections.IEnumerator.MoveNext%2A>geretourneerd `false`, <xref:System.Collections.IEnumerator.Current%2A>is niet gedefinieerd.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>U kunt naar het eerste element van de verzameling opnieuw aanroepen <xref:System.Collections.IEnumerator.Reset%2A>gevolgd door <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> instellen       Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, de enumerator is permanent ongeldig en het gedrag is niet gedefinieerd.       De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom niet intrinsiek een thread-veilige procedure.  Om te garanderen thread veiligheid tijdens de opsomming, vergrendelt u de verzameling gedurende de volledige inventarisatie.  Als u wilt toestaan dat de verzameling worden geopend door meerdere threads voor lezen en schrijven, moet u uw eigen synchronisatie implementeren.       Deze methode is een bewerking O(1)."
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een <xref:System.Collections.IEnumerator>voor de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Implementeert de <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interface en retourneert de gegevens die nodig zijn voor het serialiseren van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
  remarks: "Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Een <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> object met de informatie die nodig zijn voor het serialiseren van de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Een <xref:System.Runtime.Serialization.StreamingContext>object met de bron en bestemming van de geserialiseerde stroom die zijn gekoppeld aan de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar is alleen-lezen."
  remarks: "Een verzameling die is alleen-lezen is het toevoegen, verwijderen of wijzigen van de elementen niet toegestaan, nadat de verzameling is gemaakt.       Een verzameling die is alleen-lezen is gewoon een verzameling met een wrapper waardoor het wijzigen van de collectie. daarom als wijzigingen worden aangebracht in de onderliggende verzameling, de verzameling alleen-lezen wordt doorgevoerd die wijzigingen.       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  example:
  - "The following code example creates a read-only collection.  \n  \n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/cpp/p-system.collections.spe_25_1.cpp)]\n [!code-cs[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/csharp/p-system.collections.spe_25_1.cs)]\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/add/codesnippet/visualbasic/p-system.collections.spe_25_1.vb)]"
  syntax:
    content: protected bool IsReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar is alleen-lezen, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  id: Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Haalt een <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>exemplaar waarin de sleutels in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  remarks: "Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: public virtual System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "Een <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>exemplaar waarin de sleutels in de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Collections.Specialized.NameObjectCollectionBase.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  id: OnDeserialization(System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: OnDeserialization(Object)
  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Implementeert de <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interface en genereert de deserialisatie-gebeurtenis bij het deserialiseren voltooid is."
  remarks: "Terwijl de methode OnDeserialization niet zichtbaar voor de COM-clients standaard is, overnemen van de <xref:System.Collections.Specialized.NameObjectCollectionBase>klasse kan worden weergegeven en kan ongewenst gedrag veroorzaken in COM-clients.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "De bron van de gebeurtenis deserialisatie."
  overload: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "De <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> object dat is gekoppeld aan de huidige <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> exemplaar is ongeldig."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopieert de gehele <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> naar een compatibele eendimensionale <xref:System.Array>, te beginnen bij de opgegeven index van de doelmatrix.</xref:System.Array>"
  remarks: "De opgegeven matrix moet van een compatibel type.       Deze methode gebruikt <xref:System.Array.Copy%2A?displayProperty=fullName>kopiëren van de elementen.</xref:System.Array.Copy%2A?displayProperty=fullName>       Terwijl de ICollection.CopyTo-methode niet zichtbaar voor de COM-clients standaard is, overnemen van de <xref:System.Collections.Specialized.NameObjectCollectionBase>klasse kan worden weergegeven en kan ongewenst gedrag veroorzaken in COM-clients.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "De eendimensionale <xref:System.Array>die het doel van de elementen die zijn gekopieerd uit <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref>.</xref:System.Array> De <xref:System.Array>moet hebben op nul gebaseerde indexering.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index in `array` welke kopiëren begint."
  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>is kleiner dan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>is multidimensionaal.       - of - het aantal elementen in de bron <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> groter is dan de beschikbare ruimte vanaf <code>index</code> aan het einde van de bestemming <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Het type van de bron <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> kan niet automatisch worden geconverteerd naar het type van de bestemming <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Haalt een waarde die aangeeft of de toegang tot de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> -object wordt gesynchroniseerd (thread-veilig)."
  remarks: "Een <xref:System.Collections.Specialized.NameObjectCollectionBase>object is niet gesynchroniseerd.</xref:System.Collections.Specialized.NameObjectCollectionBase> Afgeleide klassen kunnen bieden een gesynchroniseerde versie van de <xref:System.Collections.Specialized.NameObjectCollectionBase>met behulp van de <xref:System.Collections.ICollection.SyncRoot%2A>eigenschap.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.Specialized.NameObjectCollectionBase>       Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.       De volgende voorbeeldcode laat zien hoe vergrendelen op de verzameling met behulp van de <xref:System.Collections.ICollection.SyncRoot%2A>eigenschap tijdens de gehele opsomming.</xref:System.Collections.ICollection.SyncRoot%2A>       [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/cfdb0c87-90d1-4db2-b260-_1.cs)][!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/cfdb0c87-90d1-4db2-b260-_1.cpp)][!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/cfdb0c87-90d1-4db2-b260-_1.vb) ] ophalen van de waarde van deze eigenschap is een bewerking O(1).    "
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de toegang tot de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> -object wordt gesynchroniseerd (thread-veilig); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Haalt een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> object."
  remarks: "Afgeleide klassen kunnen bieden hun eigen gesynchroniseerde versie van de <xref:System.Collections.Specialized.NameObjectCollectionBase>klasse met behulp van de <xref:System.Collections.ICollection.SyncRoot%2A>eigenschap.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.Specialized.NameObjectCollectionBase> De code voor het synchroniseren moet bewerkingen uitvoeren op de <xref:System.Collections.ICollection.SyncRoot%2A>eigenschap van de <xref:System.Collections.Specialized.NameObjectCollectionBase>object, niet rechtstreeks op de <xref:System.Collections.Specialized.NameObjectCollectionBase>object.</xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.Specialized.NameObjectCollectionBase> </xref:System.Collections.ICollection.SyncRoot%2A> Dit zorgt ervoor dat de juiste werking van de verzamelingen die zijn afgeleid van andere objecten. In het bijzonder houdt juiste synchronisatie met andere threads dat tegelijkertijd kan worden wijzigt de <xref:System.Collections.Specialized.NameObjectCollectionBase>object.</xref:System.Collections.Specialized.NameObjectCollectionBase>       Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.       De volgende voorbeeldcode laat zien hoe vergrendelen op de verzameling met behulp van de <xref:System.Collections.ICollection.SyncRoot%2A>tijdens de gehele opsomming.</xref:System.Collections.ICollection.SyncRoot%2A>       [!code-cs[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/csharp/240bf954-5c3e-40ea-821a-_1.cs)][!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/cpp/240bf954-5c3e-40ea-821a-_1.cpp)][!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/add/codesnippet/visualbasic/240bf954-5c3e-40ea-821a-_1.vb) ] ophalen van de waarde van deze eigenschap is een bewerking O(1).    "
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> object."
  overload: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase()
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(Int32)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider,IComparer)
- uid: System.Collections.IHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: IHashCodeProvider
  nameWithType: IHashCodeProvider
  fullName: System.Collections.IHashCodeProvider
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(Int32,IEqualityComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IEqualityComparer)
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(Int32,IHashCodeProvider,IComparer)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseAdd(String,Object)
  nameWithType: NameObjectCollectionBase.BaseAdd(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseClear()
  nameWithType: NameObjectCollectionBase.BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet(Int32)
  nameWithType: NameObjectCollectionBase.BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet(String)
  nameWithType: NameObjectCollectionBase.BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllKeys()
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues()
  nameWithType: NameObjectCollectionBase.BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues(Type)
  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetKey(Int32)
  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseHasKeys()
  nameWithType: NameObjectCollectionBase.BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemove(String)
  nameWithType: NameObjectCollectionBase.BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemoveAt(Int32)
  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet(Int32,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(Int32,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(Int32,Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet(String,Object)
  nameWithType: NameObjectCollectionBase.BaseSet(String,Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(String,Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Count
  nameWithType: NameObjectCollectionBase.Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: NameObjectCollectionBase.GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: OnDeserialization(Object)
  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: NameObjectCollectionBase
  nameWithType: NameObjectCollectionBase.NameObjectCollectionBase
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseAdd
  nameWithType: NameObjectCollectionBase.BaseAdd
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseClear
  nameWithType: NameObjectCollectionBase.BaseClear
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet
  nameWithType: NameObjectCollectionBase.BaseGet
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllKeys
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues
  nameWithType: NameObjectCollectionBase.BaseGetAllValues
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetKey
  nameWithType: NameObjectCollectionBase.BaseGetKey
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseHasKeys
  nameWithType: NameObjectCollectionBase.BaseHasKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemove
  nameWithType: NameObjectCollectionBase.BaseRemove
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemoveAt
  nameWithType: NameObjectCollectionBase.BaseRemoveAt
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet
  nameWithType: NameObjectCollectionBase.BaseSet
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Count
  nameWithType: NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetEnumerator
  nameWithType: NameObjectCollectionBase.GetEnumerator
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetObjectData
  nameWithType: NameObjectCollectionBase.GetObjectData
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: OnDeserialization
  nameWithType: NameObjectCollectionBase.OnDeserialization
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.CopyTo
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
