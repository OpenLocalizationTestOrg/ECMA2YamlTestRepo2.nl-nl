### YamlMime:ManagedReference
items:
- uid: System.Configuration.LocalFileSettingsProvider
  id: LocalFileSettingsProvider
  children:
  - System.Configuration.LocalFileSettingsProvider.#ctor
  - System.Configuration.LocalFileSettingsProvider.ApplicationName
  - System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider
  fullName: System.Configuration.LocalFileSettingsProvider
  type: Class
  summary: "Persistentie voor toepassing instellingsklassen bevat."
  remarks: "Instelling providers definiÃ«ren een mechanisme voor het opslaan van configuratiegegevens worden gebruikt in de architectuur van de instellingen van toepassing. De [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] bevat een enkel standaard instellingen provider, LocalFileSettingsProvider waarin configuratiegegevens naar het lokale bestandssysteem opgeslagen. Een eigenschap voor instellingen van toepassing of groep met eigenschappen zijn gekoppeld aan een specifieke instellingen provider door het gebruik van de <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Normaal gesproken het clientprogramma geen expliciet toegang tot deze klasse. in plaats daarvan roept de toepassingsarchitectuur instellingen automatisch de juiste instellingen provider als de services vereist zijn. Bijvoorbeeld: veel van de leden van <xref:System.Configuration.ApplicationSettingsBase>hun werk te delegeren aan de provider van de bijbehorende instellingen.</xref:System.Configuration.ApplicationSettingsBase>       LocalFileSettingsProvider zich blijft voordoen instellingen tot configuratiebestanden met de extensie `.config`. De inhoud van de configuratiebestanden zijn geordend als XML-documenten. Afhankelijk van de instelling heeft of een bereik op het niveau van de toepassing of beveiliging op gebruikersniveau, de configuratiegegevens wordt opgeslagen als elementen in een `<applicationSettings>` of een `<userSettings>` sectie groep, respectievelijk. Elk van deze sectiegroepen wordt vertegenwoordigd door een overeenkomende <xref:System.Configuration.AppSettingsSection>of <xref:System.Configuration.ClientSettingsSection>respectievelijk.</xref:System.Configuration.ClientSettingsSection> </xref:System.Configuration.AppSettingsSection> Elk object sectie eigendom is van en worden beheerd door een configuratiesectie-handler, dit een object van type <xref:System.Configuration.IConfigurationSectionHandler>.</xref:System.Configuration.IConfigurationSectionHandler> is       Toepassingsbereik instellingen en de standaardinstellingen voor gericht op de gebruiker worden opgeslagen in een bestand met de naam `application.exe.config`, die in dezelfde map als het uitvoerbare bestand is gemaakt. Configuratie-instellingen van toepassing zijn alleen-lezen. Specifieke gebruikersgegevens worden opgeslagen in een bestand met de naam `user.config`opgeslagen onder de basismap van de gebruiker. Als zwervende profielen zijn ingeschakeld, worden twee versies van het configuratiebestand van de gebruiker kunnen bestaan. In dat geval voorrang de vermeldingen in de zwervende versie op dubbele vermeldingen in het configuratiebestand van de lokale gebruiker.       Zie voor meer informatie over toepassingsinstellingen [toepassing-instellingen voor Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Configuration.SettingsProvider
  implements:
  - System.Configuration.IApplicationSettingsProvider
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.LocalFileSettingsProvider&quot;> </xref> klasse."
  remarks: "De standaardconstructor stelt de <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>eigenschap <xref:System.String.Empty>.</xref:System.String.Empty> </xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>"
  syntax:
    content: public LocalFileSettingsProvider ();
    parameters: []
  overload: System.Configuration.LocalFileSettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van de naam van de toepassing momenteel wordt uitgevoerd."
  remarks: "De ApplicationName en <xref:System.Configuration.Provider.ProviderBase.Name%2A>Eigenschappen helpen toe op dezelfde manier benoemde instellen van eigenschappen in verschillende toepassingen.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks met de weergavenaam van de toepassing."
  overload: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Retourneert de waarde van de eigenschap benoemde instellingen voor de vorige versie van dezelfde toepassing."
  remarks: "De methode GetPreviousVersion wordt vaak gebruikt in combinatie met de <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>methode wanneer u toepassingsinstellingen tijdens de installatie van een nieuwe versie van een toepassing migreert.</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> Zie voor meer informatie de <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>methode.</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> die wordt beschreven waar de toepassing-eigenschap voor instellingen wordt gebruikt."
    - id: property
      type: System.Configuration.SettingsProperty
      description: "De <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> waarvan de waarde moet worden geretourneerd."
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> dat de toepassingsinstelling vertegenwoordigt als gevonden, anders wordt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Retourneert de verzameling van het instellen van eigenschapswaarden voor de opgegeven instantie en instellingen eigenschap toepassingsgroep."
  remarks: "De methode GetPropertyValues beheert ook de speciale instellingen toepassingstype <xref:System.Configuration.SpecialSetting>.</xref:System.Configuration.SpecialSetting> Verbindingsreeksen worden opgeslagen in een speciale sectie van het configuratiebestand gescheiden door het element `<connectionstrings>`.      > [!CAUTION] > <xref:System.Configuration.LocalFileSettingsProvider>gebruikt geen versleuteling voor het persistent maken van alle instellingen.</xref:System.Configuration.LocalFileSettingsProvider> Daarom geen opgeslagen ongecodeerde wachtwoorden en andere gevoelige gegevens die met deze provider zonder aanvullende voorzorgsmaatregelen, zoals het coderen van afzonderlijk de informatie in het configuratiebestand. Zie voor meer informatie [versleutelen van gegevens met behulp van beveiligde configuratie](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> met een beschrijving van het huidige toepassingsgebruik."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> met de eigenschap instellingengroep waarvan de waarden moeten worden opgehaald."
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> met de waarden voor de groep van de eigenschap opgegeven instellingen."
  overload: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Een instelling gericht op de gebruiker is aangetroffen, maar de huidige configuratie ondersteunt alleen instellingen toepassingsbereik."
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiseert de provider."
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);
    parameters:
    - id: name
      type: System.String
      description: "De beschrijvende naam van de provider."
    - id: values
      type: System.Collections.Specialized.NameValueCollection
      description: "Een verzameling van de naam/waarde-paren die de provider-specifieke kenmerken opgegeven in de configuratie voor deze provider vertegenwoordigt."
  overload: System.Configuration.LocalFileSettingsProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hiermee stelt u de eigenschappen voor alle toepassingen die zijn gekoppeld aan de opgegeven toepassing op hun standaardwaarden."
  remarks: "De methode opnieuw instellen herstelt u de opgeslagen waarden van de opgegeven instellingen van de toepassingsgroep. De actie opnieuw is ingesteld, is afhankelijk van het bereik van de eigenschap voor instellingen van toepassing:-toepassing-instellingen worden niet beÃ¯nvloed.      -Gebruiker-instellingen worden opnieuw ingesteld op de standaardwaarden die worden opgeslagen als alleen-lezen vermeldingen in het toepassingsconfiguratiebestand `application.exe.config`. Als zwervende profielen worden gebruikt, hebben waarden van toepassing in het zwervende profiel voorrang op de dubbele items gevonden in het lokale profiel.       U ziet dat als zwervende profielen worden gebruikt, kunnen er twee `user.config` bestanden, Ã©Ã©n voor de lokale instellingen en Ã©Ã©n voor het zwervende profiel."
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> met een beschrijving van het huidige toepassingsgebruik."
  overload: System.Configuration.LocalFileSettingsProvider.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Een instelling gericht op de gebruiker is aangetroffen, maar de huidige configuratie ondersteunt alleen instellingen toepassingsbereik."
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hiermee worden de waarden van de opgegeven groep van instellingen."
  remarks: "Een wrapperklasse instellingen die zijn afgeleid van <xref:System.Configuration.ApplicationSettingsBase>, bevat de <xref:System.Configuration.ApplicationSettingsBase.Save%2A>methode, die wordt aangeroepen om vast te leggen van de waarden van alle eigenschappen van de instellingen.</xref:System.Configuration.ApplicationSettingsBase.Save%2A> </xref:System.Configuration.ApplicationSettingsBase> Deze methode inventariseren via alle instellingen die zijn gekoppeld aan de eigenschappen en aanroepen providers de <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>methode voor elk <xref:System.Configuration.SettingsProvider>de werkelijke serialisatie-bewerking uit te voeren.</xref:System.Configuration.SettingsProvider> </xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       SetPropertyValues serialiseert afzonderlijk elke eigenschap van de instellingen voor toepassing gericht op de gebruiker naar de bijbehorende toepassing instellen in de juiste `user.config` configuratiebestand.       De methode SetPropertyValues gebruikt standaard de volgende logische volgorde om te bepalen van het schema voor serialisatie, afhankelijk van de eigenschap voor instellingen type: 1.  Als het type een bijbehorende heeft <xref:System.ComponentModel.TypeConverter>met een <xref:System.ComponentModel.TypeConverter.ConvertToString%2A>methode-implementatie, deze conversie wordt gebruikt.</xref:System.ComponentModel.TypeConverter.ConvertToString%2A> </xref:System.ComponentModel.TypeConverter>      2.  XML-serialisatie wordt gebruikt.       U kunt echter een serialisatiemechanisme voorkeur opgeven met behulp van de <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> <xref:System.Configuration.LocalFileSettingsProvider>biedt geen ondersteuning voor binaire serialisatie in [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)].</xref:System.Configuration.LocalFileSettingsProvider>       Als een eigenschap voor instellingen gericht op de gebruiker is ingesteld terug naar de standaardwaarde expliciet, kunnen de instellingen van de lokale bestandsprovider wordt de vermelding voor de gekoppelde instelling uit het configuratiebestand van de gebruiker verwijderd. De volgende leestoegang voor deze eigenschap wordt de standaardwaarde gewoon gebruiken.      > [!CAUTION] > <xref:System.Configuration.LocalFileSettingsProvider>gebruikt geen versleuteling voor het persistent maken van alle instellingen.</xref:System.Configuration.LocalFileSettingsProvider> Daarom geen opgeslagen ongecodeerde wachtwoorden en andere gevoelige gegevens die met deze provider zonder aanvullende voorzorgsmaatregelen, zoals het coderen van afzonderlijk de informatie in het configuratiebestand. Zie voor meer informatie [versleutelen van gegevens met behulp van beveiligde configuratie](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> met een beschrijving van het huidige toepassingsgebruik."
    - id: values
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> die de groep van de eigenschapsinstellingen in te stellen."
  overload: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Een instelling gericht op de gebruiker is aangetroffen, maar de huidige configuratie ondersteunt alleen instellingen toepassingsbereik.       - of - er is een algemene fout bij het opslaan van de instellingen voor het configuratiebestand."
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Probeert vorige gericht op de gebruiker om instellingen te migreren van een eerdere versie van dezelfde toepassing."
  remarks: "<xref:System.Configuration.LocalFileSettingsProvider>Hiermee wordt de lokale en zwervende instellingen in afzonderlijke bewerkingen.</xref:System.Configuration.LocalFileSettingsProvider>       Methode voor de Upgrade is onderdrukt voor elke toepassingsinstelling met de <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>toegepast, of op de hele instellingen wrapperklasse, afgeleid van <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.NoSettingsVersionUpgradeAttribute>       Op deze manier deze methode wordt aangeroepen, is afhankelijk van het type toepassing dat wordt bijgewerkt:-elke versie van een [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] toepassing is opgeslagen in een eigen geÃ¯soleerde installatiemap. Na een nieuwe versie van een [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] toepassing is geÃ¯nstalleerd en wanneer de nieuwe versie eerst uitvoert wordt, interne logische Upgrade alle algemene om toepassingsinstellingen te migreren naar de nieuwe versie automatisch aanroepen. Zie voor meer informatie [ClickOnce- en toepassingsinstellingen](~/add/includes/ajax-current-ext-md.md).      -Standaard Windows Forms moeten-consoletoepassingen handmatig contact Upgrade, omdat er is geen algemeen, automatische manier om te bepalen wanneer een dergelijke toepassing voor het eerst wordt uitgevoerd. De twee algemene manieren om te doen dit weet van het installatieprogramma of met behulp van de toepassing zelf, met een persistente eigenschap, vaak met de naam ongeveer `IsFirstRun`.       Houd er rekening mee dat voor de nieuwere versie voor het migreren van toepassingsinstellingen, deze moet kunnen ook laden en de oudere versie van de toepassingsinstellingen lezen. Daarom moet het wrapper-klassen die compatibel is met de nieuwe en eerdere versies van de toepassing bevatten."
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> met een beschrijving van het huidige toepassingsgebruik."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> met de eigenschap instellingengroep waarvan de waarden moeten worden opgehaald."
  overload: System.Configuration.LocalFileSettingsProvider.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Een instelling gericht op de gebruiker is aangetroffen, maar de huidige configuratie ondersteunt alleen instellingen toepassingsbereik.       - of - de vorige versie van het configuratiebestand kan niet worden geopend."
  platform:
  - net462
references:
- uid: System.Configuration.SettingsProvider
  isExternal: false
  name: System.Configuration.SettingsProvider
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.LocalFileSettingsProvider.#ctor*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: LocalFileSettingsProvider.GetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Initialize*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize
  nameWithType: LocalFileSettingsProvider.Initialize
- uid: System.Configuration.LocalFileSettingsProvider.Reset*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: LocalFileSettingsProvider.Reset
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: LocalFileSettingsProvider.SetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: LocalFileSettingsProvider.Upgrade
