### YamlMime:ManagedReference
items:
- uid: System.MarshalByRefObject
  id: MarshalByRefObject
  children:
  - System.MarshalByRefObject.#ctor
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  langs:
  - csharp
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
  type: Class
  summary: "Hiermee toegang tot objecten buiten de grenzen van de toepassing domein in toepassingen die ondersteuning voor externe toegang."
  remarks: "Een toepassingsdomein is een partitie in een besturingssysteem proces waarbij een of meer toepassingen zich bevinden. Objecten in hetzelfde toepassingsdomein communiceren rechtstreeks. Objecten in verschillende toepassingsdomeinen communiceren door het transport van exemplaren van objecten buiten de grenzen van de toepassing-domein of via een proxy voor het uitwisselen van berichten.       Een MarshalByRefObject is de basisklasse voor objecten die buiten de grenzen van de toepassing domein communiceren door het uitwisselen van berichten met behulp van een proxy. Objecten die geen van een MarshalByRefObject overnemen worden impliciet marshal-by waarde. Als externe toepassing verwijst naar een marshal door value-object, wordt een kopie van het object doorgegeven buiten de grenzen van de toepassing-domein.       Objecten van een MarshalByRefObject worden benaderd rechtstreeks binnen de grenzen van het domein van de lokale toepassing. De eerste keer dat een toepassing in een domein van de externe toepassing toegang heeft tot een MarshalByRefObject wordt een proxy doorgegeven aan de externe toepassing. Volgende aanroepen op de proxy worden gemarshald naar het object zich in het domein van de lokale toepassing.       Codegeneratortype moet eigenschappen overnemen van een MarshalByRefObject wanneer het type buiten de grenzen van de toepassing domein wordt gebruikt en de status van het object niet moet worden gekopieerd omdat de leden van het object niet kan worden gebruikt buiten het toepassingsdomein waarin ze zijn gemaakt.       Wanneer u een object afgeleid van MarshalByRefObject voor gebruik buiten de grenzen van de toepassing-domein, moet u een van de leden ervan niet overschrijven, noch moet u de bijbehorende methoden rechtstreeks aanroepen. De runtime herkent dat klassen die zijn afgeleid van een MarshalByRefObject buiten de grenzen van de app-domein moeten worden gemarshald."
  example:
  - "This section contains two code examples. The first code example shows how to create an instance of a class in another application domain. The second code example shows a simple class that can be used for remoting.  \n  \n **Example 1**  \n  \n The following code example shows the simplest way to execute code in another application domain. The example defines a class named `Worker` that inherits MarshalByRefObject, with a method that displays the name of the application domain in which it is executing. The example creates instances of `Worker` in the default application domain and in a new application domain.  \n  \n> [!NOTE]\n>  The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.  \n  \n [!code-cpp[CreateInstanceAndUnwrap2#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_1.cpp)]\n [!code-cs[CreateInstanceAndUnwrap2#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_1.cs)]\n [!code-vb[CreateInstanceAndUnwrap2#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_1.vb)]  \n  \n **Example 2**  \n  \n The following example demonstrates a class derived from MarshalByRefObject that is used later in remoting.  \n  \n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_2.cpp)]\n [!code-cs[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_2.cs)]\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MarshalByRefObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.MarshalByRefObject.#ctor
  id: '#ctor'
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.MarshalByRefObject&quot;> </xref> klasse."
  syntax:
    content: protected MarshalByRefObject ();
    parameters: []
  overload: System.MarshalByRefObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  id: CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Maakt een object dat alle relevante informatie die nodig zijn bevat voor het genereren van een proxy gebruikt om te communiceren met een extern object."
  remarks: "TheCreateObjRef-methode wordt aangeroepen door de methoden voor het externe object maken zoals <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName>en <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>.</xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName> </xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> In de meeste gevallen is er niet nodig voor het onderdrukken van deze methode."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);
    parameters:
    - id: requestedType
      type: System.Type
      description: "De <xref:System.Type>van het object dat de nieuwe <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> verwijst.</xref:System.Type>"
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Vereiste informatie op voor het genereren van een proxy."
  overload: System.MarshalByRefObject.CreateObjRef*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Dit exemplaar is geen geldige remoting object."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.MarshalByRefObject.GetLifetimeService
  id: GetLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Haalt de levensduur van de huidige service-object dat Hiermee bepaalt u het beleid levensduur voor dit exemplaar."
  remarks: "Zie voor meer informatie over services voor de levensduur van de <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>klasse.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  syntax:
    content: public object GetLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Een object van type <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> gebruikt voor het beheren van de levensduur van beleid voor dit exemplaar."
  overload: System.MarshalByRefObject.GetLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.MarshalByRefObject.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Haalt een levensduur-object om te bepalen van de levensduur van beleid voor dit exemplaar."
  remarks: "Zie voor meer informatie over services voor de levensduur van de <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>klasse.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  example:
  - "The following code example demonstrates creating a lease.  \n  \n [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/cpp/m-system.marshalbyrefobj_1.cpp)]\n [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/visualbasic/m-system.marshalbyrefobj_1.vb)]\n [!code-cs[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/csharp/m-system.marshalbyrefobj_1.cs)]"
  syntax:
    content: public virtual object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Een object van type <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> gebruikt voor het beheren van de levensduur van beleid voor dit exemplaar. Dit is de levensduur van de huidige service-object voor dit exemplaar als er een bestaat. anders wordt een nieuwe levensduur serviceobject ge√Ønitialiseerd met de waarde van de &lt;xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A?displayProperty=fullName&gt; eigenschap."
  overload: System.MarshalByRefObject.InitializeLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De onmiddellijke aanroeper is niet gemachtigd voor infrastructuur."
  platform:
  - net462
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  id: MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Maakt een recente kopie van de huidige <xref href=&quot;System.MarshalByRefObject&quot;> </xref> object."
  remarks: "De methode MemberwiseClone maakt u een recente kopie door het maken van een nieuw <xref:System.MarshalByRefObject>object en vervolgens kopieert de niet-statische velden van de huidige <xref:System.MarshalByRefObject>object naar het nieuwe object.</xref:System.MarshalByRefObject> </xref:System.MarshalByRefObject> Als een veld een waardetype is, wordt een kopie van de bit voor bit van het veld uitgevoerd. Als een veld een verwijzingstype is, de verwijzing wordt gekopieerd, maar het object waarnaar wordt verwezen is niet het geval is; Daarom verwijzen het oorspronkelijke object en de kloon naar hetzelfde object.       Neem bijvoorbeeld een <xref:System.MarshalByRefObject>-object aangeroepen X die verwijst naar objecten A en B. Object B op zijn beurt verwijst naar object C. Een recente kopie van X maakt een nieuw object X2 die ook verwijst naar objecten A en B. Daarentegen een diepe kopie van X maakt een nieuw object X2 die verwijst naar de nieuwe objecten A2 en B2, kopie√´n van A zijn en B. B2, op zijn beurt verwijst naar het nieuwe object C2, die een kopie C. Gebruik een klasse die implementeert de <xref:System.ICloneable>interface voor het uitvoeren van een grondige of recente kopie van een object.</xref:System.ICloneable> </xref:System.MarshalByRefObject>       De identiteit van een <xref:System.MarshalByRefObject>object is gedefinieerd als de externe server-object dat het doel van een aanroep van de client externe toegang.</xref:System.MarshalByRefObject> Standaard wordt de memberwise kloon van een <xref:System.MarshalByRefObject>object heeft dezelfde id als het oorspronkelijke object, dat is doorgaans niet de juiste werking voor klonen van server-side &quot;-objecten die grens van een externe communicatie aan de clientzijde worden gemarshald.</xref:System.MarshalByRefObject> Geef `false`, meestal geschikt, verwijdert u de identiteit van de kloon en ertoe leiden dat een nieuwe identiteit toe te wijzen wanneer de kloon is gemarshald tussen een grens voor externe toegang of `true` leiden dat de kloon voor het bewaren van de identiteit van de oorspronkelijke <xref:System.MarshalByRefObject>object.</xref:System.MarshalByRefObject> De methode MemberwiseClone is bedoeld voor gebruik door ontwikkelaars die objecten van de externe server."
  syntax:
    content: protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);
    parameters:
    - id: cloneIdentity
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>verwijderen van de huidige <xref href=&quot;System.MarshalByRefObject&quot;> </xref> van het object identiteit, waardoor het object moet een nieuwe identiteit worden toegewezen wanneer deze is gemarshald tussen de grens van een externe toegang. Een waarde van <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> meestal geschikt. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>kopi√´ren van de huidige <xref href=&quot;System.MarshalByRefObject&quot;> </xref> de identiteit van het object naar de kloon, waardoor de externe communicatie van client-aanroepen worden doorgestuurd naar de externe server-object."
    return:
      type: System.MarshalByRefObject
      description: "Een recente kopie van de huidige <xref href=&quot;System.MarshalByRefObject&quot;> </xref> object."
  overload: System.MarshalByRefObject.MemberwiseClone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.MarshalByRefObject.#ctor
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.MarshalByRefObject.#ctor*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject.MarshalByRefObject
- uid: System.MarshalByRefObject.CreateObjRef*
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef
  nameWithType: MarshalByRefObject.CreateObjRef
- uid: System.MarshalByRefObject.GetLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService
  nameWithType: MarshalByRefObject.GetLifetimeService
- uid: System.MarshalByRefObject.InitializeLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: MarshalByRefObject.InitializeLifetimeService
- uid: System.MarshalByRefObject.MemberwiseClone*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone
  nameWithType: MarshalByRefObject.MemberwiseClone
