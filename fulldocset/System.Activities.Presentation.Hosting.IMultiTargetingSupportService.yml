### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  id: IMultiTargetingSupportService
  children:
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  langs:
  - csharp
  name: IMultiTargetingSupportService
  nameWithType: IMultiTargetingSupportService
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  type: Interface
  summary: "Biedt meerdere doelen instellen voor [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] hosts."
  remarks: "*Meerdere doelen* is de mogelijkheid om de juiste versie van de geladen assembly die overeenkomt met het doel [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] versie van het huidige project in de werkstroom in [!INCLUDE[vs2010](~/add/includes/vs2010-md.md)].       Deze interface is ge√Ømplementeerd en gebruikt het intern door [!INCLUDE[wf1](~/add/includes/wf1-md.md)] designer onderdelen om op te lossen [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] assembly&quot;s in een multi-doelen op de hoogte wijze binnen de [!INCLUDE[vs2010](~/add/includes/vs2010-md.md)] toepassing te hosten. De [!INCLUDE[wf1](~/add/includes/wf1-md.md)] designer onderdelen gebruiken de implementatie van deze interface alleen wanneer extra assembly&quot;s moeten worden geladen dynamisch in het bewerken `AppDomain`."
  syntax:
    content: public interface IMultiTargetingSupportService
  implements: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  id: GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Retourneert de momenteel geladen assembly gegeven van de assembly-naam."
  syntax:
    content: public System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);
    parameters:
    - id: targetAssemblyName
      type: System.Reflection.AssemblyName
      description: "De assembly-naam."
    return:
      type: System.Reflection.Assembly
      description: "De momenteel geladen assembly gegeven van de assembly-naam."
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Hiermee haalt u de RuntimeType dat overeenkomt met het opgegeven type."
  syntax:
    content: public Type GetRuntimeType (Type reflectionType);
    parameters:
    - id: reflectionType
      type: System.Type
      description: "Het type ophalen van het RuntimeType."
    return:
      type: System.Type
      description: "De RuntimeType dat overeenkomt met het opgegeven type."
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Retourneert een waarde die aangeeft of het opgegeven type wordt ondersteund."
  syntax:
    content: public bool IsSupportedType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Het type om te controleren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het opgegeven type wordt ondersteund; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType
  nameWithType: IMultiTargetingSupportService.GetRuntimeType
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType
  nameWithType: IMultiTargetingSupportService.IsSupportedType
