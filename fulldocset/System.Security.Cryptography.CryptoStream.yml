### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CryptoStream
  id: CryptoStream
  children:
  - System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)
  - System.Security.Cryptography.CryptoStream.CanRead
  - System.Security.Cryptography.CryptoStream.CanSeek
  - System.Security.Cryptography.CryptoStream.CanWrite
  - System.Security.Cryptography.CryptoStream.Clear
  - System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)
  - System.Security.Cryptography.CryptoStream.Flush
  - System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)
  - System.Security.Cryptography.CryptoStream.FlushFinalBlock
  - System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
  - System.Security.Cryptography.CryptoStream.Length
  - System.Security.Cryptography.CryptoStream.Position
  - System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Security.Cryptography.CryptoStream.SetLength(System.Int64)
  - System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  name: CryptoStream
  nameWithType: CryptoStream
  fullName: System.Security.Cryptography.CryptoStream
  type: Class
  summary: "Definieert een stroom die gegevensstromen naar cryptografische transformaties koppelingen."
  remarks: "De common language runtime maakt gebruik van een ontwerp stroom-georiënteerd voor cryptografie. De kern van dit ontwerp is CryptoStream. Cryptografische objecten die CryptoStream implementeren keten kunnen worden samen met eventuele objecten die worden geïmplementeerd <xref:System.IO.Stream>, zodat de uitvoer van de gestroomde van één object kan worden opgenomen in de invoer van een ander object.</xref:System.IO.Stream> Het tussenliggende resultaat (de uitvoer van het eerste object) hoeft niet afzonderlijk kunnen worden opgeslagen.      > [!IMPORTANT] > Dit type implementeert de <xref:System.IDisposable>interface.</xref:System.IDisposable> Wanneer u klaar bent met het gebruik van het type moet buitengebruikstelling van het direct of indirect door het aanroepen van de <xref:System.Security.Cryptography.CryptoStream.Clear%2A>methode, die op zijn beurt roept de <xref:System.IDisposable>uitvoering.</xref:System.IDisposable> </xref:System.Security.Cryptography.CryptoStream.Clear%2A> Aanroepen voor het rechtstreeks verwijderen van het type ervan <xref:System.Security.Cryptography.CryptoStream.Clear%2A>methode in een `try` / `catch` blok.</xref:System.Security.Cryptography.CryptoStream.Clear%2A> Gebruiken om de buitengebruikstelling van het indirect, een taal constructie zoals `using` (in C#) of `Using` (in Visual Basic). Zie voor meer informatie de sectie &quot;Met behulp van een Object dat wordt geïmplementeerd IDisposable&quot; in de <xref:System.IDisposable>interface onderwerp.</xref:System.IDisposable>       U moet uw object CryptoStream altijd expliciet sluiten nadat u klaar bent met het aanroepen van de <xref:System.Security.Cryptography.CryptoStream.Clear%2A>methode.</xref:System.Security.Cryptography.CryptoStream.Clear%2A>  Hierdoor wordt dus Leegmaakacties van de onderliggende stroom en zorgt ervoor dat alle resterende blokken met gegevens die moeten worden verwerkt door het object CryptoStream.  Echter, als er een uitzondering optreedt voordat u contact opneemt met de <xref:System.IO.Stream.Close%2A>methode, het object kan niet worden gesloten CryptoStream.</xref:System.IO.Stream.Close%2A>  Om ervoor te zorgen dat de <xref:System.IO.Stream.Close%2A>altijd methode wordt aangeroepen, plaatst u de aanroep van de <xref:System.Security.Cryptography.CryptoStream.Clear%2A>methode binnen de `finally` blokkeren van een `try` / `catch` instructie.</xref:System.Security.Cryptography.CryptoStream.Clear%2A> </xref:System.IO.Stream.Close%2A>"
  example:
  - "The following example demonstrates how to use a CryptoStream to encrypt a string. This method uses <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>).  \n  \n [!code-cs[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/csharp/t-system.security.crypto_78_1.cs)]\n [!code-vb[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/visualbasic/t-system.security.crypto_78_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CryptoStream : System.IO.Stream
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)
  id: '#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)'
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  nameWithType: CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  fullName: System.Security.Cryptography.CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> klasse met een doel-gegevensstroom, de transformatie te gebruiken en de modus van de stroom."
  remarks: "Elk object dat is afgeleid van <xref:System.IO.Stream>kunnen worden doorgegeven in de `stream` parameter.</xref:System.IO.Stream> Elk object dat wordt geïmplementeerd <xref:System.Security.Cryptography.ICryptoTransform>(zoals <xref:System.Security.Cryptography.HashAlgorithm>) kunnen worden doorgegeven in de `transform` parameter.</xref:System.Security.Cryptography.HashAlgorithm> </xref:System.Security.Cryptography.ICryptoTransform>"
  syntax:
    content: public CryptoStream (System.IO.Stream stream, System.Security.Cryptography.ICryptoTransform transform, System.Security.Cryptography.CryptoStreamMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De stroom waarop u wilt uitvoeren van de cryptografische transformatie."
    - id: transform
      type: System.Security.Cryptography.ICryptoTransform
      description: "De cryptografische transformatie die moet worden uitgevoerd op de stroom."
    - id: mode
      type: System.Security.Cryptography.CryptoStreamMode
      description: "Een van de <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> waarden."
  overload: System.Security.Cryptography.CryptoStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>is ongeldig."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.CanRead
  id: CanRead
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: CanRead
  nameWithType: CryptoStream.CanRead
  fullName: System.Security.Cryptography.CryptoStream.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Haalt een waarde die aangeeft of de huidige <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> kan worden gelezen."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige stroom kan worden gelezen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CryptoStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.CanSeek
  id: CanSeek
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: CryptoStream.CanSeek
  fullName: System.Security.Cryptography.CryptoStream.CanSeek
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee wordt een waarde die aangeeft of u binnen de huidige proberen kunt <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref>."
  remarks: "Zoeken niet is ingeschakeld in een <xref:System.Security.Cryptography.CryptoStream>, zodat deze methode altijd retourneert `false`.</xref:System.Security.Cryptography.CryptoStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.CryptoStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.CanWrite
  id: CanWrite
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: CryptoStream.CanWrite
  fullName: System.Security.Cryptography.CryptoStream.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Haalt een waarde die aangeeft of de huidige <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> schrijfbaar is."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige stroom beschrijfbare is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CryptoStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Clear
  id: Clear
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Clear()
  nameWithType: CryptoStream.Clear()
  fullName: System.Security.Cryptography.CryptoStream.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref>."
  remarks: "Deze methode een aanroep van het type verpakt <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>uitvoering.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       Het aanroepen van `Dispose` kunt u de resources die worden gebruikt door de <xref:System.Security.Cryptography.CryptoStream>naar opnieuw worden toegewezen voor andere doeleinden.</xref:System.Security.Cryptography.CryptoStream> Voor meer informatie over `Dispose`, Zie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md)"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.CryptoStream.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CryptoStream.Dispose(Boolean)
  fullName: System.Security.Cryptography.CryptoStream.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()` methode en de `Finalize` methode. `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de disposing parameter die is ingesteld op `true`. `Finalize`roept `Dispose` met de verwijdering is ingesteld op `false`.       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Security.Cryptography.CryptoStream>verwijzingen.</xref:System.Security.Cryptography.CryptoStream> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Security.Cryptography.CryptoStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Flush
  id: Flush
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Flush()
  nameWithType: CryptoStream.Flush()
  fullName: System.Security.Cryptography.CryptoStream.Flush()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee wist u alle buffers voor de huidige stroom en zorgt ervoor dat de gegevens naar de onderliggende apparaat moeten worden geschreven."
  remarks: "Leegmaken van de stroom wordt niet leegmaken van de onderliggende encoder tenzij u expliciet Flush of <xref:System.IO.Stream.Close%2A>.</xref:System.IO.Stream.Close%2A> aanroepen Instelling <xref:System.IO.StreamWriter.AutoFlush%2A>naar `true` betekent dat gegevens uit de buffer wordt leeggemaakt naar de stroom, maar niet de status van de codering wordt leeggemaakt.</xref:System.IO.StreamWriter.AutoFlush%2A> Hiermee kunt het coderingsprogramma behouden (gedeeltelijke tekens) zodat deze het volgende codeblok tekens correct kunt coderen. Dit scenario is van invloed op UTF8 en UTF7 waarin bepaalde tekens kunnen alleen worden gecodeerd nadat het coderingsprogramma de aangrenzende teken of tekens ontvangt.      > [!NOTE] > Moet u ofwel aanroepen de <xref:System.IO.Stream.Close%2A>methode of de <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A>methode voor het voltooien van de buffer leegmaken.</xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Security.Cryptography.CryptoStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: FlushAsync(CancellationToken)
  nameWithType: CryptoStream.FlushAsync(CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.FlushAsync(CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Alle buffers voor de huidige stroom asynchroon worden gewist en zorgt ervoor dat de gegevens worden geschreven naar de onderliggende apparaat controleert annulering aanvragen."
  remarks: "De aanroep van FlushAsync met moet worden voorafgegaan de `await` (C#) of `Await` (Visual Basic)-operator om uitvoering van de methode blokkeren totdat de taak voltooid is. Zie voor meer informatie [asynchrone programmering met Async en Await](~/add/includes/ajax-current-ext-md.md).       Als de bewerking is geannuleerd voordat deze is voltooid, wordt de resulterende taak bevat de <xref:System.Threading.Tasks.TaskStatus>waarde voor de <xref:System.Threading.Tasks.Task.Status%2A>eigenschap.</xref:System.Threading.Tasks.Task.Status%2A> </xref:System.Threading.Tasks.TaskStatus>"
  syntax:
    content: public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Het token voor annulering aanvragen bewaken. De standaardwaarde is <xref:System.Threading.CancellationToken.None*>.</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die staat voor de asynchrone bewerking leegmaken."
  overload: System.Security.Cryptography.CryptoStream.FlushAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De stroom is verwijderd."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.FlushFinalBlock
  id: FlushFinalBlock
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: FlushFinalBlock()
  nameWithType: CryptoStream.FlushFinalBlock()
  fullName: System.Security.Cryptography.CryptoStream.FlushFinalBlock()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "De onderliggende gegevensbron of de opslagplaats bijgewerkt met de huidige status van de buffer en vervolgens de buffer wordt gewist."
  remarks: "Het aanroepen van de <xref:System.IO.Stream.Close%2A>wordt de aanroep van servermethode FlushFinalBlock.</xref:System.IO.Stream.Close%2A> Als u niet aanroepen <xref:System.IO.Stream.Close%2A>, roepen FlushFinalBlock voor het voltooien van de buffer leegmaken.</xref:System.IO.Stream.Close%2A> FlushFinalBlock aanroepen alleen wanneer alle stream activiteit voltooid is."
  syntax:
    content: public void FlushFinalBlock ();
    parameters: []
  overload: System.Security.Cryptography.CryptoStream.FlushFinalBlock*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "De sleutel is beschadigd, waardoor ongeldige opvulling naar de stroom."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De huidige stroom is niet schrijfbaar.       - of - het laatste blok al getransformeerd."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
  id: HasFlushedFinalBlock
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: HasFlushedFinalBlock
  nameWithType: CryptoStream.HasFlushedFinalBlock
  fullName: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Haalt een waarde die aangeeft of het laatste buffer blok is geschreven naar de onderliggende stroom."
  remarks: "Deze eigenschap is ingesteld `true` wanneer de <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A>methode wordt aangeroepen.</xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A>"
  syntax:
    content: public bool HasFlushedFinalBlock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het laatste blok is leeggemaakt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Length
  id: Length
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Length
  nameWithType: CryptoStream.Length
  fullName: System.Security.Cryptography.CryptoStream.Length
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt de lengte in bytes van de stroom."
  remarks: "Deze eigenschap is alleen ter ondersteuning van overname van <xref:System.IO.Stream>, en kan niet worden gebruikt.</xref:System.IO.Stream>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Deze eigenschap wordt niet ondersteund."
  overload: System.Security.Cryptography.CryptoStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze eigenschap wordt niet ondersteund."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Position
  id: Position
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Position
  nameWithType: CryptoStream.Position
  fullName: System.Security.Cryptography.CryptoStream.Position
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Opgehaald of ingesteld van de positie binnen de huidige stroom."
  remarks: "Deze eigenschap is alleen ter ondersteuning van overname van <xref:System.IO.Stream>, en kan niet worden gebruikt.</xref:System.IO.Stream>"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "Deze eigenschap wordt niet ondersteund."
  overload: System.Security.Cryptography.CryptoStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze eigenschap wordt niet ondersteund."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: CryptoStream.Read(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Een reeks bytes leest uit de huidige stroom en de positie binnen de stroom wordt bestuurd door het aantal bytes dat is gelezen."
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een matrix met bytes. Maximaal `count` bytes zijn gelezen uit de huidige stroom en opgeslagen in `buffer`."
    - id: offset
      type: System.Int32
      description: "De byte-offset in `buffer` waarop u wilt beginnen met opslaan van de gegevens uit de huidige stroom lezen."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes dat moet worden gelezen uit de huidige stroom."
    return:
      type: System.Int32
      description: "Het totale aantal bytes in de buffer gelezen. Dit kan zijn dat kleiner is dan het aantal bytes aangevraagd als dat veel bytes momenteel niet beschikbaar zijn, of nul als het einde van de stroom is bereikt."
  overload: System.Security.Cryptography.CryptoStream.Read*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> die zijn gekoppeld aan de huidige <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> object komt niet overeen met de onderliggende stroom.  Bijvoorbeeld: deze uitzondering bij gebruik van <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> met een onderliggende stroom die is alleen-schrijven."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> parameter kleiner is dan nul.       - of - de <code> count </code> parameter kleiner is dan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Thesum van de <code> count </code> en <code> offset </code> parameters is langer dan de lengte van de buffer."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Een reeks bytes asynchroon leest uit de huidige stroom, verplaatst van de positie binnen de stroom door het aantal bytes dat is gelezen en controleert annulering aanvragen."
  remarks: "De aanroep van ReadAsync met moet worden voorafgegaan de `await` (C#) of `Await` (Visual Basic)-operator om uitvoering van de methode blokkeren totdat de taak voltooid is. Zie voor meer informatie [asynchrone programmering met Async en Await](~/add/includes/ajax-current-ext-md.md).       Als de bewerking is geannuleerd voordat deze is voltooid, wordt de resulterende taak bevat de <xref:System.Threading.Tasks.TaskStatus>waarde voor de <xref:System.Threading.Tasks.Task.Status%2A>eigenschap.</xref:System.Threading.Tasks.Task.Status%2A> </xref:System.Threading.Tasks.TaskStatus>"
  syntax:
    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer om de gegevens in te schrijven."
    - id: offset
      type: System.Int32
      description: "De byte-offset in `buffer` waarop u wilt beginnen met het schrijven van gegevens uit de stroom."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te lezen."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Het token voor annulering aanvragen bewaken. De standaardwaarde is <xref:System.Threading.CancellationToken.None*>.</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "Een taak die staat voor de asynchrone leesbewerking. De waarde van het taakobject <code> TResult </code> parameter bevat het totale aantal bytes dat is gelezen in de buffer. Het resultaat zijn dat kleiner is dan het aantal bytes aangevraagd als het aantal bytes momenteel beschikbaar kleiner dan het gevraagde aantal is of kan de waarde 0 (nul) als het einde van de stroom is bereikt."
  overload: System.Security.Cryptography.CryptoStream.ReadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>of <code>count</code> negatief is."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De som van <code> offset </code> en <code> count </code> groter is dan de bufferlengte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor lezen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De stroom is verwijderd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom wordt momenteel gebruikt door een eerdere bewerking met lezen."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: CryptoStream.Seek(Int64,SeekOrigin)
  fullName: System.Security.Cryptography.CryptoStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee stelt de positie in de huidige stroom."
  remarks: "Deze methode bestaat alleen als u wilt ondersteunen overname van <xref:System.IO.Stream>, en kan niet worden gebruikt.</xref:System.IO.Stream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Een byte-offset relatief de `origin` parameter."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Een <xref:System.IO.SeekOrigin>object dat u gebruikt voor het verkrijgen van de nieuwe positie referentiepunt aangeeft.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Deze methode wordt niet ondersteund."
  overload: System.Security.Cryptography.CryptoStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode wordt niet ondersteund."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: CryptoStream.SetLength(Int64)
  fullName: System.Security.Cryptography.CryptoStream.SetLength(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hiermee stelt u de lengte van de huidige stroom."
  remarks: "Deze eigenschap is alleen ter ondersteuning van overname van <xref:System.IO.Stream>, en kan niet worden gebruikt.</xref:System.IO.Stream>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "De gewenste lengte van de huidige stroom in bytes."
  overload: System.Security.Cryptography.CryptoStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze eigenschap is alleen ter ondersteuning van overname van <xref:System.IO.Stream>, en kan niet worden gebruikt.</xref:System.IO.Stream>"
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: CryptoStream.Write(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Een reeks bytes geschreven naar het huidige <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> en verplaatst u de huidige positie in de stroom met het aantal geschreven bytes."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een matrix met bytes. Deze methode wordt gekopieerd `count` bytes uit `buffer` naar de huidige stroom."
    - id: offset
      type: System.Int32
      description: "De byte-offset in `buffer` waarop u wilt beginnen met het kopiëren van bytes naar de huidige stroom."
    - id: count
      type: System.Int32
      description: "Het aantal bytes dat moet worden geschreven naar de huidige stroom."
  overload: System.Security.Cryptography.CryptoStream.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> die zijn gekoppeld aan de huidige <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> object komt niet overeen met de onderliggende stroom.  Bijvoorbeeld: deze uitzondering bij gebruik van <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> met een onderliggende stroom die alleen-lezen is."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> offset </code> parameter kleiner is dan nul.       - of - de <code> count </code> parameter kleiner is dan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De som van de <code> count </code> en <code> offset </code> parameters is langer dan de lengte van de buffer."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Een reeks bytes asynchroon schrijft naar de huidige stroom, verplaatst de huidige positie in de stroom met het aantal geschreven bytes en controleert annulering aanvragen."
  remarks: "De aanroep van WriteAsync met moet worden voorafgegaan de `await` (C#) of `Await` (Visual Basic)-operator om uitvoering van de methode blokkeren totdat de taak voltooid is. Zie voor meer informatie [asynchrone programmering met Async en Await](~/add/includes/ajax-current-ext-md.md).       Als de bewerking is geannuleerd voordat deze is voltooid, wordt de resulterende taak bevat de <xref:System.Threading.Tasks.TaskStatus>waarde voor de <xref:System.Threading.Tasks.Task.Status%2A>eigenschap.</xref:System.Threading.Tasks.Task.Status%2A> </xref:System.Threading.Tasks.TaskStatus>"
  syntax:
    content: public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer om gegevens uit te schrijven."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in `buffer` waaruit bytes schrijven naar de stroom."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te schrijven."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Het token voor annulering aanvragen bewaken. De standaardwaarde is <xref:System.Threading.CancellationToken.None*>.</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone schrijfbewerking vertegenwoordigt."
  overload: System.Security.Cryptography.CryptoStream.WriteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>of <code>count</code> negatief is."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De som van <code> offset </code> en <code> count </code> groter is dan de bufferlengte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor schrijven."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De stroom is verwijderd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom wordt momenteel gebruikt door een eerdere bewerking met schrijven."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  nameWithType: CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  fullName: System.Security.Cryptography.CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.CryptoStreamMode
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptoStreamMode
  nameWithType: CryptoStreamMode
  fullName: System.Security.Cryptography.CryptoStreamMode
- uid: System.Security.Cryptography.CryptoStream.CanRead
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanRead
  nameWithType: CryptoStream.CanRead
  fullName: System.Security.Cryptography.CryptoStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CryptoStream.CanSeek
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanSeek
  nameWithType: CryptoStream.CanSeek
  fullName: System.Security.Cryptography.CryptoStream.CanSeek
- uid: System.Security.Cryptography.CryptoStream.CanWrite
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanWrite
  nameWithType: CryptoStream.CanWrite
  fullName: System.Security.Cryptography.CryptoStream.CanWrite
- uid: System.Security.Cryptography.CryptoStream.Clear
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Clear()
  nameWithType: CryptoStream.Clear()
  fullName: System.Security.Cryptography.CryptoStream.Clear()
- uid: System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CryptoStream.Dispose(Boolean)
  fullName: System.Security.Cryptography.CryptoStream.Dispose(Boolean)
- uid: System.Security.Cryptography.CryptoStream.Flush
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Flush()
  nameWithType: CryptoStream.Flush()
  fullName: System.Security.Cryptography.CryptoStream.Flush()
- uid: System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: FlushAsync(CancellationToken)
  nameWithType: CryptoStream.FlushAsync(CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.FlushAsync(CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Security.Cryptography.CryptoStream.FlushFinalBlock
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: FlushFinalBlock()
  nameWithType: CryptoStream.FlushFinalBlock()
  fullName: System.Security.Cryptography.CryptoStream.FlushFinalBlock()
- uid: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: HasFlushedFinalBlock
  nameWithType: CryptoStream.HasFlushedFinalBlock
  fullName: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
- uid: System.Security.Cryptography.CryptoStream.Length
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Length
  nameWithType: CryptoStream.Length
  fullName: System.Security.Cryptography.CryptoStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Security.Cryptography.CryptoStream.Position
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Position
  nameWithType: CryptoStream.Position
  fullName: System.Security.Cryptography.CryptoStream.Position
- uid: System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: CryptoStream.Read(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoStream.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: CryptoStream.Seek(Int64,SeekOrigin)
  fullName: System.Security.Cryptography.CryptoStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Security.Cryptography.CryptoStream.SetLength(System.Int64)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: CryptoStream.SetLength(Int64)
  fullName: System.Security.Cryptography.CryptoStream.SetLength(Int64)
- uid: System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: CryptoStream.Write(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoStream.Write(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
- uid: System.Security.Cryptography.CryptoStream.#ctor*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CryptoStream
  nameWithType: CryptoStream.CryptoStream
- uid: System.Security.Cryptography.CryptoStream.CanRead*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanRead
  nameWithType: CryptoStream.CanRead
- uid: System.Security.Cryptography.CryptoStream.CanSeek*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanSeek
  nameWithType: CryptoStream.CanSeek
- uid: System.Security.Cryptography.CryptoStream.CanWrite*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanWrite
  nameWithType: CryptoStream.CanWrite
- uid: System.Security.Cryptography.CryptoStream.Clear*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Clear
  nameWithType: CryptoStream.Clear
- uid: System.Security.Cryptography.CryptoStream.Dispose*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Dispose
  nameWithType: CryptoStream.Dispose
- uid: System.Security.Cryptography.CryptoStream.Flush*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Flush
  nameWithType: CryptoStream.Flush
- uid: System.Security.Cryptography.CryptoStream.FlushAsync*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: FlushAsync
  nameWithType: CryptoStream.FlushAsync
- uid: System.Security.Cryptography.CryptoStream.FlushFinalBlock*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: FlushFinalBlock
  nameWithType: CryptoStream.FlushFinalBlock
- uid: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: HasFlushedFinalBlock
  nameWithType: CryptoStream.HasFlushedFinalBlock
- uid: System.Security.Cryptography.CryptoStream.Length*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Length
  nameWithType: CryptoStream.Length
- uid: System.Security.Cryptography.CryptoStream.Position*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Position
  nameWithType: CryptoStream.Position
- uid: System.Security.Cryptography.CryptoStream.Read*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Read
  nameWithType: CryptoStream.Read
- uid: System.Security.Cryptography.CryptoStream.ReadAsync*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: ReadAsync
  nameWithType: CryptoStream.ReadAsync
- uid: System.Security.Cryptography.CryptoStream.Seek*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Seek
  nameWithType: CryptoStream.Seek
- uid: System.Security.Cryptography.CryptoStream.SetLength*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: SetLength
  nameWithType: CryptoStream.SetLength
- uid: System.Security.Cryptography.CryptoStream.Write*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Write
  nameWithType: CryptoStream.Write
- uid: System.Security.Cryptography.CryptoStream.WriteAsync*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: WriteAsync
  nameWithType: CryptoStream.WriteAsync
