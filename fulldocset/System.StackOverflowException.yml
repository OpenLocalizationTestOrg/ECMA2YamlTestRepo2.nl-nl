### YamlMime:ManagedReference
items:
- uid: System.StackOverflowException
  id: StackOverflowException
  children:
  - System.StackOverflowException.#ctor
  - System.StackOverflowException.#ctor(System.String)
  - System.StackOverflowException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: StackOverflowException
  nameWithType: StackOverflowException
  fullName: System.StackOverflowException
  type: Class
  summary: "De uitzondering die wordt gegenereerd wanneer de stack kan worden uitgevoerd omdat deze te veel geneste methodeaanroepen bevat overschrijdt. Deze klasse kan niet worden overgenomen."
  remarks: "StackOverflowException wordt voor uitvoering stack-overloopfouten, doorgaans in geval van een erg diep of unbounded recursie gegenereerd.       StackOverflowException maakt gebruik van de HRESULT COR_E_STACKOVERFLOW, dat de waarde 0x800703E9 heeft. De <xref:System.Reflection.Emit.OpCodes.Localloc>tussentaal (IL) instructie genereert StackOverflowException.</xref:System.Reflection.Emit.OpCodes.Localloc> Zie voor een lijst met eerste eigenschapswaarden voor een object StackOverflowException de <xref:System.StackOverflowException.%23ctor%2A>constructors.</xref:System.StackOverflowException.%23ctor%2A>      ## Overwegingen voor versie In de .NET Framework 1.0 en 1.1, kan een object StackOverflowException (bijvoorbeeld om te herstellen van unbounded recursie) catch. Beginnen met .NET Framework 2.0, kan niet u een object met een StackOverflowException catch een `try` / `catch` blokkeren en in het bijbehorende proces is beëindigd standaard. Daarom moet u uw code om te detecteren en te voorkomen dat een stack-overloop. Bijvoorbeeld, als uw app, is afhankelijk van recursie, gebruiken een item of een voorwaarde staat de lus recursieve is beëindigd. Het volgende voorbeeld wordt een item om ervoor te zorgen dat het aantal recursieve naar aanroepen de `Execute` methode maximaal gedefinieerd door de constante MAX_RECURSIVE_CALLS niet overschrijden.       [!code-vb[System.StackOverflowException.Class#1](~/add/codesnippet/visualbasic/t-system.stackoverflowex_1.vb)][!code-cs[System.StackOverflowException.Class#1](~/add/codesnippet/csharp/t-system.stackoverflowex_1.cs) ]       >  [!NOTE] > toepassen de <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>kenmerk aan een methode die een StackOverflowException genereert heeft geen effect.</xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>   U kunt niet de uitzondering van gebruikerscode verwerken.       Als uw app als host fungeert voor de common language runtime (CLR), kunt dit opgeven dat het toepassingsdomein waarin de stackoverloopuitzondering optreedt en het bijbehorende proces doorgaan, kunnen door de CLR moet verwijderen. Zie voor meer informatie [ICLRPolicyManager Interface](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StackOverflowException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor
  id: '#ctor'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.StackOverflowException&quot;> </xref> klasse, instellen van de <xref:System.Exception.Message*>eigenschap van het nieuwe exemplaar op een systeem geleverd bericht die de fout wordt beschreven, zoals &quot;voor de aangevraagde bewerking heeft een stack-overloop veroorzaakt.&quot;</xref:System.Exception.Message*> Dit bericht wordt rekening gehouden met de huidige systeemcultuur."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| De gelokaliseerde fouttekenreeks bericht. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException ();
    parameters: []
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.StackOverflowException&quot;> </xref> klasse met een opgegeven foutbericht."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Een null-verwijzing (`Nothing` in Visual Basic). |   | <xref:System.Exception.Message%2A>| De fouttekenreeks bericht. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een <xref:System.String>die de fout wordt beschreven.</xref:System.String> De inhoud van bericht is bedoeld om te worden geïnterpreteerd door mensen. De aanroeper van deze constructor is vereist om ervoor te zorgen dat deze tekenreeks gelokaliseerd voor de huidige systeemcultuur."
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.StackOverflowException&quot;> </xref> klasse met een opgegeven foutbericht en een verwijzing naar de interne uitzondering dat de oorzaak van deze uitzondering."
  remarks: "Een uitzondering die is gegenereerd als direct resultaat van een eerdere uitzondering kan bevatten een verwijzing naar de vorige uitzondering in de <xref:System.Exception.InnerException%2A>eigenschap.</xref:System.Exception.InnerException%2A> De <xref:System.Exception.InnerException%2A>eigenschap dezelfde waarde die is doorgegeven aan de constructor of een null-verwijzing (`Nothing` in Visual Basic) als de <xref:System.Exception.InnerException%2A>eigenschap levert niet de waarde van de binnenste uitzondering voor de constructor.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       De volgende tabel toont de eerste waarden voor een exemplaar van <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Eigenschap | Waarde |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| De verwijzing naar de interne uitzondering. |   | <xref:System.Exception.Message%2A>| De fouttekenreeks bericht. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Het foutbericht met uitleg over de reden voor de uitzondering."
    - id: innerException
      type: System.Exception
      description: "De uitzondering die de oorzaak van de huidige uitzondering. Als de `innerException` parameter is niet een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic), de huidige uitzondering is opgetreden tijdens een <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> blok die verantwoordelijk is voor de interne uitzondering."
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.StackOverflowException.#ctor
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
- uid: System.StackOverflowException.#ctor(System.String)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.StackOverflowException.#ctor*
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException
  nameWithType: StackOverflowException.StackOverflowException
