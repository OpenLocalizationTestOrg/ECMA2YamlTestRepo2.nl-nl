### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.InvokeWebServiceActivity
  id: InvokeWebServiceActivity
  children:
  - System.Workflow.Activities.InvokeWebServiceActivity.#ctor
  - System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)
  - System.Workflow.Activities.InvokeWebServiceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.InvokeWebServiceActivity.Invoked
  - System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent
  - System.Workflow.Activities.InvokeWebServiceActivity.Invoking
  - System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent
  - System.Workflow.Activities.InvokeWebServiceActivity.MethodName
  - System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty
  - System.Workflow.Activities.InvokeWebServiceActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings
  - System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty
  - System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass
  - System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty
  - System.Workflow.Activities.InvokeWebServiceActivity.SessionId
  - System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty
  - System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: InvokeWebServiceActivity
  nameWithType: InvokeWebServiceActivity
  fullName: System.Workflow.Activities.InvokeWebServiceActivity
  type: Class
  summary: "Hiermee wordt een webservice via een proxy-klasse die wordt doorgegeven en ontvangt parameters opgegeven. Deze klasse kan niet worden overgenomen."
  remarks: >-
    > [!NOTE]

    >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.InvokeWebServiceDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.Activities.InvokeWebServiceToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.InvokeWebServiceActivity), "Resources.WebServiceInOut.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.InvokeWebServiceValidator))]

      public sealed class InvokeWebServiceActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements:
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: InvokeWebServiceActivity()
  nameWithType: InvokeWebServiceActivity.InvokeWebServiceActivity()
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.InvokeWebServiceActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Activities.InvokeWebServiceActivity&quot;> </xref> klasse."
  syntax:
    content: public InvokeWebServiceActivity ();
    parameters: []
  overload: System.Workflow.Activities.InvokeWebServiceActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: InvokeWebServiceActivity(String)
  nameWithType: InvokeWebServiceActivity.InvokeWebServiceActivity(String)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.InvokeWebServiceActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Activities.InvokeWebServiceActivity&quot;> </xref> klasse met de naam van de activiteit."
  syntax:
    content: public InvokeWebServiceActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "De gebruiker gedefinieerde naam van de activiteit."
  overload: System.Workflow.Activities.InvokeWebServiceActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: InvokeWebServiceActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Moet worden toegevoegd."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Moet worden toegevoegd."
  overload: System.Workflow.Activities.InvokeWebServiceActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.Invoked
  id: Invoked
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: Invoked
  nameWithType: InvokeWebServiceActivity.Invoked
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.Invoked
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Treedt op wanneer de webservice wordt aangeroepen."
  syntax:
    content: public event EventHandler<System.Workflow.Activities.InvokeWebServiceEventArgs> Invoked;
    return:
      type: System.EventHandler{System.Workflow.Activities.InvokeWebServiceEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent
  id: InvokedEvent
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: InvokedEvent
  nameWithType: InvokeWebServiceActivity.InvokedEvent
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref href=&quot;System.Workflow.Activities.InvokeWebServiceActivity.Invoked&quot;> </xref> gebeurtenis."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InvokedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.Invoking
  id: Invoking
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: Invoking
  nameWithType: InvokeWebServiceActivity.Invoking
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.Invoking
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Treedt op wanneer de webservice wordt aangeroepen."
  syntax:
    content: public event EventHandler<System.Workflow.Activities.InvokeWebServiceEventArgs> Invoking;
    return:
      type: System.EventHandler{System.Workflow.Activities.InvokeWebServiceEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent
  id: InvokingEvent
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: InvokingEvent
  nameWithType: InvokeWebServiceActivity.InvokingEvent
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref href=&quot;System.Workflow.Activities.InvokeWebServiceActivity.Invoking&quot;> </xref> gebeurtenis."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InvokingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.MethodName
  id: MethodName
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: MethodName
  nameWithType: InvokeWebServiceActivity.MethodName
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.MethodName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Opgehaald of ingesteld van de naam van de methode van de proxyklasse die voor de webservice wordt aangeroepen."
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "De methodenaam van de proxyklasse.  De standaardwaarde is een lege <xref:System.String>.</xref:System.String>"
  overload: System.Workflow.Activities.InvokeWebServiceActivity.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty
  id: MethodNameProperty
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: MethodNameProperty
  nameWithType: InvokeWebServiceActivity.MethodNameProperty
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref:System.Workflow.Activities.InvokeWebServiceActivity.MethodName*>eigenschap.</xref:System.Workflow.Activities.InvokeWebServiceActivity.MethodName*>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: InvokeWebServiceActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "Moet worden toegevoegd."
  overload: System.Workflow.Activities.InvokeWebServiceActivity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: InvokeWebServiceActivity.ParameterBindings
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee wordt de verzameling Parameterbindingen voor de methode die is opgegeven door de <xref:System.Workflow.Activities.InvokeWebServiceActivity.MethodName*>eigenschap.</xref:System.Workflow.Activities.InvokeWebServiceActivity.MethodName*>"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "Een <xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref> bij de methode opgegeven door <xref:System.Workflow.Activities.InvokeWebServiceActivity.MethodName*>eigenschap.</xref:System.Workflow.Activities.InvokeWebServiceActivity.MethodName*> De standaardwaarde is een lege verzameling van het type <xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref>."
  overload: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty
  id: ParameterBindingsProperty
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: ParameterBindingsProperty
  nameWithType: InvokeWebServiceActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings*>eigenschap.</xref:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings*>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass
  id: ProxyClass
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: ProxyClass
  nameWithType: InvokeWebServiceActivity.ProxyClass
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Opgehaald of ingesteld van het type van de proxyklasse gebruikt om te communiceren met de webservice."
  remarks: "Als deze eigenschap wordt ingesteld als de activiteit in de runtime-modus een <xref:System.Data.ReadOnlyException>gegenereerd.</xref:System.Data.ReadOnlyException>"
  syntax:
    content: public Type ProxyClass { get; set; }
    return:
      type: System.Type
      description: "<xref:System.Type>van de proxy die wordt gebruikt voor het starten van de webservice.</xref:System.Type> De standaardwaarde is een lege <xref:System.String>.</xref:System.String>"
  overload: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty
  id: ProxyClassProperty
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: ProxyClassProperty
  nameWithType: InvokeWebServiceActivity.ProxyClassProperty
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass*>eigenschap.</xref:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass*>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ProxyClassProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.SessionId
  id: SessionId
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: SessionId
  nameWithType: InvokeWebServiceActivity.SessionId
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.SessionId
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Opgehaald of ingesteld van een sessie-id die aangeeft of de sessie wordt gedeeld in een activiteit of als een nieuwe sessie wordt gebruikt."
  remarks: "Als een eerdere <xref:System.Workflow.Activities.InvokeWebServiceActivity.SessionID%2A>wordt gebruikt, wordt de sessie gedeeld.</xref:System.Workflow.Activities.InvokeWebServiceActivity.SessionID%2A>"
  syntax:
    content: public string SessionId { get; set; }
    return:
      type: System.String
      description: "Een id die bevat de <xref:System.Workflow.Activities.InvokeWebServiceActivity.SessionID*>van een eerdere sessie of een lege <xref:System.String>die aangeeft dat een nieuwe sessie wordt gebruikt.</xref:System.String> </xref:System.Workflow.Activities.InvokeWebServiceActivity.SessionID*> De standaardwaarde is een lege <xref:System.String>.</xref:System.String>"
  overload: System.Workflow.Activities.InvokeWebServiceActivity.SessionId*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty
  id: SessionIdProperty
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: SessionIdProperty
  nameWithType: InvokeWebServiceActivity.SessionIdProperty
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref:System.Workflow.Activities.InvokeWebServiceActivity.SessionId*>eigenschap.</xref:System.Workflow.Activities.InvokeWebServiceActivity.SessionId*>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty SessionIdProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Retourneert het toegangstype voor de opgegeven eigenschap."
  remarks: "Tijdens de compilatie gebruikt om te valideren of de eigenschappen correct zijn gebonden aan een andere. Deze informatie is zonder deze interface afgeleid rechtstreeks van eigenschapinstellers getter."
  syntax:
    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Een object dat wordt geïmplementeerd <xref:System.IServiceProvider>voor toegang tot het moment van ontwerpen als ze vereist zijn.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "De naam van de eigenschap."
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "Een <xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref> opsommingswaarde die staat voor het toegangsniveau van de eigenschap."
  overload: System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Retourneert de <xref:System.Type>van de opgegeven eigenschap.</xref:System.Type>"
  remarks: "Tijdens de compilatie gebruikt om te valideren of de eigenschappen correct zijn gebonden aan een andere."
  syntax:
    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Een object dat wordt geïmplementeerd <xref:System.IServiceProvider>voor toegang tot het moment van ontwerpen als ze vereist zijn.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "De naam van de eigenschap."
    return:
      type: System.Type
      description: "De <xref:System.Type>voor de eigenschap waarvan de naam is doorgegeven als de <code> propertyName  </code>parameter.</xref:System.Type>"
  overload: System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.InvokeWebServiceActivity.#ctor
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: InvokeWebServiceActivity()
  nameWithType: InvokeWebServiceActivity.InvokeWebServiceActivity()
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.InvokeWebServiceActivity()
- uid: System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: InvokeWebServiceActivity(String)
  nameWithType: InvokeWebServiceActivity.InvokeWebServiceActivity(String)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.InvokeWebServiceActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.InvokeWebServiceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: InvokeWebServiceActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.InvokeWebServiceActivity.Invoked
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: Invoked
  nameWithType: InvokeWebServiceActivity.Invoked
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.Invoked
- uid: System.EventHandler{System.Workflow.Activities.InvokeWebServiceEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<InvokeWebServiceEventArgs>
  nameWithType: EventHandler<InvokeWebServiceEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.InvokeWebServiceEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.InvokeWebServiceEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.InvokeWebServiceEventArgs
    name: InvokeWebServiceEventArgs
    nameWithType: InvokeWebServiceEventArgs
    fullName: InvokeWebServiceEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: InvokedEvent
  nameWithType: InvokeWebServiceActivity.InvokedEvent
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.InvokeWebServiceActivity.Invoking
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: Invoking
  nameWithType: InvokeWebServiceActivity.Invoking
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.Invoking
- uid: System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: InvokingEvent
  nameWithType: InvokeWebServiceActivity.InvokingEvent
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent
- uid: System.Workflow.Activities.InvokeWebServiceActivity.MethodName
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: MethodName
  nameWithType: InvokeWebServiceActivity.MethodName
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.MethodName
- uid: System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: MethodNameProperty
  nameWithType: InvokeWebServiceActivity.MethodNameProperty
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty
- uid: System.Workflow.Activities.InvokeWebServiceActivity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: InvokeWebServiceActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.OnClosed(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: InvokeWebServiceActivity.ParameterBindings
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: ParameterBindingsProperty
  nameWithType: InvokeWebServiceActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: ProxyClass
  nameWithType: InvokeWebServiceActivity.ProxyClass
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: ProxyClassProperty
  nameWithType: InvokeWebServiceActivity.ProxyClassProperty
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty
- uid: System.Workflow.Activities.InvokeWebServiceActivity.SessionId
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: SessionId
  nameWithType: InvokeWebServiceActivity.SessionId
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.SessionId
- uid: System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: SessionIdProperty
  nameWithType: InvokeWebServiceActivity.SessionIdProperty
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty
- uid: System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Workflow.Activities.InvokeWebServiceActivity.#ctor*
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: InvokeWebServiceActivity
  nameWithType: InvokeWebServiceActivity.InvokeWebServiceActivity
- uid: System.Workflow.Activities.InvokeWebServiceActivity.Execute*
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: Execute
  nameWithType: InvokeWebServiceActivity.Execute
- uid: System.Workflow.Activities.InvokeWebServiceActivity.MethodName*
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: MethodName
  nameWithType: InvokeWebServiceActivity.MethodName
- uid: System.Workflow.Activities.InvokeWebServiceActivity.OnClosed*
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: OnClosed
  nameWithType: InvokeWebServiceActivity.OnClosed
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings*
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: InvokeWebServiceActivity.ParameterBindings
- uid: System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass*
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: ProxyClass
  nameWithType: InvokeWebServiceActivity.ProxyClass
- uid: System.Workflow.Activities.InvokeWebServiceActivity.SessionId*
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: SessionId
  nameWithType: InvokeWebServiceActivity.SessionId
- uid: System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  nameWithType: InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  parent: System.Workflow.Activities.InvokeWebServiceActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  nameWithType: InvokeWebServiceActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
