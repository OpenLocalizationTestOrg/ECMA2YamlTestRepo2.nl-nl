### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlConnection
  id: SqlConnection
  children:
  - System.Data.SqlClient.SqlConnection.#ctor
  - System.Data.SqlClient.SqlConnection.#ctor(System.String)
  - System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  - System.Data.SqlClient.SqlConnection.AccessToken
  - System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  - System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  - System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  - System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  - System.Data.SqlClient.SqlConnection.ClearAllPools
  - System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlConnection.ClientConnectionId
  - System.Data.SqlClient.SqlConnection.Close
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  - System.Data.SqlClient.SqlConnection.ConnectionString
  - System.Data.SqlClient.SqlConnection.ConnectionTimeout
  - System.Data.SqlClient.SqlConnection.CreateCommand
  - System.Data.SqlClient.SqlConnection.CreateDbCommand
  - System.Data.SqlClient.SqlConnection.Credential
  - System.Data.SqlClient.SqlConnection.Database
  - System.Data.SqlClient.SqlConnection.DataSource
  - System.Data.SqlClient.SqlConnection.DbProviderFactory
  - System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  - System.Data.SqlClient.SqlConnection.GetSchema
  - System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  - System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  - System.Data.SqlClient.SqlConnection.InfoMessage
  - System.Data.SqlClient.SqlConnection.Open
  - System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlConnection.PacketSize
  - System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  - System.Data.SqlClient.SqlConnection.ResetStatistics
  - System.Data.SqlClient.SqlConnection.RetrieveStatistics
  - System.Data.SqlClient.SqlConnection.ServerVersion
  - System.Data.SqlClient.SqlConnection.State
  - System.Data.SqlClient.SqlConnection.StatisticsEnabled
  - System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  - System.Data.SqlClient.SqlConnection.WorkstationId
  langs:
  - csharp
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
  type: Class
  summary: "Hiermee geeft u een open verbinding met een [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database. Deze klasse kan niet worden overgenomen."
  remarks: "A SqlConnection object represents a unique session to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] data source. With a client/server database system, it is equivalent to a network connection to the server. SqlConnection is used together with <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlCommand> to increase performance when connecting to a Microsoft [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database. For all third-party [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] products, and other OLE DB-supported data sources, use <xref:System.Data.OleDb.OleDbConnection>.  \n  \n When you create an instance of SqlConnection, all properties are set to their initial values. For a list of these values, see the SqlConnection constructor.  \n  \n See <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> for a list of the keywords in a connection string.  \n  \n If the SqlConnection goes out of scope, it won't be closed. Therefore, you must explicitly close the connection by calling `Close` or `Dispose`. `Close` and `Dispose` are functionally equivalent. If the connection pooling value `Pooling` is set to `true` or `yes`, the underlying connection is returned back to the connection pool. On the other hand, if `Pooling` is set to `false` or `no`, the underlying connection to the server is actually closed.  \n  \n> [!NOTE]\n>  Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool. For more information, see [SQL Server Connection Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md).  \n  \n To ensure that connections are always closed, open the connection inside of a `using` block, as shown in the following code fragment. Doing so ensures that the connection is automatically closed when the code exits the block.  \n  \n```vb#  \nUsing connection As New SqlConnection(connectionString)  \n    connection.Open()  \n    ' Do work here; connection closed on following line.  \nEnd Using  \n  \n```  \n  \n```c#  \nusing (SqlConnection connection = new SqlConnection(connectionString))  \n    {  \n        connection.Open();  \n        // Do work here; connection closed on following line.  \n    }  \n```  \n  \n> [!NOTE]\n>  To deploy high-performance applications, you must use connection pooling. When you use the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], you do not have to enable connection pooling because the provider manages this automatically, although you can modify some settings. For more information, see [SQL Server Connection Pooling (ADO.NET)](../Topic/SQL%20Server%20Connection%20Pooling%20\\(ADO.NET\\).md).  \n  \n If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the SqlConnection remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the SqlConnection. However, the user can reopen the connection and continue.  \n  \n An application that creates an instance of the SqlConnection object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. SqlConnection makes security demands using the <xref:System.Data.SqlClient.SqlClientPermission> object. Users can verify that their code has sufficient permissions by using the <xref:System.Data.SqlClient.SqlClientPermissionAttribute> object. Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/add/includes/ajax-current-ext-md.md) to modify security policy at the machine, user, and enterprise levels. For more information, see [Security](~/add/includes/ajax-current-ext-md.md). For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md).  \n  \n For more information about handling warning and informational messages from the server, see [Connection Events](~/add/includes/ajax-current-ext-md.md). [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] engine errors and error messages are documented in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.  \n  \n> [!CAUTION]\n>  You can force TCP instead of shared memory. You can do that by prefixing tcp: to the server name in the connection string or you can use localhost."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and a SqlConnection. The SqlConnection is opened and set as the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> for the <xref:System.Data.SqlClient.SqlCommand>. The example then calls <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. To accomplish this, the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is a [!INCLUDE[tsql](~/add/includes/tsql-md.md)] INSERT statement. The connection is closed automatically when the code exits the using block.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._4_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection()
  nameWithType: SqlConnection.SqlConnection()
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klasse."
  remarks: "Wanneer een nieuw exemplaar van <xref:System.Data.SqlClient.SqlConnection>is gemaakt, de lezen/schrijven eigenschappen zijn ingesteld op de volgende Beginwaarden tenzij ze zijn specifiek ingesteld met behulp van hun bijbehorende trefwoorden in de <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>eigenschap.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>| lege tekenreeks (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.SqlClient.SqlConnection.Database%2A>| lege tekenreeks (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>| lege tekenreeks (&quot;&quot;) |       U kunt de waarde voor deze eigenschappen wijzigen alleen met behulp van de <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>eigenschap.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A> </xref:System.Data.SqlClient.SqlConnection.Database%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> De <xref:System.Data.SqlClient.SqlConnectionStringBuilder>klasse biedt functionaliteit voor het maken en beheren van de inhoud van verbindingsreeksen.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._17_1.vb)]\n [!code-cs[Classic WebData SqlConnection.SqlConnection Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._17_1.cs)]"
  syntax:
    content: public SqlConnection ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection(String)
  nameWithType: SqlConnection.SqlConnection(String)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klasse als een tekenreeks met de verbindingsreeks opgegeven."
  remarks: "Wanneer een nieuw exemplaar van <xref:System.Data.SqlClient.SqlConnection>is gemaakt, de lezen/schrijven eigenschappen zijn ingesteld op de volgende Beginwaarden tenzij ze zijn specifiek ingesteld met behulp van hun bijbehorende trefwoorden in de <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>eigenschap.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.SqlClient.SqlConnection.Database%2A>| lege tekenreeks (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>| lege tekenreeks (&quot;&quot;) |       U kunt de waarde voor deze eigenschappen wijzigen alleen met behulp van de <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>eigenschap.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A> </xref:System.Data.SqlClient.SqlConnection.Database%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> De <xref:System.Data.SqlClient.SqlConnection>klasse biedt functionaliteit voor het maken en beheren van de inhoud van verbindingsreeksen.</xref:System.Data.SqlClient.SqlConnection>"
  example:
  - "The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._38_1.vb)]\n [!code-cs[Classic WebData SqlConnection.SqlConnection1 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._38_1.cs)]"
  syntax:
    content: public SqlConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "De verbinding die wordt gebruikt om te openen de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database."
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  id: '#ctor(System.String,System.Data.SqlClient.SqlCredential)'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection(String,SqlCredential)
  nameWithType: SqlConnection.SqlConnection(String,SqlCredential)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String,SqlCredential)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klasse krijgt een verbindingsreeks die u geen gebruikt <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref> en een <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> -object dat de gebruikers-ID en het wachtwoord bevat."
  syntax:
    content: public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);
    parameters:
    - id: connectionString
      type: System.String
      description: 'Een verbindingsreeks die u maakt geen gebruik van de volgende tekenreeks sleutelwoorden voor verbinding: <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, of <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>; of gebruikt geen <xref uid=&quot;langword_csharp_ContextConnection = true&quot; name=&quot;ContextConnection = true&quot; href=&quot;&quot;> </xref>.'
    - id: credential
      type: System.Data.SqlClient.SqlCredential
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object. Als `credential` is null, SqlConnection-exemplaar is functioneel equivalent met &lt;xref:System.Data.SqlClient.SqlConnection.%23ctor%2A&gt;."
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.AccessToken
  id: AccessToken
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
  fullName: System.Data.SqlClient.SqlConnection.AccessToken
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van het toegangstoken voor de verbinding."
  syntax:
    content: public string AccessToken { get; set; }
    return:
      type: System.String
      description: "Het toegangstoken voor de verbinding."
  overload: System.Data.SqlClient.SqlConnection.AccessToken*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Moet worden toegevoegd."
    return:
      type: System.Data.Common.DbTransaction
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: SqlConnection.BeginTransaction()
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een databasetransactie start."
  remarks: "Deze opdracht wordt toegewezen aan de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] uitvoering van BEGIN TRANSACTION.       U moet expliciet doorvoeren of terugdraaien van de transactie met behulp van de <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>of <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>methode.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Om ervoor te zorgen dat de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transactie management model correct functioneert, Vermijd het gebruik van andere transactie management modellen, zoals opgegeven door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Als u een isolatieniveau niet opgeeft, het isolatieniveau standaard wordt gebruikt. Om op te geven van een isolatieniveau op met de <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>methode maakt gebruik van de overbelasting waarvoor de `iso` parameter (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>).</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> </xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> Het isolatieniveau instellen voor een transactie zich blijft voordoen nadat de transactie is voltooid en totdat de verbinding is gesloten of verwijderd. Instellen van de isolatie op **momentopname** in een database waarvoor het isolatieniveau momentopname niet is ingeschakeld een uitzondering niet genereren. De transactie wordt voltooid met het isolatieniveau standaard.      > [!CAUTION] > Als een transactie is gestart en een 16 niveau of een hogere fout op de server optreedt, de transactie wordt niet teruggedraaid totdat de <xref:System.Data.SqlClient.SqlDataReader.Read%2A>methode wordt aangeroepen.</xref:System.Data.SqlClient.SqlDataReader.Read%2A> Er is geen uitzondering op **ExecuteReader**.      > [!CAUTION] > Wanneer uw query retourneert een grote hoeveelheid gegevens en aanroepen `BeginTransaction`, een <xref:System.Data.SqlClient.SqlException>wordt gegenereerd omdat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] kan geen parallelle transacties bij gebruik van MARS.</xref:System.Data.SqlClient.SqlException> U voorkomt dit probleem, altijd koppelen een transactie met de opdracht en/of de verbinding voordat alle lezers geopend zijn.       Voor meer informatie over [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transacties, Zie &quot;Expliciete transacties&quot; en &quot;Efficiënte transacties coderen&quot; in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the BeginTransaction, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._1_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._1_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Parallelle transacties zijn niet toegestaan wanneer u meerdere Active Result Sets (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transacties worden niet ondersteund."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een databasetransactie begint met het opgegeven isolatieniveau."
  remarks: "Deze opdracht wordt toegewezen aan de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] uitvoering van BEGIN TRANSACTION.       U moet expliciet doorvoeren of terugdraaien van de transactie met behulp van de <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>of <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>methode.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Om ervoor te zorgen dat de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transactie management model correct functioneert, Vermijd het gebruik van andere transactie management modellen, zoals opgegeven door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Nadat een transactie is doorgevoerd of teruggedraaid, het isolatieniveau van de transactie zich blijft voordoen voor alle volgende opdrachten die in de modus met automatische doorvoer (de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] standaard). Dit kan leiden tot onverwachte resultaten, zoals een isolatieniveau van REPEATABLE READ behouden blijven en andere gebruikers buiten een rij vergrendelen. Uitvoeren als u het isolatieniveau herstellen op de standaardwaarde (READ COMMITTED), de [!INCLUDE[tsql](~/add/includes/tsql-md.md)] ingesteld transactie isolatie niveau READ COMMITTED-instructie of aanroep <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName>gevolgd door <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName>.</xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName> onmiddellijk</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName> Voor meer informatie over [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] isolatieniveaus, raadpleegt u &quot;Isolatie niveaus in de Database-Engine&quot; in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.       Voor meer informatie over [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transacties, Zie &quot;Expliciete transacties&quot; en &quot;Efficiënte transacties coderen&quot; in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.      > [!CAUTION] > Wanneer uw query retourneert een grote hoeveelheid gegevens en aanroepen `BeginTransaction`, een <xref:System.Data.SqlClient.SqlException>wordt gegenereerd omdat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] kan geen parallelle transacties bij gebruik van MARS.</xref:System.Data.SqlClient.SqlException> U voorkomt dit probleem, altijd koppelen een transactie met de opdracht en/of de verbinding voordat alle lezers geopend zijn."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/b09ea924-5f89-4203-b010-_1.vb)]\n [!code-cs[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/b09ea924-5f89-4203-b010-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "Het isolatieniveau op grond waarvan de transactie moet worden uitgevoerd."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Parallelle transacties zijn niet toegestaan wanneer u meerdere Active Result Sets (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transacties worden niet ondersteund."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  id: BeginTransaction(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(String)
  nameWithType: SqlConnection.BeginTransaction(String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een databasetransactie begint met de naam van de opgegeven transactie."
  remarks: "Deze opdracht wordt toegewezen aan de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] uitvoering van BEGIN TRANSACTION.       De lengte van de `transactionName` parameter mag niet groter zijn dan 32 tekens; anders wordt een uitzondering gegenereerd.       De waarde in de `transactionName` parameter kan worden gebruikt in aanroepen van hoger <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>en in de `savePoint` parameter van de <xref:System.Data.SqlClient.SqlTransaction.Save%2A>methode.</xref:System.Data.SqlClient.SqlTransaction.Save%2A> </xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>       U moet expliciet doorvoeren of terugdraaien van de transactie met behulp van de <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>of <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>methode.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Om ervoor te zorgen dat de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transactie management model correct functioneert, Vermijd het gebruik van andere transactie management modellen, zoals opgegeven door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].       Voor meer informatie over [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transacties, Zie &quot;Expliciete transacties&quot; en &quot;Efficiënte transacties coderen&quot; in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.      > [!CAUTION] > Wanneer uw query retourneert een grote hoeveelheid gegevens en aanroepen `BeginTransaction`, een <xref:System.Data.SqlClient.SqlException>wordt gegenereerd omdat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] kan geen parallelle transacties bij gebruik van MARS.</xref:System.Data.SqlClient.SqlException> U voorkomt dit probleem, altijd koppelen een transactie met de opdracht en/of de verbinding voordat alle lezers geopend zijn."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._36_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._36_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);
    parameters:
    - id: transactionName
      type: System.String
      description: "De naam van de transactie."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Parallelle transacties zijn niet toegestaan wanneer u meerdere Active Result Sets (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transacties worden niet ondersteund."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  id: BeginTransaction(System.Data.IsolationLevel,System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel,String)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel,String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een databasetransactie begint met de naam van het opgegeven isolatietype niveau en de transactie."
  remarks: "Deze opdracht wordt toegewezen aan de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] uitvoering van BEGIN TRANSACTION.       De waarde in de `transactionName` parameter kan worden gebruikt in aanroepen van hoger <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>en in de `savePoint` parameter van de <xref:System.Data.SqlClient.SqlTransaction.Save%2A>methode.</xref:System.Data.SqlClient.SqlTransaction.Save%2A> </xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>       U moet expliciet doorvoeren of terugdraaien van de transactie met behulp van de <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>of <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>methode.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Om ervoor te zorgen dat de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transactie beheermodel correct wordt uitgevoerd, Vermijd het gebruik van andere transactie management modellen, zoals opgegeven door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Nadat een transactie is doorgevoerd of teruggedraaid, het isolatieniveau van de transactie zich blijft voordoen voor alle volgende opdrachten die in de modus met automatische doorvoer (de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] standaard). Dit kan leiden tot onverwachte resultaten, zoals een isolatieniveau van REPEATABLE READ behouden blijven en andere gebruikers buiten een rij vergrendelen. Uitvoeren als u het isolatieniveau herstellen op de standaardwaarde (READ COMMITTED), de [!INCLUDE[tsql](~/add/includes/tsql-md.md)] ingesteld transactie isolatie niveau READ COMMITTED-instructie of aanroep <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName>gevolgd door <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName>.</xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName> onmiddellijk</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName> Voor meer informatie over [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] isolatieniveaus, raadpleegt u &quot;Isolatie niveaus in de Database-Engine&quot; in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.       Voor meer informatie over [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transacties, Zie &quot;Expliciete transacties&quot; en &quot;Efficiënte transacties coderen&quot; in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.      > [!CAUTION] > Wanneer uw query retourneert een grote hoeveelheid gegevens en aanroepen `BeginTransaction`, een <xref:System.Data.SqlClient.SqlException>wordt gegenereerd omdat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] kan geen parallelle transacties bij gebruik van MARS.</xref:System.Data.SqlClient.SqlException> U voorkomt dit probleem, altijd koppelen een transactie met de opdracht en/of de verbinding voordat alle lezers geopend zijn."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/add/codesnippet/csharp/1f00ab5d-aff7-46ea-8f1d-_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/add/codesnippet/visualbasic/1f00ab5d-aff7-46ea-8f1d-_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "Het isolatieniveau op grond waarvan de transactie moet worden uitgevoerd."
    - id: transactionName
      type: System.String
      description: "De naam van de transactie."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Parallelle transacties zijn niet toegestaan wanneer u meerdere Active Result Sets (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transacties worden niet ondersteund."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: SqlConnection.ChangeDatabase(String)
  fullName: System.Data.SqlClient.SqlConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wijzigingen van de huidige database voor een open <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "De waarde die is opgegeven de `database` parameter moet een geldige databasenaam op. De `database` parameter mag geen null-waarde, een lege tekenreeks of een tekenreeks met alleen spaties bevatten."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._10_1.cs)]\n [!code-vb[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._10_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string database);
    parameters:
    - id: database
      type: System.String
      description: "De naam van de database te gebruiken in plaats van de huidige database."
  overload: System.Data.SqlClient.SqlConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Naam van de database is niet geldig."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is niet geopend."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Kan de database niet wijzigen."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  id: ChangePassword(System.String,System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangePassword(String,String)
  nameWithType: SqlConnection.ChangePassword(String,String)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wijzigingen de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] wachtwoord voor de gebruiker die zijn aangegeven in de verbindingsreeks met het opgegeven wachtwoord."
  remarks: "Wanneer u gebruikt [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] op Windows Server ontwikkelaars kunnen profiteren van de functionaliteit waarmee de clienttoepassing zowel de huidige en een nieuw wachtwoord opgeven om het bestaande wachtwoord wijzigen. Toepassingen kunnen implementeren functionaliteit, zoals vraagt de gebruiker een nieuw wachtwoord tijdens de eerste aanmelding als de oude heeft is verlopen, en deze bewerking kan worden voltooid zonder tussenkomst van de beheerder.       De wijzigingen van de methode ChangePassword de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] wachtwoord voor de gebruiker die zijn aangegeven in de opgegeven `connectionString` -parameter voor de waarde die is opgegeven de `newPassword` parameter. Als u de verbindingsreeks de optie voor geïntegreerde beveiliging bevat (dat wil zeggen, &quot; Integrated Security = True &quot; of een vergelijkbare), een uitzondering gegenereerd.       Om te bepalen dat het wachtwoord is verlopen, aanroepen van de <xref:System.Data.SqlClient.SqlConnection.Open%2A>methode leidt tot een <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.Data.SqlClient.SqlConnection.Open%2A> Om aan te geven dat het wachtwoord dat is opgenomen in de verbindingsreeks moet opnieuw worden ingesteld, de <xref:System.Data.SqlClient.SqlException.Number%2A>eigenschap voor de uitzondering bevat de statuswaarde 18487 of 18488.</xref:System.Data.SqlClient.SqlException.Number%2A> De eerste waarde (18487) geeft aan dat het wachtwoord is verlopen en de tweede (18488) geeft aan dat het wachtwoord moet opnieuw worden ingesteld voordat u zich aanmeldt.       Deze methode een eigen verbinding met de server wordt geopend, wijzigen van het wachtwoord vraagt en de verbinding wordt gesloten, zodra deze is voltooid. Deze verbinding is niet opgehaald uit en niet de geretourneerd, de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] verbindingsgroep."
  example:
  - "The following is a simple example of changing a password:  \n  \n```  \nclass Program {  \n   static void Main(string[] args) {  \n      System.Data.SqlClient.SqlConnection.ChangePassword(  \n        \"Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password\",   \n       \"new_password\");  \n   }  \n}  \n  \n```  \n  \n```  \nModule Module1  \n    Sub Main()  \nSystem.Data.SqlClient.SqlConnection.ChangePassword(  \n        \"Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password\",   \n       \"new_password\")  \n    End Sub  \nEnd Module  \n  \n```  \n  \n The following console application demonstrates the issues involved in changing a user's password because the current password has expired.  \n  \n [!code-cs[DataWorks SqlConnection.ChangePassword#1](~/add/codesnippet/csharp/7b66f468-c7fc-4a76-bd4e-_1.cs)]\n [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/add/codesnippet/visualbasic/7b66f468-c7fc-4a76-bd4e-_1.vb)]"
  syntax:
    content: public static void ChangePassword (string connectionString, string newPassword);
    parameters:
    - id: connectionString
      type: System.String
      description: "De verbindingsreeks die onvoldoende informatie bevat om verbinding met de server die u wilt. De verbindingsreeks moet de gebruikers-ID en het huidige wachtwoord bevatten."
    - id: newPassword
      type: System.String
      description: "Het nieuwe wachtwoord in te stellen. Dit wachtwoord moet voldoen aan eventuele wachtwoord beveiligingsbeleid instellen op de server, inclusief minimumlengte vereisten voor specifieke tekens, enzovoort."
  overload: System.Data.SqlClient.SqlConnection.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De verbindingsreeks bevat de optie voor het gebruik van geïntegreerde beveiliging.       Of de <code> newPassword </code> bevat meer dan 128 tekens."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ofwel de <code> connectionString </code> of de <code> newPassword </code> -parameter is null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  id: ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangePassword(String,SqlCredential,SecureString)
  nameWithType: SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wijzigingen de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] wachtwoord voor de gebruiker die zijn aangegeven in de <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> object."
  syntax:
    content: public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);
    parameters:
    - id: connectionString
      type: System.String
      description: 'De verbindingsreeks die voldoende gegevens om te verbinden met een server bevat. De verbindingsreeks mag geen gebruik van de volgende tekenreeks sleutelwoorden voor verbinding: <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, of <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>; of <xref uid=&quot;langword_csharp_ContextConnection = true&quot; name=&quot;ContextConnection = true&quot; href=&quot;&quot;> </xref>.'
    - id: credential
      type: System.Data.SqlClient.SqlCredential
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object."
    - id: newSecurePassword
      type: System.Security.SecureString
      description: "Het nieuwe wachtwoord. `newSecurePassword`moet alleen-lezen. Het wachtwoord moet ook voldoen aan eventuele wachtwoord beveiligingsbeleid instellen op de server (bijvoorbeeld minimumlengte en vereisten voor specifieke tekens)."
  overload: System.Data.SqlClient.SqlConnection.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "1.De verbindingsreeks bevat een combinatie van <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>, of <xref uid=&quot;langword_csharp_Integrated Security=true&quot; name=&quot;Integrated Security=true&quot; href=&quot;&quot;> </xref>.      2.  De verbindingsreeks bevat <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;> </xref>.      3.  <code>newSecurePassword</code>is groter dan 128 tekens.      4.  <code>newSecurePassword</code>niet alleen-lezen.      5.  <code>newSecurePassword</code>een lege tekenreeks is."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the parameters (<code>connectionString</code>, <code>credential</code>, or <code>newSecurePassword</code>) is null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClearAllPools()
  nameWithType: SqlConnection.ClearAllPools()
  fullName: System.Data.SqlClient.SqlConnection.ClearAllPools()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Leegt de verbindingsgroep."
  remarks: "ClearAllPools herstelt u (of leegt) de verbindingsgroep. Als er verbindingen in gebruik is op het moment van de oproep, ze op de juiste wijze zijn gemarkeerd en zullen worden verwijderd (in plaats van aan de pool wordt geretourneerd) wanneer <xref:System.Data.SqlClient.SqlConnection.Close%2A>op deze wordt aangeroepen.</xref:System.Data.SqlClient.SqlConnection.Close%2A>"
  syntax:
    content: public static void ClearAllPools ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.ClearAllPools*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  id: ClearPool(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClearPool(SqlConnection)
  nameWithType: SqlConnection.ClearPool(SqlConnection)
  fullName: System.Data.SqlClient.SqlConnection.ClearPool(SqlConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Leegt de verbindingsgroep die zijn gekoppeld aan de opgegeven verbinding."
  remarks: "ClearPool wist de verbindingsgroep die is gekoppeld aan de `connection`. Als u extra verbindingen die zijn gekoppeld aan `connection` zijn in gebruik is op het moment van de oproep, ze op de juiste wijze zijn gemarkeerd en worden genegeerd (in plaats van aan de groep wordt geretourneerd) wanneer <xref:System.Data.SqlClient.SqlConnection.Close%2A>op deze wordt aangeroepen.</xref:System.Data.SqlClient.SqlConnection.Close%2A>"
  syntax:
    content: public static void ClearPool (System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> uit de pool worden gewist."
  overload: System.Data.SqlClient.SqlConnection.ClearPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId
  id: ClientConnectionId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
  fullName: System.Data.SqlClient.SqlConnection.ClientConnectionId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De verbindings-ID van de meest recente verbindingspoging, ongeacht of de poging is geslaagd of mislukt."
  remarks: "ClientConnectionId werkt ongeacht welke versie van de server die u verbinding met maken, maar de logboeken van de uitgebreide gebeurtenissen en post op connectiviteitsfouten ring buffer niet aanwezig zijn in [!INCLUDE[sskatmai_r2](~/add/includes/ajax-current-ext-md.md)] en eerdere versies.       U kunt de verbindings-ID vinden in het logboek voor uitgebreide gebeurtenissen om te zien als de fout op de server was als de uitgebreide gebeurtenis voor de verbindings-ID-logboekregistratie is ingeschakeld. U kunt ook de verbindings-ID vinden in de ringbuffer verbinding ([connectiviteit oplossen in SQL Server 2008 met de ringbuffer voor connectiviteit](http://go.microsoft.com/fwlink/?LinkId=207752)) voor bepaalde verbindingsfouten. Als de verbindings-ID niet in de ringbuffer verbinding, kunt u een netwerkfout uitgaan."
  syntax:
    content: public Guid ClientConnectionId { get; }
    return:
      type: System.Guid
      description: "De verbindings-ID van de meest recente verbinding proberen."
  overload: System.Data.SqlClient.SqlConnection.ClientConnectionId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Close
  id: Close
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Close()
  nameWithType: SqlConnection.Close()
  fullName: System.Data.SqlClient.SqlConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee sluit u de verbinding met de database. Dit is de voorkeursmethode voor een open verbinding wordt gesloten."
  remarks: "De methode Close teruggedraaid in de transacties die in behandeling. Vervolgens de verbinding met de verbindingsgroep releases of de verbinding wordt gesloten als Groepsgewijze verbinding nodig is uitgeschakeld.      > [!NOTE] > Transacties die zijn gestart met behulp van in behandeling [!INCLUDE[tsql](~/add/includes/tsql-md.md)] of <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>worden automatisch hersteld wanneer de verbinding wordt hersteld als Groepsgewijze verbinding nodig is ingeschakeld.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> Als Groepsgewijze verbinding nodig uitgeschakeld is, de transactie wordt teruggedraaid na `SqlConnection.Close` wordt aangeroepen. Gestarte transacties via <xref:System.Transactions>worden beheerd via de `System.Transactions` infrastructuur en zijn niet van invloed op een `SqlConnection.Close`.</xref:System.Transactions>       Een toepassing kunt sluiten meer dan één keer aanroepen. Er is geen uitzondering gegenereerd.       Als de <xref:System.Data.SqlClient.SqlConnection>gaan buiten bereik, won&quot;t worden gesloten.</xref:System.Data.SqlClient.SqlConnection> Daarom moet u expliciet sluiten de verbinding door het aanroepen van `Close` of `Dispose`. `Close`en `Dispose` functioneel equivalent zijn. Als de verbindingsgroepering waarde `Pooling` is ingesteld op `true` of `yes`, wordt de onderliggende verbinding terug naar de verbindingsgroep wordt geretourneerd. Aan de andere kant als `Pooling` is ingesteld op `false` of `no`, wordt de onderliggende verbinding met de server is gesloten.      > [!NOTE] > Aanmelding en afmelding gebeurtenissen niet weergegeven op de server als een verbinding die is opgehaald uit de of geretourneerd naar de verbindingsgroep omdat de verbinding niet daadwerkelijk gesloten is wanneer deze aan de verbindingsgroep wordt geretourneerd. Zie voor meer informatie [SQL Server-verbinding groeperen (ADO.NET)](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] > Niet aanroepen `Close` of `Dispose` op een verbinding, een DataReader of andere beheerde objecten in de `Finalize` methode van de klasse. In een finalizer, moet u alleen niet-beheerde bronnen waartoe de klasse rechtstreeks vrijgeven. Als uw klasse is geen eigenaar van een niet-beheerde bronnen, bevatten geen een `Finalize` methode in de klassedefinitie van de. Zie voor meer informatie [garbagecollection](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, displays some of its properties. The connection is automatically closed at the end of the `using` block.  \n  \n [!code-vb[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._20_1.vb)]\n [!code-cs[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._20_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.Close*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "De verbindingsniveau fout die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  id: ColumnEncryptionKeyCacheTtl
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld de time-to-live voor versleuteling van de kolom key vermeldingen in de cache van de kolomversleutelingssleutel voor de [altijd versleuteld](https://msdn.microsoft.com/library/mt163865.aspx) functie. De standaardwaarde is 2 uur. 0 betekent dat niet in cache opslaan op alle."
  syntax:
    content: public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }
    return:
      type: System.TimeSpan
      description: "Het tijdsinterval."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  id: ColumnEncryptionQueryMetadataCacheEnabled
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de query metagegevens opslaan in cache is ingeschakeld (true) of niet (false) voor query&quot;s uitvoeren in [altijd versleuteld](https://msdn.microsoft.com/library/mt163865.aspx) databases is ingeschakeld. De standaardwaarde is true."
  remarks: "Voor query&quot;s met parameters SqlClient maakt een retour met SQL Server voor de parameter-metagegevens, om te zien welke parameter moet worden versleuteld en hoe (welke sleutels en algoritmen moeten worden gebruikt). Als de toepassing wordt dezelfde query meerdere keren aangeroepen, wordt een extra RTT gemaakt met de server telkens die vermindert de toepassingsprestaties.       Met **ColumnEncryptionQueryMetadataCacheEnabled** ingesteld op true, als dezelfde query meerdere malen wordt aangeroepen, retour naar de server worden aangebracht slechts één keer. De cache heeft een parameter voor niet-configureerbare maximale grootte die is ingesteld op 2000 query&quot;s."
  syntax:
    content: public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }
    return:
      type: System.Boolean
      description: "Retourneert waar als de query metagegevens opslaan in cache is ingeschakeld; anders ONWAAR. de standaardwaarde is True."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  id: ColumnEncryptionTrustedMasterKeyPaths
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee kunt u een lijst van vertrouwde paden instellen voor een databaseserver. Als een toepassing query het stuurprogramma tijdens de verwerking van een sleutelpad die zich niet in de lijst ontvangt, mislukt de query. Deze eigenschap biedt aanvullende bescherming tegen aanvallen die betrekking hebben op een verdachte SQL-Server bieden valse paden, wat leiden kunnen tot sleutelarchief referenties lekken."
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,System.Collections.Generic.IList<string>> ColumnEncryptionTrustedMasterKeyPaths { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}}
      description: "De lijst met vertrouwde hoofdsleutel paden voor de versleuteling van de kolom."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
  fullName: System.Data.SqlClient.SqlConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van de tekenreeks die wordt gebruikt voor het openen een [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database."
  remarks: "De ConnectionString is vergelijkbaar met een OLE DB-verbindingsreeks, maar is niet identiek. In tegenstelling tot de OLE DB- of ADO de verbindingsreeks die wordt geretourneerd is hetzelfde als de gebruiker worden ingesteld ConnectionString, min beveiligingsgegevens als de Persist Security Info-waarde is ingesteld op `false` (standaard). De [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] niet verloren gaan of het wachtwoord in een verbindingsreeks retourneren, tenzij u Persist Security Info instellen op `true`.       U kunt de eigenschap ConnectionString verbinding maken met een database. Het volgende voorbeeld wordt een typische verbindingsreeks.      ```   &quot;Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)&quot;   ```Gebruik het nieuwe <xref:System.Data.SqlClient.SqlConnectionStringBuilder>geldige verbindingsreeksen maken tijdens de uitvoering.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Zie voor meer informatie [Connection String opbouwfuncties](~/add/includes/ajax-current-ext-md.md).       De eigenschap ConnectionString kan alleen worden ingesteld als de verbinding is gesloten. Veel van de waarden van verbindingsreeksen hebben overeenkomende alleen-lezen eigenschappen. Wanneer de verbindingsreeks is ingesteld, worden deze eigenschappen bijgewerkt, behalve wanneer een fout wordt gedetecteerd. In dit geval worden geen van de eigenschappen bijgewerkt. <xref:System.Data.SqlClient.SqlConnection>eigenschappen retourneert alleen de instellingen die zijn opgenomen in de ConnectionString.</xref:System.Data.SqlClient.SqlConnection>       Voor verbinding met een lokale computer, Geef &quot;(lokaal)&quot; voor de server. Als de naam van een server niet is opgegeven, wordt een verbinding heeft geprobeerd met het standaardexemplaar op de lokale computer.       Opnieuw instellen van de ConnectionString op een gesloten verbinding Hiermee stelt u alle waarden van verbindingsreeksen (en bijbehorende eigenschappen) met inbegrip van het wachtwoord. Bijvoorbeeld, als u een verbindingsreeks met instellen &quot; Database AdventureWorks = &quot;, en vervolgens opnieuw instellen van de verbindingsreeks naar &quot; gegevensbron = MijnServer; Integrated Security = true &quot;, wordt de <xref:System.Data.SqlClient.SqlConnection.Database%2A>eigenschap is niet langer worden ingesteld op &quot;AdventureWorks&quot;.</xref:System.Data.SqlClient.SqlConnection.Database%2A>       De verbindingsreeks is onmiddellijk na het instellen van de geparseerd. Als er fouten in de syntaxis zijn gevonden bij het parseren van, een runtime-uitzondering, zoals <xref:System.ArgumentException>, wordt gegenereerd.</xref:System.ArgumentException> Andere fouten vindt u alleen wanneer wordt geprobeerd om de verbinding te openen.       De basisindeling van een verbindingsreeks bevat een reeks sleutelwoord/waarde-paren gescheiden door puntkomma&quot;s. Het gelijkteken (=) verbindt elk trefwoord en de waarde ervan. Als u wilt opnemen waarden met een puntkomma, enkel aanhalingsteken of dubbele aanhalingstekens, moet de waarde tussen dubbele aanhalingstekens zijn ingesloten. Als de waarde zowel een puntkomma als dubbele aanhalingstekens bevat, kan de waarde kan worden ingesloten in enkele aanhalingstekens. Enkel aanhalingsteken is ook nuttig als de waarde met een dubbel aanhalingsteken begint. Dubbel aanhalingsteken kunnen daarentegen worden gebruikt als de waarde met een enkel aanhalingsteken begint. Als de waarde tekens van zowel enkele aanhalingstekens als dubbele aanhalingstekens bevat, kan het aanhalingsteken gebruikt plaatst u de waarde moet worden verdubbeld telkens wanneer deze gebeurtenis treedt op in de waarde.       Als u wilt opnemen voorgegaan of gevolgd spaties in de tekenreekswaarde, moet de waarde worden ingesloten in enkele aanhalingstekens of dubbele aanhalingstekens. Geen voorloop- of volgspaties spaties rond geheel getal, Booleaanse waarde of opsommingswaarden worden genegeerd, zelfs als tussen aanhalingstekens. Ruimten binnen een letterlijke tekenreeks-sleutelwoord of een waarde blijven echter behouden. Enkele of dubbele aanhalingstekens kunnen worden gebruikt binnen een verbindingsreeks zonder scheidingstekens (bijvoorbeeld Data Source = my&quot;Server of Data Source = Mijn Server&quot;), tenzij een aanhalingsteken het eerste of laatste teken in de waarde is.       Trefwoorden zijn niet hoofdlettergevoelig.       De volgende tabel bevat de geldige namen voor sleutelwoord waarden in de ConnectionString.        De volgende lijst bevat de geldige namen voor groepsgewijze waarden in de ConnectionString. Zie voor meer informatie [SQL Server-verbinding groeperen (ADO.NET)](~/add/includes/ajax-current-ext-md.md).      -Maximumtijd verbinding (of een Load Balance time-out) - aanmelden - maximale groepsgrootte - minimumgroepsgrootte - groeperen wanneer u bent instelling trefwoord of groepsgewijze waarden die een Booleaanse waarde vereisen, kunt u &quot;Ja&quot; in plaats van &quot;true&quot; en &quot;Nee&quot; in plaats van &quot;false&quot;. Geheel getal-waarden worden weergegeven als tekenreeksen.      > [!NOTE] > De [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] een eigen protocol gebruikt om te communiceren met [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. Daarom niet ondersteunt het gebruik van een ODBC-gegevensbronnaam (DSN) om verbinding te maken voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] omdat geen een ODBC-laag voegt.      > [!NOTE] > Universal data link (UDL)-bestanden worden niet ondersteund voor de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!CAUTION] > In deze release, de toepassing moet Wees voorzichtig bij het samenstellen van een verbindingsreeks op basis van gebruikersinvoer (bijvoorbeeld bij het ophalen van ID en het wachtwoord van gebruikersgegevens uit een dialoogvenster, en wordt toegevoegd aan de verbindingsreeks). De toepassing moet ervoor zorgen dat een gebruiker extra parameters voor de verbindingsreeks niet in deze waarden insluiten (bijvoorbeeld het opgeven van een wachtwoord als &quot; validpassword; database = somedb &quot; in een poging om te koppelen aan een andere database). Als u maken op basis van gebruikersinvoer verbindingsreeksen wilt, gebruikt u de nieuwe <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, die de verbindingsreeks valideert en helpt dit probleem kunt verhelpen.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Zie [Connection String opbouwfuncties](../Topic/Connection%20String%20Builders.md) voor meer informatie."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the ConnectionString property before opening the connection.  \n  \n [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._24_1.vb)]\n [!code-cs[Classic WebData SqlConnection.ConnectionString Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._24_1.cs)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "De verbindingstekenreeks met de naam van de bron-database en andere parameters die nodig zijn om de initiële verbinding maken. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.SqlClient.SqlConnection.ConnectionString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een ongeldige verbinding tekenreeksargument is opgegeven, of een tekenreeksargument vereiste verbinding is niet opgegeven."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
  fullName: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Met deze eigenschap moet worden gewacht tijdens een poging tot stand brengen van een verbinding tot stand voordat de poging wordt afgebroken en een fout optreedt."
  remarks: "U kunt de hoeveelheid tijd die een verbinding wordt gewacht time-out instellen met behulp van de `Connect``Timeout` of `Connection Timeout` trefwoorden in de verbindingstekenreeks. Een waarde van 0 geeft geen limiet aan, en moeten worden vermeden een <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>omdat een poging verbinding maken voor onbepaalde tijd wordt gewacht.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the `Connection Timeout` to 30 seconds in the connection string. The code opens the connection and displays the ConnectionTimeout property in the console window.  \n  \n [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._28_1.vb)]\n [!code-cs[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._28_1.cs)]"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "De tijd (in seconden) moet worden gewacht voor een verbinding te openen. De standaardwaarde is 15 seconden."
  overload: System.Data.SqlClient.SqlConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De waarde ingesteld is kleiner dan 0."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: SqlConnection.CreateCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Maakt en retourneert een <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> object gekoppeld aan de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-vb[SqlConnection_CreateCommand#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._32_1.vb)]
     [!code-cs[SqlConnection_CreateCommand#1](~/add/codesnippet/csharp/m-system.data.sqlclient._32_1.cs)]
  syntax:
    content: public System.Data.SqlClient.SqlCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object."
  overload: System.Data.SqlClient.SqlConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: SqlConnection.CreateDbCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Credential
  id: Credential
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Credential
  nameWithType: SqlConnection.Credential
  fullName: System.Data.SqlClient.SqlConnection.Credential
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> object voor deze verbinding."
  remarks: "`Persist Security Info = true`vereist is voor de waarde van de <xref:System.Data.SqlClient.SqlCredential>object met referentie.</xref:System.Data.SqlClient.SqlCredential>       De standaardwaarde van de referentie is null.       Een <xref:System.InvalidOperationException>wordt een uitzondering gegenereerd: - als referentie is ingesteld op een open verbinding.</xref:System.InvalidOperationException>      -Als referentie wordt ingesteld wanneer `Context Connection=true`.      -Als referentie wordt ingesteld wanneer `Integrated Security = true`.      -Als referentie wordt ingesteld wanneer u gebruikmaakt van de verbindingsreeks `Password`.      -Als referentie wordt ingesteld wanneer u gebruikmaakt van de verbindingsreeks `UserID`."
  syntax:
    content: public System.Data.SqlClient.SqlCredential Credential { get; set; }
    return:
      type: System.Data.SqlClient.SqlCredential
      description: "De <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> object voor deze verbinding."
  overload: System.Data.SqlClient.SqlConnection.Credential*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Database
  id: Database
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Database
  nameWithType: SqlConnection.Database
  fullName: System.Data.SqlClient.SqlConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee haalt u de naam van de huidige database of de database moet worden gebruikt wanneer een verbinding is geopend."
  remarks: "De Database-eigenschap dynamisch bijgewerkt. Als u de huidige database met wijzigt een [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instructie of de <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>methode een informatief bericht wordt verzonden en de eigenschap wordt automatisch bijgewerkt.</xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._26_1.cs)]\n [!code-vb[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._26_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "De naam van de huidige database of de naam van de database moet worden gebruikt wanneer een verbinding is geopend. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.SqlClient.SqlConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: SqlConnection.DataSource
  fullName: System.Data.SqlClient.SqlConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee wordt de naam van het exemplaar van [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] op waarmee verbinding wordt gemaakt."
  remarks: >-
    > [!NOTE]

    >  The DataSource property returns `null` if the connection string for the <xref:System.Data.SqlClient.SqlConnection> is "context connection=true".
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._62_1.vb)]\n [!code-cs[Classic WebData SqlConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._62_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "De naam van het exemplaar van [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] op waarmee verbinding wordt gemaakt. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.SqlClient.SqlConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
  fullName: System.Data.SqlClient.SqlConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlConnection.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: SqlConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zich aanmeldt bij de opgegeven transactie als een gedistribueerde transactie."
  remarks: "U kunt de <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>methode een aanmeldingspoging in een gedistribueerde transactie.</xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> Omdat deze zich aanmeldt met een verbinding in een <xref:System.Transactions.Transaction>exemplaar, **EnlistTransaction** wordt gebruikgemaakt van de functie is beschikbaar in de <xref:System.Transactions>naamruimte voor het beheren van gedistribueerde transacties, zodat u beter **EnlistDistributedTransaction** voor dit doel.</xref:System.Transactions> </xref:System.Transactions.Transaction> Zie voor meer informatie [gedistribueerde transacties](~/add/includes/ajax-current-ext-md.md).       U kunt doorgaan met het aanmelden bij een bestaande gedistribueerde transactie met de **EnlistDistributedTransaction** methode als automatische aanmelding is uitgeschakeld. Aanmelden voor een bestaande gedistribueerde transactie ervoor zorgt dat, als de transactie is doorgevoerd of teruggedraaid, wijzigingen aangebracht door de code in de gegevensbron zijn ook doorgevoerd of teruggedraaid.       `EnlistDistributedTransaction`een uitzondering geretourneerd als het <xref:System.Data.SqlClient.SqlConnection>al is begonnen met een transactie met <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> </xref:System.Data.SqlClient.SqlConnection> Echter, als de transactie een lokale transactie is gestart op de gegevensbron is (bijvoorbeeld door het uitvoeren van expliciet de BEGIN TRANSACTION instructie met behulp van een <xref:System.Data.SqlClient.SqlCommand>object), **EnlistDistributedTransaction** lokale transactie is teruggedraaid en zich aanmeldt bij de bestaande gedistribueerde transactie, zoals aangevraagd.</xref:System.Data.SqlClient.SqlCommand> U ontvangt geen aankondiging dat de lokale transactie is teruggedraaid en zijn verantwoordelijk voor het beheren van lokale transacties niet gestart met behulp van <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "Een verwijzing naar een bestaande <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> waarin een aanmeldingspoging."
  overload: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: SqlConnection.EnlistTransaction(Transaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zich aanmeldt bij de opgegeven transactie als een gedistribueerde transactie."
  remarks: 'De methode EnlistTransaction kunt u aanmelden bij een gedistribueerde transactie. Omdat deze zich aanmeldt met een verbinding in een <xref:System.Transactions.Transaction>exemplaar, **EnlistTransaction** wordt gebruikgemaakt van de functie is beschikbaar in de <xref:System.Transactions>naamruimte voor het beheren van gedistribueerde transacties, zodat u beter **EnlistDistributedTransaction**, dat via een **System.EnterpriseServices.ITransaction** object.</xref:System.Transactions> </xref:System.Transactions.Transaction> Heeft ook iets anders semantiek: zodra een verbinding is expliciet aangemeld voor een transactie, mag niet unenlisted of aangemeld in een andere transactie, totdat de eerste transactie is voltooid. Zie voor meer informatie over gedistribueerde transacties [gedistribueerde transacties](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Een verwijzing naar een bestaande <xref href=&quot;System.Transactions.Transaction&quot;> </xref> waarin een aanmeldingspoging."
  overload: System.Data.SqlClient.SqlConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  id: FireInfoMessageEventOnUserErrors
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
  fullName: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van de eigenschap FireInfoMessageEventOnUserErrors."
  remarks: "Als u FireInfoMessageEventOnUserErrors instelt op `true`, fouten die werden eerder behandeld als uitzonderingen nu worden behandeld als <xref:System.Data.SqlClient.SqlConnection.InfoMessage>gebeurtenissen.</xref:System.Data.SqlClient.SqlConnection.InfoMessage> Alle gebeurtenissen direct gestart en worden verwerkt door de gebeurtenis-handler. Als FireInfoMessageEventOnUserErrors is is ingesteld op `false`, klikt u vervolgens <xref:System.Data.SqlClient.SqlConnection.InfoMessage>gebeurtenissen aan het einde van de procedure worden afgehandeld.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>      > [!NOTE] > Een fout opgetreden bij het ernstniveau van 17 of hoger dat ervoor zorgt dat de server om te stoppen met het verwerken van de opdracht moet worden verwerkt als een uitzondering. In dit geval wordt er een uitzondering gegenereerd ongeacht hoe de fout wordt verwerkt bij de <xref:System.Data.SqlClient.SqlConnection.InfoMessage>gebeurtenis.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>       Zie voor meer informatie over het werken met gebeurtenissen [verbindingsgebeurtenissen](~/add/includes/ajax-current-ext-md.md). Voor meer informatie over fouten die zijn gegenereerd door de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] engine, Zie [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online."
  syntax:
    content: public bool FireInfoMessageEventOnUserErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenschap FireInfoMessageEventOnUserErrors is ingesteld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema
  id: GetSchema
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: SqlConnection.GetSchema()
  fullName: System.Data.SqlClient.SqlConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Retourneert de schema-informatie voor de gegevensbron van deze <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>. Zie voor meer informatie over schema [SQL Server-schemaverzamelingen](http://msdn.microsoft.com/library/ms254969.aspx)."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die schema-informatie bevat."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: SqlConnection.GetSchema(String)
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Retourneert de schema-informatie voor de gegevensbron van deze <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> met behulp van de opgegeven tekenreeks voor de naam van het schema."
  remarks: "Mogelijk moet u de schema-informatie van de database, tabellen of kolommen. Dit voorbeeld:-GetSchema voor schema-informatie wordt gebruikt.      -Schema-beperkingen gebruiken om op te halen van de opgegeven informatie.      -Schema-informatie van de database, tabellen en sommige kolommen opgehaald.       Voordat u het voorbeeld uitvoert, moet u de voorbeelddatabase maken met de volgende [!INCLUDE[tsql](~/add/includes/tsql-md.md)]: ```   USE [master]   GO      CREATE DATABASE [MySchool]       GO      USE [MySchool]   GO      SET ANSI_NULLS ON   GO   SET QUOTED_IDENTIFIER ON   GO   CREATE TABLE [dbo].[Course](~/add/includes/ajax-current-ext-md.md [nvarchar](10) NOT NULL,   [Year] [smallint] NOT NULL,   [Title] [nvarchar](100) NOT NULL,   [Credits] [int] NOT NULL,   [DepartmentID] [int] NOT NULL,    CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED    (   [CourseID] ASC,   [Year] ASC   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]      GO      SET ANSI_NULLS ON   GO   SET QUOTED_IDENTIFIER ON   GO   CREATE TABLE [dbo].[Department](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,   [Name] [nvarchar](50) NOT NULL,   [Budget] [money] NOT NULL,   [StartDate] [datetime] NOT NULL,   [Administrator] [int] NULL,    CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED    (   [DepartmentID] ASC   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]      GO      INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C1045&quot;, 2012, N&quot;Calculus&quot;, 4, 7)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C1061&quot;, 2012, N&quot;Physics&quot;, 4, 1)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C2021&quot;, 2012, N&quot;Composition&quot;, 3, 2)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C2042&quot;, 2012, N&quot;Literature&quot;, 4, 2)      SET IDENTITY_INSERT [dbo].[Department] ON       INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N&quot;Engineering&quot;, 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N&quot;English&quot;, 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N&quot;Economics&quot;, 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N&quot;Mathematics&quot;, 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)   SET IDENTITY_INSERT [dbo].[Department] OFF      ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])   REFERENCES [dbo].[Department] ([DepartmentID])   GO   ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]   GO   ``` [het Schema-informatie ophalen uit Database](http://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) C# en Visual Basic versies van dit voorbeeld heeft in Visual Studio-project.             ```   using System;   using System.Data;   using System.Data.SqlClient;      class Program {      static void Main(string[] args) {            using (SqlConnection conn = new SqlConnection(&quot;Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;&quot;)) {            conn.Open();               // Get the Meta Data for Supported Schema Collections            DataTable metaDataTable = conn.GetSchema(&quot;MetaDataCollections&quot;);               Console.WriteLine(&quot;Meta Data for Supported Schema Collections:&quot;);            ShowDataTable(metaDataTable, 25);            Console.WriteLine();               // Get the schema information of Databases in your instance            DataTable databasesSchemaTable = conn.GetSchema(&quot;Databases&quot;);               Console.WriteLine(&quot;Schema Information of Databases:&quot;);            ShowDataTable(databasesSchemaTable, 25);            Console.WriteLine();               // First, get schema information of all the tables in current database;            DataTable allTablesSchemaTable = conn.GetSchema(&quot;Tables&quot;);               Console.WriteLine(&quot;Schema Information of All Tables:&quot;);            ShowDataTable(allTablesSchemaTable, 20);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Table Type to get             // the specified table(s).            // You can use four restrictions for Table, so you should create a 4 members array.            String[] tableRestrictions = new String[4];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Table Type.             // Now we specify the Table Name of the table what we want to get schema information.            tableRestrictions[2] = &quot;Course&quot;;               DataTable courseTableSchemaTable = conn.GetSchema(&quot;Tables&quot;, tableRestrictions);               Console.WriteLine(&quot;Schema Information of Course Tables:&quot;);            ShowDataTable(courseTableSchemaTable, 20);            Console.WriteLine();               // First, get schema information of all the columns in current database.            DataTable allColumnsSchemaTable = conn.GetSchema(&quot;Columns&quot;);               Console.WriteLine(&quot;Schema Information of All Columns:&quot;);            ShowColumns(allColumnsSchemaTable);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).            // You can use four restrictions for Column, so you should create a 4 members array.            String[] columnRestrictions = new String[4];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Column Name.             // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.            columnRestrictions[2] = &quot;Course&quot;;            columnRestrictions[3] = &quot;DepartmentID&quot;;               DataTable departmentIDSchemaTable = conn.GetSchema(&quot;Columns&quot;, columnRestrictions);               Console.WriteLine(&quot;Schema Information of DepartmentID Column in Course Table:&quot;);            ShowColumns(departmentIDSchemaTable);            Console.WriteLine();               // First, get schema information of all the IndexColumns in current database            DataTable allIndexColumnsSchemaTable = conn.GetSchema(&quot;IndexColumns&quot;);               Console.WriteLine(&quot;Schema Information of All IndexColumns:&quot;);            ShowIndexColumns(allIndexColumnsSchemaTable);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to             // get the specified column(s).            // You can use five restrictions for Column, so you should create a 5 members array.            String[] indexColumnsRestrictions = new String[5];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.             // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.            indexColumnsRestrictions[2] = &quot;Course&quot;;            indexColumnsRestrictions[4] = &quot;CourseID&quot;;               DataTable courseIdIndexSchemaTable = conn.GetSchema(&quot;IndexColumns&quot;, indexColumnsRestrictions);               Console.WriteLine(&quot;Index Schema Information of CourseID Column in Course Table:&quot;);            ShowIndexColumns(courseIdIndexSchemaTable);            Console.WriteLine();         }            Console.WriteLine(&quot;Please press any key to exit...&quot;);         Console.ReadKey();      }         private static void ShowDataTable(DataTable table, Int32 length) {         foreach (DataColumn col in table.Columns) {            Console.Write(&quot;{0,-&quot; + length + &quot;}&quot;, col.ColumnName);         }         Console.WriteLine();            foreach (DataRow row in table.Rows) {            foreach (DataColumn col in table.Columns) {               if (col.DataType.Equals(typeof(DateTime)))                  Console.Write(&quot;{0,-&quot; + length + &quot;:d}&quot;, row[col]);               else if (col.DataType.Equals(typeof(Decimal)))                  Console.Write(&quot;{0,-&quot; + length + &quot;:C}&quot;, row[col]);               else                  Console.Write(&quot;{0,-&quot; + length + &quot;}&quot;, row[col]);            }            Console.WriteLine();         }      }         private static void ShowDataTable(DataTable table) {         ShowDataTable(table, 14);      }         private static void ShowColumns(DataTable columnsTable) {         var selectedRows = from info in columnsTable.AsEnumerable()                            select new {                               TableCatalog = info[&quot;TABLE_CATALOG&quot;],                               TableSchema = info[&quot;TABLE_SCHEMA&quot;],                               TableName = info[&quot;TABLE_NAME&quot;],                               ColumnName = info[&quot;COLUMN_NAME&quot;],                               DataType = info[&quot;DATA_TYPE&quot;]                            };            Console.WriteLine(&quot;{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}&quot;, &quot;TableCatalog&quot;, &quot;TABLE_SCHEMA&quot;,             &quot;TABLE_NAME&quot;, &quot;COLUMN_NAME&quot;, &quot;DATA_TYPE&quot;);         foreach (var row in selectedRows) {            Console.WriteLine(&quot;{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}&quot;, row.TableCatalog,                row.TableSchema, row.TableName, row.ColumnName, row.DataType);         }      }         private static void ShowIndexColumns(DataTable indexColumnsTable) {         var selectedRows = from info in indexColumnsTable.AsEnumerable()                            select new {                               TableSchema = info[&quot;table_schema&quot;],                               TableName = info[&quot;table_name&quot;],                               ColumnName = info[&quot;column_name&quot;],                               ConstraintSchema = info[&quot;constraint_schema&quot;],                               ConstraintName = info[&quot;constraint_name&quot;],                               KeyType = info[&quot;KeyType&quot;]                            };            Console.WriteLine(&quot;{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}&quot;, &quot;table_schema&quot;, &quot;table_name&quot;, &quot;column_name&quot;, &quot;constraint_schema&quot;, &quot;constraint_name&quot;, &quot;KeyType&quot;);         foreach (var row in selectedRows) {            Console.WriteLine(&quot;{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}&quot;, row.TableSchema,                row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);         }      }   }   ```"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Hiermee geeft u de naam van het schema te retourneren."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die schema-informatie bevat."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>is opgegeven als null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: SqlConnection.GetSchema(String,String[])
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Retourneert de schema-informatie voor de gegevensbron van deze <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> met behulp van de opgegeven tekenreeks voor de naam van het schema en de matrix van de opgegeven tekenreeks voor de beperkingswaarden."
  remarks: "De `restrictionValues` parameter kan leveren *n* diepte van de waarden die zijn opgegeven met de verzameling met beperkingen voor een specifieke verzameling. Als u wilt waarden ingesteld op een gegeven beperking en niet de waarden van andere beperkingen instellen, moet u de voorgaande beperkingen ingesteld op `null` en zet u de juiste waarde in voor de beperking die u wilt een waarde opgeven voor.       Een voorbeeld hiervan is de verzameling &quot;Tabellen&quot;. Als de verzameling &quot;Tabellen&quot; drie beperkingen--database, -eigenaar bevat en tabelnaam-- en u wilt teruggaan alleen de tabellen die zijn gekoppeld aan de eigenaar van de &quot;Carl&quot;, moet u in de volgende waarden doorgeven: null, &quot;Carl&quot;. Als een beperkende waarde niet is doorgegeven, worden de standaardwaarden gebruikt voor deze beperking. Dit is dezelfde toewijzing als doorgeven in `null`, die verschilt van doorgeven in een lege tekenreeks voor de parameterwaarde. In dat geval wordt de lege tekenreeks (&quot;&quot;) wordt beschouwd als de waarde voor de opgegeven parameter.       Zie voor een voorbeeld van code aan te tonen GetSchema, <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.</xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Hiermee geeft u de naam van het schema te retourneren."
    - id: restrictionValues
      type: System.String[]
      description: "Een set met beperkingswaarden voor het aangevraagde schema."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die schema-informatie bevat."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>is opgegeven als null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: SqlConnection.InfoMessage
  fullName: System.Data.SqlClient.SqlConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Deze gebeurtenis treedt op wanneer [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] retourneert een waarschuwing of informatief bericht."
  remarks: "Clients die u wilt laten verwerken voor waarschuwingen of informatieve berichten die zijn verzonden door de server moeten maken een <xref:System.Data.SqlClient.SqlInfoMessageEventHandler>gemachtigde om te luisteren naar deze gebeurtenis.</xref:System.Data.SqlClient.SqlInfoMessageEventHandler>       De InfoMessage-gebeurtenis treedt op wanneer een bericht met een ernst van 10 of kleiner wordt geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. Berichten met een prioriteitsniveau tussen 11 en 20 afkomstig van een fout en berichten die een ernst dat via 20 oorzaken voor de verbinding moet worden afgesloten. Voor meer informatie over [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] foutniveaus, raadpleegt u &quot;Database Engine fout Ernstcategorieën&quot; in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.       Zie voor meer informatie en een voorbeeld [verbindingsgebeurtenissen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.SqlClient.SqlInfoMessageEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Open
  id: Open
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Open()
  nameWithType: SqlConnection.Open()
  fullName: System.Data.SqlClient.SqlConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee opent u de verbinding met een database met de instellingen van de opgegeven door de <xref:System.Data.SqlClient.SqlConnection.ConnectionString*>.</xref:System.Data.SqlClient.SqlConnection.ConnectionString*>"
  remarks: "De <xref:System.Data.SqlClient.SqlConnection>een open verbinding uit de verbindingsgroep tekent, indien beschikbaar.</xref:System.Data.SqlClient.SqlConnection> Anders wordt er een nieuwe verbinding met een exemplaar van de verbinding [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Als de <xref:System.Data.SqlClient.SqlConnection>gaan buiten bereik, dit niet is gesloten.</xref:System.Data.SqlClient.SqlConnection> Daarom moet u expliciet sluiten de verbinding door het aanroepen van <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</xref:System.Data.SqlClient.SqlConnection.Close%2A>      > [!NOTE] > Als u een poortnummer dan wanneer u probeert verbinding maken met een exemplaar van 1433 opgeeft [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] en met behulp van een ander protocol dan TCP/IP-de methode Open mislukt. Geef een poortnummer dan 1433 door opnemen &quot; server = machinename, poortnummer &quot;in de verbindingstekenreeks en gebruik de TCP/IP-protocol.      > [!NOTE] > De [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] vereist dat de machtiging voor beveiliging met &quot;Kunnen aanroepen naar niet-beheerde assembly&quot;s &quot; ingeschakeld (<xref:System.Security.Permissions.SecurityPermission> met <xref:System.Security.Permissions.SecurityPermissionFlag>ingesteld op `UnmanagedCode`) openen een <xref:System.Data.SqlClient.SqlConnection>met SQL-foutopsporing is ingeschakeld.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Security.Permissions.SecurityPermissionFlag> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, and displays some of its properties. The connection is automatically closed at the end of the `using` block.  \n  \n [!code-vb[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._18_1.vb)]\n [!code-cs[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._18_1.cs)]"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kan geen verbinding openen zonder op te geven van een gegevensbron of de server.       of de verbinding is al geopend."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Er is een verbindingsniveau-fout opgetreden tijdens het openen van de verbinding. Als de <> </> *> eigenschap bevat de waarde 18487 of 18488, betekent dit dat het opgegeven wachtwoord is verlopen of moet opnieuw worden ingesteld. Zie de <> </> *> methode voor meer informatie.       De <xref uid=&quot;langword_csharp_&lt;system.data.localdb&gt;&quot; name=&quot;&lt;system.data.localdb&gt;&quot; href=&quot;&quot;> </xref> -label in het bestand app.config heeft ongeldige of onbekende elementen."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Er zijn twee vermeldingen met dezelfde naam in de <xref uid=&quot;langword_csharp_&lt;localdbinstances&gt;&quot; name=&quot;&lt;localdbinstances&gt;&quot; href=&quot;&quot;> </xref> sectie."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: OpenAsync(CancellationToken)
  nameWithType: SqlConnection.OpenAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een asynchrone versie van <> </> *>, waarmee u opent de verbinding met een database met de instellingen van de opgegeven door de <> </> *>. Het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de verbindingstime-out is verstreken.  Uitzonderingen wordt doorgegeven via de resulterende taak. Als de time-out voor verbindingstijd verstrijkt zonder correct verbinding maakt, wordt de resulterende taak wordt gemarkeerd als een fout met een uitzondering opgetreden. De implementatie wordt een taak geretourneerd zonder dat de aanroepende thread voor zowel gegroepeerde als niet-gegroepeerde verbindingen worden geblokkeerd."
  remarks: "Na het aanroepen van OpenAsync, <xref:System.Data.SqlClient.SqlConnection.State%2A>moet retourneren <xref:System.Data.ConnectionState>totdat de geretourneerde <xref:System.Threading.Tasks.Task>is voltooid.</xref:System.Threading.Tasks.Task> </xref:System.Data.ConnectionState> </xref:System.Data.SqlClient.SqlConnection.State%2A> Klik, als de verbinding geslaagd is, <xref:System.Data.SqlClient.SqlConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> moet worden geretourneerd.</xref:System.Data.SqlClient.SqlConnection.State%2A> Als de verbinding is mislukt, <xref:System.Data.SqlClient.SqlConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> moet worden geretourneerd.</xref:System.Data.SqlClient.SqlConnection.State%2A>       Een aanroep van <xref:System.Data.SqlClient.SqlConnection.Close%2A>wordt geprobeerd de bewerking annuleren of sluiten van de bijbehorende OpenAsync-aanroep.</xref:System.Data.SqlClient.SqlConnection.Close%2A>       Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlConnection.OpenAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van OpenAsync meer dan één keer voor hetzelfde exemplaar voordat de taak voltooid.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven.       Een verbinding is niet beschikbaar uit de verbindingsgroep voordat de time-out voor verbinding is verstreken."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Een fout geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
  fullName: System.Data.SqlClient.SqlConnection.PacketSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Haalt de grootte (in bytes) van de netwerkpakketten die worden gebruikt om te communiceren met een exemplaar van [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]."
  remarks: "Als een toepassing Bulksgewijze kopieerbewerkingen uitvoert of verzendt hoeveelheden text- of image-gegevens ontvangt, wordt een groter is dan de standaardwaarde efficiënter omdat het ervoor zorgt minder netwerk dat pakketgrootte lezen en schrijven van bewerkingen. Als een toepassing worden verzonden en ontvangen van kleine hoeveelheden gegevens, kunt u de pakketgrootte instellen tot 512 bytes (met behulp van de waarde van de grootte van pakket in de <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), die voldoende is voor de meeste gegevensoverdrachten.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> De standaardgrootte van het pakket wordt voor de meeste toepassingen aanbevolen.       Pakketgrootte kan een waarde in het bereik van 512 en 32767 liggen bytes zijn. Een uitzondering wordt gegenereerd als de waarde buiten het bereik valt.       De standaardwaarde als naar een getal dat groter is dan 8000, zal de pakketten te gebruiken van de toewijzingsfunctie voor meerdere pagina&quot;s op het exemplaar van [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] in plaats van de toewijzingsfunctie met veel efficiënter SinglePage, waardoor de algehele schaalbaarheid van de [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. Voor meer informatie over het [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] gebruikt geheugen, Zie [Memory Architecture](http://go.microsoft.com/fwlink/?LinkId=143705) in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, including setting the `Packet Size` to 512 in the connection string. It displays the PacketSize and <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> properties in the console window.  \n  \n [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._63_1.vb)]\n [!code-cs[Classic WebData SqlConnection.PacketSize Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._63_1.cs)]"
  syntax:
    content: public int PacketSize { get; }
    return:
      type: System.Int32
      description: "De grootte (in bytes) van netwerkpakketten. De standaardwaarde is 8000."
  overload: System.Data.SqlClient.SqlConnection.PacketSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  id: RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  fullName: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee registreert u de kolom versleuteling sleutelarchief providers."
  syntax:
    content: public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary<string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider> customProviders);
    parameters:
    - id: customProviders
      type: System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider}
      description: "De aangepaste providers"
  overload: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics
  id: ResetStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ResetStatistics()
  nameWithType: SqlConnection.ResetStatistics()
  fullName: System.Data.SqlClient.SqlConnection.ResetStatistics()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Als het verzamelen van statistieken is ingeschakeld, worden alle waarden opnieuw ingesteld op nul."
  remarks: "Als het verzamelen van statistieken niet is ingeschakeld en deze methode wordt aangeroepen, wordt er geen fout gegenereerd."
  syntax:
    content: public void ResetStatistics ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.ResetStatistics*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics
  id: RetrieveStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: RetrieveStatistics()
  nameWithType: SqlConnection.RetrieveStatistics()
  fullName: System.Data.SqlClient.SqlConnection.RetrieveStatistics()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Retourneert een verzameling van de naam van waarde-paar van statistieken op het punt in tijd die de methode wordt aangeroepen."
  remarks: "Als deze methode wordt aangeroepen, zijn de waarden opgehaald die op het huidige punt in tijd. Als u met de verbinding doorgaat, zijn de waarden zijn onjuist. U moet de methode voor het verkrijgen van de meest recente waarden opnieuw uit te voeren."
  syntax:
    content: public System.Collections.IDictionary RetrieveStatistics ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Retourneert een verwijzing van het type <xref:System.Collections.IDictionary>van <xref:System.Collections.DictionaryEntry>items.</xref:System.Collections.DictionaryEntry> </xref:System.Collections.IDictionary>"
  overload: System.Data.SqlClient.SqlConnection.RetrieveStatistics*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
  fullName: System.Data.SqlClient.SqlConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een tekenreeks met de versie van het exemplaar van opgehaald [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] waarmee de client is verbonden."
  remarks: "De versie van het formulier is *##. ##. ###*, waarbij de eerste twee cijfers de primaire versie zijn, de volgende twee cijfers de secundaire versie zijn en de laatste vier cijfers van de releaseversie zijn. De tekenreeks is van het formulier *major.minor.build*, waarbij de primaire en secundaire zijn precies twee cijfers build is exact vier cijfers.       ServerVersion is aangeroepen terwijl de geretourneerde taak is niet voltooid en de verbinding is niet geopend na een aanroep naar <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.</xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the ServerVersion property.  \n  \n [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._30_1.vb)]\n [!code-cs[Classic WebData ISqlConnection.ServerVersion Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._30_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "De versie van het exemplaar van [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]."
  overload: System.Data.SqlClient.SqlConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten.       ServerVersion is aangeroepen terwijl de geretourneerde taak is niet voltooid en de verbinding is niet geopend na een aanroep van <xref:System.Data.SqlClient.SqlConnection.OpenAsync*>.</xref:System.Data.SqlClient.SqlConnection.OpenAsync*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.State
  id: State
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: State
  nameWithType: SqlConnection.State
  fullName: System.Data.SqlClient.SqlConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Geeft de status van de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> uitgevoerd tijdens de meest recente netwerkbewerking op de verbinding."
  remarks: "Retourneert een <xref:System.Data.ConnectionState>opsomming die de status van de <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> aangeeft.</xref:System.Data.ConnectionState> Sluit en open deze opnieuw de verbinding wordt de waarde van de status vernieuwen."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Een <xref href=&quot;System.Data.ConnectionState&quot;> </xref> opsomming."
  overload: System.Data.SqlClient.SqlConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  id: StatisticsEnabled
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
  fullName: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Als de waarde <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, schakelt statistische gegevens verzamelen voor de huidige verbinding."
  remarks: "Inschakelen van verzamelen van statistieken, heeft een kleine, maar merkbare invloed op prestaties en daarom moet alleen worden ingeschakeld wanneer deze vereist is."
  syntax:
    content: public bool StatisticsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "Retourneert <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> als het verzamelen van statistieken is ingeschakeld, anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>de standaardwaarde is."
  overload: System.Data.SqlClient.SqlConnection.StatisticsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlConnection.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Maakt een nieuw object dat een kopie van het huidige exemplaar."
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.SqlClient.SqlConnection>exemplaar is geconverteerd naar een <xref:System.ICloneable>interface.</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlConnection>       Dit lid wordt alleen ondersteund door het .NET Compact Framework."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Een nieuw object dat een kopie van dit exemplaar."
  overload: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.WorkstationId
  id: WorkstationId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
  fullName: System.Data.SqlClient.SqlConnection.WorkstationId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee haalt u een tekenreeks die de databaseclient aanduidt."
  remarks: "De tekenreeks bevat doorgaans de naam van de client. De eigenschap WorkstationId komt overeen met de `Workstation ID` connection string-eigenschap."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the WorkstationId property.  \n  \n [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._7_1.vb)]\n [!code-cs[Classic WebData SqlConnection.WorkstationId Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._7_1.cs)]"
  syntax:
    content: public string WorkstationId { get; }
    return:
      type: System.String
      description: "Een tekenreeks die de databaseclient identificeert. Als niet wordt opgegeven, de naam van de clientcomputer. Als er geen is opgegeven, is de waarde een lege tekenreeks."
  overload: System.Data.SqlClient.SqlConnection.WorkstationId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Data.SqlClient.SqlConnection.#ctor
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection()
  nameWithType: SqlConnection.SqlConnection()
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection()
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection(String)
  nameWithType: SqlConnection.SqlConnection(String)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection(String,SqlCredential)
  nameWithType: SqlConnection.SqlConnection(String,SqlCredential)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String,SqlCredential)
- uid: System.Data.SqlClient.SqlCredential
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCredential
  nameWithType: SqlCredential
  fullName: System.Data.SqlClient.SqlCredential
- uid: System.Data.SqlClient.SqlConnection.AccessToken
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
  fullName: System.Data.SqlClient.SqlConnection.AccessToken
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: SqlConnection.BeginTransaction()
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction()
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(String)
  nameWithType: SqlConnection.BeginTransaction(String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(String)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel,String)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel,String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel,String)
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: SqlConnection.ChangeDatabase(String)
  fullName: System.Data.SqlClient.SqlConnection.ChangeDatabase(String)
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword(String,String)
  nameWithType: SqlConnection.ChangePassword(String,String)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,String)
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword(String,SqlCredential,SecureString)
  nameWithType: SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,SqlCredential,SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearAllPools()
  nameWithType: SqlConnection.ClearAllPools()
  fullName: System.Data.SqlClient.SqlConnection.ClearAllPools()
- uid: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearPool(SqlConnection)
  nameWithType: SqlConnection.ClearPool(SqlConnection)
  fullName: System.Data.SqlClient.SqlConnection.ClearPool(SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
  fullName: System.Data.SqlClient.SqlConnection.ClientConnectionId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlConnection.Close
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Close()
  nameWithType: SqlConnection.Close()
  fullName: System.Data.SqlClient.SqlConnection.Close()
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,IList<String>>
  nameWithType: IDictionary<String,IList<String>>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Collections.Generic.IList<System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Collections.Generic.IList<System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlConnection.ConnectionString
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
  fullName: System.Data.SqlClient.SqlConnection.ConnectionString
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
  fullName: System.Data.SqlClient.SqlConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlConnection.CreateCommand
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: SqlConnection.CreateCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateCommand()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: SqlConnection.CreateDbCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.SqlClient.SqlConnection.Credential
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Credential
  nameWithType: SqlConnection.Credential
  fullName: System.Data.SqlClient.SqlConnection.Credential
- uid: System.Data.SqlClient.SqlConnection.Database
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Database
  nameWithType: SqlConnection.Database
  fullName: System.Data.SqlClient.SqlConnection.Database
- uid: System.Data.SqlClient.SqlConnection.DataSource
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DataSource
  nameWithType: SqlConnection.DataSource
  fullName: System.Data.SqlClient.SqlConnection.DataSource
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
  fullName: System.Data.SqlClient.SqlConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlConnection.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlConnection.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: SqlConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: SqlConnection.EnlistTransaction(Transaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
  fullName: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
- uid: System.Data.SqlClient.SqlConnection.GetSchema
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema()
  nameWithType: SqlConnection.GetSchema()
  fullName: System.Data.SqlClient.SqlConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: SqlConnection.GetSchema(String)
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String)
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: SqlConnection.GetSchema(String,String[])
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlConnection.InfoMessage
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: InfoMessage
  nameWithType: SqlConnection.InfoMessage
  fullName: System.Data.SqlClient.SqlConnection.InfoMessage
- uid: System.Data.SqlClient.SqlInfoMessageEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlInfoMessageEventHandler
  nameWithType: SqlInfoMessageEventHandler
  fullName: System.Data.SqlClient.SqlInfoMessageEventHandler
- uid: System.Data.SqlClient.SqlConnection.Open
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Open()
  nameWithType: SqlConnection.Open()
  fullName: System.Data.SqlClient.SqlConnection.Open()
- uid: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: OpenAsync(CancellationToken)
  nameWithType: SqlConnection.OpenAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlConnection.PacketSize
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
  fullName: System.Data.SqlClient.SqlConnection.PacketSize
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  fullName: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,SqlColumnEncryptionKeyStoreProvider>
  nameWithType: IDictionary<String,SqlColumnEncryptionKeyStoreProvider>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
    name: SqlColumnEncryptionKeyStoreProvider
    nameWithType: SqlColumnEncryptionKeyStoreProvider
    fullName: SqlColumnEncryptionKeyStoreProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ResetStatistics()
  nameWithType: SqlConnection.ResetStatistics()
  fullName: System.Data.SqlClient.SqlConnection.ResetStatistics()
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RetrieveStatistics()
  nameWithType: SqlConnection.RetrieveStatistics()
  fullName: System.Data.SqlClient.SqlConnection.RetrieveStatistics()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Data.SqlClient.SqlConnection.ServerVersion
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
  fullName: System.Data.SqlClient.SqlConnection.ServerVersion
- uid: System.Data.SqlClient.SqlConnection.State
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: State
  nameWithType: SqlConnection.State
  fullName: System.Data.SqlClient.SqlConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
  fullName: System.Data.SqlClient.SqlConnection.StatisticsEnabled
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlConnection.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlConnection.WorkstationId
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
  fullName: System.Data.SqlClient.SqlConnection.WorkstationId
- uid: System.Data.SqlClient.SqlConnection.#ctor*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection.SqlConnection
- uid: System.Data.SqlClient.SqlConnection.AccessToken*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: SqlConnection.BeginDbTransaction
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: SqlConnection.BeginTransaction
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: SqlConnection.ChangeDatabase
- uid: System.Data.SqlClient.SqlConnection.ChangePassword*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword
  nameWithType: SqlConnection.ChangePassword
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearAllPools
  nameWithType: SqlConnection.ClearAllPools
- uid: System.Data.SqlClient.SqlConnection.ClearPool*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearPool
  nameWithType: SqlConnection.ClearPool
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
- uid: System.Data.SqlClient.SqlConnection.Close*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Close
  nameWithType: SqlConnection.Close
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
- uid: System.Data.SqlClient.SqlConnection.ConnectionString*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
- uid: System.Data.SqlClient.SqlConnection.CreateCommand*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateCommand
  nameWithType: SqlConnection.CreateCommand
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: SqlConnection.CreateDbCommand
- uid: System.Data.SqlClient.SqlConnection.Credential*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Credential
  nameWithType: SqlConnection.Credential
- uid: System.Data.SqlClient.SqlConnection.Database*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Database
  nameWithType: SqlConnection.Database
- uid: System.Data.SqlClient.SqlConnection.DataSource*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DataSource
  nameWithType: SqlConnection.DataSource
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
- uid: System.Data.SqlClient.SqlConnection.Dispose*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Dispose
  nameWithType: SqlConnection.Dispose
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: SqlConnection.EnlistDistributedTransaction
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: SqlConnection.EnlistTransaction
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
- uid: System.Data.SqlClient.SqlConnection.GetSchema*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema
  nameWithType: SqlConnection.GetSchema
- uid: System.Data.SqlClient.SqlConnection.Open*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Open
  nameWithType: SqlConnection.Open
- uid: System.Data.SqlClient.SqlConnection.OpenAsync*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: OpenAsync
  nameWithType: SqlConnection.OpenAsync
- uid: System.Data.SqlClient.SqlConnection.PacketSize*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RegisterColumnEncryptionKeyStoreProviders
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ResetStatistics
  nameWithType: SqlConnection.ResetStatistics
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RetrieveStatistics
  nameWithType: SqlConnection.RetrieveStatistics
- uid: System.Data.SqlClient.SqlConnection.ServerVersion*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
- uid: System.Data.SqlClient.SqlConnection.State*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: State
  nameWithType: SqlConnection.State
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlConnection.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlConnection.WorkstationId*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
