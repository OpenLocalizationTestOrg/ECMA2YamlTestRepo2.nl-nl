### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Activity
  id: Activity
  children:
  - System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)
  - System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)
  - System.EnterpriseServices.Activity.BindToCurrentThread
  - System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)
  - System.EnterpriseServices.Activity.UnbindFromThread
  langs:
  - csharp
  name: Activity
  nameWithType: Activity
  fullName: System.EnterpriseServices.Activity
  type: Class
  summary: "Maakt een activiteit of synchrone of asynchrone batch werk die COM +-services gebruiken kunt zonder te maken van een COM +-onderdeel. Deze klasse kan niet worden overgenomen."
  remarks: "De context die is gekoppeld aan de activiteit volledig wordt bepaald door een <xref:System.EnterpriseServices.ServiceConfig>object.</xref:System.EnterpriseServices.ServiceConfig>"
  example:
  - "The following code example demonstrates how to use the Activity class and use the synchronization service.  \n  \n [!code-cs[EnterpriseServices_Activity#0](~/add/codesnippet/csharp/t-system.enterpriseservi_28_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class Activity
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)
  id: '#ctor(System.EnterpriseServices.ServiceConfig)'
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: Activity(ServiceConfig)
  nameWithType: Activity.Activity(ServiceConfig)
  fullName: System.EnterpriseServices.Activity.Activity(ServiceConfig)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.EnterpriseServices.Activity&quot;> </xref> klasse."
  remarks: "Maakt een <xref:System.EnterpriseServices.Activity>die wordt gebruikt voor het batch-taken voor COM +-services verzenden.</xref:System.EnterpriseServices.Activity> De context die is gekoppeld aan de activiteit is volledig afhankelijk van de <xref:System.EnterpriseServices.ServiceConfig>object dat wordt doorgegeven via de `cfg` parameter.</xref:System.EnterpriseServices.ServiceConfig>"
  example:
  - "The following code example demonstrates how to initialize a new instance of the <xref:System.EnterpriseServices.Activity> class.  \n  \n [!code-cs[EnterpriseServices_Activity#1](~/add/codesnippet/csharp/74b091f6-67a9-4b43-89dc-_1.cs)]"
  syntax:
    content: public Activity (System.EnterpriseServices.ServiceConfig cfg);
    parameters:
    - id: cfg
      type: System.EnterpriseServices.ServiceConfig
      description: "Een <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref> die bevat de configuratiegegevens voor de services worden gebruikt."
  overload: System.EnterpriseServices.Activity.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.Activity&quot;></xref>wordt niet ondersteund op het huidige platform."
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)
  id: AsynchronousCall(System.EnterpriseServices.IServiceCall)
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: AsynchronousCall(IServiceCall)
  nameWithType: Activity.AsynchronousCall(IServiceCall)
  fullName: System.EnterpriseServices.Activity.AsynchronousCall(IServiceCall)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Het opgegeven door de gebruiker gedefinieerde batch werk asynchroon uitgevoerd."
  remarks: ''
  example:
  - "The following code example demonstrates how to use this method.  \n  \n [!code-cs[EnterpriseServices_Activity#2](~/add/codesnippet/csharp/f0e8808c-d08c-49e7-8cd4-_1.cs)]"
  syntax:
    content: public void AsynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);
    parameters:
    - id: serviceCall
      type: System.EnterpriseServices.IServiceCall
      description: "Een <xref href=&quot;System.EnterpriseServices.IServiceCall&quot;> </xref> object dat wordt gebruikt voor het implementeren van het werk batch."
  overload: System.EnterpriseServices.Activity.AsynchronousCall*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.BindToCurrentThread
  id: BindToCurrentThread
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: BindToCurrentThread()
  nameWithType: Activity.BindToCurrentThread()
  fullName: System.EnterpriseServices.Activity.BindToCurrentThread()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "De gebruiker gedefinieerde werk koppelt aan de huidige thread."
  remarks: "BindToCurrentThread koppelt het werk batch die wordt verzonden door de <xref:System.EnterpriseServices.Activity.SynchronousCall%2A>of <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A>methoden voor het huidige door de single thread apartment (STA).</xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> </xref:System.EnterpriseServices.Activity.SynchronousCall%2A> BindToCurrentThread heeft geen effect als de huidige thread wordt uitgevoerd in de multithreaded MTA (apartment). De huidige thread-model wordt bepaald door de configuratie van de <xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A>eigenschap van de <xref:System.EnterpriseServices.ServiceConfig>object.</xref:System.EnterpriseServices.ServiceConfig> </xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A>"
  syntax:
    content: public void BindToCurrentThread ();
    parameters: []
  overload: System.EnterpriseServices.Activity.BindToCurrentThread*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)
  id: SynchronousCall(System.EnterpriseServices.IServiceCall)
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: SynchronousCall(IServiceCall)
  nameWithType: Activity.SynchronousCall(IServiceCall)
  fullName: System.EnterpriseServices.Activity.SynchronousCall(IServiceCall)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Het opgegeven door de gebruiker gedefinieerde batch werk synchroon wordt uitgevoerd."
  syntax:
    content: public void SynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);
    parameters:
    - id: serviceCall
      type: System.EnterpriseServices.IServiceCall
      description: "Een <xref href=&quot;System.EnterpriseServices.IServiceCall&quot;> </xref> object dat wordt gebruikt voor het implementeren van het werk batch."
  overload: System.EnterpriseServices.Activity.SynchronousCall*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Activity.UnbindFromThread
  id: UnbindFromThread
  parent: System.EnterpriseServices.Activity
  langs:
  - csharp
  name: UnbindFromThread()
  nameWithType: Activity.UnbindFromThread()
  fullName: System.EnterpriseServices.Activity.UnbindFromThread()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Hiermee maakt u het werk batch die wordt verzonden door de <> </> *> of <> </> *> methoden van de thread waarin het werk batch wordt uitgevoerd."
  remarks: "UnbindFromThread heeft geen effect als het werk batch niet eerder is gebonden aan een thread."
  syntax:
    content: public void UnbindFromThread ();
    parameters: []
  overload: System.EnterpriseServices.Activity.UnbindFromThread*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: Activity(ServiceConfig)
  nameWithType: Activity.Activity(ServiceConfig)
  fullName: System.EnterpriseServices.Activity.Activity(ServiceConfig)
- uid: System.EnterpriseServices.ServiceConfig
  parent: System.EnterpriseServices
  isExternal: false
  name: ServiceConfig
  nameWithType: ServiceConfig
  fullName: System.EnterpriseServices.ServiceConfig
- uid: System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: AsynchronousCall(IServiceCall)
  nameWithType: Activity.AsynchronousCall(IServiceCall)
  fullName: System.EnterpriseServices.Activity.AsynchronousCall(IServiceCall)
- uid: System.EnterpriseServices.IServiceCall
  parent: System.EnterpriseServices
  isExternal: false
  name: IServiceCall
  nameWithType: IServiceCall
  fullName: System.EnterpriseServices.IServiceCall
- uid: System.EnterpriseServices.Activity.BindToCurrentThread
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: BindToCurrentThread()
  nameWithType: Activity.BindToCurrentThread()
  fullName: System.EnterpriseServices.Activity.BindToCurrentThread()
- uid: System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: SynchronousCall(IServiceCall)
  nameWithType: Activity.SynchronousCall(IServiceCall)
  fullName: System.EnterpriseServices.Activity.SynchronousCall(IServiceCall)
- uid: System.EnterpriseServices.Activity.UnbindFromThread
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: UnbindFromThread()
  nameWithType: Activity.UnbindFromThread()
  fullName: System.EnterpriseServices.Activity.UnbindFromThread()
- uid: System.EnterpriseServices.Activity.#ctor*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: Activity
  nameWithType: Activity.Activity
- uid: System.EnterpriseServices.Activity.AsynchronousCall*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: AsynchronousCall
  nameWithType: Activity.AsynchronousCall
- uid: System.EnterpriseServices.Activity.BindToCurrentThread*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: BindToCurrentThread
  nameWithType: Activity.BindToCurrentThread
- uid: System.EnterpriseServices.Activity.SynchronousCall*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: SynchronousCall
  nameWithType: Activity.SynchronousCall
- uid: System.EnterpriseServices.Activity.UnbindFromThread*
  parent: System.EnterpriseServices.Activity
  isExternal: false
  name: UnbindFromThread
  nameWithType: Activity.UnbindFromThread
