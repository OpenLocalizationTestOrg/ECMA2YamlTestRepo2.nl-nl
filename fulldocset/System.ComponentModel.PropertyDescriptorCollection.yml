### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.PropertyDescriptorCollection
  id: PropertyDescriptorCollection
  children:
  - System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])
  - System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)
  - System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.Clear
  - System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.Count
  - System.ComponentModel.PropertyDescriptorCollection.Empty
  - System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)
  - System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
  - System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)
  - System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])
  - System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.Item(System.String)
  - System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.Sort
  - System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)
  - System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])
  - System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)
  - System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
  type: Class
  summary: "Vertegenwoordigt een verzameling <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten."
  remarks: "PropertyDescriptorCollection is read-only; it does not implement methods that add or remove properties. You must inherit from this class to implement these methods.  \n  \n Using the properties available in the PropertyDescriptorCollection class, you can query the collection about its contents. Use the <xref:System.ComponentModel.PropertyDescriptorCollection.Count%2A> property to determine the number of elements in the collection. Use the [Item\\<xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property to get a specific property by index number or by name.  \n  \n In addition to properties, you can use the <xref:System.ComponentModel.PropertyDescriptorCollection.Find%2A> method to get a description of the property with the specified name from the collection."
  example:
  - "The following code example creates a new PropertyDescriptorCollection using the properties on `button1`. It requires that `button1` has been instantiated on a form.  \n  \n [!code-cs[Classic PropertyDescriptorCollection Example#1](~/add/codesnippet/csharp/t-system.componentmodel._39_1.cs)]\n [!code-cpp[Classic PropertyDescriptorCollection Example#1](~/add/codesnippet/cpp/t-system.componentmodel._39_1.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._39_1.vb)]  \n  \n The next example prints all the properties on a button in a text box. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cs[Classic PropertyDescriptorCollection Example#2](~/add/codesnippet/csharp/t-system.componentmodel._39_2.cs)]\n [!code-cpp[Classic PropertyDescriptorCollection Example#2](~/add/codesnippet/cpp/t-system.componentmodel._39_2.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._39_2.vb)]"
  syntax:
    content: 'public class PropertyDescriptorCollection : System.Collections.IDictionary, System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])
  id: '#ctor(System.ComponentModel.PropertyDescriptor[])'
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: PropertyDescriptorCollection(PropertyDescriptor[])
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> klasse."
  syntax:
    content: public PropertyDescriptorCollection (System.ComponentModel.PropertyDescriptor[] properties);
    parameters:
    - id: properties
      type: System.ComponentModel.PropertyDescriptor[]
      description: "Een matrix van het type <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> dat biedt de eigenschappen voor deze verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)
  id: '#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)'
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> klasse, die eventueel het kenmerk alleen-lezen."
  syntax:
    content: public PropertyDescriptorCollection (System.ComponentModel.PropertyDescriptor[] properties, bool readOnly);
    parameters:
    - id: properties
      type: System.ComponentModel.PropertyDescriptor[]
      description: "Een matrix van het type <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> dat biedt de eigenschappen voor deze verzameling."
    - id: readOnly
      type: System.Boolean
      description: "Als <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, geeft aan dat de verzameling kan niet worden gewijzigd."
  overload: System.ComponentModel.PropertyDescriptorCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)
  id: Add(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Add(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Add(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Voegt de opgegeven <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> aan de verzameling."
  syntax:
    content: public int Add (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "De <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> om toe te voegen aan de verzameling."
    return:
      type: System.Int32
      description: "De index van de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> die is toegevoegd aan de verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Clear
  id: Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: PropertyDescriptorCollection.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee verwijdert u alle <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten uit de verzameling."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.PropertyDescriptorCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)
  id: Contains(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Contains(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Contains(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Contains(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert of de verzameling bevat de gegeven <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  syntax:
    content: public bool Contains (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "De <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> vinden in de verzameling."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verzameling bevat de gegeven <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptorCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDescriptorCollection.CopyTo(Array,Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "De volledige verzameling worden gekopieerd naar een matrix, beginnend bij het nummer van de opgegeven index."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Een matrix van <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten elementen van de verzameling te kopiëren."
    - id: index
      type: System.Int32
      description: "De index van de `array` parameter bij welke kopiëren begint."
  overload: System.ComponentModel.PropertyDescriptorCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Count
  id: Count
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Count
  nameWithType: PropertyDescriptorCollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee haalt het aantal eigenschap descriptors in de verzameling."
  remarks: "U kunt de eigenschap Count om in te stellen de grenzen van een lus die een verzameling van objecten doorlopen. Omdat de verzameling op nul gebaseerde, moet u gebruiken `Count - 1` als de bovenste grens van de lus."
  example:
  - "The following code example uses the Count property to print the number of properties on `button1`. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-vb[Classic PropertyDescriptorCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._29_1.vb)]\n [!code-cpp[Classic PropertyDescriptorCollection.Count Example#1](~/add/codesnippet/cpp/p-system.componentmodel._29_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.Count Example#1](~/add/codesnippet/csharp/p-system.componentmodel._29_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het nummer van de eigenschap descriptors in de verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Empty
  id: Empty
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Empty
  nameWithType: PropertyDescriptorCollection.Empty
  fullName: System.ComponentModel.PropertyDescriptorCollection.Empty
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee geeft u een lege verzameling die u gebruiken kunt in plaats van een nieuwe geen objecten maken. Dit <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> veld is alleen-lezen."
  syntax:
    content: public static readonly System.ComponentModel.PropertyDescriptorCollection Empty;
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)
  id: Find(System.String,System.Boolean)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Find(String,Boolean)
  nameWithType: PropertyDescriptorCollection.Find(String,Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Find(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> gebruiken met de opgegeven naam een Booleaanse waarde geeft u aan of hoofdlettergevoeligheid niet van belang."
  remarks: ''
  example:
  - "The following code example finds a specific <xref:System.ComponentModel.PropertyDescriptor>. It prints the type of component for this <xref:System.ComponentModel.PropertyDescriptor> in a text box. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cs[Classic PropertyDescriptorCollection.Find Example#1](~/add/codesnippet/csharp/9cbbd46a-64d4-4a04-8109-_1.cs)]\n [!code-cpp[Classic PropertyDescriptorCollection.Find Example#1](~/add/codesnippet/cpp/9cbbd46a-64d4-4a04-8109-_1.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection.Find Example#1](~/add/codesnippet/visualbasic/9cbbd46a-64d4-4a04-8109-_1.vb)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor Find (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> om te retourneren van de verzameling."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt dat het geval van de naam van de eigenschap; genegeerd anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Een <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> met de opgegeven naam of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de eigenschap niet bestaat."
  overload: System.ComponentModel.PropertyDescriptorCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PropertyDescriptorCollection.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert een enumerator voor deze klasse."
  remarks: ''
  example:
  - "The following code example gets an enumerator for the properties on `button1`. It uses the enumerator to print the names of the properties in the collection. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/cpp/m-system.componentmodel._32_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.componentmodel._32_1.cs)]\n [!code-vb[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._32_1.vb)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator van het type <xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)
  id: IndexOf(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: IndexOf(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt de index van de opgegeven <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  syntax:
    content: public int IndexOf (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "De <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> te retourneren van de index van."
    return:
      type: System.Int32
      description: "De index van de opgegeven <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptorCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  id: Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Insert(Int32,PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Voegt de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> aan de verzameling op het nummer van de opgegeven index."
  syntax:
    content: public void Insert (int index, System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: index
      type: System.Int32
      description: "De index waarop u wilt toevoegen de `value` parameter aan de verzameling."
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "De <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> om toe te voegen aan de verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)
  id: InternalSort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: InternalSort(IComparer)
  nameWithType: PropertyDescriptorCollection.InternalSort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sorteert de leden van deze verzameling met behulp van de opgegeven <xref:System.Collections.IComparer>.</xref:System.Collections.IComparer>"
  syntax:
    content: protected void InternalSort (System.Collections.IComparer sorter);
    parameters:
    - id: sorter
      type: System.Collections.IComparer
      description: "Een vergelijkingsfunctie wilt sorteren de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten in deze verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.InternalSort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])
  id: InternalSort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: InternalSort(String[])
  nameWithType: PropertyDescriptorCollection.InternalSort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sorteert de leden van deze verzameling. De opgegeven volgorde eerst toegepast, gevolgd door de standaardsortering voor deze verzameling, die meestal alfabetische."
  remarks: ''
  example:
  - "The following code example defines the sort order for the InternalSort method. If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/csharp/362da624-49d1-447a-bc3b-_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/cpp/362da624-49d1-447a-bc3b-_1.cpp)]\n [!code-vb[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/visualbasic/362da624-49d1-447a-bc3b-_1.vb)]"
  syntax:
    content: protected void InternalSort (string[] names);
    parameters:
    - id: names
      type: System.String[]
      description: "Een matrix met tekenreeksen met een beschrijving van de volgorde waarin u wilt sorteren de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten in deze verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.InternalSort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: PropertyDescriptorCollection.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> op het nummer van de opgegeven index."
  remarks: "Nummer van de index is gebaseerd op nul. Daarom moet u 1 van de numerieke positie van een bepaalde <xref:System.ComponentModel.PropertyDescriptor>voor toegang tot die <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.PropertyDescriptor> aftrekken Bijvoorbeeld, om op te halen van de derde <xref:System.ComponentModel.PropertyDescriptor>, moet u opgeven `myColl[2]`.</xref:System.ComponentModel.PropertyDescriptor>"
  example:
  - "The following code example uses the Item property to print the name of the <xref:System.ComponentModel.PropertyDescriptor> specified by the index number in a text box. Because the index number is zero-based, this example prints the name of the second <xref:System.ComponentModel.PropertyDescriptor>. It requires that `button1` has been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.this Example#1](~/add/codesnippet/cpp/p-system.componentmodel._18_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.this Example#1](~/add/codesnippet/csharp/p-system.componentmodel._18_1.cs)]\n [!code-vb[Classic PropertyDescriptorCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._18_1.vb)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> ophalen of instellen."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "De <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> met het nummer van de opgegeven index."
  overload: System.ComponentModel.PropertyDescriptorCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De <code> index </code> parameter is geen geldige index voor artikel."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.String)
  id: Item(System.String)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: PropertyDescriptorCollection.Item(String)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> met de opgegeven naam."
  remarks: "De <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A>eigenschap is hoofdlettergevoelig zoeken naar namen.</xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> Dat wil zeggen, de namen &quot;Pnaam&quot; en &quot;Pnaam&quot; worden beschouwd als twee verschillende eigenschappen."
  example:
  - "The following code example uses the <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> property to print the type of component for the <xref:System.ComponentModel.PropertyDescriptor> specified by the index. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.this1 Example#1](~/add/codesnippet/cpp/p-system.componentmodel._19_1.cpp)]\n [!code-vb[Classic PropertyDescriptorCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._19_1.vb)]\n [!code-cs[Classic PropertyDescriptorCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.componentmodel._19_1.cs)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> om op te halen uit de verzameling."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "De <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> met de opgegeven naam of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de eigenschap niet bestaat."
  overload: System.ComponentModel.PropertyDescriptorCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)
  id: Remove(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Remove(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Remove(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Remove(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Verwijdert de opgegeven <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> uit de verzameling."
  syntax:
    content: public void Remove (System.ComponentModel.PropertyDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.PropertyDescriptor
      description: "De <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> verwijderen uit de verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee verwijdert u de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> bij de opgegeven index uit de verzameling."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De index van de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> verwijderen uit de verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort
  id: Sort
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort()
  nameWithType: PropertyDescriptorCollection.Sort()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sorteert de leden van deze verzameling met behulp van de standaardsortering voor deze verzameling, die meestal alfabetische."
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een nieuwe <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> waarin de gesorteerde <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten."
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)
  id: Sort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort(IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sorteert de leden van deze verzameling met behulp van de opgegeven <xref:System.Collections.IComparer>.</xref:System.Collections.IComparer>"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "Een vergelijkingsfunctie wilt sorteren de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten in deze verzameling."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een nieuwe <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> waarin de gesorteerde <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten."
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])
  id: Sort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort(String[])
  nameWithType: PropertyDescriptorCollection.Sort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sorteert de leden van deze verzameling. De opgegeven volgorde eerst toegepast, gevolgd door de standaardsortering voor deze verzameling, die meestal alfabetische."
  remarks: ''
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/csharp/m-system.componentmodel._8_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._8_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/cpp/m-system.componentmodel._8_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort (string[] names);
    parameters:
    - id: names
      type: System.String[]
      description: "Een matrix met tekenreeksen met een beschrijving van de volgorde waarin u wilt sorteren de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten in deze verzameling."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een nieuwe <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> waarin de gesorteerde <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten."
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  id: Sort(System.String[],System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: Sort(String[],IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(String[],IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[],IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sorteert de leden van deze verzameling. De opgegeven volgorde eerst toegepast, gevolgd door de sorteren op basis van de opgegeven <xref:System.Collections.IComparer>.</xref:System.Collections.IComparer>"
  remarks: ''
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.PropertyDescriptorCollection> contains four <xref:System.ComponentModel.PropertyDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/csharp/647021c9-86bc-46f3-95f4-_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/visualbasic/647021c9-86bc-46f3-95f4-_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/cpp/647021c9-86bc-46f3-95f4-_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection Sort (string[] names, System.Collections.IComparer comparer);
    parameters:
    - id: names
      type: System.String[]
      description: "Een matrix met tekenreeksen met een beschrijving van de volgorde waarin u wilt sorteren de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten in deze verzameling."
    - id: comparer
      type: System.Collections.IComparer
      description: "Een vergelijkingsfunctie wilt sorteren de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten in deze verzameling."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Een nieuwe <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> waarin de gesorteerde <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten."
  overload: System.ComponentModel.PropertyDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee haalt u het aantal elementen in de verzameling."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "Het aantal elementen in de verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt een waarde die aangeeft of de toegang tot de verzameling wordt gesynchroniseerd (thread-veilig)."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u toegang tot de verzameling is gesynchroniseerd (thread-safe); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee haalt u een object dat kan worden gebruikt voor het synchroniseren van toegang tot de verzameling."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Een object dat kan worden gebruikt voor het synchroniseren van toegang tot de verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Voegt een element met de opgegeven sleutel en waarde toe aan de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "<xref:System.Object>Om te gebruiken als de sleutel van het element dat u wilt toevoegen.</xref:System.Object>"
    - id: value
      type: System.Object
      description: "De <xref:System.Object>te gebruiken als de waarde van het element dat u wilt toevoegen.</xref:System.Object>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee verwijdert u alle elementen van de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  syntax:
    content: void IDictionary.Clear ();
    parameters: []
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt bepaald of de <xref:System.Collections.IDictionary>bevat een element met de opgegeven sleutel.</xref:System.Collections.IDictionary>"
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel te vinden in de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Collections.IDictionary>bevat een element met de sleutel; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert een enumerator voor deze klasse."
  remarks: ''
  example:
  - "The following code example gets an enumerator for the properties on `button1`. It uses the enumerator to print the names of the properties in the collection. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/cpp/3bd980e1-aa61-4b0a-875e-_1.cpp)]\n [!code-cs[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/3bd980e1-aa61-4b0a-875e-_1.cs)]\n [!code-vb[Classic PropertyDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/3bd980e1-aa61-4b0a-875e-_1.vb)]"
  syntax:
    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Een enumerator van het type <xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt een waarde die aangeeft of de <xref:System.Collections.IDictionary>heeft een vaste grootte.</xref:System.Collections.IDictionary>"
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Collections.IDictionary>heeft een vaste grootte, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt een waarde die aangeeft of de <xref:System.Collections.IDictionary>is alleen-lezen.</xref:System.Collections.IDictionary>"
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Collections.IDictionary>is alleen-lezen, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Opgehaald of ingesteld van het element met de opgegeven sleutel."
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element ophalen of instellen."
    return:
      type: System.Object
      description: "Het element met de opgegeven sleutel."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Keys
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Een <xref:System.Collections.ICollection>waarin de sleutels van de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary> </xref:System.Collections.ICollection> opgehaald"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "Een <xref:System.Collections.ICollection>waarin de sleutels van de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary> </xref:System.Collections.ICollection>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee verwijdert u het element met de opgegeven sleutel uit de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element te verwijderen."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Values
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Values
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Een <xref:System.Collections.ICollection>die de waarden in de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary> </xref:System.Collections.ICollection> opgehaald"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: "Een <xref:System.Collections.ICollection>die de waarden in de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary> </xref:System.Collections.ICollection>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert een <xref:System.Collections.IEnumerator>voor de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary> </xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een <xref:System.Collections.IEnumerator>voor de <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary> </xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Add(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Een item wordt toegevoegd aan de <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het item toevoegen aan de verzameling."
    return:
      type: System.Int32
      description: "De positie waarin het nieuwe element is ingevoegd."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee verwijdert u alle items uit de verzameling."
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt bepaald of de verzameling een bepaalde waarde bevat."
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het item te vinden in de verzameling."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het item wordt gevonden in de verzameling; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Bepaalt de index van een opgegeven item in de verzameling."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het item te vinden in de verzameling."
    return:
      type: System.Int32
      description: "De index van <code> value </code> als gevonden in de lijst, anders -1."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Voegt een item in de verzameling op een opgegeven index."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index waarop `value` moet worden ingevoegd."
    - id: value
      type: System.Object
      description: "Het item in de verzameling invoegen."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt een waarde die aangeeft of de verzameling met een vaste grootte heeft."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verzameling een vaste grootte heeft. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt een waarde die aangeeft of de verzameling alleen-lezen is."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verzameling alleen-lezen. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Opgehaald of ingesteld van een item uit de verzameling op een opgegeven index."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van het item ophalen of instellen."
    return:
      type: System.Object
      description: "Het element bij de opgegeven index."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is not a <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>is kleiner dan 0.       - of - <code>index</code> is gelijk aan of groter zijn dan <xref:System.ComponentModel.EventDescriptorCollection.Count*>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee verwijdert u het eerste exemplaar van een bepaalde waarde uit de verzameling."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het item te verwijderen uit de verzameling."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.ComponentModel.PropertyDescriptorCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee verwijdert u het item in de opgegeven index."
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van het item te verwijderen."
  overload: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De verzameling is alleen-lezen."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: PropertyDescriptorCollection(PropertyDescriptor[])
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[],Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Add(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Add(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptorCollection.Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Clear()
  nameWithType: PropertyDescriptorCollection.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Clear()
- uid: System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Contains(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Contains(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Contains(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDescriptorCollection.CopyTo(Array,Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.ComponentModel.PropertyDescriptorCollection.Count
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDescriptorCollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.Empty
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Empty
  nameWithType: PropertyDescriptorCollection.Empty
  fullName: System.ComponentModel.PropertyDescriptorCollection.Empty
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Find(String,Boolean)
  nameWithType: PropertyDescriptorCollection.Find(String,Boolean)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Find(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PropertyDescriptorCollection.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: IndexOf(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.IndexOf(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Insert(Int32,PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Insert(Int32,PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: InternalSort(IComparer)
  nameWithType: PropertyDescriptorCollection.InternalSort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: InternalSort(String[])
  nameWithType: PropertyDescriptorCollection.InternalSort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.InternalSort(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: PropertyDescriptorCollection.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.Item(System.String)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Item(String)
  nameWithType: PropertyDescriptorCollection.Item(String)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Item(String)
- uid: System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Remove(PropertyDescriptor)
  nameWithType: PropertyDescriptorCollection.Remove(PropertyDescriptor)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Remove(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.RemoveAt(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort()
  nameWithType: PropertyDescriptorCollection.Sort()
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort()
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort(IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(IComparer)
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort(String[])
  nameWithType: PropertyDescriptorCollection.Sort(String[])
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[])
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort(String[],IComparer)
  nameWithType: PropertyDescriptorCollection.Sort(String[],IComparer)
  fullName: System.ComponentModel.PropertyDescriptorCollection.Sort(String[],IComparer)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.Count
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Add(Object,Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Clear()
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Contains(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Item(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Keys
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Remove(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Values
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Values
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Add(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Add(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Clear()
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Clear()
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Contains(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IndexOf(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Item(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Remove(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.ComponentModel.PropertyDescriptorCollection.#ctor*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptorCollection.Add*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Add
  nameWithType: PropertyDescriptorCollection.Add
- uid: System.ComponentModel.PropertyDescriptorCollection.Clear*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Clear
  nameWithType: PropertyDescriptorCollection.Clear
- uid: System.ComponentModel.PropertyDescriptorCollection.Contains*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Contains
  nameWithType: PropertyDescriptorCollection.Contains
- uid: System.ComponentModel.PropertyDescriptorCollection.CopyTo*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyDescriptorCollection.CopyTo
- uid: System.ComponentModel.PropertyDescriptorCollection.Count*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDescriptorCollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.Find*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Find
  nameWithType: PropertyDescriptorCollection.Find
- uid: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PropertyDescriptorCollection.GetEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.IndexOf*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: IndexOf
  nameWithType: PropertyDescriptorCollection.IndexOf
- uid: System.ComponentModel.PropertyDescriptorCollection.Insert*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Insert
  nameWithType: PropertyDescriptorCollection.Insert
- uid: System.ComponentModel.PropertyDescriptorCollection.InternalSort*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: InternalSort
  nameWithType: PropertyDescriptorCollection.InternalSort
- uid: System.ComponentModel.PropertyDescriptorCollection.Item*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Item
  nameWithType: PropertyDescriptorCollection.Item
- uid: System.ComponentModel.PropertyDescriptorCollection.Remove*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Remove
  nameWithType: PropertyDescriptorCollection.Remove
- uid: System.ComponentModel.PropertyDescriptorCollection.RemoveAt*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: RemoveAt
  nameWithType: PropertyDescriptorCollection.RemoveAt
- uid: System.ComponentModel.PropertyDescriptorCollection.Sort*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: Sort
  nameWithType: PropertyDescriptorCollection.Sort
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.Count
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.IsSynchronized
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyDescriptorCollection.System.Collections.ICollection.SyncRoot
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Add
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Clear
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Clear
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Contains
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Item
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Keys
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Remove
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: PropertyDescriptorCollection.System.Collections.IDictionary.Values
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Add
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Clear
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Contains
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IndexOf
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Insert
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsFixedSize
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Item
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.Remove
- uid: System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt*
  parent: System.ComponentModel.PropertyDescriptorCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: PropertyDescriptorCollection.System.Collections.IList.RemoveAt
