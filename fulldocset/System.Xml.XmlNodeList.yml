### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlNodeList
  id: XmlNodeList
  children:
  - System.Xml.XmlNodeList.#ctor
  - System.Xml.XmlNodeList.Count
  - System.Xml.XmlNodeList.GetEnumerator
  - System.Xml.XmlNodeList.Item(System.Int32)
  - System.Xml.XmlNodeList.ItemOf(System.Int32)
  - System.Xml.XmlNodeList.PrivateDisposeNodeList
  - System.Xml.XmlNodeList.System#IDisposable#Dispose
  langs:
  - csharp
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
  type: Class
  summary: "Vertegenwoordigt een geordende verzameling knooppunten."
  remarks: "Wijzigingen in de onderliggende elementen van het knooppuntobject dat de verzameling XmlNodeList is gemaakt vanaf direct zichtbaar zijn in de knooppunten die zijn geretourneerd door de `XmlNodeList` eigenschappen en methoden. `XmlNodeList`ondersteunt iteratie en geïndexeerde toegang.       `XmlNodeList`wordt geretourneerd door de volgende eigenschappen en methoden.      - <xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=fullName>-Retourneert een `XmlNodeList` met alle onderliggende elementen van het knooppunt.</xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=fullName>      - <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>-Retourneert een `XmlNodeList` met een verzameling van knooppunten die overeenkomt met de XPath-query.</xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>      - `GetElementsByTagName` -Retourneert een `XmlNodeList` met een lijst van alle onderliggende elementen die overeenkomen met de opgegeven naam. Deze methode is beschikbaar in zowel de <xref:System.Xml.XmlDocument>en <xref:System.Xml.XmlElement>klassen.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument>"
  syntax:
    content: 'public abstract class XmlNodeList : IDisposable, System.Collections.IEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.#ctor
  id: '#ctor'
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: XmlNodeList()
  nameWithType: XmlNodeList.XmlNodeList()
  fullName: System.Xml.XmlNodeList.XmlNodeList()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> klasse."
  syntax:
    content: protected XmlNodeList ();
    parameters: []
  overload: System.Xml.XmlNodeList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.Count
  id: Count
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: Count
  nameWithType: XmlNodeList.Count
  fullName: System.Xml.XmlNodeList.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee wordt het aantal knooppunten in de <xref uid=&quot;langword_csharp_XmlNodeList&quot; name=&quot;XmlNodeList&quot; href=&quot;&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Xml.XmlDocument> object and uses the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method and the resulting `XmlNodeList` to display all the book titles.  \n  \n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlnodelist_0_1.cpp)]\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnodelist_0_1.vb)]\n [!code-cs[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlnodelist_0_1.cs)]  \n  \n The example uses the file `2books.xml` as input.  \n  \n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/add/codesnippet/xml/p-system.xml.xmlnodelist_0_2.xml)]"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal knooppunten in de <xref uid=&quot;langword_csharp_XmlNodeList&quot; name=&quot;XmlNodeList&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlNodeList.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: XmlNodeList.GetEnumerator()
  fullName: System.Xml.XmlNodeList.GetEnumerator()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u een enumerator wordt herhaaldelijk dat via de verzameling van knooppunten."
  remarks: "Biedt een eenvoudige &quot;foreach&quot; stijl iteratie over het verzamelen van knooppunten in de `XmlNodeList`."
  example:
  - "The following example displays all the book titles.  \n  \n [!code-cpp[Classic WebData XmlNodeList.GetEnumerator Example#1](~/add/codesnippet/cpp/m-system.xml.xmlnodelist_0_1.cpp)]\n [!code-vb[Classic WebData XmlNodeList.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlnodelist_0_1.vb)]\n [!code-cs[Classic WebData XmlNodeList.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.xml.xmlnodelist_0_1.cs)]  \n  \n The example uses the file `2books.xml` as input.  \n  \n [!code-xml[Classic WebData XmlNodeList.GetEnumerator Example#2](~/add/codesnippet/xml/m-system.xml.xmlnodelist_0_2.xml)]"
  syntax:
    content: public abstract System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator gebruikt voor het doorlopen van de verzameling van knooppunten."
  overload: System.Xml.XmlNodeList.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: XmlNodeList.Item(Int32)
  fullName: System.Xml.XmlNodeList.Item(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt een knooppunt op de opgegeven index."
  remarks: ''
  example:
  - "The following example gets and displays the second node in the `XmlNodeList`.  \n  \n [!code-cpp[Classic WebData XmlNodeList.Item Example#1](~/add/codesnippet/cpp/m-system.xml.xmlnodelist_1_1.cpp)]\n [!code-vb[Classic WebData XmlNodeList.Item Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlnodelist_1_1.vb)]\n [!code-cs[Classic WebData XmlNodeList.Item Example#1](~/add/codesnippet/csharp/m-system.xml.xmlnodelist_1_1.cs)]"
  syntax:
    content: public abstract System.Xml.XmlNode Item (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index in de lijst met knooppunten."
    return:
      type: System.Xml.XmlNode
      description: "De <xref href=&quot;System.Xml.XmlNode&quot;> </xref> met de opgegeven index in de verzameling. Als <code> index </code> is groter dan of gelijk zijn aan het aantal knooppunten in de lijst dit retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlNodeList.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.ItemOf(System.Int32)
  id: ItemOf(System.Int32)
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: ItemOf(Int32)
  nameWithType: XmlNodeList.ItemOf(Int32)
  fullName: System.Xml.XmlNodeList.ItemOf(Int32)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u een knooppunt op de opgegeven index."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Xml.XmlDocument> object and uses the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method and the resulting `XmlNodeList` to display all the book titles.  \n  \n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlnodelist_1_1.cpp)]\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnodelist_1_1.vb)]\n [!code-cs[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlnodelist_1_1.cs)]  \n  \n The example uses the file `2books.xml` as input.  \n  \n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/add/codesnippet/xml/p-system.xml.xmlnodelist_1_2.xml)]"
  syntax:
    content: public virtual System.Xml.XmlNode this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "De op nul gebaseerde index in de lijst met knooppunten."
    return:
      type: System.Xml.XmlNode
      description: "De <xref href=&quot;System.Xml.XmlNode&quot;> </xref> met de opgegeven index in de verzameling. Als wordt index groter dan of gelijk zijn aan het aantal knooppunten in de lijst is, retourneert deze <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlNodeList.ItemOf*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList
  id: PrivateDisposeNodeList
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: PrivateDisposeNodeList()
  nameWithType: XmlNodeList.PrivateDisposeNodeList()
  fullName: System.Xml.XmlNodeList.PrivateDisposeNodeList()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Bronnen in de lijst met knooppunten verwijdert privé."
  syntax:
    content: protected virtual void PrivateDisposeNodeList ();
    parameters: []
  overload: System.Xml.XmlNodeList.PrivateDisposeNodeList*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: XmlNodeList.System.IDisposable.Dispose()
  fullName: System.Xml.XmlNodeList.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> klasse."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Xml.XmlNodeList.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlNodeList.#ctor
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: XmlNodeList()
  nameWithType: XmlNodeList.XmlNodeList()
  fullName: System.Xml.XmlNodeList.XmlNodeList()
- uid: System.Xml.XmlNodeList.Count
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Count
  nameWithType: XmlNodeList.Count
  fullName: System.Xml.XmlNodeList.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlNodeList.GetEnumerator
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: GetEnumerator()
  nameWithType: XmlNodeList.GetEnumerator()
  fullName: System.Xml.XmlNodeList.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xml.XmlNodeList.Item(System.Int32)
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Item(Int32)
  nameWithType: XmlNodeList.Item(Int32)
  fullName: System.Xml.XmlNodeList.Item(Int32)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.XmlNodeList.ItemOf(System.Int32)
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: ItemOf(Int32)
  nameWithType: XmlNodeList.ItemOf(Int32)
  fullName: System.Xml.XmlNodeList.ItemOf(Int32)
- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: PrivateDisposeNodeList()
  nameWithType: XmlNodeList.PrivateDisposeNodeList()
  fullName: System.Xml.XmlNodeList.PrivateDisposeNodeList()
- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: XmlNodeList.System.IDisposable.Dispose()
  fullName: System.Xml.XmlNodeList.System.IDisposable.Dispose()
- uid: System.Xml.XmlNodeList.#ctor*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList.XmlNodeList
- uid: System.Xml.XmlNodeList.Count*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Count
  nameWithType: XmlNodeList.Count
- uid: System.Xml.XmlNodeList.GetEnumerator*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: GetEnumerator
  nameWithType: XmlNodeList.GetEnumerator
- uid: System.Xml.XmlNodeList.Item*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Item
  nameWithType: XmlNodeList.Item
- uid: System.Xml.XmlNodeList.ItemOf*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: ItemOf
  nameWithType: XmlNodeList.ItemOf
- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: PrivateDisposeNodeList
  nameWithType: XmlNodeList.PrivateDisposeNodeList
- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: XmlNodeList.System.IDisposable.Dispose
