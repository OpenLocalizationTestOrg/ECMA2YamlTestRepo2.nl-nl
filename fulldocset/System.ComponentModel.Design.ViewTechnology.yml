### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ViewTechnology
  id: ViewTechnology
  children:
  - System.ComponentModel.Design.ViewTechnology.Default
  - System.ComponentModel.Design.ViewTechnology.Passthrough
  - System.ComponentModel.Design.ViewTechnology.WindowsForms
  langs:
  - csharp
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
  type: Enum
  summary: "Id&quot;s voor een reeks technologieÃ«n die ondersteuning bieden voor designer hosts definieert."
  remarks: "Het model van de adapter weergave vervangt, en voegt u functionaliteit toe aan de functie ViewTechnology. de functie ViewTechnology is echter behouden voor achterwaartse compatibiliteit en toekomstig gebruik, als u kiest. Zie voor meer informatie &quot;.NET vorm bibliotheek: een voorbeeld Designer&quot; in het Knowledge Base op http://windowsforms.net/articles/shapedesigner.aspx van Windows Forms.       ViewTechnology definieert-id&quot;s die kunnen duiden op de modus te gebruiken voor het beheren van de weergave van een document designer gehost.       Gebruik de standaardwaarde alleen in de ontwerpfunctie hostomgeving. In eerdere versies van de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)], de inventarisatie ViewTechnology het type van UI-model wordt ondersteund door een hoofdontwerp opgegeven. Omdat dit model kan niet worden uitgebreid, moet u in plaats daarvan gebruiken een *weergave adapter* model. Een weergave-adapter is een type dat een object van het ene type naar een andere aanpast.       Bijvoorbeeld een HTML-ontwerper mogelijk retourneren een `DemoDOM` structuur als de weergave. De HTML designer retourneert een technologie voor het weergeven van standaard. Windows Forms hostomgeving heeft een of meer weergave adapterklassen beschikbaar. Als een dergelijke klasse kan converteert de `DemoDOM` in een Windows Forms-besturingselement de hosttoepassing dit soort designer kan ondersteunen. Als geen adapter het gegevenstype dat is geretourneerd uit de ontwerper kan verwerken <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>methode, zal het laden van de ontwerpfunctie mislukken en de gebruiker krijgt een fout.</xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>       [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]heeft een EFI-schema voor het ontwikkelen van weergave-adapters, zodat u deze kunt aanpassen aan een UI-technologie. Derde technologie-providers bieden ook een juiste weergave-adapter en hun netwerkobjectmodellen zijn onmiddellijk worden gebruikt.       Voor een voorbeeld die gebruikmaakt van adapters weergeven, Zie &quot;.NET vorm bibliotheek: een voorbeeld Designer&quot; in het Knowledge Base op http://windowsforms.net/articles/shapedesigner.aspx van Windows Forms."
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ViewTechnology
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Default
  id: Default
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hiermee geeft u de standaard weergave technologie-ondersteuning."
  remarks: "Het hoofdontwerp kan elk type object retourneren, maar het object moet compatibel zijn met een adapter voor de technologie van de host. Hostomgevingen zoals [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] bieden een manier om de nieuwe weergave technologie adapters aansluit. De standaard view-object voor het Windows Forms-designer is een <xref:System.Windows.Forms.Control?displayProperty=fullName>exemplaar.</xref:System.Windows.Forms.Control?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: Default
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  id: Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hiermee geeft u een modus waarin het object view rechtstreeks naar de ontwikkelomgeving wordt doorgegeven."
  remarks: "De weergaveobject moet een interface die is vereist dat de ontwikkelomgeving implementeren. De [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] ontwikkelomgeving ondersteunt weergeven met objecten die een ActiveX-besturingselement, actieve document of een object dat u implementeert de interface IVsWindowPane die beschikbaar is via [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] VSI ([!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] integratie) programma. De [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] ontwikkelomgeving biedt ondersteuning voor deze weergave-technologie. Ondersteuning voor deze weergave-technologie is niet noodzakelijkerwijs beschikbaar in alle ontwikkelomgevingen."
  syntax:
    content: Passthrough
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  id: WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hiermee geeft u een modus waarin een Windows Forms-besturingselement-object de weergave voor het hoofdontwerp bevat."
  remarks: "De ontwerpfunctie host vult het venster development environment document met het Windows Forms-besturingselement."
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.  \n  \n [!code-cpp[LocalizationExtenderProviderExample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_2.cpp)]\n [!code-cs[LocalizationExtenderProviderExample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_2.cs)]\n [!code-vb[LocalizationExtenderProviderExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_2.vb)]"
  syntax:
    content: WindowsForms
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ComponentModel.Design.ViewTechnology.Default
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
- uid: System.ComponentModel.Design.ViewTechnology
  parent: System.ComponentModel.Design
  isExternal: false
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
