### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DeriveBytes
  id: DeriveBytes
  children:
  - System.Security.Cryptography.DeriveBytes.#ctor
  - System.Security.Cryptography.DeriveBytes.Dispose
  - System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  - System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  - System.Security.Cryptography.DeriveBytes.Reset
  langs:
  - csharp
  name: DeriveBytes
  nameWithType: DeriveBytes
  fullName: System.Security.Cryptography.DeriveBytes
  type: Class
  summary: "Hiermee geeft u de abstracte basisklasse waaruit alle klassen die zijn afgeleid van een opgegeven lengte byte reeksen overnemen."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DeriveBytes : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: DeriveBytes()
  nameWithType: DeriveBytes.DeriveBytes()
  fullName: System.Security.Cryptography.DeriveBytes.DeriveBytes()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.DeriveBytes&quot;> </xref> klasse."
  syntax:
    content: protected DeriveBytes ();
    parameters: []
  overload: System.Security.Cryptography.DeriveBytes.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.Dispose
  id: Dispose
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: Dispose()
  nameWithType: DeriveBytes.Dispose()
  fullName: System.Security.Cryptography.DeriveBytes.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, heft u alle resources die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Security.Cryptography.DeriveBytes&quot;> </xref> klasse."
  remarks: "Roep `Dispose` wanneer u klaar bent met de <xref:System.Security.Cryptography.DeriveBytes>.</xref:System.Security.Cryptography.DeriveBytes> De `Dispose` methode blijft de <xref:System.Security.Cryptography.DeriveBytes>in een onbruikbare status.</xref:System.Security.Cryptography.DeriveBytes> Na het aanroepen `Dispose`, moet u alle verwijzingen naar vrijgeven de <xref:System.Security.Cryptography.DeriveBytes>zodat het geheugen door de garbage collector vrijmaken kunt die de <xref:System.Security.Cryptography.DeriveBytes>is bepaald dat zich bevindt.</xref:System.Security.Cryptography.DeriveBytes> </xref:System.Security.Cryptography.DeriveBytes>       Zie voor meer informatie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Altijd aanroep `Dispose` voordat u uw laatste verwijzing naar de <xref:System.Security.Cryptography.DeriveBytes>.</xref:System.Security.Cryptography.DeriveBytes> vrijgeven Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de <xref:System.Security.Cryptography.DeriveBytes>van het object `Finalize` methode.</xref:System.Security.Cryptography.DeriveBytes>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.DeriveBytes.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, heft u de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Security.Cryptography.DeriveBytes&quot;> </xref> klasse en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()` methode en de `Finalize` methode. `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de `disposing` parameter ingesteld op `true`. `Finalize`roept `Dispose` met `disposing` ingesteld op `false`.       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Security.Cryptography.DeriveBytes>verwijzingen.</xref:System.Security.Cryptography.DeriveBytes> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Security.Cryptography.DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  id: GetBytes(System.Int32)
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: GetBytes(Int32)
  nameWithType: DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.DeriveBytes.GetBytes(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert de pseudo-willekeurige sleutel bytes."
  syntax:
    content: public abstract byte[] GetBytes (int cb);
    parameters:
    - id: cb
      type: System.Int32
      description: "Het aantal pseudo-willekeurige sleutel bytes te genereren."
    return:
      type: System.Byte[]
      description: "Een bytematrix gevuld met een pseudo-willekeurige sleutel bytes."
  overload: System.Security.Cryptography.DeriveBytes.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.Reset
  id: Reset
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: Reset()
  nameWithType: DeriveBytes.Reset()
  fullName: System.Security.Cryptography.DeriveBytes.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, stelt u de status van de bewerking opnieuw."
  syntax:
    content: public abstract void Reset ();
    parameters: []
  overload: System.Security.Cryptography.DeriveBytes.Reset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.DeriveBytes.#ctor
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: DeriveBytes()
  nameWithType: DeriveBytes.DeriveBytes()
  fullName: System.Security.Cryptography.DeriveBytes.DeriveBytes()
- uid: System.Security.Cryptography.DeriveBytes.Dispose
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose()
  nameWithType: DeriveBytes.Dispose()
  fullName: System.Security.Cryptography.DeriveBytes.Dispose()
- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.DeriveBytes.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: GetBytes(Int32)
  nameWithType: DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.DeriveBytes.GetBytes(Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.DeriveBytes.Reset
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Reset()
  nameWithType: DeriveBytes.Reset()
  fullName: System.Security.Cryptography.DeriveBytes.Reset()
- uid: System.Security.Cryptography.DeriveBytes.#ctor*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: DeriveBytes
  nameWithType: DeriveBytes.DeriveBytes
- uid: System.Security.Cryptography.DeriveBytes.Dispose*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose
  nameWithType: DeriveBytes.Dispose
- uid: System.Security.Cryptography.DeriveBytes.GetBytes*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: GetBytes
  nameWithType: DeriveBytes.GetBytes
- uid: System.Security.Cryptography.DeriveBytes.Reset*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Reset
  nameWithType: DeriveBytes.Reset
