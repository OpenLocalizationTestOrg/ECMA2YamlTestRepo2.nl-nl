### YamlMime:ManagedReference
items:
- uid: System.AppDomainSetup
  id: AppDomainSetup
  children:
  - System.AppDomainSetup.#ctor
  - System.AppDomainSetup.#ctor(System.ActivationContext)
  - System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)
  - System.AppDomainSetup.ActivationArguments
  - System.AppDomainSetup.AppDomainInitializer
  - System.AppDomainSetup.AppDomainInitializerArguments
  - System.AppDomainSetup.AppDomainManagerAssembly
  - System.AppDomainSetup.AppDomainManagerType
  - System.AppDomainSetup.ApplicationBase
  - System.AppDomainSetup.ApplicationName
  - System.AppDomainSetup.ApplicationTrust
  - System.AppDomainSetup.CachePath
  - System.AppDomainSetup.ConfigurationFile
  - System.AppDomainSetup.DisallowApplicationBaseProbing
  - System.AppDomainSetup.DisallowBindingRedirects
  - System.AppDomainSetup.DisallowCodeDownload
  - System.AppDomainSetup.DisallowPublisherPolicy
  - System.AppDomainSetup.DynamicBase
  - System.AppDomainSetup.GetConfigurationBytes
  - System.AppDomainSetup.LicenseFile
  - System.AppDomainSetup.LoaderOptimization
  - System.AppDomainSetup.PartialTrustVisibleAssemblies
  - System.AppDomainSetup.PrivateBinPath
  - System.AppDomainSetup.PrivateBinPathProbe
  - System.AppDomainSetup.SandboxInterop
  - System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  - System.AppDomainSetup.SetConfigurationBytes(System.Byte[])
  - System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)
  - System.AppDomainSetup.ShadowCopyDirectories
  - System.AppDomainSetup.ShadowCopyFiles
  - System.AppDomainSetup.TargetFrameworkName
  langs:
  - csharp
  name: AppDomainSetup
  nameWithType: AppDomainSetup
  fullName: System.AppDomainSetup
  type: Class
  summary: "Hiermee geeft u bindingsgegevens assembly die kan worden toegevoegd aan een exemplaar van <xref href=&quot;System.AppDomain&quot;> </xref>."
  remarks: "Wijzigen van de eigenschappen van een AppDomainSetup-exemplaar heeft geen invloed op een bestaande <xref:System.AppDomain>.</xref:System.AppDomain> Dit kan invloed hebben op alleen het maken van een nieuwe <xref:System.AppDomain>, wanneer de <xref:System.AppDomain.CreateDomain%2A>methode wordt aangeroepen met de AppDomainSetup-exemplaar als parameter.</xref:System.AppDomain.CreateDomain%2A> </xref:System.AppDomain>       Deze klasse implementeert de <xref:System.IAppDomainSetup>interface.</xref:System.IAppDomainSetup>      > [!CAUTION] > De standaardwaarde voor de <xref:System.AppDomainSetup.DisallowCodeDownload%2A>eigenschap is ingesteld op false.</xref:System.AppDomainSetup.DisallowCodeDownload%2A> Deze instelling is niet veilig voor services. Om te voorkomen dat services gedeeltelijk vertrouwde code downloaden, kunt u deze eigenschap instelt op true"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class AppDomainSetup : IAppDomainSetup
  inheritance:
  - System.Object
  implements:
  - System.IAppDomainSetup
  inheritedMembers: []
  platform:
  - net462
- uid: System.AppDomainSetup.#ctor
  id: '#ctor'
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainSetup()
  nameWithType: AppDomainSetup.AppDomainSetup()
  fullName: System.AppDomainSetup.AppDomainSetup()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AppDomainSetup&quot;> </xref> klasse."
  syntax:
    content: public AppDomainSetup ();
    parameters: []
  overload: System.AppDomainSetup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.#ctor(System.ActivationContext)
  id: '#ctor(System.ActivationContext)'
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainSetup(ActivationContext)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationContext)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AppDomainSetup&quot;> </xref> klasse met de opgegeven activeringscontext moet worden gebruikt voor activering op basis van een manifest van een toepassingsdomein."
  remarks: "De <xref:System.ActivationContext>voor het opgegeven object `activationContext` wordt gebruikt voor het genereren van een <xref:System.Runtime.Hosting.ActivationArguments>object met gegevens die zijn vereist voor het activeren van een nieuw toepassingsdomein.</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.ActivationContext> Dit <xref:System.Runtime.Hosting.ActivationArguments>object toegankelijk zijn via de <xref:System.AppDomainSetup.ActivationArguments%2A>eigenschap.</xref:System.AppDomainSetup.ActivationArguments%2A> </xref:System.Runtime.Hosting.ActivationArguments>"
  syntax:
    content: public AppDomainSetup (ActivationContext activationContext);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "De activeringscontext moet worden gebruikt voor een toepassingsdomein."
  overload: System.AppDomainSetup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)
  id: '#ctor(System.Runtime.Hosting.ActivationArguments)'
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainSetup(ActivationArguments)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationArguments)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationArguments)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AppDomainSetup&quot;> </xref> klasse met de opgegeven activeringsargumenten vereist is voor activering op basis van een manifest van een toepassingsdomein."
  remarks: "Het object dat is opgegeven voor `activationArguments` toegankelijk zijn via de <xref:System.AppDomainSetup.ActivationArguments%2A>eigenschap.</xref:System.AppDomainSetup.ActivationArguments%2A>"
  syntax:
    content: public AppDomainSetup (System.Runtime.Hosting.ActivationArguments activationArguments);
    parameters:
    - id: activationArguments
      type: System.Runtime.Hosting.ActivationArguments
      description: "Een object dat Hiermee geeft u de vereiste informatie voor de activering op basis van het manifest van een nieuw toepassingsdomein."
  overload: System.AppDomainSetup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationArguments</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.ActivationArguments
  id: ActivationArguments
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ActivationArguments
  nameWithType: AppDomainSetup.ActivationArguments
  fullName: System.AppDomainSetup.ActivationArguments
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van gegevens over het activeren van een toepassingsdomein."
  remarks: "Er is geen uitzondering gegenereerd als deze eigenschap is ingesteld op `null`.       De informatie die door de <xref:System.Runtime.Hosting.ActivationArguments>object ondersteunt activering op basis van het manifest.</xref:System.Runtime.Hosting.ActivationArguments>"
  syntax:
    content: public System.Runtime.Hosting.ActivationArguments ActivationArguments { get; set; }
    return:
      type: System.Runtime.Hosting.ActivationArguments
      description: "Een object met gegevens over het activeren van een toepassingsdomein."
  overload: System.AppDomainSetup.ActivationArguments*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De eigenschap is ingesteld op een <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> object waarvan de toepassingsidentiteit komt niet overeen met de toepassings-id van de <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> object dat wordt geretourneerd door de <> </> *> eigenschap. Er is geen uitzondering gegenereerd als de <> </> *> eigenschap is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainInitializer
  id: AppDomainInitializer
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainInitializer
  nameWithType: AppDomainSetup.AppDomainInitializer
  fullName: System.AppDomainSetup.AppDomainInitializer
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.AppDomainInitializer&quot;> </xref> delegeren, die staat voor een callback-methode wordt aangeroepen wanneer het toepassingsdomein is geïnitialiseerd."
  remarks: "Informatie doorgeven aan de retouraanroepmethode, wijzen een matrix met tekenreeksen voor de <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A>eigenschap.</xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> De matrix wordt doorgegeven aan de retouraanroepmethode telkens wanneer een <xref:System.AppDomain>is geïnitialiseerd.</xref:System.AppDomain>       De callback-methode wordt uitgevoerd in de context van het zojuist gemaakte toepassingsdomein."
  example:
  - "The following example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain. The AppDomainInitializer property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized. The arguments for the callback method are placed in an array of strings, which is assigned to the <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> property. When the child domain is created, the callback method simply prints the strings.  \n  \n [!code-cpp[AppDomainInitializer#1](~/add/codesnippet/cpp/p-system.appdomainsetup._4_1.cpp)]\n [!code-cs[AppDomainInitializer#1](~/add/codesnippet/csharp/p-system.appdomainsetup._4_1.cs)]\n [!code-vb[AppDomainInitializer#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._4_1.vb)]"
  syntax:
    content: public AppDomainInitializer AppDomainInitializer { get; set; }
    return:
      type: System.AppDomainInitializer
      description: "Een gemachtigde die een callback-methode wordt aangeroepen vertegenwoordigt wanneer het toepassingsdomein is geïnitialiseerd."
  overload: System.AppDomainSetup.AppDomainInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainInitializerArguments
  id: AppDomainInitializerArguments
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainInitializerArguments
  nameWithType: AppDomainSetup.AppDomainInitializerArguments
  fullName: System.AppDomainSetup.AppDomainInitializerArguments
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de argumenten doorgegeven aan de retouraanroepmethode dat wordt vertegenwoordigd door de <xref href=&quot;System.AppDomainInitializer&quot;> </xref> delegeren. De callback-methode wordt aangeroepen wanneer het toepassingsdomein is geïnitialiseerd."
  remarks: "Gebruik de <xref:System.AppDomainSetup.AppDomainInitializer%2A>eigenschap om op te geven van een callback-methode wordt aangeroepen tijdens <xref:System.AppDomain>initialisatie.</xref:System.AppDomain> </xref:System.AppDomainSetup.AppDomainInitializer%2A> Als de <xref:System.AppDomainSetup.AppDomainInitializer%2A>eigenschap niet is ingesteld, wordt de matrix die is toegewezen aan deze eigenschap niet gebruikt.</xref:System.AppDomainSetup.AppDomainInitializer%2A>       De callback-methode wordt uitgevoerd in de context van het zojuist gemaakte toepassingsdomein."
  example:
  - "The following code example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain. The <xref:System.AppDomainSetup.AppDomainInitializer%2A> property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized. The arguments for the callback method are placed in an array of strings, which is assigned to the AppDomainInitializerArguments property. When the child domain is created, the callback method simply prints the strings.  \n  \n [!code-cpp[AppDomainInitializer#1](~/add/codesnippet/cpp/p-system.appdomainsetup._0_1.cpp)]\n [!code-cs[AppDomainInitializer#1](~/add/codesnippet/csharp/p-system.appdomainsetup._0_1.cs)]\n [!code-vb[AppDomainInitializer#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._0_1.vb)]"
  syntax:
    content: public string[] AppDomainInitializerArguments { get; set; }
    return:
      type: System.String[]
      description: "Een matrix met tekenreeksen die wordt doorgegeven aan de retouraanroepmethode dat wordt vertegenwoordigd door de <xref href=&quot;System.AppDomainInitializer&quot;> </xref> delegeren, wanneer de callback-methode wordt aangeroepen tijdens <xref href=&quot;System.AppDomain&quot;> </xref> initialisatie."
  overload: System.AppDomainSetup.AppDomainInitializerArguments*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainManagerAssembly
  id: AppDomainManagerAssembly
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainManagerAssembly
  nameWithType: AppDomainSetup.AppDomainManagerAssembly
  fullName: System.AppDomainSetup.AppDomainManagerAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de weergavenaam van de assembly met het type van het domein Toepassingsbeheer voor toepassingsdomeinen gemaakt met behulp van dit <xref href=&quot;System.AppDomainSetup&quot;> </xref> object."
  remarks: "To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property. If either of these properties is not set, the other is ignored.  \n  \n If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName> method is called).  \n  \n When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly does not exist, or if the assembly does not contain the type specified by the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property. <xref:System.IO.FileLoadException> is thrown if the assembly is found but the version information does not match.  \n  \n To set the application domain manager for the default application domain, use the [\\<appDomainManagerAssembly>](../Topic/%3CappDomainManagerAssembly%3E%20Element.md) and [\\<appDomainManagerType>](../Topic/%3CappDomainManagerType%3E%20Element.md) elements in the [\\<runtime>](../Topic/%3Cruntime%3E%20Element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.  \n  \n This feature requires the application to have full trust. (For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.  \n  \n The format of the assembly display name is given by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property."
  syntax:
    content: public string AppDomainManagerAssembly { get; set; }
    return:
      type: System.String
      description: "De weergavenaam van de assembly waarmee de <xref:System.Type>van het domein Toepassingsbeheer.</xref:System.Type>"
  overload: System.AppDomainSetup.AppDomainManagerAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainManagerType
  id: AppDomainManagerType
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainManagerType
  nameWithType: AppDomainSetup.AppDomainManagerType
  fullName: System.AppDomainSetup.AppDomainManagerType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de volledige naam van het type dat domein Toepassingsbeheer biedt voor toepassingsdomeinen gemaakt met behulp van dit <xref href=&quot;System.AppDomainSetup&quot;> </xref> object."
  remarks: "To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property. If either of these properties is not set, the other is ignored.  \n  \n If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName> method is called).  \n  \n When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly specified by the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property does not contain the type specified by this property.  \n  \n To set the application domain manager for the default application domain, use the [\\<appDomainManagerAssembly>](../Topic/%3CappDomainManagerAssembly%3E%20Element.md) and [\\<appDomainManagerType>](../Topic/%3CappDomainManagerType%3E%20Element.md) elements in the [\\<runtime>](../Topic/%3Cruntime%3E%20Element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.  \n  \n This feature requires the application to have full trust. (For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.  \n  \n The format of the full name of a type is given by the <xref:System.Type.FullName%2A?displayProperty=fullName> property."
  syntax:
    content: public string AppDomainManagerType { get; set; }
    return:
      type: System.String
      description: "De volledige naam van het type, met inbegrip van de naamruimte."
  overload: System.AppDomainSetup.AppDomainManagerType*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ApplicationBase
  id: ApplicationBase
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ApplicationBase
  nameWithType: AppDomainSetup.ApplicationBase
  fullName: System.AppDomainSetup.ApplicationBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de naam van de map waarin de toepassing."
  remarks: "De basismap van toepassing is waar de assembly-manager begint scannen voor assembly&quot;s.       De eigenschap ApplicationBase kunt bepalen welke machtigingen worden toegekend aan een toepassingsdomein. Een toepassingsdomein die afkomstig zijn van de lokale computer normaal gesproken ontvangt bijvoorbeeld volledig vertrouwen op basis van de locatie van de oorsprong. Echter, als de eigenschap ApplicationBase van die <xref:System.AppDomain>is ingesteld op de volledige naam van een directory intranet de ApplicationBase instelling de machtigingen verleend aan het toepassingsdomein naar een LocalIntranet verlenen beperkt, zelfs als het toepassingsdomein daadwerkelijk afkomstig van de lokale computer.</xref:System.AppDomain>"
  example:
  - "The following example demonstrates how to use the ApplicationBase property to set the location where the assembly loader begins probing for assemblies to load into a new application domain.  \n  \n> [!NOTE]\n>  You must ensure that the folder you specify exists.  \n  \n [!code-vb[ADApplicationBase#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._5_1.vb)]\n [!code-cpp[ADApplicationBase#1](~/add/codesnippet/cpp/p-system.appdomainsetup._5_1.cpp)]\n [!code-cs[ADApplicationBase#1](~/add/codesnippet/csharp/p-system.appdomainsetup._5_1.cs)]"
  syntax:
    content: public string ApplicationBase { get; set; }
    return:
      type: System.String
      description: "De naam van de basismap van de toepassing."
  overload: System.AppDomainSetup.ApplicationBase*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ApplicationName
  id: ApplicationName
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ApplicationName
  nameWithType: AppDomainSetup.ApplicationName
  fullName: System.AppDomainSetup.ApplicationName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de naam van de toepassing."
  remarks: ''
  example:
  - "The following example shows how to set the ApplicationName property when you create a new application domain.  \n  \n The example creates a new application domain, and then calls the <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName> method to load the example assembly into the new application domain and create an instance of the `Worker` class. The `Worker` class inherits <xref:System.MarshalByRefObject>, so the example can use the proxy returned by <xref:System.AppDomain.CreateInstanceAndUnwrap%2A> to call the `TestLoad` method.  \n  \n The `TestLoad` method loads an assembly that you specify. You must either specify a valid, fully qualified assembly name, or comment out the <xref:System.Reflection.Assembly.Load%28System.String%29> method. The `TestLoad` method lists the assemblies that are loaded into the new application domain, showing that your specified assembly and the example assembly are loaded.  \n  \n The example uses the <xref:System.LoaderOptimizationAttribute> attribute to tell the assembly loader how the application will share code across application domains.  \n  \n [!code-cpp[ADMultiDomain#1](~/add/codesnippet/cpp/p-system.appdomainsetup._2_1.cpp)]\n [!code-cs[ADMultiDomain#1](~/add/codesnippet/csharp/p-system.appdomainsetup._2_1.cs)]\n [!code-vb[ADMultiDomain#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._2_1.vb)]"
  syntax:
    content: public string ApplicationName { get; set; }
    return:
      type: System.String
      description: "De naam van de toepassing."
  overload: System.AppDomainSetup.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ApplicationTrust
  id: ApplicationTrust
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ApplicationTrust
  nameWithType: AppDomainSetup.ApplicationTrust
  fullName: System.AppDomainSetup.ApplicationTrust
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een object dat bevat beveiligings- en informatie over vertrouwensrelaties."
  remarks: "Deze eigenschap is `null` wanneer de <xref:System.AppDomainSetup>wordt gemaakt.</xref:System.AppDomainSetup> Nadat u gewijzigd, kan niet opnieuw een null-verwijzing worden ingesteld."
  syntax:
    content: public System.Security.Policy.ApplicationTrust ApplicationTrust { get; set; }
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Een object dat beveiliging en vertrouwen informatie bevat."
  overload: System.AppDomainSetup.ApplicationTrust*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De eigenschap is ingesteld op een <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> object waarvan de toepassingsidentiteit komt niet overeen met de toepassings-id van de <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> object dat wordt geretourneerd door de <> </> *> eigenschap. Er is geen uitzondering gegenereerd als de <> </> *> eigenschap is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De eigenschap is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.CachePath
  id: CachePath
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: CachePath
  nameWithType: AppDomainSetup.CachePath
  fullName: System.AppDomainSetup.CachePath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld de naam van een gebied specifieke tot de toepassing waarin bestanden schaduwkopieën zijn."
  remarks: "Voor deze eigenschap heeft een invloed de <xref:System.AppDomainSetup.ApplicationName%2A>eigenschap moet ook worden ingesteld.</xref:System.AppDomainSetup.ApplicationName%2A> Als de <xref:System.AppDomainSetup.ApplicationName%2A>eigenschap niet is ingesteld, wordt de eigenschap CachePath genegeerd en de locatie van de shadow copy-cache standaard ingesteld op de downloadcache.</xref:System.AppDomainSetup.ApplicationName%2A>       Zie voor meer informatie over het kopiëren van de schaduw [Shadow kopiëren assembly&quot;s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string CachePath { get; set; }
    return:
      type: System.String
      description: "De volledig gekwalificeerde naam van het pad en naam van de map waarin de bestanden schaduwkopieën zijn."
  overload: System.AppDomainSetup.CachePath*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ConfigurationFile
  id: ConfigurationFile
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ConfigurationFile
  nameWithType: AppDomainSetup.ConfigurationFile
  fullName: System.AppDomainSetup.ConfigurationFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de naam van het configuratiebestand voor een toepassingsdomein."
  remarks: "Het configuratiebestand beschrijft de regels zoeken en configuratiegegevens voor het toepassingsdomein. De host die wordt gemaakt van het toepassingsdomein is verantwoordelijk voor het leveren van deze gegevens omdat de zinvolle waarden situatie verschillen.       De configuratiegegevens voor ASP.NET-toepassingen wordt bijvoorbeeld opgeslagen voor elke toepassing, de site en de computer, terwijl de configuratiegegevens voor een uitvoerbaar bestand wordt opgeslagen voor elke toepassing, gebruiker en computer. Alleen de host kent de details van de configuratiegegevens voor een bepaalde omstandigheden."
  syntax:
    content: public string ConfigurationFile { get; set; }
    return:
      type: System.String
      description: "De naam van het configuratiebestand."
  overload: System.AppDomainSetup.ConfigurationFile*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowApplicationBaseProbing
  id: DisallowApplicationBaseProbing
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowApplicationBaseProbing
  nameWithType: AppDomainSetup.DisallowApplicationBaseProbing
  fullName: System.AppDomainSetup.DisallowApplicationBaseProbing
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee geeft u op of de toepassing basispad en persoonlijke binair pad worden gecontroleerd bij het zoeken naar assembly&quot;s worden geladen."
  remarks: "Als de eigenschap DisallowApplicationBaseProbing `true`, de waarde van de <xref:System.AppDomainSetup.ApplicationBase%2A>eigenschap wordt genegeerd.</xref:System.AppDomainSetup.ApplicationBase%2A> Dat wil zeggen, er zijn geen assembly&quot;s worden gecontroleerd in de mappen die zijn opgegeven door de <xref:System.AppDomainSetup.ApplicationBase%2A>eigenschap.</xref:System.AppDomainSetup.ApplicationBase%2A> Daarnaast biedt de waarden van de <xref:System.AppDomainSetup.PrivateBinPath%2A>eigenschap en de <xref:System.AppDomainSetup.PrivateBinPathProbe%2A>eigenschap worden genegeerd.</xref:System.AppDomainSetup.PrivateBinPathProbe%2A> </xref:System.AppDomainSetup.PrivateBinPath%2A> Er is geen assembly&quot;s worden gecontroleerd voor in de mappen die zijn opgegeven door de <xref:System.AppDomainSetup.PrivateBinPath%2A>eigenschap.</xref:System.AppDomainSetup.PrivateBinPath%2A>       De eigenschap DisallowApplicationBaseProbing biedt een extra laag voor de controle over het laadproces. In de normale assembly laden volgorde, wordt de toepassingsbasis aangeduid voordat de <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName>gebeurtenis is opgetreden.</xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> Sommige toepassingen mogelijk moet echter laden van assembly&quot;s van een samengestelde OLE-bestand in een document of van een unieke bekende locatie die in de global assemblycache noch in de mappen die zijn opgegeven door de <xref:System.AppDomainSetup.ApplicationBase%2A>en <xref:System.AppDomainSetup.PrivateBinPath%2A>Eigenschappen.</xref:System.AppDomainSetup.PrivateBinPath%2A> </xref:System.AppDomainSetup.ApplicationBase%2A> Dergelijke toepassingen kan de eigenschap DisallowApplicationBaseProbing kunnen gebruiken om te voorkomen dat de vertraging veroorzaakt door normaal zoeken en om te voorkomen tijdens het laden van exemplaren van de benodigde assembly&quot;s die zich mogelijk in de normale Zoek paden."
  syntax:
    content: public bool DisallowApplicationBaseProbing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als scannen niet is toegestaan; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AppDomainSetup.DisallowApplicationBaseProbing*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowBindingRedirects
  id: DisallowBindingRedirects
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowBindingRedirects
  nameWithType: AppDomainSetup.DisallowBindingRedirects
  fullName: System.AppDomainSetup.DisallowBindingRedirects
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of een toepassingsdomein assembly omleiding binding toestaat."
  remarks: "De eigenschap DisallowBindingRedirects is ontworpen om te worden gebruikt door services en servertoepassingen waar omleiding van assembly-binding geen deel uitmaakt van het toepassingsscenario."
  syntax:
    content: public bool DisallowBindingRedirects { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de omleiding van assembly&quot;s is niet toegestaan; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als het is toegestaan."
  overload: System.AppDomainSetup.DisallowBindingRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowCodeDownload
  id: DisallowCodeDownload
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowCodeDownload
  nameWithType: AppDomainSetup.DisallowCodeDownload
  fullName: System.AppDomainSetup.DisallowCodeDownload
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of HTTP downloaden van assembly&quot;s is toegestaan voor een toepassingsdomein."
  remarks: "De eigenschap DisallowCodeDownload is ontworpen om te worden gebruikt door services en servertoepassingen waar het downloaden van de code van een intranet of Internet geen deel uitmaakt van het toepassingsscenario.      > [!CAUTION] > Is de standaardwaarde voor de eigenschap DisallowCodeDownload `false`. Deze instelling is niet veilig voor services. Om te voorkomen dat services gedeeltelijk vertrouwde code downloaden, kunt u deze eigenschap instellen op `true`."
  syntax:
    content: public bool DisallowCodeDownload { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als HTTP van assembly&quot;s downloaden is niet toegestaan. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als het is toegestaan."
  overload: System.AppDomainSetup.DisallowCodeDownload*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowPublisherPolicy
  id: DisallowPublisherPolicy
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowPublisherPolicy
  nameWithType: AppDomainSetup.DisallowPublisherPolicy
  fullName: System.AppDomainSetup.DisallowPublisherPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de [ &lt;publisherPolicy&gt; ](../Topic/%3CpublisherPolicy%3E%20Element.md) gedeelte van het configuratiebestand wordt toegepast op een toepassingsdomein."
  remarks: "De eigenschap DisallowPublisherPolicy geldt specifiek voor een webtoepassing die lokaal wordt geladen. Gebruik deze eigenschap om te voorkomen dat een kwaadwillende poging tot het uitvoeren van een onveilige webtoepassing in de veilige modus.       Zie voor meer informatie over het omzeilen van de beleidsregel van uitgever, de [omleiden van Assembly-versies](~/add/includes/ajax-current-ext-md.md) onderwerp. Zie voor meer informatie over de veilige modus, de sectie &quot;De configuratiebestanden onderzoeken&quot; van de [hoe de Runtime zoekt-assembly&quot;s](~/add/includes/ajax-current-ext-md.md) onderwerp."
  syntax:
    content: public bool DisallowPublisherPolicy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref uid=&quot;langword_csharp_&lt;publisherPolicy&gt;&quot; name=&quot;&lt;publisherPolicy&gt;&quot; href=&quot;&quot;> </xref> sectie van het configuratiebestand voor een toepassingsdomein is genegeerd. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als het gedeclareerde uitgeversbeleid wordt gehonoreerd."
  overload: System.AppDomainSetup.DisallowPublisherPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DynamicBase
  id: DynamicBase
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DynamicBase
  nameWithType: AppDomainSetup.DynamicBase
  fullName: System.AppDomainSetup.DynamicBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de basismap waar de directory voor dynamisch gegenereerde bestanden zich bevindt."
  remarks: "Use this property to set the base directory where the dynamic directory for the new application domain will be located. When code in the new application domain loads an assembly, assembly resolution looks first in the normal probing paths. If it does not find the assembly, it looks in the dynamic directory, which is returned by the <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName> property. Dynamic assemblies that will be loaded and executed by the new application domain can be placed there.  \n  \n When you assign a path to the DynamicBase property, an additional subdirectory is added; the name of this subdirectory is the hash code of the value assigned to the <xref:System.AppDomainSetup.ApplicationName%2A> property. Thus, the base directory subsequently returned by this property is always different from the value assigned.  \n  \n> [!IMPORTANT]\n>  Assigning a value to this property does not create any directories. The directories must be created or verified by the code that uses them.  \n  \n The dynamic directory is a subdirectory of DynamicBase. Its simple name is the value returned by the <xref:System.AppDomainSetup.ApplicationName%2A> property, so its format is *original path*\\\\*hash code*\\\\*application name*."
  example:
  - "The following example demonstrates how to use the DynamicBase property to set the path an application domain probes when loading dynamic assemblies.  \n  \n The example creates an <xref:System.AppDomainSetup> object and sets its <xref:System.AppDomainSetup.ApplicationName%2A> property to \"Example\" and its DynamicBase property to \"C:\\DynamicAssemblyDir\". The example then displays the DynamicBase property, to show that the hash code of the application name has been appended as a subdirectory of the path that was originally assigned.  \n  \n> [!NOTE]\n>  The base directory in this example is intended to be outside the probing path for the example application. Be sure to compile the example in a different location. Delete the base directory and all its subdirectories each time you run the example.  \n  \n The example creates a new application domain using the <xref:System.AppDomainSetup> object. The example then creates the dynamic directory if it does not already exist. Although the example uses the application domain's <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName> property to get the name of the dynamic directory, it could just as easily create the directory beforehand by concatenating the original path, the hash code of the application name, and the application name.  \n  \n The example has a `GenerateDynamicAssembly` method that emits an assembly named `DynamicHelloWorld.dll` and stores it in the new application domain's dynamic directory. The dynamic assembly contains one type, `HelloWorld`, that has a static method (`Shared` method in Visual Basic) named `HelloFromAD`. Calling this method displays the name of the application domain.  \n  \n The `Example` class derives from <xref:System.MarshalByRefObject>, so the example can create an instance of the class in the new application domain and call its `Test` method. The `Test` method loads the dynamic assembly by its display name and calls the static `HelloFromAD` method.  \n  \n You can show that the dynamic directory is searched after the normal probing paths by writing code for an assembly named `DynamicHelloWorld.dll` and compiling it in the same directory as this example. The assembly must have a class named `HelloWorld` with a static method named `HelloFromAD`. This method does not have to have the same functionality as the one in the example; it can simply display a string to the console. The assembly must also have an <xref:System.Reflection.AssemblyVersionAttribute> attribute that sets its version to 1.0.0.0. When you run the example, the assembly you compiled in the current directory is found before the dynamic directory is searched.  \n  \n [!code-cpp[ADDynamicBase#1](~/add/codesnippet/cpp/p-system.appdomainsetup._1_1.cpp)]\n [!code-cs[ADDynamicBase#1](~/add/codesnippet/csharp/p-system.appdomainsetup._1_1.cs)]\n [!code-vb[ADDynamicBase#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._1_1.vb)]"
  syntax:
    content: public string DynamicBase { get; set; }
    return:
      type: System.String
      description: "De map waar de &lt;xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName&gt; zich bevindt.       <div class=&quot;alert NOTE&quot;>    De geretourneerde waarde van deze eigenschap verschilt van de waarde die is toegewezen. Zie de sectie met opmerkingen.      </div>"
  overload: System.AppDomainSetup.DynamicBase*
  exceptions:
  - type: System.MemberAccessException
    commentId: T:System.MemberAccessException
    description: "Deze eigenschap kan niet worden ingesteld omdat de naam van de toepassing op het toepassingsdomein <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.GetConfigurationBytes
  id: GetConfigurationBytes
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: GetConfigurationBytes()
  nameWithType: AppDomainSetup.GetConfigurationBytes()
  fullName: System.AppDomainSetup.GetConfigurationBytes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Retourneert de XML-configuratie-informatie ingesteld door de <xref:System.AppDomainSetup.SetConfigurationBytes*>methode waarmee de toepassing XML-configuratie-informatie wordt overschreven.</xref:System.AppDomainSetup.SetConfigurationBytes*>"
  remarks: "De <xref:System.AppDomainSetup.SetConfigurationBytes%2A>methode biedt een manier voor het onderdrukken van de configuratie-informatie van een toepassing die u een nieuw toepassingsdomein maakt.</xref:System.AppDomainSetup.SetConfigurationBytes%2A> De configuratie van bestandsgegevens in `value` overschrijft de configuratiegegevens uit bestand voor de toepassing. Wanneer de toepassing Example.exe een nieuw toepassingsdomein maakt, kan deze bijvoorbeeld de configuratiegegevens oorspronkelijk is verkregen van Example.exe.config bestand overschrijven.      > [!IMPORTANT] > Bepaalde consumenten van configuratie-informatie gebruik niet de informatie opgeslagen door de <xref:System.AppDomainSetup.SetConfigurationBytes%2A>methode.</xref:System.AppDomainSetup.SetConfigurationBytes%2A> De runtime afdwingen niet dit. Om ervoor te zorgen dat alle configuratiegegevens bestand in een nieuw toepassingsdomein wordt overschreven, gebruiken de <xref:System.AppDomainSetup.ConfigurationFile%2A>eigenschap om op te geven van een configuratiebestand.</xref:System.AppDomainSetup.ConfigurationFile%2A> De <xref:System.AppDomainSetup.SetConfigurationBytes%2A>methode heeft invloed op de assembly-binding.</xref:System.AppDomainSetup.SetConfigurationBytes%2A>       De XML in `value` is hetzelfde als de XML in een normale configuratiebestand, behalve dat deze wordt opgeslagen als een <xref:System.Byte>matrix.</xref:System.Byte>       Voor toegang tot de configuratie-bytes voor het toepassingsdomein van een, gebruikt de <xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName>eigenschap ophalen van de <xref:System.AppDomainSetup>-object voor het toepassingsdomein en gebruik vervolgens de methode GetConfigurationBytes.</xref:System.AppDomainSetup> </xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName>"
  syntax:
    content: public byte[] GetConfigurationBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Een matrix met de XML-configuratie-informatie die is ingesteld door de <> </> *> methode, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de <> </> *> methode is niet aangeroepen."
  overload: System.AppDomainSetup.GetConfigurationBytes*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.LicenseFile
  id: LicenseFile
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: LicenseFile
  nameWithType: AppDomainSetup.LicenseFile
  fullName: System.AppDomainSetup.LicenseFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de locatie van het licentiebestand gekoppeld aan dit domein."
  syntax:
    content: public string LicenseFile { get; set; }
    return:
      type: System.String
      description: "De locatie en naam van het licentiebestand."
  overload: System.AppDomainSetup.LicenseFile*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.LoaderOptimization
  id: LoaderOptimization
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: LoaderOptimization
  nameWithType: AppDomainSetup.LoaderOptimization
  fullName: System.AppDomainSetup.LoaderOptimization
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee geeft u het optimalisatie-beleid dat is gebruikt voor het laden van een uitvoerbaar bestand."
  remarks: ''
  example:
  - "The following example creates a dynamic assembly and saves it to disk, and then uses the LoaderOptimization property to set the optimization policy used to load the assembly into an application domain.  \n  \n [!code-cpp[ADDyno#1](~/add/codesnippet/cpp/p-system.appdomainsetup._3_1.cpp)]\n [!code-cs[ADDyno#1](~/add/codesnippet/csharp/p-system.appdomainsetup._3_1.cs)]\n [!code-vb[ADDyno#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._3_1.vb)]"
  syntax:
    content: public LoaderOptimization LoaderOptimization { get; set; }
    return:
      type: System.LoaderOptimization
      description: "Een geïnventariseerde constante waarde die wordt gebruikt met de <xref href=&quot;System.LoaderOptimizationAttribute&quot;> </xref>."
  overload: System.AppDomainSetup.LoaderOptimization*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.PartialTrustVisibleAssemblies
  id: PartialTrustVisibleAssemblies
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: PartialTrustVisibleAssemblies
  nameWithType: AppDomainSetup.PartialTrustVisibleAssemblies
  fullName: System.AppDomainSetup.PartialTrustVisibleAssemblies
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een lijst met assembly&quot;s die zijn gemarkeerd met de <xref href=&quot;System.Security.PartialTrustVisibilityLevel&quot;> </xref> vlag die zijn aangebracht zichtbaar is voor gedeeltelijk vertrouwde code die wordt uitgevoerd in een sandbox-toepassingsdomein."
  remarks: "Vanaf de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], het <xref:System.Security.AllowPartiallyTrustedCallersAttribute>kenmerk (APTCA) kan worden gemaakt door de <xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A>eigenschap <xref:System.Security.PartialTrustVisibilityLevel>.</xref:System.Security.PartialTrustVisibilityLevel> </xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A> voorwaardelijke</xref:System.Security.AllowPartiallyTrustedCallersAttribute> Een APTCA-assembly die is gemarkeerd met <xref:System.Security.PartialTrustVisibilityLevel>kan niet worden gebruikt door gedeeltelijk vertrouwde code, tenzij de hosttoepassing kan deze</xref:System.Security.PartialTrustVisibilityLevel>       De host van een sandbox-toepassingsdomein kan code in het toepassingsdomein assembly&quot;s gebruiken met voorwaardelijke APTCA-kenmerken door het maken van een matrix met de eenvoudige naam en de openbare sleutel van elke assembly en de matrix toewijzen aan deze eigenschap. For example, an element of the array might look like the following: &quot;MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9&quot;.      > [!IMPORTANT] > Als u een subklasse van <xref:System.AppDomainManager>, en de assembly waarin het wordt gedefinieerd, is afhankelijk van assembly&quot;s die met de voorwaardelijke APTCA-kenmerk gemarkeerd zijn, moet u deze assembly&quot;s opnemen in de lijst die u aan de eigenschap PartialTrustVisibleAssemblies van doorgeeft de <xref:System.AppDomainSetup>u kunt maken van toepassingsdomeinen.</xref:System.AppDomainSetup> </xref:System.AppDomainManager> Anders worden de assembly&quot;s die met de voorwaardelijke APTCA-kenmerk gemarkeerd zijn uitgeschakeld.      > [!NOTE] > Wanneer u een toepassing die wordt uitgevoerd in een sandbox-toepassingsdomein foutopsporing sommige <xref:System.Security.SecurityException>berichten is misleidend.</xref:System.Security.SecurityException> Bijvoorbeeld, een bericht dat een van uw volledig vertrouwde assembly&quot;s machtigingen, beperkte met wanneer de echte oorzaak van het probleem is dat een aanvraag voor beveiliging die langer is dan de-machtigingenset van de sandbox-toepassingsdomein is doorgegeven aan de grens van de sandbox-toepassingsdomein kan status en is mislukt."
  syntax:
    content: public string[] PartialTrustVisibleAssemblies { get; set; }
    return:
      type: System.String[]
      description: "Een matrix van gedeeltelijke assemblynamen, waarbij elke gedeeltelijke naam uit de eenvoudige assembly-naam en de openbare sleutel bestaat."
  overload: System.AppDomainSetup.PartialTrustVisibleAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.PrivateBinPath
  id: PrivateBinPath
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: PrivateBinPath
  nameWithType: AppDomainSetup.PrivateBinPath
  fullName: System.AppDomainSetup.PrivateBinPath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de lijst met mappen onder de basismap van de toepassing die worden gecontroleerd voor persoonlijke assembly&quot;s."
  remarks: "Persoonlijke assembly&quot;s worden geïmplementeerd in dezelfde mapstructuur als de toepassing. Als de mappen die zijn opgegeven voor PrivateBinPath niet onder <xref:System.AppDomainSetup.ApplicationBase%2A>, worden genegeerd.</xref:System.AppDomainSetup.ApplicationBase%2A>"
  syntax:
    content: public string PrivateBinPath { get; set; }
    return:
      type: System.String
      description: "Een lijst met mapnamen gescheiden door puntkomma&quot;s."
  overload: System.AppDomainSetup.PrivateBinPath*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.PrivateBinPathProbe
  id: PrivateBinPathProbe
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: PrivateBinPathProbe
  nameWithType: AppDomainSetup.PrivateBinPathProbe
  fullName: System.AppDomainSetup.PrivateBinPathProbe
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een tekenreekswaarde opnemen of uitsluiten <> </> *> uit het zoekpad voor de toepassing en zoekopdrachten alleen <> </> *>."
  remarks: "Deze eigenschap instellen op de waarde van een niet-null-tekenreeks, met inbegrip van <xref:System.String?displayProperty=fullName>(&quot;&quot;), moeten worden uitgesloten van het pad van de toepassing — dat wil zeggen, <xref:System.AppDomainSetup.ApplicationBase%2A>: uit het zoekpad voor de toepassing en om te zoeken naar assembly&quot;s alleen in <xref:System.AppDomainSetup.PrivateBinPath%2A>.</xref:System.AppDomainSetup.PrivateBinPath%2A> </xref:System.AppDomainSetup.ApplicationBase%2A> </xref:System.String?displayProperty=fullName>"
  syntax:
    content: public string PrivateBinPathProbe { get; set; }
    return:
      type: System.String
      description: "Een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) het basispad van toepassing bij het zoeken naar assembly&quot;s; de waarde van een niet-null-tekenreeks moeten worden uitgesloten van het pad opnemen. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AppDomainSetup.PrivateBinPathProbe*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SandboxInterop
  id: SandboxInterop
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SandboxInterop
  nameWithType: AppDomainSetup.SandboxInterop
  fullName: System.AppDomainSetup.SandboxInterop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Een waarde die aangeeft of interface opslaan in cache is uitgeschakeld voor de interop-aanroepen in het toepassingsdomein opgehaald of ingesteld dat een `QueryInterface` wordt uitgevoerd op elke aanroep."
  remarks: "Interface cachegebruik wordt uitgeschakeld, heeft een aanzienlijke invloed op de prestaties van interop-aanroepen.       Dit lid is opgenomen in de [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]."
  syntax:
    content: public bool SandboxInterop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de interface opslaan in cache is uitgeschakeld voor de interop-aanroepen in toepassingsdomeinen gemaakt met de huidige <xref href=&quot;System.AppDomainSetup&quot;> </xref> object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AppDomainSetup.SandboxInterop*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  id: SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SetCompatibilitySwitches(IEnumerable<String>)
  nameWithType: AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
  fullName: System.AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee stelt u de opgegeven switches, waardoor het toepassingsdomein compatibel is met eerdere versies van .NET Framework voor de opgegeven problemen."
  remarks: "Major versions of the .NET Framework sometimes introduce breaking changes from the previous version. For example, the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] introduces a small number of breaking changes from the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Use the SetCompatibilitySwitches method to specify that one or more of these breaking changes should be rolled back for the application domain, to make the behavior compatible with the previous version of the .NET Framework.  \n  \n Each time you call this method, it replaces the existing switch settings. To erase the settings, specify `null` for the `switches` parameter.  \n  \n The set of string values you provide for `switches` can be a simple string array, because arrays implement the <xref:System.Collections.IEnumerable> interface.  \n  \n The following table provides examples of compatibility switches that can be set to restore the behavior of earlier versions of the .NET Framework.  \n  \n|Switch|Meaning|  \n|------------|-------------|  \n|\"NetFx40_LegacySecurityPolicy\"|Code access security (CAS) for the [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] is enabled in this application domain. See [\\&lt;NetFx40_LegacySecurityPolicy\\&gt; Element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md).|  \n|\"NetFx40_Legacy20SortingBehavior\"|String sorting defaults for the [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] are enabled in this application domain. Successfully restoring legacy sorting behavior also requires the sort00001000.dll dynamic link library to be available on the local system. See [\\&lt;CompatSortNLSVersion\\&gt; Element](../Topic/%3CCompatSortNLSVersion%3E%20Element.md).|  \n|\"NetFx40_Legacy40SortingBehavior\"|String sorting defaults for the [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] and Unicode 5.0 are enabled in this application domain. Successfully restoring legacy sorting behavior also requires the sort00060101.dll dynamic link library to be available on the local system.|  \n|\"NetFx40_TimeSpanLegacyFormatMode\"|<xref:System.TimeSpan> formatting behavior for the [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] is enabled in this application domain. See [\\&lt;TimeSpan_LegacyFormatMode\\&gt; Element](../Topic/%3CTimeSpan_LegacyFormatMode%3E%20Element.md) and the \"Restoring Legacy TimeSpan Formatting\" section of the <xref:System.TimeSpan> topic.|  \n|\"UseRandomizedStringHashAlgorithm\"|The runtime calculates hash codes for strings on a per application domain basis instead of using a single hashing algorithm that produces a consistent hash code across application domains. See [\\&lt;UseRandomizedStringHashAlgorithm\\&gt; Element](../Topic/%3CUseRandomizedStringHashAlgorithm%3E%20Element.md).|"
  syntax:
    content: public void SetCompatibilitySwitches (System.Collections.Generic.IEnumerable<string> switches);
    parameters:
    - id: switches
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Een inventariseerbare set van tekenreekswaarden die compatibele switches, opgeven of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om te wissen van de bestaande compatibiliteit verandert."
  overload: System.AppDomainSetup.SetCompatibilitySwitches*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SetConfigurationBytes(System.Byte[])
  id: SetConfigurationBytes(System.Byte[])
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SetConfigurationBytes(Byte[])
  nameWithType: AppDomainSetup.SetConfigurationBytes(Byte[])
  fullName: System.AppDomainSetup.SetConfigurationBytes(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "XML-configuratie-informatie voor het toepassingsdomein vervangen van XML-configuratie-informatie van de toepassing bevat."
  remarks: "De methode SetConfigurationBytes biedt een manier om de configuratie-informatie van een toepassing die u een nieuw toepassingsdomein maakt vervangen. De configuratie van bestandsgegevens in `value`vervangt de configuratiegegevens uit bestand voor de toepassing. Wanneer de toepassing Example.exe een nieuw toepassingsdomein maakt, kan deze bijvoorbeeld de configuratiegegevens oorspronkelijk is verkregen van het bestand Example.exe.config vervangen.      > [!IMPORTANT] > Bepaalde consumenten van configuratie-informatie gebruik niet de informatie die door de methode SetConfigurationBytes worden opgeslagen. De runtime afdwingen niet dit. Om ervoor te zorgen dat alle configuratiegegevens bestand in een nieuw toepassingsdomein is vervangen, gebruiken de <xref:System.AppDomainSetup.ConfigurationFile%2A>eigenschap om op te geven van een configuratiebestand.</xref:System.AppDomainSetup.ConfigurationFile%2A> De methode SetConfigurationBytes heeft invloed op de assembly-binding.       De XML in `value` is hetzelfde als de XML in een normale configuratiebestand, behalve dat deze wordt opgeslagen als een <xref:System.Byte>matrix.</xref:System.Byte>"
  syntax:
    content: public void SetConfigurationBytes (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "Een matrix met de XML-configuratie-informatie moet worden gebruikt voor het toepassingsdomein."
  overload: System.AppDomainSetup.SetConfigurationBytes*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)
  id: SetNativeFunction(System.String,System.Int32,System.IntPtr)
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SetNativeFunction(String,Int32,IntPtr)
  nameWithType: AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
  fullName: System.AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "De common language runtime biedt een alternatieve implementatie van een functie van de vergelijking tekenreeks."
  remarks: "De volgende tekenreeksvergelijking en sorteren op de methoden kunnen worden genegeerd door de methode SetNativeFunction:- `IsNLSDefinedString`       -    `CompareStringEx`       -    `LCMapStringEx`       -    `FindNLSStringEx`       -    `CompareStringOrdinal`       -    `GetNLSVersion` Zie voor meer informatie over deze functies [nationale taal ondersteunende functies](http://go.microsoft.com/fwlink/?LinkId=228134)."
  syntax:
    content: public void SetNativeFunction (string functionName, int functionVersion, IntPtr functionPointer);
    parameters:
    - id: functionName
      type: System.String
      description: "De naam van de functie van de vergelijking reeks overschrijven."
    - id: functionVersion
      type: System.Int32
      description: "De functieversie. Voor [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], de waarde moet 1 of hoger."
    - id: functionPointer
      type: System.IntPtr
      description: "Een verwijzing naar de functie die overschrijft `functionName`."
  overload: System.AppDomainSetup.SetNativeFunction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>functionName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>functionVersion</code>is geen 1 of hoger.       - of - <code>functionPointer</code> is &lt;xref:System.IntPtr?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.AppDomainSetup.ShadowCopyDirectories
  id: ShadowCopyDirectories
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ShadowCopyDirectories
  nameWithType: AppDomainSetup.ShadowCopyDirectories
  fullName: System.AppDomainSetup.ShadowCopyDirectories
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van de namen van de mappen met assembly&quot;s voor schaduwkopieën."
  remarks: "Bij het kopiëren van de schaduwkopie is ingeschakeld, wordt standaard schaduwkopie alle assembly gevonden door middel van probing; dat wil zeggen, in de mappen opgegeven door de <xref:System.AppDomainSetup.PrivateBinPath%2A>en <xref:System.AppDomainSetup.ApplicationBase%2A>Eigenschappen.</xref:System.AppDomainSetup.ApplicationBase%2A> </xref:System.AppDomainSetup.PrivateBinPath%2A> De eigenschap ShadowCopyDirectories beperkt de assembly&quot;s in de mappen die zijn opgegeven door ShadowCopyDirectories de schaduwkopie.       Als u een tekenreeks niet toewijzen aan de eigenschap ShadowCopyDirectories, of als u deze eigenschap instellen op `null`, alle assembly&quot;s in de mappen die zijn opgegeven door de <xref:System.AppDomainSetup.ApplicationBase%2A>en <xref:System.AppDomainSetup.PrivateBinPath%2A>Eigenschappen zijn schaduwkopieën.</xref:System.AppDomainSetup.PrivateBinPath%2A> </xref:System.AppDomainSetup.ApplicationBase%2A>      > [!IMPORTANT] > Mappaden mag geen puntkomma&quot;s, bevatten omdat de puntkomma het scheidingsteken wordt. Er is geen escapeteken voor puntkomma&quot;s.       Wanneer u schaduwkopieën maken van kracht is, worden de assemblybestanden gekopieerd naar een andere locatie voordat de assembly&quot;s geladen worden. Het oorspronkelijke assemblybestand is niet vergrendeld, zodat deze kan worden bijgewerkt. Zie voor meer informatie over het kopiëren van de schaduw [Shadow kopiëren assembly&quot;s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string ShadowCopyDirectories { get; set; }
    return:
      type: System.String
      description: "Een lijst met mapnamen gescheiden door puntkomma&quot;s."
  overload: System.AppDomainSetup.ShadowCopyDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ShadowCopyFiles
  id: ShadowCopyFiles
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ShadowCopyFiles
  nameWithType: AppDomainSetup.ShadowCopyFiles
  fullName: System.AppDomainSetup.ShadowCopyFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een tekenreeks die aangeeft of schaduwkopieën maken is ingeschakeld of uitgeschakeld."
  remarks: "Zie voor meer informatie over het kopiëren van de schaduw [Shadow kopiëren assembly&quot;s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string ShadowCopyFiles { get; set; }
    return:
      type: System.String
      description: "De string-waarde &quot;true&quot; om aan te geven die schaduwkopieën maken is ingeschakeld. of &quot;false&quot; om aan te geven die schaduwkopieën maken is uitgeschakeld."
  overload: System.AppDomainSetup.ShadowCopyFiles*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.TargetFrameworkName
  id: TargetFrameworkName
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: TargetFrameworkName
  nameWithType: AppDomainSetup.TargetFrameworkName
  fullName: System.AppDomainSetup.TargetFrameworkName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een tekenreeks waarmee de doelversie en het profiel van de .NET Framework voor het toepassingsdomein in een indeling die kan worden geparseerd met de &lt;xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29?displayProperty=fullName&gt; constructor."
  remarks: "Stel deze eigenschap zien van de momenteel uitgevoerde versie van .NET Framework dat het toepassingsdomein geladen en uitgevoerd assembly&quot;s die zijn gecompileerd voor de doelversie en het profiel wordt gebruikt. Als de momenteel uitgevoerde versie van .NET Framework optionele gedrag die invloed hebben op de compatibiliteit van code die is gecompileerd met de doelversie heeft, kan het in- of uitschakelen van dit gedrag, waar nodig, voor betere compatibiliteit. Dit kan nuttig zijn wanneer een toepassing invoegtoepassingen gecompileerd met meerdere versies van .NET Framework ondersteunt door ze in afzonderlijke toepassingsdomeinen.       Clienttoepassingen, wordt de waarde van de eigenschap TargetFrameworkName afgeleid van de <xref:System.Runtime.Versioning.TargetFrameworkAttribute>kenmerk.</xref:System.Runtime.Versioning.TargetFrameworkAttribute> In [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] en later, dit kenmerk wordt toegevoegd aan de assembly automatisch op basis van de instelling van het project **doel-Framework** eigenschap."
  syntax:
    content: public string TargetFrameworkName { get; set; }
    return:
      type: System.String
      description: "De doelversie en het profiel van .NET Framework."
  overload: System.AppDomainSetup.TargetFrameworkName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.MemberAccessException
  isExternal: true
  name: System.MemberAccessException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.AppDomainSetup.#ctor
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup()
  nameWithType: AppDomainSetup.AppDomainSetup()
  fullName: System.AppDomainSetup.AppDomainSetup()
- uid: System.AppDomainSetup.#ctor(System.ActivationContext)
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup(ActivationContext)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationContext)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationContext)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup(ActivationArguments)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationArguments)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationArguments)
- uid: System.Runtime.Hosting.ActivationArguments
  parent: System.Runtime.Hosting
  isExternal: false
  name: ActivationArguments
  nameWithType: ActivationArguments
  fullName: System.Runtime.Hosting.ActivationArguments
- uid: System.AppDomainSetup.ActivationArguments
  parent: System.AppDomainSetup
  isExternal: false
  name: ActivationArguments
  nameWithType: AppDomainSetup.ActivationArguments
  fullName: System.AppDomainSetup.ActivationArguments
- uid: System.AppDomainSetup.AppDomainInitializer
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializer
  nameWithType: AppDomainSetup.AppDomainInitializer
  fullName: System.AppDomainSetup.AppDomainInitializer
- uid: System.AppDomainInitializer
  parent: System
  isExternal: false
  name: AppDomainInitializer
  nameWithType: AppDomainInitializer
  fullName: System.AppDomainInitializer
- uid: System.AppDomainSetup.AppDomainInitializerArguments
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializerArguments
  nameWithType: AppDomainSetup.AppDomainInitializerArguments
  fullName: System.AppDomainSetup.AppDomainInitializerArguments
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AppDomainSetup.AppDomainManagerAssembly
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerAssembly
  nameWithType: AppDomainSetup.AppDomainManagerAssembly
  fullName: System.AppDomainSetup.AppDomainManagerAssembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AppDomainSetup.AppDomainManagerType
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerType
  nameWithType: AppDomainSetup.AppDomainManagerType
  fullName: System.AppDomainSetup.AppDomainManagerType
- uid: System.AppDomainSetup.ApplicationBase
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationBase
  nameWithType: AppDomainSetup.ApplicationBase
  fullName: System.AppDomainSetup.ApplicationBase
- uid: System.AppDomainSetup.ApplicationName
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationName
  nameWithType: AppDomainSetup.ApplicationName
  fullName: System.AppDomainSetup.ApplicationName
- uid: System.AppDomainSetup.ApplicationTrust
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationTrust
  nameWithType: AppDomainSetup.ApplicationTrust
  fullName: System.AppDomainSetup.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.AppDomainSetup.CachePath
  parent: System.AppDomainSetup
  isExternal: false
  name: CachePath
  nameWithType: AppDomainSetup.CachePath
  fullName: System.AppDomainSetup.CachePath
- uid: System.AppDomainSetup.ConfigurationFile
  parent: System.AppDomainSetup
  isExternal: false
  name: ConfigurationFile
  nameWithType: AppDomainSetup.ConfigurationFile
  fullName: System.AppDomainSetup.ConfigurationFile
- uid: System.AppDomainSetup.DisallowApplicationBaseProbing
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowApplicationBaseProbing
  nameWithType: AppDomainSetup.DisallowApplicationBaseProbing
  fullName: System.AppDomainSetup.DisallowApplicationBaseProbing
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AppDomainSetup.DisallowBindingRedirects
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowBindingRedirects
  nameWithType: AppDomainSetup.DisallowBindingRedirects
  fullName: System.AppDomainSetup.DisallowBindingRedirects
- uid: System.AppDomainSetup.DisallowCodeDownload
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowCodeDownload
  nameWithType: AppDomainSetup.DisallowCodeDownload
  fullName: System.AppDomainSetup.DisallowCodeDownload
- uid: System.AppDomainSetup.DisallowPublisherPolicy
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowPublisherPolicy
  nameWithType: AppDomainSetup.DisallowPublisherPolicy
  fullName: System.AppDomainSetup.DisallowPublisherPolicy
- uid: System.AppDomainSetup.DynamicBase
  parent: System.AppDomainSetup
  isExternal: false
  name: DynamicBase
  nameWithType: AppDomainSetup.DynamicBase
  fullName: System.AppDomainSetup.DynamicBase
- uid: System.AppDomainSetup.GetConfigurationBytes
  parent: System.AppDomainSetup
  isExternal: false
  name: GetConfigurationBytes()
  nameWithType: AppDomainSetup.GetConfigurationBytes()
  fullName: System.AppDomainSetup.GetConfigurationBytes()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AppDomainSetup.LicenseFile
  parent: System.AppDomainSetup
  isExternal: false
  name: LicenseFile
  nameWithType: AppDomainSetup.LicenseFile
  fullName: System.AppDomainSetup.LicenseFile
- uid: System.AppDomainSetup.LoaderOptimization
  parent: System.AppDomainSetup
  isExternal: false
  name: LoaderOptimization
  nameWithType: AppDomainSetup.LoaderOptimization
  fullName: System.AppDomainSetup.LoaderOptimization
- uid: System.LoaderOptimization
  parent: System
  isExternal: false
  name: LoaderOptimization
  nameWithType: LoaderOptimization
  fullName: System.LoaderOptimization
- uid: System.AppDomainSetup.PartialTrustVisibleAssemblies
  parent: System.AppDomainSetup
  isExternal: false
  name: PartialTrustVisibleAssemblies
  nameWithType: AppDomainSetup.PartialTrustVisibleAssemblies
  fullName: System.AppDomainSetup.PartialTrustVisibleAssemblies
- uid: System.AppDomainSetup.PrivateBinPath
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPath
  nameWithType: AppDomainSetup.PrivateBinPath
  fullName: System.AppDomainSetup.PrivateBinPath
- uid: System.AppDomainSetup.PrivateBinPathProbe
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPathProbe
  nameWithType: AppDomainSetup.PrivateBinPathProbe
  fullName: System.AppDomainSetup.PrivateBinPathProbe
- uid: System.AppDomainSetup.SandboxInterop
  parent: System.AppDomainSetup
  isExternal: false
  name: SandboxInterop
  nameWithType: AppDomainSetup.SandboxInterop
  fullName: System.AppDomainSetup.SandboxInterop
- uid: System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  parent: System.AppDomainSetup
  isExternal: false
  name: SetCompatibilitySwitches(IEnumerable<String>)
  nameWithType: AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
  fullName: System.AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AppDomainSetup.SetConfigurationBytes(System.Byte[])
  parent: System.AppDomainSetup
  isExternal: false
  name: SetConfigurationBytes(Byte[])
  nameWithType: AppDomainSetup.SetConfigurationBytes(Byte[])
  fullName: System.AppDomainSetup.SetConfigurationBytes(Byte[])
- uid: System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)
  parent: System.AppDomainSetup
  isExternal: false
  name: SetNativeFunction(String,Int32,IntPtr)
  nameWithType: AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
  fullName: System.AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.AppDomainSetup.ShadowCopyDirectories
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyDirectories
  nameWithType: AppDomainSetup.ShadowCopyDirectories
  fullName: System.AppDomainSetup.ShadowCopyDirectories
- uid: System.AppDomainSetup.ShadowCopyFiles
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: AppDomainSetup.ShadowCopyFiles
  fullName: System.AppDomainSetup.ShadowCopyFiles
- uid: System.AppDomainSetup.TargetFrameworkName
  parent: System.AppDomainSetup
  isExternal: false
  name: TargetFrameworkName
  nameWithType: AppDomainSetup.TargetFrameworkName
  fullName: System.AppDomainSetup.TargetFrameworkName
- uid: System.AppDomainSetup.#ctor*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup
  nameWithType: AppDomainSetup.AppDomainSetup
- uid: System.AppDomainSetup.ActivationArguments*
  parent: System.AppDomainSetup
  isExternal: false
  name: ActivationArguments
  nameWithType: AppDomainSetup.ActivationArguments
- uid: System.AppDomainSetup.AppDomainInitializer*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializer
  nameWithType: AppDomainSetup.AppDomainInitializer
- uid: System.AppDomainSetup.AppDomainInitializerArguments*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializerArguments
  nameWithType: AppDomainSetup.AppDomainInitializerArguments
- uid: System.AppDomainSetup.AppDomainManagerAssembly*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerAssembly
  nameWithType: AppDomainSetup.AppDomainManagerAssembly
- uid: System.AppDomainSetup.AppDomainManagerType*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerType
  nameWithType: AppDomainSetup.AppDomainManagerType
- uid: System.AppDomainSetup.ApplicationBase*
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationBase
  nameWithType: AppDomainSetup.ApplicationBase
- uid: System.AppDomainSetup.ApplicationName*
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationName
  nameWithType: AppDomainSetup.ApplicationName
- uid: System.AppDomainSetup.ApplicationTrust*
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationTrust
  nameWithType: AppDomainSetup.ApplicationTrust
- uid: System.AppDomainSetup.CachePath*
  parent: System.AppDomainSetup
  isExternal: false
  name: CachePath
  nameWithType: AppDomainSetup.CachePath
- uid: System.AppDomainSetup.ConfigurationFile*
  parent: System.AppDomainSetup
  isExternal: false
  name: ConfigurationFile
  nameWithType: AppDomainSetup.ConfigurationFile
- uid: System.AppDomainSetup.DisallowApplicationBaseProbing*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowApplicationBaseProbing
  nameWithType: AppDomainSetup.DisallowApplicationBaseProbing
- uid: System.AppDomainSetup.DisallowBindingRedirects*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowBindingRedirects
  nameWithType: AppDomainSetup.DisallowBindingRedirects
- uid: System.AppDomainSetup.DisallowCodeDownload*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowCodeDownload
  nameWithType: AppDomainSetup.DisallowCodeDownload
- uid: System.AppDomainSetup.DisallowPublisherPolicy*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowPublisherPolicy
  nameWithType: AppDomainSetup.DisallowPublisherPolicy
- uid: System.AppDomainSetup.DynamicBase*
  parent: System.AppDomainSetup
  isExternal: false
  name: DynamicBase
  nameWithType: AppDomainSetup.DynamicBase
- uid: System.AppDomainSetup.GetConfigurationBytes*
  parent: System.AppDomainSetup
  isExternal: false
  name: GetConfigurationBytes
  nameWithType: AppDomainSetup.GetConfigurationBytes
- uid: System.AppDomainSetup.LicenseFile*
  parent: System.AppDomainSetup
  isExternal: false
  name: LicenseFile
  nameWithType: AppDomainSetup.LicenseFile
- uid: System.AppDomainSetup.LoaderOptimization*
  parent: System.AppDomainSetup
  isExternal: false
  name: LoaderOptimization
  nameWithType: AppDomainSetup.LoaderOptimization
- uid: System.AppDomainSetup.PartialTrustVisibleAssemblies*
  parent: System.AppDomainSetup
  isExternal: false
  name: PartialTrustVisibleAssemblies
  nameWithType: AppDomainSetup.PartialTrustVisibleAssemblies
- uid: System.AppDomainSetup.PrivateBinPath*
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPath
  nameWithType: AppDomainSetup.PrivateBinPath
- uid: System.AppDomainSetup.PrivateBinPathProbe*
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPathProbe
  nameWithType: AppDomainSetup.PrivateBinPathProbe
- uid: System.AppDomainSetup.SandboxInterop*
  parent: System.AppDomainSetup
  isExternal: false
  name: SandboxInterop
  nameWithType: AppDomainSetup.SandboxInterop
- uid: System.AppDomainSetup.SetCompatibilitySwitches*
  parent: System.AppDomainSetup
  isExternal: false
  name: SetCompatibilitySwitches
  nameWithType: AppDomainSetup.SetCompatibilitySwitches
- uid: System.AppDomainSetup.SetConfigurationBytes*
  parent: System.AppDomainSetup
  isExternal: false
  name: SetConfigurationBytes
  nameWithType: AppDomainSetup.SetConfigurationBytes
- uid: System.AppDomainSetup.SetNativeFunction*
  parent: System.AppDomainSetup
  isExternal: false
  name: SetNativeFunction
  nameWithType: AppDomainSetup.SetNativeFunction
- uid: System.AppDomainSetup.ShadowCopyDirectories*
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyDirectories
  nameWithType: AppDomainSetup.ShadowCopyDirectories
- uid: System.AppDomainSetup.ShadowCopyFiles*
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: AppDomainSetup.ShadowCopyFiles
- uid: System.AppDomainSetup.TargetFrameworkName*
  parent: System.AppDomainSetup
  isExternal: false
  name: TargetFrameworkName
  nameWithType: AppDomainSetup.TargetFrameworkName
