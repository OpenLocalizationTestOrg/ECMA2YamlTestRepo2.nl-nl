### YamlMime:ManagedReference
items:
- uid: System.IO.BufferedStream
  id: BufferedStream
  children:
  - System.IO.BufferedStream.#ctor(System.IO.Stream)
  - System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)
  - System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.BufferedStream.CanRead
  - System.IO.BufferedStream.CanSeek
  - System.IO.BufferedStream.CanWrite
  - System.IO.BufferedStream.Dispose(System.Boolean)
  - System.IO.BufferedStream.EndRead(System.IAsyncResult)
  - System.IO.BufferedStream.EndWrite(System.IAsyncResult)
  - System.IO.BufferedStream.Flush
  - System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.BufferedStream.Length
  - System.IO.BufferedStream.Position
  - System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.BufferedStream.ReadByte
  - System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.BufferedStream.SetLength(System.Int64)
  - System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.BufferedStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: BufferedStream
  nameWithType: BufferedStream
  fullName: System.IO.BufferedStream
  type: Class
  summary: "Voegt een buffer laag lees-en schrijfbewerkingen in een andere stroom. Deze klasse kan niet worden overgenomen."
  remarks: "A buffer is a block of bytes in memory used to cache data, thereby reducing the number of calls to the operating system. Buffers improve read and write performance. A buffer can be used for either reading or writing, but never both simultaneously. The [Read(Byte\\[\\], Int32, Int32)](assetId:///M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)?qualifyHint=False&autoUpgrade=True) and [Write(Byte\\[\\], Int32, Int32)](assetId:///M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)?qualifyHint=False&autoUpgrade=True) methods of `BufferedStream` automatically maintain the buffer.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n `BufferedStream` can be composed around certain types of streams. It provides implementations for reading and writing bytes to an underlying data source or repository. Use <xref:System.IO.BinaryReader> and <xref:System.IO.BinaryWriter> for reading and writing other data types. `BufferedStream` is designed to prevent the buffer from slowing down input and output when the buffer is not needed. If you always read and write for sizes greater than the internal buffer size, then `BufferedStream` might not even allocate the internal buffer. `BufferedStream` also buffers reads and writes in a shared buffer. It is assumed that you will almost always be doing a series of reads or writes, but rarely alternate between the two of them."
  example:
  - "The following code examples show how to use the `BufferedStream` class over the `NetworkStream` class to increase the performance of certain I/O operations. Start the server on a remote computer before starting the client. Specify the remote computer name as a command-line argument when starting the client. Vary the `dataArraySize` and `streamBufferSize` constants to view their effect on performance.  \n  \n The first example shows the code that runs on the client, and the second example shows the code that runs on the server.  \n  \n **Example 1: Code that runs on the client**  \n  \n [!code-cs[System.IO.BufferedStream1#1](~/add/codesnippet/csharp/t-system.io.bufferedstream_1.cs)]\n [!code-cpp[System.IO.BufferedStream1#1](~/add/codesnippet/cpp/t-system.io.bufferedstream_1.cpp)]\n [!code-vb[System.IO.BufferedStream1#1](~/add/codesnippet/visualbasic/t-system.io.bufferedstream_1.vb)]  \n  \n **Example 2: Code that runs on the server**  \n  \n [!code-vb[System.IO.BufferedStream2#1](~/add/codesnippet/visualbasic/t-system.io.bufferedstream_2.vb)]\n [!code-cs[System.IO.BufferedStream2#1](~/add/codesnippet/csharp/t-system.io.bufferedstream_2.cs)]\n [!code-cpp[System.IO.BufferedStream2#1](~/add/codesnippet/cpp/t-system.io.bufferedstream_2.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class BufferedStream : System.IO.Stream
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.BufferedStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: BufferedStream(Stream)
  nameWithType: BufferedStream.BufferedStream(Stream)
  fullName: System.IO.BufferedStream.BufferedStream(Stream)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.BufferedStream&quot;> </xref> klasse met een standaardbuffergrootte van 4096 bytes."
  remarks: "Een gedeelde lezen/schrijven-buffer is toegewezen voor het eerst een `BufferedStream` -object met deze constructor is geïnitialiseerd. De gedeelde buffer wordt niet gebruikt als alle lees- en schrijfbewerkingen groter zijn dan of gelijk zijn aan `bufferSize`."
  syntax:
    content: public BufferedStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De huidige stroom."
  overload: System.IO.BufferedStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32)'
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: BufferedStream(Stream,Int32)
  nameWithType: BufferedStream.BufferedStream(Stream,Int32)
  fullName: System.IO.BufferedStream.BufferedStream(Stream,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.BufferedStream&quot;> </xref> klasse met de opgegeven buffergrootte."
  remarks: "Een gedeelde lezen/schrijven-buffer is toegewezen voor het eerst een `BufferedStream` -object met deze constructor is geïnitialiseerd. De gedeelde buffer wordt niet gebruikt als alle lees- en schrijfbewerkingen groter zijn dan of gelijk zijn aan `bufferSize`."
  example:
  - "This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.  \n  \n [!code-cs[System.IO.BufferedStream1#2](~/add/codesnippet/csharp/m-system.io.bufferedstre_2_1.cs)]\n [!code-cpp[System.IO.BufferedStream1#2](~/add/codesnippet/cpp/m-system.io.bufferedstre_2_1.cpp)]\n [!code-vb[System.IO.BufferedStream1#2](~/add/codesnippet/visualbasic/m-system.io.bufferedstre_2_1.vb)]"
  syntax:
    content: public BufferedStream (System.IO.Stream stream, int bufferSize);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De huidige stroom."
    - id: bufferSize
      type: System.Int32
      description: "De buffergrootte in bytes."
  overload: System.IO.BufferedStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>is negatief."
  platform:
  - net462
- uid: System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: BufferedStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.BufferedStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Een asynchrone leesbewerking gestart. (Overweeg het gebruik van <xref:System.IO.BufferedStream.ReadAsync*>in plaats daarvan; Zie de sectie met opmerkingen.)</xref:System.IO.BufferedStream.ReadAsync*>"
  remarks: "In de .NET Framework 4 en eerdere versies, die u hebt methoden te gebruiken, zoals <xref:System.IO.Stream.BeginRead%2A>en <xref:System.IO.Stream.EndRead%2A>voor het implementeren van asynchrone bestandsbewerkingen.</xref:System.IO.Stream.EndRead%2A> </xref:System.IO.Stream.BeginRead%2A> Deze methoden zijn nog steeds beschikbaar in de [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] ter ondersteuning van verouderde code; echter, de nieuwe async-methoden zoals <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, en <xref:System.IO.BufferedStream.FlushAsync%2A>, help asynchrone bestandsbewerkingen eenvoudiger te implementeren.</xref:System.IO.BufferedStream.FlushAsync%2A> </xref:System.IO.BufferedStream.WriteAsync%2A> </xref:System.IO.BufferedStream.ReadAsync%2A>       <xref:System.IO.BufferedStream.EndWrite%2A>moet precies één keer worden aangeroepen voor elke aanroep van BeginRead.</xref:System.IO.BufferedStream.EndWrite%2A> Een proces te beëindigen lezen voordat u begint met een andere lezen is mislukt, kan ongewenst gedrag zoals impasse veroorzaken.      > [!NOTE] > Gebruik de <xref:System.IO.BufferedStream.CanRead%2A>eigenschap om te bepalen of de huidige instantie lezen ondersteunt.</xref:System.IO.BufferedStream.CanRead%2A>       <xref:System.IO.BufferedStream.EndRead%2A>moet worden aangeroepen met deze <xref:System.IAsyncResult>om erachter te komen hoeveel bytes zijn gelezen.</xref:System.IAsyncResult></xref:System.IO.BufferedStream.EndRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer om de gegevens in te lezen."
    - id: offset
      type: System.Int32
      description: "De byte-offset in `buffer` waarop u wilt beginnen met het schrijven van gegevens uit de stroom lezen."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te lezen."
    - id: callback
      type: System.AsyncCallback
      description: "Een optionele asynchrone terugpostactie, moet worden aangeroepen wanneer de leesbewerking voltooid is."
    - id: state
      type: System.Object
      description: "Een gebruiker gemaakte object dat deze bepaalde asynchrone leesaanvraag van andere aanvragen onderscheidt."
    return:
      type: System.IAsyncResult
      description: "Een object met de asynchrone leesbewerking die nog steeds in behandeling kan worden."
  overload: System.IO.BufferedStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>of <code>count</code> negatief is."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is geprobeerd een asynchrone leesbewerking voorbij het einde van de stroom."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De bufferlengte min <code> offset </code> is minder dan <code> count </code>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De huidige stroom biedt geen ondersteuning voor de leesbewerking."
  platform:
  - net462
- uid: System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: BufferedStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.BufferedStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Een asynchrone schrijfbewerking begint. (Overweeg het gebruik van <xref:System.IO.BufferedStream.WriteAsync*>in plaats daarvan; Zie de sectie met opmerkingen.)</xref:System.IO.BufferedStream.WriteAsync*>"
  remarks: "In de .NET Framework 4 en eerdere versies, die u hebt methoden te gebruiken, zoals <xref:System.IO.Stream.BeginWrite%2A>en <xref:System.IO.Stream.EndWrite%2A>voor het implementeren van asynchrone bestandsbewerkingen.</xref:System.IO.Stream.EndWrite%2A> </xref:System.IO.Stream.BeginWrite%2A> Deze methoden zijn nog steeds beschikbaar in de [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] ter ondersteuning van verouderde code; echter, de nieuwe async-methoden zoals <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, en <xref:System.IO.BufferedStream.FlushAsync%2A>, help asynchrone bestandsbewerkingen eenvoudiger te implementeren.</xref:System.IO.BufferedStream.FlushAsync%2A> </xref:System.IO.BufferedStream.WriteAsync%2A> </xref:System.IO.BufferedStream.ReadAsync%2A>       <xref:System.IO.BufferedStream.EndWrite%2A>moet precies één keer worden aangeroepen voor elke <xref:System.IAsyncResult>van BeginWrite.</xref:System.IAsyncResult></xref:System.IO.BufferedStream.EndWrite%2A> <xref:System.IO.BufferedStream.EndWrite%2A>wordt geblokkeerd tot de i/o-bewerking is voltooid.</xref:System.IO.BufferedStream.EndWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer die gegevens naar de huidige stroom schrijven."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in `buffer` waarop u wilt beginnen met het kopiëren van bytes naar de huidige stroom."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te schrijven."
    - id: callback
      type: System.AsyncCallback
      description: "De methode die moet worden aangeroepen wanneer de asynchrone schrijfbewerking is voltooid."
    - id: state
      type: System.Object
      description: "Een gebruiker gemaakte object dat deze aanvraag bepaalde asynchrone schrijfactie van andere aanvragen onderscheidt."
    return:
      type: System.IAsyncResult
      description: "Een object dat verwijst naar de asynchrone schrijfactie die nog steeds in behandeling kan worden."
  overload: System.IO.BufferedStream.BeginWrite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>buffer</code>lengte min <code>offset</code> is minder dan <code>count</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>of <code>count</code> negatief is."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor schrijven."
  platform:
  - net462
- uid: System.IO.BufferedStream.CanRead
  id: CanRead
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: CanRead
  nameWithType: BufferedStream.CanRead
  fullName: System.IO.BufferedStream.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hiermee wordt een waarde die aangeeft of de huidige stroom lezen ondersteunt."
  remarks: "Als een klasse wordt afgeleid van <xref:System.IO.Stream>lezen wordt niet ondersteund, aanroepen naar de <xref:System.IO.BufferedStream.Read%2A>, <xref:System.IO.BufferedStream.ReadByte%2A>, <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.EndRead%2A>, en de `Peek` methoden van <xref:System.IO.StreamReader>, <xref:System.IO.StringReader>, en <xref:System.IO.TextReader>genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.IO.TextReader> </xref:System.IO.StringReader> </xref:System.IO.StreamReader> </xref:System.IO.Stream.EndRead%2A> </xref:System.IO.Stream.BeginRead%2A> </xref:System.IO.BufferedStream.ReadByte%2A> </xref:System.IO.BufferedStream.Read%2A> </xref:System.IO.Stream>       Als de stroom is gesloten, retourneert deze eigenschap `false`."
  example:
  - "This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.  \n  \n [!code-cs[System.IO.BufferedStream1#5](~/add/codesnippet/csharp/p-system.io.bufferedstre_2_1.cs)]\n [!code-cpp[System.IO.BufferedStream1#5](~/add/codesnippet/cpp/p-system.io.bufferedstre_2_1.cpp)]\n [!code-vb[System.IO.BufferedStream1#5](~/add/codesnippet/visualbasic/p-system.io.bufferedstre_2_1.vb)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de stroom lezen ondersteunt; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de stroom is gesloten of is geopend met alleen-schrijven toegang."
  overload: System.IO.BufferedStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.BufferedStream.CanSeek
  id: CanSeek
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: BufferedStream.CanSeek
  fullName: System.IO.BufferedStream.CanSeek
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hiermee wordt een waarde die aangeeft of de huidige stroom zoekbewerkingen ondersteunt."
  remarks: "Als een klasse wordt afgeleid van <xref:System.IO.Stream>Zoeken niet ondersteunt, roept naar <xref:System.IO.BufferedStream.Length%2A>, <xref:System.IO.BufferedStream.SetLength%2A>, <xref:System.IO.BufferedStream.Position%2A>, en <xref:System.IO.BufferedStream.Seek%2A>genereert een <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.IO.BufferedStream.Seek%2A> </xref:System.IO.BufferedStream.Position%2A> </xref:System.IO.BufferedStream.SetLength%2A> </xref:System.IO.BufferedStream.Length%2A> </xref:System.IO.Stream>       Als de stroom is gesloten, retourneert deze eigenschap `false`."
  example:
  - "This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.  \n  \n [!code-cs[System.IO.BufferedStream1#3](~/add/codesnippet/csharp/p-system.io.bufferedstre_0_1.cs)]\n [!code-cpp[System.IO.BufferedStream1#3](~/add/codesnippet/cpp/p-system.io.bufferedstre_0_1.cpp)]\n [!code-vb[System.IO.BufferedStream1#3](~/add/codesnippet/visualbasic/p-system.io.bufferedstre_0_1.vb)]"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de stroom zoekbewerkingen ondersteunt; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de stroom is gesloten of als de stroom is gemaakt van een besturingssysteem-ingang, zoals een pipe of uitvoer naar de console."
  overload: System.IO.BufferedStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.BufferedStream.CanWrite
  id: CanWrite
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: BufferedStream.CanWrite
  fullName: System.IO.BufferedStream.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hiermee wordt een waarde die aangeeft of de huidige stroom schrijven ondersteunt."
  remarks: "Als een klasse wordt afgeleid van <xref:System.IO.Stream>biedt geen ondersteuning voor het schrijven van een aanroep van <xref:System.IO.BufferedStream.SetLength%2A>, <xref:System.IO.BufferedStream.Write%2A>, of <xref:System.IO.BufferedStream.WriteByte%2A>er een <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.IO.BufferedStream.WriteByte%2A> </xref:System.IO.BufferedStream.Write%2A> </xref:System.IO.BufferedStream.SetLength%2A> </xref:System.IO.Stream>       Als de stroom is gesloten, retourneert deze eigenschap `false`."
  example:
  - "This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.  \n  \n [!code-cs[System.IO.BufferedStream1#4](~/add/codesnippet/csharp/p-system.io.bufferedstre_1_1.cs)]\n [!code-cpp[System.IO.BufferedStream1#4](~/add/codesnippet/cpp/p-system.io.bufferedstre_1_1.cpp)]\n [!code-vb[System.IO.BufferedStream1#4](~/add/codesnippet/visualbasic/p-system.io.bufferedstre_1_1.vb)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de stroom schrijven ondersteunt; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de stroom is gesloten of is geopend met alleen-lezen toegang."
  overload: System.IO.BufferedStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.BufferedStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: BufferedStream.Dispose(Boolean)
  fullName: System.IO.BufferedStream.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: System.IO.BufferedStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.BufferedStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: BufferedStream.EndRead(IAsyncResult)
  fullName: System.IO.BufferedStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Wacht tot de in behandeling asynchrone leesbewerking te voltooien. (Overweeg het gebruik van <xref:System.IO.BufferedStream.ReadAsync*>in plaats daarvan; Zie de sectie met opmerkingen.)</xref:System.IO.BufferedStream.ReadAsync*>"
  remarks: "In de .NET Framework 4 en eerdere versies, die u hebt methoden te gebruiken, zoals <xref:System.IO.Stream.BeginRead%2A>en <xref:System.IO.Stream.EndRead%2A>voor het implementeren van asynchrone bestandsbewerkingen.</xref:System.IO.Stream.EndRead%2A> </xref:System.IO.Stream.BeginRead%2A> Deze methoden zijn nog steeds beschikbaar in de [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] ter ondersteuning van verouderde code; echter, de nieuwe async-methoden zoals <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, en <xref:System.IO.BufferedStream.FlushAsync%2A>, help asynchrone bestandsbewerkingen eenvoudiger te implementeren.</xref:System.IO.BufferedStream.FlushAsync%2A> </xref:System.IO.BufferedStream.WriteAsync%2A> </xref:System.IO.BufferedStream.ReadAsync%2A>       EndRead moet worden aangeroepen met deze <xref:System.IAsyncResult>om erachter te komen hoeveel bytes zijn gelezen.</xref:System.IAsyncResult>"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De verwijzing naar de asynchrone aanvraag in behandeling te wachten."
    return:
      type: System.Int32
      description: "Het aantal bytes gelezen uit de stroom, tussen 0 (nul) en het aantal bytes dat u hebt aangevraagd. Streams alleen 0 alleen aan het einde van de stream retourneren, kunt u ze moeten anders blokkeren totdat ten minste 1 byte beschikbaar is."
  overload: System.IO.BufferedStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Dit <xref:System.IAsyncResult>object is niet gemaakt door het aanroepen <xref:System.IO.BufferedStream.BeginRead*>van deze klasse.</xref:System.IO.BufferedStream.BeginRead*> </xref:System.IAsyncResult>"
  platform:
  - net462
- uid: System.IO.BufferedStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: BufferedStream.EndWrite(IAsyncResult)
  fullName: System.IO.BufferedStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Een asynchrone schrijfbewerking en -blokken eindigt totdat de i/o-bewerking voltooid is. (Overweeg het gebruik van <xref:System.IO.BufferedStream.WriteAsync*>in plaats daarvan; Zie de sectie met opmerkingen.)</xref:System.IO.BufferedStream.WriteAsync*>"
  remarks: "In de .NET Framework 4 en eerdere versies, die u hebt methoden te gebruiken, zoals <xref:System.IO.Stream.BeginWrite%2A>en <xref:System.IO.Stream.EndWrite%2A>voor het implementeren van asynchrone bestandsbewerkingen.</xref:System.IO.Stream.EndWrite%2A> </xref:System.IO.Stream.BeginWrite%2A> Deze methoden zijn nog steeds beschikbaar in de [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] ter ondersteuning van verouderde code; echter, de nieuwe async-methoden zoals <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, en <xref:System.IO.BufferedStream.FlushAsync%2A>, help asynchrone bestandsbewerkingen eenvoudiger te implementeren.</xref:System.IO.BufferedStream.FlushAsync%2A> </xref:System.IO.BufferedStream.WriteAsync%2A> </xref:System.IO.BufferedStream.ReadAsync%2A>       EndWrite moet exact één keer worden aangeroepen voor elke aanroep van <xref:System.IO.BufferedStream.BeginRead%2A>.</xref:System.IO.BufferedStream.BeginRead%2A> Failover naar een lezen proces beëindigen voordat u een andere leesbewerking kan leiden tot impasse of andere ongewenst gedrag."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De asynchrone aanvraag in behandeling."
  overload: System.IO.BufferedStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Dit <xref:System.IAsyncResult>object is niet gemaakt door het aanroepen <xref:System.IO.BufferedStream.BeginWrite*>van deze klasse.</xref:System.IO.BufferedStream.BeginWrite*> </xref:System.IAsyncResult>"
  platform:
  - net462
- uid: System.IO.BufferedStream.Flush
  id: Flush
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: Flush()
  nameWithType: BufferedStream.Flush()
  fullName: System.IO.BufferedStream.Flush()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hiermee wist u alle buffers voor deze stroom en zorgt ervoor dat de gegevens naar de onderliggende apparaat moeten worden geschreven."
  remarks: "Leegmaken van de stroom wordt niet leegmaken van de onderliggende encoder tenzij u expliciet aanroepen `Flush` of <xref:System.IO.Stream.Close%2A>.</xref:System.IO.Stream.Close%2A>       Als u de <xref:System.IO.BufferedStream.%23ctor%2A>-constructor aan, dus de buffergrootte geven tijdens het maken van de `BufferedStream` object, de inhoud moet worden leeggemaakt wanneer het de buffergrootte is bereikt.</xref:System.IO.BufferedStream.%23ctor%2A> Bijvoorbeeld code zoals `BufferedStream bs = new BufferedStream(bs, 5)` de inhoud wordt leeggemaakt wanneer de buffergrootte 5 bytes is bereikt.       Alle lees- en methoden voor `BufferedStream` automatisch de buffer die wordt onderhouden zodat is niet nodig om aan te roepen `Flush` wanneer heen en weer schakelen tussen lezen en schrijven."
  example:
  - "This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.  \n  \n [!code-cs[System.IO.BufferedStream1#6](~/add/codesnippet/csharp/m-system.io.bufferedstre_0_1.cs)]\n [!code-cpp[System.IO.BufferedStream1#6](~/add/codesnippet/cpp/m-system.io.bufferedstre_0_1.cpp)]\n [!code-vb[System.IO.BufferedStream1#6](~/add/codesnippet/visualbasic/m-system.io.bufferedstre_0_1.vb)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.BufferedStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De stroom is verwijderd."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De gegevensbron of de opslagplaats is niet geopend."
  platform:
  - net462
- uid: System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: FlushAsync(CancellationToken)
  nameWithType: BufferedStream.FlushAsync(CancellationToken)
  fullName: System.IO.BufferedStream.FlushAsync(CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Asynchroon alle buffers voor deze stroom wordt gewist, zorgt ervoor dat de gegevens worden geschreven naar de onderliggende apparaat en controleert annulering aanvragen."
  syntax:
    content: public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Het token voor annulering aanvragen bewaken."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die staat voor de asynchrone bewerking leegmaken."
  overload: System.IO.BufferedStream.FlushAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De stroom is verwijderd."
  platform:
  - net462
- uid: System.IO.BufferedStream.Length
  id: Length
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: Length
  nameWithType: BufferedStream.Length
  fullName: System.IO.BufferedStream.Length
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hiermee haalt de stream-lengte in bytes."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "De stream-lengte in bytes."
  overload: System.IO.BufferedStream.Length*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De onderliggende stroom <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor zoekbewerkingen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten."
  platform:
  - net462
- uid: System.IO.BufferedStream.Position
  id: Position
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: Position
  nameWithType: BufferedStream.Position
  fullName: System.IO.BufferedStream.Position
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hiermee wordt de positie binnen de huidige stroom opgehaald."
  remarks: "De `get` accessor roept <xref:System.IO.BufferedStream.Seek%2A>om op te halen van de huidige positie in de onderliggende stroom en vervolgens past u deze waarde volgens de huidige positie binnen de buffer.</xref:System.IO.BufferedStream.Seek%2A>       De `set` accessor kopieert geen gegevens die eerder naar de buffer naar de onderliggende stroom is geschreven en roept vervolgens <xref:System.IO.BufferedStream.Seek%2A>.</xref:System.IO.BufferedStream.Seek%2A>       Zoeken naar andere locaties dan de lengte van de stroom wordt ondersteund."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "De positie binnen de huidige stroom."
  overload: System.IO.BufferedStream.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde die is doorgegeven aan <xref:System.IO.BufferedStream.Seek*>is negatief.</xref:System.IO.BufferedStream.Seek*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Een i/o-fout optreedt, zoals de stroom wordt gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor zoekbewerkingen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten."
  platform:
  - net462
- uid: System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: BufferedStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.BufferedStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Kopieën bytes uit de huidige buffer stroom om in een matrix."
  remarks: "De `Read` methode retourneert 0 alleen als het einde van de stroom is bereikt. In andere gevallen `Read` altijd ten minste één byte leest uit de stroom voordat u terugkeert. Per definitie als gegevens niet beschikbaar vanuit de stroom van een aanroep van `Read`, wordt de `Read` methode retourneert 0 (het einde van de stroom bereikt automatisch). Een implementatie is gratis minder bytes dan aangevraagde retourneren, zelfs als het einde van de stroom niet is bereikt.       Gebruik <xref:System.IO.BinaryReader>voor het lezen van primitieve gegevenstypen.</xref:System.IO.BinaryReader>"
  example:
  - "This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.  \n  \n [!code-cs[System.IO.BufferedStream1#7](~/add/codesnippet/csharp/m-system.io.bufferedstre_3_1.cs)]\n [!code-cpp[System.IO.BufferedStream1#7](~/add/codesnippet/cpp/m-system.io.bufferedstre_3_1.cpp)]\n [!code-vb[System.IO.BufferedStream1#7](~/add/codesnippet/visualbasic/m-system.io.bufferedstre_3_1.vb)]"
  syntax:
    content: public override int Read (byte[] array, int offset, int count);
    parameters:
    - id: array
      type: System.Byte[]
      description: "De buffer waarnaar bytes zijn moeten worden gekopieerd."
    - id: offset
      type: System.Int32
      description: "De byteoffset in de buffer waarop u wilt beginnen met bytes zijn gelezen."
    - id: count
      type: System.Int32
      description: "Het aantal bytes dat moet worden gelezen."
    return:
      type: System.Int32
      description: "Het totale aantal bytes gelezen <code> array </code>. Dit kan zijn dat kleiner is dan het aantal bytes aangevraagd dat veel bytes zijn momenteel niet beschikbaar of 0 als het einde van de stroom is bereikt voordat alle gegevens kunnen worden gelezen."
  overload: System.IO.BufferedStream.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Length of <code>array</code> minus <code>offset</code> is less than <code>count</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>of <code>count</code> negatief is."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De stroom is niet geopend of is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor lezen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten."
  platform:
  - net462
- uid: System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: BufferedStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.IO.BufferedStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Asynchroon een reeks bytes leest uit de huidige stroom verplaatst van de positie binnen de stroom door het aantal bytes dat is gelezen, en controleert annulering-aanvragen."
  remarks: "U kunt een token annulering maken door het maken van een exemplaar van de <xref:System.Threading.CancellationTokenSource>klasse en geven de <xref:System.Threading.CancellationTokenSource.Token%2A>eigenschap als de `cancellationToken` parameter.</xref:System.Threading.CancellationTokenSource.Token%2A> </xref:System.Threading.CancellationTokenSource>"
  syntax:
    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer om de gegevens in te schrijven."
    - id: offset
      type: System.Int32
      description: "De byte-offset in `buffer` waarop u wilt beginnen met het schrijven van gegevens uit de stroom."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te lezen."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Het token voor annulering aanvragen bewaken."
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "Een taak die staat voor de asynchrone leesbewerking. De waarde van de <code> TResult </code> parameter bevat het totale aantal bytes dat is gelezen in de buffer. De resultaatwaarde kan zijn dat kleiner is dan het aantal bytes aangevraagd als het aantal bytes momenteel beschikbaar kleiner dan het gevraagde aantal is of kan de waarde 0 (nul) als het einde van de stroom is bereikt."
  overload: System.IO.BufferedStream.ReadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>of <code>count</code> negatief is."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De som van <code> offset </code> en <code> count </code> groter is dan de bufferlengte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor lezen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De stroom is verwijderd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom wordt momenteel gebruikt door een eerdere bewerking met lezen."
  platform:
  - net462
- uid: System.IO.BufferedStream.ReadByte
  id: ReadByte
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: BufferedStream.ReadByte()
  fullName: System.IO.BufferedStream.ReadByte()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Een byte leest uit de onderliggende stroom en retourneert de byte geconverteerd naar een <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>, of retourneert-1 als het lezen van het einde van de stroom."
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "De byte geconverteerd naar een <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>, of -1 als het lezen van het einde van de stroom."
  overload: System.IO.BufferedStream.ReadByte*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Een i/o-fout optreedt, zoals de stroom wordt gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor lezen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten."
  platform:
  - net462
- uid: System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: BufferedStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.BufferedStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hiermee stelt de positie in de huidige buffer stroom."
  remarks: "Als `offset` is negatief, de nieuwe positie voorafgaat aan de positie die is opgegeven door `origin` door het aantal bytes dat is opgegeven door `offset`. Als `offset` 0 is, kunnen de nieuwe positie, de positie die is opgegeven door `origin`. Als `offset` positief is, de positie die is opgegeven door de nieuwe positie volgen `origin` door het aantal bytes dat is opgegeven door `offset`.       Wanneer een <xref:System.IO.BufferedStream>-object is de basisstroom voor een <xref:System.IO.StreamReader>object, aanroepen van de methode Seek kan leiden tot de positie van de stroom niet langer overeenkomen met de positie van de interne buffer in de reader.</xref:System.IO.StreamReader> </xref:System.IO.BufferedStream> Aanroepen als de interne buffer herstellen, de <xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName>methode; echter deze methode wordt vertraagd prestaties en mag alleen worden aangeroepen als dit echt nodig.</xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName>       Zoeken naar andere locaties dan de lengte van de stroom wordt ondersteund."
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Een byte-offset relatief `origin`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Een waarde van het type <xref:System.IO.SeekOrigin>die wijzen op het referentiepunt waaruit u de nieuwe positie te verkrijgen.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "De nieuwe positie binnen de huidige buffer stroom."
  overload: System.IO.BufferedStream.Seek*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De stroom is niet geopend of is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor zoekbewerkingen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten."
  platform:
  - net462
- uid: System.IO.BufferedStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: BufferedStream.SetLength(Int64)
  fullName: System.IO.BufferedStream.SetLength(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hiermee stelt u de lengte van de buffer stroom."
  remarks: "De buffer moet worden leeggemaakt voordat de lengte van de onderliggende gegevensbron of opslagplaats instelt. Als de opgegeven waarde kleiner dan de huidige lengte van de buffer stroom is, wordt de buffer stroom wordt afgekapt. Als de opgegeven waarde groter dan de huidige lengte van de buffer stroom is, wordt de buffer stroom uitgebreid. Als de stroom van de buffer is uitgevouwen, wordt de inhoud van de buffer stroom tussen de oude en de nieuwe lengten zijn niet gedefinieerd.       `SetLength`Er gebufferde schrijfbewerkingen leegmaakacties indien nodig.       Een stroom moet ondersteunen zowel schrijven en zoeken voor `SetLength` om te werken."
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Een geheel getal dat de gewenste lengte van de huidige buffer stroom in bytes aangeeft."
  overload: System.IO.BufferedStream.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>value</code>is negatief."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De stroom is niet geopend of is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor schrijven en het zoeken naar."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten."
  platform:
  - net462
- uid: System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: BufferedStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.BufferedStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Bytes kopieert naar de buffer stroom en de huidige positie binnen de buffer stroom wordt bestuurd door het aantal geschreven bytes."
  remarks: ''
  example:
  - "This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.  \n  \n [!code-cs[System.IO.BufferedStream1#6](~/add/codesnippet/csharp/m-system.io.bufferedstre_1_1.cs)]\n [!code-cpp[System.IO.BufferedStream1#6](~/add/codesnippet/cpp/m-system.io.bufferedstre_1_1.cpp)]\n [!code-vb[System.IO.BufferedStream1#6](~/add/codesnippet/visualbasic/m-system.io.bufferedstre_1_1.vb)]"
  syntax:
    content: public override void Write (byte[] array, int offset, int count);
    parameters:
    - id: array
      type: System.Byte[]
      description: "De bytematrix waaruit u wilt kopiëren `count` bytes naar de huidige buffer stroom."
    - id: offset
      type: System.Int32
      description: "De offset in de buffer waarop u wilt beginnen met het kopiëren van bytes naar de huidige buffer stroom."
    - id: count
      type: System.Int32
      description: "Het aantal bytes dat moet worden geschreven naar de huidige buffer stroom."
  overload: System.IO.BufferedStream.Write*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Length of <code>array</code> minus <code>offset</code> is less than <code>count</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>of <code>count</code> negatief is."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De stroom is gesloten of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor schrijven."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten."
  platform:
  - net462
- uid: System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: BufferedStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.IO.BufferedStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Asynchroon een reeks bytes geschreven naar de huidige stroom, verplaatst de huidige positie binnen deze stroom door het aantal geschreven bytes en controleert annulering-aanvragen."
  remarks: "U kunt een token annulering maken door het maken van een exemplaar van de <xref:System.Threading.CancellationTokenSource>klasse en geven de <xref:System.Threading.CancellationTokenSource.Token%2A>eigenschap als de `cancellationToken` parameter.</xref:System.Threading.CancellationTokenSource.Token%2A> </xref:System.Threading.CancellationTokenSource>"
  syntax:
    content: public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer om gegevens uit te schrijven."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in `buffer` waaruit u wilt beginnen met het kopiëren van bytes naar de stroom."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te schrijven."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Het token voor annulering aanvragen bewaken."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone schrijfbewerking vertegenwoordigt."
  overload: System.IO.BufferedStream.WriteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>of <code>count</code> negatief is."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De som van <code> offset </code> en <code> count </code> groter is dan de bufferlengte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor schrijven."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De stroom is verwijderd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De stroom wordt momenteel gebruikt door een eerdere bewerking met schrijven."
  platform:
  - net462
- uid: System.IO.BufferedStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.BufferedStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: BufferedStream.WriteByte(Byte)
  fullName: System.IO.BufferedStream.WriteByte(Byte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Een byte schrijft naar de huidige positie in de buffer-stroom."
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Een byte wordt ingesteld op het schrijven naar de stroom."
  overload: System.IO.BufferedStream.WriteByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom biedt geen ondersteuning voor schrijven."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Methoden zijn aangeroepen nadat de stroom is gesloten."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.BufferedStream.#ctor(System.IO.Stream)
  parent: System.IO.BufferedStream
  isExternal: false
  name: BufferedStream(Stream)
  nameWithType: BufferedStream.BufferedStream(Stream)
  fullName: System.IO.BufferedStream.BufferedStream(Stream)
- uid: System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)
  parent: System.IO.BufferedStream
  isExternal: false
  name: BufferedStream(Stream,Int32)
  nameWithType: BufferedStream.BufferedStream(Stream,Int32)
  fullName: System.IO.BufferedStream.BufferedStream(Stream,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.BufferedStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: BufferedStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.BufferedStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.BufferedStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: BufferedStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.BufferedStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.BufferedStream.CanRead
  parent: System.IO.BufferedStream
  isExternal: false
  name: CanRead
  nameWithType: BufferedStream.CanRead
  fullName: System.IO.BufferedStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.BufferedStream.CanSeek
  parent: System.IO.BufferedStream
  isExternal: false
  name: CanSeek
  nameWithType: BufferedStream.CanSeek
  fullName: System.IO.BufferedStream.CanSeek
- uid: System.IO.BufferedStream.CanWrite
  parent: System.IO.BufferedStream
  isExternal: false
  name: CanWrite
  nameWithType: BufferedStream.CanWrite
  fullName: System.IO.BufferedStream.CanWrite
- uid: System.IO.BufferedStream.Dispose(System.Boolean)
  parent: System.IO.BufferedStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: BufferedStream.Dispose(Boolean)
  fullName: System.IO.BufferedStream.Dispose(Boolean)
- uid: System.IO.BufferedStream.EndRead(System.IAsyncResult)
  parent: System.IO.BufferedStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: BufferedStream.EndRead(IAsyncResult)
  fullName: System.IO.BufferedStream.EndRead(IAsyncResult)
- uid: System.IO.BufferedStream.EndWrite(System.IAsyncResult)
  parent: System.IO.BufferedStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: BufferedStream.EndWrite(IAsyncResult)
  fullName: System.IO.BufferedStream.EndWrite(IAsyncResult)
- uid: System.IO.BufferedStream.Flush
  parent: System.IO.BufferedStream
  isExternal: false
  name: Flush()
  nameWithType: BufferedStream.Flush()
  fullName: System.IO.BufferedStream.Flush()
- uid: System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.BufferedStream
  isExternal: false
  name: FlushAsync(CancellationToken)
  nameWithType: BufferedStream.FlushAsync(CancellationToken)
  fullName: System.IO.BufferedStream.FlushAsync(CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IO.BufferedStream.Length
  parent: System.IO.BufferedStream
  isExternal: false
  name: Length
  nameWithType: BufferedStream.Length
  fullName: System.IO.BufferedStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.BufferedStream.Position
  parent: System.IO.BufferedStream
  isExternal: false
  name: Position
  nameWithType: BufferedStream.Position
  fullName: System.IO.BufferedStream.Position
- uid: System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BufferedStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: BufferedStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.BufferedStream.Read(Byte[],Int32,Int32)
- uid: System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.BufferedStream
  isExternal: false
  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: BufferedStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.IO.BufferedStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.BufferedStream.ReadByte
  parent: System.IO.BufferedStream
  isExternal: false
  name: ReadByte()
  nameWithType: BufferedStream.ReadByte()
  fullName: System.IO.BufferedStream.ReadByte()
- uid: System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.BufferedStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: BufferedStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.BufferedStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.BufferedStream.SetLength(System.Int64)
  parent: System.IO.BufferedStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: BufferedStream.SetLength(Int64)
  fullName: System.IO.BufferedStream.SetLength(Int64)
- uid: System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BufferedStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: BufferedStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.BufferedStream.Write(Byte[],Int32,Int32)
- uid: System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.BufferedStream
  isExternal: false
  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: BufferedStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.IO.BufferedStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
- uid: System.IO.BufferedStream.WriteByte(System.Byte)
  parent: System.IO.BufferedStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: BufferedStream.WriteByte(Byte)
  fullName: System.IO.BufferedStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.BufferedStream.#ctor*
  parent: System.IO.BufferedStream
  isExternal: false
  name: BufferedStream
  nameWithType: BufferedStream.BufferedStream
- uid: System.IO.BufferedStream.BeginRead*
  parent: System.IO.BufferedStream
  isExternal: false
  name: BeginRead
  nameWithType: BufferedStream.BeginRead
- uid: System.IO.BufferedStream.BeginWrite*
  parent: System.IO.BufferedStream
  isExternal: false
  name: BeginWrite
  nameWithType: BufferedStream.BeginWrite
- uid: System.IO.BufferedStream.CanRead*
  parent: System.IO.BufferedStream
  isExternal: false
  name: CanRead
  nameWithType: BufferedStream.CanRead
- uid: System.IO.BufferedStream.CanSeek*
  parent: System.IO.BufferedStream
  isExternal: false
  name: CanSeek
  nameWithType: BufferedStream.CanSeek
- uid: System.IO.BufferedStream.CanWrite*
  parent: System.IO.BufferedStream
  isExternal: false
  name: CanWrite
  nameWithType: BufferedStream.CanWrite
- uid: System.IO.BufferedStream.Dispose*
  parent: System.IO.BufferedStream
  isExternal: false
  name: Dispose
  nameWithType: BufferedStream.Dispose
- uid: System.IO.BufferedStream.EndRead*
  parent: System.IO.BufferedStream
  isExternal: false
  name: EndRead
  nameWithType: BufferedStream.EndRead
- uid: System.IO.BufferedStream.EndWrite*
  parent: System.IO.BufferedStream
  isExternal: false
  name: EndWrite
  nameWithType: BufferedStream.EndWrite
- uid: System.IO.BufferedStream.Flush*
  parent: System.IO.BufferedStream
  isExternal: false
  name: Flush
  nameWithType: BufferedStream.Flush
- uid: System.IO.BufferedStream.FlushAsync*
  parent: System.IO.BufferedStream
  isExternal: false
  name: FlushAsync
  nameWithType: BufferedStream.FlushAsync
- uid: System.IO.BufferedStream.Length*
  parent: System.IO.BufferedStream
  isExternal: false
  name: Length
  nameWithType: BufferedStream.Length
- uid: System.IO.BufferedStream.Position*
  parent: System.IO.BufferedStream
  isExternal: false
  name: Position
  nameWithType: BufferedStream.Position
- uid: System.IO.BufferedStream.Read*
  parent: System.IO.BufferedStream
  isExternal: false
  name: Read
  nameWithType: BufferedStream.Read
- uid: System.IO.BufferedStream.ReadAsync*
  parent: System.IO.BufferedStream
  isExternal: false
  name: ReadAsync
  nameWithType: BufferedStream.ReadAsync
- uid: System.IO.BufferedStream.ReadByte*
  parent: System.IO.BufferedStream
  isExternal: false
  name: ReadByte
  nameWithType: BufferedStream.ReadByte
- uid: System.IO.BufferedStream.Seek*
  parent: System.IO.BufferedStream
  isExternal: false
  name: Seek
  nameWithType: BufferedStream.Seek
- uid: System.IO.BufferedStream.SetLength*
  parent: System.IO.BufferedStream
  isExternal: false
  name: SetLength
  nameWithType: BufferedStream.SetLength
- uid: System.IO.BufferedStream.Write*
  parent: System.IO.BufferedStream
  isExternal: false
  name: Write
  nameWithType: BufferedStream.Write
- uid: System.IO.BufferedStream.WriteAsync*
  parent: System.IO.BufferedStream
  isExternal: false
  name: WriteAsync
  nameWithType: BufferedStream.WriteAsync
- uid: System.IO.BufferedStream.WriteByte*
  parent: System.IO.BufferedStream
  isExternal: false
  name: WriteByte
  nameWithType: BufferedStream.WriteByte
