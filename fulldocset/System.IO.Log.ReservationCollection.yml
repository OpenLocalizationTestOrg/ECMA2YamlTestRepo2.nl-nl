### YamlMime:ManagedReference
items:
- uid: System.IO.Log.ReservationCollection
  id: ReservationCollection
  children:
  - System.IO.Log.ReservationCollection.#ctor
  - System.IO.Log.ReservationCollection.Add(System.Int64)
  - System.IO.Log.ReservationCollection.Clear
  - System.IO.Log.ReservationCollection.Contains(System.Int64)
  - System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)
  - System.IO.Log.ReservationCollection.Count
  - System.IO.Log.ReservationCollection.Finalize
  - System.IO.Log.ReservationCollection.FreeReservation(System.Int64)
  - System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)
  - System.IO.Log.ReservationCollection.GetEnumerator
  - System.IO.Log.ReservationCollection.IsReadOnly
  - System.IO.Log.ReservationCollection.MakeReservation(System.Int64)
  - System.IO.Log.ReservationCollection.Remove(System.Int64)
  - System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)
  - System.IO.Log.ReservationCollection.ReservationMade(System.Int64)
  - System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ReservationCollection
  nameWithType: ReservationCollection
  fullName: System.IO.Log.ReservationCollection
  type: Class
  summary: "De verzameling van ruimte reserveringen in een recordreeks beheert."
  remarks: "Deze klasse vertegenwoordigt een reeks reservering gebieden die zijn aangebracht in een recordreeks. Items toevoegen aan de verzameling wijst nieuwe reserveringen. Items verwijderen uit de verzameling, maakt deze reserveringen vrij.       Een toepassing reserveert ruimte in het logboek gegevens bevat die moeten worden geschreven naar het logboek in de toekomst, maar deze onmiddellijk kan niet schrijven. Reserveringen bieden de garantie dat de gegevens kunnen worden geschreven naar het logboek wanneer de gegevens zijn beschikbaar om te worden geschreven. Wanneer u zich aanmeldt, reserveren toepassingen vaak een of meer logboekrecords in een marshalling gebied. U moet reserveren records voordat u ze toevoegt.       Reserveringen kunnen worden gebruikt om te waarborgen dat een bewerking kan worden voltooid voordat de gegevens doorgevoerd is. anders wordt zijn de wijzigingen teruggedraaid. Het kan ook worden gebruikt voor het vastleggen van een actie&quot;ongedaan maken&quot; in het logboek. Tijdens de rollback-bewerking moet een transactionele bronnenbeheerder (RM) kunnen de status te herstellen als de RM is onderbroken tijdens de rollback-bewerking. Met behulp van een gebied reservering kunt een RM ruimte in een logboek reserveren voordat deze wordt gebruikt.       De <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>methode kunt ruimte gereserveerd of toevoeg-gegevens, of beide, afhankelijk van de parameters die zijn opgegeven bij de oproep.</xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> Terwijl de voortgang van in een transactie werkt, kunt een toepassing toevoegen de undo-informatie en ruimte gereserveerd voor de compensatierecords. Tijdens het terugdraaien van de compensatierecords die zijn gemaakt aangeven wat ongedaan is gemaakt op de schijf. De records worden toegevoegd met de ruimte die eerder is gereserveerd. Dit zorgt ervoor dat een RM kan niet worden uitgevoerd buiten de logboekruimte, een onherstelbare toestand, is tijdens het uitvoeren van een terugdraaibewerking is. Als een logboek vol tijdens een transactie, kunt een toepassing veilig terugdraaien een transactie zonder duurzame gegevens te beschadigen.       CLFS is een systeem dat voldoet aan ARIES logboekregistratie, zijn alleen bedoeld voor write-ahead logboekregistratie. In vooraf geschreven logboekregistratie schrijft een toepassing een record ongedaan maken voordat de bewerking, de hoeveelheid ruimte die nodig is in het logboek schrijven van een compensatie-record, waarmee kan worden gebruikt tijdens het terugdraaien van reserveren worden uitgevoerd. De gereserveerde ruimte wordt later gebruikt wanneer de compensatie-record daadwerkelijk wordt geschreven.       Toepassingen kunnen reserveren of toegang tot lang space op elk moment (ze zijn sluiten elkaar wederzijds uit operations). Na een doorvoer record geschreven naar het logboek een toepassing kunt vrijmaken op de reserveringen voor de compensatierecords. Deze actie kan worden gedaan door het aanroepen van ofwel de <xref:System.IO.Log.ReservationCollection.FreeReservation%2A>of <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>methode.</xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> </xref:System.IO.Log.ReservationCollection.FreeReservation%2A> Het aanroepen van de <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>methode zorgt ervoor dat de bewerking atomic tijdens het aanroepen van is de <xref:System.IO.Log.ReservationCollection.FreeReservation%2A>heeft geen methode.</xref:System.IO.Log.ReservationCollection.FreeReservation%2A> </xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>       Wanneer u records vrijmaken, moet u dezelfde records die u samen in een eerdere aanroep voor gereserveerd vrijmaken de <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>methode.</xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>      > [!NOTE] > Uw implementatie van <xref:System.IO.Log.IRecordSequence>moet worden geïmplementeerd de <xref:System.IO.Log.ReservationCollection.MakeReservation%2A>en <xref:System.IO.Log.ReservationCollection.FreeReservation%2A>methoden voor het uitvoeren van de toewijzing van de werkelijke reservering en de toewijzing is opgeheven.</xref:System.IO.Log.ReservationCollection.FreeReservation%2A> </xref:System.IO.Log.ReservationCollection.MakeReservation%2A> </xref:System.IO.Log.IRecordSequence> Bovendien uw implementatie moet ook worden aangeroepen <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A>wanneer er een record is geschreven in een gereserveerde ruimte.</xref:System.IO.Log.ReservationCollection.ReservationFreed%2A>"
  example:
  - "Reservations can be performed in two ways as shown in the following examples. You can adopt the practices in the samples for robust processing. Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.  \n  \n```  \n//Using the ReserveAndAppend Method  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nlong[] lengthOfUndoRecords = new long[] { 1000 };  \nrecordSequence.ReserveAndAppend(recordData,  \n                                                     userSqn,  \n                                                     previousSqn,  \n                                                     RecordSequenceAppendOptions.None,  \n                                                     reservations,  \n                                                     lengthOfUndoRecords);  \nrecordSequence.Append(undoRecordData,    // If necessary …  \n                                    userSqn,  \n                                    previousSqn,  \n                                    RecordSequenceAppendOptions.ForceFlush,  \n                                    reservations);  \n  \n// Using the Manual Approach  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nreservations.Add(lengthOfUndoRecord);  \ntry  \n{  \n   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  \n}  \ncatch (Exception)  \n{  \n   reservations.Remove(lengthOfUndoRecord);  \n   throw;  \n}  \n  \nrecordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  \n```"
  syntax:
    content: 'public abstract class ReservationCollection : System.Collections.Generic.ICollection<long>, System.Collections.Generic.IEnumerable<long>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Int64>
  - System.Collections.Generic.IEnumerable<System.Int64>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.#ctor
  id: '#ctor'
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: ReservationCollection()
  nameWithType: ReservationCollection.ReservationCollection()
  fullName: System.IO.Log.ReservationCollection.ReservationCollection()
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> klasse."
  syntax:
    content: protected ReservationCollection ();
    parameters: []
  overload: System.IO.Log.ReservationCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Add(System.Int64)
  id: Add(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Add(Int64)
  nameWithType: ReservationCollection.Add(Int64)
  fullName: System.IO.Log.ReservationCollection.Add(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Een reservering toewijst en voegt het toe aan de verzameling. Deze methode kan niet worden overgenomen."
  remarks: ''
  example:
  - "The following example shows how to manually make a reservation. Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.  \n  \n```  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nreservations.Add(lengthOfUndoRecord);  \ntry  \n{  \n   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  \n}  \ncatch (Exception)  \n{  \n   reservations.Remove(lengthOfUndoRecord);  \n   throw;  \n}  \n  \nrecordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  \n```"
  syntax:
    content: public void Add (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "De grootte van de aangevraagde reservering, in bytes."
  overload: System.IO.Log.ReservationCollection.Add*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>archiveTail</code>ligt niet tussen het eerste en laatste volgnummers van deze reeks."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>size</code>is ongeldig of overschrijdt de maximale reserveringsgrootte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Een i/o-fout optreedt bij het maken van de archief-momentopname."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De methode is aangeroepen nadat de volgorde van is verwijderd."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Er is onvoldoende geheugen beschikbaar om door te gaan van de uitvoering van het programma."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Toegang voor de opgegeven logboekopslag is geweigerd door het besturingssysteem."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "De recordreeks is vol."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Clear
  id: Clear
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ReservationCollection.Clear()
  fullName: System.IO.Log.ReservationCollection.Clear()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Versies alle van de reserveringen in de verzameling. Deze methode kan niet worden overgenomen."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.IO.Log.ReservationCollection.Clear*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>size</code>is ongeldig of overschrijdt de maximale reserveringsgrootte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Een i/o-fout optreedt bij het maken van de archief-momentopname."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De methode is aangeroepen nadat de volgorde van is verwijderd."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Er is onvoldoende geheugen beschikbaar om door te gaan van de uitvoering van het programma."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "De recordreeks is vol."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Toegang voor de opgegeven logboekopslag is geweigerd door het besturingssysteem."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Contains(System.Int64)
  id: Contains(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Contains(Int64)
  nameWithType: ReservationCollection.Contains(Int64)
  fullName: System.IO.Log.ReservationCollection.Contains(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Bepaalt of een reservering van de opgegeven grootte zijn gemaakt. Deze methode kan niet worden overgenomen."
  syntax:
    content: public bool Contains (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "De grootte te vinden in de verzameling."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u ten minste één reservering van de opgegeven grootte is gedaan; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.Contains*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De methode is aangeroepen nadat de volgorde van is verwijderd."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Er is onvoldoende geheugen beschikbaar om door te gaan van de uitvoering van het programma."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Toegang voor de opgegeven logboekopslag is geweigerd door het besturingssysteem."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)
  id: CopyTo(System.Int64[],System.Int32)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: CopyTo(Int64[],Int32)
  nameWithType: ReservationCollection.CopyTo(Int64[],Int32)
  fullName: System.IO.Log.ReservationCollection.CopyTo(Int64[],Int32)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "De volledige verzameling worden gekopieerd naar een eendimensionale matrix, beginnend bij de opgegeven index van de doelmatrix. Deze methode kan niet worden overgenomen."
  syntax:
    content: public void CopyTo (long[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Int64[]
      description: "De matrix die het doel van de kopie."
    - id: arrayIndex
      type: System.Int32
      description: "De op nul gebaseerde index in de matrix bij welke kopiëren begint."
  overload: System.IO.Log.ReservationCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>or <code>arrayIndex</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>arrayIndex</code>is kleiner dan nul of groter dan of gelijk zijn aan de lengte van <code>array</code>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Er is onvoldoende ruimte in de opgegeven matrix om de gegevens te kopiëren.       - of - <code> array </code> is geen eendimensionale matrix, dit het enige type voor de aangevraagde actie ondersteund is."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De methode is aangeroepen nadat de volgorde van is verwijderd."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Er is onvoldoende geheugen beschikbaar om door te gaan van de uitvoering van het programma."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Toegang voor de opgegeven logboekopslag is geweigerd door het besturingssysteem."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Count
  id: Count
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Count
  nameWithType: ReservationCollection.Count
  fullName: System.IO.Log.ReservationCollection.Count
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Hiermee haalt het aantal reserveringen in de verzameling."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal reserveringen in de verzameling."
  overload: System.IO.Log.ReservationCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Finalize
  id: Finalize
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Finalize()
  nameWithType: ReservationCollection.Finalize()
  fullName: System.IO.Log.ReservationCollection.Finalize()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Kan de <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> om resources vrij voordat het door de garbage collector wordt vernietigd."
  syntax:
    content: ~ReservationCollection ();
    parameters: []
  overload: System.IO.Log.ReservationCollection.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.FreeReservation(System.Int64)
  id: FreeReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: FreeReservation(Int64)
  nameWithType: ReservationCollection.FreeReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.FreeReservation(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Wanneer in een afgeleide klasse genegeerd, brengt een reservering van de opgegeven grootte."
  syntax:
    content: protected abstract void FreeReservation (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "De grootte van de reservering vrij te geven."
  overload: System.IO.Log.ReservationCollection.FreeReservation*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)
  id: GetBestMatchingReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: GetBestMatchingReservation(Int64)
  nameWithType: ReservationCollection.GetBestMatchingReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.GetBestMatchingReservation(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Wanneer in een afgeleide klasse genegeerd, krijgt het beste overeenkomt met de reservering voor de opgegeven grootte."
  remarks: "Deze methode wordt doorgaans aangeroepen wanneer u een record van de gereserveerde ruimte op een recordreeks toevoegt. Wanneer deze wordt geactiveerd, is een reservering van de grootte van de geretourneerde verwijderd uit de verzameling. Als voor een bepaalde reden gereserveerde ruimte niet daadwerkelijk toegankelijk is, de <xref:System.IO.Log.ReservationCollection.ReservationMade%2A>methode moet worden aangeroepen om ervoor te zorgen dat de <xref:System.IO.Log.ReservationCollection>nauwkeurig vertegenwoordigt de hoeveelheid gereserveerde ruimte in de recordreeks.</xref:System.IO.Log.ReservationCollection> </xref:System.IO.Log.ReservationCollection.ReservationMade%2A>"
  syntax:
    content: protected long GetBestMatchingReservation (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "De grootte van de reservering die moet voldoen aan."
    return:
      type: System.Int64
      description: "Een reservering van de verzameling is groter dan of gelijk zijn aan de opgegeven grootte of -1 als er bestaat geen dergelijke reservering."
  overload: System.IO.Log.ReservationCollection.GetBestMatchingReservation*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.GetEnumerator
  id: GetEnumerator
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ReservationCollection.GetEnumerator()
  fullName: System.IO.Log.ReservationCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Retourneert een enumerator die kunt doorlopen de <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>. Deze methode kan niet worden overgenomen."
  syntax:
    content: public System.Collections.Generic.IEnumerator<long> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Int64}
      description: "Een enumerator die kunt doorlopen de <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is ongeldig voor een van de volgende oorzaken hebben:-de inventarisatie is geëindigd.      -De verzameling is gewijzigd.      -De inventarisatie is niet gestart. Een aanroep van <xref:System.Collections.IEnumerator.MoveNext*>moeten worden gemaakt.</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De methode is aangeroepen nadat de volgorde van is verwijderd."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Er is onvoldoende geheugen beschikbaar om door te gaan van de uitvoering van het programma."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Toegang voor de opgegeven logboekopslag is geweigerd door het besturingssysteem."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.IsReadOnly
  id: IsReadOnly
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ReservationCollection.IsReadOnly
  fullName: System.IO.Log.ReservationCollection.IsReadOnly
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Haalt een waarde die aangeeft of de verzameling alleen-lezen is."
  remarks: "Een <xref:System.IO.Log.ReservationCollection>nooit is alleen-lezen.</xref:System.IO.Log.ReservationCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Deze eigenschap retourneert altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.MakeReservation(System.Int64)
  id: MakeReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: MakeReservation(Int64)
  nameWithType: ReservationCollection.MakeReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.MakeReservation(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Wanneer in een afgeleide klasse genegeerd, wijst een reservering van de opgegeven grootte."
  syntax:
    content: protected abstract void MakeReservation (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "De grootte van de reservering toe te wijzen."
  overload: System.IO.Log.ReservationCollection.MakeReservation*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Remove(System.Int64)
  id: Remove(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Remove(Int64)
  nameWithType: ReservationCollection.Remove(Int64)
  fullName: System.IO.Log.ReservationCollection.Remove(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Een reservering van de opgegeven grootte versies als een heeft plaatsgevonden. Deze methode kan niet worden overgenomen."
  remarks: ''
  example:
  - "The following example shows how to manually make a reservation. Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.  \n  \n```  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nreservations.Add(lengthOfUndoRecord);  \ntry  \n{  \n   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  \n}  \ncatch (Exception)  \n{  \n   reservations.Remove(lengthOfUndoRecord);  \n   throw;  \n}  \n  \nrecordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  \n```"
  syntax:
    content: public bool Remove (long item);
    parameters:
    - id: item
      type: System.Int64
      description: "De grootte van de reservering vrij te geven."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een reservering van de opgegeven grootte is gevonden en is verwijderd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "In de opgegeven reserveringsverzameling geen reservering groot genoeg voor de opgegeven record vindt."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Een i/o-fout optreedt bij het maken van de archief-momentopname."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De methode is aangeroepen nadat de volgorde van is verwijderd."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Er is onvoldoende geheugen beschikbaar om door te gaan van de uitvoering van het programma."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "De recordreeks is vol."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Toegang voor de opgegeven logboekopslag is geweigerd door het besturingssysteem."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)
  id: ReservationFreed(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: ReservationFreed(Int64)
  nameWithType: ReservationCollection.ReservationFreed(Int64)
  fullName: System.IO.Log.ReservationCollection.ReservationFreed(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Wanneer in een afgeleide klasse genegeerd, geeft u aan dat een reservering is vrijgegeven."
  remarks: "Wanneer u overnemen van <xref:System.IO.Log.ReservationCollection>, moet u deze methode aanroepen wanneer een reservering voor een reden dan verwijderd uit de verzameling wordt vrijgegeven.</xref:System.IO.Log.ReservationCollection>"
  syntax:
    content: protected void ReservationFreed (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "De grootte van de reservering die is uitgebracht."
  overload: System.IO.Log.ReservationCollection.ReservationFreed*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.ReservationMade(System.Int64)
  id: ReservationMade(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: ReservationMade(Int64)
  nameWithType: ReservationCollection.ReservationMade(Int64)
  fullName: System.IO.Log.ReservationCollection.ReservationMade(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Wanneer in een afgeleide klasse genegeerd, geeft u aan dat een reservering is gemaakt."
  remarks: "Wanneer u overnemen <xref:System.IO.Log.ReservationCollection>, moet u deze methode wanneer wordt gereserveerd buiten een aanroep van <xref:System.IO.Log.ReservationCollection.Add%2A>.</xref:System.IO.Log.ReservationCollection.Add%2A> aanroepen</xref:System.IO.Log.ReservationCollection>"
  syntax:
    content: protected void ReservationMade (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "De grootte van de reservering dat is gemaakt."
  overload: System.IO.Log.ReservationCollection.ReservationMade*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ReservationCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.ReservationCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Retourneert een enumerator die kunt doorlopen de <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>. Deze methode kan niet worden overgenomen."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator die kunt doorlopen de <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is ongeldig voor een van de volgende oorzaken hebben:-de inventarisatie is geëindigd.      -De verzameling is gewijzigd.      -De inventarisatie is niet gestart. Een aanroep van <xref:System.Collections.IEnumerator.MoveNext*>moeten worden gemaakt.</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De methode is aangeroepen nadat de volgorde van is verwijderd."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Er is onvoldoende geheugen beschikbaar om door te gaan van de uitvoering van het programma."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Toegang voor de opgegeven logboekopslag is geweigerd door het besturingssysteem."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Log.SequenceFullException
  parent: System.IO.Log
  isExternal: false
  name: SequenceFullException
  nameWithType: SequenceFullException
  fullName: System.IO.Log.SequenceFullException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Log.ReservationCollection.#ctor
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationCollection()
  nameWithType: ReservationCollection.ReservationCollection()
  fullName: System.IO.Log.ReservationCollection.ReservationCollection()
- uid: System.IO.Log.ReservationCollection.Add(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Add(Int64)
  nameWithType: ReservationCollection.Add(Int64)
  fullName: System.IO.Log.ReservationCollection.Add(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.ReservationCollection.Clear
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Clear()
  nameWithType: ReservationCollection.Clear()
  fullName: System.IO.Log.ReservationCollection.Clear()
- uid: System.IO.Log.ReservationCollection.Contains(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Contains(Int64)
  nameWithType: ReservationCollection.Contains(Int64)
  fullName: System.IO.Log.ReservationCollection.Contains(Int64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: CopyTo(Int64[],Int32)
  nameWithType: ReservationCollection.CopyTo(Int64[],Int32)
  fullName: System.IO.Log.ReservationCollection.CopyTo(Int64[],Int32)
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.ReservationCollection.Count
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Count
  nameWithType: ReservationCollection.Count
  fullName: System.IO.Log.ReservationCollection.Count
- uid: System.IO.Log.ReservationCollection.Finalize
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Finalize()
  nameWithType: ReservationCollection.Finalize()
  fullName: System.IO.Log.ReservationCollection.Finalize()
- uid: System.IO.Log.ReservationCollection.FreeReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: FreeReservation(Int64)
  nameWithType: ReservationCollection.FreeReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.FreeReservation(Int64)
- uid: System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: GetBestMatchingReservation(Int64)
  nameWithType: ReservationCollection.GetBestMatchingReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.GetBestMatchingReservation(Int64)
- uid: System.IO.Log.ReservationCollection.GetEnumerator
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ReservationCollection.GetEnumerator()
  fullName: System.IO.Log.ReservationCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Int64}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<Int64>
  nameWithType: IEnumerator<Int64>
  fullName: System.Collections.Generic.IEnumerator<System.Int64>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Int64>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.ReservationCollection.IsReadOnly
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ReservationCollection.IsReadOnly
  fullName: System.IO.Log.ReservationCollection.IsReadOnly
- uid: System.IO.Log.ReservationCollection.MakeReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: MakeReservation(Int64)
  nameWithType: ReservationCollection.MakeReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.MakeReservation(Int64)
- uid: System.IO.Log.ReservationCollection.Remove(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Remove(Int64)
  nameWithType: ReservationCollection.Remove(Int64)
  fullName: System.IO.Log.ReservationCollection.Remove(Int64)
- uid: System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationFreed(Int64)
  nameWithType: ReservationCollection.ReservationFreed(Int64)
  fullName: System.IO.Log.ReservationCollection.ReservationFreed(Int64)
- uid: System.IO.Log.ReservationCollection.ReservationMade(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationMade(Int64)
  nameWithType: ReservationCollection.ReservationMade(Int64)
  fullName: System.IO.Log.ReservationCollection.ReservationMade(Int64)
- uid: System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ReservationCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.ReservationCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IO.Log.ReservationCollection.#ctor*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationCollection
  nameWithType: ReservationCollection.ReservationCollection
- uid: System.IO.Log.ReservationCollection.Add*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Add
  nameWithType: ReservationCollection.Add
- uid: System.IO.Log.ReservationCollection.Clear*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Clear
  nameWithType: ReservationCollection.Clear
- uid: System.IO.Log.ReservationCollection.Contains*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Contains
  nameWithType: ReservationCollection.Contains
- uid: System.IO.Log.ReservationCollection.CopyTo*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: CopyTo
  nameWithType: ReservationCollection.CopyTo
- uid: System.IO.Log.ReservationCollection.Count*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Count
  nameWithType: ReservationCollection.Count
- uid: System.IO.Log.ReservationCollection.Finalize*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Finalize
  nameWithType: ReservationCollection.Finalize
- uid: System.IO.Log.ReservationCollection.FreeReservation*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: FreeReservation
  nameWithType: ReservationCollection.FreeReservation
- uid: System.IO.Log.ReservationCollection.GetBestMatchingReservation*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: GetBestMatchingReservation
  nameWithType: ReservationCollection.GetBestMatchingReservation
- uid: System.IO.Log.ReservationCollection.GetEnumerator*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ReservationCollection.GetEnumerator
- uid: System.IO.Log.ReservationCollection.IsReadOnly*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ReservationCollection.IsReadOnly
- uid: System.IO.Log.ReservationCollection.MakeReservation*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: MakeReservation
  nameWithType: ReservationCollection.MakeReservation
- uid: System.IO.Log.ReservationCollection.Remove*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Remove
  nameWithType: ReservationCollection.Remove
- uid: System.IO.Log.ReservationCollection.ReservationFreed*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationFreed
  nameWithType: ReservationCollection.ReservationFreed
- uid: System.IO.Log.ReservationCollection.ReservationMade*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationMade
  nameWithType: ReservationCollection.ReservationMade
- uid: System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ReservationCollection.System.Collections.IEnumerable.GetEnumerator
