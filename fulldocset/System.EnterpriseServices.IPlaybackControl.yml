### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IPlaybackControl
  id: IPlaybackControl
  children:
  - System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  - System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  langs:
  - csharp
  name: IPlaybackControl
  nameWithType: IPlaybackControl
  fullName: System.EnterpriseServices.IPlaybackControl
  type: Interface
  summary: "Functies in de wachtrij-onderdelen in de abnormale afhandeling van fouten afspelen serverzijde en clientzijde fouten van Message Queuing-bezorgingsmechanisme."
  remarks: "De uitzonderingsklasse gedefinieerd voor het onderdeel in de COM +-catalogus wordt geïmplementeerd voor zowel IPlaybackControl als de interface voor de oorspronkelijke klasse. De methode implementaties van de oorspronkelijke klasseninterface worden gebruikt voor het uitvoeren van de uitzondering verwerking voor de mislukte methoden in de klasse zelf. Ze worden aangeroepen nadat <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>of <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>voor het verwerken van uitzonderingen voor de methode aangeroepen oorspronkelijk.</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> </xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>       De onderdelen in de wachtrij speler roept de methoden van IPlaybackControl om te informeren over de uitzonderings-handler object dat een bericht wordt op de laatste rusten of wachtrij voor onbestelbare wachtrij worden geplaatst. De onderdelen in de wachtrij speler roept vervolgens dezelfde methode in een uitzonderingshandler object dat in de oorspronkelijke methodeaanroep is mislukt. De uitzonderings-handler object kunt bijvoorbeeld een alternatief implementeren door probleem diagnose informatie verzamelen of het genereren van een object of het bericht dat informeert het de client van het probleem. Als de toepassing wordt niet geïmplementeerd voor IPlaybackControl, is verontreinigd bericht op de laatste rusten of wachtrij voor onbestelbare wachtrij geplaatst wanneer de onderdelen in de wachtrij speler leidt tot uitputting van alle nieuwe pogingen.       Een poison-bericht is een bericht dat voor een bepaalde reden, mogelijk vanwege een probleem met de server of queueing-systeem kan niet worden verwerkt. De transactie wordt teruggedraaid en gaat het verontreinigd bericht naar de bovenkant van de wachtrij. Wanneer het bericht uit opnieuw wachtrij geplaatst is, treedt dezelfde voorwaarde op. Dit bericht kunt blijven herhalen voor onbepaalde tijd tot iets is klaar om het probleem te verhelpen. De service onderdelen in de wachtrij verwerkt verontreinigd bericht met behulp van een aantal nieuwe pogingen. Na meerdere mislukte pogingen, wordt het bericht verplaatst naar een definitieve verwerken wachtrij. Verontreinigde berichten blijven in de verwerken wachtrij totdat handmatig worden verplaatst met behulp van het hulpprogramma onderdelen bericht Mover in de wachtrij.       De situatie verontreinigd bericht kan ook worden opgelost programmatisch met behulp van de <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>methode, waarmee informeert de auteur van het server-side-onderdeel dat alle pogingen om af te spelen de uitgestelde activering is mislukt.</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>       Als u een poison-bericht detecteren, is het mogelijk dat u kunt snel de oorzaak van het probleem oplossen. Als de server voor een bepaalde reden offline was, kunt u bijvoorbeeld de server weer online brengen. Als u het probleem niet snel kunt oplossen, kunt u een andere transactie melding van de aanvrager die de transactie kwam niet automatisch genereren. De aanvrager kan vervolgens maken van een compensatie transactie wordt teruggedraaid het effect van een transactie die al is doorgevoerd."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IPlaybackControl
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  id: FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "De clientonderdelen afhandeling van uitzonderingen informeert dat alle Message Queuing pogingen tot het leveren van het bericht met de server is geweigerd en het bericht uiteindelijk in de wachtrij van client-side Xact onbestelbare berichten."
  remarks: "Als berichten in de wachtrij voor onbestelbare Xact binnenkomen, probeert COM + aan te roepen van een client-side &quot;-uitzonderings-handler die betrekking hebben op de server-klasse voor het leveren van deze melding. Dit gebeurt door eerst aanroepen FinalClientRetry en vervolgens de afhandeling van uitzonderingen-versie van de mislukte methode aanroepen in de uitzonderings-handler object. Deze methode uitzondering kan vervolgens een uitzondering een actie uitvoert, zoals de mislukte poging, een e-mailbericht verzenden naar de beheerder of verholpen aan de clientzijde compensatie (het effect van een eerdere transactie omgekeerd). Als de methode uitzondering niet lukt, blijft het bericht in de wachtrij voor onbestelbare Xact.       De wachtrij voor onbestelbare Xact kan worden weergegeven in de Verkenner Microsoft Message Queue (MSMQ)."
  syntax:
    content: public void FinalClientRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  id: FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "De implementatie van de klasse serverzijde uitzondering informeert dat alle pogingen om af te spelen de uitgestelde activering met de server is mislukt en het bericht wordt verplaatst naar de uiteindelijke verwerken wachtrij."
  remarks: "Als berichten op de wachtrij voor onbestelbare Xact binnenkomen, probeert COM + aan te roepen een uitzonderingshandler met serverzijde die betrekking hebben op de server-klasse voor het leveren van deze melding. Dit gebeurt door eerst aanroepen FinalServerRetry en vervolgens het aanroepen van de versie van de mislukte methode in het object exception handler verwerking van uitzonderingen. Deze methode uitzondering kan vervolgens een uitzondering een actie uitvoert, zoals de mislukte poging, een e-mailbericht verzenden naar de beheerder of verholpen aan de clientzijde compensatie (het effect van een eerdere transactie omgekeerd). Het serverobject moet mijden voltooien van deze transactie. Anders is handmatige tussenkomst vereist voor het opnieuw verwerken van het bericht. Als de methode uitzondering niet lukt, wordt het bericht wordt verplaatst naar de uiteindelijke verwerken wachtrij."
  syntax:
    content: public void FinalServerRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry
  nameWithType: IPlaybackControl.FinalClientRetry
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry
  nameWithType: IPlaybackControl.FinalServerRetry
