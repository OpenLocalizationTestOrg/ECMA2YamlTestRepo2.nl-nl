### YamlMime:ManagedReference
items:
- uid: System.Messaging.SecurityContext
  id: SecurityContext
  children:
  - System.Messaging.SecurityContext.Dispose
  langs:
  - csharp
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Messaging.SecurityContext
  type: Class
  summary: "Hiermee geeft u de beveiligingscontext voor een bericht in een wachtrij."
  remarks: "De beveiligingscontext bevat in de cache beveiligingsgegevens, zoals een intern certificaat, de bijbehorende persoonlijke sleutel, wordt de SID van de gebruiker, die nodig zijn voor het koppelen van een certificaat en de afzender-id aan een bericht wanneer verificatie aanvraagt.       Als een client, zoals een ASP.NET-toepassing een gebruiker imiteert voor het verzenden van een bericht naar een wachtrij, wordt de identiteit van de gebruiker gebruikt voor toegang tot de wachtrij. Als de wachtrij extern is, worden deze referenties in cache opgeslagen en gebruikt voor berichten die vervolgens naar de wachtrij worden verzonden. De SID in de volgende berichten worden daarom de cache opgeslagen identiteit van de eerste gebruiker die een bericht naar de wachtrij verzonden. De cache opgeslagen identiteit van de eerste gebruiker die een bericht naar de wachtrij verzonden wordt gebruikt voor toekomstige gebruikers.       Om dit probleem wilt oplossen, de instellen beveiliging context met <xref:System.Messaging.Message.SecurityContext%2A>voordat u een bericht verzendt naar een externe wachtrij om ervoor te zorgen dat de referenties van de huidige gebruiker worden gebruikt voor toegang tot de wachtrij.</xref:System.Messaging.Message.SecurityContext%2A> De voorgestelde aanbevolen procedure is echter: 1.  Zorg dat de wachtrij een geverifieerde wachtrij.      2.  De ASP.NET-toepassing uitvoeren als de identiteit van een domein en autoriseren van die toepassing om te schrijven naar de wachtrij.      3.  De gebruiker niet imiteren bij gebruik van de wachtrij. In plaats daarvan de aanroeper id ophalen en autoriseren controleren in de ASP.NET-toepassing of de aanroeper ID opgenomen als onderdeel van het bericht en autoriseren controleren in de ontvangende toepassing."
  syntax:
    content: 'public sealed class SecurityContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.SecurityContext.Dispose
  id: Dispose
  parent: System.Messaging.SecurityContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Messaging.SecurityContext&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Messaging.SecurityContext.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Messaging.SecurityContext.Dispose
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Messaging.SecurityContext.Dispose()
- uid: System.Messaging.SecurityContext.Dispose*
  parent: System.Messaging.SecurityContext
  isExternal: false
  name: Dispose
  nameWithType: SecurityContext.Dispose
