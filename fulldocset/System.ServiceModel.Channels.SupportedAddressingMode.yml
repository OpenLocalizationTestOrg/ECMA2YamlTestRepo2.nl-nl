### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  id: SupportedAddressingMode
  children:
  - System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  - System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  - System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  langs:
  - csharp
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
  type: Enum
  summary: "Hiermee geeft u op of een service verzenden reacties op anonieme adressen alleen alleen niet-anonieme adressen, of beide ondersteunt."
  remarks: "Deze opsomming wordt gebruikt om op te geven van de mogelijkheid van een server die op zijn beurt een vereiste voor de clients legt.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]heeft een aantal verschillende adressering besturingselementen voor het opgeven van waar de berichten moeten worden verzonden. Er is bijvoorbeeld de logische <xref:System.ServiceModel.Channels.MessageHeaders.To%2A>adres voor de doel-bericht, de fysieke (&quot;Via&quot;), adres, dat wordt gebruikt voor het transport, waarmee een service luistert, en de <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A>adres van het eindpunt waarmee het adres van de client-endpoint.</xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> </xref:System.ServiceModel.Channels.MessageHeaders.To%2A>       In het meest eenvoudige geval wanneer twee partijen uitwisselen van berichten tussen zichzelf, is het niet nodig deze adressen afzonderlijk opgeven. Maar omdat uitwisselingen betrekking op andere message bestemmingen hebben kunnen, moet u kunnen opgeven wanneer het adres moet expliciet worden opgegeven. Zelfs tussen twee partijen is deze mogelijkheid ook vereist als met dubbele HTTP waar de server een eigen HTTP-aanvraag moet maken. De volgende soorten relaties worden gedefinieerd door inventarisatie SupportedAddressingMode voor het vastleggen van deze berichtpatronen:-anonieme adressen zijn de meest eenvoudige vorm van adressering. Anonieme adressering wordt gebruikt wanneer er een standaardpad voor een antwoord. TCP is een transport bidirectionele communicatie en het antwoord op een TCP-bericht kan worden verzonden naar de andere kant van de socket die het oorspronkelijke bericht verzonden. Op dezelfde manier verzendt het request-reply-model van de HTTP-antwoorden via het HTTP-antwoord-kanaal. Geen van deze antwoorden vereist opgeven waar de responsberichten gaat. Wanneer een server anonieme reacties van de client vereist, gebruikt de anonieme waarde van de inventarisatie. De [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] systeem geleverde <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding>en <xref:System.ServiceModel.WSHttpBinding>Bindingen altijd anonieme adressen gebruiken.</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.BasicHttpBinding> </xref:System.ServiceModel.NetTcpBinding>      -Niet-anonieme adressen worden gebruikt wanneer het antwoord wordt verzonden, moet er een nieuw kanaal voor communicatie. De [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] systeem geleverde <xref:System.ServiceModel.WSDualHttpBinding>binding een niet-anonieme adres gebruikt.</xref:System.ServiceModel.WSDualHttpBinding> De client maakt een HTTP-aanvraag om een bericht te verzenden met dubbele HTTP en vervolgens de server een eigen HTTP-aanvraag voor het verzenden van een antwoord moet maken. Omdat de server is bezig met het starten van de verzenden, moet een specifieke eindpunt om de verbinding te maken hebben. U moet de server het adres van een eindpunt opgeven voor het antwoord. Op dezelfde manier als een service op een eenzijdige bericht ontvangen reageren moet, is er ook vereist een niet-anoniem adres omdat er is geen back-kanaal beschikbaar zijn voor communicatie. Als de server een bericht weer verzendt, is een volledig gescheiden bewerking die u gebruikt voor het verzenden van het eerste bericht is vereist.      -Gemengde is een derde vorm van adressering die worden gecombineerd voor anonieme en niet-anoniem adres, afhankelijk van het bericht dat wordt verzonden. Een typisch voorbeeld van gemengde modus adressering is het gebruik van een toegewezen machine voor het verwerken van de fout of een bevestiging berichten. Als de volgorde van de standaard exchange voor antwoorden HTTP of TCP is, wordt de antwoorden gebruiken anonieme adressering maar wordt de fouten gebruiken niet-anonieme adressering. Terwijl [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] biedt geen gemengde adressering functionaliteit in een van de standaard bindingen, is het mogelijk om te schrijven van een kanaal dat kan de service voor het verzenden van antwoorden rechtstreeks op het back-kanaal (als het antwoordadres anoniem is) of op een afzonderlijke kanaal (als het antwoordadres niet-anoniem is). In dat geval moet het element van de binding van het kanaal wordt gebruikt voor setSupportedAddressingMode in Mixed."
  syntax:
    content: public enum SupportedAddressingMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  id: Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "De server ondersteunt alleen anonieme adressen en clients een antwoordadres anonieme moeten opgeven."
  syntax:
    content: Anonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  id: Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "De server ondersteunt zowel anoniem als niet-anonieme adressen en clients kunnen ervoor kiezen om te gebruiken een of beide."
  syntax:
    content: Mixed
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  id: NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "De server ondersteunt alleen niet-anonieme adressen en clients moeten een niet-anonieme antwoordadres opgeven."
  syntax:
    content: NonAnonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  parent: System.ServiceModel.Channels
  isExternal: false
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
