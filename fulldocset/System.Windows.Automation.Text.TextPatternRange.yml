### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Text.TextPatternRange
  id: TextPatternRange
  children:
  - System.Windows.Automation.Text.TextPatternRange.AddToSelection
  - System.Windows.Automation.Text.TextPatternRange.Clone
  - System.Windows.Automation.Text.TextPatternRange.Compare(System.Windows.Automation.Text.TextPatternRange)
  - System.Windows.Automation.Text.TextPatternRange.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  - System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  - System.Windows.Automation.Text.TextPatternRange.FindAttribute(System.Windows.Automation.AutomationTextAttribute,System.Object,System.Boolean)
  - System.Windows.Automation.Text.TextPatternRange.FindText(System.String,System.Boolean,System.Boolean)
  - System.Windows.Automation.Text.TextPatternRange.GetAttributeValue(System.Windows.Automation.AutomationTextAttribute)
  - System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles
  - System.Windows.Automation.Text.TextPatternRange.GetChildren
  - System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement
  - System.Windows.Automation.Text.TextPatternRange.GetText(System.Int32)
  - System.Windows.Automation.Text.TextPatternRange.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  - System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  - System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  - System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection
  - System.Windows.Automation.Text.TextPatternRange.ScrollIntoView(System.Boolean)
  - System.Windows.Automation.Text.TextPatternRange.Select
  - System.Windows.Automation.Text.TextPatternRange.TextPattern
  langs:
  - csharp
  name: TextPatternRange
  nameWithType: TextPatternRange
  fullName: System.Windows.Automation.Text.TextPatternRange
  type: Class
  summary: "Hiermee geeft u een reeks van doorlopende tekst in een <xref href=&quot;System.Windows.Automation.TextPattern&quot;> </xref> container."
  remarks: "Een TextPatternRange kan vertegenwoordigen een invoegpositie, een subset of alle tekst in een <xref:System.Windows.Automation.TextPattern>container.</xref:System.Windows.Automation.TextPattern>       Een TextPatternRange, raken ongeldig als een van de volgende gebeurt: de tekst in de <xref:System.Windows.Automation.TextPattern>wijzigingen vanwege bepaalde gebruikersactiviteit container of de <xref:System.Windows.Automation.ValuePattern.SetValue%2A>methode van <xref:System.Windows.Automation.ValuePattern>wordt gebruikt voor het programmatisch Wijzig de waarde van de tekst in de <xref:System.Windows.Automation.TextPattern>container.</xref:System.Windows.Automation.TextPattern> </xref:System.Windows.Automation.ValuePattern> </xref:System.Windows.Automation.ValuePattern.SetValue%2A> </xref:System.Windows.Automation.TextPattern>"
  syntax:
    content: public class TextPatternRange
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.AddToSelection
  id: AddToSelection
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: AddToSelection()
  nameWithType: TextPatternRange.AddToSelection()
  fullName: System.Windows.Automation.Text.TextPatternRange.AddToSelection()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Wordt toegevoegd aan de verzameling van de geselecteerde tekst in een tekstcontainer die ondersteuning biedt voor meerdere niet-aaneengesloten selecties."
  remarks: "De invoegpositie verplaatst naar het gebied van de nieuwe selectie.       Een losstaande tekstbereik bieden invoegpositie de."
  syntax:
    content: public void AddToSelection ();
    parameters: []
  overload: System.Windows.Automation.Text.TextPatternRange.AddToSelection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Als SMS-provider geen ondersteuning biedt voor meerdere niet-aaneengesloten selecties (bijvoorbeeld <xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>moet een waarde van hebben <xref uid=&quot;langword_csharp_Multiple&quot; name=&quot;Multiple&quot; href=&quot;&quot;> </xref>).</xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>"
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.Clone
  id: Clone
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: Clone()
  nameWithType: TextPatternRange.Clone()
  fullName: System.Windows.Automation.Text.TextPatternRange.Clone()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Haalt een nieuwe <xref href=&quot;System.Windows.Automation.Text.TextPatternRange&quot;> </xref> identiek aan de oorspronkelijke <xref href=&quot;System.Windows.Automation.Text.TextPatternRange&quot;> </xref> en overnemen van alle eigenschappen van het origineel."
  remarks: "U kunt ook Maak een nieuwe <xref:System.Windows.Automation.TextPattern.DocumentRange%2A>van de <xref:System.Windows.Automation.TextPattern>en verplaatst u de twee eindpunten overeenkomt met de eindpunten van het oorspronkelijke tekstbereik.</xref:System.Windows.Automation.TextPattern> </xref:System.Windows.Automation.TextPattern.DocumentRange%2A>       Het nieuwe bereik kan onafhankelijk van de oorspronkelijke worden gemanipuleerd."
  example:
  - "[!code-cs[UIATextPattern_snip#1060](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1060)]  \n  \n [!code-vb[UIATextPattern_snip#2060](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2060)]"
  syntax:
    content: public System.Windows.Automation.Text.TextPatternRange Clone ();
    parameters: []
    return:
      type: System.Windows.Automation.Text.TextPatternRange
      description: "Het nieuwe tekstbereik. Een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) nooit wordt geretourneerd."
  overload: System.Windows.Automation.Text.TextPatternRange.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.Compare(System.Windows.Automation.Text.TextPatternRange)
  id: Compare(System.Windows.Automation.Text.TextPatternRange)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: Compare(TextPatternRange)
  nameWithType: TextPatternRange.Compare(TextPatternRange)
  fullName: System.Windows.Automation.Text.TextPatternRange.Compare(TextPatternRange)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Retourneert een <xref:System.Boolean>-waarde die aangeeft of de reeks (de <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> eindpunt op de <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> eindpunt) van een bereik is gelijk aan een andere tekstbereik.</xref:System.Boolean>"
  remarks: ''
  example:
  - "[!code-cs[UIATextPattern_snip#1061](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1061)]  \n  \n [!code-vb[UIATextPattern_snip#2061](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2061)]"
  syntax:
    content: public bool Compare (System.Windows.Automation.Text.TextPatternRange range);
    parameters:
    - id: range
      type: System.Windows.Automation.Text.TextPatternRange
      description: "Een tekstbereik om te vergelijken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het bereik van beide tekstbereiken identiek zijn. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Text.TextPatternRange.Compare*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Als het bereik worden vergeleken, is niet afkomstig van dezelfde tekstprovider."
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  id: CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: CompareEndpoints(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  nameWithType: TextPatternRange.CompareEndpoints(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Text.TextPatternRange.CompareEndpoints(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Retourneert een <xref:System.Int32>die aangeeft of twee tekstbereiken identieke eindpunten hebben.</xref:System.Int32>"
  remarks: "De begin- en eindpunten van dezelfde tekstbereik vergelijken kunt u identificeren als een tekstbereik losstaande of als de eindpunten in de volgorde van logische tekst."
  example:
  - "[!code-cs[UIATextPattern_snip#1062](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1062)]  \n  \n [!code-vb[UIATextPattern_snip#2062](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2062)]"
  syntax:
    content: public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextPatternRange targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "De <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> of <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> eindpunt van de aanroepfunctie."
    - id: targetRange
      type: System.Windows.Automation.Text.TextPatternRange
      description: "Het doelbereik voor de vergelijking."
    - id: targetEndpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "De <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> of <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> eindpunt van het doel."
    return:
      type: System.Int32
      description: "Retourneert een negatieve waarde als eindpunt van de aanroeper eerder in de tekst dan het doel-eindpunt optreedt.       Retourneert&0; als de aanroeper eindpunt op dezelfde locatie als het doel-eindpunt.       Retourneert een positieve waarde als eindpunt van de aanroeper later in de tekst dan het doel-eindpunt optreedt."
  overload: System.Windows.Automation.Text.TextPatternRange.CompareEndpoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Als bereik een null-verwijzing is (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Als bereik van een andere container is."
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  id: ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: ExpandToEnclosingUnit(TextUnit)
  nameWithType: TextPatternRange.ExpandToEnclosingUnit(TextUnit)
  fullName: System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit(TextUnit)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Het tekstbereik uitgebreid tot de opgegeven <xref href=&quot;System.Windows.Automation.Text.TextUnit&quot;> </xref>."
  remarks: "Als het bereik al een exacte aantal van de opgegeven eenheden is blijft het ongewijzigd.       In de volgorde voor de methode ExpandToEnclosingUnit niet goed worden uitgevoerd, wordt een reeks acties uitgevoerd achter de schermen.      1.  Het tekstbereik is genormaliseerd; dat wil zeggen, het tekstbereik wordt samengevouwen tot een losstaande bereik op de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt, waardoor de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt overbodig.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> Deze stap is nodig om de dubbelzinnigheid verwijderen in situaties waarin een tekstbereik omvat `unit` grenzen; bijvoorbeeld: &quot;{U} RL [http://www.microsoft.com](http://www.microsoft.com) is ingesloten in de tekst &quot; waar &quot; {&quot; en &quot;} &quot; zijn van de tekst bereik eindpunten.      2.  Het resulterende bereik achterwaarts verplaatst de <xref:System.Windows.Automation.TextPattern.DocumentRange%2A>aan het begin van de gevraagde `unit` grens.</xref:System.Windows.Automation.TextPattern.DocumentRange%2A>      3.  Het bereik in achteruit wordt verplaatst de <xref:System.Windows.Automation.TextPattern.DocumentRange%2A>door het aangevraagde aantal `unit` grenzen.</xref:System.Windows.Automation.TextPattern.DocumentRange%2A>      4.  Het bereik vervolgens uitgebreid vanuit de status van een losstaande bereik worden verplaatst de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt met één aangevraagd `unit` grens.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![Bereik van de aanpassingen door verplaatsen & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;bereik aanpassingen door verplaatsen & ExpandToEnclosingUnit&quot;) voorbeelden van hoe een tekstbereik wordt aangepast aan Move() en ExpandToEnclosingUnit() > [!NOTE] > deze stappen zijn nodig omdat het is gebruikelijk voor een schermlezer om te lezen uit een volledige woord, zin of volledige alinea op de invoegpositie of elke virtuele cursorpositie.       ExpandToEnclosingUnit respecteert verborgen en weergegeven tekst. De UI Automation-client kunt controleren de <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>voor tekst zichtbaarheid.</xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>       ExpandToEnclosingUnit past omleiding naar de volgende grootste <xref:System.Windows.Automation.Text.TextUnit>ondersteund als de opgegeven <xref:System.Windows.Automation.Text.TextUnit>wordt niet ondersteund door het besturingselement.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       De volgorde van de kleinste eenheid naar groot is, wordt hieronder vermeld.      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit>"
  example:
  - "[!code-cs[UIATextPattern_snip#1063](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1063)]  \n  \n [!code-vb[UIATextPattern_snip#2063](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2063)]"
  syntax:
    content: public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);
    parameters:
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "De tekstuele eenheid."
  overload: System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.FindAttribute(System.Windows.Automation.AutomationTextAttribute,System.Object,System.Boolean)
  id: FindAttribute(System.Windows.Automation.AutomationTextAttribute,System.Object,System.Boolean)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: FindAttribute(AutomationTextAttribute,Object,Boolean)
  nameWithType: TextPatternRange.FindAttribute(AutomationTextAttribute,Object,Boolean)
  fullName: System.Windows.Automation.Text.TextPatternRange.FindAttribute(AutomationTextAttribute,Object,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Retourneert een subset voor het bereik van tekst die de opgegeven kenmerkwaarde heeft."
  remarks: "Er is geen onderscheid tussen verborgen en weergegeven tekst. UI Automation-clients kunnen gebruiken <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>om te controleren van de zichtbaarheid van de tekst.</xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>      > [!NOTE] > Gebruik <xref:System.Windows.Automation.TextPattern.DocumentRange%2A>het hele document zoeken.</xref:System.Windows.Automation.TextPattern.DocumentRange%2A>"
  example:
  - "[!code-cs[UIATextPattern_snip#1064](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1064)]  \n  \n [!code-vb[UIATextPattern_snip#2064](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2064)]"
  syntax:
    content: public System.Windows.Automation.Text.TextPatternRange FindAttribute (System.Windows.Automation.AutomationTextAttribute attribute, object value, bool backward);
    parameters:
    - id: attribute
      type: System.Windows.Automation.AutomationTextAttribute
      description: "Het kenmerk om te zoeken."
    - id: value
      type: System.Object
      description: "De waarde van het kenmerk om te zoeken. Deze waarde moet overeenkomen met het opgegeven type voor het kenmerk."
    - id: backward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het laatste voorkomende tekstbereik moet worden geretourneerd in plaats van de eerste; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Automation.Text.TextPatternRange
      description: "Een tekstbereik met een overeenkomende kenmerk en een kenmerkwaarde; anders null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  overload: System.Windows.Automation.Text.TextPatternRange.FindAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.FindText(System.String,System.Boolean,System.Boolean)
  id: FindText(System.String,System.Boolean,System.Boolean)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: FindText(String,Boolean,Boolean)
  nameWithType: TextPatternRange.FindText(String,Boolean,Boolean)
  fullName: System.Windows.Automation.Text.TextPatternRange.FindText(String,Boolean,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Retourneert een subset van tekst bereik met de opgegeven tekst."
  remarks: "Er is geen onderscheid tussen verborgen en weergegeven tekst. UI Automation-clients kunnen gebruiken <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>om te controleren van de zichtbaarheid van de tekst.</xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>      > [!NOTE] > Gebruik <xref:System.Windows.Automation.TextPattern.DocumentRange%2A>het hele document zoeken.</xref:System.Windows.Automation.TextPattern.DocumentRange%2A>"
  example:
  - "[!code-cs[UIATextPattern_snip#1065](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1065)]  \n  \n [!code-vb[UIATextPattern_snip#2065](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2065)]"
  syntax:
    content: public System.Windows.Automation.Text.TextPatternRange FindText (string text, bool backward, bool ignoreCase);
    parameters:
    - id: text
      type: System.String
      description: "De tekenreeks om naar te zoeken."
    - id: backward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het laatste voorkomende tekstbereik moet worden geretourneerd in plaats van de eerste; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de aanvraag moet worden genegeerd. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Automation.Text.TextPatternRange
      description: "Een tekstbereik die overeenkomt met de opgegeven tekst. anders null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  overload: System.Windows.Automation.Text.TextPatternRange.FindText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.GetAttributeValue(System.Windows.Automation.AutomationTextAttribute)
  id: GetAttributeValue(System.Windows.Automation.AutomationTextAttribute)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: GetAttributeValue(AutomationTextAttribute)
  nameWithType: TextPatternRange.GetAttributeValue(AutomationTextAttribute)
  fullName: System.Windows.Automation.Text.TextPatternRange.GetAttributeValue(AutomationTextAttribute)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Retourneert de waarde van het opgegeven kenmerk binnen de volledige tekst."
  remarks: "Er is geen onderscheid tussen verborgen en weergegeven tekst. UI Automation-clients kunnen gebruiken <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>om te controleren van de zichtbaarheid van de tekst.</xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>"
  example:
  - "[!code-cs[UIATextPattern_snip#1066](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1066)]  \n  \n [!code-vb[UIATextPattern_snip#2066](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2066)]"
  syntax:
    content: public object GetAttributeValue (System.Windows.Automation.AutomationTextAttribute attribute);
    parameters:
    - id: attribute
      type: System.Windows.Automation.AutomationTextAttribute
      description: "Het tekstkenmerk."
    return:
      type: System.Object
      description: "Retourneert de waarde van het opgegeven kenmerk. GetAttributeValue(TextPattern.FontNameAttribute) zou bijvoorbeeld een tekenreeks met de naam van het lettertype retourneren als unieke tekstbereik tijdens GetAttributeValue(TextPattern.IsItalicAttribute) zou een Booleaanse waarde retourneren.       Retourneert <xref href=&quot;System.Windows.Automation.TextPattern.MixedAttributeValue&quot;> </xref> als de waarde van het opgegeven kenmerk in het tekstbereik varieert.       Retourneert <xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;> </xref> als het opgegeven kenmerk wordt niet ondersteund door de provider of het besturingselement."
  overload: System.Windows.Automation.Text.TextPatternRange.GetAttributeValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Als het opgegeven kenmerk niet geldig is."
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles
  id: GetBoundingRectangles
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: GetBoundingRectangles()
  nameWithType: TextPatternRange.GetBoundingRectangles()
  fullName: System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Een verzameling van het begrenzingsvak rechthoeken voor elke regel volledig of gedeeltelijk zichtbaar van tekst in een tekstbereik opgehaald."
  remarks: ''
  example:
  - "[!code-cs[UIATextPattern_snip#1067](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1067)]  \n  \n [!code-vb[UIATextPattern_snip#2067](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2067)]"
  syntax:
    content: public System.Windows.Rect[] GetBoundingRectangles ();
    parameters: []
    return:
      type: System.Windows.Rect[]
      description: "Een matrix van het begrenzingsvak rechthoeken voor elke regel volledige of gedeeltelijke van tekst in een tekstbereik.       Een lege matrix voor een losstaande tekstbereik.       Een lege matrix voor een tekstbereik met schermcoördinaten plaatsen volledig buiten het scherm, uit de weergave geschoven of verborgen door een overlappende venster."
  overload: System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.GetChildren
  id: GetChildren
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: GetChildren()
  nameWithType: TextPatternRange.GetChildren()
  fullName: System.Windows.Automation.Text.TextPatternRange.GetChildren()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Een verzameling van alle ingesloten objecten die binnen het tekstbereik opgehaald."
  remarks: ''
  example:
  - "[!code-vb[UIATextPattern_snip#StartTarget](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#starttarget)]\n [!code-cs[UIATextPattern_snip#StartTarget](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#starttarget)]  \n[!code-vb[UIATextPattern_snip#GetTextElement](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#gettextelement)]\n[!code-cs[UIATextPattern_snip#GetTextElement](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#gettextelement)]  \n[!code-vb[UIATextPattern_snip#GetEmbeddedObjects](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#getembeddedobjects)]\n[!code-cs[UIATextPattern_snip#GetEmbeddedObjects](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#getembeddedobjects)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement[] GetChildren ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationElement[]
      description: "Een verzameling van alle onderliggende objecten die binnen het bereik vallen. Onderliggende elementen die overlappen met het bereik, maar niet volledig zijn ingesloten door deze worden ook opgenomen in de verzameling.       Retourneert een lege verzameling op als er geen onderliggende objecten zijn."
  overload: System.Windows.Automation.Text.TextPatternRange.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement
  id: GetEnclosingElement
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: GetEnclosingElement()
  nameWithType: TextPatternRange.GetEnclosingElement()
  fullName: System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Retourneert het binnenste <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> die het tekstbereik omsluit."
  remarks: "Het overkoepelende <xref:System.Windows.Automation.AutomationElement>, meestal de SMS-provider waaruit het tekstbereik.</xref:System.Windows.Automation.AutomationElement> Als de SMS-provider onderliggende elementen zoals tabellen of hyperlinks ondersteunt, kan klikt u vervolgens het insluitend element echter wel een afstammeling van de SMS-provider."
  example:
  - "[!code-cs[UIATextPattern_snip#1069](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1069)]  \n  \n [!code-vb[UIATextPattern_snip#2069](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2069)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement GetEnclosingElement ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationElement
      description: "Het binnenste element insluitende de aanroeper."
  overload: System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.GetText(System.Int32)
  id: GetText(System.Int32)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: GetText(Int32)
  nameWithType: TextPatternRange.GetText(Int32)
  fullName: System.Windows.Automation.Text.TextPatternRange.GetText(Int32)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Retourneert de tekst zonder opmaak van het tekstbereik."
  remarks: "GetText respecteert verborgen en weergegeven tekst. De UI Automation-client kunt controleren de <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>voor tekst zichtbaarheid.</xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>       Als `maxLength` is groter dan de lengte van de reeks tekst van de aanroeper, is de tekenreeks die de tekst zonder opmaak van het tekstbereik.       GetText worden niet beïnvloed door de volgorde van de eindpunten in de tekst; de tekst wordt altijd tussen de begin- en eindpunten van het tekstbereik in de volgorde van de stroom logische tekst geretourneerd."
  example:
  - "[!code-cs[UIATextPattern_snip#1070](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1070)]  \n  \n [!code-vb[UIATextPattern_snip#2070](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2070)]"
  syntax:
    content: public string GetText (int maxLength);
    parameters:
    - id: maxLength
      type: System.Int32
      description: "De maximale lengte van de tekenreeks om terug te keren. Gebruik `-1` als er geen limiet is vereist."
    return:
      type: System.String
      description: "De tekst zonder opmaak van het tekstbereik mogelijk afgebroken op de opgegeven <code> maxLength </code>."
  overload: System.Windows.Automation.Text.TextPatternRange.GetText*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Als <code> maxLength </code> is kleiner dan -1."
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  id: Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: Move(TextUnit,Int32)
  nameWithType: TextPatternRange.Move(TextUnit,Int32)
  fullName: System.Windows.Automation.Text.TextPatternRange.Move(TextUnit,Int32)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Hiermee verplaatst u het tekstbereik het opgegeven aantal teksteenheden."
  remarks: "Wanneer het bladeren door de inhoud van een tekstbereik nodig is, worden een aantal stappen betrokken achter de schermen, zodat de Move-methode niet goed worden uitgevoerd.      1.  Het tekstbereik is genormaliseerd; dat wil zeggen, het tekstbereik wordt samengevouwen tot een losstaande bereik op de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt, waardoor de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt overbodig.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> Deze stap is nodig om de dubbelzinnigheid verwijderen in situaties waarin een tekstbereik omvat `unit` grenzen; bijvoorbeeld: &quot;{U} RL [http://www.microsoft.com](http://www.microsoft.com) is ingesloten in de tekst &quot; waar &quot; {&quot; en &quot;} &quot; zijn van de tekst bereik eindpunten.      2.  Het resulterende bereik achterwaarts verplaatst de <xref:System.Windows.Automation.TextPattern.DocumentRange%2A>aan het begin van de gevraagde `unit` grens.</xref:System.Windows.Automation.TextPattern.DocumentRange%2A>      3.  Het bereik in achteruit wordt verplaatst de <xref:System.Windows.Automation.TextPattern.DocumentRange%2A>door het aangevraagde aantal `unit` grenzen.</xref:System.Windows.Automation.TextPattern.DocumentRange%2A>      4.  Het bereik vervolgens uitgebreid vanuit de status van een losstaande bereik worden verplaatst de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt met één aangevraagd `unit` grens.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![Bereik van de aanpassingen door verplaatsen & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;bereik aanpassingen door verplaatsen & ExpandToEnclosingUnit&quot;) voorbeelden van hoe een tekstbereik is aangepast voor Move() en ExpandToEnclosingUnit() de tekstinhoud (of interne tekst) van een tekst-container en een ingesloten object, zoals een hyperlink of tabelcel, wordt weergegeven als een stream met één, continue tekst in zowel de weergave beheer en de inhoud van de [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] boomstructuur; object grenzen worden genegeerd. Als een client UI Automation is bij het ophalen van de tekst omwille van de reciting, te interpreteren of op enige wijze analyseren, moet het tekstbereik voor bijzondere gevallen, zoals een tabel met tekstuele inhoud of andere ingesloten objecten worden gecontroleerd. Kan dit worden bereikt door het aanroepen van <xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A>verkrijgen van een <xref:System.Windows.Automation.AutomationElement>voor elk object en klikt u vervolgens aan te roepen ingesloten <xref:System.Windows.Automation.TextPattern.RangeFromChild%2A>verkrijgen van een tekstbereik voor elk element; hiervoor recursief totdat alle tekstinhoud is opgehaald.</xref:System.Windows.Automation.TextPattern.RangeFromChild%2A> </xref:System.Windows.Automation.AutomationElement> </xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A>       ![Tekst adresbereiken omspannen door ingesloten objecten. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png &quot;Tekstbereiken omspannen door ingesloten objecten.&quot;)   Voorbeeld van een tekststream met ingesloten objecten en hun bereik omvat verplaatsen respecteert beide verborgen en weergegeven tekst. De UI Automation-client kunt controleren de <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>voor tekst zichtbaarheid.</xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>       Verplaatsing past omleiding naar de volgende grootste <xref:System.Windows.Automation.Text.TextUnit>ondersteund als de opgegeven <xref:System.Windows.Automation.Text.TextUnit>wordt niet ondersteund door het besturingselement.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       De volgorde van de kleinste eenheid naar groot is, wordt hieronder vermeld.      - <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>> [!NOTE] > De tekst is niet gewijzigd op een manier omdat het tekstbereik alleen een ander deel van de tekst omvat.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>"
  example:
  - "[!code-vb[UIATextPattern_snip#StartTarget](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#starttarget)]\n [!code-cs[UIATextPattern_snip#StartTarget](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#starttarget)]  \n[!code-vb[UIATextPattern_snip#GetTextElement](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#gettextelement)]\n[!code-cs[UIATextPattern_snip#GetTextElement](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#gettextelement)]  \n[!code-vb[UIATextPattern_snip#MoveSelection](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#moveselection)]\n[!code-cs[UIATextPattern_snip#MoveSelection](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#moveselection)]"
  syntax:
    content: public int Move (System.Windows.Automation.Text.TextUnit unit, int count);
    parameters:
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "De tekst eenheid grens."
    - id: count
      type: System.Int32
      description: "Het aantal teksteenheden te verplaatsen. Een positieve waarde retourneert het tekstbereik doorsturen, een negatieve waarde worden verplaatst naar achteren tekstbereik en 0 heeft geen effect."
    return:
      type: System.Int32
      description: "Het aantal eenheden daadwerkelijk worden verplaatst. Dit kan zijn dat kleiner is dan het aangevraagde aantal als een van de eindpunten van het nieuwe tekst-bereik is groter dan of kleiner zijn dan de <xref:System.Windows.Automation.TextPattern.DocumentRange*>eindpunten.</xref:System.Windows.Automation.TextPattern.DocumentRange*>"
  overload: System.Windows.Automation.Text.TextPatternRange.Move*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  id: MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: MoveEndpointByRange(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  nameWithType: TextPatternRange.MoveEndpointByRange(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Één eindpunt van een tekstbereik verplaatst naar het opgegeven eindpunt van een tweede tekstbereik."
  remarks: "Als het eindpunt wordt verplaatst het andere eindpunt van de dezelfde tekstbereik bestrijkt, wordt dat andere eindpunt ook, wordt verplaatst, wat resulteert in een losstaande bereik en het waarborgen dat de juiste volgorde van de eindpunten (dat wil zeggen <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>is altijd kleiner zijn dan of gelijk zijn aan <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>).</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>"
  example:
  - "[!code-cs[UIATextPattern_snip#1072](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1072)]  \n  \n [!code-vb[UIATextPattern_snip#2072](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2072)]"
  syntax:
    content: public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextPatternRange targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Het eindpunt te verplaatsen."
    - id: targetRange
      type: System.Windows.Automation.Text.TextPatternRange
      description: "Een ander bereik van dezelfde tekstprovider."
    - id: targetEndpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Een eindpunt op het andere bereik."
  overload: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  id: MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  nameWithType: TextPatternRange.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  fullName: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Hiermee gaat u één eindpunt van de tekst die het opgegeven aantal bereik <xref href=&quot;System.Windows.Automation.Text.TextUnit&quot;> </xref>s binnen het documentbereik."
  remarks: "Wanneer dit nodig is tot de inhoud van een tekstbereik, een reeks stappen betrokken zijn achter de schermen om de <xref:System.Windows.Automation.Text.TextPatternRange.Move%2A>methode niet goed worden uitgevoerd.</xref:System.Windows.Automation.Text.TextPatternRange.Move%2A>      1.  Het tekstbereik is genormaliseerd; dat wil zeggen, het tekstbereik wordt samengevouwen tot een losstaande bereik op de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt, waardoor de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt overbodig.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> Deze stap is nodig om de dubbelzinnigheid verwijderen in situaties waarin een tekstbereik omvat `unit` grenzen; bijvoorbeeld: &quot;{U} RL [http://www.microsoft.com](http://www.microsoft.com) is ingesloten in de tekst &quot; waar &quot; {&quot; en &quot;} &quot; zijn van de tekst bereik eindpunten.      2.  Het resulterende bereik achterwaarts verplaatst de <xref:System.Windows.Automation.TextPattern.DocumentRange%2A>aan het begin van de gevraagde `unit` grens.</xref:System.Windows.Automation.TextPattern.DocumentRange%2A>      3.  Het bereik vervolgens uitgebreid vanuit de status van een losstaande bereik worden verplaatst de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt met één aangevraagd `unit` grens.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![Bereik van de aanpassingen door verplaatsen & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;bereik aanpassingen door verplaatsen & ExpandToEnclosingUnit&quot;) voorbeelden van hoe een tekstbereik is aangepast voor Move() en ExpandToEnclosingUnit() de tekstinhoud (of interne tekst) van een tekst-container en een ingesloten object, zoals een hyperlink of tabelcel, wordt weergegeven als een stream met één, continue tekst in zowel de weergave beheer en de inhoud van de [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] boomstructuur; object grenzen worden genegeerd. Als een client UI Automation is bij het ophalen van de tekst omwille van de reciting, te interpreteren of op enige wijze analyseren, moet het tekstbereik voor bijzondere gevallen, zoals een tabel met tekstuele inhoud of andere ingesloten objecten worden gecontroleerd. Kan dit worden bereikt door het aanroepen van <xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A>verkrijgen van een <xref:System.Windows.Automation.AutomationElement>voor elk object en klikt u vervolgens aan te roepen ingesloten <xref:System.Windows.Automation.TextPattern.RangeFromChild%2A>verkrijgen van een tekstbereik voor elk element; hiervoor recursief totdat alle tekstinhoud is opgehaald.</xref:System.Windows.Automation.TextPattern.RangeFromChild%2A> </xref:System.Windows.Automation.AutomationElement> </xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A>       ![Tekst adresbereiken omspannen door ingesloten objecten. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png &quot;Tekstbereiken omspannen door ingesloten objecten.&quot;)   Voorbeeld van een tekststream met ingesloten objecten en hun bereik reeksen MoveEndpointByUnit past omleiding naar de volgende grootste <xref:System.Windows.Automation.Text.TextUnit>ondersteund als de opgegeven <xref:System.Windows.Automation.Text.TextUnit>wordt niet ondersteund door het besturingselement.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       De volgorde van de kleinste eenheid naar groot is, wordt hieronder vermeld.      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit>"
  example:
  - "[!code-cs[UIATextPattern_snip#1073](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1073)]  \n  \n [!code-vb[UIATextPattern_snip#2073](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2073)]"
  syntax:
    content: public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Het eindpunt te verplaatsen."
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "De tekstuele eenheid voor het verplaatsen."
    - id: count
      type: System.Int32
      description: "Het aantal eenheden te verplaatsen. Een positief aantal verplaatst doorsturen van het eindpunt. Een negatief aantal achteruit. Het aantal 0 heeft geen effect."
    return:
      type: System.Int32
      description: "Het aantal eenheden daadwerkelijk worden verplaatst, die kan worden kleiner zijn dan het aantal aangevraagde als het verplaatsen van dat het eindpunt wordt uitgevoerd in het begin of einde van het document."
  overload: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection
  id: RemoveFromSelection
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: RemoveFromSelection()
  nameWithType: TextPatternRange.RemoveFromSelection()
  fullName: System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Hiermee verwijdert u een gemarkeerde gedeelte van de tekst, overeenkomt met het aanroepende tekstbereik <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> en <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> eindpunten van een bestaande verzameling van de geselecteerde tekst in een tekstcontainer die ondersteuning biedt voor meerdere niet-aaneengesloten selecties."
  remarks: "De invoegpositie wordt verplaatst naar het gebied van de markering verwijderd.       Bieden een losstaande tekstbereik, wordt de invoegpositie verplaatst."
  syntax:
    content: public void RemoveFromSelection ();
    parameters: []
  overload: System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Als SMS-provider geen ondersteuning biedt voor meerdere niet-aaneengesloten selecties (bijvoorbeeld <xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>moet een waarde van hebben <xref uid=&quot;langword_csharp_Multiple&quot; name=&quot;Multiple&quot; href=&quot;&quot;> </xref>).</xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>"
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.ScrollIntoView(System.Boolean)
  id: ScrollIntoView(System.Boolean)
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: ScrollIntoView(Boolean)
  nameWithType: TextPatternRange.ScrollIntoView(Boolean)
  fullName: System.Windows.Automation.Text.TextPatternRange.ScrollIntoView(Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Zorgt ervoor dat het tekstbesturingselement verticaal scrollen totdat het tekstbereik zichtbaar in de viewport is."
  remarks: "ScrollIntoView respecteert verborgen en weergegeven tekst. De UI Automation-client kunt controleren de <xref:System.Windows.Automation.TextPattern.IsHiddenAttribute>voor tekst zichtbaarheid.</xref:System.Windows.Automation.TextPattern.IsHiddenAttribute> Als het tekstbereik verborgen is, wordt het besturingselement voor alleen als de verborgen tekst een anker in de viewport heeft geschoven."
  example:
  - "[!code-cs[UIATextPattern_snip#1074](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1074)]  \n  \n [!code-vb[UIATextPattern_snip#2074](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2074)]"
  syntax:
    content: public void ScrollIntoView (bool alignToTop);
    parameters:
    - id: alignToTop
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het besturingselement moet worden geschoven zodat het tekstbereik uitgelijnd met de bovenkant van de viewport wordt; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> of deze uitgelijnd met de onderkant van de viewport worden moet."
  overload: System.Windows.Automation.Text.TextPatternRange.ScrollIntoView*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Als schuiven wordt niet ondersteund door het besturingselement."
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.Select
  id: Select
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: Select()
  nameWithType: TextPatternRange.Select()
  fullName: System.Windows.Automation.Text.TextPatternRange.Select()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Tekst in het tekstvak overeenkomt met het tekstbereik <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> en <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> eindpunten."
  remarks: "Als een losstaande tekstbereik is opgegeven, de invoegpositie wordt verplaatst naar de <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>eindpunt van het tekstbereik.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>"
  example:
  - "[!code-cs[UIATextPattern_snip#1075](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1075)]  \n  \n [!code-vb[UIATextPattern_snip#2075](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2075)]"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Windows.Automation.Text.TextPatternRange.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Treedt op wanneer de geselecteerde tekst wordt niet ondersteund door het besturingselement."
  platform:
  - net462
- uid: System.Windows.Automation.Text.TextPatternRange.TextPattern
  id: TextPattern
  parent: System.Windows.Automation.Text.TextPatternRange
  langs:
  - csharp
  name: TextPattern
  nameWithType: TextPatternRange.TextPattern
  fullName: System.Windows.Automation.Text.TextPatternRange.TextPattern
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation.Text
  summary: "Haalt de <xref href=&quot;System.Windows.Automation.TextPattern&quot;> </xref> die zijn gekoppeld aan het tekstbereik."
  remarks: ''
  example:
  - "[!code-cs[UIATextPattern_snip#1076](~/add/codesnippet/csharp/UIATextPattern_snip/SearchWindow.cs#1076)]  \n  \n [!code-vb[UIATextPattern_snip#2076](~/add/codesnippet/visualbasic/UIATextPattern_snip/SearchWindow.vb#2076)]"
  syntax:
    content: public System.Windows.Automation.TextPattern TextPattern { get; }
    return:
      type: System.Windows.Automation.TextPattern
      description: "De SMS-provider."
  overload: System.Windows.Automation.Text.TextPatternRange.TextPattern*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Automation.Text.TextPatternRange.AddToSelection
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: AddToSelection()
  nameWithType: TextPatternRange.AddToSelection()
  fullName: System.Windows.Automation.Text.TextPatternRange.AddToSelection()
- uid: System.Windows.Automation.Text.TextPatternRange.Clone
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: Clone()
  nameWithType: TextPatternRange.Clone()
  fullName: System.Windows.Automation.Text.TextPatternRange.Clone()
- uid: System.Windows.Automation.Text.TextPatternRange
  parent: System.Windows.Automation.Text
  isExternal: false
  name: TextPatternRange
  nameWithType: TextPatternRange
  fullName: System.Windows.Automation.Text.TextPatternRange
- uid: System.Windows.Automation.Text.TextPatternRange.Compare(System.Windows.Automation.Text.TextPatternRange)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: Compare(TextPatternRange)
  nameWithType: TextPatternRange.Compare(TextPatternRange)
  fullName: System.Windows.Automation.Text.TextPatternRange.Compare(TextPatternRange)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Text.TextPatternRange.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: CompareEndpoints(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  nameWithType: TextPatternRange.CompareEndpoints(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Text.TextPatternRange.CompareEndpoints(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.Text.TextPatternRangeEndpoint
  parent: System.Windows.Automation.Text
  isExternal: false
  name: TextPatternRangeEndpoint
  nameWithType: TextPatternRangeEndpoint
  fullName: System.Windows.Automation.Text.TextPatternRangeEndpoint
- uid: System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: ExpandToEnclosingUnit(TextUnit)
  nameWithType: TextPatternRange.ExpandToEnclosingUnit(TextUnit)
  fullName: System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit(TextUnit)
- uid: System.Windows.Automation.Text.TextUnit
  parent: System.Windows.Automation.Text
  isExternal: false
  name: TextUnit
  nameWithType: TextUnit
  fullName: System.Windows.Automation.Text.TextUnit
- uid: System.Windows.Automation.Text.TextPatternRange.FindAttribute(System.Windows.Automation.AutomationTextAttribute,System.Object,System.Boolean)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: FindAttribute(AutomationTextAttribute,Object,Boolean)
  nameWithType: TextPatternRange.FindAttribute(AutomationTextAttribute,Object,Boolean)
  fullName: System.Windows.Automation.Text.TextPatternRange.FindAttribute(AutomationTextAttribute,Object,Boolean)
- uid: System.Windows.Automation.AutomationTextAttribute
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationTextAttribute
  nameWithType: AutomationTextAttribute
  fullName: System.Windows.Automation.AutomationTextAttribute
- uid: System.Windows.Automation.Text.TextPatternRange.FindText(System.String,System.Boolean,System.Boolean)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: FindText(String,Boolean,Boolean)
  nameWithType: TextPatternRange.FindText(String,Boolean,Boolean)
  fullName: System.Windows.Automation.Text.TextPatternRange.FindText(String,Boolean,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Automation.Text.TextPatternRange.GetAttributeValue(System.Windows.Automation.AutomationTextAttribute)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetAttributeValue(AutomationTextAttribute)
  nameWithType: TextPatternRange.GetAttributeValue(AutomationTextAttribute)
  fullName: System.Windows.Automation.Text.TextPatternRange.GetAttributeValue(AutomationTextAttribute)
- uid: System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetBoundingRectangles()
  nameWithType: TextPatternRange.GetBoundingRectangles()
  fullName: System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles()
- uid: System.Windows.Rect[]
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect[]
  spec.csharp:
  - uid: System.Windows.Rect
    name: Rect
    nameWithType: Rect
    fullName: Rect[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.Text.TextPatternRange.GetChildren
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetChildren()
  nameWithType: TextPatternRange.GetChildren()
  fullName: System.Windows.Automation.Text.TextPatternRange.GetChildren()
- uid: System.Windows.Automation.AutomationElement[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationElement
    name: AutomationElement
    nameWithType: AutomationElement
    fullName: AutomationElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetEnclosingElement()
  nameWithType: TextPatternRange.GetEnclosingElement()
  fullName: System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement()
- uid: System.Windows.Automation.AutomationElement
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
- uid: System.Windows.Automation.Text.TextPatternRange.GetText(System.Int32)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetText(Int32)
  nameWithType: TextPatternRange.GetText(Int32)
  fullName: System.Windows.Automation.Text.TextPatternRange.GetText(Int32)
- uid: System.Windows.Automation.Text.TextPatternRange.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: Move(TextUnit,Int32)
  nameWithType: TextPatternRange.Move(TextUnit,Int32)
  fullName: System.Windows.Automation.Text.TextPatternRange.Move(TextUnit,Int32)
- uid: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: MoveEndpointByRange(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  nameWithType: TextPatternRange.MoveEndpointByRange(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)
- uid: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  nameWithType: TextPatternRange.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  fullName: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
- uid: System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: RemoveFromSelection()
  nameWithType: TextPatternRange.RemoveFromSelection()
  fullName: System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection()
- uid: System.Windows.Automation.Text.TextPatternRange.ScrollIntoView(System.Boolean)
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: ScrollIntoView(Boolean)
  nameWithType: TextPatternRange.ScrollIntoView(Boolean)
  fullName: System.Windows.Automation.Text.TextPatternRange.ScrollIntoView(Boolean)
- uid: System.Windows.Automation.Text.TextPatternRange.Select
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: Select()
  nameWithType: TextPatternRange.Select()
  fullName: System.Windows.Automation.Text.TextPatternRange.Select()
- uid: System.Windows.Automation.Text.TextPatternRange.TextPattern
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: TextPattern
  nameWithType: TextPatternRange.TextPattern
  fullName: System.Windows.Automation.Text.TextPatternRange.TextPattern
- uid: System.Windows.Automation.TextPattern
  parent: System.Windows.Automation
  isExternal: false
  name: TextPattern
  nameWithType: TextPattern
  fullName: System.Windows.Automation.TextPattern
- uid: System.Windows.Automation.Text.TextPatternRange.AddToSelection*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: AddToSelection
  nameWithType: TextPatternRange.AddToSelection
- uid: System.Windows.Automation.Text.TextPatternRange.Clone*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: Clone
  nameWithType: TextPatternRange.Clone
- uid: System.Windows.Automation.Text.TextPatternRange.Compare*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: Compare
  nameWithType: TextPatternRange.Compare
- uid: System.Windows.Automation.Text.TextPatternRange.CompareEndpoints*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: CompareEndpoints
  nameWithType: TextPatternRange.CompareEndpoints
- uid: System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: ExpandToEnclosingUnit
  nameWithType: TextPatternRange.ExpandToEnclosingUnit
- uid: System.Windows.Automation.Text.TextPatternRange.FindAttribute*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: FindAttribute
  nameWithType: TextPatternRange.FindAttribute
- uid: System.Windows.Automation.Text.TextPatternRange.FindText*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: FindText
  nameWithType: TextPatternRange.FindText
- uid: System.Windows.Automation.Text.TextPatternRange.GetAttributeValue*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetAttributeValue
  nameWithType: TextPatternRange.GetAttributeValue
- uid: System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetBoundingRectangles
  nameWithType: TextPatternRange.GetBoundingRectangles
- uid: System.Windows.Automation.Text.TextPatternRange.GetChildren*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetChildren
  nameWithType: TextPatternRange.GetChildren
- uid: System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetEnclosingElement
  nameWithType: TextPatternRange.GetEnclosingElement
- uid: System.Windows.Automation.Text.TextPatternRange.GetText*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: GetText
  nameWithType: TextPatternRange.GetText
- uid: System.Windows.Automation.Text.TextPatternRange.Move*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: Move
  nameWithType: TextPatternRange.Move
- uid: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: MoveEndpointByRange
  nameWithType: TextPatternRange.MoveEndpointByRange
- uid: System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: MoveEndpointByUnit
  nameWithType: TextPatternRange.MoveEndpointByUnit
- uid: System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: RemoveFromSelection
  nameWithType: TextPatternRange.RemoveFromSelection
- uid: System.Windows.Automation.Text.TextPatternRange.ScrollIntoView*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: ScrollIntoView
  nameWithType: TextPatternRange.ScrollIntoView
- uid: System.Windows.Automation.Text.TextPatternRange.Select*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: Select
  nameWithType: TextPatternRange.Select
- uid: System.Windows.Automation.Text.TextPatternRange.TextPattern*
  parent: System.Windows.Automation.Text.TextPatternRange
  isExternal: false
  name: TextPattern
  nameWithType: TextPatternRange.TextPattern
