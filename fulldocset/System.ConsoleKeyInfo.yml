### YamlMime:ManagedReference
items:
- uid: System.ConsoleKeyInfo
  id: ConsoleKeyInfo
  children:
  - System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  - System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.Equals(System.Object)
  - System.ConsoleKeyInfo.GetHashCode
  - System.ConsoleKeyInfo.Key
  - System.ConsoleKeyInfo.KeyChar
  - System.ConsoleKeyInfo.Modifiers
  - System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  langs:
  - csharp
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
  type: Struct
  summary: "Hierin wordt beschreven in de console-toets is gedrukt, inclusief het teken dat wordt vertegenwoordigd door de sleutel van de console en de status van de toetsen SHIFT, ALT en CTRL aanpassingsfunctie."
  remarks: "Het type ConsoleKeyInfo is niet bedoeld om te worden gemaakt door gebruikers. In plaats daarvan wordt geretourneerd in antwoord op aanroepen aan de gebruiker de <xref:System.Console.ReadKey%2A?displayProperty=fullName>methode.</xref:System.Console.ReadKey%2A?displayProperty=fullName>       Het object ConsoleKeyInfo beschrijft de <xref:System.ConsoleKey>constante en Unicode-teken, indien van toepassing, die overeenkomen met de sleutel ingedrukte console.</xref:System.ConsoleKey> Het object ConsoleKeyInfo ook beschreven in een bitsgewijze combinatie van <xref:System.ConsoleModifiers>waarden, of een of meer, ALT, toetsen SHIFT of CTRL aanpassingsfunctie gelijktijdig met de console-sleutel is ingedrukt.</xref:System.ConsoleModifiers>"
  example:
  - "The following example demonstrates using a ConsoleKeyInfo object in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/t-system.consolekeyinfo_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/t-system.consolekeyinfo_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/t-system.consolekeyinfo_1.vb)]"
  syntax:
    content: public struct ConsoleKeyInfo
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)'
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> structuur, met het opgegeven teken, sleutel van de console en aanpassingsfunctie sleutels."
  remarks: "Dit type is niet bedoeld om te worden gemaakt door gebruikers. In plaats daarvan wordt geretourneerd in antwoord op aanroepen aan de gebruiker de <xref:System.Console.ReadKey%2A?displayProperty=fullName>methode.</xref:System.Console.ReadKey%2A?displayProperty=fullName>       De <xref:System.ConsoleKeyInfo>type is niet opgegeven of de linker- of SHIFT, ALT of CTRL aanpassingsfunctie is ingedrukt.</xref:System.ConsoleKeyInfo>"
  syntax:
    content: public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);
    parameters:
    - id: keyChar
      type: System.Char
      description: "Het Unicode-teken dat overeenkomt met de `key` parameter."
    - id: key
      type: System.ConsoleKey
      description: "De console-sleutel die overeenkomt met de `keyChar` parameter."
    - id: shift
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om aan te geven dat een SHIFT-toets ingedrukt is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: alt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om aan te geven dat de ALT-toets ingedrukt is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: control
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om aan te geven dat een CTRL-toets ingedrukt is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ConsoleKeyInfo.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De numerieke waarde van de <code> key </code> -parameter is kleiner dan 0 of groter is dan 255."
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  id: Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Haalt een waarde die aangeeft of de opgegeven <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object is gelijk aan de huidige <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object."
  remarks: "Twee <xref:System.ConsoleKeyInfo>objecten gelijk zijn als de bijbehorende <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, en <xref:System.ConsoleKeyInfo.Modifiers%2A>Eigenschappen zijn gelijk.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>       De methode is gelijk aan voert enigszins beter dan de <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=fullName>methode omdat er geen converteren `obj` naar een object.</xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=fullName>"
  syntax:
    content: public bool Equals (ConsoleKeyInfo obj);
    parameters:
    - id: obj
      type: System.ConsoleKeyInfo
      description: "Een object om te vergelijken met de huidige <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> obj </code> gelijk is aan de huidige <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ConsoleKeyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee wordt een waarde die aangeeft of het opgegeven object gelijk aan de huidige is <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object."
  remarks: "Twee <xref:System.ConsoleKeyInfo>objecten gelijk zijn als de bijbehorende <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, en <xref:System.ConsoleKeyInfo.Modifiers%2A>Eigenschappen zijn gelijk.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  example:
  - "The following example demonstrates the Equals method.  \n  \n [!code-cpp[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/cpp/m-system.consolekeyinfo._0_1.cpp)]\n [!code-cs[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/csharp/m-system.consolekeyinfo._0_1.cs)]\n [!code-vb[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/visualbasic/m-system.consolekeyinfo._0_1.vb)]"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Een object om te vergelijken met de huidige <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> value </code> is een <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object en gelijk is aan de huidige <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ConsoleKeyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.GetHashCode
  id: GetHashCode
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Retourneert de hash-code voor de huidige <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object."
  remarks: "De waarde die is geretourneerd door de methode GetHashCode is niet geschikt voor een onderscheid <xref:System.ConsoleKeyInfo>object van een andere.</xref:System.ConsoleKeyInfo> Als uw toepassing een unieke hash-code moet, moet u de methode GetHashCode met uw eigen methode overschrijven."
  example:
  - "The following example demonstrates the GetHashCode method.  \n  \n [!code-cpp[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/cpp/m-system.consolekeyinfo._1_1.cpp)]\n [!code-vb[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/visualbasic/m-system.consolekeyinfo._1_1.vb)]\n [!code-cs[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/csharp/m-system.consolekeyinfo._1_1.cs)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een 32-bits geheel getal met teken hash-code."
  overload: System.ConsoleKeyInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Key
  id: Key
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald van de console sleutel dat wordt vertegenwoordigd door de huidige <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object."
  remarks: ''
  example:
  - "The following example demonstrates using a Key property in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._0_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.consolekeyinfo._0_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._0_1.vb)]"
  syntax:
    content: public ConsoleKey Key { get; }
    return:
      type: System.ConsoleKey
      description: "Een waarde die aangeeft van de console-toets is gedrukt."
  overload: System.ConsoleKeyInfo.Key*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.KeyChar
  id: KeyChar
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Het Unicode-teken dat wordt vertegenwoordigd door de huidige opgehaald <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object."
  remarks: "Als de sleutel ingedrukt niet wordt toegewezen aan een Unicode-teken (bijvoorbeeld als een gebruiker op de **F1** sleutel of de **Start** sleutel), de waarde van de eigenschap KeyChar \\U0000 is."
  example:
  - "The following example uses the KeyChar property to add the characters input by the user into a string. The example ignores special keys other than **ENTER**, **ESC**, and **BACKSPACE**.  \n  \n [!code-cs[System.ConsoleKeyInfo.KeyChar#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._2_1.cs)]\n [!code-vb[System.ConsoleKeyInfo.KeyChar#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._2_1.vb)]"
  syntax:
    content: public char KeyChar { get; }
    return:
      type: System.Char
      description: "Een object dat overeenkomt met de sleutel van de console dat wordt vertegenwoordigd door de huidige <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> object."
  overload: System.ConsoleKeyInfo.KeyChar*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Modifiers
  id: Modifiers
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Haalt een bitsgewijze combinatie van <xref href=&quot;System.ConsoleModifiers&quot;> </xref> waarden waarmee een of meer aanpassingsfunctie sleutels ingedrukt gelijktijdig met de sleutel van de console."
  remarks: ''
  example:
  - "The following example demonstrates using a Modifiers property in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._1_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.consolekeyinfo._1_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._1_1.vb)]"
  syntax:
    content: public ConsoleModifiers Modifiers { get; }
    return:
      type: System.ConsoleModifiers
      description: "Een bitsgewijze combinatie van de opsommingswaarden. Er is geen standaardwaarde."
  overload: System.ConsoleKeyInfo.Modifiers*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee wordt aangegeven of de opgegeven <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objecten zijn gelijk."
  remarks: "Twee <xref:System.ConsoleKeyInfo>objecten gelijk zijn als de bijbehorende <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, en <xref:System.ConsoleKeyInfo.Modifiers%2A>Eigenschappen zijn gelijk.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  syntax:
    content: public static bool op_Equality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: "Het eerste object te vergelijken."
    - id: b
      type: System.ConsoleKeyInfo
      description: "Het tweede object om te vergelijken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ConsoleKeyInfo.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee wordt aangegeven of de opgegeven <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objecten niet gelijk zijn."
  remarks: "Twee <xref:System.ConsoleKeyInfo>objecten gelijk zijn als de bijbehorende <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, en <xref:System.ConsoleKeyInfo.Modifiers%2A>Eigenschappen zijn gelijk.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  syntax:
    content: public static bool op_Inequality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: "Het eerste object te vergelijken."
    - id: b
      type: System.ConsoleKeyInfo
      description: "Het tweede object om te vergelijken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ConsoleKeyInfo.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ConsoleKey
  parent: System
  isExternal: false
  name: ConsoleKey
  nameWithType: ConsoleKey
  fullName: System.ConsoleKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ConsoleKeyInfo.GetHashCode
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ConsoleKeyInfo.Key
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
- uid: System.ConsoleKeyInfo.KeyChar
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
- uid: System.ConsoleKeyInfo.Modifiers
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
- uid: System.ConsoleModifiers
  parent: System
  isExternal: false
  name: ConsoleModifiers
  nameWithType: ConsoleModifiers
  fullName: System.ConsoleModifiers
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo.#ctor*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals
  nameWithType: ConsoleKeyInfo.Equals
- uid: System.ConsoleKeyInfo.GetHashCode*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: ConsoleKeyInfo.GetHashCode
- uid: System.ConsoleKeyInfo.Key*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Key
  nameWithType: ConsoleKeyInfo.Key
- uid: System.ConsoleKeyInfo.KeyChar*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
- uid: System.ConsoleKeyInfo.Modifiers*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
- uid: System.ConsoleKeyInfo.op_Equality*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Equality
  nameWithType: ConsoleKeyInfo.op_Equality
- uid: System.ConsoleKeyInfo.op_Inequality*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Inequality
  nameWithType: ConsoleKeyInfo.op_Inequality
