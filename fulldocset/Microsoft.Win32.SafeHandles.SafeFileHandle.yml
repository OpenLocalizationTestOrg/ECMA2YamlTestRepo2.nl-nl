### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle
  id: SafeFileHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeFileHandle.#ctor(System.IntPtr,System.Boolean)
  - Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle
  langs:
  - csharp
  name: SafeFileHandle
  nameWithType: SafeFileHandle
  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle
  type: Class
  summary: "Vertegenwoordigt een wrapperklasse voor een bestandsingang."
  remarks: "Deze klasse wordt afgeleid van <xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid>.</xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid> Een waarde van 0 of -1 is een ongeldige bestandsingang.      > [!IMPORTANT] > Dit type implementeert de <xref:System.IDisposable>interface.</xref:System.IDisposable> Wanneer u klaar bent met het type, moet u beschikken over het direct of indirect. Aanroepen voor het rechtstreeks verwijderen van het type ervan <xref:System.IDisposable.Dispose%2A>methode in een `try` / `catch` blok.</xref:System.IDisposable.Dispose%2A> Gebruiken om de buitengebruikstelling van het indirect, een taal constructie zoals `using` (in C#) of `Using` (in Visual Basic). Zie voor meer informatie de sectie &quot;Met behulp van een Object dat wordt ge√Ømplementeerd IDisposable&quot; in de <xref:System.IDisposable>interface onderwerp.</xref:System.IDisposable>"
  example:
  - "The following code example demonstrates how to open a file using the SafeFileHandle class and the unmanaged `CreateFile` function.  \n  \n [!code-vb[Microsoft.Win32.SafeHandles.SafeFileHandle#1](~/add/codesnippet/visualbasic/t-microsoft.win32.safeha_1.vb)]\n [!code-cs[Microsoft.Win32.SafeHandles.SafeFileHandle#1](~/add/codesnippet/csharp/t-microsoft.win32.safeha_1.cs)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public sealed class SafeFileHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle.#ctor(System.IntPtr,System.Boolean)
  id: '#ctor(System.IntPtr,System.Boolean)'
  parent: Microsoft.Win32.SafeHandles.SafeFileHandle
  langs:
  - csharp
  name: SafeFileHandle(IntPtr,Boolean)
  nameWithType: SafeFileHandle.SafeFileHandle(IntPtr,Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle.SafeFileHandle(IntPtr,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;Microsoft.Win32.SafeHandles.SafeFileHandle&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following example demonstrates how to open a file by using the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class and the unmanaged `CreateFile` function.  \n  \n [!code-cs[Microsoft.Win32.SafeHandles.SafeFileHandle.ctor#1](~/add/codesnippet/csharp/7f421180-5aa6-451b-bfbd-_1.cs)]\n [!code-vb[Microsoft.Win32.SafeHandles.SafeFileHandle.ctor#1](~/add/codesnippet/visualbasic/7f421180-5aa6-451b-bfbd-_1.vb)]"
  syntax:
    content: public SafeFileHandle (IntPtr preexistingHandle, bool ownsHandle);
    parameters:
    - id: preexistingHandle
      type: System.IntPtr
      description: "Een <xref:System.IntPtr>-object met de vooraf bestaande ingang moet worden gebruikt.</xref:System.IntPtr>"
    - id: ownsHandle
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van de greep op betrouwbare wijze tijdens de fase voltooiing; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om te voorkomen dat betrouwbare release (niet aanbevolen)."
  overload: Microsoft.Win32.SafeHandles.SafeFileHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeFileHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: SafeFileHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle.#ctor(System.IntPtr,System.Boolean)
  parent: Microsoft.Win32.SafeHandles.SafeFileHandle
  isExternal: false
  name: SafeFileHandle(IntPtr,Boolean)
  nameWithType: SafeFileHandle.SafeFileHandle(IntPtr,Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle.SafeFileHandle(IntPtr,Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeFileHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: SafeFileHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle()
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeFileHandle
  isExternal: false
  name: SafeFileHandle
  nameWithType: SafeFileHandle.SafeFileHandle
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle*
  parent: Microsoft.Win32.SafeHandles.SafeFileHandle
  isExternal: false
  name: ReleaseHandle
  nameWithType: SafeFileHandle.ReleaseHandle
