### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlMember
  id: XamlMember
  children:
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.DeclaringType
  - System.Xaml.XamlMember.DeferringLoader
  - System.Xaml.XamlMember.DependsOn
  - System.Xaml.XamlMember.Equals(System.Object)
  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  - System.Xaml.XamlMember.GetHashCode
  - System.Xaml.XamlMember.GetXamlNamespaces
  - System.Xaml.XamlMember.Invoker
  - System.Xaml.XamlMember.IsAmbient
  - System.Xaml.XamlMember.IsAttachable
  - System.Xaml.XamlMember.IsDirective
  - System.Xaml.XamlMember.IsEvent
  - System.Xaml.XamlMember.IsNameValid
  - System.Xaml.XamlMember.IsReadOnly
  - System.Xaml.XamlMember.IsReadPublic
  - System.Xaml.XamlMember.IsUnknown
  - System.Xaml.XamlMember.IsWriteOnly
  - System.Xaml.XamlMember.IsWritePublic
  - System.Xaml.XamlMember.LookupCustomAttributeProvider
  - System.Xaml.XamlMember.LookupDeferringLoader
  - System.Xaml.XamlMember.LookupDependsOn
  - System.Xaml.XamlMember.LookupInvoker
  - System.Xaml.XamlMember.LookupIsAmbient
  - System.Xaml.XamlMember.LookupIsEvent
  - System.Xaml.XamlMember.LookupIsReadOnly
  - System.Xaml.XamlMember.LookupIsReadPublic
  - System.Xaml.XamlMember.LookupIsUnknown
  - System.Xaml.XamlMember.LookupIsWriteOnly
  - System.Xaml.XamlMember.LookupIsWritePublic
  - System.Xaml.XamlMember.LookupTargetType
  - System.Xaml.XamlMember.LookupType
  - System.Xaml.XamlMember.LookupTypeConverter
  - System.Xaml.XamlMember.LookupUnderlyingGetter
  - System.Xaml.XamlMember.LookupUnderlyingMember
  - System.Xaml.XamlMember.LookupUnderlyingSetter
  - System.Xaml.XamlMember.LookupValueSerializer
  - System.Xaml.XamlMember.Name
  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.PreferredXamlNamespace
  - System.Xaml.XamlMember.SerializationVisibility
  - System.Xaml.XamlMember.TargetType
  - System.Xaml.XamlMember.ToString
  - System.Xaml.XamlMember.Type
  - System.Xaml.XamlMember.TypeConverter
  - System.Xaml.XamlMember.UnderlyingMember
  - System.Xaml.XamlMember.ValueSerializer
  langs:
  - csharp
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
  type: Class
  summary: "Biedt de systeemidentificatie XAML-type voor leden van de XAML-typen. De id wordt gebruikt door de XAML en XAML schrijfprogramma tijdens de verwerking van lid knooppunten (wanneer de XAML-lezer is geplaatst op een <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>) en ook voor algemene XAML type systeemlogica."
  remarks: "XamlMember drie methoden kunt gebruiken voor het retourneren van informatie over een XAML-lid: standaard common language runtime (CLR) reflectie; een verwijzing naar alleen-lezen reflectie techniek aanroepen van interne API&quot;s die gebruik van geoptimaliseerde bits vlaggen; of aanroepen in virtuele onderdrukkingen van de `Lookup*` API die wordt geleverd door mogelijke XamlMember subklassen. Voor de meeste toepassingen van .NET Framework XAML Services API&quot;s en de API XamlMember gebruikt u de standaardcontext XAML-schema. De standaard XAML schemacontext voor .NET Framework XAML Services maakt gebruik van een back-up voor het type system CLR. Hierdoor kunnen de XAML en XAML schrijfprogramma werkt met elk type of lid dat is gedefinieerd of anderszins beschikbaar voor de CLR en de technieken reflectie.      ## Lookup * API&quot;s en XamlMember afgeleide klassen XamlMember definieert verschillende virtuele leden die een klassen afgeleide kunnen overschrijven. Deze leden hebben namen die altijd met de tekenreeks beginnen `Lookup`. De rest van de API naam vervolgens verwijst naar de eigenschap die van invloed is op de virtuele methode. Bijvoorbeeld, een XamlMember afgeleide klasse overschrijven mogelijk <xref:System.Xaml.XamlMember.LookupTargetType%2A>te beïnvloeden welke de base gedefinieerde eigenschap <xref:System.Xaml.XamlMember.TargetType%2A>retourneert in een afgeleide klasse.</xref:System.Xaml.XamlMember.TargetType%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A> U kunt de retourwaarden voorspellen voor dergelijke eigenschappen in de bestaande of XamlMember klassen afgeleide door te lezen van de documentatie voor de desbetreffende `Lookup*` methoden.       Het doel van de `Lookup*` methoden is het bieden van een XAML type system extensie techniek waarin de basisklasse XamlMember. Door die zijn afgeleid van XamlMember en het overschrijven van de `Lookup` virtuele leden, kunt u het concept van een XAML-lid voor een XAML-schema in een XAML-typesysteem zonder wordt gekoppeld aan de details van een back-ups maken typesysteem of technologie. U kunt ook met een opgegeven XAML schemacontext onder dit schema en nog steeds de gewenste resultaten retourneren.       Een voorbeeld kunt u de eigenschap XamlMember <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> Deze eigenschap informeert aanroepfuncties die bewerkingen zoals het gebruik van een <xref:System.Xaml.XamlWriter>voor serialisatie geen waarde voor dit lid van een doelobject schrijven kan.</xref:System.Xaml.XamlWriter> In de standaardimplementatie de bepaling van of het lid beschrijfbare is wordt gedaan met behulp van reflectie technieken op basis van de back-ups maken CLR <xref:System.Type>en de bijbehorende leden (de <xref:System.Reflection.MemberInfo>).</xref:System.Reflection.MemberInfo> </xref:System.Type> Daarom standaard het XAML-typesysteem hangt af van het CLR-systeem. U kunt echter deze afhankelijkheid voor de XAML type system rapportage van <xref:System.Xaml.XamlMember.IsWritePublic%2A>de API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> overschrijft</xref:System.Xaml.XamlMember.IsWritePublic%2A> verwijderen Binnen uw onderdrukking, kunt u andere bepalingen, zoals metagegevens die specifiek is voor uw technologie, een master opzoektabel die is geoptimaliseerd voor een vaste XAML vocabulaire of tal van andere strategieën om te bepalen of een XAML-lid schrijfbaar in uw XAML-woordenlijst is.      ## XamlMember zonder XAML Schema Context meest construeren constructors van XamlMember vereisen een <xref:System.Xaml.XamlSchemaContext>als onderdeel van de initialisatie.</xref:System.Xaml.XamlSchemaContext> De <xref:System.Xaml.XamlSchemaContext>is ook nodig zijn voor veel interne <xref:System.Xaml.XamlSchemaContext>bewerkingen, zoals het verkrijgen van informatie die van het type back-ups maken wordt doorgestuurd.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlSchemaContext> Wanneer u met de API XamlMember werkt, gewoonlijk hebt u een <xref:System.Xaml.XamlSchemaContext>die beschikbaar is in een omringende constructie zoals een <xref:System.Xaml.XamlWriter>.</xref:System.Xaml.XamlWriter> </xref:System.Xaml.XamlSchemaContext> U kunt in dit geval geeft de <xref:System.Xaml.XamlSchemaContext>via de verwijzing naar alle XAML type systeemaanroepen waarvoor een XAML-schemacontext.</xref:System.Xaml.XamlSchemaContext>       Een specifieke constructor <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, hoeft u niet een <xref:System.Xaml.XamlSchemaContext>.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Echter, een XamlMember dat is opgesteld met de <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>handtekening retourneert `true` voor <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>       Voor een load-pad dat betrekking heeft op <xref:System.Xaml.XamlObjectWriter>, zo&quot;n lid kan niet worden geschreven in een objectgrafiek.</xref:System.Xaml.XamlObjectWriter> Met behulp van de implementatie van de .NET Framework XAML-services de <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>aanroepen er wordt een <xref:System.Xaml.XamlObjectWriterException>wanneer de relevante XamlMember rapporteert `true` voor <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       U moet een XamlMember met een waarde niet samenstellen `true` voor <xref:System.Xaml.XamlMember.IsUnknown%2A>tenzij uw implementatie de uitzonderingen van kan verwerken <xref:System.Xaml.XamlObjectWriter>, of u over andere manieren om aan te passen de <xref:System.Xaml.XamlObjectWriter>gedrag.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> Bijvoorbeeld, een of meer van de volgende mogelijk geldt ook voor uw implementatie:-de XAML-schemacontext later beschikbaar is.      -U een lid invoker-patroon gebruiken.      -U opzettelijk overschrijven <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>in een aangepaste XAML-schrijver.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XamlMember : IEquatable<System.Xaml.XamlMember>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlMember>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse met CLR-systeem <xref:System.Reflection.EventInfo>en een <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.EventInfo>"
  remarks: "Deze constructor gebruiken als het lid een gebeurtenis (gebeurtenis-handler verbindingspunt eigenschap vertegenwoordigt)."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "Het CLR-systeem <xref:System.Reflection.EventInfo>die staat voor het lid van de gebeurtenis.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "De <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> context die in aanmerking het lid komt."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse met CLR-systeem <xref:System.Reflection.PropertyInfo>en een <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  remarks: "Deze constructor gebruiken als het lid een eigenschap vertegenwoordigt (en specifiek niet een gebeurtenis-handler verbinding is)."
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "Het CLR-systeem <xref:System.Reflection.PropertyInfo>die staat voor een lid van de eigenschap.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "De <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> context die in aanmerking het lid komt."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse met CLR-systeem <xref:System.Reflection.EventInfo>en een <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, waaronder <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informatie.</xref:System.Reflection.EventInfo>"
  remarks: "Deze constructor gebruiken als het lid vertegenwoordigt een gebeurtenis (of een gebeurtenis-handler verbindingspunt eigenschap)."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "Het CLR-systeem <xref:System.Reflection.EventInfo>die staat voor het lid van de gebeurtenis.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "De <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> context die in aanmerking het lid komt."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "De <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementatie die verantwoordelijk is voor runtime-reflectie roept tegen de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse met reflectie <xref:System.Reflection.PropertyInfo>en een <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, waaronder <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informatie.</xref:System.Reflection.PropertyInfo>"
  remarks: "Gebruik deze constructor alleen als het lid een eigenschap vertegenwoordigt en als het is niet een gebeurtenis-handler-verbinding."
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "Het CLR-systeem <xref:System.Reflection.PropertyInfo>die staat voor een lid van de eigenschap.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "De <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> context die in aanmerking het lid komt."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "De <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementatie die verantwoordelijk is voor het aanroepen van de runtime-aanroepen op basis van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse voor een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> die staat voor een koppelbare gebeurtenis."
  remarks: "Deze constructor gebruiken als het lid een gebeurtenis toevoegbaar lid vertegenwoordigt."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "De naam van de koppelbare gebeurtenis."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "Het CLR-systeem <xref:System.Reflection.MethodInfo>voor de handler <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> methode voor het koppelbare lid van de back-ups implementatie.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "De <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> context die in aanmerking het lid komt."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  id: '#ctor(System.String,System.Xaml.XamlType,System.Boolean)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse met behulp van een string-naam en de declarerende <xref href=&quot;System.Xaml.XamlType&quot;> </xref> informatie. Een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> die is samengesteld met deze handtekening heeft aanzienlijke beperkingen; Zie de opmerkingen."
  remarks: "Een <xref:System.Xaml.XamlMember>die is gemaakt met de handtekening retourneert XamlMember `true` voor <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember>       Voor een load-pad dat betrekking heeft op <xref:System.Xaml.XamlObjectWriter>, zo&quot;n lid kan niet worden geschreven in een objectgrafiek.</xref:System.Xaml.XamlObjectWriter> Met de .NET Framework XAML Services-implementatie, de <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>aanroepen er wordt een <xref:System.Xaml.XamlObjectWriterException>wanneer de desbetreffende <xref:System.Xaml.XamlMember>rapporten `true` voor <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       U moet geen maken een <xref:System.Xaml.XamlMember>met <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` tenzij uw implementatie de uitzonderingen van kan verwerken <xref:System.Xaml.XamlObjectWriter>, of u over andere manieren om aan te passen de <xref:System.Xaml.XamlObjectWriter>gedrag.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> Bijvoorbeeld, een of meer van de volgende mogelijk geldt ook voor uw implementatie:-de XAML-schemacontext later beschikbaar is.      -U een lid invoker-patroon gebruiken.      -U opzettelijk overschrijven <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>in een aangepaste XAML-schrijver.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het lid."
    - id: declaringType
      type: System.Xaml.XamlType
      description: "De <xref href=&quot;System.Xaml.XamlType&quot;> </xref> informatie voor het declarerende type."
    - id: isAttachable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om aan te geven dat het lid koppelbare; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>declaringType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse voor een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> die staat voor een toevoegbare eigenschap."
  remarks: "Deze constructor gebruiken als het lid een toevoegbare eigenschap vertegenwoordigt."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "De naam van de toevoegbare eigenschap."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "Het CLR-systeem <xref:System.Reflection.MethodInfo>voor de <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> de accessor van het koppelbare lid een back-implementatie.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "Het CLR-systeem <xref:System.Reflection.MethodInfo>voor de <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> de accessor van het koppelbare lid een back-implementatie.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "De <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> context die in aanmerking het lid komt."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse voor een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> die staat voor een koppelbare gebeurtenis, met inbegrip van <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informatie."
  remarks: "Deze constructor gebruiken als het lid een gebeurtenis toevoegbaar lid vertegenwoordigt."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "De naam van de koppelbare gebeurtenis."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "Het CLR-systeem <xref:System.Reflection.MethodInfo>voor de handler <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> methode voor het koppelbare lid van de back-ups implementatie.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "De <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> context die in aanmerking het lid komt."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "De <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementatie die verantwoordelijk is voor het aanroepen van de runtime-aanroepen op basis van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse voor een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> die staat voor een toevoegbare eigenschap met inbegrip van <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informatie."
  remarks: "Deze constructor gebruiken als het lid een toevoegbare eigenschap lid vertegenwoordigt."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "De naam van de toevoegbare eigenschap."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "Het CLR-systeem <xref:System.Reflection.MethodInfo>voor de <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> de accessor van het koppelbare lid een back-implementatie.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "Het CLR-systeem <xref:System.Reflection.MethodInfo>voor de <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> de accessor van het koppelbare lid een back-implementatie.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "De <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> context die in aanmerking het lid komt."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "De <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementatie die verantwoordelijk is voor het aanroepen van de runtime-aanroepen op basis van de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeclaringType
  id: DeclaringType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> voor het type dat het lid dat is gekoppeld aan dit verklaart <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Deze waarde wordt meestal ingesteld tijdens de initialisatie en is meestal niet `null`.      > [!IMPORTANT] > DeclaringType informatie kan worden doorgegeven aan door een constructors voor initialisatie. Door aanroepen rechtstreeks in base constructors, de initialisatie van de <xref:System.Xaml.XamlMember>afgeleide klassen kunnen weglaten een deel van de waarde-controles die zijn aangebracht in de basis-klasse.</xref:System.Xaml.XamlMember> De initialisatie van de afgeleide kunt daarom de gerapporteerde type lid zijn van het relatie-informatie van een XAML-lid wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem-informatie van de onderliggende CLR-declaratie. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van het declarerende type-informatie."
  syntax:
    content: public System.Xaml.XamlType DeclaringType { get; }
    return:
      type: System.Xaml.XamlType
      description: "De <xref href=&quot;System.Xaml.XamlType&quot;> </xref> voor het type dat het lid dat is gekoppeld aan dit verklaart <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -object, dat wordt gebruikt voor uitgesteld laden van XAML objecten gedeclareerd."
  remarks: "Het aanroepen van DeferringLoader roept <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> Dit gebeurt in gevallen waarbij de eerste interne reflectie logica niet al de informatie ingesteld."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; met <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> -beperking voor de algemene."
  overload: System.Xaml.XamlMember.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DependsOn
  id: DependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee haalt u een lijst van <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objecten. Deze leden waar afhankelijkheidsrelaties voor van de initialisatievolgorde ten opzichte van dit bestaan rapporteren <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Het aanroepen van DependsOn roept <xref:System.Xaml.XamlMember.LookupDependsOn%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupDependsOn%2A> Dit gebeurt in gevallen waarbij de eerste interne reflectie logica niet al de informatie ingesteld.       De `DependsOn` patroon kan worden toegepast op objectmodel cases aan dat opzettelijk in tegenspraak met een algemene XAML-regel. De algemene XAML-regel is dat de leden van een type dat niet worden doorgegeven als tekst initialisatie (of door een fabrieksmethode in XAML 2009) moet kunnen worden toegewezen in willekeurige volgorde. Door het toepassen van een `DependsOn` patroon aan een lid, kunt u opdracht geven XAML schrijvers altijd verwerken van het lid waarnaar wordt verwezen voordat dit lid. Dit patroon in situaties waar de waarde van het huidige lid vereist context of andere informatie die is alleen beschikbaar als het andere lid is ingesteld, kunt u toepassen.       De `DependsOn` patroon moet zorgvuldig worden toegepast en gereserveerd voor de eigenschap scenario&quot;s waar het een architectuur doel fungeert. Groot aantal afhankelijkheden hebben de mogelijkheid XAML verwerking vertragen. Ook is het mogelijk voor het produceren van circulaire afhankelijkheden in dat geval het gedrag van de verwerking van XAML is niet gedefinieerd.       Voorbeeld `DependsOn` scenario&quot;s van WPF zijn bepaalde eigenschappen op <xref:System.Windows.Controls.ControlTemplate>en <xref:System.Windows.DataTemplate>op <xref:System.Windows.Trigger>, en op <xref:System.Windows.Setter>.</xref:System.Windows.Setter> </xref:System.Windows.Trigger> </xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ControlTemplate>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlMember> DependsOn { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "Een lijst met <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objecten."
  overload: System.Xaml.XamlMember.DependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt aangegeven of het huidige object gelijk aan een ander object is."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object dat moet worden vergeleken met dit object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het huidige object is gelijk aan de <code> obj </code> parameter; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  id: Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt aangegeven of het huidige object gelijk aan een ander object van hetzelfde type is."
  syntax:
    content: public bool Equals (System.Xaml.XamlMember other);
    parameters:
    - id: other
      type: System.Xaml.XamlMember
      description: "Een object met dit object moet worden vergeleken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het huidige object is gelijk aan de <code> other </code> parameter; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert de hash-code voor dit object."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een geheel getal-hash-code."
  overload: System.Xaml.XamlMember.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een lijst van XAML-naamruimten, waar dit XAML-lid kan bestaan."
  remarks: "De standaardimplementatie retourneert het <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>resultaat van de <xref:System.Xaml.XamlMember.DeclaringType%2A>dat is gekoppeld aan deze <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.DeclaringType%2A> aanroepen</xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Een lijst van XAML-naamruimte-id als tekenreeksen."
  overload: System.Xaml.XamlMember.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Invoker
  id: Invoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementatie die is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "De `Invoker` patroon is een techniek system-extensie voor geavanceerde XAML type. De `Invoker` patroon biedt een manier om het gedrag van verschillende schema type toewijzing, terwijl u ook XAML typedefinities systeem van .NET Framework XAML Services invoeren.       Als een <xref:System.Xaml.XamlMember.LookupInvoker%2A>overschrijven retourneert `null`, of als de standaardimplementatie retourneert `null` omdat het ontbreekt <xref:System.Xaml.XamlMember.UnderlyingMember%2A>voor deze <xref:System.Xaml.XamlMember>wordt de Invoker-eigenschap <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupInvoker%2A>       <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>de standaardwaarde is.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> Dit geldt voor de meeste bewerkingen die gebruikmaken van .NET Framework XAML-Services en de standaardcontext XAML-schema en waar geen specifieke overschrijven `Invoker` patronen voor bouw van XAML type systeementiteiten worden doorgegeven.       Het aanroepen van Invoker roept <xref:System.Xaml.XamlMember.LookupInvoker%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "De <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementatie die is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> wordt gerapporteerd als ambient eigenschap."
  remarks: "Het aanroepen van IsAmbient roept <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Dit gebeurt in implementaties waarbij de eerste interne reflectie logica niet al de informatie ingesteld.       Controleren op omgevingseigenschappen is meestal deel uitmaken van XAML verwerking logica om ervoor te zorgen dat objecten en waarden die afhankelijk van de ambient gebruik voor type kwalificatie zijn correct kunnen werken. De API&quot;s van .NET Framework XAML Services en de standaardcontext XAML-schema vult deze waarde op basis van afschrijving <xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> De standaardimplementatie van <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>gebruikt deze bestaande <xref:System.Windows.Markup.AmbientAttribute>techniek en retourneert `true` als <xref:System.Windows.Markup.AmbientAttribute>bestaat op de declaratie van een lid.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute> </xref:System.Xaml.XamlMember.LookupIsAmbient%2A>       <xref:System.Windows.Markup.AmbientAttribute>is gevonden op de leden van de diverse WPF-typen, waaronder <xref:System.Windows.Application>, <xref:System.Windows.Setter>, en <xref:System.Windows.Style>.</xref:System.Windows.Style> </xref:System.Windows.Setter> </xref:System.Windows.Application></xref:System.Windows.Markup.AmbientAttribute> Ook is gevonden in de <xref:System.Windows.ResourceDictionary>type dat alle leden die gebruikmaakt van DV <xref:System.Windows.ResourceDictionary>aangezien het type moet worden beschouwd als ambient zelfs als het lid niet specifiek wordt toegeschreven.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> is gerapporteerd als ambient eigenschap, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAttachable
  id: IsAttachable
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> een koppelbare lid is."
  remarks: "De waarde IsAttachable is op basis van welke constructor is gebruikt voor het opstellen van een <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> geïnitialiseerd"
  syntax:
    content: public bool IsAttachable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> een koppelbare lid is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAttachable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsDirective
  id: IsDirective
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> is van een XAML-instructie."
  remarks: "De waarde IsDirective is op basis van welke constructor is gebruikt voor het opstellen van een <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> geïnitialiseerd De base <xref:System.Xaml.XamlMember>constructors initialiseren zodat IsDirective `false`.</xref:System.Xaml.XamlMember> Echter, de <xref:System.Xaml.XamlDirective>klasse (een <xref:System.Xaml.XamlMember>afgeleide klasse) wordt geïnitialiseerd zodat IsDirective `true`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlDirective>       Als u wilt rapporteren IsDirective als `true` voor aanroepers van een aangepaste XAML-schemaklasse voor leden van de XAML, zorg ervoor dat u afgeleid van <xref:System.Xaml.XamlDirective>omdat dit de enige manier om in te schakelen dat gedrag.</xref:System.Xaml.XamlDirective>"
  syntax:
    content: public bool IsDirective { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> is van een XAML richtlijn, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsDirective*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsEvent
  id: IsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een lid van de gebeurtenis."
  remarks: "Het aanroepen van IsEvent roept <xref:System.Xaml.XamlMember.LookupIsEvent%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupIsEvent%2A>"
  syntax:
    content: public bool IsEvent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een gebeurtenis; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> is geïnitialiseerd met een geldig <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> tekenreeks als de <xref:System.Xaml.XamlMember.Name*>.</xref:System.Xaml.XamlMember.Name*>"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> is geïnitialiseerd met een geldig <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> reeks; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadOnly
  id: IsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een alleen-lezen-lid."
  remarks: "Het aanroepen van IsReadOnly roept <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een alleen-lezen-lid; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadPublic
  id: IsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een lid met een aanroepbare openbare <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "De IsReadPublic waarde controleert of de <xref:System.Xaml.XamlMember.DeclaringType%2A>openbaar.</xref:System.Xaml.XamlMember.DeclaringType%2A> Als <xref:System.Xaml.XamlMember.DeclaringType%2A>niet-openbare, is de `get` accessor kan niet worden aangeroepen in de praktijk en IsReadPublic retourneert `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Het aanroepen van IsReadPublic roept <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>      > [!IMPORTANT] > De <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>methode virtueel is en daarom kan worden genegeerd.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> De onderdrukking loopt het risico te wijzigen (met kwaadaardige bedoelingen of anderszins) de gerapporteerde toegang tot informatie van een XAML-lid dat niet meer worden uitgelijnd op een verwachte manier met het type toegang systeemgegevens van de onderliggende CLR-declaratie. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van toegangsniveaus."
  syntax:
    content: public bool IsReadPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een aanroepbare openbare <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt een waarde die aangeeft of het lid kan niet worden omgezet door het maken van een back-systeem dat wordt gebruikt voor het omzetten van het type en lid."
  remarks: "Een <xref:System.Xaml.XamlMember>die is gemaakt met de <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>handtekening retourneert `true` voor IsUnknown.</xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> </xref:System.Xaml.XamlMember>       Voor een load-pad dat betrekking heeft op <xref:System.Xaml.XamlObjectWriter>, een <xref:System.Xaml.XamlMember>met `true` voor IsUnknown kan niet worden geschreven in een objectgrafiek.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriter> Onder de standaard-implementaties in .NET Framework XAML Services API&quot;s, de <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>aanroepen er wordt een <xref:System.Xaml.XamlObjectWriterException>wanneer de desbetreffende <xref:System.Xaml.XamlMember>rapporten `true` voor IsUnknown.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       U moet geen maken een <xref:System.Xaml.XamlMember>die een waarde heeft van `true` voor IsUnknown tenzij uw implementatie de uitzonderingen van kan verwerken <xref:System.Xaml.XamlObjectWriter>, of u over andere manieren om aan te passen de <xref:System.Xaml.XamlObjectWriter>gedrag.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember>       Het aanroepen van IsUnknown roept <xref:System.Xaml.XamlMember.LookupIsUnknown%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupIsUnknown%2A>"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het lid kan niet worden omgezet; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als het lid kan worden omgezet."
  overload: System.Xaml.XamlMember.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWriteOnly
  id: IsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een lid van de alleen-schrijven."
  remarks: "Het aanroepen van IsWriteOnly roept <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>"
  syntax:
    content: public bool IsWriteOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een alleen-schrijven lid; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWritePublic
  id: IsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een lid is van een aanroepbare openbare <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "De waarde IsWritePublic acht of de <xref:System.Xaml.XamlMember.DeclaringType%2A>openbaar als onderdeel van de bepaling.</xref:System.Xaml.XamlMember.DeclaringType%2A> Als <xref:System.Xaml.XamlMember.DeclaringType%2A>niet-openbare, is de `set` accessor kan niet worden aangeroepen in de praktijk en IsWritePublic retourneert `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Het aanroepen van IsWritePublic roept <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>      > [!IMPORTANT] > De <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>methode virtueel is en daarom kan worden genegeerd.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> De onderdrukking loopt het risico te wijzigen (met kwaadaardige bedoelingen of anderszins) de gerapporteerde toegang tot informatie van een XAML-lid dat niet meer worden uitgelijnd op een verwachte manier met het type toegang systeemgegevens van de onderliggende CLR-declaratie. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van toegangsniveaus."
  syntax:
    content: public bool IsWritePublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een aanroepbare openbare <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer dit wordt geïmplementeerd in een afgeleide klasse, retourneert een <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementatie."
  remarks: "Negeer deze methode voor de interne reflectie met een andere manier om CLR kenmerkwaarden te verkrijgen. In het ontbreken van een onderdrukking gebruikt de interne routereflector typische CLR reflectie logica zoals aanroepen naar <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>       Retourneert de standaardimplementatie `null`."
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "Een <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementatie."
  overload: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -object, dat wordt gebruikt voor uitgesteld laden van XAML objecten gedeclareerd."
  remarks: "Deze methode wordt aangeroepen wanneer een aanroeper een waarde van haalt de <xref:System.Xaml.XamlMember.DeferringLoader%2A>eigenschap.</xref:System.Xaml.XamlMember.DeferringLoader%2A> Deze methode als u wilt overschrijven <xref:System.Xaml.XamlMember.DeferringLoader%2A>om te retourneren van een waarde die verschilt van de waarde die is ingeschakeld door de interne reflectie standaard, en als u ook aangepaste aanbiedt <xref:System.Xaml.Schema.XamlMemberInvoker>informatie.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DeferringLoader%2A>       De standaardimplementatie retourneert een object door te lezen <xref:System.Windows.Markup.XamlDeferLoadAttribute>of met behulp van een <xref:System.Xaml.XamlDeferringLoader>van het declarerende type.</xref:System.Xaml.XamlDeferringLoader> </xref:System.Windows.Markup.XamlDeferLoadAttribute> Als geen van beide object beschikbaar is, deze methode kan retourneren `null`."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; die heeft een <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> -beperking voor de algemene."
  overload: System.Xaml.XamlMember.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDependsOn
  id: LookupDependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een lijst met <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objecten. Items in de lijst de leden waar afhankelijkheidsrelaties voor van de initialisatievolgorde bestaan ten opzichte van dit rapport <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Deze methode wordt aangeroepen wanneer een aanroeper een waarde van haalt de <xref:System.Xaml.XamlMember.DependsOn%2A>eigenschap.</xref:System.Xaml.XamlMember.DependsOn%2A> Deze methode als u wilt overschrijven <xref:System.Xaml.XamlMember.DependsOn%2A>om te retourneren van een waarde die verschilt van de waarde die is ingeschakeld door de interne reflectie standaard, en als u ook aangepaste aanbiedt <xref:System.Xaml.Schema.XamlMemberInvoker>informatie.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DependsOn%2A>       De WPF XAML-lezer en -schrijver implementaties kenmerk in dit geval is bij de <xref:System.Windows.Markup.DependsOnAttribute>.</xref:System.Windows.Markup.DependsOnAttribute> De standaardimplementatie gebruikt deze bestaande <xref:System.Windows.Markup.DependsOnAttribute>techniek.</xref:System.Windows.Markup.DependsOnAttribute>       Deze methode overschrijven als u geen gebruikmaakt van <xref:System.Windows.Markup.DependsOnAttribute>voor dit doel en wilt vervangen door deze techniek voor die eigenschap verwerkingsvolgorde met uw eigen techniek aangeeft.</xref:System.Windows.Markup.DependsOnAttribute> Als u niet van plan bent voor de ondersteuning van een eigenschap verwerkingsvolgorde, kunt u de standaardimplementatie gebruiken omdat het geen resultaten oplevert waarvoor geschikt is.       De lijst is alleen-lezen."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "Een lijst met <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objecten."
  overload: System.Xaml.XamlMember.LookupDependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> dat is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Deze methode wordt aangeroepen door het aanroepen van <xref:System.Xaml.XamlMember.Invoker%2A>.</xref:System.Xaml.XamlMember.Invoker%2A>       De standaardimplementatie vereist niet dat een <xref:System.Xaml.XamlMember>worden geconstrueerd met een van de constructors die een eerste <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> doorgeven</xref:System.Xaml.XamlMember> Echter, een <xref:System.Xaml.XamlMember.UnderlyingMember%2A>waarde moet aanwezig zijn voor de <xref:System.Xaml.XamlMember>; anders wordt de standaardimplementatie retourneert `null`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Deze methode overschrijven als u ook uit <xref:System.Xaml.Schema.XamlMemberInvoker>en u van plan bent te retourneren van de afgeleide klasse afleiden.</xref:System.Xaml.Schema.XamlMemberInvoker> Als u terugkeert `null`, <xref:System.Xaml.XamlMember.Invoker%2A>retourneert <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>voor aanroepers.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlMember.Invoker%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "The <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref> information for this <xref href=&quot;System.Xaml.XamlMember&quot;></xref>; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlMember.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> wordt gerapporteerd als ambient eigenschap."
  remarks: "Deze methode wordt aangeroepen door interne-aanroepen waarmee wordt gecontroleerd op de informatie over de eigenschappen van XAML. Gedrag Ambient eigenschap wordt in het openbare API-gedrag van XAML en XAML schrijfprogramma verwerkt. De interne-aanroepen die verwijzen naar LookupIsAmbient uitmaken meestal deel van XAML verwerking logica om ervoor te zorgen dat objecten en waarden die afhankelijk van de ambient gebruik voor type kwalificatie zijn correct kunnen werken. De standaardimplementatie van .NET Framework XAML Services maakt gebruik van CLR-kenmerk opgeven om deze gegevens via reflectie verkrijgen via een back-typen. In het bijzonder de standaardimplementatie controleert <xref:System.Windows.Markup.AmbientAttribute>en retourneert `true` voor LookupIsAmbient als <xref:System.Windows.Markup.AmbientAttribute>bestaat op de liddefinitie van een.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute>       Deze methode overschrijven als u geen gebruikmaakt van <xref:System.Windows.Markup.AmbientAttribute>voor dit doel en wilt vervangen door deze techniek omgevingseigenschappen XAML met uw eigen techniek aangeeft.</xref:System.Windows.Markup.AmbientAttribute>       Voorbeeld van API&quot;s van WPF dat kenmerk met <xref:System.Windows.Markup.AmbientAttribute>zijn <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName>en <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.</xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName> </xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> </xref:System.Windows.Markup.AmbientAttribute>"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het rapporteren van dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> als een ambient eigenschap; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsEvent
  id: LookupIsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een gebeurtenis."
  remarks: "De standaardcontroles voor implementatie of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>is van het type <xref:System.Reflection.EventInfo>, en als dit het geval is, retourneert `true`.</xref:System.Reflection.EventInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.IsEvent%2A>.</xref:System.Xaml.XamlMember.IsEvent%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u specifieke metagegevens die kan worden geïnterpreteerd om te bepalen van XAML hebt typ system verklaringen op basis van per aanvraag.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsEvent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om te rapporteren dat deze <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een gebeurtenis; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  id: LookupIsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> de alleen-lezen eigenschap van een beoogde vertegenwoordigt."
  remarks: "Retourneert de standaardimplementatie `true` als <xref:System.Xaml.XamlMember.UnderlyingMember%2A>bestaat, maar een openbare `set` accessor bestaat niet voor, zoals wordt bepaald door de interne reflectie.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</xref:System.Xaml.XamlMember.IsReadOnly%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u specifieke metagegevens die kan worden geïnterpreteerd om te bepalen van XAML hebt typ system verklaringen op basis van per aanvraag.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het rapporteren van dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> als een beoogde alleen-lezen eigenschap; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  id: LookupIsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een eigenschap met een openbare <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "De standaardimplementatie retourneert resultaten die zijn gebaseerd op interne reflectie of de negatie van <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, verwerking in die volgorde.</xref:System.Xaml.XamlMember.IsWriteOnly%2A>       LookupIsReadPublic retourneert of het lid zelf openbare; Deze retourneert `true` voor een openbaar lid op een nonpublic declarerend type. Gebruik <xref:System.Xaml.XamlMember.IsReadPublic%2A>in plaats daarvan als u ook wilt rekening houden met de zichtbaarheid van het declarerende type.</xref:System.Xaml.XamlMember.IsReadPublic%2A>       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</xref:System.Xaml.XamlMember.IsReadPublic%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > De LookupIsReadPublic methode virtueel is en daarom kan worden genegeerd. De onderdrukking loopt het risico te wijzigen (met kwaadaardige bedoelingen of anderszins) de gerapporteerde toegang tot informatie van een XAML-lid dat niet meer worden uitgelijnd op een verwachte manier met het type toegang systeemgegevens van de onderliggende CLR-declaratie. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van toegangsniveaus."
  syntax:
    content: protected virtual bool LookupIsReadPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een eigenschap met een openbare <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een lid dat kan niet worden omgezet door het maken van een back-systeem dat wordt gebruikt voor het omzetten van het type en lid."
  remarks: "Deze methode worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> krijgt De standaardimplementatie retourneert resultaten die op basis van de interne reflectie of controleren of voor een `null` waarde van <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, verwerking in die volgorde.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een niet-omgezette lid; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  id: LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een lid is van een openbare <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor maar niet in een openbare <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "Retourneert de standaardimplementatie `true` als een <xref:System.Xaml.XamlMember.UnderlyingMember%2A>bestaat waarvoor een openbare `set` accessor en een nonpublic `get` accessor, zoals wordt bepaald door de interne reflectie.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</xref:System.Xaml.XamlMember.IsWriteOnly%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsWriteOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een alleen-schrijven lid; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  id: LookupIsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert of dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een lid is van een openbare <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "De standaardimplementatie retourneert resultaten op basis van interne reflectie of de ontkenning van <xref:System.Xaml.XamlMember.IsReadOnly%2A>, verwerking in die volgorde.</xref:System.Xaml.XamlMember.IsReadOnly%2A>       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > De LookupIsWritePublic methode virtueel is en daarom kan worden genegeerd. De onderdrukking loopt het risico te wijzigen (met kwaadaardige bedoelingen of anderszins) de gerapporteerde toegang tot informatie van een XAML-lid dat niet meer worden uitgelijnd op een verwachte manier met het type toegang systeemgegevens van de onderliggende CLR-declaratie. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van toegangsniveaus."
  syntax:
    content: protected virtual bool LookupIsWritePublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> vertegenwoordigt een beschrijfbare lid; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTargetType
  id: LookupTargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> van het type waar de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan bestaan."
  remarks: "De standaardimplementatie wordt onderscheid gemaakt tussen koppelbaar en niet-toevoegbaar lid. Voor niet-toevoegbaar lid retourneert LookupTargetType altijd <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> Voor koppelbare leden LookupTargetType een resultaat op basis van het onderzoek van het <xref:System.Xaml.XamlMember.UnderlyingMember%2A>type accessor-parameter en interpreteert dat type op basis van XAML schemacontext.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.TargetType%2A>.</xref:System.Xaml.XamlMember.TargetType%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupTargetType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Het type waar de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan bestaan. Zie de opmerkingen."
  overload: System.Xaml.XamlMember.LookupTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupType
  id: LookupType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> van het type dat wordt gebruikt door het lid. Zie de opmerkingen."
  remarks: "Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> krijgt Deze methode als u wilt overschrijven <xref:System.Xaml.XamlMember.Type%2A>om te retourneren van een waarde die verschilt van de waarde die is ingeschakeld door de interne reflectie standaard, en als u ook aangepaste aanbiedt <xref:System.Xaml.Schema.XamlMemberInvoker>informatie.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.Type%2A>       De standaardimplementatie maakt gebruik van verschillende codepaden en conceptuele betekenis voor de geretourneerde <xref:System.Xaml.XamlType>dat is gebaseerd op of dit <xref:System.Xaml.XamlMember>vertegenwoordigt een eigenschap, methode of gebeurtenis.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>      -Voor een eigenschap, de geretourneerde <xref:System.Xaml.XamlType>is van het type dat de eigenschap wordt ingesteld of wordt geretourneerd door de eigenschap.</xref:System.Xaml.XamlType>      -Voor een gebeurtenis, de geretourneerde <xref:System.Xaml.XamlType>is het vereiste Gebeurtenisregistratietype (een gemachtigde in een CLR-implementatie).</xref:System.Xaml.XamlType>      -Voor een methode <xref:System.Xaml.XamlType>is het retourtype.</xref:System.Xaml.XamlType>       Schemacontext XAML wordt in elk geval gebruikt voor het evalueren van het type van de XAML van het onderliggende type.       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "De <xref href=&quot;System.Xaml.XamlType&quot;> </xref> van het type dat wordt gebruikt door het lid. Zie de opmerkingen."
  overload: System.Xaml.XamlMember.LookupType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een type converter implementatie die is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "De standaardimplementatie maakt gebruik van de volgende logica en verwerkingsvolgorde: - als kenmerk opgeven op het lidniveau van het bestaat (<xref:System.ComponentModel.TypeConverterAttribute>), de kenmerk-informatie wordt gebruikt voor een aanroep van <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>tegen de XAML-schemacontext.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.ComponentModel.TypeConverterAttribute>      -Als <xref:System.Xaml.XamlMember.Type%2A>is geldig, een type-conversieprogramma die is gekoppeld aan het type wordt geretourneerd.</xref:System.Xaml.XamlMember.Type%2A>      -Als het lid een gebeurtenis is, wordt een gebeurtenis-specifieke type-conversieprogramma geretourneerd.       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.TypeConverter%2A>.</xref:System.Xaml.XamlMember.TypeConverter%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; exemplaar met <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> beperking; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  id: LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor die is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "De standaardimplementatie interpreteert de <xref:System.Xaml.XamlMember.UnderlyingMember%2A>eigenschap <xref:System.Reflection.PropertyInfo>en retourneert de waarde van <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName>(met de parameter die is ingesteld op `true`), wat betekent dat de geretourneerde methode mag niet-openbare.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> Dit gedrag kan leiden tot `null` voor bepaalde gevallen. inclusief gevallen waarbij geen bijbehorende accessor bestaat en of het lid is geen eigenschap.       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van de <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>eigenschap op een gekoppelde <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> krijgt</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember> Zorg ervoor dat voor het implementeren van LookupUnderlyingGetter, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, en <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>zodat deze alle gecorreleerde resultaten retourneren.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "De <xref:System.Reflection.MethodInfo>voor de bijbehorende <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  id: LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een CLR-systeem <xref:System.Reflection.MemberInfo>dat is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  remarks: "De standaardimplementatie retourneert het onderliggende lid informatie die is gebaseerd op de constructie. Als de <xref:System.Reflection.MemberInfo>-object is gemaakt met een handtekening die niet genoeg informatie biedt voor het instellen van het onderliggende lid, retourneert deze methode `null`.</xref:System.Reflection.MemberInfo>       Als een onderliggende lid was ingesteld tijdens de constructiefase, hoeft u niet aan deze methode niet aanroepen.       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember> Zorg ervoor dat voor het implementeren van <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, en LookupUnderlyingMember zodat deze alle retourneren resultaten gecorreleerde.</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "Een system CLR-type <xref:System.Reflection.MemberInfo>-object dat is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  id: LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor die is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "De standaardimplementatie interpreteert <xref:System.Xaml.XamlMember.UnderlyingMember%2A>Als <xref:System.Reflection.PropertyInfo>en retourneert de waarde van <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName>(met de parameter die is ingesteld op `true`), wat betekent dat de geretourneerde methode mag niet-openbare.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> Dit kan leiden tot `null` voor bepaalde gevallen, met inbegrip van gevallen waarin er is geen dergelijke accessor of het lid is geen eigenschap.       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>op een gekoppelde <xref:System.Xaml.Schema.XamlMemberInvoker>haalt. Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember> </xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> Zorg ervoor dat voor het implementeren van <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, LookupUnderlyingSetter, en <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>zodat deze alle gecorreleerde resultaten retourneren.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "De <xref:System.Reflection.MethodInfo>voor de bijbehorende <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde serializer-implementatie die is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "De standaardimplementatie maakt gebruik van de volgende logica en verwerkingsvolgorde: - als kenmerk opgeven op het lidniveau van het bestaat (<xref:System.Windows.Markup.ValueSerializerAttribute>), de kenmerk-informatie wordt gebruikt voor een aanroep van <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>tegen de XAML-schemacontext.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.Windows.Markup.ValueSerializerAttribute>      -Als <xref:System.Xaml.XamlMember.Type%2A>is geldig, een waardeconversieprogramma die is gekoppeld aan het type wordt geretourneerd.</xref:System.Xaml.XamlMember.Type%2A>      -Als de vorige voorwaarden zijn niet van toepassing, `null` wordt geretourneerd.       Deze methode wordt aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</xref:System.Xaml.XamlMember.ValueSerializer%2A> krijgt Deze methode overschrijven als u rapporteren over uniform voor een hele wilt <xref:System.Xaml.XamlMember>afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; exemplaar met <xref:System.Windows.Markup.ValueSerializer>beperking, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Name
  id: Name
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> naam van de tekenreeks die dit verklaart <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Deze waarde is altijd ingesteld tijdens de constructiefase. De constructors die worden geïmplementeerd door <xref:System.Xaml.XamlMember>meestal Veroorzaak een uitzondering als de naam van een initiële niet is opgegeven; daarom niet van plan bent deze eigenschap `null` of een lege tekenreeks als u van standaard .NET Framework XAML Services implementaties gebruikmaakt.</xref:System.Xaml.XamlMember>       [XamlName grammatica](~/add/includes/ajax-current-ext-md.md) en naamgevingsregels voor CLR-type en de leden zijn niet een exacte intersect. Het is mogelijk te declareren van de naam van een lid dat is toegestaan onder de CLR, maar niet geldig onder de naamgeving van XAML. Indien mogelijk moet u deze situatie niet."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "De <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> naam van de tekenreeks die dit verklaart <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt bepaald of twee opgegeven <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objecten dezelfde waarde hebben."
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van <code> xamlMember1 </code> is hetzelfde als de waarde van <code> xamlMember2 </code>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt bepaald of twee opgegeven <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objecten hebben verschillende waarden."
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van <code> xamlMember1 </code> verschilt van de waarde van <code> xamlMember2 </code>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de één XAML-naamruimte-URI die de primaire XAML-naamruimte voor deze identificeert <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "De eigenschap PreferredXamlNamespace bevat dezelfde waarde als het aanroepen <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A>en vervolgens de eerste waardetekenreeks in de geretourneerde lijst.</xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> De voorkeur XAML-naamruimte moet worden gebruikt bij het schrijven van het lid terug naar tekst of andere vorm van XAML-naamruimte-informatie wordt behouden."
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "De id voor de primaire XAML-naamruimte voor dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>, als een tekenreeks."
  overload: System.Xaml.XamlMember.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.SerializationVisibility
  id: SerializationVisibility
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt een <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> waarde waarmee wordt aangegeven hoe het lid moet worden verwerkt door een visuele ontwerper."
  syntax:
    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
      description: "Een waarde van de <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> opsomming. De standaardwaarde is <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref>."
  overload: System.Xaml.XamlMember.SerializationVisibility*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TargetType
  id: TargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> van het type waar de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan bestaan."
  remarks: "De geretourneerde waarde verschilt voor koppelbaar en niet-toevoegbaar lid. Voor niet-toevoegbaar lid retourneert TargetType <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> Voor koppelbare leden <xref:System.Xaml.XamlMember.LookupTargetType%2A>retourneert een resultaat dat is gebaseerd op deze logica: - als een back-ups maken kan niet worden omgezet door reflectie (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), deze methode retourneert een interne constante met een algemeen object-type.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A>      -Als de vorige voorwaarde niet van toepassing, <xref:System.Xaml.XamlMember.LookupTargetType%2A>wordt aangeroepen.</xref:System.Xaml.XamlMember.LookupTargetType%2A> De standaardimplementatie retourneert een <xref:System.Xaml.XamlType>dat is gebaseerd op het onderzoeken van de methoden die worden geïmplementeerd de `get` en `set` accessors.</xref:System.Xaml.XamlType> Een klasse overschrijven mogelijk <xref:System.Xaml.XamlMember.LookupTargetType%2A>gebruiken een ander gedrag, zoals andere metagegevens formulieren, die mogelijk rapporttypen doel voor koppelbare leden.</xref:System.Xaml.XamlMember.LookupTargetType%2A>"
  syntax:
    content: public System.Xaml.XamlType TargetType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Het type waar de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan bestaan. Zie de opmerkingen."
  overload: System.Xaml.XamlMember.TargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ToString
  id: ToString
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een tekenreeksrepresentatie van deze <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Deze implementatie retourneert <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Een tekenreeksrepresentatie van dit <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Type
  id: Type
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> van het type dat wordt gebruikt door het lid."
  remarks: "Het aanroepen van Type roept <xref:System.Xaml.XamlMember.LookupType%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupType%2A> Dit gebeurt wanneer de eerste interne reflectie logica is de informatie niet hebt ingesteld.       In het standaardgedrag (geen <xref:System.Xaml.XamlMember.LookupType%2A>overschrijven), de geretourneerde <xref:System.Xaml.XamlType>conceptuele betekenis.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember.LookupType%2A> Welke betekenis van toepassing is afhankelijk van of dit <xref:System.Xaml.XamlMember>vertegenwoordigt een eigenschap, methode of gebeurtenis, zoals in de volgende lijst wordt weergegeven: - voor een eigenschap, de geretourneerde <xref:System.Xaml.XamlType>is van het type dat de eigenschap wordt ingesteld of wordt geretourneerd door de eigenschap.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember>      -Voor een gebeurtenis, de geretourneerde <xref:System.Xaml.XamlType>is het vereiste Gebeurtenisregistratietype (een gemachtigde in een CLR-implementatie).</xref:System.Xaml.XamlType>      -Voor een methode <xref:System.Xaml.XamlType>is het retourtype van deze methode, die mogelijk `null`.</xref:System.Xaml.XamlType>       In elk geval wordt de XAML-schemacontext gebruikt voor het evalueren van de XAML-type van het type back-ups maken."
  syntax:
    content: public System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "De <xref href=&quot;System.Xaml.XamlType&quot;> </xref> van het type dat wordt gebruikt door het lid. Zie de opmerkingen."
  overload: System.Xaml.XamlMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -object, dat kan worden gebruikt voor het type conversie constructie van XAML objecten gedeclareerd."
  remarks: "Het aanroepen van TypeConverter roept <xref:System.Xaml.XamlMember.LookupTypeConverter%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupTypeConverter%2A> Dit probleem treedt op wanneer de eerste interne reflectie logica is de informatie niet hebt ingesteld.       Implementaties die een van de niet-null-eigenschapswaarde voor TypeConverter retourneren zijn niet noodzakelijkerwijs een werkende <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Hieronder volgt een lijst met mogelijke niet-null waarden geretourneerd voor TypeConverter en wat deze waarden vertegenwoordigen:-de retourwaarde rapporten type-conversieprogramma dat specifiek naar dat lid of meer in het algemeen naar het doeltype van de converter is toegewezen. Dit gedrag is doorgaans de meeste systemen voor XAML-type en om te instantiëren van een type-conversieprogramma en de bijbehorende methoden aanroepen Zoek XAML-processors.      -De retourwaarde rapporteert een ingebouwde waardeconversieprogramma. Deze conversieprogramma&quot;s aanwezig zijn voor bepaalde interne bewerkingen die worden uitgevoerd door een XAML-schrijver. Deze ingebouwde waarde conversieprogramma&quot;s niet in het bijzonder de onbewerkte kenmerkwaarden voor de tekenreeks converteren naar het niveau van de taal XAML primitieven. Voor de implementatie van de .NET Framework XAML-Services, worden deze ingebouwde typeconversies vaak doorsturen naar een type-conversieprogramma die is gedefinieerd in de systeemassembly. Bijvoorbeeld, een conversie voor een <xref:System.Int32>waarde beschikt over een ingebouwde doorgestuurd-conversie en daarom de <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A>waarde verwijzingen <xref:System.ComponentModel.Int32Converter>.</xref:System.ComponentModel.Int32Converter> </xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> </xref:System.Int32>      -De retourwaarde rapporteert het speciale geval van een onbeperkte objectmodel; dat wil zeggen de die <xref:System.Xaml.XamlMember>heeft een <xref:System.Xaml.XamlMember.Type%2A>waarde van <xref:System.Object>.</xref:System.Object> </xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.XamlMember> In dit geval de <xref:System.Xaml.Schema.XamlValueConverter%601>wordt gemeld dat de <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName>is {`Object}`.</xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> </xref:System.Xaml.Schema.XamlValueConverter%601> Echter, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>is `null` omdat er geen daadwerkelijke type of het exemplaar beschikbaar is voor deze conversie uitvoeren.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> In plaats daarvan kan niet het gedrag van het objectmodel worden bepaald tot runtime wanneer de runtime van de specifieke technologie de verwerking van een objectgrafiek bepaalt.       Als u toegang hebt tot een werkende <xref:System.ComponentModel.TypeConverter>van <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, kunt u de conversiemethoden aanroept.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> </xref:System.ComponentModel.TypeConverter> Veel conversiemethoden is afhankelijk van servicecontext. Als er niet dezelfde servicecontext beschikbaar dat de type-conversieprogramma voor de typische rol verwacht van objecten voor objectgrafieken schrijven, kunnen de converter methoden uitzonderingen genereert."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -waarde met een <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> -beperking voor de algemene. Zie de opmerkingen."
  overload: System.Xaml.XamlMember.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.UnderlyingMember
  id: UnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Het CLR-systeem opgehaald <xref:System.Reflection.MemberInfo>die beschikbaar is voor een lid dat is opgesteld door <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.MethodInfo>, of <xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> </xref:System.Reflection.MethodInfo> </xref:System.Reflection.PropertyInfo> </xref:System.Reflection.MemberInfo>"
  remarks: "Het aanroepen van UnderlyingMember roept <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>"
  syntax:
    content: public System.Reflection.MemberInfo UnderlyingMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "CLR-systeem <xref:System.Reflection.MemberInfo>informatie als de conversie van de eerste constructorparameters.</xref:System.Reflection.MemberInfo> Een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> die is gemaakt met de &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; handtekening retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.UnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -object, dat wordt gebruikt voor het serialiseren van de waarde van XAML objecten gedeclareerd."
  remarks: "Het aanroepen van ValueSerializer roept <xref:System.Xaml.XamlMember.LookupValueSerializer%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlMember.LookupValueSerializer%2A> Dit probleem treedt op wanneer de eerste interne reflectie logica is de informatie niet hebt ingesteld.       Niet alle gevallen die resulteren in een niet-null-eigenschapswaarde voor ValueSerializer zijn noodzakelijkerwijs een werkende <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer> Zie de opmerkingen in <xref:System.Xaml.XamlMember.TypeConverter%2A>; dezelfde overwegingen van toepassing op ValueSerializer.</xref:System.Xaml.XamlMember.TypeConverter%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; met <xref:System.Windows.Markup.ValueSerializer>-beperking voor de algemene.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.DeclaringType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.DependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlMember>
  nameWithType: IList<XamlMember>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Equals(System.Object)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlMember.GetHashCode
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Invoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
- uid: System.Xaml.XamlMember.LookupDependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
- uid: System.Xaml.XamlMember.LookupInvoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
- uid: System.Xaml.XamlMember.LookupIsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
- uid: System.Xaml.XamlMember.LookupIsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
- uid: System.Xaml.XamlMember.LookupIsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
- uid: System.Xaml.XamlMember.LookupTargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
- uid: System.Xaml.XamlMember.LookupType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
- uid: System.Xaml.XamlMember.LookupTypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
- uid: System.Xaml.XamlMember.LookupValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Name
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
- uid: System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: false
  name: DesignerSerializationVisibility
  nameWithType: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.Xaml.XamlMember.TargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
- uid: System.Xaml.XamlMember.Type
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
- uid: System.Xaml.XamlMember.#ctor*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember.XamlMember
- uid: System.Xaml.XamlMember.DeclaringType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
- uid: System.Xaml.XamlMember.DependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
- uid: System.Xaml.XamlMember.Equals*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals
  nameWithType: XamlMember.Equals
- uid: System.Xaml.XamlMember.GetHashCode*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode
  nameWithType: XamlMember.GetHashCode
- uid: System.Xaml.XamlMember.GetXamlNamespaces*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlMember.GetXamlNamespaces
- uid: System.Xaml.XamlMember.Invoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlMember.LookupCustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlMember.LookupDeferringLoader
- uid: System.Xaml.XamlMember.LookupDependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn
  nameWithType: XamlMember.LookupDependsOn
- uid: System.Xaml.XamlMember.LookupInvoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlMember.LookupInvoker
- uid: System.Xaml.XamlMember.LookupIsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlMember.LookupIsAmbient
- uid: System.Xaml.XamlMember.LookupIsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent
  nameWithType: XamlMember.LookupIsEvent
- uid: System.Xaml.XamlMember.LookupIsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly
  nameWithType: XamlMember.LookupIsReadOnly
- uid: System.Xaml.XamlMember.LookupIsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic
  nameWithType: XamlMember.LookupIsReadPublic
- uid: System.Xaml.XamlMember.LookupIsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlMember.LookupIsUnknown
- uid: System.Xaml.XamlMember.LookupIsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly
  nameWithType: XamlMember.LookupIsWriteOnly
- uid: System.Xaml.XamlMember.LookupIsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic
  nameWithType: XamlMember.LookupIsWritePublic
- uid: System.Xaml.XamlMember.LookupTargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType
  nameWithType: XamlMember.LookupTargetType
- uid: System.Xaml.XamlMember.LookupType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType
  nameWithType: XamlMember.LookupType
- uid: System.Xaml.XamlMember.LookupTypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlMember.LookupTypeConverter
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter
  nameWithType: XamlMember.LookupUnderlyingGetter
- uid: System.Xaml.XamlMember.LookupUnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember
  nameWithType: XamlMember.LookupUnderlyingMember
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter
  nameWithType: XamlMember.LookupUnderlyingSetter
- uid: System.Xaml.XamlMember.LookupValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlMember.LookupValueSerializer
- uid: System.Xaml.XamlMember.Name*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality
  nameWithType: XamlMember.op_Equality
- uid: System.Xaml.XamlMember.op_Inequality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality
  nameWithType: XamlMember.op_Inequality
- uid: System.Xaml.XamlMember.PreferredXamlNamespace*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
- uid: System.Xaml.XamlMember.TargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString
  nameWithType: XamlMember.ToString
- uid: System.Xaml.XamlMember.Type*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
