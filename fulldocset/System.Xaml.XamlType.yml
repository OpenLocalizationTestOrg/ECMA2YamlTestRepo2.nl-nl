### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlType
  id: XamlType
  children:
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  - System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.AllowedContentTypes
  - System.Xaml.XamlType.BaseType
  - System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  - System.Xaml.XamlType.ConstructionRequiresArguments
  - System.Xaml.XamlType.ContentProperty
  - System.Xaml.XamlType.ContentWrappers
  - System.Xaml.XamlType.DeferringLoader
  - System.Xaml.XamlType.Equals(System.Object)
  - System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  - System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.GetAllAttachableMembers
  - System.Xaml.XamlType.GetAllMembers
  - System.Xaml.XamlType.GetAttachableMember(System.String)
  - System.Xaml.XamlType.GetHashCode
  - System.Xaml.XamlType.GetMember(System.String)
  - System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  - System.Xaml.XamlType.GetXamlNamespaces
  - System.Xaml.XamlType.Invoker
  - System.Xaml.XamlType.IsAmbient
  - System.Xaml.XamlType.IsArray
  - System.Xaml.XamlType.IsCollection
  - System.Xaml.XamlType.IsConstructible
  - System.Xaml.XamlType.IsDictionary
  - System.Xaml.XamlType.IsGeneric
  - System.Xaml.XamlType.IsMarkupExtension
  - System.Xaml.XamlType.IsNameScope
  - System.Xaml.XamlType.IsNameValid
  - System.Xaml.XamlType.IsNullable
  - System.Xaml.XamlType.IsPublic
  - System.Xaml.XamlType.IsUnknown
  - System.Xaml.XamlType.IsUsableDuringInitialization
  - System.Xaml.XamlType.IsWhitespaceSignificantCollection
  - System.Xaml.XamlType.IsXData
  - System.Xaml.XamlType.ItemType
  - System.Xaml.XamlType.KeyType
  - System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.LookupAllAttachableMembers
  - System.Xaml.XamlType.LookupAllMembers
  - System.Xaml.XamlType.LookupAllowedContentTypes
  - System.Xaml.XamlType.LookupAttachableMember(System.String)
  - System.Xaml.XamlType.LookupBaseType
  - System.Xaml.XamlType.LookupCollectionKind
  - System.Xaml.XamlType.LookupConstructionRequiresArguments
  - System.Xaml.XamlType.LookupContentProperty
  - System.Xaml.XamlType.LookupContentWrappers
  - System.Xaml.XamlType.LookupCustomAttributeProvider
  - System.Xaml.XamlType.LookupDeferringLoader
  - System.Xaml.XamlType.LookupInvoker
  - System.Xaml.XamlType.LookupIsAmbient
  - System.Xaml.XamlType.LookupIsConstructible
  - System.Xaml.XamlType.LookupIsMarkupExtension
  - System.Xaml.XamlType.LookupIsNameScope
  - System.Xaml.XamlType.LookupIsNullable
  - System.Xaml.XamlType.LookupIsPublic
  - System.Xaml.XamlType.LookupIsUnknown
  - System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  - System.Xaml.XamlType.LookupIsXData
  - System.Xaml.XamlType.LookupItemType
  - System.Xaml.XamlType.LookupKeyType
  - System.Xaml.XamlType.LookupMarkupExtensionReturnType
  - System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  - System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  - System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  - System.Xaml.XamlType.LookupSetTypeConverterHandler
  - System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  - System.Xaml.XamlType.LookupTypeConverter
  - System.Xaml.XamlType.LookupUnderlyingType
  - System.Xaml.XamlType.LookupUsableDuringInitialization
  - System.Xaml.XamlType.LookupValueSerializer
  - System.Xaml.XamlType.MarkupExtensionReturnType
  - System.Xaml.XamlType.Name
  - System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.PreferredXamlNamespace
  - System.Xaml.XamlType.SchemaContext
  - System.Xaml.XamlType.ToString
  - System.Xaml.XamlType.TrimSurroundingWhitespace
  - System.Xaml.XamlType.TypeArguments
  - System.Xaml.XamlType.TypeConverter
  - System.Xaml.XamlType.UnderlyingType
  - System.Xaml.XamlType.ValueSerializer
  langs:
  - csharp
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
  type: Class
  summary: "Informatie over XAML-typen als onderdeel van het algehele XAML-systeem dat is ge√Ømplementeerd in .NET Framework XAML Services-rapporten."
  remarks: "Veel API&quot;s in de klasse XamlType bevatten informatie over XAML-typen, waarbij het concept dat ze rapporteren over vergelijkbaar met bepaalde gedeelten van de XAML-specificatie [MS-XAML is].       XamlType wordt uitgebreid in de .NET Framework XAML Services API gebruikt voor rapportage-informatie over een XAML-type. XamlType rapport de informatie die u moet weten over een XAML-type om te kunnen werken met een exemplaar of toegang krijgen tot de leden van een XAML-knooppuntstroom of een vergelijkbare XAML-weergave. De rapportage is vergelijkbaar met hoe de <xref:System.Type>Typ in de CLR systeem, samen met reflectie klassen zoals <xref:System.Reflection.MemberInfo>, bevatten informatie over een CLR-type en het gebruik ervan.</xref:System.Reflection.MemberInfo> </xref:System.Type>       Om uit te breiden het XAML-typesysteem, kunt u afleiden uit XamlType. Hiertoe dus effectief, mogelijk moet u ook een <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker> implementeren De <xref:System.Xaml.Schema.XamlTypeInvoker>kunt werken met het typesysteem back-ups maken dat u als onderdeel van het gedrag voor het aanroepen van opgeeft het gegeneraliseerde XAML-typesysteem.</xref:System.Xaml.Schema.XamlTypeInvoker> Het specifieke aangepaste <xref:System.Xaml.Schema.XamlTypeInvoker>biedt een manier om te beperken van de afhankelijkheden van het CLR-systeem, die worden gebruikt door het standaardgedrag voor XamlType.</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: 'public class XamlType : IEquatable<System.Xaml.XamlType>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlType>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klasse op basis van de onderliggende CLR-type-informatie."
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "De onderliggende CLR <xref:System.Type>voor het type XAML om samen te stellen.</xref:System.Type>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Schemacontext XAML voor XAML lezers of schrijvers van XAML."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klasse op basis van een naam voor het type."
  remarks: "Dit is een beveiligde constructor. Er is geen huidige openbare afgeleide klassen bestaan die gebruikmaken van dit bepaalde pad voor de constructie. Als een gebruiker van de bestaande <xref:System.Xaml.XamlType>, moet u de andere constructor handtekeningen (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, of <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) initialiseren een <xref:System.Xaml.XamlType>object.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> </xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29> </xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29> </xref:System.Xaml.XamlType>"
  syntax:
    content: protected XamlType (string typeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: typeName
      type: System.String
      description: "De naam van het type te maken."
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "De typeargumenten voor een <xref href=&quot;System.Xaml.XamlType&quot;> </xref> die staat voor een algemeen type. Kan (en vaak) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wat aangeeft dat het type dat wordt vertegenwoordigd niet een generiek type is."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Schemacontext voor XAML en XAML schrijfprogramma XAML."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>typeName</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klasse op basis van de onderliggende gegevens en een <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementatie."
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "Het onderliggende type voor het type XAML om samen te stellen."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML-schemacontext van de XAML-lezer."
    - id: invoker
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "De <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementatie die verantwoordelijk is voor runtime-reflectie roept tegen de <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klasse op basis van de XAML-naamruimte en de tekenreeksnaam van een voor het type. Deze constructor is uitsluitend bedoeld is voor analyse en de registratie van de XAML-knooppunt van type gebruik waarvan bekend is dat u geen back-ups maken in de ondersteunende typesysteem en schemacontext van XAML."
  remarks: "Deze constructor alleen gebruiken voor &quot;Onbekende&quot; typen waar een XAML-type dat is toegewezen aan een onderliggende typesysteem is niet beschikbaar. Deze constructor kan geen queryplan een resultaat waarbij <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName>is `true`.</xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName> In plaats daarvan de standaard routereflector logica van het onderliggende type rapporten als <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName>.</xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName> Dit gedrag kunt echter wijzigen omdat de <xref:System.Xaml.XamlType.LookupIsUnknown%2A>overschrijven.</xref:System.Xaml.XamlType.LookupIsUnknown%2A>"
  syntax:
    content: public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: unknownTypeNamespace
      type: System.String
      description: "De XAML-naamruimte voor het type, als een tekenreeks."
    - id: unknownTypeName
      type: System.String
      description: "De naam van het type in de opgegeven `unknownTypeNamespace` XAML-naamruimte."
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "De typeargumenten voor een <xref href=&quot;System.Xaml.XamlType&quot;> </xref> die staat voor een algemeen type. Kan (en vaak) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wat aangeeft dat het type dat wordt vertegenwoordigd niet een generiek type is."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Schemacontext XAML voor XAML lezers of schrijvers van XAML."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>unknownTypeNamespace</code>, <code>unknownTypeName</code>, or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.AllowedContentTypes
  id: AllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een verzameling alleen-lezen van de typen die beschikbaar zijn als de <xref:System.Xaml.XamlType.ContentProperty*>waarde voor dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Xaml.XamlType.ContentProperty*>"
  remarks: "Typen die zijn toegewezen een specifiek type inhoud (bijvoorbeeld kunnen worden toegewezen aan een basistype dat is een toegestane inhoudstype) worden niet beschouwd als meerdere typen voor de doeleinden van AllowedContentTypes.       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> AllowedContentTypes { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Een verzameling alleen-lezen van mogelijke typen inhoud."
  overload: System.Xaml.XamlType.AllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.BaseType
  id: BaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> voor de onmiddellijke basistype van dit type XAML. Bepaling van deze waarde is gebaseerd op het onderliggende type van dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> en schemacontext."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupBaseType%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupBaseType%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupBaseType%2A>voor dit type.</xref:System.Xaml.XamlType.LookupBaseType%2A> Standaard BaseType retourneert een interne constante die vertegenwoordigt een <xref:System.Object>Als <xref:System.Xaml.XamlType.UnderlyingType%2A>is `null`.</xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Object>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupBaseType%2A>virtueel is en daarom kan worden genegeerd.</xref:System.Xaml.XamlType.LookupBaseType%2A> Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde informatie over een XAML-type wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem-informatie van de onderliggende CLR-type. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang."
  syntax:
    content: public System.Xaml.XamlType BaseType { get; }
    return:
      type: System.Xaml.XamlType
      description: "De <xref href=&quot;System.Xaml.XamlType&quot;> </xref> voor de onmiddellijke basistype van dit type XAML."
  overload: System.Xaml.XamlType.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  id: CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of een exemplaar van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref> heeft de opgegeven <xref href=&quot;System.Xaml.XamlType&quot;> </xref> in de lijst met typen kunnen worden toegewezen."
  remarks: "Hoewel het toegewezen type niet de mogelijkheden van het verwijzingstype heeft, kunt u deze kunt gebruiken voor toewijzing. U kunt bijvoorbeeld toewijzing gebruiken om ervoor te overeenkomt met de waarden van een eigenschap. Het concept van toewijsbare typen in XAML is vergelijkbaar met het concept van het casten van in het CLR-type-systeem. Bijvoorbeeld, onder een CLR-type-systeem, elke type heeft een <xref:System.Object>in de lijst Toewijsbaar type.</xref:System.Object>       Als een van de twee <xref:System.Xaml.XamlType>exemplaren die worden gebruikt voor vergelijking <xref:System.Xaml.XamlType.IsUnknown%2A>gelijk zijn aan `true`, deze methode heeft een speciale onbekende modus die als resultaat geeft `true` als de twee <xref:System.Xaml.XamlType>exemplaren zijn gelijk.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.IsUnknown%2A> </xref:System.Xaml.XamlType>       De standaardimplementatie maakt gebruik van de CLR <xref:System.Type>van <xref:System.Xaml.XamlType.UnderlyingType%2A>voor deze <xref:System.Xaml.XamlType>en de invoer <xref:System.Xaml.XamlType>, en aanroepen <xref:System.Type.IsAssignableFrom%2A>.</xref:System.Type.IsAssignableFrom%2A> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Type> Deze methode overschrijven als u wilt dat een andere bepaling van de typen kunnen worden toegewezen.       Een null doorgeven `xamlType` heeft een uitzondering niet genereren en retourneert altijd `false`.      > [!IMPORTANT] > CanAssignTo virtueel is en daarom kan worden genegeerd. Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de assignability van een XAML-type wijzigen zodat deze is niet langer wordt uitgelijnd op een verwachte manier met het type casten gedrag van de onderliggende CLR-type. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang."
  syntax:
    content: public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "Het type om te controleren op basis van de huidige <xref href=&quot;System.Xaml.XamlType&quot;> </xref> ."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> xamlType </code> is in de lijst met toegewezen typen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.CanAssignTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  id: ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> argumenten moet hebben (algemene beperkingen via <xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;> </xref>, initialisatie van de tekst of andere technieken XAML) om een geldig exemplaar van het type samen te stellen."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>voor dit type.</xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>"
  syntax:
    content: public bool ConstructionRequiresArguments { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als constructie van een exemplaar een argumentwaarde vereist; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.ConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentProperty
  id: ContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informatie voor de eigenschap content van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Wanneer met behulp van de binding of een back-up van het systeem CLR-type, de eigenschap van de XAML-content kan worden opgegeven voor een type door toe te passen <xref:System.Windows.Markup.ContentPropertyAttribute>aan de typedefinitie.</xref:System.Windows.Markup.ContentPropertyAttribute>       Deze eigenschap wordt uitgelijnd naar de `[content property]` informatie item in de specificatie [MS-XAML].       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupContentProperty%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupContentProperty%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupContentProperty%2A>voor dit type.</xref:System.Xaml.XamlType.LookupContentProperty%2A>"
  syntax:
    content: public System.Xaml.XamlMember ContentProperty { get; }
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>informatie voor de eigenschap content van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>. Mogelijk <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen inhoudseigenschap bestaat."
  overload: System.Xaml.XamlType.ContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentWrappers
  id: ContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "De typen die worden gebruikt voor het inpakken van inhoud voor een eigenschap voor inhoud wanneer het niet strikt type overeenkomen, zoals tekenreeksen in een sterk getypeerde opgehaald <xref uid=&quot;langword_csharp_Collection&lt;T&gt;&quot; name=&quot;Collection&lt;T&gt;&quot; href=&quot;&quot;> </xref>."
  remarks: "Als er geen wrappers voor type overeen vergroten, wordt deze eigenschap is `null`.       Typen die worden ge√´valueerd als <xref:System.Xaml.XamlType.CanAssignTo%2A>voor een specifieke inhoudstype worden niet beschouwd als meerdere typen voor de doeleinden van ContentWrappers.</xref:System.Xaml.XamlType.CanAssignTo%2A>       In de CLR-binding voor <xref:System.Xaml>en <xref:System.Xaml.XamlType>de XAML-content wrapper-type kan worden opgegeven voor een type als een <xref:System.Windows.Markup.ContentWrapperAttribute>.</xref:System.Windows.Markup.ContentWrapperAttribute> </xref:System.Xaml.XamlType> </xref:System.Xaml>       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupContentWrappers%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupContentWrappers%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupContentWrappers%2A>voor dit type.</xref:System.Xaml.XamlType.LookupContentWrappers%2A>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> ContentWrappers { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Een verzameling alleen-lezen mogelijk inhoud wrapper typen; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Zie de opmerkingen."
  overload: System.Xaml.XamlType.ContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; die staat voor de uitgestelde conversie gedrag voor dit type laden."
  remarks: "XAML-sjabloon gedrag in WPF is een voorbeeld van het gedrag voor uitgesteld laden.       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupDeferringLoader%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupDeferringLoader%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupDeferringLoader%2A>voor dit type.</xref:System.Xaml.XamlType.LookupDeferringLoader%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "De &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; met <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> beperking die het gedrag voor uitgesteld laden voor dit type vertegenwoordigt."
  overload: System.Xaml.XamlType.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt aangegeven of het huidige object gelijk aan een ander object is."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object dat moet worden vergeleken met dit object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het huidige object is gelijk aan de <code> obj </code> parameter; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  id: Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt aangegeven of het huidige object gelijk aan een ander object van hetzelfde type is."
  syntax:
    content: public bool Equals (System.Xaml.XamlType other);
    parameters:
    - id: other
      type: System.Xaml.XamlType
      description: "Een object met dit object moet worden vergeleken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het huidige object is gelijk aan de <code> other </code> parameter; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  id: GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert de XAML-lid dat alias voor een XAML-instructie door <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze methode kunnen aanroepen <xref:System.Xaml.XamlType.LookupAliasedProperty%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAliasedProperty%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupAliasedProperty%2A>voor dit type.</xref:System.Xaml.XamlType.LookupAliasedProperty%2A>"
  syntax:
    content: public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "De instructie waarvoor u wilt zoeken naar het lid alias hebben."
    return:
      type: System.Xaml.XamlMember
      description: "Het lid alias als gevonden. anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.GetAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  id: GetAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een verzameling met alle koppelbare eigenschappen die door deze beschikbaar worden gesteld <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Elke <xref:System.Xaml.XamlMember>in de geretourneerde verzameling waarden die ondersteuning bieden voor het concept moet bevatten die de <xref:System.Xaml.XamlMember>lid is van een koppelbare.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember> Bijvoorbeeld leden als resultaat moeten geven `true` voor <xref:System.Xaml.XamlMember.IsAttachable%2A>, een type voor <xref:System.Xaml.XamlMember.TargetType%2A>, enzovoort.</xref:System.Xaml.XamlMember.TargetType%2A> </xref:System.Xaml.XamlMember.IsAttachable%2A>       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze methode kunnen aanroepen <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>voor dit type.</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "Een verzameling met nul of meer <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> waarden."
  overload: System.Xaml.XamlType.GetAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllMembers
  id: GetAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een verzameling met alle leden die beschikbaar worden gesteld door <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Aanroepen naar deze methode kunnen aanroepen <xref:System.Xaml.XamlType.LookupAllMembers%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllMembers%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "Een verzameling met nul of meer <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> waarden."
  overload: System.Xaml.XamlType.GetAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  id: GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> die een specifieke vertegenwoordigt met de naam toevoegbaar lid van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Aanroepen naar deze methode kunnen aanroepen <xref:System.Xaml.XamlType.LookupAttachableMember%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAttachableMember%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupAttachableMember%2A>virtueel is en daarom kan worden genegeerd.</xref:System.Xaml.XamlType.LookupAttachableMember%2A> Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde leden van een XAML-type wijzigen zodat deze niet langer uitgelijnd op een verwachte manier met de <xref:System.ComponentModel.TypeDescriptor> `Get*` informatie over het onderliggende type van de CLR.</xref:System.ComponentModel.TypeDescriptor> Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van lid reporting."
  syntax:
    content: public System.Xaml.XamlMember GetAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het koppelbare lid ophalen in `ownerTypeName.MemberName` formulier."
    return:
      type: System.Xaml.XamlMember
      description: "Een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> -object voor de aangevraagde toevoegbaar lid; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als er geen toevoegbaar lid met die naam bestaat."
  overload: System.Xaml.XamlType.GetAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert de hash-code voor dit object."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een geheel getal-hash-code."
  overload: System.Xaml.XamlType.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> voor een specifieke naam lid van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "De waarde voor `name` moet ongekwalificeerd wordt verwacht. Type gekwalificeerde namen die wijzen op een gekoppelde lid moeten worden verzonden naar <xref:System.Xaml.XamlType.GetAttachableMember%2A>in plaats daarvan.</xref:System.Xaml.XamlType.GetAttachableMember%2A> Het voorvoegsel van lid namen mogen niet worden gebruikt; een voorvoegsel situationeel op een gebruik is en het XAML-typesysteem kan niet weet de context van een dergelijk gebruik en hoe het voorvoegsel op dat is toegewezen.       Aanroepen naar deze methode kunnen aanroepen <xref:System.Xaml.XamlType.LookupMember%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupMember%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupMember%2A>virtueel is en daarom kan worden genegeerd.</xref:System.Xaml.XamlType.LookupMember%2A> Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde leden van een XAML-type wijzigen zodat deze niet langer uitgelijnd op een verwachte manier met de <xref:System.ComponentModel.TypeDescriptor> `Get*` informatie over het onderliggende type van de CLR.</xref:System.ComponentModel.TypeDescriptor> Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van lid reporting."
  syntax:
    content: public System.Xaml.XamlMember GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het lid om op te halen (als tekenreeks)."
    return:
      type: System.Xaml.XamlMember
      description: "De <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informatie voor het lid als zo&quot;n lid gevonden, anders wordt is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  id: GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Voor markup extensietypen, retourneert u de typen van de positionele parameters die worden ondersteund in een specifieke markup extension gebruik voor deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze API is alleen relevant als deze <xref:System.Xaml.XamlType>vertegenwoordigt een markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       De invoer `parameterCount` is niet voor het aanvragen van het type van een specifieke positionele parameter. Het is voor het opgeven van de ariteit van een markup extension gebruik. Markup extension gebruik vaak meerdere &quot;handtekeningen&quot; gebruikt, en andere ariteit (aantal) van positionele parameters te onderscheiden. U kunt echter de schemacontext van een dat dubbele arities zijn toegestaan en typen van de positionele parameters gebruiken voor differentiatie configureren. Zie voor meer informatie <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> Voor een specifieke ariteit (aantal), kunnen de parameter posities en typen vari√´ren. Als u het positionele type van een specifieke ariteit markup extension gebruik, moet u eerst GetPositionalParameters geven het aantal ariteit aanroepen. Vervolgens het item op die positie van de geretourneerde verzameling worden opgehaald.       Aanroepen naar deze methode kunnen aanroepen <xref:System.Xaml.XamlType.LookupPositionalParameters%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupPositionalParameters%2A>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> GetPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "Het aantal (ariteit) van de bepaalde syntaxis of constructor modus waarover u informatie weergeven wilt."
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Een lijst met <xref href=&quot;System.Xaml.XamlType&quot;> </xref> waarden, waarbij elke <xref href=&quot;System.Xaml.XamlType&quot;> </xref> is het type voor de betreffende positie in de syntaxis. Als u markup-invoer voor de opmaakextensie opgeeft, moet u de typen in dezelfde volgorde."
  overload: System.Xaml.XamlType.GetPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een lijst van een tekenreeks-id&quot;s voor XAML-naamruimten die het type is opgenomen in."
  remarks: "Typische XAML-naamruimte-id&quot;s zijn tekenreeksen in URI-notatie.       De standaardimplementatie in volgorde van het volgende gecontroleerd: de XAML-naamruimte die is opgegeven in de constructie (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> alleen handtekening); en de naamruimten die beschikbaar in de schemacontext zijn.</xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> Als deze elk `null`, een nieuwe lijst wordt gegenereerd met een lege tekenreeks. U kunt deze methode als u wilt wijzigen van de methode lookup overschrijven."
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Een lijst met waarden van verbindingsreeksen, waarbij elke tekenreeks de URI-id voor een XAML-naamruimte is."
  overload: System.Xaml.XamlType.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Invoker
  id: Invoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementatie die is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, Invoker aanroepen kan worden aangeroepen ofwel <xref:System.Xaml.XamlType.LookupInvoker%2A>of een bepaalde onderdrukking van deze methode.</xref:System.Xaml.XamlType.LookupInvoker%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupInvoker%2A>voor dit type.</xref:System.Xaml.XamlType.LookupInvoker%2A>       Als een <xref:System.Xaml.XamlType.LookupInvoker%2A>overschrijven retourneert `null`, of als de standaardimplementatie retourneert `null` vanwege een gebrek aan <xref:System.Xaml.XamlType.UnderlyingType%2A>voor deze <xref:System.Xaml.XamlType>klikt u vervolgens Invoker <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> retourneert</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Xaml.XamlType.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "De <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementatie die is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een ambient type, aan de hand van de XAML-definitie."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsAmbient%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsAmbient%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupIsAmbient%2A>voor dit type.</xref:System.Xaml.XamlType.LookupIsAmbient%2A>"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een ambient type; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsArray
  id: IsArray
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> een matrix vertegenwoordigt."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupCollectionKind%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupCollectionKind%2A>voor dit type.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> een matrix vertegenwoordigt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsCollection
  id: IsCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een verzameling."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupCollectionKind%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupCollectionKind%2A>voor dit type.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een verzameling; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsConstructible
  id: IsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een constructible, aan de hand van de XAML-definitie."
  remarks: "Deze eigenschap wordt uitgelijnd naar de `[is default constructible]` informatie item in de specificatie [MS-XAML].       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsConstructible%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsConstructible%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupIsConstructible%2A>voor dit type.</xref:System.Xaml.XamlType.LookupIsConstructible%2A>"
  syntax:
    content: public bool IsConstructible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een constructible; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsDictionary
  id: IsDictionary
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een woordenboek, volgens de XAML-definitie."
  remarks: "Deze eigenschap wordt uitgelijnd naar de `[is dictionary]` informatie item in de specificatie [MS-XAML].       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupCollectionKind%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupCollectionKind%2A>voor dit type.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsDictionary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een woordenboek; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsGeneric
  id: IsGeneric
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een generiek type."
  remarks: "Deze eigenschap is een helper-eigenschap waarmee wordt gecontroleerd of een null-waarde van <xref:System.Xaml.XamlType.TypeArguments%2A>.</xref:System.Xaml.XamlType.TypeArguments%2A> Er is geen specifieke `Lookup` methode betrekking hebben op IsGeneric."
  syntax:
    content: public bool IsGeneric { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een generiek type; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsGeneric*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsMarkupExtension
  id: IsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een opmaakextensie."
  remarks: "In termen van XAML-specificatie, dit type kunnen worden toegewezen aan `x:MarkupExtension` om te retourneren `true` voor IsMarkupExtension.       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>voor dit type.</xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>"
  syntax:
    content: public bool IsMarkupExtension { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een markup extension; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameScope
  id: IsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een XAML-namescope, aan de hand van de XAML-definitie."
  remarks: "Een XAML-namescope dwingt de uniekheid van de naam van de eigenschap of eigenschappen die worden gebruikt voor `x:Name`  /  `[name property]`. Als IsNameScope `true`, sommige mechanisme voor het afdwingen van uniekheid moet bestaan en moet evalueren vanuit het perspectief van dit type die eigenaar is van een XAML-namescope. De XAML-namescope wordt vervolgens naar de inhoud van het type breidt totdat een ander XAML die eigenaar is van namescope type wordt aangetroffen.       Deze eigenschap wordt uitgelijnd naar de `[is name scope]` informatie item in de specificatie [MS-XAML].       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsNameScope%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsNameScope%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsNameScope { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een XAML-namescope; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> is ge√Ønitialiseerd met behulp van een geldige <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> tekenreeks als de <xref:System.Xaml.XamlType.Name*>.</xref:System.Xaml.XamlType.Name*>"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> is ge√Ønitialiseerd met behulp van een geldige <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> reeks; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNullable
  id: IsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een type waarvoor null is toegestaan volgens de XAML-definitie."
  remarks: "Deze eigenschap wordt uitgelijnd naar de `[is nullable]` informatie item in de specificatie [MS-XAML].       Als u geen gebruikmaakt van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsNullable%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsNullable%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsNullable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een type waarvoor null is toegestaan; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsPublic
  id: IsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een openbaar type in het relevante typesysteem."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsPublic%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsPublic%2A> </xref:System.Xaml.XamlType>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupIsPublic%2A>virtueel is en daarom kan worden genegeerd.</xref:System.Xaml.XamlType.LookupIsPublic%2A> Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde toegang tot informatie over een XAML-type wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem- en informatie van de onderliggende CLR-type. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang."
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een openbaar type; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een type dat niet kan worden omgezet in het onderliggende typesysteem."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsUnknown%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsUnknown%2A> </xref:System.Xaml.XamlType>       Voor een load-pad dat betrekking heeft op <xref:System.Xaml.XamlObjectWriter>, een <xref:System.Xaml.XamlType>die heeft `true` voor IsUnknown kan niet worden geschreven in een objectgrafiek.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlObjectWriter> Onder de standaard-implementaties in <xref:System.Xaml>, wordt de <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName>aanroepen er wordt een <xref:System.Xaml.XamlObjectWriterException>wanneer de desbetreffende <xref:System.Xaml.XamlType>rapporten `true` voor IsUnknown.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName> </xref:System.Xaml> Moet u niet doorgeven een <xref:System.Xaml.XamlType>waarvoor IsUnknown als `true` tenzij u voorbereid bent voor het afhandelen van de uitzonderingen van <xref:System.Xaml.XamlObjectWriter>, of u over andere manieren om aan te passen de <xref:System.Xaml.XamlObjectWriter>gedrag of de XAML-knooppuntstroom voorafgaand aan de objectgrafiek schrijven.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een type onherleidbare; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  id: IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> boven naar beneden wordt samengesteld tijdens de initialisatie van XAML."
  remarks: "Boven naar beneden is een voorbeeld die XAML processor gedrag benadert bij het maken van de objectgrafiek. Wanneer gebouwd boven naar beneden, een type wordt gestart, wordt gekoppeld aan de bovenliggende en vervolgens heeft de eigenschappen instellen. Boven naar beneden constructie voorkomt eigenschap gewijzigd handlers wordt meerdere keren aangeroepen. Dergelijke verwerking ripples van de objectgrafiek en daarom meerdere aanroepen van de handler elimineert en biedt een optimalisatie voor opstarten van de prestaties van de objectgrafiek.       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>voor dit type.</xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>"
  syntax:
    content: public bool IsUsableDuringInitialization { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> is gebouwd boven naar beneden tijdens de initialisatie van de XAML, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  id: IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> een collectie witruimte aanzienlijke, aan de hand van de XML-definitie."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>voor dit type.</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>"
  syntax:
    content: public bool IsWhitespaceSignificantCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een aanzienlijke verzameling witruimte; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsXData
  id: IsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> XML vertegenwoordigt <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>, zoals per de XAML-definitie."
  remarks: "Deze eigenschap wordt uitgelijnd naar de `[is xdata]` informatie item in de specificatie [MS-XAML].       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsXData%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsXData%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupIsXData%2A>voor dit type.</xref:System.Xaml.XamlType.LookupIsXData%2A>"
  syntax:
    content: public bool IsXData { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.IsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ItemType
  id: ItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde waarmee de type-informatie voor de <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> eigenschap van dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze eigenschap is alleen relevant als deze <xref:System.Xaml.XamlType>vertegenwoordigt een verzameling (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`).</xref:System.Xaml.XamlType.IsCollection%2A> </xref:System.Xaml.XamlType> De `Items` eigenschap is de eigenschap bevat items in het desbetreffende type verzameling of matrix.       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupItemType%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupItemType%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupItemType%2A>voor dit type.</xref:System.Xaml.XamlType.LookupItemType%2A>"
  syntax:
    content: public System.Xaml.XamlType ItemType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Een <xref href=&quot;System.Xaml.XamlType&quot;> </xref> object voor het type van de items in de verzameling; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een verzameling."
  overload: System.Xaml.XamlType.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.KeyType
  id: KeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde waarmee de type-informatie voor de sleuteleigenschap van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, als de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een woordenlijst."
  remarks: "Deze eigenschap is alleen relevant als deze <xref:System.Xaml.XamlType>vertegenwoordigt een woordenboek (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).</xref:System.Xaml.XamlType.IsDictionary%2A> </xref:System.Xaml.XamlType>       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupKeyType%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupKeyType%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupKeyType%2A>voor dit type.</xref:System.Xaml.XamlType.LookupKeyType%2A>"
  syntax:
    content: public System.Xaml.XamlType KeyType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Een <xref href=&quot;System.Xaml.XamlType&quot;> </xref> object voor het type van de sleutel voor gebruik met woordenlijst, anders wordt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een woordenlijst."
  overload: System.Xaml.XamlType.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  id: LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert de XAML-lid dat alias voor een XAML-instructie door <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</xref:System.Xaml.XamlType.GetAliasedProperty%2A> krijgt       De standaardimplementatie kunt retourneren resultaten voor de volgende richtlijnen voor XAML: `Key`; `Name`; `Uid`; and `xml:lang`. Waarden voor deze afhankelijk van onderliggende reflectie zijn en mogelijk nog steeds retourneren `null` als geen alias-eigenschap is gevonden.       Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeemgegevens van de XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "De instructie waarvoor u wilt zoeken naar het lid alias hebben."
    return:
      type: System.Xaml.XamlMember
      description: "Het lid alias als gevonden. anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  id: LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een inventariseerbare set met alle koppelbare eigenschappen die door deze beschikbaar worden gesteld <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> krijgt       Hoewel <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>retourneert een algemene verzameling dit `Lookup` methode retourneert een algemene inventariseerbare.</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>       De standaardimplementatie maakt gebruik van de interne CLR-reflectie. Wanneer <xref:System.Xaml.XamlType.UnderlyingType%2A>is `null`, de standaardimplementatie kunt <xref:System.Xaml.XamlType.BaseType%2A>, als deze beschikbaar is.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Dit gedrag LookupAllAttachableMembers recursief om te proberen te vinden van een geldig basistype aanroept en retourneert `null` als er geen geldig basistype bestaat.       Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken. Een null geretourneerd moet voor gevallen waarin informatie kan niet worden vastgesteld vanwege het ontbreken van ondersteuning voor het systeem of reflectie van type worden gereserveerd. Als een geldig is en reflectie of andere technieken beschikbaar zijn, maar een type geen toevoegbare leden heeft, moet u in plaats daarvan een lege retourneren <xref:System.Collections.Generic.IEnumerable%601>ingesteld.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "Een inventariseerbare set met nul of meer <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> waarden; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllMembers
  id: LookupAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een inventariseerbare set met alle leden die beschikbaar worden gesteld door <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlType.GetAllMembers%2A>.</xref:System.Xaml.XamlType.GetAllMembers%2A> krijgt       Hoewel <xref:System.Xaml.XamlType.GetAllMembers%2A>retourneert een algemene verzameling dit `Lookup` methode retourneert een algemene inventariseerbare.</xref:System.Xaml.XamlType.GetAllMembers%2A>       De standaardimplementatie maakt gebruik van de interne CLR-reflectie. Voor gevallen waarin <xref:System.Xaml.XamlType.UnderlyingType%2A>is `null`, de standaardimplementatie kunt <xref:System.Xaml.XamlType.BaseType%2A>, als deze beschikbaar is.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Dit gedrag LookupAllMembers recursief om te proberen te vinden van een geldig basistype aanroept en retourneert `null` als er geen geldig basistype bestaat.       Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken. Een null geretourneerd moet voor gevallen waarin informatie kan niet worden vastgesteld vanwege het ontbreken van ondersteuning voor het systeem of reflectie van type worden gereserveerd. Als een type geldig is, zijn reflectie of andere technieken beschikbaar; Als een type geen leden heeft, moet u in plaats daarvan een lege retourneren <xref:System.Collections.Generic.IEnumerable%601>ingesteld.</xref:System.Collections.Generic.IEnumerable%601>       Retourwaarden voor LookupAllMembers en <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>moet sluiten elkaar wederzijds uit.</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> Als u een situatie waarin een systeemeigenschap back-ups maken het gebruik van een standaard exemplaar, evenals een koppelbare gebruik ondersteunen kunt hebt, dat dit lid moet worden gerapporteerd als twee verschillende <xref:System.Xaml.XamlMember>waarden met een waarde in de lijst met koppelbaar en andere in de lijst standaard leden.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "Een inventariseerbare set met nul of meer <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> waarden."
  overload: System.Xaml.XamlType.LookupAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  id: LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een lijst van de typen die beschikbaar zijn als de <xref:System.Xaml.XamlType.ContentProperty*>waarde voor dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Xaml.XamlType.ContentProperty*>"
  remarks: "Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</xref:System.Xaml.XamlType.AllowedContentTypes%2A> krijgt       Typen die worden ge√´valueerd als <xref:System.Xaml.XamlType.CanAssignTo%2A>voor een specifieke inhoudstype worden niet beschouwd als meerdere typen ten behoeve van <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</xref:System.Xaml.XamlType.AllowedContentTypes%2A> </xref:System.Xaml.XamlType.CanAssignTo%2A>       De standaardimplementatie kunt andere eigenschappen van <xref:System.Xaml.XamlType>(<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, of <xref:System.Xaml.XamlType.ItemType%2A>) een resultaat te krijgen.</xref:System.Xaml.XamlType.ItemType%2A> </xref:System.Xaml.XamlType.ContentProperty%2A> </xref:System.Xaml.XamlType.ContentWrappers%2A> </xref:System.Xaml.XamlType> De `Lookup` onderdrukt voor de voorgaande eigenschappenlijst kan ook worden aangeroepen in deze beslissing.       Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupAllowedContentTypes ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Een lijst met mogelijke typen inhoud."
  overload: System.Xaml.XamlType.LookupAllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  id: LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> voor een specifieke met de naam van deze koppelbare <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</xref:System.Xaml.XamlType.GetAttachableMember%2A> krijgt       De standaardimplementatie maakt gebruik van de interne CLR-reflectie. Wanneer <xref:System.Xaml.XamlType.UnderlyingType%2A>is `null`, de standaardimplementatie kunt <xref:System.Xaml.XamlType.BaseType%2A>, als deze beschikbaar is.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Dit gedrag LookupAttachableMember recursief om te proberen te vinden van een geldig basistype aanroept en retourneert `null` als er geen geldig basistype bestaat.       Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.      > [!IMPORTANT] > LookupAttachableMember virtueel is en daarom kan worden genegeerd. Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde leden van een XAML-type wijzigen zodat deze niet langer uitgelijnd op een verwachte manier met de <xref:System.ComponentModel.TypeDescriptor> `Get*` informatie over het onderliggende type van de CLR.</xref:System.ComponentModel.TypeDescriptor> Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van lid reporting."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het koppelbare lid ophalen in `ownerTypeName.MemberName` formulier."
    return:
      type: System.Xaml.XamlMember
      description: "Een <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> -object voor de aangevraagde toevoegbaar lid; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als er geen toevoegbaar lid met die naam bestaat."
  overload: System.Xaml.XamlType.LookupAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupBaseType
  id: LookupBaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> voor de onmiddellijke basistype van dit type XAML. Bepaling van deze waarde is gebaseerd op het onderliggende type van dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> en schemacontext."
  remarks: "Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlType.BaseType%2A>.</xref:System.Xaml.XamlType.BaseType%2A> krijgt       De standaardimplementatie mogelijk retourneren een interne constante die vertegenwoordigt de <xref:System.Object>Als <xref:System.Xaml.XamlType.UnderlyingType%2A>is `null`.</xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Object>       Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.      > [!IMPORTANT] > LookupBaseType virtueel is en daarom kan worden genegeerd. Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde informatie over een XAML-type wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem-informatie van de onderliggende CLR-type. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang."
  syntax:
    content: protected virtual System.Xaml.XamlType LookupBaseType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "De <xref href=&quot;System.Xaml.XamlType&quot;> </xref> voor de onmiddellijke basistype van dit type XAML."
  overload: System.Xaml.XamlType.LookupBaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCollectionKind
  id: LookupCollectionKind
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde van de <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref> -opsomming die wordt gedeclareerd welke specifieke verzameling typt u dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> gebruikt."
  remarks: "Deze methode wordt aangeroepen door een interne persoonlijke methode (geen enkele openbare `CollectionKind` of `GetCollectionKind` API bestaat op <xref:System.Xaml.XamlType>).</xref:System.Xaml.XamlType>       De standaardimplementatie maakt gebruik van de interne CLR-reflectie. Voor gevallen waarin <xref:System.Xaml.XamlType.UnderlyingType%2A>is `null`, de standaardimplementatie kunt <xref:System.Xaml.XamlType.BaseType%2A>, als deze beschikbaar is.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Dit gedrag roept indirect LookupCollectionKind recursief om te proberen te vinden van een geldig basistype; Deze retourneert <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>Als er geen geldig basistype bestaat.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> In het algemeen de standaardimplementatie gezocht naar de `Add` methode van het onderliggende type door reflectie. Als gevonden, de <xref:System.Reflection.MethodInfo>van de `Add` methode is onvoldoende informatie om te bepalen welke <xref:System.Xaml.Schema.XamlCollectionKind>waarde moet worden geretourneerd.</xref:System.Xaml.Schema.XamlCollectionKind> </xref:System.Reflection.MethodInfo> Anders wordt <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>       Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlCollectionKind
      description: "Een waarde van de <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref> opsomming."
  overload: System.Xaml.XamlType.LookupCollectionKind*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  id: LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> argumenten moet hebben (algemene beperkingen via <xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;> </xref>, initialisatie van de tekst of andere technieken XAML) om een geldig exemplaar van het type samen te stellen."
  remarks: "Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A> krijgt       Retourneert de standaardimplementatie `false` Typ systeem voor beschouwd als waardetypen in de CLR-typen. Voor andere dan waardetypen, CLR reflectie <xref:System.Reflection.ConstructorInfo>wordt gebruikt om te bepalen of er sprake is van een standaardconstructor.</xref:System.Reflection.ConstructorInfo>       Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken."
  syntax:
    content: protected virtual bool LookupConstructionRequiresArguments ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als constructie van een exemplaar een argumentwaarde vereist; anders wordt onwaar."
  overload: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentProperty
  id: LookupContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informatie voor de eigenschap content van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlType.ContentProperty%2A>.</xref:System.Xaml.XamlType.ContentProperty%2A> krijgt       De standaardimplementatie controleert <xref:System.Windows.Markup.ContentPropertyAttribute>voor de typedefinitie.</xref:System.Windows.Markup.ContentPropertyAttribute> U kunt ook controleren <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> De standaardimplementatie retourneert als deze controles geen een inhoudstype detecteert, `null`.       Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupContentProperty ();
    parameters: []
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>informatie voor de eigenschap content van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>. May be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentWrappers
  id: LookupContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee haalt u een lijst van <xref href=&quot;System.Xaml.XamlType&quot;> </xref> waarden die de inhoud wrappers voor deze vertegenwoordigen <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Een inhoud wrapper is een klasse die het type inhoud verzameling vertegenwoordigt wanneer de typen die worden gebruikt in deze verzameling niet aan het typesysteem zijn. De verzamelingsitems voor de inhoud wrapper typen moeten worden beperkt op enige wijze buiten <xref:System.Object>of gelijkwaardige object neutrale.</xref:System.Object> Deze beperking wordt alleen afgedwongen door het ontwerp of het doel van de eigenschappen die gebruikmaken van dat type en niet door het typesysteem. Meer dan √©√©n inhoud wrapper kan bestaan op een type.       Zie voor een van de voorbeeldklasse en elk scenario van de implementatie van WPF XAML <xref:System.Windows.Documents.InlineCollection>.</xref:System.Windows.Documents.InlineCollection>"
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupContentWrappers ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Een lijst met <xref href=&quot;System.Xaml.XamlType&quot;> </xref> waarden die de inhoud wrappers voor deze vertegenwoordigen <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Wanneer dit wordt ge√Ømplementeerd in een afgeleide klasse, retourneert een <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementatie."
  remarks: "Negeer deze methode voor de interne reflectie met een andere manier om CLR kenmerkwaarden te verkrijgen. In de afwezigheid van een onderdrukking gebruikt de interne routereflector typische CLR reflectie logica.       Retourneert de standaardimplementatie `null`."
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "Een <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementatie."
  overload: System.Xaml.XamlType.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -object, dat wordt gebruikt voor uitgesteld laden van XAML gedeclareerd objecten."
  remarks: "Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van <xref:System.Xaml.XamlType.DeferringLoader%2A>.</xref:System.Xaml.XamlType.DeferringLoader%2A> krijgt Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.DeferringLoader%2A>retourneren een andere waarde dan door de interne reflectie standaard is ingeschakeld en ook bieden aangepaste <xref:System.Xaml.Schema.XamlTypeInvoker>informatie.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType.DeferringLoader%2A>       De standaardimplementatie retourneert een object op basis van <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</xref:System.Windows.Markup.XamlDeferLoadAttribute> lezen U kunt ook controleren <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> Deze methode retourneert een waarde is niet beschikbaar als, `null`."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; die heeft een <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> -beperking voor de algemene."
  overload: System.Xaml.XamlType.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> dat is gekoppeld aan dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.Invoker%2A>.</xref:System.Xaml.XamlType.Invoker%2A>       De standaardimplementatie vereist niet dat een <xref:System.Xaml.XamlType>worden geconstrueerd met een van de constructors die een eerste <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker> doorgeven</xref:System.Xaml.XamlType> Echter, een <xref:System.Xaml.XamlType.UnderlyingType%2A>waarde moet aanwezig zijn voor de <xref:System.Xaml.XamlType>; anders wordt de standaardimplementatie retourneert `null`.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A>       Deze methode overschrijven als u ook een afgeleide klasse uit <xref:System.Xaml.Schema.XamlTypeInvoker>en u van plan bent te retourneren van de afgeleide klasse maken.</xref:System.Xaml.Schema.XamlTypeInvoker> Als u terugkeert `null`, <xref:System.Xaml.XamlType.Invoker%2A>retourneert <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>voor aanroepers.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlType.Invoker%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "De <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> informatie voor dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een ambient type, aan de hand van de XAML-definitie."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsAmbient%2A>.</xref:System.Xaml.XamlType.IsAmbient%2A>       De standaardimplementatie CLR reflectie gebruikt op de <xref:System.Xaml.XamlType.UnderlyingType%2A>en controleren van de basistypen.</xref:System.Xaml.XamlType.UnderlyingType%2A> Deze implementatie zoekt de <xref:System.Windows.Markup.AmbientAttribute>die wordt toegepast op het gewenste type definitie op het klasseniveau van de en retourneert `true` in dit geval.</xref:System.Windows.Markup.AmbientAttribute> Retourneren van alle andere gevallen `false`.       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsAmbient%2A>worden geretourneerd van een andere waarde dan wordt ingeschakeld door standaard interne reflectie.</xref:System.Xaml.XamlType.IsAmbient%2A>"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een ambient type; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsConstructible
  id: LookupIsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een constructible, aan de hand van de XAML-definitie."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsConstructible%2A>.</xref:System.Xaml.XamlType.IsConstructible%2A>       De standaardimplementatie CLR reflectie gebruikt op de <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> Het type moet concrete niet genest en gesloten. De standaardimplementatie wordt gecontroleerd of het type een waardetype en het rendement van <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A> is Voor een null <xref:System.Xaml.XamlType.UnderlyingType%2A>, deze methode retourneert `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsConstructible%2A>worden geretourneerd van een andere waarde dan wordt ingeschakeld door standaard interne reflectie.</xref:System.Xaml.XamlType.IsConstructible%2A>"
  syntax:
    content: protected virtual bool LookupIsConstructible ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een constructible; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  id: LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een opmaakextensie."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>       De standaardimplementatie bestaat alleen uit deze aanroep: `return CanAssignTo(XamlLanguage.MarkupExtension);` deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsMarkupExtension%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>       In termen van XAML-specificatie, dit type kunnen worden toegewezen aan `x:MarkupExtension` om te retourneren `true` voor <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>"
  syntax:
    content: protected virtual bool LookupIsMarkupExtension ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een markup extension; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNameScope
  id: LookupIsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een XAML-namescope, aan de hand van de XAML-definitie."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsNameScope%2A>.</xref:System.Xaml.XamlType.IsNameScope%2A>       De standaardimplementatie maakt een <xref:System.Xaml.XamlType.CanAssignTo%2A>indirect op basis van het type <xref:System.Windows.Markup.INameScope>.</xref:System.Windows.Markup.INameScope> aanroepen</xref:System.Xaml.XamlType.CanAssignTo%2A> <xref:System.Windows.Markup.INameScope>is een interface die is gedefinieerd in de assembly WindowsBase.</xref:System.Windows.Markup.INameScope> Deze techniek voor XAML namescope identificatie wordt gebruikt door WPF zowel en [!INCLUDE[TLA#tla_workflow](~/add/includes/tlasharptla-workflow-md.md)] implementaties van XAML.       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsNameScope%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.IsNameScope%2A>       Een XAML-namescope dwingt de uniekheid van de naam van de eigenschap of eigenschappen die worden gebruikt voor `x:Name`  /  `[name property]`. Als <xref:System.Xaml.XamlType.IsNameScope%2A>is `true`, en vervolgens een mechanisme voor het afdwingen van uniekheid moet bestaan en moet evalueren vanuit het perspectief van dit type die eigenaar is van een XAML-namescope.</xref:System.Xaml.XamlType.IsNameScope%2A> De XAML-namescope wordt vervolgens naar de inhoud van het type breidt totdat een ander XAML namescope dat type wordt aangetroffen."
  syntax:
    content: protected virtual bool LookupIsNameScope ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een XAML-namescope; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNullable
  id: LookupIsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een type waarvoor null is toegestaan volgens de XAML-definitie."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsNullable%2A>.</xref:System.Xaml.XamlType.IsNullable%2A>       De standaardimplementatie maakt om te bepalen op basis van het CLR-bibliotheek null kernconcept, vergeleken met <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> Voor een null <xref:System.Xaml.XamlType.UnderlyingType%2A>, wordt hiermee `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsNullable%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.IsNullable%2A>"
  syntax:
    content: protected virtual bool LookupIsNullable ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een type waarvoor null is toegestaan; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsPublic
  id: LookupIsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een openbaar type in het relevante typesysteem."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsPublic%2A>.</xref:System.Xaml.XamlType.IsPublic%2A>       De standaardimplementatie gebruikt CLR reflectie op basis van een niet-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> Voor een null <xref:System.Xaml.XamlType.UnderlyingType%2A>, wordt hiermee `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsPublic%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.IsPublic%2A>      > [!IMPORTANT] > LookupIsPublic virtueel is en daarom kan worden genegeerd. Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde toegang tot informatie over een XAML-type wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem- of -informatie van de onderliggende CLR-type. Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang."
  syntax:
    content: protected virtual bool LookupIsPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een openbaar type; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een type dat niet kan worden omgezet in het onderliggende typesysteem."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsUnknown%2A>.</xref:System.Xaml.XamlType.IsUnknown%2A>       De standaardimplementatie kunt CLR reflectie. Voor een null <xref:System.Xaml.XamlType.UnderlyingType%2A>, wordt hiermee `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsUnknown%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.IsUnknown%2A>"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een nonresolvable; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  id: LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> een collectie witruimte aanzienlijke, aan de hand van de XML-definitie."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>       De standaardimplementatie retourneert een waarde op basis van <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute> lezen U kunt ook controleren de <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> Als een waarde niet beschikbaar is, retourneert `false`.       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>"
  syntax:
    content: protected virtual bool LookupIsWhitespaceSignificantCollection ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een aanzienlijke verzameling spatietekens; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsXData
  id: LookupIsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> XML vertegenwoordigt <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>, zoals per de XAML-definitie."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsXData%2A>.</xref:System.Xaml.XamlType.IsXData%2A>       De standaardimplementatie maakt een <xref:System.Xaml.XamlType.CanAssignTo%2A>indirect op basis van het type <xref:System.Xml.Serialization.IXmlSerializable>.</xref:System.Xml.Serialization.IXmlSerializable> aanroepen</xref:System.Xaml.XamlType.CanAssignTo%2A>       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsXData%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.IsXData%2A>"
  syntax:
    content: protected virtual bool LookupIsXData ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupIsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupItemType
  id: LookupItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde waarmee de type-informatie voor de <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> eigenschap van dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.ItemType%2A>.</xref:System.Xaml.XamlType.ItemType%2A>       De standaardimplementatie kunt CLR reflectie concepten, zoals het controleren op een `Add` methode door <xref:System.Reflection.MethodInfo>en het gebruik van de <xref:System.Reflection.ParameterInfo>; controleren <xref:System.Xaml.XamlType.IsArray%2A>; en het controleren van <xref:System.Xaml.XamlType.BaseType%2A>en probeert dezelfde logica.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.IsArray%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MethodInfo>       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.ItemType%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.ItemType%2A> Indien <xref:System.Xaml.XamlType.LookupCollectionKind%2A>retourneert <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>als resultaat moet geven `null`.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> </xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupItemType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Een <xref href=&quot;System.Xaml.XamlType&quot;> </xref> object voor het type van de items in de verzameling; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een verzameling."
  overload: System.Xaml.XamlType.LookupItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupKeyType
  id: LookupKeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde waarmee de type-informatie voor de sleuteleigenschap van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, als de <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een woordenlijst."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.KeyType%2A>.</xref:System.Xaml.XamlType.KeyType%2A>       De standaardimplementatie kunt CLR reflectie concepten, zoals het controleren op een `Add` methode door <xref:System.Reflection.MethodInfo>en het gebruik van de <xref:System.Reflection.ParameterInfo>; en het controleren van <xref:System.Xaml.XamlType.BaseType%2A>en probeert dezelfde logica.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MethodInfo>       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.KeyType%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.KeyType%2A> Indien <xref:System.Xaml.XamlType.LookupCollectionKind%2A>retourneert geen <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>als resultaat moet geven `null`.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> </xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupKeyType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Een <xref href=&quot;System.Xaml.XamlType&quot;> </xref> object voor het type van de sleutel voor het gebruik van een woordenboek of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een woordenlijst"
  overload: System.Xaml.XamlType.LookupKeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  id: LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde waarmee de type-informatie voor de geretourneerde <xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;> </xref> van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, als deze een opmaakextensie vertegenwoordigt."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>       De standaardimplementatie retourneert een <xref:System.Xaml.XamlType>op basis van <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> lezen</xref:System.Xaml.XamlType> U kunt ook controleren <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> Als een waarde niet beschikbaar is, retourneert `null`.       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Een <xref href=&quot;System.Xaml.XamlType&quot;> </xref> -object voor het retourtype voor markup extension Gebruik; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt geen opmaakextensie."
  overload: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  id: LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert de <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> voor een specifieke naam lid van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.GetMember%2A>.</xref:System.Xaml.XamlType.GetMember%2A>       De standaardimplementatie retourneert een <xref:System.Xaml.XamlType>op basis van interne CLR reflectie en evaluatie aan de hand van de schemacontext.</xref:System.Xaml.XamlType>       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.GetMember%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.GetMember%2A>      > [!IMPORTANT] > LookupMember virtueel is en daarom kan worden genegeerd. Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde leden van een XAML-type wijzigen zodat deze niet langer uitgelijnd op een verwachte manier met de <xref:System.ComponentModel.TypeDescriptor> `Get*` informatie over het onderliggende type van de CLR.</xref:System.ComponentModel.TypeDescriptor> Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van lid reporting."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het lid om op te halen (als tekenreeks)."
    - id: skipReadOnlyCheck
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>een lid retourneren, zelfs als dat lid is een <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> waarde voor &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt;; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> niet retourneren een &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt; lid. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xaml.XamlMember
      description: "De <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informatie voor het lid als een lid gevonden, anders wordt is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  id: LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Voor markup extensietypen, retourneert u de typen van de positionele parameters die worden ondersteund in een specifieke markup extension gebruik voor deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</xref:System.Xaml.XamlType.GetPositionalParameters%2A>       De standaardimplementatie gebruikt interne reflectie-informatie op basis van een constructors zoeken en controleren van de ariteit. Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.GetPositionalParameters%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.GetPositionalParameters%2A>       Deze API is alleen relevant als deze <xref:System.Xaml.XamlType>vertegenwoordigt een markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       De invoer `parameterCount` is niet voor het aanvragen van het type van een specifieke positionele parameter. Het is voor het opgeven van de ariteit van een markup extension gebruik. Markup extension gebruik vaak meerdere handtekeningen gebruikt, en andere ariteit (aantal) van positionele parameters te onderscheiden. U kunt echter de schemacontext van een dat dubbele arities zijn toegestaan en typen van de positionele parameters gebruiken voor differentiatie configureren. Zie voor meer informatie <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> Voor een aantal specifieke ariteit kunnen parameter posities en typen vari√´ren. Als u het positionele type van een specifieke ariteit markup extension gebruik, u eerst aan te roepen <xref:System.Xaml.XamlType.GetPositionalParameters%2A>met het aantal ariteit.</xref:System.Xaml.XamlType.GetPositionalParameters%2A> Vervolgens het item op die positie van de geretourneerde verzameling worden opgehaald."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "Het aantal (ariteit) van de bepaalde syntaxis of constructor modus waarover u informatie weergeven wilt."
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Een lijst met <xref href=&quot;System.Xaml.XamlType&quot;> </xref> waarden waar elke zoals <xref href=&quot;System.Xaml.XamlType&quot;> </xref> is het type voor de betreffende positie in de syntaxis. U moet deze bestandstypen in dezelfde volgorde opgeven bij het opgeven van markup invoer voor de opmaakextensie."
  overload: System.Xaml.XamlType.LookupPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  id: LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een retouraanroep handler moet worden gebruikt voor de set-bewerkingen van opmaakextensies."
  remarks: "De standaardimplementatie retourneert een waarde op basis van <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> lezen U kunt ook controleren <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> Als een waarde niet beschikbaar is, retourneert `null`."
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> LookupSetMarkupExtensionHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
      description: "Een retouraanroep handler moet worden gebruikt voor de set-bewerkingen van opmaakextensies."
  overload: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  id: LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een handler moet worden gebruikt voor type-conversieprogramma gevallen instellen."
  remarks: "De standaardimplementatie retourneert een waarde op basis van <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</xref:System.Windows.Markup.XamlSetTypeConverterAttribute> lezen U kunt ook controleren <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> Als een waarde niet beschikbaar is, retourneert `null`."
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> LookupSetTypeConverterHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
      description: "Een handler moet worden gebruikt voor type-conversieprogramma gevallen instellen."
  overload: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  id: LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> moet worden geserialiseerd met behulp van een modus waarbij omringende witruimte verwijdert."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>       De standaardimplementatie retourneert een waarde op basis van <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute> lezen U kunt ook controleren <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> Als een waarde niet beschikbaar is, retourneert `false`."
  syntax:
    content: protected virtual bool LookupTrimSurroundingWhitespace ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> moet worden geserialiseerd in een modus omringende witruimte verwijdert, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; die heeft een <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> beperking, waarmee het gedrag voor waarden van dit type conversie <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.TypeConverter%2A>.</xref:System.Xaml.XamlType.TypeConverter%2A>       De standaardimplementatie retourneert een waarde op basis van <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> lezen De standaardimplementatie kunt ook controleren <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> Dit omvat ook speciale logica voor de conversie van de standaardwaarde van de opsommingen, algemene waardetypen en algemene typen. Als een waarde niet beschikbaar is, retourneert `null`.       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.TypeConverter%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.TypeConverter%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; met <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> beperking die gedrag voor waarden van dit type conversie vertegenwoordigt <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUnderlyingType
  id: LookupUnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert de CLR <xref:System.Type>die dit voltooiingscallback <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A>       De standaardimplementatie retourneert een intern veld. Dit veld in het algemeen tijdens de constructiefase is ge√Ønitialiseerd en de waarde is gebaseerd op welke constructor is aangeroepen en de informatie die u hebt opgegeven.       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.UnderlyingType%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.UnderlyingType%2A>"
  syntax:
    content: protected virtual Type LookupUnderlyingType ();
    parameters: []
    return:
      type: System.Type
      description: "De CLR <xref:System.Type>die dit voltooiingscallback <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Xaml.XamlType.LookupUnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  id: LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> boven naar beneden wordt samengesteld tijdens de initialisatie van XAML."
  remarks: "Boven naar beneden is een voorbeeld die XAML processor gedrag benadert bij het maken van de objectgrafiek. Wanneer gebouwd boven naar beneden, een type ge√Ønstantieerd gekoppeld aan de bovenliggende en de eigenschappen ervan is ingesteld. Boven naar beneden constructie voorkomt eigenschap gewijzigd handlers wordt meerdere keren aangeroepen. Dergelijke verwerking ripples van de objectgrafiek en daarom meerdere aanroepen van de handler elimineert en biedt een optimalisatie voor opstarten van de prestaties van de objectgrafiek.       Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>       De standaardimplementatie retourneert een waarde op basis van <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</xref:System.Windows.Markup.UsableDuringInitializationAttribute> lezen U kunt ook controleren <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> Als een waarde niet beschikbaar is, retourneert `false`.       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>"
  syntax:
    content: protected virtual bool LookupUsableDuringInitialization ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> is gebouwd boven naar beneden tijdens de initialisatie van de XAML, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; die heeft een <xref:System.Windows.Markup.ValueSerializer>beperking, waarmee de werking van de waarde-serialisatie voor waarden van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  remarks: "Deze methode kan worden aangeroepen door het aanroepen van <xref:System.Xaml.XamlType.ValueSerializer%2A>.</xref:System.Xaml.XamlType.ValueSerializer%2A>       De standaardimplementatie retourneert een waarde op basis van <xref:System.Windows.Markup.ValueSerializerAttribute>.</xref:System.Windows.Markup.ValueSerializerAttribute> lezen U kunt ook controleren <xref:System.Xaml.XamlType.BaseType%2A>voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.</xref:System.Xaml.XamlType.BaseType%2A> Dit omvat ook speciale logica voor standaard-serialisatie van opsommingen, algemene typen of algemene typen. Als een waarde niet beschikbaar is, retourneert `null`.       Deze methode als u wilt overschrijven <xref:System.Xaml.XamlType.ValueSerializer%2A>gebruiken verschillende logica.</xref:System.Xaml.XamlType.ValueSerializer%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; met <xref:System.Windows.Markup.ValueSerializer>beperking die waarde serialisatie gedrag voor waarden van dit vertegenwoordigt <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlType.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  id: MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde waarmee de type-informatie voor de geretourneerde <xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;> </xref> van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, als deze een opmaakextensie vertegenwoordigt."
  remarks: "Deze eigenschap is alleen relevant als deze <xref:System.Xaml.XamlType>vertegenwoordigt een markup extension (`x:MarkupExtension` bevindt zich in de lijst met bestandstypen kunnen worden toegewezen).</xref:System.Xaml.XamlType>       Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>voor dit type.</xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>"
  syntax:
    content: public System.Xaml.XamlType MarkupExtensionReturnType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Een <xref href=&quot;System.Xaml.XamlType&quot;> </xref> -object voor het retourtype voor markup extension Gebruik; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt geen opmaakextensie."
  overload: System.Xaml.XamlType.MarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Name
  id: Name
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "De naam van het type opgehaald die dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt."
  remarks: "Deze eigenschap wordt doorgaans de naam van de schema-samengesteld (per de <xref:System.Xaml.XamlType.%23ctor%2A>handtekening), of de naam van de <xref:System.Type>, als deze wordt samengesteld met behulp van de relevante constructor van het CLR-systeem.</xref:System.Type> </xref:System.Xaml.XamlType.%23ctor%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "De naam van dit type XAML."
  overload: System.Xaml.XamlType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt bepaald of twee opgegeven <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objecten dezelfde waarde hebben."
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van <code> xamlType1 </code> is hetzelfde als de waarde van <code> xamlType2 </code>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt bepaald of twee opgegeven <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objecten hebben verschillende waarden."
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van <code> xamlType1 </code> verschilt van de waarde van <code> xamlType2 </code>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt de enkel XAML-naamruimte die is de primaire XAML-naamruimte voor deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Deze implementatie biedt dezelfde waarde als het aanroepen <xref:System.Xaml.XamlType.GetXamlNamespaces%2A>en vervolgens de eerste waardetekenreeks van de geretourneerde inventariseerbare set.</xref:System.Xaml.XamlType.GetXamlNamespaces%2A>"
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "De id als een tekenreeks, van de primaire XAML-naamruimte voor dit type XAML."
  overload: System.Xaml.XamlType.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "De actieve opgehaald <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> voor de verwerking van dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlSchemaContext>is een vereiste parameter-vermelding bij het maken van een <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType></xref:System.Xaml.XamlSchemaContext>"
  syntax:
    content: public System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "De actieve <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> voor de verwerking van dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ToString
  id: ToString
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Retourneert een tekenreeksrepresentatie van deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "De <xref:System.Xaml.XamlType>uitvoering van <xref:System.Object.ToString%2A>de <xref:System.Xaml.XamlType.Name%2A>eigenschap van het <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.Name%2A> retourneert</xref:System.Object.ToString%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Een tekenreeksrepresentatie van dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  id: TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee wordt een waarde die aangeeft of dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> witruimte gedrag voor serialisatie die de omringende witruimte in de inhoud verwijdert voor het verwerken is."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>voor dit type.</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>"
  syntax:
    content: public bool TrimSurroundingWhitespace { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een type met witruimte bijsnijden, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.TrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeArguments
  id: TypeArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hiermee haalt u een lijst van typeargumenten voor gevallen waarin dit <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt een algemeen."
  remarks: "Er zijn bepaalde scenario&quot;s voor een <xref:System.Xaml.XamlType>waar het aanroepen van de parameter TypeArguments retourneert een lijst waarin de typen nog zijn geopend.</xref:System.Xaml.XamlType> In dit geval, een of meer van de geretourneerde <xref:System.Xaml.XamlType>waarden hebben tijdelijke aanduiding voor waarden voor <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>, zoals `T`, om aan te duiden dat de algemene nog geopend is.</xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName> </xref:System.Xaml.XamlType> Dit kan gebeuren als u krijgt een <xref:System.Xaml.XamlType>vanuit een aanroep van <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, in plaats van vanaf de implementatie van een XAML-lezer.</xref:System.Xaml.XamlSchemaContext.GetXamlType%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> TypeArguments { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Een lijst met type argumenttypen; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, als deze <xref href=&quot;System.Xaml.XamlType&quot;> </xref> vertegenwoordigt geen algemeen."
  overload: System.Xaml.XamlType.TypeArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; met <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> beperking dat vertegenwoordigt conversie gedrag voor waarden van deze typen <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupTypeConverter%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupTypeConverter%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupTypeConverter%2A>voor dit type.</xref:System.Xaml.XamlType.LookupTypeConverter%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; met <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> beperking dat vertegenwoordigt conversie gedrag voor waarden van deze typen <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.UnderlyingType
  id: UnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "De CLR opgehaald <xref:System.Type>die dit voltooiingscallback <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  syntax:
    content: public Type UnderlyingType { get; }
    return:
      type: System.Type
      description: "De CLR <xref:System.Type>die dit voltooiingscallback <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  overload: System.Xaml.XamlType.UnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Haalt een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; met <xref:System.Windows.Markup.ValueSerializer>beperking die waarde serialisatie gedrag voor waarden van dit vertegenwoordigt <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  remarks: "Als u geen gebruik van de standaard interne CLR reflectie techniek voor een <xref:System.Xaml.XamlType>, aanroepen naar deze eigenschap kunnen aanroepen <xref:System.Xaml.XamlType.LookupValueSerializer%2A>overschrijft op <xref:System.Xaml.XamlType>afgeleide klassen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupValueSerializer%2A> </xref:System.Xaml.XamlType> Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor <xref:System.Xaml.XamlType.LookupValueSerializer%2A>voor dit type.</xref:System.Xaml.XamlType.LookupValueSerializer%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "Een &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; met <xref:System.Windows.Markup.ValueSerializer>beperking die waarde serialisatie gedrag voor waarden van dit vertegenwoordigt <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlType.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.Xaml.XamlType}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlType>
  nameWithType: IList<XamlType>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
- uid: System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
- uid: System.Xaml.XamlType.AllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlType.ContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Equals(System.Object)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlDirective
  parent: System.Xaml
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
- uid: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XamlMember>
  nameWithType: ICollection<XamlMember>
  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.GetAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
- uid: System.Xaml.XamlType.GetHashCode
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlType.GetMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
- uid: System.Xaml.XamlType.GetXamlNamespaces
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Invoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
- uid: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XamlMember>
  nameWithType: IEnumerable<XamlMember>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
- uid: System.Xaml.XamlType.LookupBaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
- uid: System.Xaml.XamlType.LookupCollectionKind
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
- uid: System.Xaml.Schema.XamlCollectionKind
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlCollectionKind
  nameWithType: XamlCollectionKind
  fullName: System.Xaml.Schema.XamlCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
- uid: System.Xaml.XamlType.LookupContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
- uid: System.Xaml.XamlType.LookupContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
- uid: System.Xaml.XamlType.LookupInvoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
- uid: System.Xaml.XamlType.LookupIsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
- uid: System.Xaml.XamlType.LookupIsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
- uid: System.Xaml.XamlType.LookupIsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
- uid: System.Xaml.XamlType.LookupIsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
- uid: System.Xaml.XamlType.LookupIsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
- uid: System.Xaml.XamlType.LookupIsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
- uid: System.Xaml.XamlType.LookupIsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
- uid: System.Xaml.XamlType.LookupItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
- uid: System.Xaml.XamlType.LookupKeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
- uid: System.Xaml.XamlType.LookupTypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupUnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
- uid: System.Xaml.XamlType.LookupValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
- uid: System.Xaml.XamlType.#ctor*
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType
  nameWithType: XamlType.XamlType
- uid: System.Xaml.XamlType.AllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
- uid: System.Xaml.XamlType.CanAssignTo*
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo
  nameWithType: XamlType.CanAssignTo
- uid: System.Xaml.XamlType.ConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
- uid: System.Xaml.XamlType.ContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
- uid: System.Xaml.XamlType.Equals*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals
  nameWithType: XamlType.Equals
- uid: System.Xaml.XamlType.GetAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty
  nameWithType: XamlType.GetAliasedProperty
- uid: System.Xaml.XamlType.GetAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers
  nameWithType: XamlType.GetAllAttachableMembers
- uid: System.Xaml.XamlType.GetAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers
  nameWithType: XamlType.GetAllMembers
- uid: System.Xaml.XamlType.GetAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember
  nameWithType: XamlType.GetAttachableMember
- uid: System.Xaml.XamlType.GetHashCode*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode
  nameWithType: XamlType.GetHashCode
- uid: System.Xaml.XamlType.GetMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember
  nameWithType: XamlType.GetMember
- uid: System.Xaml.XamlType.GetPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters
  nameWithType: XamlType.GetPositionalParameters
- uid: System.Xaml.XamlType.GetXamlNamespaces*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlType.GetXamlNamespaces
- uid: System.Xaml.XamlType.Invoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty
  nameWithType: XamlType.LookupAliasedProperty
- uid: System.Xaml.XamlType.LookupAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers
  nameWithType: XamlType.LookupAllAttachableMembers
- uid: System.Xaml.XamlType.LookupAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers
  nameWithType: XamlType.LookupAllMembers
- uid: System.Xaml.XamlType.LookupAllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes
  nameWithType: XamlType.LookupAllowedContentTypes
- uid: System.Xaml.XamlType.LookupAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember
  nameWithType: XamlType.LookupAttachableMember
- uid: System.Xaml.XamlType.LookupBaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType
  nameWithType: XamlType.LookupBaseType
- uid: System.Xaml.XamlType.LookupCollectionKind*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind
  nameWithType: XamlType.LookupCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments
  nameWithType: XamlType.LookupConstructionRequiresArguments
- uid: System.Xaml.XamlType.LookupContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty
  nameWithType: XamlType.LookupContentProperty
- uid: System.Xaml.XamlType.LookupContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers
  nameWithType: XamlType.LookupContentWrappers
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlType.LookupCustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlType.LookupDeferringLoader
- uid: System.Xaml.XamlType.LookupInvoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlType.LookupInvoker
- uid: System.Xaml.XamlType.LookupIsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlType.LookupIsAmbient
- uid: System.Xaml.XamlType.LookupIsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible
  nameWithType: XamlType.LookupIsConstructible
- uid: System.Xaml.XamlType.LookupIsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension
  nameWithType: XamlType.LookupIsMarkupExtension
- uid: System.Xaml.XamlType.LookupIsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope
  nameWithType: XamlType.LookupIsNameScope
- uid: System.Xaml.XamlType.LookupIsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable
  nameWithType: XamlType.LookupIsNullable
- uid: System.Xaml.XamlType.LookupIsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic
  nameWithType: XamlType.LookupIsPublic
- uid: System.Xaml.XamlType.LookupIsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlType.LookupIsUnknown
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.LookupIsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData
  nameWithType: XamlType.LookupIsXData
- uid: System.Xaml.XamlType.LookupItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType
  nameWithType: XamlType.LookupItemType
- uid: System.Xaml.XamlType.LookupKeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType
  nameWithType: XamlType.LookupKeyType
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType
  nameWithType: XamlType.LookupMarkupExtensionReturnType
- uid: System.Xaml.XamlType.LookupMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember
  nameWithType: XamlType.LookupMember
- uid: System.Xaml.XamlType.LookupPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters
  nameWithType: XamlType.LookupPositionalParameters
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler
  nameWithType: XamlType.LookupSetMarkupExtensionHandler
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler
  nameWithType: XamlType.LookupSetTypeConverterHandler
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace
  nameWithType: XamlType.LookupTrimSurroundingWhitespace
- uid: System.Xaml.XamlType.LookupTypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlType.LookupTypeConverter
- uid: System.Xaml.XamlType.LookupUnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType
  nameWithType: XamlType.LookupUnderlyingType
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization
  nameWithType: XamlType.LookupUsableDuringInitialization
- uid: System.Xaml.XamlType.LookupValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlType.LookupValueSerializer
- uid: System.Xaml.XamlType.MarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
- uid: System.Xaml.XamlType.op_Equality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality
  nameWithType: XamlType.op_Equality
- uid: System.Xaml.XamlType.op_Inequality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality
  nameWithType: XamlType.op_Inequality
- uid: System.Xaml.XamlType.PreferredXamlNamespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext*
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString
  nameWithType: XamlType.ToString
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
