### YamlMime:ManagedReference
items:
- uid: System.Configuration.IApplicationSettingsProvider
  id: IApplicationSettingsProvider
  children:
  - System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: IApplicationSettingsProvider
  nameWithType: IApplicationSettingsProvider
  fullName: System.Configuration.IApplicationSettingsProvider
  type: Interface
  summary: "Hiermee definieert u uitgebreide mogelijkheden voor providers van toepassing op basis van een client-instellingen."
  remarks: "De architectuur van de instellingen voor toepassing kunt u een aangepaste opslagmechanisme voor toepassingsinstellingen door het maken van een aangepaste instellingen provider, waarmee een klasse is afgeleid van <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider> opgeven Deze klasse bevat de basisfunctionaliteit voor het opslaan en ophalen van eigenschappen. U kunt echter aanvullende gestandaardiseerde functionaliteit toevoegen door het implementeren van de interface IApplicationSettingsProvider in de provider van aangepaste instellingen. Deze interface bevat drie methoden die voornamelijk in staat de provider van instellingen voor meer multiplext ingang versiewijzigingen in de toepassing stellen. Normaal gesproken de provider van instellingen toepassingsinstellingen voor verschillende versies van een toepassing afzonderlijk om te anticiperen op de volgende omstandigheden worden opgeslagen:-Side-by-side uitvoering van verschillende versies van een toepassing.      -Toepassingsinstellingen behouden bij het upgraden van een toepassing.      -Opnieuw instellen van de toepassingsinstellingen op de standaardwaarden voor de huidige gebruikte versie.       De <xref:System.Configuration.LocalFileSettingsProvider>klasse implementeert de interface IApplicationSettingsProvider.</xref:System.Configuration.LocalFileSettingsProvider> Dezelfde set van methoden die deel uitmaken van IApplicationSettingsProvider staat ook in de <xref:System.Configuration.ApplicationSettingsBase>klasse, het inschakelen van de inrichting van een vooraf gedefinieerde communicatiekanaal tussen een wrapper toepassing-instellingen en de instellingen-provider.</xref:System.Configuration.ApplicationSettingsBase>      > [!NOTE] > Deze interface is optioneel. Als een provider deze interface niet implementeren kan, mislukt de instellingen voor infrastructuur zonder melding als deze probeert te krijgen tot een van de methoden die door deze interface is gedefinieerd."
  syntax:
    content: public interface IApplicationSettingsProvider
  implements: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Retourneert de waarde van de eigenschap opgegeven instellingen voor de vorige versie van dezelfde toepassing."
  remarks: "U kunt de methode GetPreviousVersion gebruiken in combinatie met de <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>methode voor het migreren van toepassingsinstellingen tijdens of na de installatie van een nieuwe versie van een toepassing.</xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> met een beschrijving van het huidige toepassingsgebruik."
    - id: property
      type: System.Configuration.SettingsProperty
      description: "De <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> waarvan de waarde moet worden geretourneerd."
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> met de waarde van de instelling van de opgegeven eigenschap omdat deze laatste is ingesteld in de vorige versie van de toepassing; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de instelling kan niet worden gevonden."
  overload: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hiermee stelt u de instellingen die zijn gekoppeld aan de opgegeven toepassing op hun standaardwaarden."
  remarks: "De methode voor opnieuw instellen wordt opnieuw geïnitialiseerd met de opgeslagen waarden van de opgegeven instellingen van de toepassingsgroep. Daarentegen <xref:System.Configuration.DefaultSettingValueAttribute>levert een standaardwaarde voor een eigenschap van enkele instellingen tijdens de initialisatie van de eigenschap als er geen opgeslagen waarde heeft.</xref:System.Configuration.DefaultSettingValueAttribute>       De provider van instellingen bepaalt wat redelijke standaardinstellingen zijn voor de opgegeven groep van toepassingsinstellingen. Bijvoorbeeld, de implementatie in <xref:System.Configuration.LocalFileSettingsProvider>stelt instellingen gericht op de gebruiker naar de gedeelde waarden in de `application.exe.config` bestand; daarentegen de toepassingsbereik instellingen ongewijzigd laat.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> met een beschrijving van het huidige toepassingsgebruik."
  overload: System.Configuration.IApplicationSettingsProvider.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hiermee wordt aangegeven met de provider de toepassing is bijgewerkt. Dit biedt een kans om de upgrade van de opgeslagen instellingen zo nodig de provider."
  remarks: ".NET Framework kunnen side-by-side-installatie en uitvoering van verschillende versies van dezelfde toepassing. De provider van de instellingen toepassing slaat de toepassingsinstellingen voor elke versie van een toepassing afzonderlijk om isolatie. Daarom is het raadzaam om instellingen te migreren van de vorige versie van een toepassing in het huidige proces. Deze om migratiefunctionaliteit te bieden, gebruiken de upgrademethode, geïmplementeerd in een klasse die is afgeleid van <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>       U kunt de upgrademethode gebruiken in combinatie met de <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>methode voor het migreren van toepassingsinstellingen tijdens of na de installatie van een nieuwe versie van een toepassing.</xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>       Deze methode moet worden onderdrukt voor elke toepassingsinstelling met de <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>is toegepast, of op de hele wrapper-klasse, afgeleid van <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.NoSettingsVersionUpgradeAttribute>"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Een <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> met een beschrijving van het huidige toepassingsgebruik."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Een <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> met de eigenschap instellingengroep waarvan de waarden moeten worden opgehaald."
  overload: System.Configuration.IApplicationSettingsProvider.Upgrade*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion
- uid: System.Configuration.IApplicationSettingsProvider.Reset*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: IApplicationSettingsProvider.Reset
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: IApplicationSettingsProvider.Upgrade
