### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.Binding
  id: Binding
  children:
  - System.Windows.Data.Binding.#ctor
  - System.Windows.Data.Binding.#ctor(System.String)
  - System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.AsyncState
  - System.Windows.Data.Binding.BindsDirectlyToSource
  - System.Windows.Data.Binding.Converter
  - System.Windows.Data.Binding.ConverterCulture
  - System.Windows.Data.Binding.ConverterParameter
  - System.Windows.Data.Binding.DoNothing
  - System.Windows.Data.Binding.ElementName
  - System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  - System.Windows.Data.Binding.IndexerName
  - System.Windows.Data.Binding.IsAsync
  - System.Windows.Data.Binding.Mode
  - System.Windows.Data.Binding.NotifyOnSourceUpdated
  - System.Windows.Data.Binding.NotifyOnTargetUpdated
  - System.Windows.Data.Binding.NotifyOnValidationError
  - System.Windows.Data.Binding.Path
  - System.Windows.Data.Binding.RelativeSource
  - System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  - System.Windows.Data.Binding.ShouldSerializePath
  - System.Windows.Data.Binding.ShouldSerializeSource
  - System.Windows.Data.Binding.ShouldSerializeValidationRules
  - System.Windows.Data.Binding.Source
  - System.Windows.Data.Binding.SourceUpdatedEvent
  - System.Windows.Data.Binding.TargetUpdatedEvent
  - System.Windows.Data.Binding.UpdateSourceExceptionFilter
  - System.Windows.Data.Binding.UpdateSourceTrigger
  - System.Windows.Data.Binding.ValidatesOnDataErrors
  - System.Windows.Data.Binding.ValidatesOnExceptions
  - System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  - System.Windows.Data.Binding.ValidationRules
  - System.Windows.Data.Binding.XmlNamespaceManagerProperty
  - System.Windows.Data.Binding.XPath
  langs:
  - csharp
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
  type: Class
  summary: "Op hoog niveau toegang biedt tot de definitie van een binding die verbinding de eigenschappen maakt van de binding doelobjecten (normaal gesproken [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] elementen), en elke gegevensbron (bijvoorbeeld, een database, een [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] bestand of een object met gegevens)."
  remarks: "[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]gegevensbinding biedt een eenvoudige en consistente manier om toepassingen te presenteren en interactie met gegevens. Gegevensbinding kunt u de waarden van de eigenschappen van twee verschillende objecten te synchroniseren.       Gebruik voor het opzetten van een binding van de Binding-klasse of een van de klassen die overnemen van <xref:System.Windows.Data.BindingBase>.</xref:System.Windows.Data.BindingBase> Ongeacht welk object u zijn binding en de aard van de gegevensbron, elke binding volgen het geïllustreerd door de volgende afbeelding.       ![Diagram van de binding basisgegevens](~/add/media/databindingmostbasic.png &quot;basisgegevens binding diagram&quot;) de afbeelding ziet u de volgende fundamentele [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] gegevens binding concepten.      -Elke binding heeft doorgaans de volgende vier onderdelen: een doelobject binding, een doeleigenschap, een binding-bron, en een <xref:System.Windows.Data.Binding.Path%2A>aan de waarde in de binding-bron om te gebruiken.</xref:System.Windows.Data.Binding.Path%2A> Bijvoorbeeld, als u wilt binden van de inhoud van een <xref:System.Windows.Controls.TextBox>aan de eigenschap Name van een object van de werknemer het doelobject is de <xref:System.Windows.Controls.TextBox>, de eigenschap target is de <xref:System.Windows.Controls.TextBox.Text%2A>-eigenschap de waarde om te gebruiken is de naam en het bronobject is het object van de werknemer.</xref:System.Windows.Controls.TextBox.Text%2A> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>      -De eigenschap target moet een afhankelijkheidseigenschap. Dit betekent ook dat u een veld kan niet binden. De meeste eigenschappen van <xref:System.Windows.UIElement>objecten afhankelijkheidseigenschappen zijn en de meeste-dependency properties, behalve voor alleen-lezen-netwerken, ondersteuning voor gegevensbinding standaard.</xref:System.Windows.UIElement> (Alleen <xref:System.Windows.DependencyObject>typen afhankelijkheidseigenschappen kunnen definiëren en alle <xref:System.Windows.UIElement>objecten die zijn afgeleid van <xref:System.Windows.DependencyObject>.)      -Hoewel niet is opgegeven in de afbeelding, houd er rekening mee dat de binding-bronobject niet is beperkt tot wordt een aangepaste [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] object.</xref:System.Windows.DependencyObject> </xref:System.Windows.UIElement> </xref:System.Windows.DependencyObject> [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]ondersteuning voor gegevensbinding gegevens in de vorm van [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] objecten en [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]. Voor enkele voorbeelden, de bron-binding mogelijk een <xref:System.Windows.UIElement>, een lijstobject, een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] object dat is gekoppeld aan [!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)] gegevens of webservices of een XmlNode met uw [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] gegevens.</xref:System.Windows.UIElement>       Gebruik de <xref:System.Windows.Data.Binding.Mode%2A>eigenschap om de richting van de gegevensstroom.</xref:System.Windows.Data.Binding.Mode%2A> Om te detecteren wijzigingen in gegevensbron in-of tweerichtingsbindingen, moet de bron een geschikte eigenschap wijziging meldingsmechanisme zoals <xref:System.ComponentModel.INotifyPropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged> implementeren Zie voor een voorbeeld [hoe: implementeer eigenschap Wijzigingsmelding](~/add/includes/ajax-current-ext-md.md). De <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>eigenschap geeft u de timing van updates van de bron.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> Zie voor meer informatie &quot;Basic gegevens Binding concepten&quot; in [Binding overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlAttributeUsage_PriorityBinding&quot;></a>## XAML Kenmerkgebruik ```   <object property=&quot;{Binding  declaration}&quot;/>   ``` <a name=&quot;xamlValues_PriorityBinding&quot;> </a> ## XAML waarden *declaratie* nul of meer componenten van kenmerk-toewijzing, gescheiden door een komma (,).       Zie voor meer informatie [Opmaakextensie Binding](~/add/includes/ajax-current-ext-md.md) of [Binding declaraties overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class Binding : System.Windows.Data.BindingBase'
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.Data.BindingBase
  implements: []
  inheritedMembers:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  platform:
  - net462
- uid: System.Windows.Data.Binding.#ctor
  id: '#ctor'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.Windows.Data.Binding.Binding()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> klasse."
  syntax:
    content: public Binding ();
    parameters: []
  overload: System.Windows.Data.Binding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Binding(String)
  nameWithType: Binding.Binding(String)
  fullName: System.Windows.Data.Binding.Binding(String)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> klasse met een initiële pad."
  syntax:
    content: public Binding (string path);
    parameters:
    - id: path
      type: System.String
      description: "De eerste <xref:System.Windows.Data.Binding.Path*>voor de binding.</xref:System.Windows.Data.Binding.Path*>"
  overload: System.Windows.Data.Binding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Voegt een handler voor de <xref:System.Windows.Data.Binding.SourceUpdated>gebeurtenis gekoppeld.</xref:System.Windows.Data.Binding.SourceUpdated>"
  remarks: "Deze methode ondersteunt het gebruik van de gekoppelde gebeurtenis in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "De <xref href=&quot;System.Windows.UIElement&quot;> </xref> of <xref href=&quot;System.Windows.ContentElement&quot;> </xref> die luistert naar de gebeurtenis."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "De handler om toe te voegen."
  overload: System.Windows.Data.Binding.AddSourceUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Voegt een handler voor de <xref:System.Windows.Data.Binding.TargetUpdated>gebeurtenis gekoppeld.</xref:System.Windows.Data.Binding.TargetUpdated>"
  remarks: "Deze methode ondersteunt het gebruik van de gekoppelde gebeurtenis in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "De <xref href=&quot;System.Windows.UIElement&quot;> </xref> of <xref href=&quot;System.Windows.ContentElement&quot;> </xref> die luistert naar de gebeurtenis."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "De handler om toe te voegen."
  overload: System.Windows.Data.Binding.AddTargetUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AsyncState
  id: AsyncState
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AsyncState
  nameWithType: Binding.AsyncState
  fullName: System.Windows.Data.Binding.AsyncState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld ondoorzichtige gegevens doorgegeven aan de dispatcher asynchrone gegevens."
  syntax:
    content: public object AsyncState { get; set; }
    return:
      type: System.Object
      description: "Gegevens doorgegeven aan de dispatcher asynchrone gegevens."
  overload: System.Windows.Data.Binding.AsyncState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.BindsDirectlyToSource
  id: BindsDirectlyToSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Een waarde die of aangeeft evalueren opgehaald of ingesteld de <xref:System.Windows.Data.Binding.Path*>ten opzichte van het gegevensitem of de <xref href=&quot;System.Windows.Data.DataSourceProvider&quot;> </xref> object.</xref:System.Windows.Data.Binding.Path*>"
  remarks: "De normale werking (als deze eigenschap is `false`) bevat voor een speciale behandeling <xref:System.Windows.Data.DataSourceProvider>objecten.</xref:System.Windows.Data.DataSourceProvider> In dit geval wordt het bindingprogramma evalueert de <xref:System.Windows.Data.Binding.Path%2A>ten opzichte van het object dat is verkregen van de <xref:System.Windows.Data.DataSourceProvider.Data%2A>eigenschap.</xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.Binding.Path%2A> Bovendien de binding luistert naar de <xref:System.Windows.Data.DataSourceProvider.DataChanged>gebeurtenis en dienovereenkomstig reageert.</xref:System.Windows.Data.DataSourceProvider.DataChanged> Deze eigenschap instelt op `true` overschrijft dit gedrag en de binding-toegang tot de eigenschappen van de <xref:System.Windows.Data.DataSourceProvider>object zelf.</xref:System.Windows.Data.DataSourceProvider>"
  syntax:
    content: public bool BindsDirectlyToSource { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>evalueren van het pad ten opzichte van het gegevensitem zelf. anders <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.BindsDirectlyToSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Converter
  id: Converter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van de converter te gebruiken."
  remarks: "Een binding maakt impliciet gebruik van een standaard-conversieprogramma die probeert uit te voeren van een typeconversie tussen de bronwaarde en de doelwaarde. Als een conversie kan niet worden gemaakt, het standaard conversieprogramma retourneert `null`.       Als u een aangepaste waarde converter koppelen met een binding wilt, moet u een klasse die implementeert maken de <xref:System.Windows.Data.IValueConverter>interface en verstrekken van implementaties voor de <xref:System.Windows.Data.IValueConverter.Convert%2A>en <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>methoden.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> </xref:System.Windows.Data.IValueConverter> Waarde converters kunnen wijzigen van gegevens van het ene type, vertalen tussen culturele details zoals tekensets of andere aspecten van hun presentatie wijzigen. Zie voor voorbeelden van typische conversie scenario&quot;s, &quot;Data conversie&quot; in de [Binding overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlAttributeUsage_Converter&quot;></a>## XAML Kenmerkgebruik ```   <object Converter=&quot;myConverter&quot;/>   ``` <a name=&quot;xamlValues_Converter&quot;> </a> ## XAML waarden *myConverter* een resourceverwijzing naar een klasse die implementeert de <xref:System.Windows.Data.IValueConverter>interface, waardoor implementaties van bevat de <xref:System.Windows.Data.IValueConverter.Convert%2A>en <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>methoden.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> </xref:System.Windows.Data.IValueConverter>       Om te verwijzen naar een waardeconversieprogramma, gebruiken de [StaticResource Opmaakextensie](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.IValueConverter Converter { get; set; }
    return:
      type: System.Windows.Data.IValueConverter
      description: "Een waarde van het type <xref href=&quot;System.Windows.Data.IValueConverter&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ConverterCulture
  id: ConverterCulture
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van de cultuur waarin de converter evalueren."
  remarks: "Als deze eigenschap niet is ingesteld, wordt de binding-engine gebruikt de `Language` eigenschap van het doelobject voor de binding. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] dit wordt standaard ingesteld op &quot;en-US&quot; of de waarde van het hoofdelement (of een onderdeel) van de pagina overgenomen als een expliciet is ingesteld.       Zie voor informatie over de conversie van de conversie-sectie in het [Binding overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Globalization.CultureInfo ConverterCulture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ConverterCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ConverterParameter
  id: ConverterParameter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van de parameter doorgeven aan de <xref:System.Windows.Data.Binding.Converter*>.</xref:System.Windows.Data.Binding.Converter*>"
  remarks: "U kunt de eigenschap ConverterParameter gebruiken om op te geven hoe een object wordt geconverteerd.  Deze eigenschap geeft aanvullende informatie aan een conversieprogramma die u voor een binding gebruikt.  Wanneer u een ConverterParameter opgeeft, wordt de waarde doorgegeven aan de <xref:System.Windows.Data.IValueConverter.Convert%2A>en <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>methoden als de `parameter` parameter.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A>       Zie voor een voorbeeld [hoe: een waarde op basis van een lijst van gebonden Items produceren](~/add/includes/ajax-current-ext-md.md). Dit voorbeeld ziet u een implementatie van een <xref:System.Windows.Data.IMultiValueConverter>maar het gebruik nog steeds van toepassing.</xref:System.Windows.Data.IMultiValueConverter>"
  syntax:
    content: public object ConverterParameter { get; set; }
    return:
      type: System.Object
      description: "De parameter doorgeven aan de <xref:System.Windows.Data.Binding.Converter*>.</xref:System.Windows.Data.Binding.Converter*> De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ConverterParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.DoNothing
  id: DoNothing
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: DoNothing
  nameWithType: Binding.DoNothing
  fullName: System.Windows.Data.Binding.DoNothing
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Als een geretourneerde waarde gebruikt instrueren de binding-engine geen acties uitvoeren."
  remarks: "Eigenschap binding bron of een conversieprogramma kan worden geretourneerd DoNothing instructies van de binding-engine geen acties uitvoeren. Bijvoorbeeld, als de binding-engine niet een waarde wilt overbrengen naar het doel van de binding, niet worden verplaatst naar de volgende instructie <xref:System.Windows.Data.Binding>in een <xref:System.Windows.Data.PriorityBinding>, te gebruiken of de `FallBackValue` of standaardwaarde.</xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public static readonly object DoNothing;
    return:
      type: System.Object
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ElementName
  id: ElementName
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van de naam van het element moet worden gebruikt als het bronobject binding."
  remarks: "Deze eigenschap is handig als u wilt koppelen aan de eigenschap van een ander element in uw toepassing. Bijvoorbeeld, als u wilt gebruiken een <xref:System.Windows.Controls.Slider>waarmee de hoogte van een ander besturingselement in uw toepassing, of als u wilt binden de <xref:System.Windows.Controls.ContentControl.Content%2A>van het besturingselement aan de <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A>eigenschap van uw <xref:System.Windows.Controls.ListBox>besturingselement.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> </xref:System.Windows.Controls.ContentControl.Content%2A> </xref:System.Windows.Controls.Slider>       Standaard bindingen overgenomen door de gegevenscontext die is opgegeven door de `DataContext` eigenschap als een is ingesteld. De eigenschap ElementName is een van de manieren kunt u de bron van expliciet instellen echter een <xref:System.Windows.Data.Binding>en de overgenomen gegevenscontext overschrijven.</xref:System.Windows.Data.Binding> Zie voor meer informatie [hoe: Geef de bron Binding](~/add/includes/ajax-current-ext-md.md).       De <xref:System.Windows.Data.Binding.Source%2A>en <xref:System.Windows.Data.Binding.RelativeSource%2A>Eigenschappen van de <xref:System.Windows.Data.Binding>klasse kunt u instellen van de bron van de binding ook expliciet.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.Source%2A> Echter slechts één van de volgende drie eigenschappen, ElementName, <xref:System.Windows.Data.Binding.Source%2A>, en <xref:System.Windows.Data.Binding.RelativeSource%2A>, moet worden ingesteld voor elke binding of een conflict optreden.</xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.Source%2A> Deze eigenschap er een uitzondering gegenereerd als er een bindingsconflict-bron."
  syntax:
    content: public string ElementName { get; set; }
    return:
      type: System.String
      description: "De waarde van de <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> eigenschap of [x: Name richtlijn](~/add/includes/ajax-current-ext-md.md) van het element van belang. U kunt verwijzen naar de elementen in de code alleen als ze zijn geregistreerd op de juiste <xref:System.Windows.NameScope>via <xref uid=&quot;langword_csharp_RegisterName&quot; name=&quot;RegisterName&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.NameScope> Zie voor meer informatie [WPF XAML Namescopes](~/add/includes/ajax-current-ext-md.md).       De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  id: GetXmlNamespaceManager(System.Windows.DependencyObject)
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: GetXmlNamespaceManager(DependencyObject)
  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)
  fullName: System.Windows.Data.Binding.GetXmlNamespaceManager(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Retourneert een [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] naamruimte manager object dat wordt gebruikt door de binding die is gekoppeld aan het opgegeven object."
  remarks: "Deze methode ondersteunt het gebruik van de gekoppelde eigenschap voor de <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>die eigenschap zijn gekoppeld.</xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>       [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]naamruimte managers zijn alleen van belang als de gegevens in de binding afkomstig zijn van een [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] binding bron (<xref:System.Windows.Data.XmlDataProvider> object).</xref:System.Windows.Data.XmlDataProvider>       Als een naamruimte manager niet specifiek toegepast is in de oorspronkelijke bron maken of door het aanroepen van vervolgens <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>op de binding met deze methode retourneert `null`.</xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>       Deze methode retourneert altijd `null` als de gegevens achter de binding niet [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]."
  syntax:
    content: public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "Het object waaruit de informatie van de naamruimte ophalen."
    return:
      type: System.Xml.XmlNamespaceManager
      description: "Een geretourneerde object dat wordt gebruikt om weer te geven [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] naamruimten die betrekking op de binding voor het element doorgegeven object hebben. Dit object moet worden geconverteerd als &lt;xref:System.Xml.XmlNamespaceManager?displayProperty=fullName&gt;."
  overload: System.Windows.Data.Binding.GetXmlNamespaceManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> target </code> parameter mag niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Data.Binding.IndexerName
  id: IndexerName
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: IndexerName
  nameWithType: Binding.IndexerName
  fullName: System.Windows.Data.Binding.IndexerName
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Gebruikt als de <xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*>van &lt;xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName&gt; om aan te geven dat een indexeereigenschap is gewijzigd.</xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*>"
  syntax:
    content: public const string IndexerName;
    return:
      type: System.String
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.IsAsync
  id: IsAsync
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: IsAsync
  nameWithType: Binding.IsAsync
  fullName: System.Windows.Data.Binding.IsAsync
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> moet get en set waarden asynchroon."
  remarks: "Gebruik de eigenschap IsAsync wanneer de `get` accessor van de eigenschap binding source lang kan duren. Een voorbeeld hiervan is de eigenschap van een afbeelding met een `get` accessor die kan worden gedownload via het Web. IsAsync instelt op `true` voorkomt blokkeert de [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] tijdens het downloaden plaatsvindt.       Tijdens het wachten op voor de waarde moet worden uitgevoerd, de binding rapporteert de <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, als een beschikbaar is, of de standaardwaarde van de binding eigenschap target.</xref:System.Windows.Data.BindingBase.FallbackValue%2A>       Echter, er mag niet zijn veel scenario&quot;s waarbij u moet de eigenschap IsAsync gebruiken. De [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] richtlijnen raden het definiëren van eigenschappen die orde van grootte trager dan een veldenset zou zijn. Wanneer u uw klasse maken wilt, rekening houden met afhandeling van zeer traag operations buiten de `get` accessor en caching van het resultaat. Zie voor meer informatie [KROONTJESPEN: kiezen tussen eigenschappen en methoden](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)."
  syntax:
    content: public bool IsAsync { get; set; }
    return:
      type: System.Boolean
      description: "De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Mode
  id: Mode
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die aangeeft van de richting van de gegevensstroom in de binding."
  remarks: "Voor de ondersteuning <xref:System.Windows.Data.BindingMode>en <xref:System.Windows.Data.BindingMode>de onderliggende gegevens bindingen <xref:System.ComponentModel.INotifyPropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged> moeten implementeren</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Zie voor meer informatie [hoe: implementeer eigenschap Wijzigingsmelding](~/add/includes/ajax-current-ext-md.md).       Voor <xref:System.Windows.Data.BindingMode>of <xref:System.Windows.Data.BindingMode>Bindingen, kunt u de target naar source-updates beheren door in te stellen de <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>eigenschap.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Zie voor meer informatie <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>       Zie voor meer informatie over de modi andere binding [Binding overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.BindingMode Mode { get; set; }
    return:
      type: System.Windows.Data.BindingMode
      description: "Een van de <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> waarden. De standaardwaarde is <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref>, die de standaardwaarde voor het modus van binding van de eigenschap target dependency retourneert. De standaardwaarde is echter voor elke afhankelijkheidseigenschap. Eigenschappen van de gebruiker worden bewerkt besturingselement, zoals die van de tekstvakken en selectievakjes standaard in het algemeen wederzijdse bindingen, terwijl de meeste andere eigenschappen standaard eenrichtingsbindingen.       Een programmatische manier om te bepalen of een afhankelijkheidseigenschap of twee richtingen standaard verbindt is het ophalen van de metagegevens van de eigenschap van het gebruik van de eigenschap <> </> *> en controleer vervolgens de Boole-waarde van de <> </> *> eigenschap."
  overload: System.Windows.Data.Binding.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated
  id: NotifyOnSourceUpdated
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.Binding.NotifyOnSourceUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die of u aangeeft wilt genereren de <xref:System.Windows.Data.Binding.SourceUpdated>gebeurtenis geactiveerd wanneer er een waarde van de doelentiteit binding wordt doorgegeven aan de bron van de binding.</xref:System.Windows.Data.Binding.SourceUpdated>"
  syntax:
    content: public bool NotifyOnSourceUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Windows.Data.Binding.SourceUpdated>gebeurtenis moet worden geactiveerd wanneer de waarde van de bron binding bijgewerkt, anders wordt is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.Binding.SourceUpdated> De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnSourceUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated
  id: NotifyOnTargetUpdated
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.Binding.NotifyOnTargetUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die of u aangeeft wilt genereren de <xref:System.Windows.Data.Binding.TargetUpdated>gebeurtenis geactiveerd wanneer er een waarde van de bron van de binding wordt doorgegeven aan het doel van de binding.</xref:System.Windows.Data.Binding.TargetUpdated>"
  syntax:
    content: public bool NotifyOnTargetUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Windows.Data.Binding.TargetUpdated>gebeurtenis moet worden geactiveerd wanneer de doelwaarde van binding bijgewerkt, anders is, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.Binding.TargetUpdated> De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnTargetUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die of u aangeeft wilt genereren de <xref:System.Windows.Controls.Validation.Error>gebeurtenis in het afhankelijke object gekoppeld.</xref:System.Windows.Controls.Validation.Error>"
  remarks: "Als de binding heeft <xref:System.Windows.Data.Binding.ValidationRules%2A>gekoppeld, controleert het bindingprogramma elke regel elke keer dat de waarde van de eigenschap target overgebracht naar de eigenschap source.</xref:System.Windows.Data.Binding.ValidationRules%2A> Als een regel wordt een waarde ongeldig, het bindingprogramma maakt een <xref:System.Windows.Controls.ValidationError>object en voegt u deze naar de <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> verzameling van het gekoppelde object.</xref:System.Windows.Controls.Validation.Errors%2A> </xref:System.Windows.Controls.Validation> </xref:System.Windows.Controls.ValidationError> Wanneer de <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>eigenschap is niet leeg is, wordt de <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>gekoppelde eigenschap van het object is ingesteld op `true`.</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Als de eigenschap NotifyOnValidationError van de <xref:System.Windows.Data.Binding>is ingesteld op `true`, en vervolgens het bindingprogramma verhoogt de <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>gebeurtenis op het object gekoppeld.</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding>       Zie de sectie gegevensvalidatie in voor een gedetailleerde bespreking van het validatieproces de [Binding overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Windows.Controls.Validation.Error>gekoppelde gebeurtenis moet worden verhoogd van het afhankelijke object wanneer er een validatiefout opgetreden tijdens het bijwerken van de bron, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.Validation.Error> De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Path
  id: Path
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van het pad naar de eigenschap binding source."
  remarks: "Elke binding heeft doorgaans de volgende vier onderdelen: een doelobject binding, een doeleigenschap, een binding-bron en een pad naar de waarde in de binding-bron om te gebruiken. Zie voor meer informatie over deze concepten van de binding gegevens [Binding overzicht](~/add/includes/ajax-current-ext-md.md).       De eigenschap Path gebruiken om op te geven van de bronwaarde die u koppelen wilt aan: - In de meest eenvoudige geval heeft de waarde van de eigenschap de naam van de eigenschap van het bronobject is gebruiken voor de binding, zoals pad `Path=PropertyName`.      -Subeigenschappen van een eigenschap kunnen worden opgegeven door een syntaxisfout vergelijkbaar met die gebruikt in [!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]. Bijvoorbeeld, de component `Path=ShoppingCart.Order` stelt de binding op de subeigenschap `Order` van het object of eigenschap `ShoppingCart`.      -Als u wilt koppelen aan een gekoppelde eigenschap, de gekoppelde eigenschap tussen haakjes te plaatsen. Als u bijvoorbeeld verbinding maken met de gekoppelde eigenschap <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>, de syntaxis is `Path=(DockPanel.Dock)`.</xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>      -Indexeerfuncties van een eigenschap kunnen worden opgegeven tussen vierkante haken achter de eigenschapsnaam wanneer de indexeerfunctie wordt toegepast. Bijvoorbeeld, de component `Path=ShoppingCart[0]` ingesteld van de binding aan de index die overeenkomt met de letterlijke tekenreeks &quot;0&quot; hoe uw eigendom interne indexeren verwerkt. Meerdere indexeerfuncties worden ook ondersteund.      -Indexeerfuncties en subeigenschappen kunnen worden gecombineerd een `Path` component, bijvoorbeeld `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].` - binnen indexeerfuncties die u kunt meerdere parameters voor de indexeerfunctie gescheiden door een komma (,) hebben. Het type van elke parameter kan worden opgegeven met haakjes. U kunt bijvoorbeeld hebben `Path=&quot;[(sys:Int32)42,(sys:Int32)24]&quot;`, waarbij `sys` is toegewezen aan de `System` naamruimte.      -Wanneer de bron een verzamelingweergave is, kan het huidige item kan worden opgegeven met een slash (/). Bijvoorbeeld, de component `Path=/` ingesteld van de binding aan het huidige item in de weergave. Wanneer de bron een verzameling is, wordt deze syntaxis het huidige item van de standaardweergave voor de verzameling.      -Eigenschapsnamen en slashes kunnen worden gecombineerd om eigenschappen die verzamelingen zijn. Bijvoorbeeld: `Path=/Offices/ManagerName` geeft het huidige item van de bronverzameling waarin een `Offices` eigenschap die is ook een verzameling. Het huidige item is een object met een `ManagerName` eigenschap.      -Een punt (.)-pad kan eventueel binden aan de huidige bron worden gebruikt. Bijvoorbeeld: `Text=&quot;{Binding}&quot;` is gelijk aan `Text=&quot;{Binding Path=.}&quot;`.       Zie voor meer informatie over de padsyntaxis van het [Binding declaraties overzicht](~/add/includes/ajax-current-ext-md.md) of [PropertyPath-syntaxis voor XAML](~/add/includes/ajax-current-ext-md.md).       Voor [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] bindingen, Zie de <xref:System.Windows.Data.Binding.XPath%2A>eigenschap.</xref:System.Windows.Data.Binding.XPath%2A>       Als u wilt koppelen aan een gehele object, hoeft u niet om op te geven van de eigenschap Path. Zie voor meer informatie &quot;Het pad naar de waarde opgeven&quot; in [Binding overzicht](../Topic/Data%20Binding%20Overview.md)."
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property. For more information on this example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]"
  syntax:
    content: public System.Windows.PropertyPath Path { get; set; }
    return:
      type: System.Windows.PropertyPath
      description: "Het pad naar de bron van de binding. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RelativeSource
  id: RelativeSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van de bron van de binding door te geven van de locatie ten opzichte van de positie van het doel van de binding."
  remarks: "Deze eigenschap wordt meestal gebruikt voor een eigenschap van een object binden aan een andere eigenschap van hetzelfde object, of voor het definiëren van een binding in een stijl of sjabloon.       Standaard bindingen overgenomen door de gegevenscontext die is opgegeven door de `DataContext` eigenschap als een is ingesteld. De eigenschap RelativeSource is een van de manieren kunt u de bron van expliciet instellen echter een <xref:System.Windows.Data.Binding>en de overgenomen gegevenscontext overschrijven.</xref:System.Windows.Data.Binding> Zie voor meer informatie [hoe: Geef de bron Binding](~/add/includes/ajax-current-ext-md.md).       De <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName>en <xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName>Eigenschappen kunnen u instellen van de bron van de binding ook expliciet.</xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> Echter slechts één van de drie eigenschappen <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, RelativeSource, voor elke binding moet worden ingesteld en kan een conflict optreden.</xref:System.Windows.Data.Binding.Source%2A> </xref:System.Windows.Data.Binding.ElementName%2A> Deze eigenschap er een uitzondering gegenereerd als er een bindingsconflict-bron.       Voor [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informatie, Zie [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlTextUsage_RelativeSource&quot;></a>## XAML tekst gebruik"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the RelativeSource property. For more information on this example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]  \n  \n To see the full example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public System.Windows.Data.RelativeSource RelativeSource { get; set; }
    return:
      type: System.Windows.Data.RelativeSource
      description: "Een <xref href=&quot;System.Windows.Data.RelativeSource&quot;> </xref> -object dat de relatieve locatie van de bron van de binding om te gebruiken. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.RelativeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee verwijdert u een handler voor de <xref:System.Windows.Data.Binding.SourceUpdated>gebeurtenis gekoppeld.</xref:System.Windows.Data.Binding.SourceUpdated>"
  remarks: "Deze methode ondersteunt het gebruik van de gekoppelde gebeurtenis in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "De <xref href=&quot;System.Windows.UIElement&quot;> </xref> of <xref href=&quot;System.Windows.ContentElement&quot;> </xref> die luistert naar de gebeurtenis."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "De handler om te verwijderen."
  overload: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee verwijdert u een handler voor de <xref:System.Windows.Data.Binding.TargetUpdated>gebeurtenis gekoppeld.</xref:System.Windows.Data.Binding.TargetUpdated>"
  remarks: "Deze methode ondersteunt het gebruik van de gekoppelde gebeurtenis in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "De <xref href=&quot;System.Windows.UIElement&quot;> </xref> of <xref href=&quot;System.Windows.ContentElement&quot;> </xref> die luistert naar de gebeurtenis."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "De handler om te verwijderen."
  overload: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  id: SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  fullName: System.Windows.Data.Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee stelt u een manager Naamruimteobject gebruikt door de binding die is gekoppeld aan het opgegeven element."
  remarks: "Deze methode ondersteunt het gebruik van de gekoppelde eigenschap voor de <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>die eigenschap zijn gekoppeld.</xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>"
  syntax:
    content: public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "Het object waaruit de informatie van de naamruimte ophalen."
    - id: value
      type: System.Xml.XmlNamespaceManager
      description: "De &lt;xref:System.Xml.XmlNamespaceManager?displayProperty=fullName&gt; moet worden gebruikt voor de evaluatie van de naamruimte in het element doorgegeven."
  overload: System.Windows.Data.Binding.SetXmlNamespaceManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>target</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializePath
  id: ShouldSerializePath
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializePath()
  nameWithType: Binding.ShouldSerializePath()
  fullName: System.Windows.Data.Binding.ShouldSerializePath()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee wordt aangegeven of de <xref:System.Windows.Data.Binding.Path*>eigenschap moet worden vastgehouden.</xref:System.Windows.Data.Binding.Path*>"
  remarks: "Dit `ShouldSerialize` methode is bedoeld, omdat de <xref:System.Windows.Data.Binding.Path%2A>eigenschap heeft geen waarde voor een eenvoudige.</xref:System.Windows.Data.Binding.Path%2A> Deze methode geeft aan of de eigenschap van de standaardwaarde is gewijzigd. U doorgaans aanroept deze methode als u ofwel een ontwerpfunctie voor de <xref:System.Windows.Data.Binding>of ontwikkelen van uw eigen beheren de <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> opnemen ontwikkelt</xref:System.Windows.Data.Binding>"
  syntax:
    content: public bool ShouldSerializePath ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van eigenschap is gewijzigd van de standaard; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializePath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializeSource
  id: ShouldSerializeSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializeSource()
  nameWithType: Binding.ShouldSerializeSource()
  fullName: System.Windows.Data.Binding.ShouldSerializeSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee wordt aangegeven of de <xref:System.Windows.Data.Binding.Source*>eigenschap moet worden vastgehouden.</xref:System.Windows.Data.Binding.Source*>"
  remarks: "Dit `ShouldSerialize` methode is bedoeld, omdat de <xref:System.Windows.Data.Binding.Source%2A>eigenschap heeft geen waarde voor een eenvoudige.</xref:System.Windows.Data.Binding.Source%2A> Deze methode geeft aan of de eigenschap van de standaardwaarde is gewijzigd. U doorgaans aanroept deze methode als u ofwel een ontwerpfunctie voor de <xref:System.Windows.Data.Binding>of ontwikkelen van uw eigen beheren de <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> opnemen ontwikkelt</xref:System.Windows.Data.Binding>"
  syntax:
    content: public bool ShouldSerializeSource ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van eigenschap is gewijzigd van de standaard; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules
  id: ShouldSerializeValidationRules
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializeValidationRules()
  nameWithType: Binding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.Binding.ShouldSerializeValidationRules()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee wordt aangegeven of de <xref:System.Windows.Data.Binding.ValidationRules*>eigenschap moet worden vastgehouden.</xref:System.Windows.Data.Binding.ValidationRules*>"
  remarks: "Dit `ShouldSerialize` methode is bedoeld, omdat de <xref:System.Windows.Data.Binding.ValidationRules%2A>eigenschap heeft geen waarde voor een eenvoudige.</xref:System.Windows.Data.Binding.ValidationRules%2A> Deze methode geeft aan of de eigenschap van de standaardwaarde is gewijzigd. U doorgaans aanroept deze methode als u ofwel een ontwerpfunctie voor de <xref:System.Windows.Data.Binding>of ontwikkelen van uw eigen beheren de <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> opnemen ontwikkelt</xref:System.Windows.Data.Binding>"
  syntax:
    content: public bool ShouldSerializeValidationRules ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van eigenschap is gewijzigd van de standaard; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializeValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Source
  id: Source
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van het object moet worden gebruikt als de bron van de binding."
  remarks: "Standaard bindingen overgenomen door de gegevenscontext die is opgegeven door de `DataContext` eigenschap als een is ingesteld. De eigenschap Source is een van de manieren kunt u de bron van expliciet instellen echter een <xref:System.Windows.Data.Binding>en de overgenomen gegevenscontext overschrijven.</xref:System.Windows.Data.Binding> Als u niet de functionaliteit hoeft van het tot stand brengen van een scope waarin verschillende eigenschappen de dezelfde gegevenscontext overnemen, kunt u de eigenschap Source in plaats van de `DataContext` eigenschap.       De <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName>en <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName>Eigenschappen kunnen u instellen van de bron van de binding ook expliciet.</xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> Echter slechts één van de drie eigenschappen <xref:System.Windows.Data.Binding.ElementName%2A>, bron, en <xref:System.Windows.Data.Binding.RelativeSource%2A>, moet worden ingesteld voor elke binding of kan een conflict optreden.</xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.ElementName%2A> Deze eigenschap er een uitzondering gegenereerd als er een bindingsconflict-bron.       Schakelt u deze eigenschap ingesteld op <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>      <a name=&quot;xamlAttributeUsage_Source&quot;></a>## XAML Kenmerkgebruik ```   <object Source=&quot;object&quot;/>   ``` <a name=&quot;xamlValues_Source&quot;> </a> ## XAML waarden *object* een bestaand object.       Gebruiken om te verwijzen naar een bestaand object, de [StaticResource Opmaakextensie](~/add/includes/ajax-current-ext-md.md)"
  example:
  - "In this example, you have a `Person` object with a string property named `PersonName`. The `Person` object is defined in the namespace called `SDKSample`.  \n  \n The following example instantiates the `Person` object with a `PersonName` property value of `Joe`. This is done in the `Resources` section and assigned an `x:Key`.  \n  \n [!code-xml[SimpleBinding#Instantiation](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#instantiation)]  \n[!code-xml[SimpleBinding#2](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#2)]  \n[!code-xml[SimpleBinding#EndWindow](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#endwindow)]  \n  \n To bind to the `PersonName` property you would do the following:  \n  \n [!code-xml[SimpleBinding#BDO1](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#bdo1)]  \n  \n As a result, the <xref:System.Windows.Controls.TextBlock> appears with the value \"Joe\".  \n  \n In the following example, the Source values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=fullName>:  \n  \n [!code-xml[DataBindingLab#ComboBoxMultiBinding](~/add/codesnippet/xaml/DataBindingLab/AddProductWindow.xaml#comboboxmultibinding)]  \n  \n For the full example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public object Source { get; set; }
    return:
      type: System.Object
      description: "Het object dat moet worden gebruikt als de bron van de binding."
  overload: System.Windows.Data.Binding.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.SourceUpdatedEvent
  id: SourceUpdatedEvent
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: SourceUpdatedEvent
  nameWithType: Binding.SourceUpdatedEvent
  fullName: System.Windows.Data.Binding.SourceUpdatedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Identificeert de <xref:System.Windows.Data.Binding.SourceUpdated>gebeurtenis gekoppeld.</xref:System.Windows.Data.Binding.SourceUpdated>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.TargetUpdatedEvent
  id: TargetUpdatedEvent
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: TargetUpdatedEvent
  nameWithType: Binding.TargetUpdatedEvent
  fullName: System.Windows.Data.Binding.TargetUpdatedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Identificeert de <xref:System.Windows.Data.Binding.TargetUpdated>gebeurtenis gekoppeld.</xref:System.Windows.Data.Binding.TargetUpdated>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  id: UpdateSourceExceptionFilter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een handler die kunt u aangepaste regels bieden voor het verwerken van uitzonderingen die het bindingprogramma tijdens het bijwerken van de bronwaarde binding tegenkomt. Dit is alleen van toepassing als u hebt gekoppeld aan een <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref> met de binding."
  remarks: "De <xref:System.Windows.Controls.ExceptionValidationRule>is een ingebouwde validatieregel die op uitzonderingen worden veroorzaakt tijdens het bijwerken van de eigenschap binding source controleert.</xref:System.Windows.Controls.ExceptionValidationRule> Als u hebt gekoppeld aan de <xref:System.Windows.Controls.ExceptionValidationRule>met uw <xref:System.Windows.Data.Binding>object, kunt u deze eigenschap in te stellen van een handler voor het bieden van aangepaste regels voor het verwerken van deze uitzonderingen.</xref:System.Windows.Data.Binding> </xref:System.Windows.Controls.ExceptionValidationRule> Als een UpdateSourceExceptionFilter niet is opgegeven in de <xref:System.Windows.Data.Binding>, maakt de binding-engine een <xref:System.Windows.Controls.ValidationError>met de uitzondering en deze toevoegt aan de <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>verzameling van het gebonden element.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> </xref:System.Windows.Data.Binding>"
  example:
  - "The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`. The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).  \n  \n [!code-xml[BindValidation#tbExceptionFilter](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#tbexceptionfilter)]  \n  \n You can provide custom logic to handle those exceptions. The following example shows how to use the UpdateSourceExceptionFilter property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n [!code-cs[BindValidation#filtercallback](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#filtercallback)]  \n  \n The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n [!code-cs[BindValidation#Handler](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#handler)]  \n  \n The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>. For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceExceptionFilterCallback
      description: "Een methode waarmee aangepaste regels voor het verwerken van uitzonderingen die het bindingprogramma tijdens het bijwerken van de bronwaarde binding tegenkomt."
  overload: System.Windows.Data.Binding.UpdateSourceExceptionFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.UpdateSourceTrigger
  id: UpdateSourceTrigger
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die de timing bepaalt van de binding-bron-updates."
  remarks: "Bindingen die zijn <xref:System.Windows.Data.BindingMode>of <xref:System.Windows.Data.BindingMode>luisteren naar wijzigingen in de eigenschap target en deze terug naar de bron kan doorgeven.</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Dit staat bekend als het bijwerken van de bron. Deze updates gebeurt meestal wanneer de eigenschap target wordt gewijzigd. Dit is fijn voor selectievakjes en andere eenvoudige besturingselementen, maar dit is meestal niet geschikt voor velden. Nadat elke toetsaanslag de prestaties verminderen kan en het weigert de gebruiker de gebruikelijke kans backspace en typefouten oplossen voordat u doorvoert naar de nieuwe waarde wordt bijgewerkt. Daarom de UpdateSourceTrigger standaardwaarde van de <xref:System.Windows.Controls.TextBox.Text%2A>eigenschap is <xref:System.Windows.Data.UpdateSourceTrigger>en niet <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Controls.TextBox.Text%2A>       Als u de UpdateSourceTrigger-waarde ingesteld op <xref:System.Windows.Data.UpdateSourceTrigger>, belt u het <xref:System.Windows.Data.BindingExpression.UpdateSource%2A>methode of de wijzigingen niet terug naar de bron wordt doorgegeven.</xref:System.Windows.Data.BindingExpression.UpdateSource%2A> </xref:System.Windows.Data.UpdateSourceTrigger>"
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "Een van de <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> waarden. De standaardwaarde is <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, die de standaard resulteert <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> waarde van de eigenschap target dependency. De standaardwaarde voor de meeste afhankelijkheidseigenschappen is echter <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, terwijl de <> </> *> eigenschap heeft een standaardwaarde van <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>.       Een programmatische manier om te bepalen van de standaardwaarde voor UpdateSourceTrigger van een afhankelijkheidseigenschap is om op te halen de metagegevens van de eigenschap van het gebruik van de eigenschap <> </> *> en controleer vervolgens de waarde van de <xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*>eigenschap.</xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*>"
  overload: System.Windows.Data.Binding.UpdateSourceTrigger*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors
  id: ValidatesOnDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die of u aangeeft wilt opnemen de <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>."
  remarks: "Deze instelling biedt een alternatief voor het gebruik van de <xref:System.Windows.Controls.DataErrorValidationRule>element expliciet.</xref:System.Windows.Controls.DataErrorValidationRule> De <xref:System.Windows.Controls.DataErrorValidationRule>is een ingebouwde validatieregel die op fouten die worden gegenereerd controleert door de <xref:System.ComponentModel.IDataErrorInfo>uitvoering van het bronobject.</xref:System.ComponentModel.IDataErrorInfo> </xref:System.Windows.Controls.DataErrorValidationRule> Als een fout wordt gegenereerd, de binding-engine maakt een <xref:System.Windows.Controls.ValidationError>met de fout en deze toevoegt aan de <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>verzameling van het gebonden element.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> Het ontbreken van een fout wordt deze feedback validatie gewist, tenzij een andere regel een validatieprobleem genereert.       ValidatesOnDataErrors is opgenomen in de .NET Framework versie 3.5.  Zie voor meer informatie [.NET Framework-versies en afhankelijkheden](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and ValidatesOnDataErrors to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.  \n  \n [!code-cs[BindingValidationAttributesSnippets#IDataErrorInfoData](~/add/codesnippet/csharp/bindingvalidationattributessnippets/data.cs#idataerrorinfodata)]\n [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/add/codesnippet/visualbasic/bindingvalidationattributessnippets/window1.xaml.vb#idataerrorinfodata)]  \n  \n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets ValidatesOnDataErrors to `true` on the <xref:System.Windows.Data.Binding>.  When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \n  \n [!code-xml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/add/codesnippet/xaml/bindingvalidationattributessnippets/window1.xaml#idataerrorinfoxaml)]"
  syntax:
    content: public bool ValidatesOnDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om op te nemen de <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnExceptions
  id: ValidatesOnExceptions
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die of u aangeeft wilt opnemen de <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>."
  remarks: "Deze instelling biedt een alternatief voor het gebruik van de <xref:System.Windows.Controls.ExceptionValidationRule>element expliciet.</xref:System.Windows.Controls.ExceptionValidationRule> De <xref:System.Windows.Controls.ExceptionValidationRule>is een ingebouwde validatieregel waarmee wordt gecontroleerd of uitzonderingen die zijn gegenereerd tijdens het bijwerken van de eigenschap source.</xref:System.Windows.Controls.ExceptionValidationRule> Als er een uitzondering gegenereerd, de binding-engine maakt een <xref:System.Windows.Controls.ValidationError>met de uitzondering en deze toevoegt aan de <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>verzameling van het gebonden element.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> Het ontbreken van een fout wordt deze feedback validatie gewist, tenzij een andere regel een validatieprobleem genereert.       ValidatesOnExceptions is opgenomen in de .NET Framework versie 3.5.  Zie voor meer informatie [.NET Framework-versies en afhankelijkheden](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples use ValidatesOnExceptions to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.  \n  \n [!code-cs[BindingValidationAttributesSnippets#ThrowExceptionData](~/add/codesnippet/csharp/bindingvalidationattributessnippets/data.cs#throwexceptiondata)]\n [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/add/codesnippet/visualbasic/bindingvalidationattributessnippets/window1.xaml.vb#throwexceptiondata)]  \n  \n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets ValidatesOnExceptions to `true` on the <xref:System.Windows.Data.Binding>. When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \n  \n [!code-xml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/add/codesnippet/xaml/bindingvalidationattributessnippets/window1.xaml#throwexceptionxaml)]"
  syntax:
    content: public bool ValidatesOnExceptions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om op te nemen de <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnExceptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  id: ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die of u aangeeft wilt opnemen de <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Wanneer ValidatesOnNotifyDataErrors is `true`, de binding controleert en fouten die worden gegenereerd door een gegevensbron die u <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo> implementeert rapporten"
  syntax:
    content: public bool ValidatesOnNotifyDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om op te nemen de <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidationRules
  nameWithType: Binding.ValidationRules
  fullName: System.Windows.Data.Binding.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee haalt u een verzameling van regels die de geldigheid van de invoer van de gebruiker."
  remarks: "De [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] binding gegevensmodel, kunt u koppelen ValidationRules met uw <xref:System.Windows.Data.Binding>of <xref:System.Windows.Data.MultiBinding>object.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> U kunt aangepaste regels maken die zijn afgeleid van de <xref:System.Windows.Controls.ValidationRule>klasse en het implementeren van de <xref:System.Windows.Controls.ValidationRule.Validate%2A>methode, of u kunt de ingebouwde <xref:System.Windows.Controls.ExceptionValidationRule>, die een waarde wordt ongeldig gemaakt als er uitzonderingen tijdens het bijwerken van de bron zijn.</xref:System.Windows.Controls.ExceptionValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Controls.ValidationRule>       De binding-engine wordt elk <xref:System.Windows.Controls.ValidationRule>die zijn gekoppeld aan een binding die telkens wanneer een invoerwaarde (de binding-eigenschap doelwaarde) wordt overgebracht naar de eigenschap binding source.</xref:System.Windows.Controls.ValidationRule> Zie de sectie gegevensvalidatie in voor een gedetailleerde bespreking van het validatieproces de [Binding overzicht](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Deze eigenschap kan worden ingesteld [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] alleen met behulp van de syntaxis van de verzameling weergegeven, of met toegang tot het verzamelingsobject en gebruik van de verschillende methoden, zoals `Add`. De eigenschap voor toegang tot de verzamelingsobject is alleen-lezen, terwijl de verzameling zelf alleen-lezen is.      <a name=&quot;xamlPropertyElementUsage_ValidationRules&quot;></a>## XAML eigenschap elementgebruik ```   <object>     <object.ValidationRules>       oneOrMoreValidationRules     </object.ValidationRules>   </object>      ``` <a name=&quot;xamlValues_ValidationRules&quot;> </a> ## XAML waarden *oneOrMoreValidationRules* een of meer <xref:System.Windows.Controls.ValidationRule>objecten.</xref:System.Windows.Controls.ValidationRule>       U kunt de <xref:System.Windows.Controls.ExceptionValidationRule>klasse of aangepaste regels door de <xref:System.Windows.Controls.ValidationRule>klasse</xref:System.Windows.Controls.ValidationRule> subclassing maken</xref:System.Windows.Controls.ExceptionValidationRule>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "Een verzameling van <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objecten."
  overload: System.Windows.Data.Binding.ValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  id: XmlNamespaceManagerProperty
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: XmlNamespaceManagerProperty
  nameWithType: Binding.XmlNamespaceManagerProperty
  fullName: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Identificeert de <xref:System.Windows.Data.Binding.XmlNamespaceManager*>die eigenschap zijn gekoppeld.</xref:System.Windows.Data.Binding.XmlNamespaceManager*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.XPath
  id: XPath
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: XPath
  nameWithType: Binding.XPath
  fullName: System.Windows.Data.Binding.XPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld een <xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref> -query wordt de waarde in de [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] binding-bron om te gebruiken."
  remarks: "Wanneer de bron van de binding is [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] gegevens in plaats van een [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] object, de XPath-eigenschap wordt gebruikt in plaats van de <xref:System.Windows.Data.Binding.Path%2A>eigenschap om aan te geven van het pad naar de waarde voor de binding-bron moet worden gebruikt.</xref:System.Windows.Data.Binding.Path%2A>       De XPath-eigenschap instelt, maakt u een `XPath` query voor het selecteren van een knooppunt of een verzameling van knooppunten (<xref:System.Xml.XmlElement?displayProperty=fullName> en <xref:System.Xml.XmlAttribute?displayProperty=fullName>beide zijn afgeleid van <xref:System.Xml.XmlNode?displayProperty=fullName>).</xref:System.Xml.XmlNode?displayProperty=fullName> </xref:System.Xml.XmlAttribute?displayProperty=fullName> </xref:System.Xml.XmlElement?displayProperty=fullName> <xref:System.Xml.XmlNode?displayProperty=fullName>is een [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] object, wat betekent dat u kunt koppelen aan de bijbehorende eigenschappen met behulp van de <xref:System.Windows.Data.Binding.Path%2A>eigenschap.</xref:System.Windows.Data.Binding.Path%2A></xref:System.Xml.XmlNode?displayProperty=fullName>       De <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>methode verwerkt de `XPath` expressies van de XPath-eigenschap.</xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> `XPath`functies worden niet ondersteund. Voor `XPath` expressie informatie, Zie de <xref:System.Xml.XmlNode.SelectNodes%2A>documentatie en voorbeelden vindt u in het voorbeeld in deze sectie.</xref:System.Xml.XmlNode.SelectNodes%2A>       LINQ naar XML-objecten <xref:System.Xml.Linq.XDocument>en <xref:System.Xml.Linq.XElement>Gebruik geen `XPath`.</xref:System.Xml.Linq.XElement> </xref:System.Xml.Linq.XDocument> Zie voor meer informatie [hoe: binding XDocument, XElement of LINQ voor de XML-queryresultaten](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string XPath { get; set; }
    return:
      type: System.String
      description: "De <xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref> query. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.XPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingBase
  isExternal: false
  name: System.Windows.Data.BindingBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Data.Binding.#ctor
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.Windows.Data.Binding.Binding()
- uid: System.Windows.Data.Binding.#ctor(System.String)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding(String)
  nameWithType: Binding.Binding(String)
  fullName: System.Windows.Data.Binding.Binding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DataTransferEventArgs>
  nameWithType: EventHandler<DataTransferEventArgs>
  fullName: System.EventHandler<System.Windows.Data.DataTransferEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Data.DataTransferEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.DataTransferEventArgs
    name: DataTransferEventArgs
    nameWithType: DataTransferEventArgs
    fullName: DataTransferEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.AsyncState
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AsyncState
  nameWithType: Binding.AsyncState
  fullName: System.Windows.Data.Binding.AsyncState
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.Binding.BindsDirectlyToSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.Binding.Converter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
- uid: System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  isExternal: false
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: System.Windows.Data.Binding.ConverterCulture
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.Binding.ConverterParameter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
- uid: System.Windows.Data.Binding.DoNothing
  parent: System.Windows.Data.Binding
  isExternal: false
  name: DoNothing
  nameWithType: Binding.DoNothing
  fullName: System.Windows.Data.Binding.DoNothing
- uid: System.Windows.Data.Binding.ElementName
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: GetXmlNamespaceManager(DependencyObject)
  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)
  fullName: System.Windows.Data.Binding.GetXmlNamespaceManager(DependencyObject)
- uid: System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: System.Windows.Data.Binding.IndexerName
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IndexerName
  nameWithType: Binding.IndexerName
  fullName: System.Windows.Data.Binding.IndexerName
- uid: System.Windows.Data.Binding.IsAsync
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IsAsync
  nameWithType: Binding.IsAsync
  fullName: System.Windows.Data.Binding.IsAsync
- uid: System.Windows.Data.Binding.Mode
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
- uid: System.Windows.Data.BindingMode
  parent: System.Windows.Data
  isExternal: false
  name: BindingMode
  nameWithType: BindingMode
  fullName: System.Windows.Data.BindingMode
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.Binding.NotifyOnSourceUpdated
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.Binding.NotifyOnTargetUpdated
- uid: System.Windows.Data.Binding.NotifyOnValidationError
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
- uid: System.Windows.Data.Binding.Path
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
- uid: System.Windows.PropertyPath
  parent: System.Windows
  isExternal: false
  name: PropertyPath
  nameWithType: PropertyPath
  fullName: System.Windows.PropertyPath
- uid: System.Windows.Data.Binding.RelativeSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
- uid: System.Windows.Data.RelativeSource
  parent: System.Windows.Data
  isExternal: false
  name: RelativeSource
  nameWithType: RelativeSource
  fullName: System.Windows.Data.RelativeSource
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  fullName: System.Windows.Data.Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
- uid: System.Windows.Data.Binding.ShouldSerializePath
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializePath()
  nameWithType: Binding.ShouldSerializePath()
  fullName: System.Windows.Data.Binding.ShouldSerializePath()
- uid: System.Windows.Data.Binding.ShouldSerializeSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeSource()
  nameWithType: Binding.ShouldSerializeSource()
  fullName: System.Windows.Data.Binding.ShouldSerializeSource()
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeValidationRules()
  nameWithType: Binding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.Binding.ShouldSerializeValidationRules()
- uid: System.Windows.Data.Binding.Source
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
- uid: System.Windows.Data.Binding.SourceUpdatedEvent
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SourceUpdatedEvent
  nameWithType: Binding.SourceUpdatedEvent
  fullName: System.Windows.Data.Binding.SourceUpdatedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Data.Binding.TargetUpdatedEvent
  parent: System.Windows.Data.Binding
  isExternal: false
  name: TargetUpdatedEvent
  nameWithType: Binding.TargetUpdatedEvent
  fullName: System.Windows.Data.Binding.TargetUpdatedEvent
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.Binding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceExceptionFilterCallback
  nameWithType: UpdateSourceExceptionFilterCallback
  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback
- uid: System.Windows.Data.Binding.UpdateSourceTrigger
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
- uid: System.Windows.Data.Binding.ValidatesOnExceptions
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.Binding.ValidationRules
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidationRules
  nameWithType: Binding.ValidationRules
  fullName: System.Windows.Data.Binding.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XmlNamespaceManagerProperty
  nameWithType: Binding.XmlNamespaceManagerProperty
  fullName: System.Windows.Data.Binding.XmlNamespaceManagerProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Data.Binding.XPath
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XPath
  nameWithType: Binding.XPath
  fullName: System.Windows.Data.Binding.XPath
- uid: System.Windows.Data.Binding.#ctor*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding
  nameWithType: Binding.Binding
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddSourceUpdatedHandler
  nameWithType: Binding.AddSourceUpdatedHandler
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddTargetUpdatedHandler
  nameWithType: Binding.AddTargetUpdatedHandler
- uid: System.Windows.Data.Binding.AsyncState*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AsyncState
  nameWithType: Binding.AsyncState
- uid: System.Windows.Data.Binding.BindsDirectlyToSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
- uid: System.Windows.Data.Binding.Converter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Converter
  nameWithType: Binding.Converter
- uid: System.Windows.Data.Binding.ConverterCulture*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
- uid: System.Windows.Data.Binding.ConverterParameter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
- uid: System.Windows.Data.Binding.ElementName*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ElementName
  nameWithType: Binding.ElementName
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: GetXmlNamespaceManager
  nameWithType: Binding.GetXmlNamespaceManager
- uid: System.Windows.Data.Binding.IsAsync*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IsAsync
  nameWithType: Binding.IsAsync
- uid: System.Windows.Data.Binding.Mode*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Mode
  nameWithType: Binding.Mode
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
- uid: System.Windows.Data.Binding.NotifyOnValidationError*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
- uid: System.Windows.Data.Binding.Path*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Path
  nameWithType: Binding.Path
- uid: System.Windows.Data.Binding.RelativeSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RelativeSource
  nameWithType: Binding.RelativeSource
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveSourceUpdatedHandler
  nameWithType: Binding.RemoveSourceUpdatedHandler
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveTargetUpdatedHandler
  nameWithType: Binding.RemoveTargetUpdatedHandler
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SetXmlNamespaceManager
  nameWithType: Binding.SetXmlNamespaceManager
- uid: System.Windows.Data.Binding.ShouldSerializePath*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializePath
  nameWithType: Binding.ShouldSerializePath
- uid: System.Windows.Data.Binding.ShouldSerializeSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeSource
  nameWithType: Binding.ShouldSerializeSource
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeValidationRules
  nameWithType: Binding.ShouldSerializeValidationRules
- uid: System.Windows.Data.Binding.Source*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Source
  nameWithType: Binding.Source
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.Binding.UpdateSourceTrigger*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
- uid: System.Windows.Data.Binding.ValidatesOnExceptions*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.Binding.ValidationRules*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidationRules
  nameWithType: Binding.ValidationRules
- uid: System.Windows.Data.Binding.XPath*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XPath
  nameWithType: Binding.XPath
