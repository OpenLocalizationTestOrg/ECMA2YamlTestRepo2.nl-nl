### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeCollection
  id: TreeNodeCollection
  children:
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Clear
  - System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Count
  - System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  - System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  - System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  - System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
  type: Class
  summary: "Vertegenwoordigt een verzameling <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objecten in de <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> besturingselement. Deze klasse kan niet worden overgenomen."
  remarks: "De klasse TreeNodeCollection wordt gebruikt voor het opslaan en beheren van een verzameling van <xref:System.Web.UI.WebControls.TreeNode>objecten in de <xref:System.Web.UI.WebControls.TreeView>besturingselement.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode> De <xref:System.Web.UI.WebControls.TreeView>besturingselement maakt gebruik van de klasse TreeNodeCollection in twee eigenschappen.</xref:System.Web.UI.WebControls.TreeView> Deze slaat de hoofdknooppunten in het <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>eigenschap en de geselecteerde knooppunten in de <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>eigenschap.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> De TreeNodeCollection-verzameling wordt ook gebruikt voor de <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>eigenschap voor het opslaan van onderliggende knooppunten (indien aanwezig).</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>       De klasse TreeNodeCollection ondersteunt verschillende manieren toegang krijgen tot de items in de verzameling:-Gebruik de <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>indexeerfunctie voor het ophalen van een <xref:System.Web.UI.WebControls.TreeNode>object rechtstreeks op een specifieke op nul gebaseerde index.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>      -Gebruik de <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>methode voor het maken van een enumerator die kan worden gebruikt om de collectie te doorlopen.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>      -Gebruik `foreach` (C#) of `For Each` (Visual Basic) om de collectie te doorlopen.      -Gebruik de <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>methode voor het kopiÃ«ren van de inhoud van de verzameling in een <xref:System.Array>object.</xref:System.Array> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>       U kunt de TreeNodeCollection programmatisch beheren door toevoegen en verwijderen van <xref:System.Web.UI.WebControls.TreeNode>objecten.</xref:System.Web.UI.WebControls.TreeNode> Als u knooppunten toevoegen aan de verzameling, gebruiken de <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>of <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> U kunt knooppunten verwijderen uit de verzameling met de <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, of <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>      > [!NOTE] > Wanneer de <xref:System.Web.UI.WebControls.TreeView>besturingselement is gebonden aan een gegevensbron, de <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>en <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>verzamelingen telkens binding treedt op wanneer automatisch ingevuld.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> </xref:System.Web.UI.WebControls.TreeView> Eventuele wijzigingen aan de verzamelingen tussen bindingen niet verloren. Als u wilt behouden deze wijzigingen, de gegevensbron bijwerken of handmatig opnieuw opbouwen van de verzameling telkens wanneer die u binden.       De TreeNodeCollection bevat eigenschappen en methoden waarmee u informatie ophalen over de verzameling zelf. Als u wilt weten hoeveel items in de verzameling zijn, gebruiken de <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A>eigenschap.</xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> Als u bepalen wilt of de verzameling een bepaalde bevat <xref:System.Web.UI.WebControls.TreeNode>object, gebruikt u de <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> </xref:System.Web.UI.WebControls.TreeNode> Ophalen van de index van een <xref:System.Web.UI.WebControls.TreeNode>-object in de collectie, moet u de <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to programmatically add nodes to and remove them from a TreeNodeCollection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a TreeNodeCollection object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_136_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_136_1.aspx)]"
  syntax:
    content: 'public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> klasse met de standaardwaarden."
  remarks: "Deze constructor gebruiken om te initialiseren van een nieuw exemplaar van de <xref:System.Web.UI.WebControls.TreeNodeCollection>klasse met de standaardwaarden.</xref:System.Web.UI.WebControls.TreeNodeCollection> Deze constructor wordt doorgaans gebruikt bij het maken van een verzameling van hoofdknooppunten waar een bovenliggende knooppunt (of -eigenaar) is niet vereist.      > [!NOTE] > Bij het maken van een verzameling van niet-hoofdknooppunten, moet u de overbelaste constructor die de `owner` parameter, in plaats van deze constructor, het bovenliggende knooppunt opgeven.       Deze constructor wordt hoofdzakelijk gebruikt door ontwikkelaars besturingselement."
  syntax:
    content: public TreeNodeCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  id: '#ctor(System.Web.UI.WebControls.TreeNode)'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> klasse met behulp van de opgegeven bovenliggende knooppunt (of de eigenaar)."
  remarks: "Deze constructor gebruiken om te initialiseren van een nieuw exemplaar van de <xref:System.Web.UI.WebControls.TreeNodeCollection>klasse met behulp van de opgegeven bovenliggende knooppunt (of de eigenaar).</xref:System.Web.UI.WebControls.TreeNodeCollection> Deze constructor wordt doorgaans gebruikt bij het maken van een verzameling van niet-hoofdknooppunten waar u moet het bovenliggende knooppunt opgeven.      > [!NOTE] > Bij het maken van een verzameling van hoofdknooppunten Overweeg het gebruik van de standaardconstructor omdat hoofdknooppunten geen een bovenliggend knooppunt.       Deze constructor wordt hoofdzakelijk gebruikt door ontwikkelaars besturingselement."
  syntax:
    content: public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeNode
      description: "De <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> -object met het hoofdknooppunt van de verzameling."
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  id: Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Voegt de opgegeven <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object aan het einde van de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object."
  remarks: "Gebruik de methode Add in het opgegeven <xref:System.Web.UI.WebControls.TreeNode>object aan het einde van de <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> toe te voegen      > [!NOTE] > De <xref:System.Web.UI.WebControls.TreeNodeCollection>kunt u toevoegen van null-verwijzingen (Nothing in Visual Basic), evenals dubbele <xref:System.Web.UI.WebControls.TreeNode>objecten.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Als alternatief kunt u een <xref:System.Web.UI.WebControls.TreeNode>object in de <xref:System.Web.UI.WebControls.TreeNodeCollection>op een specifieke index met behulp van de <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Add method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/370e49fd-05e7-49aa-a3d5-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/370e49fd-05e7-49aa-a3d5-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "De <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object toe te voegen."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  id: AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Voegt de opgegeven <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object in een <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object op de locatie van de opgegeven index."
  remarks: "Gebruik de methode AddAt om het invoegen van de opgegeven <xref:System.Web.UI.WebControls.TreeNode>object in de <xref:System.Web.UI.WebControls.TreeNodeCollection>bij de opgegeven op nul gebaseerde index.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > De <xref:System.Web.UI.WebControls.TreeNodeCollection>kunt u invoegen van null-verwijzingen (Nothing in Visual Basic), evenals dubbele <xref:System.Web.UI.WebControls.TreeNode>objecten.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Als alternatief kunt u een <xref:System.Web.UI.WebControls.TreeNode>object aan het einde van de <xref:System.Web.UI.WebControls.TreeNodeCollection>met behulp van de <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the AddAt method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/646d7369-5544-4d90-8475-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/646d7369-5544-4d90-8475-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: index
      type: System.Int32
      description: "De locatie van de op nul gebaseerde index waarop u wilt invoegen de <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object."
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "De <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object om toe te voegen."
  overload: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Leegt de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object."
  remarks: "Gebruik de methode Clear elk <xref:System.Web.UI.WebControls.TreeNode>object uit de <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> verwijderen      > [!NOTE] > U een afzonderlijk knooppunt verwijderen uit de verzameling met de <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>of <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>"
  example:
  - "The following example demonstrates how to use the Clear method to programmatically empty a <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_111_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_111_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  id: Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee wordt bepaald of de opgegeven <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object bevindt zich in de verzameling."
  remarks: "Gebruik de methode bevat om te bepalen of een <xref:System.Web.UI.WebControls.TreeNode>object is opgenomen in de <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Deze methode wordt gewoonlijk gebruikt voor het testen op de aanwezigheid van een <xref:System.Web.UI.WebControls.TreeNode>object voordat u een taak, zoals het toevoegen of verwijderen van het knooppunt uit de verzameling uitvoert.</xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Contains method to determine whether the selected node is in the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> collection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/8b0f37ed-79bf-4881-ba56-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/8b0f37ed-79bf-4881-ba56-_1.aspx)]"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.TreeNode c);
    parameters:
    - id: c
      type: System.Web.UI.WebControls.TreeNode
      description: "De <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object vinden."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> -object is opgenomen in de verzameling, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopieert u alle items uit de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> -object op voor een compatibele eendimensionale matrix van <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objecten, beginnend bij de opgegeven index in de doelmatrix."
  remarks: "Gebruik de CopyTo-methode om te kopiÃ«ren van de inhoud van de <xref:System.Web.UI.WebControls.TreeNodeCollection>in de opgegeven op nul gebaseerde <xref:System.Array?displayProperty=fullName>object.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> Items die zijn gekopieerd vanaf de opgegeven index van de doelmatrix. Met het <xref:System.Array?displayProperty=fullName>object, kunt u de matrixsyntaxis voor toegang tot de items in de <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> vervolgens gebruiken</xref:System.Array?displayProperty=fullName>       Als alternatief kunt u ook kunt gebruiken de <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>methode voor het maken van een enumerator die kan worden gebruikt voor toegang tot de items in de verzameling.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/a62bb2b9-1097-48cf-a7f1-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/a62bb2b9-1097-48cf-a7f1-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);
    parameters:
    - id: nodeArray
      type: System.Web.UI.WebControls.TreeNode[]
      description: "Een op nul gebaseerde matrix met <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objecten die u ontvangt van de gekopieerde items uit de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "De positie in de doelmatrix waarmee te ontvangen van de gekopieerde inhoud."
  overload: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee wordt het aantal items in de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object."
  remarks: "De eigenschap Count gebruiken om te bepalen van het aantal items in een <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> Deze eigenschap wordt doorgaans gebruikt wanneer een collectie doorlopen om te bepalen van de bovengrens van de verzameling. De eigenschap Count wordt ook vaak gebruikt om te bepalen of een verzameling leeg is."
  example:
  - "The following example demonstrates how to use the Count property to determine the number of items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. It then performs a preorder traversal of the <xref:System.Web.UI.WebControls.TreeView> control to display the text of each node.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_146_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal items in de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retourneert een enumerator die kan worden gebruikt om te doorlopen een <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object."
  remarks: "Gebruik de GetEnumerator-methode voor het maken van een enumerator die kan worden eenvoudig herhaald tot en met elk item in de <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> ophalen Als u het item op dat moment waarnaar in de enumerator, gebruikt de <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>eigenschap.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> Gebruik de <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>methode om te verplaatsen naar het volgende item.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> Als u teruggaan naar het begin van de verzameling de enumerator wilt, gebruikt u de <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>methode.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > Na het maken van een enumerator of gebruik de <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>methode, moet u aanroepen de <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>methode.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> Anders wordt het item dat wordt vertegenwoordigd door de <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>eigenschap is niet gedefinieerd.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       Als alternatief kunt u ook kunt gebruiken de <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>methode voor het maken van een <xref:System.Array?displayProperty=fullName>-object dat kan worden gebruikt voor toegang tot de items in de verzameling.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Een ander alternatief is met een `foreach` of `For Each` structuur om de collectie te doorlopen."
  example:
  - "The following example demonstrates how to use the GetEnumerator method to create an enumerator that contains root nodes of the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_193_1.aspx)]\n [!code-vb[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_193_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator die kan worden gebruikt om te doorlopen de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  id: IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Bepaalt de index van de opgegeven <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object."
  remarks: "Gebruik de methode IndexOf om te bepalen van de op nul gebaseerde index van de opgegeven <xref:System.Web.UI.WebControls.TreeNode>object in de <xref:System.Web.UI.WebControls.TreeNodeCollection>object.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Als het knooppunt niet in de verzameling, retourneert de methode-1.      > [!NOTE] > Als het opgegeven knooppunt wordt meerdere keren in de verzameling weergegeven, wordt de index van het eerste exemplaar geretourneerd."
  example:
  - "The following example demonstrates how to use the IndexOf method to determine the index of a root node. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/be69754f-ce4e-4152-80b4-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/be69754f-ce4e-4152-80b4-_1.aspx)]"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "De <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object om te zoeken."
    return:
      type: System.Int32
      description: "De op nul gebaseerde index van het eerste exemplaar van <code> value </code> binnen de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>als gevonden, anders wordt -1."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Haalt een waarde die aangeeft of de toegang tot de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> is gesynchroniseerd (thread-veilig)."
  remarks: "De eigenschap IsSynchronized wordt gebruikt om aan te geven of de toegang tot de <xref:System.Web.UI.WebControls.TreeNodeCollection>is gesynchroniseerd (thread-veilig).</xref:System.Web.UI.WebControls.TreeNodeCollection> Deze eigenschap is afgeleid van de <xref:System.Collections.ICollection?displayProperty=fullName>klasse en wordt overschreven als u wilt terugkeren altijd `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       Zie voor meer informatie over de eigenschap IsSynchronized de <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>eigenschap van de <xref:System.Collections.ICollection?displayProperty=fullName>interface.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Haalt de <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object op de opgegeven index in de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object."
  remarks: "Deze indexeerfunctie gebruiken voor toegang tot een <xref:System.Web.UI.WebControls.TreeNode>object uit de <xref:System.Web.UI.WebControls.TreeNodeCollection>bij de opgegeven index met de notatie van de matrix.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> De indexeerfunctie kunt u wijzigen of vervangen door een <xref:System.Web.UI.WebControls.TreeNode>object in de collectie direct.</xref:System.Web.UI.WebControls.TreeNode> De verzameling is gebaseerd op nul."
  example:
  - "The following example demonstrates how to use the indexer to access an element in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1077_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1077_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object ophalen."
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "De <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object op de opgegeven index in de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  id: Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Verwijdert de opgegeven <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object uit de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object."
  remarks: "Gebruik de methode verwijderen voor het opgegeven knooppunt verwijderen uit de verzameling. Alle items die dat knooppunt volgen worden vervolgens omhoog verplaatsen in de vacant positie te vullen. De indexen van de verplaatste items worden ook bijgewerkt.      > [!NOTE] > De <xref:System.Web.UI.WebControls.TreeNodeCollection>kan null-verwijzingen (Nothing in Visual Basic) bevatten, evenals dubbele <xref:System.Web.UI.WebControls.TreeNode>objecten.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Als alternatief kunt u een knooppunt op een specifieke index kunt verwijderen met behulp van de <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> U kunt ook elk knooppunt in de verzameling verwijderen met behulp van de <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the Remove method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/f8fda58d-8ad1-430c-83d7-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/f8fda58d-8ad1-430c-83d7-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "De <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object om te verwijderen."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> object op de opgegeven index voor de locatie van de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object."
  remarks: "Gebruik de methode RemoveAt om het <xref:System.Web.UI.WebControls.TreeNode>object op de locatie van de opgegeven op nul gebaseerde index van een <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> verwijderen Alle items die dat knooppunt volgen worden vervolgens omhoog verplaatsen in de vacant positie te vullen. De indexen van de verplaatste items worden ook bijgewerkt.      > [!NOTE] > De <xref:System.Web.UI.WebControls.TreeNodeCollection>kan null-verwijzingen (Nothing in Visual Basic) bevatten, evenals dubbele <xref:System.Web.UI.WebControls.TreeNode>objecten.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Als alternatief kunt u een specifieke <xref:System.Web.UI.WebControls.TreeNode>object met behulp van de <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> </xref:System.Web.UI.WebControls.TreeNode> U kunt ook elk knooppunt in de verzameling verwijderen met behulp van de <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>methode.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the RemoveAt method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_37_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De locatie van de op nul gebaseerde index van het knooppunt om te verwijderen."
  overload: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Haalt een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object."
  remarks: "De eigenschap SyncRoot biedt een gesynchroniseerde versie van de <xref:System.Web.UI.WebControls.TreeNodeCollection>die kunnen worden gebruikt bij het synchroniseren van code (thread).</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!CAUTION] > De <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>eigenschap van deze klasse altijd retourneert `false`, wat aangeeft dat de <xref:System.Web.UI.WebControls.TreeNodeCollection>klasse (niet thread-safe) niet is gesynchroniseerd.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>       Code synchroniseren moet bewerkingen uitvoeren op het object SyncRoot van de <xref:System.Web.UI.WebControls.TreeNodeCollection>, niet rechtstreeks op de <xref:System.Web.UI.WebControls.TreeNodeCollection>zelf.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection> Dit zorgt ervoor dat de juiste werking van de verzamelingen die zijn afgeleid van andere objecten. In het bijzonder houdt juiste synchronisatie met andere threads dat tegelijkertijd kan worden wijzigt de <xref:System.Web.UI.WebControls.TreeNodeCollection>object.</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!NOTE] > Het object dat wordt geretourneerd in deze implementatie is de <xref:System.Collections.ArrayList?displayProperty=fullName>object dat wordt gebruikt voor het opslaan van de <xref:System.Web.UI.WebControls.TreeNode>objecten in de verzameling.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Collections.ArrayList?displayProperty=fullName>       Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen opvangen.       Voor meer informatie over de <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>eigenschap, Zie de <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>eigenschap van de <xref:System.Collections.ICollection?displayProperty=fullName>interface.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Een &lt;xref:System.Object?displayProperty=fullName&gt; die kunnen worden gebruikt om te synchroniseren van toegang tot de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopieert u alle items uit de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object naar een compatibele eendimensionale &lt;xref:System.Array?displayProperty=fullName&gt;, te beginnen bij de opgegeven index in de doelmatrix."
  remarks: "Gebruik de <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>methode voor het kopiÃ«ren van de inhoud van de <xref:System.Web.UI.WebControls.TreeNodeCollection>in de opgegeven op nul gebaseerde <xref:System.Array?displayProperty=fullName>object.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Items die zijn gekopieerd vanaf de opgegeven index van de doelmatrix. Met het <xref:System.Array?displayProperty=fullName>object, kunt u de matrixsyntaxis voor toegang tot de items in de <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> vervolgens gebruiken</xref:System.Array?displayProperty=fullName>       Als alternatief kunt u ook kunt gebruiken de <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>methode voor het maken van een enumerator die kan worden gebruikt voor toegang tot de items in de verzameling.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/58422549-a31a-41f3-a6a6-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/58422549-a31a-41f3-a6a6-_1.aspx)]"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Een op nul gebaseerde &lt;xref:System.Array?displayProperty=fullName&gt; object waarvoor de gekopieerde items uit de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "De positie in de doelmatrix waarmee te ontvangen van de gekopieerde inhoud."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>is geen matrix van <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objecten."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Haalt een waarde die aangeeft of de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object opslaan van wijzigingen naar de weergavestatus."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het besturingselement is gemarkeerd voor het opslaan van de staat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Laadt de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> object eerder opgeslagen status weergeven."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Een &lt;xref:System.Object?displayProperty=fullName&gt; waarin de waarden van de status opgeslagen weergave."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee slaat u de wijzigingen om de status weer te geven een &lt;xref:System.Object?displayProperty=fullName&gt;."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "De &lt;xref:System.Object?displayProperty=fullName&gt; die de status van de weergave verandert bevat."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee geeft u de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> voor het bijhouden van wijzigingen in de weergavestatus."
  remarks: "Nadat deze methode is aangeroepen op een serverbesturingselement, de <xref:System.Web.UI.Control.IsTrackingViewState%2A>eigenschap retourneert `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
- uid: System.Web.UI.WebControls.TreeNode[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeCollection.Add
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt
  nameWithType: TreeNodeCollection.AddAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear
  nameWithType: TreeNodeCollection.Clear
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeCollection.Contains
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeCollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TreeNodeCollection.GetEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeCollection.IndexOf
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeCollection.Item
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeCollection.Remove
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeCollection.RemoveAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState
