### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ExpressionBuilder
  id: ExpressionBuilder
  children:
  - System.Web.Compilation.ExpressionBuilder.#ctor
  - System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder
  fullName: System.Web.Compilation.ExpressionBuilder
  type: Class
  summary: "Evalueert expressies tijdens het parseren van de pagina."
  remarks: "De klasse ExpressionBuilder is de basisklasse van expressie-opbouwfuncties, zoals de <xref:System.Web.Compilation.AppSettingsExpressionBuilder>klasse, die code-expressies maken tijdens het parseren van de pagina.</xref:System.Web.Compilation.AppSettingsExpressionBuilder>       Expressie-opbouwfuncties expressies declaratieve parseren en maak een code voor het ophalen van waarden die zijn gebonden aan een eigenschap van het besturingselement. In scenario&quot;s geen compileren evalueert een opbouwfunctie die ondersteuning biedt voor een functie niet compileren de expressie tijdens runtime.       Wanneer de parser pagina aangetroffen met een expressie die is gescheiden van de tekenreeks `<%$ %>`, een opbouwfunctie voor de expressie op basis van het voorvoegsel op in de tekenreeks wordt gemaakt. Het voorvoegsel is het gedeelte van de tekenreeks die is aan de linkerkant van de dubbele punt (:). Bijvoorbeeld, wanneer de parser de tekenreeks aangetroffen `<%$ ConnectionStrings:MessageDB %>`, het maken van een <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>object.</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> Voorvoegsels zijn gekoppeld aan een expressie-opbouwfuncties in het bestand Web.config in de <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>sectie.</xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>       Aan de rechterkant van de declaratieve expressie wordt doorgegeven aan de opbouwfunctie voor evaluatie. Overschrijf de <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>methode voor het genereren van code die met de pagina wordt gecompileerd.</xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>       Als u wilt dat de aangepaste opbouwfunctie moet actief zijn op de pagina&quot;s die niet worden gecompileerd, moet u ook overschrijven de <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>methode om te retourneren van een object dat de resultaten van de expressie vertegenwoordigt.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> U moet ook overschrijven de <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>eigenschap om aan te geven dat de aangepaste opbouwfunctie geen compileren&quot;s ondersteunt.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>       U kunt een set eigenschappen en methoden voor het selecteren en de geëvalueerde expressie die is gekoppeld aan de eigenschap van een besturingselement in de ontwerpfase door het implementeren van een expressie-editor definiëren. De editor is gemarkeerd op de opbouwfunctie via klasseniveau metagegevens. Zie voor meer informatie <xref:System.Web.UI.Design.ExpressionEditor>.</xref:System.Web.UI.Design.ExpressionEditor>"
  example:
  - "The following code examples demonstrate how to build a custom expression builder by implementing the ExpressionBuilder abstract class. This implementation of ExpressionBuilder returns an evaluated statement that is passed to the expression. To run this example, you must first register the custom expression builder in the Web.config file. The first code example demonstrates how to register the custom expression builder in the Web.config file.  \n  \n```  \n<configuration>  \n    <system.web>  \n       <compilation>  \n          <expressionBuilders>  \n              <add expressionPrefix=\"MyCustomExpression\"  \n               type=\"MyCustomExpressionBuilder\"/>  \n          </expressionBuilders>  \n       </compilation>  \n    </system.web>  \n</configuration>  \n```  \n  \n The second code example demonstrates how to reference the expression in an .aspx file.  \n  \n```  \n<asp:Label ID=\"Label1\" runat=\"server\"   \nText=\"<%$ MyCustomExpression:Hello, world! %>\" />  \n```  \n  \n The third code example demonstrates how to develop a customized expression builder by deriving from ExpressionBuilder. To run this code example, you must place the class in the App_Code folder.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract class ExpressionBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> klasse."
  remarks: "Omdat de <xref:System.Web.Compilation.ExpressionBuilder>klasse is abstract, kunt u een exemplaar van maken <xref:System.Web.Compilation.ExpressionBuilder>via de constructor ExpressionBuilder.</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionBuilder>"
  syntax:
    content: protected ExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert een object dat een geëvalueerde expressie vertegenwoordigt."
  remarks: "Als u wilt dat uw <xref:System.Web.Compilation.ExpressionBuilder>object actief op een pagina die ondersteuning biedt voor de functie niet compileren, kunt u de methode EvaluateExpression overschrijven en de <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>eigenschap.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> </xref:System.Web.Compilation.ExpressionBuilder> De evaluatie van de huidige expressie moet worden geretourneerd door de methode EvaluateExpression."
  example:
  - "The following code example demonstrates how to use the overridden EvaluateExpression method to return an evaluated expression.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "Het object met de expressie."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Het object waarmee informatie over de eigenschap gebonden aan door de expressie."
    - id: parsedData
      type: System.Object
      description: "Het object bevat gegevens geparseerd geretourneerd door <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Contextuele informatie voor het evalueren van de expressie."
    return:
      type: System.Object
      description: "Een object met de geëvalueerde expressie; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de inheritor EvaluateExpression niet implementeert."
  overload: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert de code die wordt gebruikt tijdens het uitvoeren van de pagina voor het verkrijgen van de geëvalueerde expressie."
  remarks: "Klassen die van overnemen de <xref:System.Web.Compilation.ExpressionBuilder>klasse de GetCodeExpression abstracte methode moet geïmplementeerd.</xref:System.Web.Compilation.ExpressionBuilder>"
  example:
  - "The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the GetCodeExpression method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Het object waarmee informatie over de eigenschap gebonden aan door de expressie."
    - id: parsedData
      type: System.Object
      description: "Het object bevat gegevens geparseerd geretourneerd door <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Contextuele informatie voor het evalueren van de expressie."
    return:
      type: System.CodeDom.CodeExpression
      description: "Een <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> die wordt gebruikt voor eigenschapstoewijzing."
  overload: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert een object dat de geparseerde expressie vertegenwoordigt."
  remarks: "Wanneer in een afgeleide klasse genegeerd, deze methode parseert de expressie en wordt geretourneerd als een object dat kan worden gebruikt als de `parsedData` parameter in een <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>of <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>methode.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> </xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>"
  syntax:
    content: public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "De waarde van de declaratieve expressie."
    - id: propertyType
      type: System.Type
      description: "Het type van de eigenschap gebonden aan door de expressie."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Contextuele informatie voor het evalueren van de expressie."
    return:
      type: System.Object
      description: "Een <xref:System.Object>met de geparseerde weergave van de expressie; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als ParseExpression is niet geïmplementeerd.</xref:System.Object>"
  overload: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert een waarde die aangeeft of de huidige <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> object ondersteunt geen compileren pagina&quot;s."
  remarks: "De standaardwaarde voor de eigenschap SupportsEvaluate is `false`. Ter ondersteuning van Nee compileren pagina&quot;s, moet u beide overschrijven de <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>methode en de eigenschap SupportsEvaluate.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>"
  example:
  - "The following code example demonstrates how to use the SupportsEvaluate property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> ondersteuning biedt voor evaluatie van expressies; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder.ExpressionBuilder
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
