### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FormsAuthentication
  id: FormsAuthentication
  children:
  - System.Web.Security.FormsAuthentication.#ctor
  - System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  - System.Web.Security.FormsAuthentication.CookieDomain
  - System.Web.Security.FormsAuthentication.CookieMode
  - System.Web.Security.FormsAuthentication.CookiesSupported
  - System.Web.Security.FormsAuthentication.Decrypt(System.String)
  - System.Web.Security.FormsAuthentication.DefaultUrl
  - System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  - System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.FormsCookieName
  - System.Web.Security.FormsAuthentication.FormsCookiePath
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  - System.Web.Security.FormsAuthentication.Initialize
  - System.Web.Security.FormsAuthentication.IsEnabled
  - System.Web.Security.FormsAuthentication.LoginUrl
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  - System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.RequireSSL
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.SignOut
  - System.Web.Security.FormsAuthentication.SlidingExpiration
  - System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  - System.Web.Security.FormsAuthentication.Timeout
  langs:
  - csharp
  name: FormsAuthentication
  nameWithType: FormsAuthentication
  fullName: System.Web.Security.FormsAuthentication
  type: Class
  summary: "Formulierverificatie services voor webtoepassingen beheert. Deze klasse kan niet worden overgenomen."
  remarks: "Formulierverificatie kan gebruikers- en valideren van het wachtwoord voor webtoepassingen die geen Windows-verificatie vereist. Met formulierverificatie, gebruikersinformatie wordt opgeslagen in een externe gegevensbron, zoals een <xref:System.Web.Security.Membership>-database, of in het configuratiebestand voor een toepassing.</xref:System.Web.Security.Membership> Als een gebruiker is geverifieerd, onderhoudt formulierverificatie een verificatieticket in een cookie of in de URL zodat een geverifieerde gebruiker niet hoeft op te geven van referenties met elke aanvraag.       Formulierverificatie is ingeschakeld door in te stellen de `mode` kenmerk van het configuratie-element moet `Forms`. U kunt vereisen dat alle aanvragen voor een toepassing een geldige gebruiker verificatieticket bevatten met behulp van het configuratie-element voor het weigeren van de aanvraag van een onbekende gebruiker, zoals wordt weergegeven in het volgende voorbeeld.      ```   <system.web>     <authentication mode=&quot;Forms&quot;>       <forms loginUrl=&quot;login.aspx&quot; />     </authentication>     <authorization>       <deny users=&quot;?&quot; />     </authorization>   </system.web>   ```In het vorige voorbeeld is een aanvraag voor een ASP.NET-pagina die deel uitmaakt van de toepassing vereist een geldige gebruikersnaam op die wordt geleverd door verificatie van formulieren. Als er geen gebruikersnaam bestaat, wordt klikt u vervolgens de aanvraag omgeleid naar de geconfigureerde <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       De klasse FormsAuthentication biedt toegang tot methoden en eigenschappen die u kunt gebruiken in een toepassing die gebruikers worden geverifieerd. De <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>methode een browser omgeleid naar de geconfigureerde <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>voor gebruikers aan te melden bij een toepassing.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> De <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>methode terug naar de oorspronkelijke beveiligde URL die is aangevraagd of de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> van een geverifieerde gebruiker wordt omgeleid</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Er zijn ook methoden waarmee u voor het beheren van tickets voor verificatie van formulieren, indien nodig."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application that uses the ASP.NET membership provider for forms authentication and requires all users to be authenticated.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the login page for an ASP.NET application that uses forms authentication and ASP.NET membership.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.fo_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.fo_5_1.aspx)]"
  syntax:
    content: public sealed class FormsAuthentication
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.#ctor
  id: '#ctor'
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klasse."
  remarks: "Deze constructor is niet bedoeld voor gebruik vanuit uw code."
  syntax:
    content: public FormsAuthentication ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  id: Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Valideert een gebruikersnaam en wachtwoord op basis van de referenties die zijn opgeslagen in het configuratiebestand voor een toepassing."
  remarks: "De Authenticate-methode controleert of de referenties van de gebruiker die zijn opgeslagen in de sectie van het toepassingsconfiguratiebestand. U kunt ook ASP.NET-lidmaatschap gebruiken voor het opslaan van referenties van gebruiker en de aanroep van de <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>om te controleren of de referenties.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Zie voor meer informatie [gebruikers beheren door gebruik van het lidmaatschap](~/add/includes/ajax-current-ext-md.md).       Voor betere beveiliging, kunt u coderen wachtwoorden worden opgeslagen in het configuratiebestand voor een toepassing met behulp van de <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>methode.</xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>"
  example:
  - "The following code example shows user credentials stored in the Web.config file for an application. The password values have been hashed using the <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> method.  \n  \n `<authentication mode=\"Forms\">`  \n  \n `<forms loginUrl=\"login.aspx\">`  \n  \n `<credentials passwordFormat=\"SHA1\">`  \n  \n `<user name=\"user1\"   password=\"27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C\" />`  \n  \n `<user name=\"user2\"   password=\"D108F80936F78DFDD333141EBC985B0233A30C7A\" />`  \n  \n `<user name=\"user3\" password=\"7BDB09781A3F23885CD43177C0508B375CB1B7E9\"/>`  \n  \n `</credentials>`  \n  \n `</forms>`  \n  \n `</authentication>`  \n  \n The following code example shows a login page that uses the Authenticate method to validate user credentials.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/visualbasic/5b51c766-1819-4817-a951-_1.aspx)]\n [!code-cs[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/csharp/5b51c766-1819-4817-a951-_1.aspx)]"
  syntax:
    content: public static bool Authenticate (string name, string password);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de gebruiker."
    - id: password
      type: System.String
      description: "Het wachtwoord voor de gebruiker."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebruikersnaam en het wachtwoord geldig zijn. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  id: CookieDomain
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hiermee wordt de waarde van het domein van de cookie voor verificatie van formulieren."
  remarks: "De waarde van de eigenschap CookieDomain is ingesteld in het configuratiebestand voor een ASP.NET-toepassing met behulp van de `domain` kenmerk van het configuratie-element. De waarde van de eigenschap CookieDomain bepaalt de <xref:System.Web.HttpCookie.Domain%2A>dat de cookie gebruikt moet worden</xref:System.Web.HttpCookie.Domain%2A>"
  example:
  - "The following code example sets the `domain` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    domain=\"contoso.com\" />  \n</authentication>  \n```"
  syntax:
    content: public static string CookieDomain { get; }
    return:
      type: System.String
      description: "De <xref:System.Web.HttpCookie.Domain*>van de cookie voor verificatie van formulieren.</xref:System.Web.HttpCookie.Domain*> De standaardwaarde is een lege tekenreeks (&quot;&quot;)."
  overload: System.Web.Security.FormsAuthentication.CookieDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieMode
  id: CookieMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Haalt een waarde die aangeeft of de toepassing is geconfigureerd voor formulierverificatie zonder cookies."
  remarks: "De eigenschap CookieMode geeft de waarde voor de `cookieless` kenmerk van het configuratie-element. De eigenschap CookieMode bepaalt of de <xref:System.Web.Security.FormsAuthenticationTicket>waarde wordt opgeslagen in een sessiecookie in de browser of opgeslagen in de <xref:System.Web.HttpRequest.QueryString%2A>eigenschap.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthenticationTicket>      > [!NOTE] > Wanneer de <xref:System.Web.Security.FormsAuthenticationTicket>waarde wordt opgeslagen in de URI, de lengte van de gegenereerde URI kan niet langer zijn dan de maximaal toegestane lengte.</xref:System.Web.Security.FormsAuthenticationTicket> Dit is meestal op wanneer de <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>eigenschap is ingesteld op de naam van de toepassing en de toepassingsnaam van de lang is (40 of meer tekens), wanneer de namen van gebruiker in de toepassing zijn lang, of wanneer lange <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>tekenreeksen worden opgeslagen in de <xref:System.Web.Security.FormsAuthenticationTicket>waarde.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> </xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Als de gegenereerde URI te lang is, de webserver retourneert een `400 - Bad Request` fout."
  example:
  - "The following code example sets the `cookieless` attribute to `AutoDetect` in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"AutoDetect\" />  \n</authentication>  \n```"
  syntax:
    content: public static System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Een van de <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> waarden die aangeeft of de toepassing is geconfigureerd voor formulierverificatie zonder cookies. De standaardwaarde is <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  id: CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Haalt een waarde die aangeeft of de toepassing is geconfigureerd voor de ondersteuning van cookieless formulierverificatie."
  remarks: "De eigenschap CookiesSupported retourneert een waarde op basis van de <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>waarde en de mogelijkheden van de browser.</xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Als de <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>eigenschap is ingesteld op <xref:System.Web.HttpCookieMode>, de eigenschap CookiesSupported retourneert `true`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Als de <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>eigenschap is ingesteld op <xref:System.Web.HttpCookieMode>, de eigenschap CookiesSupported retourneert `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Als de <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>eigenschap is ingesteld op <xref:System.Web.HttpCookieMode>, retourneert de eigenschap CookiesSupported `true` als de browser cookies ondersteunt en cookies zijn ingeschakeld; anders wordt de eigenschap CookiesSupported retourneert `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Als de <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>eigenschap is ingesteld op <xref:System.Web.HttpCookieMode>, retourneert de eigenschap CookiesSupported `true` als de <xref:System.Web.HttpRequest.Browser%2A>voor de huidige <xref:System.Web.HttpContext.Request%2A>biedt ondersteuning voor cookies en omleiden met cookies; anders wordt de eigenschap CookiesSupported retourneert `false`.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>"
  example:
  - "The following code example sets the `cookieless` attribute to <xref:System.Web.HttpCookieMode> in the Web.config file. This configuration will result in the CookiesSupported property returning `false`.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool CookiesSupported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Als de toepassing is geconfigureerd voor ondersteuning van cookieless formulierverificatie; anders <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Maakt een <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> object op basis van het ticket versleutelde formulierverificatie is doorgegeven aan de methode."
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);
    parameters:
    - id: encryptedTicket
      type: System.String
      description: "De versleutelde verificatieticket."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref> object. Als de <code> encryptedTicket </code> parameter is niet een geldig ticket <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wordt geretourneerd."
  overload: System.Web.Security.FormsAuthentication.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>encryptedTicket</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n The length of <code>encryptedTicket</code> is greater than 4096 characters.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is of an invalid format."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  id: DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "De URL opgehaald die de <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klasse worden omgeleid naar als er geen Omleidings-URL is opgegeven."
  remarks: "De waarde van de eigenschap DefaultUrl is ingesteld in het configuratiebestand voor een ASP.NET-toepassing met behulp van de `defaultUrl` kenmerk van het configuratie-element. De eigenschap DefaultUrl wordt gebruikt door de <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>methode als er geen retour-URL is opgenomen in de aanvraag.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Op dezelfde manier de <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>methode retourneert de DefaultUrl als er geen retour-URL is opgenomen in de aanvraag.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>"
  example:
  - "The following code example sets the `defaultUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string DefaultUrl { get; }
    return:
      type: System.String
      description: "De URL die de <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klasse worden omgeleid naar als er geen Omleidings-URL is opgegeven. De standaardwaarde is &quot;default.aspx.&quot;"
  overload: System.Web.Security.FormsAuthentication.DefaultUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  id: EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Haalt een waarde die aangeeft of geverifieerde gebruikers kunnen worden omgeleid naar de URL&quot;s in andere webtoepassingen."
  remarks: "De waarde van de eigenschap EnableCrossAppRedirects is ingesteld met behulp van de `enableCrossAppRedirects` kenmerk van het configuratie-element.       De eigenschap EnableCrossAppRedirects is ingeschakeld in de <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>methode wanneer de omleiding URL niet naar een pagina in de huidige toepassing wijst.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Als EnableCrossAppRedirects `true`, en vervolgens de omleiding wordt uitgevoerd; als EnableCrossAppRedirects `false`, de browser wordt omgeleid naar de pagina die is gedefinieerd in de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>      > [!NOTE] > Wanneer u pagina&quot;s voor toepassingen wordt omgeleid, moet u ervoor zorgen dat specifieke kenmerken in het configuratie-element in de geverifieerde toepassingen worden gedupliceerd. Zie voor meer informatie en een voorbeeld [Forms-verificatie tussen toepassingen](~/add/includes/ajax-current-ext-md.md).      > [!IMPORTANT] > Wanneer meerdere toepassingen omleidingen zijn toegestaan, uw site is kwetsbaar voor een aanval uit te voeren die gebruiker wordt doorverwezen naar een schadelijke website, maar de aanmeldingspagina voor uw site gebruikt. Controleer altijd of de omleidings-URL die wordt geretourneerd door de <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>methode is een URL die u verwacht dat kunt u ervoor zorgen dat u omleidingen alleen goedgekeurde websites op Internet toestaan.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> U moet ook controleren of de omleidings-URL wordt gebruikt voor het betreffende protocol (HTTP of HTTPS). Als u wilt deze verificaties uitvoert, kunt u een terugposten gebeurtenis-handler toevoegen aan uw aanmeldingspagina of u kunt een handler voor toevoegen de <xref:System.Web.UI.WebControls.Login.LoggedIn>gebeurtenis van de <xref:System.Web.UI.WebControls.Login>besturingselement.</xref:System.Web.UI.WebControls.Login> </xref:System.Web.UI.WebControls.Login.LoggedIn>"
  example:
  - "The following code example sets the `enableCrossAppRedirects` attribute to `true` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\"  \n    requireSSL=\"true\"   \n    enableCrossAppRedirects=\"true\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool EnableCrossAppRedirects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de geverifieerde gebruikers kunnen worden omgeleid naar de URL&quot;s in andere webtoepassingen. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  id: EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Formulierverificatie kunt."
  remarks: "Als de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>eigenschap is `null`, dat de eigenschap is ingesteld op de standaardwaarde van de URL van de `configurationData` parameter.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Als de <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>eigenschap is `null`, dat de eigenschap is ingesteld op de aanmeldings-URL-waarde van de `configurationData` parameter.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>"
  syntax:
    content: public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);
    parameters:
    - id: configurationData
      type: System.Collections.Specialized.NameValueCollection
      description: "Een naam / waarde-verzameling die de waarden voor &quot;defaultUrl&quot; en/of &quot;loginUrl&quot; bevat. De parameter kan niet null zijn als er geen waarden voor de standaard-URL of de aanmeldings-URL zijn."
  overload: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De toepassing is niet in de initialisatiefase vóór het starten."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  id: Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Maakt een tekenreeks met een versleutelde formulierverificatie ticket die geschikt zijn voor gebruik in een HTTP-cookie."
  remarks: ''
  example:
  - "The following code example stores the result of the Encrypt method in a cookie by using the <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> property and redirects the user to the URL returned from the <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/d209d6db-e50b-4c64-961a-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/d209d6db-e50b-4c64-961a-_1.aspx)]"
  syntax:
    content: public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);
    parameters:
    - id: ticket
      type: System.Web.Security.FormsAuthenticationTicket
      description: "De <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> object waarmee de versleutelde formulierverificatie ticket maken."
    return:
      type: System.String
      description: "Een tekenreeks met een versleutelde formulierverificatie ticket."
  overload: System.Web.Security.FormsAuthentication.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ticket</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  id: FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hiermee haalt u de naam van de cookie die wordt gebruikt voor het opslaan van het ticket voor de verificatie van formulieren."
  remarks: "De waarde van de eigenschap FormsCookieName is ingesteld in het configuratiebestand voor een ASP.NET-toepassing met behulp van de `name` kenmerk van het configuratie-element. De FormsCookieName wordt gebruikt om te verwijzen naar de cookie die slaat de <xref:System.Web.Security.FormsAuthenticationTicket>informatie.</xref:System.Web.Security.FormsAuthenticationTicket>"
  example:
  - "The following code example sets the FormsCookieName property value by using the `name` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    name=\".ASPXFORMSAUTH\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookieName { get; }
    return:
      type: System.String
      description: "De naam van de cookie die wordt gebruikt voor het opslaan van het ticket voor de verificatie van formulieren. De standaardwaarde is &quot;. ASPXAUTH&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  id: FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hiermee wordt het pad voor de cookie voor formulierverificatie gebruikt."
  remarks: "De waarde van de eigenschap FormsCookiePath is ingesteld in het configuratiebestand voor een ASP.NET-toepassing met de `path` kenmerk van het configuratie-element. De FormsCookiePath geeft de <xref:System.Web.HttpCookie.Path%2A>voor de cookie die slaat de <xref:System.Web.Security.FormsAuthenticationTicket>informatie.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following code example sets the FormsCookiePath property value by using the `path` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookiePath { get; }
    return:
      type: System.String
      description: "Het pad van de cookie waar de ticket formulierverificatie informatie wordt opgeslagen. De standaardwaarde is &quot;/&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  id: GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Maakt een verificatiecookie voor een bepaalde gebruikersnaam. Dit wordt de cookie niet ingesteld als onderdeel van het uitgaande antwoord zodat meer controle over hoe de cookie is uitgegeven door een toepassing kan hebben."
  remarks: "Het pad van de cookie wordt bepaald door de <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "De naam van de geverifieerde gebruiker."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>maken van een duurzame cookie (één die wordt opgeslagen tussen browsersessies); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.HttpCookie
      description: "Een <xref href=&quot;System.Web.HttpCookie&quot;> </xref> die versleutelde formulierverificatie ticket informatie bevat. De standaardwaarde voor de <xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>eigenschap wordt gebruikt.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  id: GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Maakt een verificatiecookie voor een bepaalde gebruikersnaam. Hiermee wordt de cookie niet ingesteld als onderdeel van het uitgaande antwoord."
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "De naam van de geverifieerde gebruiker."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>maken van een duurzame cookie (één die wordt opgeslagen tussen browsersessies); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "De <xref:System.Web.HttpCookie.Path*>van de verificatiecookie.</xref:System.Web.HttpCookie.Path*>"
    return:
      type: System.Web.HttpCookie
      description: "Een <xref href=&quot;System.Web.HttpCookie&quot;> </xref> die versleutelde formulierverificatie ticket informatie bevat."
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  id: GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Retourneert de omleidings-URL voor de oorspronkelijke aanvraag waardoor de omleiding naar de aanmeldingspagina."
  remarks: "U kunt deze methode gebruiken als u wilt uitvoeren van de omleiding in uw toepassingscode in plaats van de <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>methode.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>       De methode GetRedirectUrl retourneert de URL die is opgegeven in het query-tekenreeks met de `ReturnURL` variabelenaam. Bijvoorbeeld, in de URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, de methode GetRedirectUrl retourneert de retour-URL `caller.aspx`. Als de `ReturnURL` variabele bestaat niet, de methode GetRedirectUrl retourneert de URL in de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       De retour-URL ASP.NET automatisch toegevoegd als de browser wordt omgeleid naar de aanmeldingspagina.       Standaard de `ReturnUrl` variabele moet verwijzen naar een pagina in de huidige toepassing. Als `ReturnUrl` verwijst naar een pagina in een andere toepassing of op een andere server, de methoden GetRedirectUrl retourneert de URL in de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Als u toestaan dat de retour-URL om te verwijzen naar een pagina buiten de huidige toepassing wilt, moet u instellen de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap `true` met behulp van de `enableCrossAppRedirects` kenmerk van het configuratie-element.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Instelling de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap `true` om toe te staan tussen verschillende toepassingen omleidingen is een mogelijk beveiligingsrisico.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Zie voor meer informatie de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>"
  example:
  - "The following code example redirects authenticated users to the URL returned from the GetRedirectUrl method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/41a9cd2e-33ed-4156-8c31-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/41a9cd2e-33ed-4156-8c31-_1.aspx)]"
  syntax:
    content: public static string GetRedirectUrl (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "De naam van de geverifieerde gebruiker."
    - id: createPersistentCookie
      type: System.Boolean
      description: "Deze parameter wordt genegeerd."
    return:
      type: System.String
      description: "Een tekenreeks die de omleidings-URL bevat."
  overload: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  id: HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Produceert een geschikt voor het opslaan in een configuratiebestand op basis van het opgegeven wachtwoord en de hash-algoritme hash-wachtwoord."
  remarks: "De methode HashPasswordForStoringInConfigFile maakt een hash-wachtwoordwaarde die kan worden gebruikt bij het opslaan van referenties voor verificatie van formulieren in het configuratiebestand voor een toepassing.       Verificatiereferenties die zijn opgeslagen in het configuratiebestand voor een toepassing worden gebruikt door de <xref:System.Web.Security.FormsAuthentication.Authenticate%2A>methode om te controleren of de wachtwoorden voor gebruikers van een toepassing.</xref:System.Web.Security.FormsAuthentication.Authenticate%2A> U kunt ook kunt u ASP.NET-lidmaatschap voor het opslaan van gebruikersreferenties. Zie voor meer informatie [gebruikers beheren door gebruik van het lidmaatschap](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example takes a user name, password, and hash type and displays the  section of the configuration that includes the user definition and hashed password.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormsAuthenticationHashPassword#1](~/add/codesnippet/visualbasic/60863efe-d1c9-47ee-90e6-_1.aspx)]\n [!code-cs[FormsAuthenticationHashPassword#1](~/add/codesnippet/csharp/60863efe-d1c9-47ee-90e6-_1.aspx)]"
  syntax:
    content: public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);
    parameters:
    - id: password
      type: System.String
      description: "Het wachtwoord voor de hash."
    - id: passwordFormat
      type: System.String
      description: "Het hash-algoritme om te gebruiken. `passwordFormat`is een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> die staat voor een van de <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> opsommingswaarden."
    return:
      type: System.String
      description: "Het hash-wachtwoord."
  overload: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>password</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>passwordFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>passwordFormat</code>is geen geldige <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> waarde."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Initialize
  id: Initialize
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Initialiseert de <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> object op basis van de configuratie-instellingen voor de toepassing."
  remarks: "De methode Initialize wordt aangeroepen wanneer de <xref:System.Web.Security.FormsAuthenticationModule>maakt een exemplaar van de <xref:System.Web.Security.FormsAuthentication>klasse.</xref:System.Web.Security.FormsAuthentication> </xref:System.Web.Security.FormsAuthenticationModule> Deze methode is niet bedoeld om te worden aangeroepen vanuit uw code."
  syntax:
    content: public static void Initialize ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  id: IsEnabled
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Haalt een waarde die aangeeft of formulierverificatie is ingeschakeld."
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u formulierverificatie is ingeschakeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  id: LoginUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "De URL opgehaald voor aanmelding bij de pagina die de <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klasse omleidt."
  remarks: "De waarde van de eigenschap LoginUrl is ingesteld in het configuratiebestand voor een ASP.NET-toepassing met behulp van de `loginUrl` kenmerk van het configuratie-element. De LoginUrl wordt gebruikt door de <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>methode.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>"
  example:
  - "The following code example sets the `loginUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string LoginUrl { get; }
    return:
      type: System.String
      description: "De URL voor de aanmelding pagina die de <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klasse omleidt. De standaardwaarde is &quot;login.aspx.&quot;"
  overload: System.Web.Security.FormsAuthentication.LoginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  id: RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Een geverifieerde gebruiker omgeleid naar de oorspronkelijk aangevraagde URL of de standaard-URL."
  remarks: "De methode RedirectFromLoginPage wordt omgeleid naar de URL die is opgegeven in het query-tekenreeks met de `ReturnURL` variabelenaam. Bijvoorbeeld, in de URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, de methode RedirectFromLoginPage wordt omgeleid naar de retour-URL `caller.aspx`. Als de `ReturnURL` variabele bestaat niet, de methode RedirectFromLoginPage wordt omgeleid naar de URL in de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       De retour-URL ASP.NET automatisch toegevoegd als de browser wordt omgeleid naar de aanmeldingspagina.       Standaard de `ReturnUrl` variabele moet verwijzen naar een pagina in de huidige toepassing. Als `ReturnUrl` verwijst naar een pagina in een andere toepassing of een andere server, de methoden RedirectFromLoginPage omgeleid naar de URL in de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Als u toestaan dat leidt tot een pagina buiten de huidige toepassing wilt, moet u instellen de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap `true` met behulp van de `enableCrossAppRedirects` kenmerk van het configuratie-element.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Instelling de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap `true` om toe te staan tussen verschillende toepassingen omleidingen is een mogelijk beveiligingsrisico.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Zie voor meer informatie de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Als de <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>eigenschap is `true`, en de `ReturnUrl` variabele is in de huidige toepassing of de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap is `true`, en vervolgens de methode RedirectFromLoginPage een verificatieticket uitgeeft en het in het standaard-cookie met plaatst de <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>methode.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Als <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>is `false` en de omleidingspad is naar een URL in de huidige toepassing, het ticket is uitgegeven als onderdeel van de omleidings-URL.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Als <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>is `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>is `true`, en de omleiding URL niet naar een pagina in de huidige toepassing verwijst, de methode RedirectFromLoginPage een verificatieticket uitgeeft en plaatst het in de <xref:System.Web.HttpRequest.QueryString%2A>eigenschap.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  example:
  - "The following code example redirects validated users to either the originally requested URL or the <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. The code example uses ASP.NET membership to validate users. For more information about ASP.NET membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/1b30741b-7340-4c63-b342-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/1b30741b-7340-4c63-b342-_1.aspx)]"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "De naam van de geverifieerde gebruiker."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>maken van een duurzame cookie (één die wordt opgeslagen tussen browsersessies); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'De retour-URL opgegeven in de queryreeks bevat een ander protocol dan HTTP: of HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  id: RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Een geverifieerde gebruiker leidt terug naar de oorspronkelijk aangevraagde URL of de standaard-URL met behulp van het opgegeven cookiepad voor de cookie voor formulierverificatie."
  remarks: "De methode RedirectFromLoginPage wordt omgeleid naar de retour-URL opgegeven in het query-tekenreeks met de `ReturnURL` variabelenaam. Bijvoorbeeld, in de URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, de methode RedirectFromLoginPage wordt omgeleid naar de retour-URL `caller.aspx`. Als de `ReturnURL` variabele bestaat niet, de methode RedirectFromLoginPage wordt omgeleid naar de URL in de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       De retour-URL ASP.NET automatisch toegevoegd als de browser wordt omgeleid naar de aanmeldingspagina.       Standaard de `ReturnUrl` variabele moet verwijzen naar een pagina in de huidige toepassing. Als `ReturnUrl` verwijst naar een pagina in een andere toepassing of een andere server, de RedirectFromLoginPage methode wordt omgeleid naar de URL in de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Als u toestaan dat leidt tot een pagina buiten de huidige toepassing wilt, moet u instellen de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap `true` met behulp van de `enableCrossAppRedirects` kenmerk van het configuratie-element.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Instelling de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap `true` om toe te staan tussen verschillende toepassingen omleidingen is een mogelijk beveiligingsrisico.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Zie voor meer informatie de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Als de <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>eigenschap is `true`, en de `ReturnUrl` variabele is in de huidige toepassing of de <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>eigenschap is `true`, en vervolgens de methode RedirectFromLoginPage een verificatieticket uitgeeft en het in de cookie die is opgegeven plaatst door de `strCookiePath` parameter met behulp van de <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>methode.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Als <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>is `false` en de omleidingspad is naar een URL in de huidige toepassing, het ticket is uitgegeven als onderdeel van de omleidings-URL.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Als <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>is `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>is `true`, en de omleiding URL niet naar een pagina in de huidige toepassing verwijst, de methode RedirectFromLoginPage een verificatieticket uitgeeft en plaatst het in de <xref:System.Web.HttpRequest.QueryString%2A>eigenschap.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "De naam van de geverifieerde gebruiker."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>maken van een duurzame cookie (één die wordt opgeslagen tussen browsersessies); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Het cookiepad voor het ticket voor de verificatie van formulieren."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'De retour-URL opgegeven in de queryreeks bevat een ander protocol dan HTTP: of HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  id: RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "De browser omgeleid naar de aanmeldings-URL."
  remarks: "De methode RedirectToLoginPage leidt de browser om naar de <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       De methode RedirectToLoginPage de cookie voor formulierverificatie niet gewist. U kunt de methode RedirectToLoginPage gebruiken in combinatie met de <xref:System.Web.Security.FormsAuthentication.SignOut%2A>methode voor één gebruiker af te melden en toestaan dat een andere gebruiker aan te melden.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_0_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_0_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  id: RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "De browser omgeleid naar de aanmeldings-URL met de opgegeven queryreeks."
  remarks: "De methode RedirectToLoginPage leidt de browser van de <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>en bevat de `extraQueryString` waarde als de <xref:System.Management.ManagementQuery.QueryString%2A>voor de omgeleide URL.</xref:System.Management.ManagementQuery.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       De methode RedirectToLoginPage de cookie voor formulierverificatie niet gewist. U kunt de methode RedirectToLoginPage gebruiken in combinatie met de <xref:System.Web.Security.FormsAuthentication.SignOut%2A>methode voor één gebruiker af te melden en toestaan dat een andere gebruiker aan te melden.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/csharp/m-system.web.security.fo_1_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/visualbasic/m-system.web.security.fo_1_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage (string extraQueryString);
    parameters:
    - id: extraQueryString
      type: System.String
      description: "De query-tekenreeks wilt opnemen in de omleidings-URL."
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  id: RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Voorwaardelijk updates de uitgifte en de tijd en de vervaldatum en de tijd voor een <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  remarks: "De methode RenewTicketIfOld werkt de vervaldatum en -tijd van de opgegeven <xref:System.Web.Security.FormsAuthenticationTicket>Als de huidige datum en tijd min de <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>waarde groter is dan de <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>waarde minus de huidige datum en tijd.</xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket>       Het ticket is bijgewerkt met de <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>eigenschap is ingesteld op de huidige datum en tijd en de <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>eigenschap is ingesteld op de huidige datum en tijd plus de oorspronkelijke <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>waarde minus de oorspronkelijke <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>waarde.</xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);
    parameters:
    - id: tOld
      type: System.Web.Security.FormsAuthenticationTicket
      description: "Het ticket voor de verificatie van formulieren om bij te werken."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "De bijgewerkte <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  id: RequireSSL
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Haalt een waarde die aangeeft of de cookie voor formulierverificatie SSL vereist om te kunnen worden geretourneerd naar de server."
  remarks: "De waarde van de eigenschap RequireSSL is ingesteld in het configuratiebestand voor een ASP.NET-toepassing met behulp van de `requireSSL` kenmerk van het configuratie-element. U kunt opgeven in het bestand Web.config voor uw ASP.NET-toepassing of SSL (Secure Sockets Layer) vereist is voor de cookie voor formulierverificatie terugkeren naar de server door in te stellen de `requireSSL` kenmerk. Zie voor meer informatie <xref:System.Web.HttpCookie.Secure%2A>.</xref:System.Web.HttpCookie.Secure%2A>       Het wordt aanbevolen als u configureert `requireSSL` als `false`, ook configureren `slidingExpiration` als `false`, te verminderen de hoeveelheid tijd waarvoor een ticket geldig is."
  example:
  - "The following code example sets the `requireSSL` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool RequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als SSL vereist is voor de cookie voor formulierverificatie terug naar de server. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  id: SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Maakt een verificatieticket voor de opgegeven gebruikersnaam en toegevoegd aan de verzameling cookies van de reactie of naar de URL als u van verificatie zonder cookies gebruikmaakt."
  remarks: "De methode SetAuthCookie voegt een ticket formulierverificatie naar de collectie cookies, of de URL als <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>is `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Het ticket voor de verificatie van formulieren verstrekt formulierverificatie informatie op de volgende aanvraag is ingediend door de browser. Met verificatie van formulieren, kunt u de methode SetAuthCookie als u wilt verifiëren van een gebruiker, maar nog steeds beheer van de navigatie met omleidingen behouden."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "De naam van een geverifieerde gebruiker. Dit heeft geen toewijzen aan een Windows-account."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>maken van een permanente cookie (één die tussen browsersessies is opgeslagen); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  id: SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Maakt een verificatieticket voor de opgegeven gebruikersnaam en voegt het toe aan de verzameling cookies van het antwoord, met behulp van het opgegeven cookiepad of via de URL als u van verificatie zonder cookies gebruikmaakt."
  remarks: "De methode SetAuthCookie wordt een ticket formulierverificatie toegevoegd aan de verzameling cookies of de URL als <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>is `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Het ticket voor de verificatie van formulieren verstrekt formulierverificatie informatie op de volgende aanvraag is ingediend door de browser. Met verificatie van formulieren, kunt u de methode SetAuthCookie als u wilt verifiëren van een gebruiker, maar nog steeds beheer van de navigatie met omleidingen behouden."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "De naam van een geverifieerde gebruiker."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>maken van een duurzame cookie (één die wordt opgeslagen tussen browsersessies); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Het cookiepad voor het ticket voor de verificatie van formulieren."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SignOut
  id: SignOut
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hiermee verwijdert u de verificatie van formulieren ticket vanuit de browser."
  remarks: "De methode SignOut verwijdert u de verificatie van formulieren ticket informatie bij de cookie of URL van de <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>is `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> U kunt de methode SignOut gebruiken in combinatie met de <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>methode voor één gebruiker af te melden en toestaan dat een andere gebruiker aan te melden.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>       Als u uitsluitend in cookieless modus uitvoert of als u geen geverifieerde en anonieme gebruikers ondersteunen, u expliciet moet bepaalt u de omleiding naar de aanmeldingspagina als u speciale zakelijke logica worden uitgevoerd als gevolg van het verwijderen van de anonieme id vereist.       Als de methode SignOut wordt aangeroepen, een omleiding naar de aanmeldingspagina van de toepassing wordt gemaakt door het aanroepen van de <xref:System.Web.HttpResponse.Redirect%2A>methode met de `endResponse` parameter ingesteld op `false`.</xref:System.Web.HttpResponse.Redirect%2A> De omleiding vindt niet plaats totdat de huidige pagina volledig is uitgevoerd, zodat u aanvullende code kan worden uitgevoerd. Als de code een expliciete omleiding naar een andere pagina geen bevat, wordt de gebruiker wordt omgeleid naar de aanmeldingspagina geconfigureerd in het configuratiebestand van de toepassing.       De methode SignOut wordt aangeroepen, verwijdert alleen de cookie voor formulierverificatie. De webserver slaat geen geldig en verlopen verificatietickets voor later te vergelijken. Dit is uw site kwetsbaar voor een replay-aanval als een kwaadwillende gebruiker een geldige formulierverificatiecookie krijgt. Voor betere beveiliging bij gebruik van een cookie voor formulierverificatie, moet u het volgende doen:-absolute vervaldatum gebruikt voor formulieren verificatiecookies door in te stellen de <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>eigenschap `false`.</xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Hiermee wordt het venster waarin een gehackte cookie replay kan worden beperkt.      -Alleen uitgeven en verificatiecookies via Secure Sockets Layer (SSL), accepteer door in te stellen de <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>eigenschap `true` en door het uitvoeren van de gehele website onder SSL.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Instellen van de <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>eigenschap `true` zorgt ervoor dat ASP.NET nooit een verificatiecookie naar de browser via een niet-SSL-verbinding verzenden wordt; echter, de client mogelijk niet voldoen aan de veilige instelling voor de cookie.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Dit betekent dat de client kan de cookie voor formulierverificatie verzenden via een niet-SSL-verbinding, waardoor deze kwetsbaar voor overnemen. U kunt voorkomen dat een client verzenden van de cookie voor formulierverificatie onversleuteld door het uitvoeren van de gehele website onder SSL.      -Permanente opslag op de server gebruiken om vast te leggen wanneer een gebruiker meldt zich buiten de website en gebruik vervolgens een toepassingsgebeurtenis zoals <xref:System.Web.HttpApplication.PostAuthenticateRequest>gebeurtenis om te bepalen of de huidige gebruiker is geverifieerd met formulierverificatie.</xref:System.Web.HttpApplication.PostAuthenticateRequest> Als de gebruiker is geverifieerd met verificatie van formulieren en als de informatie in de permanente opslag wordt aangegeven dat de gebruiker is afgemeld, onmiddellijk de verificatiecookie wissen en de browser wordt terug omgeleid naar de aanmeldingspagina. Na een geslaagde aanmelding bijwerken opslag zodat de gebruiker is aangemeld. Wanneer u deze methode gebruikt, wordt uw toepassing moet de status geregistreerd in van de gebruiker bijhouden en moet ervoor zorgen dat niet-actieve gebruikers afmelden."
  example:
  - "The following code example clears the forms-authentication cookie using the SignOut method and redirects the user to the login page using the <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_2_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_2_1.aspx)]"
  syntax:
    content: public static void SignOut ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  id: SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Haalt een waarde die aangeeft of verschuivend verloop is ingeschakeld."
  remarks: "De waarde van de eigenschap SlidingExpiration is ingesteld met behulp van de `slidingExpiration` kenmerk van het configuratie-element.       Bij verschuivend verloop Hiermee stelt u de verlooptijd voor een geldige verificatiecookie als een aanvraag wordt gedaan en meer dan de helft van de time-outperiode is verstreken. Als de cookie verloopt, moet de gebruiker opnieuw worden geverifieerd. De eigenschap SlidingExpiration instelt op `false` kunt verbeteren de beveiliging van een toepassing door de tijd waarop een verificatiecookie geldig is, beperken op basis van de geconfigureerde `timeout` waarde.       We raden aan dat als u configureert `requireSSL` als `false`, ook configureren `slidingExpiration` als `false`, te verminderen de hoeveelheid tijd waarvoor een ticket geldig is."
  example:
  - "The following code example sets the `slidingExpiration` attribute to `false` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    name=\".ASPXFORMSAUTH\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"   \n    slidingExpiration=\"false\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool SlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als verschuivend verloop is ingeschakeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  id: TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Haalt een waarde die aangeeft of voor de vervaldatum van het ticket Coordinated Universal Time (UTC) of de lokale tijd te gebruiken."
  syntax:
    content: public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }
    return:
      type: System.Web.Configuration.TicketCompatibilityMode
      description: "Een waarde die aangeeft of voor de vervaldatum van het ticket Coordinated Universal Time (UTC) of de lokale tijd te gebruiken."
  overload: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Timeout
  id: Timeout
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hiermee haalt u de hoeveelheid tijd voordat een verificatieticket is verlopen."
  syntax:
    content: public static TimeSpan Timeout { get; }
    return:
      type: System.TimeSpan
      description: "De hoeveelheid tijd voordat een verificatieticket is verlopen."
  overload: System.Web.Security.FormsAuthentication.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.FormsAuthentication.#ctor
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
- uid: System.Web.Security.FormsAuthenticationTicket
  parent: System.Web.Security
  isExternal: false
  name: FormsAuthenticationTicket
  nameWithType: FormsAuthenticationTicket
  fullName: System.Web.Security.FormsAuthenticationTicket
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
- uid: System.Web.Security.FormsAuthentication.Initialize
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.SignOut
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Configuration.TicketCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: TicketCompatibilityMode
  fullName: System.Web.Configuration.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Security.FormsAuthentication.#ctor*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication
  nameWithType: FormsAuthentication.FormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Authenticate*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate
  nameWithType: FormsAuthentication.Authenticate
- uid: System.Web.Security.FormsAuthentication.CookieDomain*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt
  nameWithType: FormsAuthentication.Decrypt
- uid: System.Web.Security.FormsAuthentication.DefaultUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication
  nameWithType: FormsAuthentication.EnableFormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Encrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt
  nameWithType: FormsAuthentication.Encrypt
- uid: System.Web.Security.FormsAuthentication.FormsCookieName*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie
  nameWithType: FormsAuthentication.GetAuthCookie
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl
  nameWithType: FormsAuthentication.GetRedirectUrl
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile
- uid: System.Web.Security.FormsAuthentication.Initialize*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize
  nameWithType: FormsAuthentication.Initialize
- uid: System.Web.Security.FormsAuthentication.IsEnabled*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage
  nameWithType: FormsAuthentication.RedirectFromLoginPage
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage
  nameWithType: FormsAuthentication.RedirectToLoginPage
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld
  nameWithType: FormsAuthentication.RenewTicketIfOld
- uid: System.Web.Security.FormsAuthentication.RequireSSL*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie
  nameWithType: FormsAuthentication.SetAuthCookie
- uid: System.Web.Security.FormsAuthentication.SignOut*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut
  nameWithType: FormsAuthentication.SignOut
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
