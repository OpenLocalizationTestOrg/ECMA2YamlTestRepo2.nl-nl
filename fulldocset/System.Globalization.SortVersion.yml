### YamlMime:ManagedReference
items:
- uid: System.Globalization.SortVersion
  id: SortVersion
  children:
  - System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  - System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  - System.Globalization.SortVersion.Equals(System.Object)
  - System.Globalization.SortVersion.FullVersion
  - System.Globalization.SortVersion.GetHashCode
  - System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.SortId
  langs:
  - csharp
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
  type: Class
  summary: "Biedt informatie over de versie van Unicode gebruikt om te vergelijken en volgorde van tekenreeksen."
  remarks: "Van de [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] via de [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], elke versie van.NET Framework is opgenomen tabellen die sorteren gewichten bevatten en gegevens op de tekenreeks normalisatie en die zijn gebaseerd op een bepaalde versie van Unicode. In de [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], de aanwezigheid van deze tabellen, is afhankelijk van het besturingssysteem:: op [!INCLUDE[win7](~/add/includes/win7-md.md)] en eerdere versies van het besturingssysteem Windows de tabellen nog steeds worden gebruikt voor het vergelijken en ordening van tekenreeksen.      : Op [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], .NET Framework delegeert tekenreeksvergelijking en ordening van bewerkingen voor het besturingssysteem.       Hierdoor kan het resultaat van een vergelijking van tekenreeksen kan afhankelijk zijn niet alleen op de .NET Framework-versie, maar ook op de versie van het besturingssysteem, zoals de volgende tabel. Deze lijst van ondersteunde versies van Unicode geldt voor de vergelijking teken en sorteren op. Dit geldt niet voor classificatie van Unicode-tekens per categorie.      |. NET Framework-versie | Besturingssysteem | Unicode-versie |   |----------------------------|----------------------|---------------------|   | [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]| Alle besturingssystemen | Unicode 5.0 |   | [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] en latere versies van .NET Framework | [!INCLUDE[win7](~/add/includes/win7-md.md)]| Unicode 5.0 |   | [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] en latere versies van .NET Framework | [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)] en latere versies van Windows-besturingssysteem | Unicode-6.0 |       Op [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], omdat de versie van Unicode gebruikt in vergelijking van tekenreeksen en ordening is afhankelijk van de versie van het besturingssysteem, de resultaten van de vergelijking van tekenreeksen kunnen verschillen zelfs voor toepassingen die worden uitgevoerd op een specifieke versie van .NET Framework.       De klasse SortVersion bevat informatie over de Unicode-versie die wordt gebruikt door het .NET Framework voor tekenreeksvergelijking en bestellen. Hiermee kunnen ontwikkelaars kunnen toepassingen die kunnen worden gedetecteerd en wijzigingen in de versie van Unicode die wordt gebruikt om te vergelijken en sorteren van de toepassing tekenreeksen met succes verwerkt schrijven.       U kunt een object SortVersion op twee manieren instantiëren: - door het aanroepen van de <xref:System.Globalization.SortVersion.%23ctor%2A>constructor die een nieuwe SortVersion instantieert object op basis van een versienummer en sorteren ID.</xref:System.Globalization.SortVersion.%23ctor%2A> Deze constructor is vooral handig wanneer een object SortVersion van opgeslagen gegevens opnieuw te maken.      -Door bij het ophalen van de waarde van de <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName>eigenschap.</xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName> Deze eigenschap bevat informatie over de Unicode-versie die wordt gebruikt door de .NET Framework waarin de toepassing wordt uitgevoerd.       De klasse SortVersion heeft twee eigenschappen <xref:System.Globalization.SortVersion.FullVersion%2A>en <xref:System.Globalization.SortVersion.SortId%2A>, die aangeven dat de Unicode-versie en de specifieke cultuur gebruikt voor vergelijking van tekenreeksen.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> De <xref:System.Globalization.SortVersion.FullVersion%2A>eigenschap is een willekeurige numerieke waarde die overeenkomt met de Unicode-versie die wordt gebruikt voor vergelijking van tekenreeksen, en de <xref:System.Globalization.SortVersion.SortId%2A>eigenschap is een willekeurige <xref:System.Guid>die de cultuur waarvan conventies voor tekenreeksvergelijking weerspiegelt.</xref:System.Guid> </xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> De waarden van deze twee eigenschappen zijn belangrijk alleen wanneer u twee SortVersion objecten met behulp van vergelijken de <xref:System.Globalization.SortVersion.Equals%2A>methode, de <xref:System.Globalization.SortVersion.op_Equality%2A>-operator, of de <xref:System.Globalization.SortVersion.op_Inequality%2A>operator.</xref:System.Globalization.SortVersion.op_Inequality%2A> </xref:System.Globalization.SortVersion.op_Equality%2A> </xref:System.Globalization.SortVersion.Equals%2A>       Doorgaans gebruikt u een object SortVersion bij het opslaan of bij het ophalen van een vorm van gegevens van de cultuur-gevoelige, geordende tekenreeks, zoals indexen of de letterlijke tekenreeksen zelf. Hiervoor moet de volgende stappen uit: 1.  Als de geordende tekenreeksgegevens wordt opgeslagen, de <xref:System.Globalization.SortVersion.FullVersion%2A>en <xref:System.Globalization.SortVersion.SortId%2A>eigenschapswaarden worden ook opgeslagen.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A>      2.  Wanneer de geordende tekenreeksgegevens wordt opgehaald, kunt u opnieuw maken het SortVersion-object dat is gebruikt voor het ordenen van de tekenreeksen door het aanroepen van de <xref:System.Globalization.SortVersion.%23ctor%2A>constructor.</xref:System.Globalization.SortVersion.%23ctor%2A>      3.  Dit nieuwe geïnstantieerd SortVersion-object wordt vergeleken met een object SortVersion die overeenkomt met de cultuur waarvan conventies rangschikken van het gegevenstype string.      4.  Als de twee SortVersion objecten niet gelijk zijn, moet het gegevenstype string volgorde worden gewijzigd.       Het voorbeeld bevat een afbeelding."
  example:
  - "The following example contains a portion of the source code from an application that uses the SortVersion class to ensure that the native names of <xref:System.Globalization.RegionInfo> objects are ordered appropriately for the current system and current culture. It uses the <xref:System.IO.BinaryReader> and <xref:System.IO.BinaryWriter> objects to store and retrieve ordered data from a data file named `Regions.dat` rather than retrieving and ordering data each time the application is run. The example first checks to determine whether the data file exists. If it does not, it creates the data and sets the `reindex` flag, which indicates that the data must be resorted and saved again. Otherwise, it retrieves the data and compares the saved SortVersion object with the SortVersion object for the current culture on the current system. If they are not equal, or if the `reindex` flag had been set previously, it resorts the <xref:System.Globalization.RegionInfo> data.  \n  \n [!code-cs[System.Globalization.SortVersion#1](~/add/codesnippet/csharp/t-system.globalization.s_0_1.cs)]\n [!code-vb[System.Globalization.SortVersion#1](~/add/codesnippet/visualbasic/t-system.globalization.s_0_1.vb)]"
  syntax:
    content: 'public sealed class SortVersion : IEquatable<System.Globalization.SortVersion>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Globalization.SortVersion>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  id: '#ctor(System.Int32,System.Guid)'
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Maakt een nieuw exemplaar van de <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> klasse."
  remarks: "Deze constructor wordt een <xref:System.Globalization.SortVersion>object met de opgegeven versie en de sorteervolgorde ID.</xref:System.Globalization.SortVersion> De `fullVersion` argument is toegewezen aan de <xref:System.Globalization.SortVersion.FullVersion%2A>eigenschap.</xref:System.Globalization.SortVersion.FullVersion%2A> De `sortId` argument is toegewezen aan de <xref:System.Globalization.SortVersion.SortId%2A>eigenschap.</xref:System.Globalization.SortVersion.SortId%2A>       Deze constructor is nuttig voor het opnieuw maken van een <xref:System.Globalization.SortVersion>object op basis van gegevens die zijn geserialiseerd of opgeslagen.</xref:System.Globalization.SortVersion> Deze versie kan vervolgens worden vergeleken met de huidige toepassingsversie om te bepalen of de versie van Unicode gebruikt voor het weergeven en volgorde van de toepassing tekenreeksen beschikbaar is."
  syntax:
    content: public SortVersion (int fullVersion, Guid sortId);
    parameters:
    - id: fullVersion
      type: System.Int32
      description: "Een versienummer."
    - id: sortId
      type: System.Guid
      description: "Een sorteervolgorde-ID."
  overload: System.Globalization.SortVersion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  id: Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> exemplaar is gelijk aan een opgegeven <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> object."
  remarks: "Twee <xref:System.Globalization.SortVersion>objecten zijn gelijk als hun <xref:System.Globalization.SortVersion.FullVersion%2A>en <xref:System.Globalization.SortVersion.SortId%2A>Eigenschappen zijn gelijk.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public bool Equals (System.Globalization.SortVersion other);
    parameters:
    - id: other
      type: System.Globalization.SortVersion
      description: "Het object dat moet worden vergeleken met dit exemplaar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> other </code> vertegenwoordigt dezelfde versie als dit exemplaar; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert een waarde die aangeeft of dit <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> exemplaar is gelijk aan een bepaald object."
  remarks: "Twee <xref:System.Globalization.SortVersion>objecten zijn gelijk als hun <xref:System.Globalization.SortVersion.FullVersion%2A>en <xref:System.Globalization.SortVersion.SortId%2A>Eigenschappen zijn gelijk.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Een object te vergelijken met dit exemplaar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> obj </code> is een <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> -object met dezelfde versie als dit exemplaar; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.FullVersion
  id: FullVersion
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Haalt het nummer van de volledige versie van de <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> object."
  remarks: "De waarde van de eigenschap FullVersion geeft de Unicode-versie gebruikt voor het normaliseren en vergelijken van tekenreeksen."
  syntax:
    content: public int FullVersion { get; }
    return:
      type: System.Int32
      description: "Het versienummer van dit <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> object."
  overload: System.Globalization.SortVersion.FullVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.GetHashCode
  id: GetHashCode
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert een hash-code voor dit exemplaar."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een 32-bits geheel getal met teken hash-code."
  overload: System.Globalization.SortVersion.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee wordt aangegeven of twee <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> exemplaren zijn gelijk."
  remarks: "Twee <xref:System.Globalization.SortVersion>objecten zijn gelijk als beide `null`, of als hun <xref:System.Globalization.SortVersion.FullVersion%2A>en <xref:System.Globalization.SortVersion.SortId%2A>Eigenschappen zijn gelijk.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public static bool op_Equality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "De eerste instantie moet worden vergeleken."
    - id: right
      type: System.Globalization.SortVersion
      description: "De tweede instantie moet worden vergeleken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the values of <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Globalization.SortVersion.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee wordt aangegeven of twee <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> exemplaren niet gelijk zijn."
  remarks: "Twee <xref:System.Globalization.SortVersion>objecten zijn niet gelijk zijn als er een `null` en de andere niet, of als ze verschillende hebben <xref:System.Globalization.SortVersion.FullVersion%2A>of <xref:System.Globalization.SortVersion.SortId%2A>eigenschapswaarden.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public static bool op_Inequality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "De eerste instantie moet worden vergeleken."
    - id: right
      type: System.Globalization.SortVersion
      description: "De tweede instantie moet worden vergeleken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarden van <code> left </code> en <code> right </code> zijn niet gelijk zijn, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.SortId
  id: SortId
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee wordt een globally unique identifier voor dit <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> object."
  remarks: "De waarde van de eigenschap SortId geeft de cultuur waarvan conventies tekenreeksvergelijking en sorteren beïnvloeden."
  syntax:
    content: public Guid SortId { get; }
    return:
      type: System.Guid
      description: "Een globaal unieke id voor dit <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> object."
  overload: System.Globalization.SortVersion.SortId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.SortVersion
  parent: System.Globalization
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
- uid: System.Globalization.SortVersion.Equals(System.Object)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
- uid: System.Globalization.SortVersion.FullVersion
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.SortId
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
- uid: System.Globalization.SortVersion.#ctor*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion.SortVersion
- uid: System.Globalization.SortVersion.Equals*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals
  nameWithType: SortVersion.Equals
- uid: System.Globalization.SortVersion.FullVersion*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode
  nameWithType: SortVersion.GetHashCode
- uid: System.Globalization.SortVersion.op_Equality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality
  nameWithType: SortVersion.op_Equality
- uid: System.Globalization.SortVersion.op_Inequality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality
  nameWithType: SortVersion.op_Inequality
- uid: System.Globalization.SortVersion.SortId*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
