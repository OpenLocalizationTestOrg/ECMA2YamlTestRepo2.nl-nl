### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HMACSHA512
  id: HMACSHA512
  children:
  - System.Security.Cryptography.HMACSHA512.#ctor
  - System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  - System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  langs:
  - csharp
  name: HMACSHA512
  nameWithType: HMACSHA512
  fullName: System.Security.Cryptography.HMACSHA512
  type: Class
  summary: "Berekent de Hash-based Message Authentication Code (HMAC) met behulp van de <xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref> hash-functie."
  remarks: "HMACSHA512 is een soort sleutelhash-algoritme dat is gemaakt op basis van de SHA-512 hash-functie en gebruikt als een Hash-based Message Authentication Code (HMAC). Het HMAC-proces combineert een geheime sleutel met de berichtgegevens en bewerkt het resultaat. De hash-waarde is gemengde opnieuw met de geheime sleutel en vervolgens een tweede keer opgedeeld. De uitvoerhash is 512 bits lang.       Een HMAC kan worden gebruikt om te bepalen of een bericht verzonden over een niet-beveiligde kanaal is geknoeid, mits de verzender en ontvanger een geheime sleutel delen. De afzender wordt de hash-waarde voor de oorspronkelijke gegevens berekend en worden de oorspronkelijke gegevens en de hash-waarde als een enkel bericht verzonden. De ontvanger de hash-waarde voor het ontvangen bericht berekend en controleert of de berekende HMAC overeenkomt met de HMAC verzonden.       Als de oorspronkelijke en berekende hash-waarden overeenkomen, wordt het bericht is geverifieerd. Als ze niet overeenkomen, is de gegevens of de hash-waarde gewijzigd. HMAC&quot;s bieden bescherming tegen knoeien omdat de geheime sleutel is vereist voor het wijzigen van het bericht en de juiste hash-waarde reproduceren.       HMACSHA512 sleutels van elke grootte accepteert en een hash-reeks met een lengte van 512 bits produceert."
  example:
  - "The following example shows how to sign a file by using the HMACSHA512 object and then how to verify the file.  \n  \n [!code-cpp[HMACSHA512#1](~/add/codesnippet/cpp/t-system.security.crypto_83_1.cpp)]\n [!code-vb[HMACSHA512#1](~/add/codesnippet/visualbasic/t-system.security.crypto_83_1.vb)]\n [!code-cs[HMACSHA512#1](~/add/codesnippet/csharp/t-system.security.crypto_83_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HMACSHA512 : System.Security.Cryptography.HMAC
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  - System.Security.Cryptography.HMAC
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.BlockSizeValue
  - System.Security.Cryptography.HMAC.Create
  - System.Security.Cryptography.HMAC.Create(System.String)
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA512.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  name: HMACSHA512()
  nameWithType: HMACSHA512.HMACSHA512()
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;> </xref> klasse met een willekeurig gegenereerde sleutel."
  remarks: "Met deze constructor is een 64-byte, willekeurig gegenereerde sleutel wordt gebruikt."
  syntax:
    content: public HMACSHA512 ();
    parameters: []
  overload: System.Security.Cryptography.HMACSHA512.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  name: HMACSHA512(Byte[])
  nameWithType: HMACSHA512.HMACSHA512(Byte[])
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;> </xref> klasse met de opgegeven sleutel gegevens."
  remarks: ''
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACSHA512> class.
  syntax:
    content: public HMACSHA512 (byte[] key);
    parameters:
    - id: key
      type: System.Byte[]
      description: "De geheime sleutel voor <xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;> </xref> versleuteling. De sleutel mag een willekeurige lengte. De aanbevolen grootte is echter 128 bytes. Als de sleutel meer dan 128 bytes lang is, deze wordt opgedeeld (met behulp van SHA-512) worden afgeleid van een 128-byte-sleutel. Als het minder dan 128 bytes, wordt deze aangevuld tot 128 bytes."
  overload: System.Security.Cryptography.HMACSHA512.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  id: ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA512.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Biedt een oplossing voor de [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] uitvoering van de <xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;> </xref> -algoritme niet consistent met is de [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] implementatie."
  remarks: "Het doel van de eigenschap ProduceLegacyHmacValues Booleaanse waarde is om in te schakelen [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] toepassingen om te communiceren met [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] toepassingen. Als u deze eigenschap instelt op `true`, wordt de <xref:System.Security.Cryptography.HMACSHA512>object produceert waarden die overeenkomen met de waarden die wordt geproduceerd door de [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)].</xref:System.Security.Cryptography.HMACSHA512> Nadat u uw HMAC-object maakt, moet u deze eigenschap slechts één keer instellen. U moet opnieuw instellen van uw sleutel later, zoals wordt weergegeven in het volgende voorbeeld.      ```   public static void Test()       {       HMACSHA512 hmac = new HMACSHA512();       hmac.ProduceLegacyHmacValues = true;       hmac.Key = // ...Get the HMAC key.       // ...       // Use the HMAC algorithm.       // ...       }   ```"
  syntax:
    content: public bool ProduceLegacyHmacValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om in te schakelen [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] toepassingen om te communiceren met [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] toepassingen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HMAC
  isExternal: false
  name: System.Security.Cryptography.HMAC
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.HMACSHA512.#ctor
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: HMACSHA512()
  nameWithType: HMACSHA512.HMACSHA512()
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512()
- uid: System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: HMACSHA512(Byte[])
  nameWithType: HMACSHA512.HMACSHA512(Byte[])
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA512.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HMACSHA512.#ctor*
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: HMACSHA512
  nameWithType: HMACSHA512.HMACSHA512
- uid: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues*
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA512.ProduceLegacyHmacValues
