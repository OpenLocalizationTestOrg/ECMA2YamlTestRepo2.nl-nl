### YamlMime:ManagedReference
items:
- uid: System.Web.Caching.CacheItemUpdateCallback
  id: CacheItemUpdateCallback
  langs:
  - csharp
  name: CacheItemUpdateCallback
  nameWithType: CacheItemUpdateCallback
  fullName: System.Web.Caching.CacheItemUpdateCallback
  type: Delegate
  summary: "Definieert een callback-methode voor het verwittigen van toepassingen voordat een cache-item wordt verwijderd uit de cache."
  remarks: "Wanneer een object in de cache is verlopen, ASP.NET CacheItemUpdateCallback methode aangeroepen met de sleutel voor het cache-item en de reden waarom dat u mogelijk wilt bijwerken van het item. De overige parameters van deze methode zijn out-parameters. U de nieuwe cache-item en de optionele verlopen en de afhankelijkheid waarden worden gebruikt bij het vernieuwen van het item in de cache te geven.       De callback van de update niet wordt aangeroepen als het item in de cache expliciet wordt verwijderd met behulp van een aanroep van <xref:System.Web.Caching.Cache.Remove%2A>.</xref:System.Web.Caching.Cache.Remove%2A>       Als u wilt dat het item in de cache worden verwijderd uit de cache, moet u retourneren `null` in de `expensiveObject` parameter. Anders wordt het resultaat van een verwijzing naar de nieuwe gegevens in de cache met behulp van de `expensiveObject` parameter. Als u geen verlopen of afhankelijkheid waarden opgeeft, wordt het item verwijderd uit de cache alleen wanneer het geheugen nodig is.       Als de retouraanroepmethode er een uitzondering gegenereerd, wordt ASP.NET onderdrukt van de uitzondering en verwijdert u de waarde in de cache."
  syntax:
    content: public delegate void CacheItemUpdateCallback(string key, CacheItemUpdateReason reason, out object expensiveObject, out CacheDependency dependency, out DateTime absoluteExpiration, out TimeSpan slidingExpiration);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
