### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.EventDrivenActivity
  id: EventDrivenActivity
  children:
  - System.Workflow.Activities.EventDrivenActivity.#ctor
  - System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)
  - System.Workflow.Activities.EventDrivenActivity.EventActivity
  langs:
  - csharp
  name: EventDrivenActivity
  nameWithType: EventDrivenActivity
  fullName: System.Workflow.Activities.EventDrivenActivity
  type: Class
  summary: "Verpakt een <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> waarvan de uitvoering wordt geïnitialiseerd door een gebeurtenis. Deze klasse kan niet worden overgenomen."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Het is een <xref:System.Workflow.ComponentModel.CompositeActivity>die wordt gebruikt om een gebeurtenis te verwerken; doorgaans deze kan worden verhoogd van de host of door de runtime in reactie op een vertraging timer verloopt.</xref:System.Workflow.ComponentModel.CompositeActivity> EventDrivenActivity is overgenomen van <xref:System.Workflow.Activities.SequenceActivity>; het is daarom een reeks met de aanvullende beperking van de eerste activiteit moet een <xref:System.Workflow.Activities.IEventActivity>.</xref:System.Workflow.Activities.IEventActivity> </xref:System.Workflow.Activities.SequenceActivity>       De EventDrivenActivity is een <xref:System.Workflow.ComponentModel.CompositeActivity>, wat betekent dat de EventDrivenActivity kan andere activiteiten bevatten.</xref:System.Workflow.ComponentModel.CompositeActivity> De EventDrivenActivity is vergelijkbaar met de <xref:System.Workflow.Activities.SequenceActivity>activiteit, met enkele extra kenmerken.</xref:System.Workflow.Activities.SequenceActivity>       Een EventDrivenActivity moet hebben tot een bovenliggende die ofwel een <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, of <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.</xref:System.Workflow.Activities.StateMachineWorkflowActivity> </xref:System.Workflow.Activities.StateActivity> </xref:System.Workflow.Activities.ListenActivity>       Het eerste onderliggende lid van een EventDrivenActivity-activiteit moet een activiteit die eigenschappen van <xref:System.Workflow.Activities.IEventActivity>.</xref:System.Workflow.Activities.IEventActivity> overneemt Alle volgende onderliggende objecten kunnen activiteiten van elk type zijn. De <xref:System.Workflow.Activities.IEventActivity>geblokkeerd en wacht tot de in behandeling instantie van een aantal gebeurtenissen, zoals het starten van een timer of de aankomst van een bericht.</xref:System.Workflow.Activities.IEventActivity> Als de gebeurtenis, de <xref:System.Workflow.Activities.IEventActivity>uitgevoerd en vervolgens alle volgende activiteiten worden uitgevoerd is voltooid.</xref:System.Workflow.Activities.IEventActivity>       Wanneer de <xref:System.Workflow.Activities.StateMachineWorkflowActivity>bevat een EventDrivenActivity de EventDrivenActivity, is enkele beperkingen:-de EventDrivenActivity kan bevatten één en slechts één activiteit van het type <xref:System.Workflow.Activities.IEventActivity>.</xref:System.Workflow.Activities.IEventActivity> </xref:System.Workflow.Activities.StateMachineWorkflowActivity>      -De <xref:System.Workflow.Activities.HandleExternalEventActivity>moet de eerste onderliggende activiteit.</xref:System.Workflow.Activities.HandleExternalEventActivity> Een <xref:System.Workflow.Activities.HandleExternalEventActivity>kan niet in de gebeurtenis-handler voor een onderliggende activiteit en een onderliggende de EventDrivenActivity kan niet als de <xref:System.Workflow.Activities.HandleExternalEventActivity>is niet het eerste onderliggende.</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.HandleExternalEventActivity>      -Als de eerste activiteit is de <xref:System.Workflow.Activities.HandleExternalEventActivity>, de gebeurtenis-handler kan geen activiteiten bevatten.</xref:System.Workflow.Activities.HandleExternalEventActivity> Als een activiteit andere dan <xref:System.Workflow.Activities.HandleExternalEventActivity>is opgenomen in EventDrivenActivity, dat geen activiteit een gebeurtenis-handler.</xref:System.Workflow.Activities.HandleExternalEventActivity>       Bijvoorbeeld, een activiteit die ondersteuning biedt voor gebeurtenisverwerking binnen de EventDrivenActivity kan worden gebruikt, maar de activiteit geen gebeurtenishandlers die zijn gekoppeld aan zichzelf.       Een ander voorbeeld is dat de EventDrivenActivity kan bevatten een <xref:System.Workflow.Activities.ConditionedActivityGroup>, maar de <xref:System.Workflow.Activities.ConditionedActivityGroup>mag zelf geen <xref:System.Workflow.Activities.HandleExternalEventActivity>klassen.</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.ConditionedActivityGroup> </xref:System.Workflow.Activities.ConditionedActivityGroup>"
  example:
  - "The following code example shows how to use the EventDrivenActivity to perform state machine transitions. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#185](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#185)]\n [!code-vb[wf_samples#185](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#185)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.EventDrivenDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.EventDrivenActivity), "Resources.EventDriven.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.EventDrivenValidator))]

      public sealed class EventDrivenActivity : System.Workflow.Activities.SequenceActivity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.SequenceActivity
  implements: []
  inheritedMembers:
  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.EventDrivenActivity
  langs:
  - csharp
  name: EventDrivenActivity()
  nameWithType: EventDrivenActivity.EventDrivenActivity()
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.EventDrivenActivity> class.  This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#187](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#187)]\n [!code-vb[wf_samples#187](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#187)]"
  syntax:
    content: public EventDrivenActivity ();
    parameters: []
  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.EventDrivenActivity
  langs:
  - csharp
  name: EventDrivenActivity(String)
  nameWithType: EventDrivenActivity.EventDrivenActivity(String)
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;> </xref> klasse met de naam van de activiteit."
  syntax:
    content: public EventDrivenActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "De gebruiker die naam van de activiteit."
  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity
  id: EventActivity
  parent: System.Workflow.Activities.EventDrivenActivity
  langs:
  - csharp
  name: EventActivity
  nameWithType: EventDrivenActivity.EventActivity
  fullName: System.Workflow.Activities.EventDrivenActivity.EventActivity
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Hiermee haalt u de activiteit die de wijziging stations."
  syntax:
    content: public System.Workflow.Activities.IEventActivity EventActivity { get; }
    return:
      type: System.Workflow.Activities.IEventActivity
      description: "De gebeurtenisactiviteit die de wijziging stations."
  overload: System.Workflow.Activities.EventDrivenActivity.EventActivity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.SequenceActivity
  isExternal: false
  name: System.Workflow.Activities.SequenceActivity
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventDrivenActivity()
  nameWithType: EventDrivenActivity.EventDrivenActivity()
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity()
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventDrivenActivity(String)
  nameWithType: EventDrivenActivity.EventDrivenActivity(String)
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventActivity
  nameWithType: EventDrivenActivity.EventActivity
  fullName: System.Workflow.Activities.EventDrivenActivity.EventActivity
- uid: System.Workflow.Activities.IEventActivity
  parent: System.Workflow.Activities
  isExternal: false
  name: IEventActivity
  nameWithType: IEventActivity
  fullName: System.Workflow.Activities.IEventActivity
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor*
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventDrivenActivity
  nameWithType: EventDrivenActivity.EventDrivenActivity
- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity*
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventActivity
  nameWithType: EventDrivenActivity.EventActivity
