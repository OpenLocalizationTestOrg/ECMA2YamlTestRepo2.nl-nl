### YamlMime:ManagedReference
items:
- uid: System.Data.ConstraintCollection
  id: ConstraintCollection
  children:
  - System.Data.ConstraintCollection.Add(System.Data.Constraint)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])
  - System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)
  - System.Data.ConstraintCollection.Clear
  - System.Data.ConstraintCollection.CollectionChanged
  - System.Data.ConstraintCollection.Contains(System.String)
  - System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)
  - System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)
  - System.Data.ConstraintCollection.IndexOf(System.String)
  - System.Data.ConstraintCollection.Item(System.Int32)
  - System.Data.ConstraintCollection.Item(System.String)
  - System.Data.ConstraintCollection.List
  - System.Data.ConstraintCollection.Remove(System.Data.Constraint)
  - System.Data.ConstraintCollection.Remove(System.String)
  - System.Data.ConstraintCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: ConstraintCollection
  nameWithType: ConstraintCollection
  fullName: System.Data.ConstraintCollection
  type: Class
  summary: "Vertegenwoordigt een verzameling van beperkingen voor een <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "De ConstraintCollection toegankelijk is via de <xref:System.Data.DataTable.Constraints%2A?displayProperty=fullName>eigenschap.</xref:System.Data.DataTable.Constraints%2A?displayProperty=fullName>       De ConstraintCollection mag beide <xref:System.Data.UniqueConstraint>en - <xref:System.Data.ForeignKeyConstraint>objecten voor de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.UniqueConstraint> Een <xref:System.Data.UniqueConstraint>object zorgt ervoor dat gegevens in een specifieke kolom altijd uniek is voor de integriteit van gegevens behouden.</xref:System.Data.UniqueConstraint> De <xref:System.Data.ForeignKeyConstraint>bepaalt wat er gebeurt in de gerelateerde tabellen wanneer gegevens in de <xref:System.Data.DataTable>wordt bijgewerkt of verwijderd.</xref:System.Data.DataTable> </xref:System.Data.ForeignKeyConstraint> Bijvoorbeeld, als een rij wordt verwijderd, de <xref:System.Data.ForeignKeyConstraint>wordt bepaald of de gerelateerde rijen ook zijn verwijderd (een cascade), of enige andere weg.</xref:System.Data.ForeignKeyConstraint>      > [!NOTE] > Bij het toevoegen van een <xref:System.Data.DataRelation>dat een relatie tussen twee tabellen maakt een <xref:System.Data.DataSet>, zowel een <xref:System.Data.ForeignKeyConstraint>en een <xref:System.Data.UniqueConstraint>automatisch worden gemaakt.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataSet> </xref:System.Data.DataRelation> De <xref:System.Data.UniqueConstraint>wordt toegepast op de primaire-sleutelkolom in het bovenliggende item <xref:System.Data.DataTable>, en de beperking wordt toegevoegd aan deze tabel ConstraintCollection.</xref:System.Data.DataTable> </xref:System.Data.UniqueConstraint> De <xref:System.Data.ForeignKeyConstraint>wordt toegepast op de primaire-sleutelkolom en de refererende-sleutelkolom en de beperking wordt toegevoegd aan de onderliggende tabel ConstraintCollection.</xref:System.Data.ForeignKeyConstraint>       De ConstraintCollection standaardregel voor verzameling methodes zoals gebruikt <xref:System.Data.ConstraintCollection.Add%2A>, <xref:System.Data.ConstraintCollection.Clear%2A>, en <xref:System.Data.ConstraintCollection.Remove%2A>.</xref:System.Data.ConstraintCollection.Remove%2A> </xref:System.Data.ConstraintCollection.Clear%2A> </xref:System.Data.ConstraintCollection.Add%2A> Bovendien de <xref:System.Data.ConstraintCollection.Contains%2A>methode kan worden gebruikt om te zoeken op de aanwezigheid van een bepaalde beperking in de verzameling.</xref:System.Data.ConstraintCollection.Contains%2A>       Een <xref:System.Data.UniqueConstraint>gemaakt wanneer een <xref:System.Data.DataColumn>met de <xref:System.Data.DataColumn.Unique%2A>eigenschap ingesteld op `true` wordt toegevoegd aan een <xref:System.Data.DataTable>van het object <xref:System.Data.DataColumnCollection>.</xref:System.Data.DataColumnCollection> </xref:System.Data.DataTable> </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn> </xref:System.Data.UniqueConstraint>       Een <xref:System.Data.ForeignKeyConstraint>wordt gemaakt wanneer een <xref:System.Data.DataRelation>wordt toegevoegd aan een <xref:System.Data.DataSet>van het object <xref:System.Data.DataRelationCollection>.</xref:System.Data.DataRelationCollection> </xref:System.Data.DataSet> </xref:System.Data.DataRelation> </xref:System.Data.ForeignKeyConstraint>"
  example:
  - "The first example creates a <xref:System.Data.DataTable>, and adds a <xref:System.Data.DataColumn> (with its <xref:System.Data.DataColumn.Unique%2A> property set to `true`) to the <xref:System.Data.DataColumnCollection>. The second example creates a <xref:System.Data.DataSet>, two <xref:System.Data.DataTable> objects, four columns, and a <xref:System.Data.DataRelation>. The count of constraints is then printed to show that a <xref:System.Data.ForeignKeyConstraint> and a <xref:System.Data.UniqueConstraint> are created when a <xref:System.Data.DataRelation> is added to the <xref:System.Data.DataSet> object's <xref:System.Data.DataRelationCollection.%23ctor%2A>.  \n  \n [!code-vb[Classic WebData ConstraintCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.constraint_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection Example#1](~/add/codesnippet/csharp/t-system.data.constraint_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class ConstraintCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.Data.Constraint)
  id: Add(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(Constraint)
  nameWithType: ConstraintCollection.Add(Constraint)
  fullName: System.Data.ConstraintCollection.Add(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Voegt de opgegeven <xref href=&quot;System.Data.Constraint&quot;> </xref> object aan de verzameling."
  remarks: "Als de verzameling is gewijzigd door het toevoegen of verwijderen van de beperkingen, de <xref:System.Data.ConstraintCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.UniqueConstraint> to the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_2_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.constraint_2_1.cs)]"
  syntax:
    content: public void Add (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "The <xref uid=&quot;langword_csharp_Constraint&quot; name=&quot;Constraint&quot; href=&quot;&quot;></xref> to add."
  overload: System.Data.ConstraintCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> constraint </code> -argument is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De beperking al behoort tot deze verzameling of behoort tot een andere verzameling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "De verzameling al heeft een beperking met dezelfde naam. (De vergelijking is niet hoofdlettergevoelig)."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)
  id: Add(System.String,System.Data.DataColumn,System.Boolean)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn,Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn,Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een nieuwe <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> met de opgegeven naam <xref href=&quot;System.Data.DataColumn&quot;> </xref>, en de waarde die aangeeft of de kolom een primaire sleutel is en voegt het toe aan de verzameling."
  remarks: "De <xref:System.Data.ConstraintCollection.CollectionChanged>gebeurtenis treedt op als de beperking is toegevoegd.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.ConstraintCollection.Add%2A> method to create and add a new <xref:System.Data.UniqueConstraint> to a <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Add2 Example#1](~/add/codesnippet/visualbasic/08c49299-33fb-4956-b60e-_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Add2 Example#1](~/add/codesnippet/csharp/08c49299-33fb-4956-b60e-_1.cs)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn column, bool primaryKey);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref uid=&quot;langword_csharp_UniqueConstraint&quot; name=&quot;UniqueConstraint&quot; href=&quot;&quot;> </xref>."
    - id: column
      type: System.Data.DataColumn
      description: "De <xref href=&quot;System.Data.DataColumn&quot;> </xref> waarop de beperking van toepassing is."
    - id: primaryKey
      type: System.Boolean
      description: "Geeft aan of de kolom moet de primaire sleutel. Als <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, de kolom is een primaire sleutelkolom."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_UniqueConstraint&quot; name=&quot;UniqueConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De beperking hoort al bij deze verzameling.       - Of - de beperking behoort tot een andere verzameling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "De verzameling al heeft een beperking met de opgegeven naam. (De vergelijking is niet hoofdlettergevoelig)."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn)
  nameWithType: ConstraintCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een nieuwe <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> bovenliggende kolommen en onderliggende met de opgegeven naam en de beperking toegevoegd aan de verzameling."
  remarks: "De <xref:System.Data.ConstraintCollection.CollectionChanged>gebeurtenis treedt op als de beperking is toegevoegd.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example adds a new <xref:System.Data.ForeignKeyConstraint> to the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Add3 Example#1](~/add/codesnippet/csharp/0f033e89-31da-4fc4-b9fb-_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Add3 Example#1](~/add/codesnippet/visualbasic/0f033e89-31da-4fc4-b9fb-_1.vb)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn primaryKeyColumn, System.Data.DataColumn foreignKeyColumn);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>."
    - id: primaryKeyColumn
      type: System.Data.DataColumn
      description: "De primaire sleutel of de bovenliggende activiteit, <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
    - id: foreignKeyColumn
      type: System.Data.DataColumn
      description: "De refererende sleutel of een onderliggende <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_ForeignKeyConstraint&quot; name=&quot;ForeignKeyConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)
  id: Add(System.String,System.Data.DataColumn[],System.Boolean)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn[],Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een nieuwe <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> met de opgegeven naam, matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten en de waarde die aangeeft of de kolom een primaire sleutel is en voegt het toe aan de verzameling."
  remarks: "De <xref:System.Data.ConstraintCollection.CollectionChanged>gebeurtenis treedt op als de beperking is toegevoegd.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example creates an array of <xref:System.Data.DataColumn> objects that are used to create a new <xref:System.Data.UniqueConstraint> in a specific <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Add1 Example#1](~/add/codesnippet/visualbasic/716b020f-3b2b-4515-aaa4-_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Add1 Example#1](~/add/codesnippet/csharp/716b020f-3b2b-4515-aaa4-_1.cs)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn[] columns, bool primaryKey);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref>."
    - id: columns
      type: System.Data.DataColumn[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten waarop de beperking van toepassing is."
    - id: primaryKey
      type: System.Boolean
      description: "Geeft aan of de kolom moet de primaire sleutel. Als <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, de kolom is een primaire sleutelkolom."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_UniqueConstraint&quot; name=&quot;UniqueConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De beperking hoort al bij deze verzameling.       - Of - de beperking behoort tot een andere verzameling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "De verzameling al heeft een beperking met de opgegeven naam. (De vergelijking is niet hoofdlettergevoelig)."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: ConstraintCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt een nieuwe <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>, met de opgegeven matrices van kolommen van de bovenliggende en onderliggende kolommen en de beperking worden toegevoegd aan de verzameling."
  remarks: "De <xref:System.Data.ConstraintCollection.CollectionChanged>gebeurtenis treedt op als de beperking is toegevoegd.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example creates two arrays of <xref:System.Data.DataColumn> objects, and then creates two <xref:System.Data.ForeignKeyConstraint> relationships between two tables in a dataset.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Add4 Example#1](~/add/codesnippet/csharp/050b7657-d2ac-4ddc-a26f-_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Add4 Example#1](~/add/codesnippet/visualbasic/050b7657-d2ac-4ddc-a26f-_1.vb)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn[] primaryKeyColumns, System.Data.DataColumn[] foreignKeyColumns);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>."
    - id: primaryKeyColumns
      type: System.Data.DataColumn[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten die de primaire sleutel of de bovenliggende kolommen zijn."
    - id: foreignKeyColumns
      type: System.Data.DataColumn[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten die de refererende sleutel of onderliggende kolommen."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_ForeignKeyConstraint&quot; name=&quot;ForeignKeyConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])
  id: AddRange(System.Data.Constraint[])
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: AddRange(Constraint[])
  nameWithType: ConstraintCollection.AddRange(Constraint[])
  fullName: System.Data.ConstraintCollection.AddRange(Constraint[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopieert de elementen van de opgegeven <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> matrix aan het einde van de verzameling."
  remarks: "Als <xref:System.Data.DataTable.BeginInit%2A>is aangeroepen, `AddRange` heeft niet de objecten toevoegen aan de verzameling tot <xref:System.Data.DataTable.EndInit%2A>wordt aangeroepen.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A> Op het moment dat `EndInit` is aangeroepen, wordt de verzameling worden ingevuld met de items die zijn opgegeven in de meest recente aanroep `AddRange`. Als `AddRange` is meermaals aangeroepen binnen een `BeginInit`  /  `EndInit` sequentiëren, alleen de items die zijn opgegeven in de meest recente aanroep `AddRange` worden toegevoegd."
  example:
  - "The following example creates primary and foreign key constraints, and adds them to the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_1_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.constraint_1_1.cs)]"
  syntax:
    content: public void AddRange (System.Data.Constraint[] constraints);
    parameters:
    - id: constraints
      type: System.Data.Constraint[]
      description: "Een matrix van <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> objecten toevoegen aan de verzameling."
  overload: System.Data.ConstraintCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)
  id: CanRemove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: CanRemove(Constraint)
  nameWithType: ConstraintCollection.CanRemove(Constraint)
  fullName: System.Data.ConstraintCollection.CanRemove(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt aangegeven of een <xref href=&quot;System.Data.Constraint&quot;> </xref> kunnen worden verwijderd."
  remarks: "Het standaardgedrag telkens wanneer een <xref:System.Data.DataRelation>wordt toegevoegd aan een <xref:System.Data.DataSet>, is het toevoegen van een <xref:System.Data.ForeignKeyConstraint>naar de bovenliggende tabel en een <xref:System.Data.UniqueConstraint>naar de onderliggende tabel.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataSet> </xref:System.Data.DataRelation> De <xref:System.Data.UniqueConstraint>wordt toegepast op de primaire-sleutelkolom van de bovenliggende tabel en de <xref:System.Data.ForeignKeyConstraint>wordt toegepast op de refererende-sleutelkolom van de onderliggende tabel.</xref:System.Data.ForeignKeyConstraint> </xref:System.Data.UniqueConstraint> Omdat u verwijdert de <xref:System.Data.UniqueConstraint>voordat u verwijdert de <xref:System.Data.ForeignKeyConstraint>oorzaken een uitzondering gegenereerd, u moet altijd de CanRemove methode gebruiken voordat u aanroept verwijderen, om ervoor te zorgen dat de <xref:System.Data.UniqueConstraint>kan worden verwijderd.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.UniqueConstraint>"
  example:
  - "The following example uses the CanRemove method to determine whether a <xref:System.Data.Constraint> can be removed, before trying to remove it.  \n  \n [!code-vb[Classic WebData ConstraintCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_11_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.constraint_11_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "De <xref href=&quot;System.Data.Constraint&quot;> </xref> moet worden getest voor verwijdering van de verzameling."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Data.Constraint&quot;> </xref> kunnen worden verwijderd uit verzameling, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.ConstraintCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Clear
  id: Clear
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ConstraintCollection.Clear()
  fullName: System.Data.ConstraintCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wist u de verzameling van een <xref href=&quot;System.Data.Constraint&quot;> </xref> objecten."
  remarks: "De <xref:System.Data.ConstraintCollection.CollectionChanged>gebeurtenis treedt op als deze actie geslaagd is.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example clears all constraints from the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.constraint_8_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_8_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.ConstraintCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: ConstraintCollection.CollectionChanged
  fullName: System.Data.ConstraintCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Deze gebeurtenis treedt op wanneer de <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> wordt gewijzigd vanwege <xref href=&quot;System.Data.Constraint&quot;> </xref> objecten worden toegevoegd of verwijderd."
  remarks: 'Zie voor meer informatie over het verwerken van gebeurtenissen [KROONTJESPEN: gebeurtenissen verbruikt](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates how to use the CollectionChanged event.  \n  \n [!code-vb[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.constraint_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.constraint_1.cs)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ConstraintCollection.Contains(String)
  fullName: System.Data.ConstraintCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt aangegeven of de <xref href=&quot;System.Data.Constraint&quot;> </xref> object dat is opgegeven met de naam bestaat in de verzameling."
  remarks: "Gebruik de methode bevat om te bepalen of de opgegeven <xref:System.Data.Constraint>bestaat voordat er wordt geprobeerd deze te verwijderen uit de verzameling.</xref:System.Data.Constraint> U kunt ook de <xref:System.Data.ConstraintCollection.CanRemove%2A>methode om te bepalen of een <xref:System.Data.Constraint>kan worden verwijderd.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A>"
  example:
  - "The following example determines whether the specified <xref:System.Data.Constraint> exists in the <xref:System.Data.ConstraintCollection> before its deletion.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.constraint_6_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_6_1.vb)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "De <xref:System.Data.Constraint.ConstraintName*>van de beperking.</xref:System.Data.Constraint.ConstraintName*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verzameling de opgegeven beperking bevat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.ConstraintCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)
  id: CopyTo(System.Data.Constraint[],System.Int32)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: CopyTo(Constraint[],Int32)
  nameWithType: ConstraintCollection.CopyTo(Constraint[],Int32)
  fullName: System.Data.ConstraintCollection.CopyTo(Constraint[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De verzameling objecten kopieert naar een eendimensionale <xref:System.Array>exemplaar beginnend bij de opgegeven index.</xref:System.Array>"
  syntax:
    content: public void CopyTo (System.Data.Constraint[] array, int index);
    parameters:
    - id: array
      type: System.Data.Constraint[]
      description: "De eendimensionale <xref:System.Array>die het doel van de waarden die zijn gekopieerd uit de verzameling is.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "De index van de matrix die moet worden ingevoegd."
  overload: System.Data.ConstraintCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)
  id: IndexOf(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: IndexOf(Constraint)
  nameWithType: ConstraintCollection.IndexOf(Constraint)
  fullName: System.Data.ConstraintCollection.IndexOf(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De index van de opgegeven opgehaald <xref href=&quot;System.Data.Constraint&quot;> </xref>."
  remarks: "Gebruik de methode IndexOf te retourneren van een index moet worden gebruikt met ofwel de <xref:System.Data.ConstraintCollection.Contains%2A>of <xref:System.Data.ConstraintCollection.Remove%2A>methode.</xref:System.Data.ConstraintCollection.Remove%2A> </xref:System.Data.ConstraintCollection.Contains%2A>"
  example:
  - "The following example uses the IndexOf method to return the index of a <xref:System.Data.Constraint>. The index is passed to the <xref:System.Data.ConstraintCollection.Contains%2A> method, before it is removed, to determine whether the collection contains the constraint.  \n  \n [!code-vb[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_4_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.constraint_4_1.cs)]"
  syntax:
    content: public int IndexOf (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "De <xref href=&quot;System.Data.Constraint&quot;> </xref> om naar te zoeken."
    return:
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref href=&quot;System.Data.Constraint&quot;> </xref> als het zich in de verzameling; anders wordt -1."
  overload: System.Data.ConstraintCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: ConstraintCollection.IndexOf(String)
  fullName: System.Data.ConstraintCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Met deze eigenschap wordt de index van de <xref href=&quot;System.Data.Constraint&quot;> </xref> opgegeven met de naam."
  remarks: "Gebruik de <xref:System.Data.ConstraintCollection.IndexOf%2A>methode om te retourneren van een index moet worden gebruikt met ofwel de <xref:System.Data.ConstraintCollection.Contains%2A>of <xref:System.Data.ConstraintCollection.Remove%2A>methode.</xref:System.Data.ConstraintCollection.Remove%2A> </xref:System.Data.ConstraintCollection.Contains%2A> </xref:System.Data.ConstraintCollection.IndexOf%2A>"
  example:
  - "The following example uses the <xref:System.Data.ConstraintCollection.IndexOf%2A> method to return the index of a <xref:System.Data.Constraint>. The index is passed to the <xref:System.Data.ConstraintCollection.Contains%2A> method to determine whether the collection contains the constraint, before removing it.  \n  \n [!code-vb[Classic WebData ConstraintCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_0_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.constraint_0_1.cs)]"
  syntax:
    content: public int IndexOf (string constraintName);
    parameters:
    - id: constraintName
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.Constraint&quot;> </xref>."
    return:
      type: System.Int32
      description: "De index van de <xref href=&quot;System.Data.Constraint&quot;> </xref> als het zich in de verzameling; anders wordt -1."
  overload: System.Data.ConstraintCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ConstraintCollection.Item(Int32)
  fullName: System.Data.ConstraintCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.Constraint&quot;> </xref> uit de verzameling met de opgegeven index."
  remarks: "Gebruik de <xref:System.Data.ConstraintCollection.Contains%2A>methode om te testen op de aanwezigheid van een specifieke beperking.</xref:System.Data.ConstraintCollection.Contains%2A>"
  example:
  - "The following example gets each <xref:System.Data.Constraint> from the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_2_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.constraint_2_1.cs)]"
  syntax:
    content: public System.Data.Constraint this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "De index van de beperking te retourneren."
    return:
      type: System.Data.Constraint
      description: "De <xref href=&quot;System.Data.Constraint&quot;> </xref> bij de opgegeven index."
  overload: System.Data.ConstraintCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Waarde voor de index is groter dan het aantal items in de verzameling."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ConstraintCollection.Item(String)
  fullName: System.Data.ConstraintCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.Constraint&quot;> </xref> uit de verzameling met de opgegeven naam."
  remarks: "Gebruik de <xref:System.Data.ConstraintCollection.Contains%2A>methode om te testen op de aanwezigheid van een specifieke beperking.</xref:System.Data.ConstraintCollection.Contains%2A>"
  example:
  - "The following example gets the named <xref:System.Data.Constraint>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.constraint_3_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_3_1.vb)]"
  syntax:
    content: public System.Data.Constraint this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "De <xref:System.Data.Constraint.ConstraintName*>van de beperking te retourneren.</xref:System.Data.Constraint.ConstraintName*>"
    return:
      type: System.Data.Constraint
      description: "De <xref href=&quot;System.Data.Constraint&quot;> </xref> met de opgegeven naam; anders een null-waarde als de <xref href=&quot;System.Data.Constraint&quot;> </xref> bestaat niet."
  overload: System.Data.ConstraintCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.List
  id: List
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: List
  nameWithType: ConstraintCollection.List
  fullName: System.Data.ConstraintCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "Moet worden toegevoegd."
  overload: System.Data.ConstraintCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Remove(System.Data.Constraint)
  id: Remove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Remove(Constraint)
  nameWithType: ConstraintCollection.Remove(Constraint)
  fullName: System.Data.ConstraintCollection.Remove(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verwijdert de opgegeven <xref href=&quot;System.Data.Constraint&quot;> </xref> uit de verzameling."
  remarks: "Voordat u de `Remove` methode, kunt u de <xref:System.Data.ConstraintCollection.Contains%2A>methode om te bepalen of de verzameling het doel bevat <xref:System.Data.Constraint>, en de <xref:System.Data.ConstraintCollection.CanRemove%2A>methode om te bepalen of een <xref:System.Data.Constraint>kan worden verwijderd.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A> </xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.Contains%2A>       De <xref:System.Data.ConstraintCollection.CollectionChanged>gebeurtenis treedt op als de beperking is verwijderd.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - >-
    [!code-cs[Classic WebData ConstraintCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.constraint_9_1.cs)]
     [!code-vb[Classic WebData ConstraintCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_9_1.vb)]
  syntax:
    content: public void Remove (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "De <xref href=&quot;System.Data.Constraint&quot;> </xref> te verwijderen."
  overload: System.Data.ConstraintCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>constraint</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De beperking behoort niet tot de verzameling."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ConstraintCollection.Remove(String)
  fullName: System.Data.ConstraintCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Data.Constraint&quot;> </xref> object dat is opgegeven met de naam van de verzameling."
  remarks: "Voordat u de `Remove` methode, kunt u de <xref:System.Data.ConstraintCollection.Contains%2A>methode om te bepalen of de verzameling het doel bevat <xref:System.Data.Constraint>, en de <xref:System.Data.ConstraintCollection.CanRemove%2A>methode om te bepalen of een <xref:System.Data.Constraint>kan worden verwijderd.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A> </xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.Contains%2A>       De <xref:System.Data.ConstraintCollection.CollectionChanged>gebeurtenis treedt op als de beperking is verwijderd.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example removes a <xref:System.Data.Constraint> from a <xref:System.Data.ConstraintCollection> after testing for its presence with the <xref:System.Data.ConstraintCollection.Contains%2A> method, and whether it can be removed with the <xref:System.Data.ConstraintCollection.CanRemove%2A> method.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_5_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.constraint_5_1.cs)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Data.Constraint&quot;> </xref> te verwijderen."
  overload: System.Data.ConstraintCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ConstraintCollection.RemoveAt(Int32)
  fullName: System.Data.ConstraintCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Data.Constraint&quot;> </xref> object in de opgegeven index uit de verzameling."
  remarks: "De <xref:System.Data.ConstraintCollection.IndexOf%2A>methode retourneert de index van een specifieke <xref:System.Data.Constraint>.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.IndexOf%2A>       Voordat u de `RemoveAt` methode, kunt u de <xref:System.Data.ConstraintCollection.Contains%2A>methode om te bepalen of de verzameling het doel bevat <xref:System.Data.Constraint>, en de <xref:System.Data.ConstraintCollection.CanRemove%2A>methode om te bepalen of een <xref:System.Data.Constraint>kan worden verwijderd.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A> </xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.Contains%2A>       De <xref:System.Data.ConstraintCollection.CollectionChanged>gebeurtenis treedt op als de beperking is verwijderd.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.ConstraintCollection.IndexOf%2A> method together with the RemoveAt method to remove a constraint from the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.data.constraint_7_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_7_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De index van de <xref href=&quot;System.Data.Constraint&quot;> </xref> te verwijderen."
  overload: System.Data.ConstraintCollection.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "De verzameling heeft geen een beperking op deze index."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.ConstraintCollection.Add(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(Constraint)
  nameWithType: ConstraintCollection.Add(Constraint)
  fullName: System.Data.ConstraintCollection.Add(Constraint)
- uid: System.Data.Constraint
  parent: System.Data
  isExternal: false
  name: Constraint
  nameWithType: Constraint
  fullName: System.Data.Constraint
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn,Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn,Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn)
  nameWithType: ConstraintCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,DataColumn)
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn[],Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn[],Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],Boolean)
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: ConstraintCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],DataColumn[])
- uid: System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: AddRange(Constraint[])
  nameWithType: ConstraintCollection.AddRange(Constraint[])
  fullName: System.Data.ConstraintCollection.AddRange(Constraint[])
- uid: System.Data.Constraint[]
  parent: System.Data
  isExternal: false
  name: Constraint
  nameWithType: Constraint
  fullName: System.Data.Constraint[]
  spec.csharp:
  - uid: System.Data.Constraint
    name: Constraint
    nameWithType: Constraint
    fullName: Constraint[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CanRemove(Constraint)
  nameWithType: ConstraintCollection.CanRemove(Constraint)
  fullName: System.Data.ConstraintCollection.CanRemove(Constraint)
- uid: System.Data.ConstraintCollection.Clear
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Clear()
  nameWithType: ConstraintCollection.Clear()
  fullName: System.Data.ConstraintCollection.Clear()
- uid: System.Data.ConstraintCollection.CollectionChanged
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: ConstraintCollection.CollectionChanged
  fullName: System.Data.ConstraintCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.ConstraintCollection.Contains(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ConstraintCollection.Contains(String)
  fullName: System.Data.ConstraintCollection.Contains(String)
- uid: System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CopyTo(Constraint[],Int32)
  nameWithType: ConstraintCollection.CopyTo(Constraint[],Int32)
  fullName: System.Data.ConstraintCollection.CopyTo(Constraint[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: IndexOf(Constraint)
  nameWithType: ConstraintCollection.IndexOf(Constraint)
  fullName: System.Data.ConstraintCollection.IndexOf(Constraint)
- uid: System.Data.ConstraintCollection.IndexOf(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: ConstraintCollection.IndexOf(String)
  fullName: System.Data.ConstraintCollection.IndexOf(String)
- uid: System.Data.ConstraintCollection.Item(System.Int32)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ConstraintCollection.Item(Int32)
  fullName: System.Data.ConstraintCollection.Item(Int32)
- uid: System.Data.ConstraintCollection.Item(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Item(String)
  nameWithType: ConstraintCollection.Item(String)
  fullName: System.Data.ConstraintCollection.Item(String)
- uid: System.Data.ConstraintCollection.List
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: List
  nameWithType: ConstraintCollection.List
  fullName: System.Data.ConstraintCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.ConstraintCollection.Remove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Remove(Constraint)
  nameWithType: ConstraintCollection.Remove(Constraint)
  fullName: System.Data.ConstraintCollection.Remove(Constraint)
- uid: System.Data.ConstraintCollection.Remove(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ConstraintCollection.Remove(String)
  fullName: System.Data.ConstraintCollection.Remove(String)
- uid: System.Data.ConstraintCollection.RemoveAt(System.Int32)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ConstraintCollection.RemoveAt(Int32)
  fullName: System.Data.ConstraintCollection.RemoveAt(Int32)
- uid: System.Data.ConstraintCollection.Add*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add
  nameWithType: ConstraintCollection.Add
- uid: System.Data.ConstraintCollection.AddRange*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: AddRange
  nameWithType: ConstraintCollection.AddRange
- uid: System.Data.ConstraintCollection.CanRemove*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CanRemove
  nameWithType: ConstraintCollection.CanRemove
- uid: System.Data.ConstraintCollection.Clear*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Clear
  nameWithType: ConstraintCollection.Clear
- uid: System.Data.ConstraintCollection.Contains*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Contains
  nameWithType: ConstraintCollection.Contains
- uid: System.Data.ConstraintCollection.CopyTo*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConstraintCollection.CopyTo
- uid: System.Data.ConstraintCollection.IndexOf*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: IndexOf
  nameWithType: ConstraintCollection.IndexOf
- uid: System.Data.ConstraintCollection.Item*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Item
  nameWithType: ConstraintCollection.Item
- uid: System.Data.ConstraintCollection.List*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: List
  nameWithType: ConstraintCollection.List
- uid: System.Data.ConstraintCollection.Remove*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Remove
  nameWithType: ConstraintCollection.Remove
- uid: System.Data.ConstraintCollection.RemoveAt*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ConstraintCollection.RemoveAt
