### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  id: AsymmetricSignatureDeformatter
  children:
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  langs:
  - csharp
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter
  type: Class
  summary: "Hiermee geeft u de abstracte basisklasse waaruit alle implementaties van asymmetrische deformatters afgeleid."
  remarks: "Asymmetrische deformatters Controleer of de digitale handtekeningen die zijn gemaakt met behulp van implementaties van <xref:System.Security.Cryptography.AsymmetricSignatureFormatter>.</xref:System.Security.Cryptography.AsymmetricSignatureFormatter>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class AsymmetricSignatureDeformatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: AsymmetricSignatureDeformatter()
  nameWithType: AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;> </xref>."
  remarks: "U kan geen exemplaar van een abstracte klasse maken. Toepassingscode maakt een nieuw exemplaar van een afgeleide klasse.       Implementaties van <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A>en <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A>bij het instellen van de sleutel en hash-algoritme voordat u een implementatie van <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A> </xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A> </xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A> gebruiken"
  syntax:
    content: protected AsymmetricSignatureDeformatter ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)
  id: SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: SetHashAlgorithm(String)
  nameWithType: AsymmetricSignatureDeformatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer deze worden overschreven in een afgeleide klasse, stelt het hash-algoritme moet worden gebruikt voor het verifiëren van de handtekening."
  remarks: "U moet een hash-algoritme instellen voordat u een implementatie van <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>"
  syntax:
    content: public abstract void SetHashAlgorithm (string strName);
    parameters:
    - id: strName
      type: System.String
      description: "De naam van het hash-algoritme moet worden gebruikt voor het verifiëren van de handtekening."
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer deze worden overschreven in een afgeleide klasse, stelt de openbare sleutel moet worden gebruikt voor het verifiëren van de handtekening."
  remarks: "U moet een sleutel ingesteld voordat het aanroepen van een implementatie van <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>"
  syntax:
    content: public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Het exemplaar van een implementatie van <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> die bevat de openbare sleutel."
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  id: VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: VerifySignature(Byte[],Byte[])
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Wanneer in een afgeleide klasse genegeerd, controleert u of de handtekening voor de opgegeven gegevens."
  remarks: "U moet een openbare sleutel en een hash-algoritme opgeven voordat u deze methode aanroept."
  syntax:
    content: public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "De gegevens die zijn ondertekend met `rgbSignature`."
    - id: rgbSignature
      type: System.Byte[]
      description: "De handtekening worden gecontroleerd voor `rgbHash`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> rgbSignature </code> overeenkomt met de handtekening berekend met behulp van de opgegeven hash-algoritme en de sleutel op <code> rgbHash </code>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  id: VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: VerifySignature(HashAlgorithm,Byte[])
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Controleert of de handtekening van de opgegeven hash-waarde."
  remarks: "Deze methode stelt het hash-algoritme moet worden gebruikt voor het verifiëren van de handtekening van de invoer-hash-algoritme."
  syntax:
    content: public virtual bool VerifySignature (System.Security.Cryptography.HashAlgorithm hash, byte[] rgbSignature);
    parameters:
    - id: hash
      type: System.Security.Cryptography.HashAlgorithm
      description: "Het hash-algoritme gebruiken om te controleren of de handtekening."
    - id: rgbSignature
      type: System.Byte[]
      description: "De handtekening worden gecontroleerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de handtekening geldig voor de hash is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>hash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: AsymmetricSignatureDeformatter()
  nameWithType: AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm(String)
  nameWithType: AsymmetricSignatureDeformatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: VerifySignature(Byte[],Byte[])
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: VerifySignature(HashAlgorithm,Byte[])
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor*
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm*
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm
  nameWithType: AsymmetricSignatureDeformatter.SetHashAlgorithm
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey*
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: SetKey
  nameWithType: AsymmetricSignatureDeformatter.SetKey
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature*
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: VerifySignature
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature
