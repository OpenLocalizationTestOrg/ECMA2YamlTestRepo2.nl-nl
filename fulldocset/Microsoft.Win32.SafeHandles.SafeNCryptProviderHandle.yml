### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  id: SafeNCryptProviderHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor
  - Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle
  langs:
  - csharp
  name: SafeNCryptProviderHandle
  nameWithType: SafeNCryptProviderHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  type: Class
  summary: "Biedt een SafeHandle die een sleutelarchiefprovider (NCRYPT_PROV_HANDLE) vertegenwoordigt."
  remarks: "Deze klasse moet worden gebruikt bij het werken met systeemeigen code die een NCRYPT_PROV_HANDLE verwacht.      > [!IMPORTANT] > Dit type implementeert de <xref:System.IDisposable>interface.</xref:System.IDisposable> Wanneer u klaar bent met het type, moet u beschikken over het direct of indirect. Aanroepen voor het rechtstreeks verwijderen van het type ervan <xref:System.IDisposable.Dispose%2A>methode in een `try` / `catch` blok.</xref:System.IDisposable.Dispose%2A> Gebruiken om de buitengebruikstelling van het indirect, een taal constructie zoals `using` (in C#) of `Using` (in Visual Basic). Zie voor meer informatie de sectie &quot;Met behulp van een Object dat wordt ge√Ømplementeerd IDisposable&quot; in de <xref:System.IDisposable>interface onderwerp.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public sealed class SafeNCryptProviderHandle : Microsoft.Win32.SafeHandles.SafeNCryptHandle
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  langs:
  - csharp
  name: SafeNCryptProviderHandle()
  nameWithType: SafeNCryptProviderHandle.SafeNCryptProviderHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.SafeNCryptProviderHandle()
  type: Constructor
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle&quot;> </xref> klasse."
  syntax:
    content: public SafeNCryptProviderHandle ();
    parameters: []
  overload: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle
  id: ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  langs:
  - csharp
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptProviderHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseNativeHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: Microsoft.Win32.SafeHandles.SafeNCryptHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  isExternal: false
  name: SafeNCryptProviderHandle()
  nameWithType: SafeNCryptProviderHandle.SafeNCryptProviderHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.SafeNCryptProviderHandle()
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  isExternal: false
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptProviderHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  isExternal: false
  name: SafeNCryptProviderHandle
  nameWithType: SafeNCryptProviderHandle.SafeNCryptProviderHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  isExternal: false
  name: ReleaseNativeHandle
  nameWithType: SafeNCryptProviderHandle.ReleaseNativeHandle
