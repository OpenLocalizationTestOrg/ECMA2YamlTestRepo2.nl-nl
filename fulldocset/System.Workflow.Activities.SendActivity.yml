### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.SendActivity
  id: SendActivity
  children:
  - System.Workflow.Activities.SendActivity.#ctor
  - System.Workflow.Activities.SendActivity.#ctor(System.String)
  - System.Workflow.Activities.SendActivity.AfterResponse
  - System.Workflow.Activities.SendActivity.AfterResponseEvent
  - System.Workflow.Activities.SendActivity.BeforeSend
  - System.Workflow.Activities.SendActivity.BeforeSendEvent
  - System.Workflow.Activities.SendActivity.ChannelToken
  - System.Workflow.Activities.SendActivity.Context
  - System.Workflow.Activities.SendActivity.CustomAddress
  - System.Workflow.Activities.SendActivity.CustomAddressProperty
  - System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  - System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  - System.Workflow.Activities.SendActivity.InitializeProperties
  - System.Workflow.Activities.SendActivity.ParameterBindings
  - System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  - System.Workflow.Activities.SendActivity.ServiceOperationInfo
  - System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  langs:
  - csharp
  name: SendActivity
  nameWithType: SendActivity
  fullName: System.Workflow.Activities.SendActivity
  type: Class
  summary: "Clientactiviteit modellen van het synchrone aanroepen van een [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] servicebewerking."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]De activiteit SendActivity kunt u deelnemen aan een conversatie met een [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service met behulp van een vooraf gedefinieerde bericht exchange-patroon.      > [!NOTE] > SendActivity voor de activiteit is een blokkerende activiteiten, wat betekent dat de uitvoering van de werkstroom wordt geblokkeerd tot uitvoering door de activiteit is voltooid.       Het bericht exchange patronen ondersteund door de activiteit SendActivity bevatten:-One-way verzenden bericht de SendActivity activiteit verzendt een bericht, maar een reactie van de service niet verwacht.      -Aanvraag verzenden - ontvangen antwoord de SendActivity activiteit wordt een bericht verzonden en wordt gewacht totdat een antwoord is ontvangen van de service.      -Het verzenden van aanvragen - fout met betrekking tot de SendActivity activiteit verzendt een bericht en wacht tot een antwoord ontvangen of een fout wordt ontvangen van de service. Tijdens de uitvoering genereert de send-activiteit alle van de fouten die zijn ontvangen van de server. <xref:System.Workflow.ComponentModel.FaultHandlerActivity>activiteiten kunnen worden gebruikt voor het afhandelen van de fouten in de werkstroom van de client.</xref:System.Workflow.ComponentModel.FaultHandlerActivity>      > [!NOTE] > Deze activiteit deel uitmaakt van [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]. Voor de equivalente activiteit in [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], Zie <xref:System.ServiceModel.Activities.Send>.</xref:System.ServiceModel.Activities.Send>"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))]

      public sealed class SendActivity : System.Workflow.ComponentModel.Activity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SendActivity()
  nameWithType: SendActivity.SendActivity()
  fullName: System.Workflow.Activities.SendActivity.SendActivity()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> klasse."
  remarks: "De <xref:System.Workflow.Activities.SendActivity>constructor doorgaans wordt aangeroepen in de code naast-bestand gemaakt door de workflow designer.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.  This example was adapted from the `Conversations` SDK sample.  \n  \n [!code-cs[SendActivity#16](~/add/codesnippet/csharp/m-system.workflow.activi_9_1.cs)]"
  syntax:
    content: public SendActivity ();
    parameters: []
  overload: System.Workflow.Activities.SendActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SendActivity(String)
  nameWithType: SendActivity.SendActivity(String)
  fullName: System.Workflow.Activities.SendActivity.SendActivity(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> klasse met de opgegeven <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> eigenschap."
  remarks: "De <xref:System.Workflow.Activities.SendActivity>constructor doorgaans wordt aangeroepen in de code naast-bestand gemaakt door de workflow designer.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.  \n  \n [!code-cs[SendActivity#17](~/add/codesnippet/csharp/m-system.workflow.activi_17_1.cs)]"
  syntax:
    content: public SendActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "De waarde die is toegewezen aan <xref:System.Workflow.ComponentModel.Activity.Name*>wanneer de activiteit is geïnitialiseerd.</xref:System.Workflow.ComponentModel.Activity.Name*>"
  overload: System.Workflow.Activities.SendActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.AfterResponse
  id: AfterResponse
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: AfterResponse
  nameWithType: SendActivity.AfterResponse
  fullName: System.Workflow.Activities.SendActivity.AfterResponse
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Deze gebeurtenis treedt op nadat het antwoord is ontvangen van de service."
  remarks: "Deze gebeurtenis-handler gekoppeld aan deze gebeurtenis kan worden gebruikt om te lezen van de geretourneerde waarde van de aangeroepen bewerking van de service."
  example:
  - "The following example shows how to use the `AfterResponse` event.  \n  \n [!code-cs[SendActivity#2](~/add/codesnippet/csharp/e-system.workflow.activi_4_1.cs)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.SendActivityEventArgs> AfterResponse;
    return:
      type: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.AfterResponseEvent
  id: AfterResponseEvent
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: AfterResponseEvent
  nameWithType: SendActivity.AfterResponseEvent
  fullName: System.Workflow.Activities.SendActivity.AfterResponseEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref href=&quot;System.Workflow.Activities.SendActivity.AfterResponse&quot;> </xref> gebeurtenis."
  remarks: "Deze gebeurtenis afhankelijkheidseigenschap kan worden gebruikt voor binding van de send-activiteit <xref:System.Workflow.Activities.SendActivity.AfterResponse>gebeurtenis naar een openbare-gebeurtenis-handler op de klasse van de werkstroom.</xref:System.Workflow.Activities.SendActivity.AfterResponse>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.BeforeSend
  id: BeforeSend
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: BeforeSend
  nameWithType: SendActivity.BeforeSend
  fullName: System.Workflow.Activities.SendActivity.BeforeSend
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Deze gebeurtenis treedt op voordat de <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> activiteit verzendt het bericht naar de service."
  remarks: "Deze gebeurtenis-handler gekoppeld aan deze gebeurtenis kan worden gebruikt om de parameterwaarden voor de servicebewerking wordt aangeroepen.      > [!NOTE] > De context van een <xref:System.Workflow.Activities.SendActivity>kan niet worden ingesteld in deze gebeurtenis-handler.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to use the `BeforeSend` event. This example was adapted from the `Conversations` SDK sample.  \n  \n [!code-cs[SendActivity#3](~/add/codesnippet/csharp/e-system.workflow.activi_3_1.cs)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.SendActivityEventArgs> BeforeSend;
    return:
      type: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.BeforeSendEvent
  id: BeforeSendEvent
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: BeforeSendEvent
  nameWithType: SendActivity.BeforeSendEvent
  fullName: System.Workflow.Activities.SendActivity.BeforeSendEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> die is gericht de <xref href=&quot;System.Workflow.Activities.SendActivity.BeforeSend&quot;> </xref> gebeurtenis."
  remarks: "Deze gebeurtenis afhankelijkheidseigenschap kan worden gebruikt voor binding van de send-activiteit <xref:System.Workflow.Activities.SendActivity.BeforeSend>gebeurtenis naar een openbare-gebeurtenis-handler op de klasse van de werkstroom.</xref:System.Workflow.Activities.SendActivity.BeforeSend>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.ChannelToken
  id: ChannelToken
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ChannelToken
  nameWithType: SendActivity.ChannelToken
  fullName: System.Workflow.Activities.SendActivity.ChannelToken
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "<xref href=&quot;System.Workflow.Activities.ChannelToken&quot;></xref>gebruikt door de <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> zelf te koppelen aan een clientkanaal."
  remarks: "Een kanaal-token geeft de naam van het kanaal, het bereik van het kanaal en de naam van het eindpunt configuratie moet worden gebruikt bij het vaststellen van het kanaal. De naam van het eindpunt in het configuratiebestand is het adres, binding en contractinformatie voor een service die de <xref:System.Workflow.Activities.SendActivity>activiteit communiceert met.</xref:System.Workflow.Activities.SendActivity>       De kanaal-token bevat ook een unieke kanaal-naam en een naam voor de eigenaarsactiviteit voor het token. Een kanaal-token kan worden gedeeld tussen meerdere verzenden activiteiten die u gebruiken hetzelfde eindpunt wilt te communiceren met een service."
  example:
  - "The following example shows how to access the `ChannelToken` property. This example was adapted from the `CalculatorClient` SDK sample.  \n  \n [!code-cs[SendActivity#7](~/add/codesnippet/csharp/p-system.workflow.activi_31_1.cs)]"
  syntax:
    content: public System.Workflow.Activities.ChannelToken ChannelToken { get; set; }
    return:
      type: System.Workflow.Activities.ChannelToken
      description: "Een <xref href=&quot;System.Workflow.Activities.ChannelToken&quot;> </xref> definiëren van de client een kanaal dat een <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> gebruikt om te communiceren met een service."
  overload: System.Workflow.Activities.SendActivity.ChannelToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.Context
  id: Context
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: Context
  nameWithType: SendActivity.Context
  fullName: System.Workflow.Activities.SendActivity.Context
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Retourneert een woordenlijst die met de juiste context gebruikt voor communicatie tussen de client en de service die deze communiceert, zoals de identificatie voor correlatie."
  remarks: "Contextinformatie wordt gebruikt voor communicatie tussen de client en de service deze communiceert en bewerkingen, zoals de identificatie voor correlatie bevat."
  example:
  - "The following example shows how to access the `Context` property. This example was adapted from the `CalculatorClient` SDK sample.  \n  \n [!code-cs[SendActivity#8](~/add/codesnippet/csharp/p-system.workflow.activi_10_1.cs)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Context { get; set; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Een verzameling met woordenlijst <xref:System.Xml.XmlQualifiedName>sleutels en de bijbehorende <xref:System.String>waarden.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.SendActivity.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.CustomAddress
  id: CustomAddress
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: CustomAddress
  nameWithType: SendActivity.CustomAddress
  fullName: System.Workflow.Activities.SendActivity.CustomAddress
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Opgehaald of ingesteld van de aangepaste adres dat wordt gebruikt om te communiceren met een service."
  remarks: "Indien aanwezig, wordt deze waarde wordt gebruikt voor het definiëren van het eindpuntadres voor de bewerking."
  example:
  - "The following example shows how to access the `CustomAddress` property. This example was adapted from the `CalculatorClient` SDK sample.  \n  \n [!code-cs[SendActivity#9](~/add/codesnippet/csharp/p-system.workflow.activi_11_1.cs)]"
  syntax:
    content: public string CustomAddress { get; set; }
    return:
      type: System.String
      description: "De waarde van de tekenreeks waarvan de waarde het adres van een service is luistert op."
  overload: System.Workflow.Activities.SendActivity.CustomAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.CustomAddressProperty
  id: CustomAddressProperty
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: CustomAddressProperty
  nameWithType: SendActivity.CustomAddressProperty
  fullName: System.Workflow.Activities.SendActivity.CustomAddressProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Hiermee geeft u de <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> voor de <xref:System.Workflow.Activities.SendActivity.CustomAddress*>eigenschap.</xref:System.Workflow.Activities.SendActivity.CustomAddress*>"
  remarks: "Indien aanwezig, wordt deze waarde wordt gebruikt voor het definiëren van het eindpuntadres voor de bewerking."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: SendActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.SendActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Moet worden toegevoegd."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Moet worden toegevoegd."
  overload: System.Workflow.Activities.SendActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: GetContext(Activity,ChannelToken,Type)
  nameWithType: SendActivity.GetContext(Activity,ChannelToken,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,ChannelToken,Type)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Opgehaald of ingesteld van de contextinformatie voor een verzendbewerking."
  remarks: "Contextinformatie wordt gebruikt voor communicatie tussen de client en de service deze communiceert en bewerkingen, zoals de identificatie voor correlatie bevat."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[SendActivity#12](~/add/codesnippet/csharp/b396dd3f-071b-4a03-8e75-_1.cs)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Activiteit waarvan contextgegevens vereist is."
    - id: endpoint
      type: System.Workflow.Activities.ChannelToken
      description: "Informatie over endpoint voor correlatie met een service."
    - id: contractType
      type: System.Type
      description: "De <xref:System.Type>van het contract dat is geïmplementeerd door een service.</xref:System.Type>"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Een verzameling met woordenlijst <xref:System.Xml.XmlQualifiedName>sleutels en de bijbehorende <xref:System.String>waarden.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.SendActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: GetContext(Activity,String,String,Type)
  nameWithType: SendActivity.GetContext(Activity,String,String,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,String,String,Type)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Statische methode die een Activiteitexemplaar, de naam van een eindpunt die wordt gebruikt door die activiteit, de naam van de activiteit van de eigenaar van de verstrekte context retourneert en een <xref:System.Type>-object met het type van het contract.</xref:System.Type>"
  remarks: "Contextinformatie wordt gebruikt voor communicatie tussen de client en de service deze communiceert en bewerkingen, zoals de identificatie voor correlatie bevat."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[SendActivity#15](~/add/codesnippet/csharp/3882c89a-5f09-4566-9b94-_1.cs)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Activiteit waarvan contextgegevens vereist is."
    - id: endpointName
      type: System.String
      description: "Naam van het eindpunt dat wordt gebruikt voor correlatie met een service."
    - id: ownerActivityName
      type: System.String
      description: "De naam van de activiteit die eigenaar."
    - id: contractType
      type: System.Type
      description: "De <xref:System.Type>van het contract dat is geïmplementeerd door een service.</xref:System.Type>"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Een verzameling met woordenlijst <xref:System.Xml.XmlQualifiedName>sleutels en de bijbehorende <xref:System.String>waarden.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.SendActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: SendActivity.InitializeProperties()
  fullName: System.Workflow.Activities.SendActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.SendActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: SendActivity.ParameterBindings
  fullName: System.Workflow.Activities.SendActivity.ParameterBindings
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Hiermee wordt de verzameling bindbare parameters zoals gevonden in de [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] formele parameter-lijst van service."
  remarks: "ParameterBindings kan worden gebruikt om op te geven bindingen tussen de parameters van de service opnieuw en openbaar veld en eigenschappen van de werkstroom met de <xref:System.Workflow.Activities.SendActivity>activiteit.</xref:System.Workflow.Activities.SendActivity> Wanneer de <xref:System.Workflow.Activities.SendActivity>activiteit wordt uitgevoerd, de bijbehorende parameterwaarden worden gelezen uit de werkstroomeigenschappen ze afhankelijk zijn van en naar de service worden verzonden als parameters van de service opnieuw.</xref:System.Workflow.Activities.SendActivity>       ParameterBindings kan ook worden gebruikt voor het ophalen van de retourwaarden van een servicebewerking.       Alle parameters van de servicebewerking moeten worden gebonden. Niet-afhankelijke servicebewerkingsparameters produceren compilerwaarschuwingen en de standaardwaarden van de parameter worden verzonden wanneer de <xref:System.Workflow.Activities.SendActivity>wordt aangeroepen.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to access the `ParameterBindings` property. This example was adapted from the `Conversations` SDK sample.  \n  \n [!code-cs[SendActivity#0](~/add/codesnippet/csharp/p-system.workflow.activi_32_1.cs)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "De <xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref> van parameters voor de binding."
  overload: System.Workflow.Activities.SendActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  id: ReturnValuePropertyName
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ReturnValuePropertyName
  nameWithType: SendActivity.ReturnValuePropertyName
  fullName: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Naam van de eigenschap die wordt gebruikt voor de retourwaarde verzonden door de service die de <xref uid=&quot;langword_csharp_SendActivity&quot; name=&quot;SendActivity&quot; href=&quot;&quot;> </xref> activiteit communiceert."
  remarks: "Deze tekenreeks kan worden gebruikt voor het ophalen van de geretourneerde waarde van de <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A>die zijn gekoppeld aan de <xref:System.Workflow.Activities.SendActivity>activiteit in de <xref:System.Workflow.Activities.SendActivity.AfterResponse>gebeurtenis-handler.</xref:System.Workflow.Activities.SendActivity.AfterResponse> </xref:System.Workflow.Activities.SendActivity> </xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A>"
  example:
  - "The following example shows how to access the `ReturnValuePropertyName` field.  \n  \n [!code-cs[SendActivity#6](~/add/codesnippet/csharp/f-system.workflow.activi_2_1.cs)]"
  syntax:
    content: public const string ReturnValuePropertyName;
    return:
      type: System.String
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.ServiceOperationInfo
  id: ServiceOperationInfo
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ServiceOperationInfo
  nameWithType: SendActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.SendActivity.ServiceOperationInfo
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Definieert het contract en bewerking van de service die de <xref uid=&quot;langword_csharp_SendActivity&quot; name=&quot;SendActivity&quot; href=&quot;&quot;> </xref> activiteit communiceert met."
  remarks: "De <xref:System.Workflow.Activities.SendActivity>activiteit altijd verwijst naar een bestaand contract en de gedefinieerde bewerkingen.</xref:System.Workflow.Activities.SendActivity> Er is geen voorziening waarmee een <xref:System.Workflow.Activities.SendActivity>activiteit voor het definiëren van een contract zelf.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to access the `ServiceOperationInfo` property. This example was adapted from the `Conversations` SDK sample.  \n  \n [!code-cs[SendActivity#1](~/add/codesnippet/csharp/p-system.workflow.activi_13_1.cs)]"
  syntax:
    content: public System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo { get; set; }
    return:
      type: System.Workflow.Activities.TypedOperationInfo
      description: "Een <xref href=&quot;System.Workflow.Activities.TypedOperationInfo&quot;> </xref> object met de naam van het contract, het contracttype, de bewerking naam (die mogelijk verschillen van de naam van de werkelijke methode), of de bewerking is een eenrichtingsbewerking en inclusief parameters over de werking van methode-informatie."
  overload: System.Workflow.Activities.SendActivity.ServiceOperationInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  id: SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Een statische methode die wordt ingesteld contextinformatie voor een <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> activiteit, krijgt een Activiteitexemplaar, een eindpunt dat wordt gebruikt door die activiteit een <xref:System.Type>-object met het type van het contract en de contextinformatie zelf.</xref:System.Type>"
  remarks: "Contextinformatie wordt gebruikt voor communicatie tussen de client en de service deze communiceert en bewerkingen, zoals de identificatie voor correlatie bevat."
  example:
  - "The following example shows how to use the `SetContext` method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public static void SetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Het exemplaar van de activiteit voor het koppelen van de contextgegevens voor."
    - id: endpoint
      type: System.Workflow.Activities.ChannelToken
      description: "Het eindpunt dat wordt gebruikt voor correlatie met een service."
    - id: contractType
      type: System.Type
      description: "De <xref:System.Type>van het contract dat is geïmplementeerd door een service.</xref:System.Type>"
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "De contextinformatie in te stellen."
  overload: System.Workflow.Activities.SendActivity.SetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  id: SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SetContext(Activity,String,String,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Een statische methode die wordt ingesteld contextinformatie voor een <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> activiteit, krijgt een Activiteitexemplaar, de naam van een eindpunt die wordt gebruikt door die activiteit, de naam van de activiteit van de eigenaar een <xref:System.Type>-object met het type van het contract en de contextinformatie zelf.</xref:System.Type>"
  remarks: ''
  example:
  - "The following example shows how to use the `SetContext` method.  \n  \n [!code-cs[SendActivity#15](~/add/codesnippet/csharp/c25fc5a7-578b-454d-aade-_1.cs)]"
  syntax:
    content: public static void SetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Het exemplaar van de activiteit voor het koppelen van de contextgegevens voor."
    - id: endpointName
      type: System.String
      description: "De naam van een eindpunt dat wordt gebruikt voor correlatie met een service."
    - id: ownerActivityName
      type: System.String
      description: "De naam van de activiteit die eigenaar"
    - id: contractType
      type: System.Type
      description: "De <xref:System.Type>van het contract dat is geïmplementeerd door een service.</xref:System.Type>"
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "De contextinformatie in te stellen."
  overload: System.Workflow.Activities.SendActivity.SetContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.SendActivity.#ctor
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SendActivity()
  nameWithType: SendActivity.SendActivity()
  fullName: System.Workflow.Activities.SendActivity.SendActivity()
- uid: System.Workflow.Activities.SendActivity.#ctor(System.String)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SendActivity(String)
  nameWithType: SendActivity.SendActivity(String)
  fullName: System.Workflow.Activities.SendActivity.SendActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.SendActivity.AfterResponse
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: AfterResponse
  nameWithType: SendActivity.AfterResponse
  fullName: System.Workflow.Activities.SendActivity.AfterResponse
- uid: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SendActivityEventArgs>
  nameWithType: EventHandler<SendActivityEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.SendActivityEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.SendActivityEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.SendActivityEventArgs
    name: SendActivityEventArgs
    nameWithType: SendActivityEventArgs
    fullName: SendActivityEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.SendActivity.AfterResponseEvent
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: AfterResponseEvent
  nameWithType: SendActivity.AfterResponseEvent
  fullName: System.Workflow.Activities.SendActivity.AfterResponseEvent
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.SendActivity.BeforeSend
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: BeforeSend
  nameWithType: SendActivity.BeforeSend
  fullName: System.Workflow.Activities.SendActivity.BeforeSend
- uid: System.Workflow.Activities.SendActivity.BeforeSendEvent
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: BeforeSendEvent
  nameWithType: SendActivity.BeforeSendEvent
  fullName: System.Workflow.Activities.SendActivity.BeforeSendEvent
- uid: System.Workflow.Activities.SendActivity.ChannelToken
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ChannelToken
  nameWithType: SendActivity.ChannelToken
  fullName: System.Workflow.Activities.SendActivity.ChannelToken
- uid: System.Workflow.Activities.ChannelToken
  parent: System.Workflow.Activities
  isExternal: false
  name: ChannelToken
  nameWithType: ChannelToken
  fullName: System.Workflow.Activities.ChannelToken
- uid: System.Workflow.Activities.SendActivity.Context
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Context
  nameWithType: SendActivity.Context
  fullName: System.Workflow.Activities.SendActivity.Context
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.SendActivity.CustomAddress
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: CustomAddress
  nameWithType: SendActivity.CustomAddress
  fullName: System.Workflow.Activities.SendActivity.CustomAddress
- uid: System.Workflow.Activities.SendActivity.CustomAddressProperty
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: CustomAddressProperty
  nameWithType: SendActivity.CustomAddressProperty
  fullName: System.Workflow.Activities.SendActivity.CustomAddressProperty
- uid: System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: SendActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.SendActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: GetContext(Activity,ChannelToken,Type)
  nameWithType: SendActivity.GetContext(Activity,ChannelToken,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,ChannelToken,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: GetContext(Activity,String,String,Type)
  nameWithType: SendActivity.GetContext(Activity,String,String,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,String,String,Type)
- uid: System.Workflow.Activities.SendActivity.InitializeProperties
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: SendActivity.InitializeProperties()
  fullName: System.Workflow.Activities.SendActivity.InitializeProperties()
- uid: System.Workflow.Activities.SendActivity.ParameterBindings
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: SendActivity.ParameterBindings
  fullName: System.Workflow.Activities.SendActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ReturnValuePropertyName
  nameWithType: SendActivity.ReturnValuePropertyName
  fullName: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
- uid: System.Workflow.Activities.SendActivity.ServiceOperationInfo
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: SendActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.SendActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.TypedOperationInfo
  parent: System.Workflow.Activities
  isExternal: false
  name: TypedOperationInfo
  nameWithType: TypedOperationInfo
  fullName: System.Workflow.Activities.TypedOperationInfo
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SetContext(Activity,String,String,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
- uid: System.Workflow.Activities.SendActivity.#ctor*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SendActivity
  nameWithType: SendActivity.SendActivity
- uid: System.Workflow.Activities.SendActivity.ChannelToken*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ChannelToken
  nameWithType: SendActivity.ChannelToken
- uid: System.Workflow.Activities.SendActivity.Context*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Context
  nameWithType: SendActivity.Context
- uid: System.Workflow.Activities.SendActivity.CustomAddress*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: CustomAddress
  nameWithType: SendActivity.CustomAddress
- uid: System.Workflow.Activities.SendActivity.Execute*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Execute
  nameWithType: SendActivity.Execute
- uid: System.Workflow.Activities.SendActivity.GetContext*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: GetContext
  nameWithType: SendActivity.GetContext
- uid: System.Workflow.Activities.SendActivity.InitializeProperties*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: SendActivity.InitializeProperties
- uid: System.Workflow.Activities.SendActivity.ParameterBindings*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: SendActivity.ParameterBindings
- uid: System.Workflow.Activities.SendActivity.ServiceOperationInfo*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: SendActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.SendActivity.SetContext*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SetContext
  nameWithType: SendActivity.SetContext
