### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EmbeddedMailObject
  id: EmbeddedMailObject
  children:
  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.EmbeddedMailObject.Name
  - System.Web.UI.WebControls.EmbeddedMailObject.Path
  langs:
  - csharp
  name: EmbeddedMailObject
  nameWithType: EmbeddedMailObject
  fullName: System.Web.UI.WebControls.EmbeddedMailObject
  type: Class
  summary: "Hiermee geeft u een item voor het insluiten van een e-mailbericht dat is opgesteld met de <xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;> </xref> klasse."
  remarks: "De EmbeddedMailObject vertegenwoordigt een item in een e-mailbericht te sluiten. Deze items ingesloten mag afbeeldingsbestanden zoals een bedrijfslogo. Elk ingesloten object wordt opgegeven met een id en een pad.       Om ervoor te zorgen dat een ingesloten object correct wordt weergegeven in het bestand voor de e-mailbericht, de volgende voorwaarden moeten worden voldaan:-het e-mailbericht is in HTML-indeling.      -Het artikel is een installatiekopiebestand (JPG, GIF, BMP, enzovoort).      -De hoofdtekst HTML-indeling dat is opgegeven in de <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>eigenschap bevat een verwijzing naar de installatiekopie met de volgende syntaxis: ```       <img src=&quot;cid:identifier&quot; alt=&quot;Alternate Text&quot; />.       ``` als een EmbeddedMailObject wordt toegevoegd aan een e-mailbericht en voldoet niet aan alle vereisten die eerder hebt opgegeven, wordt deze waarschijnlijk worden weergegeven als een bijlage van het e-mailbericht.</xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> Als een item waarnaar wordt verwezen door een id in het e-mailbericht maar niet zijn opgenomen als een ingesloten object, verschijnt deze als een bijlage verbroken wanneer het e-mailbericht wordt weergegeven.       De <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>een verzameling van objecten voor een enkele e-mailbericht EmbeddedMailObject wordt opgeslagen.</xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> De <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>wordt gebruikt door de <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>eigenschap van de <xref:System.Web.UI.WebControls.MailDefinition>object te maken van het e-mailbericht.</xref:System.Web.UI.WebControls.MailDefinition> </xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> </xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>       E-mailberichten waarmee ingesloten objecten kunnen worden geconfigureerd in de volgende webbesturingselementen door in te stellen hun <xref:System.Web.UI.WebControls.MailDefinition>Eigenschappen declaratief:- <xref:System.Web.UI.WebControls.CreateUserWizard>- <xref:System.Web.UI.WebControls.ChangePassword>- <xref:System.Web.UI.WebControls.PasswordRecovery>> [!NOTE] > de waarden in de EmbeddedMailObject en <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>objecten zijn niet opgeslagen in de weergavestatus.</xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> </xref:System.Web.UI.WebControls.PasswordRecovery> </xref:System.Web.UI.WebControls.ChangePassword> </xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.MailDefinition> Dit biedt bescherming tegen kwaadwillende gebruikers informatie over het pad voor uw server detecteren."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in e-mail is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n  \n```"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))]

      public sealed class EmbeddedMailObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: EmbeddedMailObject()
  nameWithType: EmbeddedMailObject.EmbeddedMailObject()
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.EmbeddedMailObject&quot;> </xref> klasse."
  remarks: "Als u wilt ophalen of instellen van de id van het ingesloten object, gebruikt u de <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>eigenschap.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> Als u wilt ophalen of instellen van het pad naar het ingesloten item, gebruiken de <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>eigenschap.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> Beide eigenschappen moeten worden ingesteld voor het insluiten van het item is in het e-mailbericht."
  syntax:
    content: public EmbeddedMailObject ();
    parameters: []
  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: EmbeddedMailObject(String,String)
  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.EmbeddedMailObject&quot;> </xref> klasse, met behulp van de opgegeven id-naam en het pad voor het vullen van het object."
  remarks: ''
  example:
  - "The following code example shows a code-behind example of an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. This code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n The following code example demonstrates using an .aspx page.  \n  \n [!code-cs[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_1.aspx)]  \n  \n The following code example demonstrates using a code-behind file.  \n  \n [!code-cs[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_2.vb)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_3.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_3.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public EmbeddedMailObject (string name, string path);
    parameters:
    - id: name
      type: System.String
      description: "De naam die wordt gebruikt als de id van het item in het e-mailbericht te sluiten. Zie voor meer informatie <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>"
    - id: path
      type: System.String
      description: "Het pad dat wordt gebruikt voor het ophalen van een item in het e-mailbericht te sluiten. Zie voor meer informatie <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>"
  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name
  id: Name
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: Name
  nameWithType: EmbeddedMailObject.Name
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "De naam die wordt gebruikt als de id van het item moet worden ingesloten in een e-mailbericht geconstrueerd met opgehaald of ingesteld de <xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;> </xref> klasse."
  remarks: "De eigenschap Name geeft een identificatie voor een item voor het insluiten in een e-mailbericht declaratief worden geconstrueerd met de <xref:System.Web.UI.WebControls.MailDefinition>klasse.</xref:System.Web.UI.WebControls.MailDefinition> De id wordt gebruikt voor het toewijzen van het item dat is opgenomen in de <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>eigenschap in op de juiste locatie in de hoofdtekst van het bestand dat is opgegeven in de <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>-eigenschap met de volgende syntaxis: ```   <img src=&quot;cid:identifier&quot; alt=&quot;Alternate Text&quot; />   ``` het item is meestal een installatiekopiebestand.</xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> </xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> De standaardwaarde voor de eigenschap Name is een lege tekenreeks.       Het is best practice voor toegankelijkheid ontwerp, stel de eigenschap alternatieve tekst in uw e-mailbericht voor ingesloten afbeeldingen."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Retourneert de id van het item in een e-mailbericht te sluiten."
  overload: System.Web.UI.WebControls.EmbeddedMailObject.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path
  id: Path
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: Path
  nameWithType: EmbeddedMailObject.Path
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van het pad dat wordt gebruikt voor het ophalen van een item voor het insluiten in een e-mailbericht geconstrueerd met de <xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;> </xref> klasse."
  remarks: "The Path property specifies the path to the item you want to embed in the mail message constructed declaratively with the <xref:System.Web.UI.WebControls.MailDefinition> object. The file path in Path must be a path such as C:\\MyServer\\Banner.gif. Typically, the embedded item is an image file. If an image file is referenced by its identifier in the mail message but not included in the message, the image appears as a broken attachment when the e-mail message is viewed.  \n  \n It is a best practice for accessibility design to set the alternate text property in your mail message for any embedded images."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "Retourneert het pad naar het item in een e-mailbericht te sluiten."
  overload: System.Web.UI.WebControls.EmbeddedMailObject.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject()
  nameWithType: EmbeddedMailObject.EmbeddedMailObject()
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject(String,String)
  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Name
  nameWithType: EmbeddedMailObject.Name
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Path
  nameWithType: EmbeddedMailObject.Path
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject
  nameWithType: EmbeddedMailObject.EmbeddedMailObject
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Name
  nameWithType: EmbeddedMailObject.Name
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Path
  nameWithType: EmbeddedMailObject.Path
