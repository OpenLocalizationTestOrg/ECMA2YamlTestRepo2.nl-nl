### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ExceptionValidationRule
  id: ExceptionValidationRule
  children:
  - System.Windows.Controls.ExceptionValidationRule.#ctor
  - System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: ExceptionValidationRule
  nameWithType: ExceptionValidationRule
  fullName: System.Windows.Controls.ExceptionValidationRule
  type: Class
  summary: "Hiermee geeft u een regel waarmee wordt gecontroleerd of uitzonderingen die zijn gegenereerd tijdens het bijwerken van de eigenschap binding source."
  remarks: "De [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] binding gegevensmodel, kunt u koppelen <xref:System.Windows.Data.Binding.ValidationRules%2A>met een <xref:System.Windows.Data.Binding>object.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A> De klasse ExceptionValidationRule is een ingebouwde regel waarmee wordt gecontroleerd of uitzonderingen die zijn gegenereerd tijdens de updates van de eigenschap binding source. U kunt aangepaste regels om op te geven hoe het bindingprogramma deze uitzonderingen verwerkt met behulp van een <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> opgeven Zie voor meer informatie <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>       Een alternatieve syntaxis voor het instellen van de ExceptionValidationRule expliciet is het instellen van de <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>eigenschap `true` op uw <xref:System.Windows.Data.Binding>of <xref:System.Windows.Data.MultiBinding>object.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>       U kunt een aangepaste regel maken door een klasse die is afgeleid van <xref:System.Windows.Controls.ValidationRule>.</xref:System.Windows.Controls.ValidationRule> maken Zie voor meer informatie en een gedetailleerde discussie over gegevensvalidatie [Binding overzicht](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The <xref:System.Windows.Data.Binding.ValidationRules%2A> property takes a collection of <xref:System.Windows.Controls.ValidationRule> objects. The following example uses <xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName> as the binding target property and `StartPrice` (an integer) as the binding source property. When the user enters a value that cannot be converted to an integer, an exception is thrown, which causes the ExceptionValidationRule to invalidate the target value.  \n  \n [!code-xml[DataBindingLab#DefaultValidation](~/add/codesnippet/xaml/DataBindingLab/AddProductWindow.xaml#defaultvalidation)]  \n  \n By default, when there is a validation error, the <xref:System.Windows.Controls.TextBox> appears with a red border. Optionally, you can write a custom <xref:System.Windows.Controls.Validation.ErrorTemplate%2A> to specify how you want to notify the user when there is a validation error.  \n  \n For more information about data validation, see [Data Binding Overview](../Topic/Data%20Binding%20Overview.md).  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: 'public sealed class ExceptionValidationRule : System.Windows.Controls.ValidationRule'
  inheritance:
  - System.Object
  - System.Windows.Controls.ValidationRule
  implements: []
  inheritedMembers:
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  - System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  - System.Windows.Controls.ValidationRule.ValidationStep
  platform:
  - net462
- uid: System.Windows.Controls.ExceptionValidationRule.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ExceptionValidationRule
  langs:
  - csharp
  name: ExceptionValidationRule()
  nameWithType: ExceptionValidationRule.ExceptionValidationRule()
  fullName: System.Windows.Controls.ExceptionValidationRule.ExceptionValidationRule()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref> klasse."
  syntax:
    content: public ExceptionValidationRule ();
    parameters: []
  overload: System.Windows.Controls.ExceptionValidationRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  id: Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ExceptionValidationRule
  langs:
  - csharp
  name: Validate(Object,CultureInfo)
  nameWithType: ExceptionValidationRule.Validate(Object,CultureInfo)
  fullName: System.Windows.Controls.ExceptionValidationRule.Validate(Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Validatiecontroles op een waarde die is uitgevoerd."
  syntax:
    content: public override System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);
    parameters:
    - id: value
      type: System.Object
      description: "De waarde (van het doel van de binding) om te controleren."
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "De cultuur moet worden gebruikt in deze regel."
    return:
      type: System.Windows.Controls.ValidationResult
      description: "A <xref href=&quot;System.Windows.Controls.ValidationResult&quot;></xref> object."
  overload: System.Windows.Controls.ExceptionValidationRule.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Controls.ValidationRule
  isExternal: false
  name: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ExceptionValidationRule.#ctor
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: ExceptionValidationRule()
  nameWithType: ExceptionValidationRule.ExceptionValidationRule()
  fullName: System.Windows.Controls.ExceptionValidationRule.ExceptionValidationRule()
- uid: System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: Validate(Object,CultureInfo)
  nameWithType: ExceptionValidationRule.Validate(Object,CultureInfo)
  fullName: System.Windows.Controls.ExceptionValidationRule.Validate(Object,CultureInfo)
- uid: System.Windows.Controls.ValidationResult
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Windows.Controls.ValidationResult
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Controls.ExceptionValidationRule.#ctor*
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: ExceptionValidationRule
  nameWithType: ExceptionValidationRule.ExceptionValidationRule
- uid: System.Windows.Controls.ExceptionValidationRule.Validate*
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: Validate
  nameWithType: ExceptionValidationRule.Validate
