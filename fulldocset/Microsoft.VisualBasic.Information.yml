### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Information
  id: Information
  children:
  - Microsoft.VisualBasic.Information.Erl
  - Microsoft.VisualBasic.Information.Err
  - Microsoft.VisualBasic.Information.IsArray(System.Object)
  - Microsoft.VisualBasic.Information.IsDate(System.Object)
  - Microsoft.VisualBasic.Information.IsDBNull(System.Object)
  - Microsoft.VisualBasic.Information.IsError(System.Object)
  - Microsoft.VisualBasic.Information.IsNothing(System.Object)
  - Microsoft.VisualBasic.Information.IsNumeric(System.Object)
  - Microsoft.VisualBasic.Information.IsReference(System.Object)
  - Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)
  - Microsoft.VisualBasic.Information.QBColor(System.Int32)
  - Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.Information.SystemTypeName(System.String)
  - Microsoft.VisualBasic.Information.TypeName(System.Object)
  - Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)
  - Microsoft.VisualBasic.Information.VarType(System.Object)
  - Microsoft.VisualBasic.Information.VbTypeName(System.String)
  langs:
  - csharp
  name: Information
  nameWithType: Information
  fullName: Microsoft.VisualBasic.Information
  type: Class
  summary: "De <xref uid=&quot;langword_csharp_Information&quot; name=&quot;Information&quot; href=&quot;&quot;> </xref> -module bevat de procedures gebruikt om te retourneren, testen of controleren van gegevens."
  remarks: "Deze module biedt ondersteuning voor de Visual Basic-taal sleutelwoorden en run-time-bibliotheek-leden die foutinformatie verstrekt, gegevens valideren matrixgrenzen bepalen en ophalen van informatie voor het type en de kleur van gegevens."
  example:
  - "The following example uses the `VbTypeName` function to return data type names for several variables.  \n  \n```  \nDim sysDateName As String = \"System.DateTime\"  \nDim sysShortName As String = \"Int16\"  \nDim sysBadName As String = \"Nonsense\"  \nDim testVbName As String  \ntestVbName = VbTypeName(sysDateName)   \n' Returns \"Date\".  \ntestVbName = VbTypeName(sysShortName)   \n' Returns \"Short\".  \ntestVbName = VbTypeName(sysBadName)   \n' Returns Nothing.  \n```"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Information
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.Erl
  id: Erl
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: Erl()
  nameWithType: Information.Erl()
  fullName: Microsoft.VisualBasic.Information.Erl()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een geheel getal dat aangeeft van het regelnummer van de laatste instructie uitgevoerd. Alleen-lezen."
  remarks: "Als Visual Basic geen regelnummers tegenkomt, wordt 0 geretourneerd."
  example:
  - "This example uses the `Erl` property to indicate the line number.  \n  \n [!code-vb[VbVbalrErrorHandling#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._209_1.vb)]"
  syntax:
    content: public static int Erl ();
    parameters: []
    return:
      type: System.Int32
      description: "Retourneert een geheel getal dat aangeeft van het regelnummer van de laatste instructie uitgevoerd. Alleen-lezen."
  overload: Microsoft.VisualBasic.Information.Erl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.Err
  id: Err
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: Err()
  nameWithType: Information.Err()
  fullName: Microsoft.VisualBasic.Information.Err()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Bevat informatie over de runtime-fouten."
  remarks: "De eigenschappen van de `Err` object zijn ingesteld door de generator van een fout opgetreden: Visual Basic, een object of de programmeurs.       Wanneer een runtime-fout optreedt, de eigenschappen van de `Err` object zijn gevuld met gegevens die een unieke identificatie van de fout en die u kunt gebruiken voor het afhandelen van de fout. Als een runtime fout in uw code worden gegenereerd, gebruiken de `Raise` methode.       De `Err` van objecteigenschappen opnieuw worden ingesteld op nul of tekenreeksen met lengte nul (&quot;&quot;) nadat een `Exit Sub`, `Exit Function`, `Exit Property`, of `Resume Next` -instructie in een routine foutafhandeling. Met behulp van een vorm van de `Resume` instructie buiten een foutafhandeling routine niet kan worden ingesteld de `Err` eigenschappen van het object. U kunt de `Clear` methode om te herstellen expliciet `Err`.       Gebruik de `Raise` methode in plaats van de `Error` instructie voor het genereren van de runtime-fouten voor systeemfouten en klasse-modules. Uw beslissing over of u wilt gebruiken de `Raise` methode in andere code is afhankelijk van de uitgebreide functionaliteit van de informatie die u wilt retourneren.       De `Err` object is een intrinsiek object met een globaal bereik. Daarom hoeft u niet een exemplaar maken van het in uw code."
  example:
  - "This example uses the properties of the `Err` object in constructing an error-message dialog box. Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.  \n  \n [!code-vb[VbVbalrErrorHandling#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._32_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.ErrObject Err ();
    parameters: []
    return:
      type: Microsoft.VisualBasic.ErrObject
      description: "Bevat informatie over de runtime-fouten."
  overload: Microsoft.VisualBasic.Information.Err*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsArray(System.Object)
  id: IsArray(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsArray(Object)
  nameWithType: Information.IsArray(Object)
  fullName: Microsoft.VisualBasic.Information.IsArray(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een variabele naar een matrix verwijst."
  remarks: '`IsArray`retourneert `True` als de variabele naar een matrix verwijst; anders wordt `False`. `IsArray`is vooral nuttig met objecten die matrices kunnen bevatten.'
  example:
  - "This example uses the `IsArray` function to check if several variables refer to an array.  \n  \n [!code-vb[VbVbalrFunctions#34](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._76_1.vb)]"
  syntax:
    content: public static bool IsArray (object VarName);
    parameters:
    - id: VarName
      type: System.Object
      description: "Vereist. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>variabele."
    return:
      type: System.Boolean
      description: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een variabele naar een matrix verwijst."
  overload: Microsoft.VisualBasic.Information.IsArray*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsDate(System.Object)
  id: IsDate(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsDate(Object)
  nameWithType: Information.IsDate(Object)
  fullName: Microsoft.VisualBasic.Information.IsDate(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie een geldige vertegenwoordigt <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> waarde."
  remarks: "`IsDate`retourneert `True` als `Expression` is van de <xref:System.DateTime>gegevens typen of kunnen worden geconverteerd naar het, anders wordt het resultaat `False`.</xref:System.DateTime>       De <xref:System.DateTime>gegevenstype bevat zowel een date-waarde als een tijd-waarde.</xref:System.DateTime> `IsDate`retourneert `True` als `Expression` vertegenwoordigt een geldige datum, een geldige tijd of een geldige datum en tijd."
  example:
  - "The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.  \n  \n [!code-vb[VbVbalrFunctions#35](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._9_1.vb)]  \n  \n In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call."
  syntax:
    content: public static bool IsDate (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Vereist. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>de expressie."
    return:
      type: System.Boolean
      description: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie een geldige vertegenwoordigt <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> waarde."
  overload: Microsoft.VisualBasic.Information.IsDate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsDBNull(System.Object)
  id: IsDBNull(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsDBNull(Object)
  nameWithType: Information.IsDBNull(Object)
  fullName: Microsoft.VisualBasic.Information.IsDBNull(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie resulteert in het <xref href=&quot;System.DBNull&quot;> </xref> klasse."
  remarks: "`IsDBNull`retourneert `True` als het gegevenstype van `Expression` wordt geëvalueerd naar de <xref:System.DBNull>Typ; anders `IsDBNull` retourneert `False`.</xref:System.DBNull>       De <xref:System.DBNull?displayProperty=fullName>waarde geeft aan dat de `Object` ontbreekt of niet-bestaande gegevens vertegenwoordigt.</xref:System.DBNull?displayProperty=fullName> `DBNull`is niet hetzelfde als `Nothing`, wat aangeeft dat een variabele is nog niet is geïnitialiseerd. `DBNull`is ook niet hetzelfde zijn als een tekenreeks met lengte nul (`&quot;&quot;`), die soms wordt aangeduid als een null-tekenreeks."
  example:
  - "This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.  \n  \n [!code-vb[VbVbalrFunctions#36](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._101_1.vb)]"
  syntax:
    content: public static bool IsDBNull (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Vereist. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>de expressie."
    return:
      type: System.Boolean
      description: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie resulteert in het <xref href=&quot;System.DBNull&quot;> </xref> klasse."
  overload: Microsoft.VisualBasic.Information.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsError(System.Object)
  id: IsError(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsError(Object)
  nameWithType: Information.IsError(Object)
  fullName: Microsoft.VisualBasic.Information.IsError(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie een uitzonderingstype."
  remarks: "`IsError`retourneert `True` als de expressie vertegenwoordigt een `Object` variabele die is afgeleid van de <xref:System.Exception>-klasse in de <xref:System>naamruimte.</xref:System> </xref:System.Exception>       Een uitzondering die is afgeleid van <xref:System.Exception?displayProperty=fullName>kunnen worden gedetecteerd met de `Try...Catch...Finally` instructies.</xref:System.Exception?displayProperty=fullName>"
  example:
  - "The following example uses the `IsError` function to check if an expression represents a system exception.  \n  \n [!code-vb[VbVbalrFunctions#37](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._164_1.vb)]"
  syntax:
    content: public static bool IsError (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Vereist. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>de expressie."
    return:
      type: System.Boolean
      description: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie een uitzonderingstype."
  overload: Microsoft.VisualBasic.Information.IsError*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsNothing(System.Object)
  id: IsNothing(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsNothing(Object)
  nameWithType: Information.IsNothing(Object)
  fullName: Microsoft.VisualBasic.Information.IsNothing(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie geen object dat is toegewezen is."
  remarks: "`IsNothing`retourneert `True` als de expressie een objectvariabele die momenteel geen object toegewezen aan deze; anders is vertegenwoordigt, retourneert `False`.       `IsNothing`is bedoeld om te werken op verwijzingstypen. Een waardetype waarde kan niet bevatten en wordt teruggezet naar de standaardwaarde als u deze toewijst `Nothing` aan. Als u een waardetype in op te geven `Expression`, `IsNothing` retourneert altijd `False`."
  example:
  - "The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.  \n  \n [!code-vb[VbVbalrFunctions#38](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._149_1.vb)]"
  syntax:
    content: public static bool IsNothing (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Vereist. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>de expressie."
    return:
      type: System.Boolean
      description: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie geen object dat is toegewezen is."
  overload: Microsoft.VisualBasic.Information.IsNothing*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsNumeric(System.Object)
  id: IsNumeric(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsNumeric(Object)
  nameWithType: Information.IsNumeric(Object)
  fullName: Microsoft.VisualBasic.Information.IsNumeric(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie als getal kan worden geëvalueerd."
  remarks: "`IsNumeric`returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`. Retourneert ook `True` als `Expression` is een `Char`, `String`, of `Object` die met succes kunnen worden omgezet naar een getal. `Expression`kan niet-numerieke tekens bevatten. `IsNumeric`retourneert `True` als `Expression` is een tekenreeks die een geldige hexadecimale of octaal getal bevat. `IsNumeric`ook als resultaat gegeven `True` als `Expression` bevat een geldige numerieke expressie die met begint een + of - teken of komma&quot;s bevat.       `IsNumeric`retourneert `False` als `Expression` is van het gegevenstype `Date`. Deze retourneert `False` als `Expression` is een `Char`, `String`, of `Object` die met succes kan niet worden geconverteerd naar een getal."
  example:
  - "The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.  \n  \n [!code-vb[VbVbalrFunctions#39](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._137_1.vb)]"
  syntax:
    content: public static bool IsNumeric (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Vereist. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>de expressie."
    return:
      type: System.Boolean
      description: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie als getal kan worden geëvalueerd."
  overload: Microsoft.VisualBasic.Information.IsNumeric*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsReference(System.Object)
  id: IsReference(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsReference(Object)
  nameWithType: Information.IsReference(Object)
  fullName: Microsoft.VisualBasic.Information.IsReference(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie in een verwijzingstype resulteert."
  remarks: "`IsReference`retourneert `True` als `Expression` vertegenwoordigt een verwijzingstype zijn, zoals een klasse-instantie een `String` type of een matrix van elk type; anders is het resultaat `False`.       Een verwijzingstype bevat een verwijzing naar gegevens die elders wordt opgeslagen in het geheugen. Een waardetype bevat een eigen gegevens."
  example:
  - "This example uses the `IsReference` function to check if several variables refer to reference types.  \n  \n [!code-vb[VbVbalrFunctions#40](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._142_1.vb)]  \n  \n In the preceding example, the first three calls to `IsReference` return `True`. The last call returns `False`, because `Integer` is a value type, not a reference type."
  syntax:
    content: public static bool IsReference (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Vereist. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>de expressie."
    return:
      type: System.Boolean
      description: "Retourneert een <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> waarde die aangeeft of een expressie in een verwijzingstype resulteert."
  overload: Microsoft.VisualBasic.Information.IsReference*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)
  id: LBound(System.Array,System.Int32)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: LBound(Array,Int32)
  nameWithType: Information.LBound(Array,Int32)
  fullName: Microsoft.VisualBasic.Information.LBound(Array,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert de laagste subscript voor de aangegeven dimensie van een matrix."
  remarks: "Aangezien matrixsubscripts bij 0 beginnen, de laagste subscript voor elke dimensie is altijd 0.       Voor een matrix met de volgende dimensies `LBound` retourneert de waarden in de volgende tabel: ```vb#   Dim a(100, 5, 4) As Byte   ``` | Aanroep naar LBound | Retourwaarde |   |--------------------|------------------|   | `LBound(a, 1)`|0|   | `LBound(a, 2)`|0|   | `LBound(a, 3)`|0|"
  example:
  - "The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.  \n  \n [!code-vb[VbVbalrFunctions#41](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._241_1.vb)]"
  syntax:
    content: public static int LBound (Array Array, int Rank = 1);
    parameters:
    - id: Array
      type: System.Array
      description: "Vereist. Matrix van het type. De matrix waarin u wilt zoeken naar de laagst mogelijke subscript van een dimensie."
    - id: Rank
      type: System.Int32
      description: "Optioneel. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. De dimensie waarop de laagst mogelijke subscript is moeten worden geretourneerd. Gebruik 1 voor de eerste dimensie, 2 voor de tweede, enzovoort. Als `Rank` wordt weggelaten, wordt 1 gebruikt."
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Het subscript voor de opgegeven dimensie in de laagste waarde kan bevatten. <xref uid=&quot;langword_csharp_LBound&quot; name=&quot;LBound&quot; href=&quot;&quot;></xref>altijd de waarde 0 zo lang <code> Array </code> is geïnitialiseerd, zelfs als er geen elementen, bijvoorbeeld als een tekenreeks met lengte nul is. If <code>Array</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_LBound&quot; name=&quot;LBound&quot; href=&quot;&quot;></xref> throws an <xref:System.ArgumentNullException>.</xref:System.ArgumentNullException>"
  overload: Microsoft.VisualBasic.Information.LBound*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Array</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>Rank</code>kleiner dan 1 of <code>Rank</code> groter is dan de positie van <code>Array</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.QBColor(System.Int32)
  id: QBColor(System.Int32)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: QBColor(Int32)
  nameWithType: Information.QBColor(Int32)
  fullName: Microsoft.VisualBasic.Information.QBColor(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> -waarde voor de RGB-kleur-code die overeenkomt met het opgegeven aantal kleuren."
  remarks: "Beginnen met de minst significante byte, geeft de geretourneerde waarde de rode, blauwe en groene waarden gebruikt voor het instellen van de juiste kleur in de RGB-systeem die wordt gebruikt door de taal Visual Basic.       De `Color` argument heeft de volgende instellingen.      | Aantal | Kleur | Aantal | Kleur |   |------------|-----------|------------|-----------|   |&0; | Black |&8; | Grijs |   |&1; | Blauw |&9; | Blauw licht |   |&2; | Groen |&10; | Lichtgroen |   |&3; | Cyaan |&11; | Lichtcyaan |   |&4; | Rood |&12; | Rood licht |   |&5; | Magenta |&13; | Licht magenta |   |&6; | Gele |&14; | Licht geel |   |&7; | Wit |&15; | Helder wit |"
  example:
  - "This example uses the `QBColor` function to change to the color indicated by `colorInteger`. `QBColor` accepts integer values between 0 and 15.  \n  \n [!code-vb[VbVbalrCatRef#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._29_1.vb)]"
  syntax:
    content: public static int QBColor (int Color);
    parameters:
    - id: Color
      type: System.Int32
      description: "Vereist. Een geheel getal in het bereik 0-15."
    return:
      type: System.Int32
      description: "Retourneert een <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> -waarde voor de RGB-kleur-code die overeenkomt met het opgegeven aantal kleuren."
  overload: Microsoft.VisualBasic.Information.QBColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Color</code>bevindt zich buiten het bereik 0 tot en met 15, inclusief."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)
  id: RGB(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: RGB(Int32,Int32,Int32)
  nameWithType: Information.RGB(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.Information.RGB(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> -waarde voor een RGB-waarde van een reeks rood, groen en blauw kleur onderdelen."
  remarks: "Verwachten dat die specificatie moet een getal dat aangeeft een RGB kleurwaarde toepassingsmethoden en eigenschappen die een kleurspecificatie accepteren. Een RGB-waarde geeft de relatieve intensiteit van rood, groen en blauw leiden dat een specifieke kleur moet worden weergegeven.       Als de waarde voor een argument voor `RGB` groter is dan 255, 255 wordt gebruikt.       De volgende tabel bevat enkele standaard kleuren en de rode, blauwe en groene waarden die ze bevatten.      | Kleur | Waarde voor rood | Waarde groen | Waarde blauw |   |-----------|---------------|-----------------|----------------|   | Black |&0; |&0; |&0; |   | Blauw |&0; |&0; |&255; |   | Groen |&0; |&255; |&0; |   | Cyaan |&0; |&255; |&255; |   | Rood |&255; |&0; |&0; |   | Magenta |&255; |&0; |&255; |   | Gele |&255; |&255; |&0; |   | Wit |&255; |&255; |&255; |"
  example:
  - "This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.  \n  \n [!code-vb[VbVbalrCatRef#18](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._89_1.vb)]"
  syntax:
    content: public static int RGB (int Red, int Green, int Blue);
    parameters:
    - id: Red
      type: System.Int32
      description: "Vereist. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>in het bereik 0-255 vertegenwoordigt die de intensiteit van de rode component van de kleur."
    - id: Green
      type: System.Int32
      description: "Vereist. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>in het bereik 0-255 vertegenwoordigt die de intensiteit van de groene component van de kleur."
    - id: Blue
      type: System.Int32
      description: "Vereist. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>in het bereik 0-255 vertegenwoordigt die de intensiteit van de blauwe component van de kleur."
    return:
      type: System.Int32
      description: "Retourneert een <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> -waarde voor een RGB-waarde van een reeks rood, groen en blauw kleur onderdelen."
  overload: Microsoft.VisualBasic.Information.RGB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Green</code>, <code>Blue</code>, of <code>Red</code> bevindt zich buiten het bereik 0-255."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.SystemTypeName(System.String)
  id: SystemTypeName(System.String)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: SystemTypeName(String)
  nameWithType: Information.SystemTypeName(String)
  fullName: Microsoft.VisualBasic.Information.SystemTypeName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> waarde met de naam met systeem-gegevens van een variabele."
  remarks: '`SystemTypeName`retourneert de volledig gekwalificeerde common language runtime (CLR) typenaam overeenkomt met de naam van het Visual Basic. Bijvoorbeeld, als `VbName` bevat &quot;Datum&quot; `SystemTypeName` &quot;System.DateTime&quot; retourneert. Als `SystemTypeName` worden niet herkend door de waarde van `VbName`, wordt hiermee `Nothing` (niet de tekenreeks &quot;Niets&quot;).'
  example:
  - "The following example uses the `SystemTypeName` function to return data type names for several variables.  \n  \n [!code-vb[VbVbalrFunctions#49](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._174_1.vb)]"
  syntax:
    content: public static string SystemTypeName (string VbName);
    parameters:
    - id: VbName
      type: System.String
      description: "Vereist. Een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> variabele met de naam van een Visual Basic-type."
    return:
      type: System.String
      description: "Retourneert een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> waarde met de naam met systeem-gegevens van een variabele."
  overload: Microsoft.VisualBasic.Information.SystemTypeName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.TypeName(System.Object)
  id: TypeName(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: TypeName(Object)
  nameWithType: Information.TypeName(Object)
  fullName: Microsoft.VisualBasic.Information.TypeName(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> gegevenstype dat informatie bevat over een variabele waarde."
  remarks: "De volgende tabel toont de `String` waarden die zijn geretourneerd door `TypeName` voor andere inhoud van `VarName`.      | `VarName` inhoud | Tekenreeks geretourneerd |   |------------------------|---------------------|   | 16-bits `True` of `False` waardetype | &quot; Boolean &quot; |   | 8-bits binaire waardetype | &quot; Byte &quot;|   | 16-bits waarde tekentype | &quot; Teken &quot;|   | 64-bits-datum en tijd waardetype | &quot; Datum &quot; |   | Verwijzingstype waarmee ontbreekt of niet-bestaande gegevens | &quot; DBNull &quot;|   | 128-bits een numerieke waardetype | &quot; Decimale &quot;|   | 64-bits getal met drijvende komma numerieke waardetype | &quot; Dubbele &quot;|   | 32-bits geheel getal waardetype | &quot; Geheel getal zijn &quot; |   | Verwijzingstype die verwijst naar een object unspecialized | &quot; Object &quot; |   | Verwijzingstype die verwijst naar een gespecialiseerde-object gemaakt op basis van de klasse *objectclass*| &quot; *objectclass*&quot; |   | 64-bits geheel getal waardetype | &quot; Lange &quot;|   | Verwijzingstype zonder momenteel toegewezen aan het object | &quot; Er is niets &quot; |   | waardetype 8-bits geheel getal met teken | &quot; SByte &quot;|   | 16-bits geheel getal waardetype | &quot; Korte &quot;|   | 32-bits getal met drijvende komma numerieke waardetype | &quot; Eén &quot;|   | Verwijzingstype die verwijst naar een tekenreeks van 16-bits | &quot; Tekenreeks &quot; |   | waardetype voor 32-bits geheel getal zonder teken | &quot; UInteger &quot; |   | waardetype 64-bits geheel getal zonder teken | &quot; ULong &quot;|   | waardetype 16-bits geheel getal zonder teken | &quot; UShort &quot;|       Als `VarName` is een matrix, maar de geretourneerde tekenreeks kan niet een van de tekenreeksen in de voorgaande tabel met toegevoegde aanhalingstekens. Bijvoorbeeld, als `VarName` verwijst naar een matrix van gehele getallen, `TypeName` &quot;Integer()&quot; retourneert.       Wanneer `TypeName` retourneert de naam van een verwijzingstype zoals een klasse, wordt alleen de naam zelf, niet de gekwalificeerde naam. Bijvoorbeeld, als `VarName` verwijst naar een object van klasse <xref:System.Drawing.Printing.PaperSource?displayProperty=fullName>, `TypeName` retourneert &quot;PaperSource&quot;.</xref:System.Drawing.Printing.PaperSource?displayProperty=fullName> Houd er rekening mee dat als de variabele is gedeclareerd als een bepaalde klasse-type maar een object dat is toegewezen, heeft geen `TypeName` retourneert &quot;Niets&quot;."
  example:
  - "The following example uses the `TypeName` function to return data type information about several variables.  \n  \n [!code-vb[VbVbalrFunctions#52](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._131_1.vb)]"
  syntax:
    content: public static string TypeName (object VarName);
    parameters:
    - id: VarName
      type: System.Object
      description: "Vereist. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>variabele. Als <xref uid=&quot;langword_csharp_Option Strict&quot; name=&quot;Option Strict&quot; href=&quot;&quot;> </xref> is <xref uid=&quot;langword_csharp_Off&quot; name=&quot;Off&quot; href=&quot;&quot;> </xref>, kunt u een variabele van het type behalve een structuur doorgeven."
    return:
      type: System.String
      description: "Retourneert een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> gegevenstype dat informatie bevat over een variabele waarde."
  overload: Microsoft.VisualBasic.Information.TypeName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)
  id: UBound(System.Array,System.Int32)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: UBound(Array,Int32)
  nameWithType: Information.UBound(Array,Int32)
  fullName: Microsoft.VisualBasic.Information.UBound(Array,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert de hoogste beschikbare subscript voor de aangegeven dimensie van een matrix."
  remarks: "Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.  \n  \n For an array with the following dimensions, `UBound` returns the values in the following table:  \n  \n```vb#  \nDim a(100, 5, 4) As Byte  \n```  \n  \n|Call to UBound|Return value|  \n|--------------------|------------------|  \n|`UBound(a, 1)`|100|  \n|`UBound(a, 2)`|5|  \n|`UBound(a, 3)`|4|  \n  \n You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0. The following example calculates the total size of the array `a` in the preceding example:  \n  \n```vb#  \nDim total As Integer  \ntotal = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  \n```  \n  \n The value calculated for `total` is 3030, which is 101 * 6 \\* 5."
  example:
  - "The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.  \n  \n [!code-vb[VbVbalrFunctions#53](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._136_1.vb)]"
  syntax:
    content: public static int UBound (Array Array, int Rank = 1);
    parameters:
    - id: Array
      type: System.Array
      description: "Vereist. Matrix van het type. De matrix waarin u wilt zoeken naar het hoogst mogelijke subscript van een dimensie."
    - id: Rank
      type: System.Int32
      description: "Optioneel. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. De dimensie waarop de hoogst mogelijke subscript is moeten worden geretourneerd. Gebruik 1 voor de eerste dimensie, 2 voor de tweede, enzovoort. Als `Rank` wordt weggelaten, wordt 1 gebruikt."
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Het subscript voor de opgegeven dimensie in de hoogste waarde kan bevatten. Als <code> Array </code> heeft slechts één element <xref uid=&quot;langword_csharp_UBound&quot; name=&quot;UBound&quot; href=&quot;&quot;> </xref> 0 geretourneerd. Als <code> Array </code> bevat geen elementen, bijvoorbeeld als het is een tekenreeks met lengte nul <xref uid=&quot;langword_csharp_UBound&quot; name=&quot;UBound&quot; href=&quot;&quot;> </xref> retourneert-1."
  overload: Microsoft.VisualBasic.Information.UBound*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Array</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>Rank</code>is kleiner dan 1 of <code>Rank</code> groter is dan de positie van <code>Array</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.VarType(System.Object)
  id: VarType(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: VarType(Object)
  nameWithType: Information.VarType(Object)
  fullName: Microsoft.VisualBasic.Information.VarType(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> -waarde met de classificatie van het type gegevens van een variabele."
  remarks: "Het gehele getal dat is geretourneerd door `VarType` lid is van de <xref:Microsoft.VisualBasic.VariantType>.</xref:Microsoft.VisualBasic.VariantType>       De volgende tabel bevat de waarden die door `VarType` voor bijzondere gevallen van `VarName`.      | Het gegevenstype dat wordt vertegenwoordigd door `VarName`| Waarde geretourneerd door `VarType`|   |----------------------------------------|---------------------------------|   | [Nothing](~/add/includes/ajax-current-ext-md.md)|`VariantType.Object`|   | <xref:System.DBNull>| `VariantType.Null`|   | Opsomming | Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)|   | Matrix | Bitsgewijze OR van elementtype van matrix en `VariantType.Array`|   | Matrix met matrices | Bitsgewijze OR van `VariantType.Object` en `VariantType.Array`|   | Structuur (<xref:System.ValueType?displayProperty=fullName>) |`VariantType.UserDefinedType`|   | <xref:System.Exception>| `VariantType.Error`|   | Onbekende | `VariantType.Object`|</xref:System.Exception></xref:System.ValueType?displayProperty=fullName></xref:System.DBNull>"
  example:
  - "The following example uses the `VarType` function to return data type classification information about several variables.  \n  \n [!code-vb[VbVbalrFunctions#55](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._179_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.VariantType VarType (object VarName);
    parameters:
    - id: VarName
      type: System.Object
      description: "Vereist. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>variabele. Als <xref uid=&quot;langword_csharp_Option Strict&quot; name=&quot;Option Strict&quot; href=&quot;&quot;> </xref> is <xref uid=&quot;langword_csharp_Off&quot; name=&quot;Off&quot; href=&quot;&quot;> </xref>, kunt u een variabele van het type behalve een structuur doorgeven."
    return:
      type: Microsoft.VisualBasic.VariantType
      description: "Retourneert een <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> -waarde met de classificatie van het type gegevens van een variabele."
  overload: Microsoft.VisualBasic.Information.VarType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.VbTypeName(System.String)
  id: VbTypeName(System.String)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: VbTypeName(String)
  nameWithType: Information.VbTypeName(String)
  fullName: Microsoft.VisualBasic.Information.VbTypeName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Retourneert een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> waarde met de naam met Visual Basic-gegevens van een variabele."
  remarks: "`VbTypeName`retourneert de naam van het Visual Basic overeenkomt met de naam common language runtime-type. Bijvoorbeeld, als `UrtName` &quot;Int32&quot; of &quot;System.Int32&quot; bevat `VbTypeName` retourneert &quot;Integer&quot;. Als `VbTypeName` worden niet herkend door de waarde van `UrtName`, wordt hiermee `Nothing` (niet de tekenreeks &quot;Niets&quot;).       De typenaam in `UrtName` kan worden verkregen uit diverse bronnen, bijvoorbeeld van de <xref:System.Reflection.MemberInfo.Name%2A>eigenschap in de <xref:System.Reflection.MemberInfo>matrix van de <xref:System.Type>klasse.</xref:System.Type> </xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.Name%2A>"
  example:
  - "The following example uses the `VbTypeName` function to return data type names for several variables.  \n  \n [!code-vb[VbVbalrFunctions#56](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._152_1.vb)]"
  syntax:
    content: public static string VbTypeName (string UrtName);
    parameters:
    - id: UrtName
      type: System.String
      description: "Vereist. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>de variabele met de typenaam van een gebruikt door de common language runtime."
    return:
      type: System.String
      description: "Retourneert een <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> waarde met de naam met Visual Basic-gegevens van een variabele."
  overload: Microsoft.VisualBasic.Information.VbTypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.RankException
  isExternal: true
  name: System.RankException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.Information.Erl
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: Erl()
  nameWithType: Information.Erl()
  fullName: Microsoft.VisualBasic.Information.Erl()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Information.Err
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: Err()
  nameWithType: Information.Err()
  fullName: Microsoft.VisualBasic.Information.Err()
- uid: Microsoft.VisualBasic.ErrObject
  parent: Microsoft.VisualBasic
  isExternal: false
  name: ErrObject
  nameWithType: ErrObject
  fullName: Microsoft.VisualBasic.ErrObject
- uid: Microsoft.VisualBasic.Information.IsArray(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsArray(Object)
  nameWithType: Information.IsArray(Object)
  fullName: Microsoft.VisualBasic.Information.IsArray(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Information.IsDate(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsDate(Object)
  nameWithType: Information.IsDate(Object)
  fullName: Microsoft.VisualBasic.Information.IsDate(Object)
- uid: Microsoft.VisualBasic.Information.IsDBNull(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsDBNull(Object)
  nameWithType: Information.IsDBNull(Object)
  fullName: Microsoft.VisualBasic.Information.IsDBNull(Object)
- uid: Microsoft.VisualBasic.Information.IsError(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsError(Object)
  nameWithType: Information.IsError(Object)
  fullName: Microsoft.VisualBasic.Information.IsError(Object)
- uid: Microsoft.VisualBasic.Information.IsNothing(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsNothing(Object)
  nameWithType: Information.IsNothing(Object)
  fullName: Microsoft.VisualBasic.Information.IsNothing(Object)
- uid: Microsoft.VisualBasic.Information.IsNumeric(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsNumeric(Object)
  nameWithType: Information.IsNumeric(Object)
  fullName: Microsoft.VisualBasic.Information.IsNumeric(Object)
- uid: Microsoft.VisualBasic.Information.IsReference(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsReference(Object)
  nameWithType: Information.IsReference(Object)
  fullName: Microsoft.VisualBasic.Information.IsReference(Object)
- uid: Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: LBound(Array,Int32)
  nameWithType: Information.LBound(Array,Int32)
  fullName: Microsoft.VisualBasic.Information.LBound(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: Microsoft.VisualBasic.Information.QBColor(System.Int32)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: QBColor(Int32)
  nameWithType: Information.QBColor(Int32)
  fullName: Microsoft.VisualBasic.Information.QBColor(Int32)
- uid: Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: RGB(Int32,Int32,Int32)
  nameWithType: Information.RGB(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.Information.RGB(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.Information.SystemTypeName(System.String)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: SystemTypeName(String)
  nameWithType: Information.SystemTypeName(String)
  fullName: Microsoft.VisualBasic.Information.SystemTypeName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Information.TypeName(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: TypeName(Object)
  nameWithType: Information.TypeName(Object)
  fullName: Microsoft.VisualBasic.Information.TypeName(Object)
- uid: Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: UBound(Array,Int32)
  nameWithType: Information.UBound(Array,Int32)
  fullName: Microsoft.VisualBasic.Information.UBound(Array,Int32)
- uid: Microsoft.VisualBasic.Information.VarType(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: VarType(Object)
  nameWithType: Information.VarType(Object)
  fullName: Microsoft.VisualBasic.Information.VarType(Object)
- uid: Microsoft.VisualBasic.VariantType
  parent: Microsoft.VisualBasic
  isExternal: false
  name: VariantType
  nameWithType: VariantType
  fullName: Microsoft.VisualBasic.VariantType
- uid: Microsoft.VisualBasic.Information.VbTypeName(System.String)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: VbTypeName(String)
  nameWithType: Information.VbTypeName(String)
  fullName: Microsoft.VisualBasic.Information.VbTypeName(String)
- uid: Microsoft.VisualBasic.Information.Erl*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: Erl
  nameWithType: Information.Erl
- uid: Microsoft.VisualBasic.Information.Err*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: Err
  nameWithType: Information.Err
- uid: Microsoft.VisualBasic.Information.IsArray*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsArray
  nameWithType: Information.IsArray
- uid: Microsoft.VisualBasic.Information.IsDate*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsDate
  nameWithType: Information.IsDate
- uid: Microsoft.VisualBasic.Information.IsDBNull*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsDBNull
  nameWithType: Information.IsDBNull
- uid: Microsoft.VisualBasic.Information.IsError*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsError
  nameWithType: Information.IsError
- uid: Microsoft.VisualBasic.Information.IsNothing*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsNothing
  nameWithType: Information.IsNothing
- uid: Microsoft.VisualBasic.Information.IsNumeric*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsNumeric
  nameWithType: Information.IsNumeric
- uid: Microsoft.VisualBasic.Information.IsReference*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsReference
  nameWithType: Information.IsReference
- uid: Microsoft.VisualBasic.Information.LBound*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: LBound
  nameWithType: Information.LBound
- uid: Microsoft.VisualBasic.Information.QBColor*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: QBColor
  nameWithType: Information.QBColor
- uid: Microsoft.VisualBasic.Information.RGB*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: RGB
  nameWithType: Information.RGB
- uid: Microsoft.VisualBasic.Information.SystemTypeName*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: SystemTypeName
  nameWithType: Information.SystemTypeName
- uid: Microsoft.VisualBasic.Information.TypeName*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: TypeName
  nameWithType: Information.TypeName
- uid: Microsoft.VisualBasic.Information.UBound*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: UBound
  nameWithType: Information.UBound
- uid: Microsoft.VisualBasic.Information.VarType*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: VarType
  nameWithType: Information.VarType
- uid: Microsoft.VisualBasic.Information.VbTypeName*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: VbTypeName
  nameWithType: Information.VbTypeName
