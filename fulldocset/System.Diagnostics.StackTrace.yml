### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.StackTrace
  id: StackTrace
  children:
  - System.Diagnostics.StackTrace.#ctor
  - System.Diagnostics.StackTrace.#ctor(System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)
  - System.Diagnostics.StackTrace.#ctor(System.Exception)
  - System.Diagnostics.StackTrace.#ctor(System.Int32)
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)
  - System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)
  - System.Diagnostics.StackTrace.FrameCount
  - System.Diagnostics.StackTrace.GetFrame(System.Int32)
  - System.Diagnostics.StackTrace.GetFrames
  - System.Diagnostics.StackTrace.METHODS_TO_SKIP
  - System.Diagnostics.StackTrace.ToString
  langs:
  - csharp
  name: StackTrace
  nameWithType: StackTrace
  fullName: System.Diagnostics.StackTrace
  type: Class
  summary: "Hiermee geeft u een stack-trace een geordende verzameling van een of meer stack-frames is."
  remarks: "StackTrace gegevens worden meest informatieve met foutopsporing build-configuraties. Standaard bevatten builds voor foutopsporing, symbolen en Release builds niet. De symbolen bevatten het bestand, methodenaam, regelnummer en kolomgegevens gebruikt bij het maken van de meeste <xref:System.Diagnostics.StackFrame>en StackTrace objecten.</xref:System.Diagnostics.StackFrame>       StackTrace mogelijk niet zoveel methodeaanroepen zoals verwacht, vanwege code transformaties die zich tijdens optimalisatie voordoen gerapporteerd."
  example:
  - "The following console application demonstrates how to create a simple StackTrace and iterate through its frames to obtain debugging and diagnostic information.  \n  \n [!code-cpp[StackTraceSample1#1](~/add/codesnippet/cpp/t-system.diagnostics.sta_1_1.cpp)]\n [!code-cs[StackTraceSample1#1](~/add/codesnippet/csharp/t-system.diagnostics.sta_1_1.cs)]\n [!code-vb[StackTraceSample1#1](~/add/codesnippet/visualbasic/t-system.diagnostics.sta_1_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class StackTrace
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor
  id: '#ctor'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace()
  nameWithType: StackTrace.StackTrace()
  fullName: System.Diagnostics.StackTrace.StackTrace()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse van de aanroeper frame."
  remarks: "De <xref:System.Diagnostics.StackTrace>wordt gemaakt met de huidige thread van de aanroeper en bevat geen bestandsnaam, regelnummer of kolomgegevens.</xref:System.Diagnostics.StackTrace>       Gebruik deze standaardconstructor als u een volledige tracering met alleen samenvattingsmethode informatie over de aanroepstack wilt."
  example:
  - "The following code example displays the first and last function calls in a stack trace.  \n  \n [!code-cpp[StackFrameSample1#8](~/add/codesnippet/cpp/m-system.diagnostics.sta_8_1.cpp)]\n [!code-vb[StackFrameSample1#8](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_8_1.vb)]\n [!code-cs[StackFrameSample1#8](~/add/codesnippet/csharp/m-system.diagnostics.sta_8_1.cs)]"
  syntax:
    content: public StackTrace ();
    parameters: []
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Boolean)
  nameWithType: StackTrace.StackTrace(Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse van de aanroeper-frame, eventueel vastleggen van bron."
  remarks: "De <xref:System.Diagnostics.StackTrace>wordt gemaakt met de huidige thread van de aanroeper.</xref:System.Diagnostics.StackTrace>"
  example:
  - "The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.  \n  \n [!code-cpp[StackFrameSample1#4](~/add/codesnippet/cpp/m-system.diagnostics.sta_4_1.cpp)]\n [!code-vb[StackFrameSample1#4](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_4_1.vb)]\n [!code-cs[StackFrameSample1#4](~/add/codesnippet/csharp/m-system.diagnostics.sta_4_1.cs)]"
  syntax:
    content: public StackTrace (bool fNeedFileInfo);
    parameters:
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vastleggen van de bestandsnaam, regelnummer en kolomnummer; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)
  id: '#ctor(System.Diagnostics.StackFrame)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(StackFrame)
  nameWithType: StackTrace.StackTrace(StackFrame)
  fullName: System.Diagnostics.StackTrace.StackTrace(StackFrame)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse met een enkel frame."
  remarks: "Deze constructor gebruiken wanneer u niet dat de overhead van een volledige stack-trace wilt."
  example:
  - "The following code example writes stack trace information to an event log entry.  \n  \n [!code-cpp[StackTraceSample3#6](~/add/codesnippet/cpp/m-system.diagnostics.sta_1_1.cpp)]\n [!code-cs[StackTraceSample3#6](~/add/codesnippet/csharp/m-system.diagnostics.sta_1_1.cs)]\n [!code-vb[StackTraceSample3#6](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_1_1.vb)]"
  syntax:
    content: public StackTrace (System.Diagnostics.StackFrame frame);
    parameters:
    - id: frame
      type: System.Diagnostics.StackFrame
      description: "Het frame dat de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> object moet bevatten."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception)
  nameWithType: StackTrace.StackTrace(Exception)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse met behulp van de opgegeven uitzondering-object."
  remarks: "De <xref:System.Diagnostics.StackTrace>wordt gemaakt met de huidige thread van de aanroeper en bevat geen bestandsnaam, regelnummer of kolomgegevens.</xref:System.Diagnostics.StackTrace>       De resulterende stacktracering beschrijft de stack op het moment van de uitzondering."
  syntax:
    content: public StackTrace (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "Het object exception van waaruit de stacktracering bouwen."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Int32)
  nameWithType: StackTrace.StackTrace(Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse van de aanroeper-frame, het opgegeven aantal frames wordt overgeslagen."
  remarks: "De <xref:System.Diagnostics.StackTrace>wordt gemaakt met de huidige thread van de aanroeper en bevat geen bestandsnaam, regelnummer of kolomgegevens.</xref:System.Diagnostics.StackTrace>       Als het aantal frames overslaan groter dan is of gelijk zijn aan het totale aantal frames in de aanroepstack op het moment dat het exemplaar is gemaakt, de <xref:System.Diagnostics.StackTrace>bevat geen frames.</xref:System.Diagnostics.StackTrace>"
  syntax:
    content: public StackTrace (int skipFrames);
    parameters:
    - id: skipFrames
      type: System.Int32
      description: "Het aantal frames van de stack van waaruit de tracering gestart."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> skipFrames </code> parameter is negatief."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  id: '#ctor(System.Exception,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse, met behulp van het object opgegeven exception en eventueel vastleggen bron."
  remarks: "De resulterende stacktracering beschrijft de stack op het moment van de uitzondering."
  syntax:
    content: public StackTrace (Exception e, bool fNeedFileInfo);
    parameters:
    - id: e
      type: System.Exception
      description: "Het object exception van waaruit de stacktracering bouwen."
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vastleggen van de bestandsnaam, regelnummer en kolomnummer; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)
  id: '#ctor(System.Exception,System.Int32)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception,Int32)
  nameWithType: StackTrace.StackTrace(Exception,Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse met behulp van de opgegeven uitzondering-object en het opgegeven aantal frames wordt overgeslagen."
  remarks: "De <xref:System.Diagnostics.StackTrace>bevat geen bestandsnaam, regelnummer of kolomgegevens.</xref:System.Diagnostics.StackTrace>       De resulterende stacktracering beschrijft de stack op het moment van de uitzondering.       Als het aantal frames overslaan groter dan is of gelijk zijn aan het totale aantal frames in de aanroepstack op het moment dat het exemplaar is gemaakt, de <xref:System.Diagnostics.StackTrace>bevat geen frames.</xref:System.Diagnostics.StackTrace>"
  syntax:
    content: public StackTrace (Exception e, int skipFrames);
    parameters:
    - id: e
      type: System.Exception
      description: "Het object exception van waaruit de stacktracering bouwen."
    - id: skipFrames
      type: System.Int32
      description: "Het aantal frames van de stack van waaruit de tracering gestart."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> skipFrames </code> parameter is negatief."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse van de aanroeper frame, het opgegeven aantal frames wordt overgeslagen en eventueel vastleggen bron."
  remarks: "Als het aantal frames overslaan groter dan is of gelijk zijn aan het totale aantal frames in de aanroepstack op het moment dat het exemplaar is gemaakt, de <xref:System.Diagnostics.StackTrace>bevat geen frames.</xref:System.Diagnostics.StackTrace>"
  example:
  - "The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.  \n  \n [!code-cpp[StackFrameSample1#4](~/add/codesnippet/cpp/m-system.diagnostics.sta_3_1.cpp)]\n [!code-vb[StackFrameSample1#4](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_3_1.vb)]\n [!code-cs[StackFrameSample1#4](~/add/codesnippet/csharp/m-system.diagnostics.sta_3_1.cs)]"
  syntax:
    content: public StackTrace (int skipFrames, bool fNeedFileInfo);
    parameters:
    - id: skipFrames
      type: System.Int32
      description: "Het aantal frames van de stack van waaruit de tracering gestart."
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vastleggen van de bestandsnaam, regelnummer en kolomnummer; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> skipFrames </code> parameter is negatief."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)
  id: '#ctor(System.Threading.Thread,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Thread,Boolean)
  nameWithType: StackTrace.StackTrace(Thread,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Thread,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse voor een specifieke thread, eventueel vastleggen van bron.       Gebruik de overbelasting van deze constructor niet."
  remarks: >-
    > [!IMPORTANT]

    >  Do not use this constructor. It is obsolete, and there is no recommended alternative. When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily. For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked. If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.
  syntax:
    content: public StackTrace (System.Threading.Thread targetThread, bool needFileInfo);
    parameters:
    - id: targetThread
      type: System.Threading.Thread
      description: "De thread waarvan stack-trace is aangevraagd."
    - id: needFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vastleggen van de bestandsnaam, regelnummer en kolomnummer; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "De thread <code> targetThread </code> niet is onderbroken."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)
  id: '#ctor(System.Exception,System.Int32,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception,Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> klasse met behulp van de opgegeven uitzondering-object, het opgegeven aantal frames wordt overgeslagen en eventueel vastleggen van bron."
  remarks: "De resulterende stacktracering beschrijft de stack op het moment van de uitzondering.       Als het aantal frames overslaan groter dan is of gelijk zijn aan het totale aantal frames in de aanroepstack op het moment dat het exemplaar is gemaakt, de <xref:System.Diagnostics.StackTrace>bevat geen frames.</xref:System.Diagnostics.StackTrace>"
  syntax:
    content: public StackTrace (Exception e, int skipFrames, bool fNeedFileInfo);
    parameters:
    - id: e
      type: System.Exception
      description: "Het object exception van waaruit de stacktracering bouwen."
    - id: skipFrames
      type: System.Int32
      description: "Het aantal frames van de stack van waaruit de tracering gestart."
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vastleggen van de bestandsnaam, regelnummer en kolomnummer; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> skipFrames </code> parameter is negatief."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.FrameCount
  id: FrameCount
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: FrameCount
  nameWithType: StackTrace.FrameCount
  fullName: System.Diagnostics.StackTrace.FrameCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Hiermee haalt het aantal frames in de stack-trace."
  remarks: ''
  example:
  - "The following code example displays the first and last function calls in a stack trace.  \n  \n [!code-cpp[StackFrameSample1#8](~/add/codesnippet/cpp/p-system.diagnostics.sta_1.cpp)]\n [!code-vb[StackFrameSample1#8](~/add/codesnippet/visualbasic/p-system.diagnostics.sta_1.vb)]\n [!code-cs[StackFrameSample1#8](~/add/codesnippet/csharp/p-system.diagnostics.sta_1.cs)]"
  syntax:
    content: public virtual int FrameCount { get; }
    return:
      type: System.Int32
      description: "Het aantal frames in de stack-trace."
  overload: System.Diagnostics.StackTrace.FrameCount*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.GetFrame(System.Int32)
  id: GetFrame(System.Int32)
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: GetFrame(Int32)
  nameWithType: StackTrace.GetFrame(Int32)
  fullName: System.Diagnostics.StackTrace.GetFrame(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Het opgegeven stack-frame opgehaald."
  remarks: "Stack-frames worden genummerd beginnen bij 0, wat het laatste stackframe gepusht is."
  example:
  - "The following code example displays the first and last function calls in a stack trace.  \n  \n [!code-cpp[StackFrameSample1#8](~/add/codesnippet/cpp/m-system.diagnostics.sta_17_1.cpp)]\n [!code-vb[StackFrameSample1#8](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_17_1.vb)]\n [!code-cs[StackFrameSample1#8](~/add/codesnippet/csharp/m-system.diagnostics.sta_17_1.cs)]"
  syntax:
    content: public virtual System.Diagnostics.StackFrame GetFrame (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De index van de stackframe aangevraagd."
    return:
      type: System.Diagnostics.StackFrame
      description: "De opgegeven stack-frame."
  overload: System.Diagnostics.StackTrace.GetFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.GetFrames
  id: GetFrames
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: GetFrames()
  nameWithType: StackTrace.GetFrames()
  fullName: System.Diagnostics.StackTrace.GetFrames()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Retourneert een kopie van alle stackframes in de huidige stack-trace."
  remarks: "De geretourneerde <xref:System.Diagnostics.StackFrame>matrix inventariseren en onderzoeken functieaanroepen in de <xref:System.Diagnostics.StackTrace>.</xref:System.Diagnostics.StackTrace> </xref:System.Diagnostics.StackFrame> gebruiken De lengte van de geretourneerde matrix is gelijk aan de <xref:System.Diagnostics.StackTrace.FrameCount%2A>eigenschapswaarde.</xref:System.Diagnostics.StackTrace.FrameCount%2A>       De <xref:System.Diagnostics.StackFrame>matrixelementen zijn in omgekeerde volgorde.</xref:System.Diagnostics.StackFrame> De <xref:System.Diagnostics.StackFrame>matrix index 0 vertegenwoordigt de meest recente functie-aanroep in de stack-trace en de laatste frame naar de aanroepstack doorgeschoven.</xref:System.Diagnostics.StackFrame> De <xref:System.Diagnostics.StackFrame>op matrixindex <xref:System.Diagnostics.StackTrace.FrameCount%2A>min 1 vertegenwoordigt de oudste functieaanroep in de stack-trace en de eerste frame naar de aanroepstack doorgeschoven.</xref:System.Diagnostics.StackTrace.FrameCount%2A> </xref:System.Diagnostics.StackFrame>       De methode GetFrames gebruiken om op te halen van alle stackframes in een stack-trace; Gebruik de <xref:System.Diagnostics.StackTrace.GetFrame%2A>methode voor het verkrijgen van een specifieke stackframe in een stack-trace.</xref:System.Diagnostics.StackTrace.GetFrame%2A> De <xref:System.Diagnostics.StackFrame>indexen dergelijke door de twee methoden zijn gerangschikt.</xref:System.Diagnostics.StackFrame> Bijvoorbeeld, de <xref:System.Diagnostics.StackFrame>bij index 0 in de matrix die is geretourneerd door GetFrames is gelijk aan de <xref:System.Diagnostics.StackFrame>geretourneerd door <xref:System.Diagnostics.StackTrace.GetFrame%2A>met een invoer index 0.</xref:System.Diagnostics.StackTrace.GetFrame%2A> </xref:System.Diagnostics.StackFrame> </xref:System.Diagnostics.StackFrame>"
  example:
  - "The following code example demonstrates enumerating the frames in a <xref:System.Diagnostics.StackTrace>.  \n  \n [!code-cpp[StackTraceSample2#3](~/add/codesnippet/cpp/m-system.diagnostics.sta_14_1.cpp)]\n [!code-vb[StackTraceSample2#3](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_14_1.vb)]\n [!code-cs[StackTraceSample2#3](~/add/codesnippet/csharp/m-system.diagnostics.sta_14_1.cs)]"
  syntax:
    content: public virtual System.Diagnostics.StackFrame[] GetFrames ();
    parameters: []
    return:
      type: System.Diagnostics.StackFrame[]
      description: "Een matrix van het type <xref href=&quot;System.Diagnostics.StackFrame&quot;> </xref> voor de functie in de stack-trace aanroept."
  overload: System.Diagnostics.StackTrace.GetFrames*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.METHODS_TO_SKIP
  id: METHODS_TO_SKIP
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: METHODS_TO_SKIP
  nameWithType: StackTrace.METHODS_TO_SKIP
  fullName: System.Diagnostics.StackTrace.METHODS_TO_SKIP
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Hiermee definieert u de standaardwaarde voor het aantal methoden moeten worden weggelaten uit de stack-trace. Dit veld is constante."
  remarks: "De standaardwaarde voor het aantal methoden om over te slaan aan het begin van de stack-trace. De waarde van deze constante is 0."
  syntax:
    content: public const int METHODS_TO_SKIP = 0;
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.ToString
  id: ToString
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: ToString()
  nameWithType: StackTrace.ToString()
  fullName: System.Diagnostics.StackTrace.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Een leesbare weergave van de stack-trace is gebaseerd."
  remarks: ''
  example:
  - "The following code example writes stack trace information to an event log entry.  \n  \n [!code-cpp[StackTraceSample3#6](~/add/codesnippet/cpp/m-system.diagnostics.sta_10_1.cpp)]\n [!code-cs[StackTraceSample3#6](~/add/codesnippet/csharp/m-system.diagnostics.sta_10_1.cs)]\n [!code-vb[StackTraceSample3#6](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_10_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Een leesbare weergave van de stack-trace."
  overload: System.Diagnostics.StackTrace.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Threading.ThreadStateException
  parent: System.Threading
  isExternal: false
  name: ThreadStateException
  nameWithType: ThreadStateException
  fullName: System.Threading.ThreadStateException
- uid: System.Diagnostics.StackTrace.#ctor
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace()
  nameWithType: StackTrace.StackTrace()
  fullName: System.Diagnostics.StackTrace.StackTrace()
- uid: System.Diagnostics.StackTrace.#ctor(System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Boolean)
  nameWithType: StackTrace.StackTrace(Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(StackFrame)
  nameWithType: StackTrace.StackTrace(StackFrame)
  fullName: System.Diagnostics.StackTrace.StackTrace(StackFrame)
- uid: System.Diagnostics.StackFrame
  parent: System.Diagnostics
  isExternal: false
  name: StackFrame
  nameWithType: StackFrame
  fullName: System.Diagnostics.StackFrame
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception)
  nameWithType: StackTrace.StackTrace(Exception)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Int32)
  nameWithType: StackTrace.StackTrace(Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Boolean)
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception,Int32)
  nameWithType: StackTrace.StackTrace(Exception,Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32)
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32,Boolean)
- uid: System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Thread,Boolean)
  nameWithType: StackTrace.StackTrace(Thread,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Thread,Boolean)
- uid: System.Threading.Thread
  parent: System.Threading
  isExternal: false
  name: Thread
  nameWithType: Thread
  fullName: System.Threading.Thread
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception,Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32,Boolean)
- uid: System.Diagnostics.StackTrace.FrameCount
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: FrameCount
  nameWithType: StackTrace.FrameCount
  fullName: System.Diagnostics.StackTrace.FrameCount
- uid: System.Diagnostics.StackTrace.GetFrame(System.Int32)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrame(Int32)
  nameWithType: StackTrace.GetFrame(Int32)
  fullName: System.Diagnostics.StackTrace.GetFrame(Int32)
- uid: System.Diagnostics.StackTrace.GetFrames
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrames()
  nameWithType: StackTrace.GetFrames()
  fullName: System.Diagnostics.StackTrace.GetFrames()
- uid: System.Diagnostics.StackFrame[]
  parent: System.Diagnostics
  isExternal: false
  name: StackFrame
  nameWithType: StackFrame
  fullName: System.Diagnostics.StackFrame[]
  spec.csharp:
  - uid: System.Diagnostics.StackFrame
    name: StackFrame
    nameWithType: StackFrame
    fullName: StackFrame[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.StackTrace.METHODS_TO_SKIP
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: METHODS_TO_SKIP
  nameWithType: StackTrace.METHODS_TO_SKIP
  fullName: System.Diagnostics.StackTrace.METHODS_TO_SKIP
- uid: System.Diagnostics.StackTrace.ToString
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: ToString()
  nameWithType: StackTrace.ToString()
  fullName: System.Diagnostics.StackTrace.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.StackTrace.#ctor*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace
  nameWithType: StackTrace.StackTrace
- uid: System.Diagnostics.StackTrace.FrameCount*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: FrameCount
  nameWithType: StackTrace.FrameCount
- uid: System.Diagnostics.StackTrace.GetFrame*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrame
  nameWithType: StackTrace.GetFrame
- uid: System.Diagnostics.StackTrace.GetFrames*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrames
  nameWithType: StackTrace.GetFrames
- uid: System.Diagnostics.StackTrace.ToString*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: ToString
  nameWithType: StackTrace.ToString
