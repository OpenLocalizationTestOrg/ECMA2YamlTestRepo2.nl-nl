### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  id: SecurityTokenResolver
  children:
  - System.IdentityModel.Selectors.SecurityTokenResolver.#ctor
  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  langs:
  - csharp
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
  type: Class
  summary: "Hiermee geeft u een Hulpprogrammaklasse die beveiligingstokens of sleutels ophalen kan als er een sleutel-id of ID-clausule."
  remarks: "Gebruik de klasse SecurityTokenResolver voor het ophalen van een sleutel of security token als er een sleutel-id of ID-clausule. De <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>en <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>methoden ophalen van een token gezien het feit dat er een sleutel-id of ID-clausule is.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> De <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>en <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>ophalen van een sleutel gezien het feit dat er een ID-clausule is.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> De methoden met een `Try` return voorvoegsel `false` bij het ophalen mislukt is, terwijl de methoden zonder een `Try` voorvoegsel Veroorzaak een uitzondering."
  syntax:
    content: 'public abstract class SecurityTokenResolver : System.IdentityModel.Configuration.ICustomIdentityConfiguration'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Configuration.ICustomIdentityConfiguration
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: SecurityTokenResolver()
  nameWithType: SecurityTokenResolver.SecurityTokenResolver()
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.SecurityTokenResolver()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> klasse."
  syntax:
    content: protected SecurityTokenResolver ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  id: CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Maakt een standaard beveiligingstokenomzetter voor de opgegeven beveiligingstokens."
  remarks: "De beveiligingstokenomzetter die wordt geretourneerd door deze methode maakt gebruik van de <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>en <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A>methoden op de opgegeven beveiligingstokens sleutel-id&quot;s en componenten van sleutel-id op te lossen.</xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> </xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>"
  syntax:
    content: public static System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken> tokens, bool canMatchLocalId);
    parameters:
    - id: tokens
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken}
      description: "Een &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; van het type <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> die de set beveiligingstokens waarvoor deze beveiligingstokenomzetter sleutel-id&quot;s en componenten van sleutel-id om te kan omzetten bevat."
    - id: canMatchLocalId
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om op te lossen de <xref uid=&quot;langword_csharp_&lt;SecurityTokenReference&gt;&quot; name=&quot;&lt;SecurityTokenReference&gt;&quot; href=&quot;&quot;> </xref> sleutel-ID-clausules die verwijzen naar een beveiligingssleutel die zich ergens anders in het SOAP-bericht, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Een <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> die wordt omgezet sleutel-id&quot;s en de componenten die overeenkomen met de beveiligingstokens die is opgegeven in de <code> tokens </code> parameter."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Wanneer in een afgeleide klasse genegeerd, laadt aangepaste configuratie vanuit XML."
  remarks: "Standaard genereert een <xref:System.NotImplementedException>.</xref:System.NotImplementedException> U kunt deze methode functionaliteit in een afgeleide klasse bieden overschrijven."
  syntax:
    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);
    parameters:
    - id: nodelist
      type: System.Xml.XmlNodeList
      description: "Aangepaste configuratie-elementen."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: ResolveSecurityKey(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "De sleutel waarnaar wordt verwezen in de opgegeven ID-clausule verkrijgt."
  remarks: "De <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>en ResolveSecurityKey methoden verschillen in wat er gebeurt wanneer de component sleutel-id kan niet omgezet naar een sleutel worden.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> De <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>methode retourneert `false`, terwijl de methode ResolveSecurityKey er een uitzondering gegenereerd.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Een <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> voor het ophalen van de sleutel voor."
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Een <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> dat de sleutel waarnaar wordt verwezen in de opgegeven sleutel-id-component."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een sleutel kan niet worden opgehaald voor de sleutel-id-component die is opgegeven in de <code> keyIdentifierClause </code> parameter."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: ResolveToken(SecurityKeyIdentifier)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Een beveiligingstoken dat overeenkomt met een van de beveiliging sleutel-ID clausules binnen de opgegeven sleutel-id opgehaald."
  remarks: "De <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>en ResolveToken methoden verschillen in wat er gebeurt wanneer de sleutel-id kan niet omgezet naar een beveiligingstoken worden.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> De <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>methode retourneert `false`, terwijl de methode ResolveToken er een uitzondering gegenereerd.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "De <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> voor het maken van een beveiligingstoken voor."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Een <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> die staat voor de opgegeven sleutel-id."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een beveiligingstoken kan niet worden gemaakt voor de opgegeven sleutel-id."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: ResolveToken(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Haalt het beveiligingstoken dat overeenkomt met de opgegeven sleutel-id-component."
  remarks: "De <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>en ResolveToken methoden verschillen in wat er gebeurt wanneer de component sleutel-id kan niet omgezet naar een beveiligingstoken worden.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> De <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>methode retourneert `false`, terwijl de methode ResolveToken er een uitzondering gegenereerd.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "De <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> voor het maken van een beveiligingstoken voor."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Een <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> die staat voor de opgegeven sleutel-id-component."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Probeert op te halen van de sleutel waarnaar wordt verwezen in de opgegeven sleutel-id-component."
  remarks: "De TryResolveSecurityKey en <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>methoden verschillen in wat er gebeurt wanneer de component sleutel-id kan niet omgezet naar een sleutel worden.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> De methode TryResolveSecurityKey retourneert `false`, terwijl de <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>methode er een uitzondering gegenereerd.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>"
  syntax:
    content: public bool TryResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Een <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> voor het ophalen van de sleutel voor."
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Wanneer deze methode retourneert, bevat een <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> die de sleutel waarnaar wordt verwezen in de opgegeven sleutel-id-component bevat. Deze parameter wordt doorgegeven niet geïnitialiseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Wanneer een sleutel kan worden opgehaald voor de opgegeven sleutel-id-component; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Probeert op te halen van de sleutel waarnaar wordt verwezen in de opgegeven sleutel-id-component."
  remarks: "De methode TryResolveSecurityKeyCore wordt aangeroepen door de <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>en <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>methoden.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>"
  syntax:
    content: protected abstract bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Een <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> voor het ophalen van de sleutel voor."
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Wanneer deze methode retourneert, bevat een <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> die de sleutel waarnaar wordt verwezen in de opgegeven sleutel-id-component bevat. Deze parameter wordt doorgegeven niet geïnitialiseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Wanneer een sleutel kan worden opgehaald voor de opgegeven sleutel-id-component; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Probeert op te halen van het beveiligingstoken dat overeenkomt met een van de sleutel-ID clausules binnen de opgegeven sleutel-id."
  remarks: "De TryResolveToken en <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>methoden verschillen in wat er gebeurt wanneer de sleutel-id kan niet omgezet naar een beveiligingstoken worden.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> De methode TryResolveToken retourneert `false`, terwijl de <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>methode er een uitzondering gegenereerd.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>"
  syntax:
    content: public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "De <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> voor het maken van een beveiligingstoken voor."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Wanneer deze methode retourneert, bevat een <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> die staat voor de opgegeven sleutel-id. Deze parameter wordt doorgegeven niet geïnitialiseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Wanneer een beveiligingstoken worden opgehaald voor de opgegeven sleutel-id; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Probeert op te halen van het beveiligingstoken dat overeenkomt met de opgegeven sleutel-id-component."
  remarks: "De TryResolveToken en <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>methoden verschillen in wat er gebeurt wanneer de component sleutel-id kan niet omgezet naar een beveiligingstoken worden.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> De methode TryResolveToken retourneert `false`, terwijl de <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>methode er een uitzondering gegenereerd.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>"
  syntax:
    content: public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "De <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> voor het maken van een beveiligingstoken voor."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Wanneer deze methode retourneert, bevat een <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> die staat voor de opgegeven sleutel-id-component. Deze parameter wordt doorgegeven niet geïnitialiseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Wanneer een beveiligingstoken worden opgehaald voor de opgegeven sleutel-id-component; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Wanneer in een afgeleide klasse genegeerd, probeert het beveiligingstoken dat overeenkomt met ten minste een van de sleutel-ID clausules binnen de opgegeven sleutel-id ophalen."
  remarks: "De methode TryResolveTokenCore wordt aangeroepen door de <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>en <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>methoden.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "De <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> voor het maken van een beveiligingstoken voor."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Wanneer deze methode retourneert, bevat een <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> die staat voor de opgegeven sleutel-id. Deze parameter wordt doorgegeven niet geïnitialiseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Wanneer een beveiligingstoken worden opgehaald voor de opgegeven sleutel-id; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Wanneer overschreven in een afgeleide klasse, probeert het beveiligingstoken dat overeenkomt met de opgegeven ID-clausule omzetten."
  remarks: "De methode TryResolveTokenCore wordt aangeroepen door de <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>en <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>methoden.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "De <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> voor het maken van een beveiligingstoken voor."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Wanneer deze methode retourneert, bevat een <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> die staat voor de opgegeven sleutel-id-component. Deze parameter wordt doorgegeven niet geïnitialiseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Wanneer een beveiligingstoken worden opgehaald voor de opgegeven sleutel-id-component; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: SecurityTokenResolver()
  nameWithType: SecurityTokenResolver.SecurityTokenResolver()
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.SecurityTokenResolver()
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityToken>
  nameWithType: ReadOnlyCollection<SecurityToken>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: SecurityToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveSecurityKey(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveToken(SecurityKeyIdentifier)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveToken(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver.SecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: CreateDefaultSecurityTokenResolver
  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: SecurityTokenResolver.LoadCustomConfiguration
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveSecurityKey
  nameWithType: SecurityTokenResolver.ResolveSecurityKey
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveToken
  nameWithType: SecurityTokenResolver.ResolveToken
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKey
  nameWithType: SecurityTokenResolver.TryResolveSecurityKey
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore
  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveToken
  nameWithType: SecurityTokenResolver.TryResolveToken
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveTokenCore
  nameWithType: SecurityTokenResolver.TryResolveTokenCore
