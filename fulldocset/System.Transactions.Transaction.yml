### YamlMime:ManagedReference
items:
- uid: System.Transactions.Transaction
  id: Transaction
  children:
  - System.Transactions.Transaction.Clone
  - System.Transactions.Transaction.Current
  - System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  - System.Transactions.Transaction.Dispose
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.Equals(System.Object)
  - System.Transactions.Transaction.GetHashCode
  - System.Transactions.Transaction.GetPromotedToken
  - System.Transactions.Transaction.IsolationLevel
  - System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.PromoterType
  - System.Transactions.Transaction.Rollback
  - System.Transactions.Transaction.Rollback(System.Exception)
  - System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Transactions.Transaction.TransactionCompleted
  - System.Transactions.Transaction.TransactionInformation
  langs:
  - csharp
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
  type: Class
  summary: "Hiermee geeft u een transactie."
  remarks: "De <xref:System.Transactions>naamruimte biedt zowel een expliciete programmeermodel op basis van de transactie-klasse, evenals een impliciete programming model met behulp van de <xref:System.Transactions.TransactionScope>klasse, waarin transacties automatisch worden beheerd door de infrastructuur.</xref:System.Transactions.TransactionScope> </xref:System.Transactions> Het is raadzaam het eenvoudiger impliciete model te gebruiken voor ontwikkeling. Om te beginnen, raadpleegt u de [uitvoering van een impliciete transactie met behulp van transactiebereik](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) onderwerp. Zie voor meer informatie over het schrijven van een transactionele toepassing [transactionele toepassing schrijven](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       De transactie-klasse bevat de methoden die worden gebruikt door ontwikkelaars bronbeheer statuscomputer voor implementatie. Het bevat ook functies voor het klonen van een transactie en beheren van de context van de huidige transactie. U kunt de huidige transactie verkrijgen als een is ingesteld, met behulp van de statische <xref:System.Transactions.Transaction.Current%2A>eigenschap.</xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: 'public class Transaction : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Clone
  id: Clone
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee maakt u een kloon van de transactie."
  remarks: "Klonen worden gemaakt als u wilt doorgeven transacties.  Bijvoorbeeld, u mogelijk niet wilt doorgeven een <xref:System.Transactions.CommittableTransaction>voor andere toepassingen, omdat u niet wilt dat anderen uw transactie doorvoeren.</xref:System.Transactions.CommittableTransaction>  Als u probeert te marshallen of serialiseren van een transactie, wordt een kloon automatisch voor u gemaakt."
  syntax:
    content: public System.Transactions.Transaction Clone ();
    parameters: []
    return:
      type: System.Transactions.Transaction
      description: "Een <xref href=&quot;System.Transactions.Transaction&quot;> </xref> die een kopie van de huidige transactieobject."
  overload: System.Transactions.Transaction.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Current
  id: Current
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Opgehaald of ingesteld van de ambient transactie."
  remarks: "Voor meer informatie over ambient transacties, Zie de sectie &quot;Beheren met behulp van TransactionScopeOption transactietransport&quot; van de [uitvoering van een impliciete transactie met transactiebereik](~/add/includes/ajax-current-ext-md.md) onderwerp.       Hoewel u de ambient transactie met deze eigenschap wilt instellen, moet u de <xref:System.Transactions.TransactionScope>object om te manipuleren van de ambient transactie indien mogelijk.</xref:System.Transactions.TransactionScope>       Deze eigenschap is statische thread. Als u de ambient transactie met deze eigenschap in een <xref:System.Transactions.TransactionScope>een <xref:System.InvalidOperationException>gegenereerd wanneer <xref:System.Transactions.TransactionScope.Dispose%2A>wordt genoemd, en de vorige waarde van de ambient transactie is hersteld.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope>"
  syntax:
    content: public static System.Transactions.Transaction Current { get; set; }
    return:
      type: System.Transactions.Transaction
      description: "Een <xref href=&quot;System.Transactions.Transaction&quot;> </xref> die de huidige transactie beschrijft."
  overload: System.Transactions.Transaction.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  id: DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee maakt u een afhankelijke kloon van de transactie."
  remarks: "Een afhankelijke is een transactie waarvan de uitkomst is afhankelijk van het resultaat van de transactie waarvan deze is gekloond.       De `cloneoption` parameter bepaalt wat voor soort afhankelijke transactie te maken. Als een afhankelijke transactie is gemaakt, <xref:System.Transactions.DependentCloneOption>wordt het proces van het doorvoeren van de transactie totdat de transactie een time-out optreedt, of <xref:System.Transactions.DependentTransaction.Complete%2A>wordt aangeroepen voor de <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> geblokkeerd</xref:System.Transactions.DependentCloneOption> Als deze is gemaakt met <xref:System.Transactions.DependentCloneOption>, het automatisch afbreken van de transactie als <xref:System.Transactions.CommittableTransaction.Commit%2A>wordt aangeroepen voordat het <xref:System.Transactions.DependentTransaction.Complete%2A>wordt aangeroepen voor de <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> </xref:System.Transactions.CommittableTransaction.Commit%2A> </xref:System.Transactions.DependentCloneOption>"
  example:
  - "The following example shows you how to create a dependent transaction.  \n  \n [!code-vb[Tx_DependentTx#1](~/add/codesnippet/visualbasic/a081f0f4-5473-43fc-b7fe-_1.vb)]\n [!code-cs[Tx_DependentTx#1](~/add/codesnippet/csharp/a081f0f4-5473-43fc-b7fe-_1.cs)]"
  syntax:
    content: public System.Transactions.DependentTransaction DependentClone (System.Transactions.DependentCloneOption cloneOption);
    parameters:
    - id: cloneOption
      type: System.Transactions.DependentCloneOption
      description: "Een <xref href=&quot;System.Transactions.DependentCloneOption&quot;> </xref> die bepaalt wat voor soort afhankelijke transactie te maken."
    return:
      type: System.Transactions.DependentTransaction
      description: "Een <xref href=&quot;System.Transactions.DependentTransaction&quot;> </xref> die staat voor de afhankelijke kloon."
  overload: System.Transactions.Transaction.DependentClone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Dispose
  id: Dispose
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Versies van de resources die worden vastgehouden door het object."
  remarks: "Als u de ambient transactie door in te stellen wijzigen <xref:System.Transactions.Transaction.Current%2A>binnen een <xref:System.Transactions.TransactionScope>een <xref:System.InvalidOperationException>gegenereerd wanneer <xref:System.Transactions.TransactionScope.Dispose%2A>wordt genoemd, en de vorige waarde van de ambient transactie is hersteld.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope> </xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.Transaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Zich aanmeldt een duurzame resourcemanager die ondersteuning biedt voor twee fase doorvoeren om deel te nemen in een transactie."
  remarks: "Bronbeheer met een duurzame aanmelding moet kunnen herstellen wanneer er een fout. Zie voor meer informatie over herstel [herstel uitvoeren van](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Zie voor meer informatie over vluchtige en duurzame bronnen, evenals het opnemen van een resource [uitvoering van een Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).  Zie voor meer informatie over hoe een resourcemanager reageert melding doorvoeren en het doorvoeren in doorvoertransactie wordt voorbereid, [doorvoeren van een transactie In Single-Phase en meerdere fase](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Bronbeheer aangemeld voor deelname in een transactie via deze methode ontvangen twee meldingen van de fase doorvoeren die met de methoden die zijn gedefinieerd overeenkomen op de <xref:System.Transactions.IEnlistmentNotification>interface.</xref:System.Transactions.IEnlistmentNotification>"
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Een unieke id voor een resourcemanager, dat moet persistent is voor resource manager-fout of opnieuw opstarten."
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Een object dat u implementeert de <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> interface om twee fase doorvoeren meldingen te ontvangen."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Als de resourcemanager wil uitvoeren van extra werk tijdens de fase voorbereiden."
    return:
      type: System.Transactions.Enlistment
      description: "Een <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -object dat de inschrijving wordt beschreven."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Zich aanmeldt een duurzame resourcemanager die ondersteuning biedt voor één fase doorvoeren optimalisatie om deel te nemen in een transactie."
  remarks: "Bronbeheer met een duurzame aanmelding moet kunnen herstellen wanneer er een fout. Zie voor meer informatie over herstel [herstel uitvoeren van](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Zie voor meer informatie over vluchtige en duurzame bronnen, evenals het opnemen van een resource [uitvoering van een Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).       Houd er rekening mee dat zelfs wanneer de implementatie van resource manager zich bij deze methode aanmeldt, is er geen garantie dat deze een enkel fase doorvoeren ontvangt. Twee fase doorvoeren meldingen kan nog steeds in plaats daarvan verzenden door de transactiebeheerder. Zie voor meer informatie over de optimalisatie van enkel fase doorvoeren [optimalisatie met behulp van één fase doorvoeren en gepromoveerd één fase melding](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Een unieke id voor een resourcemanager, dat moet persistent is voor resource manager-fout of opnieuw opstarten."
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Een object dat u implementeert de <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> interface die moet kunnen enkel fase doorvoeren en twee fase doorvoeren meldingen ontvangen."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Als de resourcemanager wil uitvoeren van extra werk tijdens de fase voorbereiden."
    return:
      type: System.Transactions.Enlistment
      description: "Een <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -object dat de inschrijving wordt beschreven."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Zich aanmeldt een resourcemanager met een interne transactie met behulp van de aanmelding van een enkel fase gepromoveerd (PSPE)."
  remarks: "Inschrijvingen in een transactie zijn vluchtige; ze overleven dat wil zeggen, niet het uitvallen van de deelnemer. Bovendien wordt deze methode alleen de transactiebeheerder om te escaleren besturingselement wordt voorgesteld, maar de escalatie zelf kan niet worden gegarandeerd. Als escalatie mislukt, wordt de gebruiker geen melding en wordt de transactie is teruggedraaid.       De parameter `promotableSinglePhaseNotification` wordt gebruikt om te communiceren met de transactiebeheerder van het resultaat van het doorvoeren van de resourcemanager interne transactie.  Als inconsistente gegevens wordt gemeld, genereert de transactiebeheerder een uitzondering. Als een <xref:System.Transactions.TransactionStatus>resultaat wordt gerapporteerd, de transactiebeheerder zoekt de uitkomst melding in een eigen interne aanmelding en negeert het gerapporteerde antwoord.</xref:System.Transactions.TransactionStatus>       Zie voor meer informatie over inschrijvingen en escalatie van een transactie [transactie Management escalatie](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7). Zie voor meer informatie over PSPE [optimalisatie met behulp van één fase doorvoeren en gepromoveerd één fase melding](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb).       **Opmerking** maakt gebruik van deze methode <xref:System.Security.Permissions.SecurityAction>om te voorkomen dat deze wordt aangeroepen vanuit niet-vertrouwde code; alleen de onmiddellijke aanroeper is echter vereist dat de `FullTrust` machtigingenset.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Een <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> interface geïmplementeerd door de deelnemer."
    return:
      type: System.Boolean
      description: "Een <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> interface-implementatie de inschrijving beschrijft."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Zich aanmeldt een resourcemanager met een interne transactie met behulp van de aanmelding van een enkel fase gepromoveerd (PSPE)."
  remarks: "Als de opgegeven waarde voor de `promoterType` parameter `TransactionInterop.PromoterTypeDtc`, de transactie **moet** worden gepromoveerd door MSDTC en de `byte[]` geretourneerd door de `IPromotableSinglePhaseNotification.Promote` methode **moet** worden een doorgiftetoken MSDTC-transactie.       Als de opgegeven waarde voor de `promoterType` parameter **niet**`TransactionInterop.PromoterTypeDTC`, de transactie niet worden gepromoveerd MSDTC, maar in plaats daarvan door de implementatie van de aanroeper van `IPromotableSinglePhaseNotification`. Als deze aanroep voltooid is, er is een set van verdere bewerkingen op de transactie die resulteert in een `TransactionPromotionException`. Deze bewerkingen zijn:- `Transaction.EnlistDurable`       -    `TransactionInterop.GetDtcTransaction`       -    `TransactionInterop.GetExportCookie`       -    `TransctionInterop.GetTransmitterPropagationToken` -serialisatie van een transactieobject"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification, Guid promoterType);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Een <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> interface geïmplementeerd door de deelnemer."
    - id: promoterType
      type: System.Guid
      description: "Het type van de processor van de gedistribueerde transactie."
    return:
      type: System.Boolean
      description: "Een <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> interface-implementatie de inschrijving beschrijft."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Zich aanmeldt een vluchtige resourcemanager die ondersteuning biedt voor twee fase doorvoeren om deel te nemen in een transactie."
  remarks: "Vluchtige bronbeheer niet herstellen van fouten om een waaraan ze zijn deelneemt transactie te voltooien. Voor een duurzame inschrijving voor een transactie verkrijgen, gebruikt u de <xref:System.Transactions.Transaction.EnlistDurable%2A>methode.</xref:System.Transactions.Transaction.EnlistDurable%2A>       Bronbeheer aangemeld voor deelname in een transactie via deze methode ontvangen twee meldingen van de fase doorvoeren die met de methoden die zijn gedefinieerd overeenkomen op de <xref:System.Transactions.IEnlistmentNotification>interface.</xref:System.Transactions.IEnlistmentNotification>"
  example:
  - "The following example shows an implementation of <xref:System.Transactions.IEnlistmentNotification> interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/1d69bab4-4268-46d9-8f3f-_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/1d69bab4-4268-46d9-8f3f-_1.vb)]"
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Een object dat u implementeert de <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> interface voor het ontvangen van meldingen doorvoeren in twee fasen."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Als de resourcemanager wil uitvoeren van extra werk tijdens de fase voorbereiden."
    return:
      type: System.Transactions.Enlistment
      description: "Een <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -object dat de inschrijving wordt beschreven."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Zich aanmeldt een vluchtige resourcemanager die ondersteuning biedt voor één fase doorvoeren optimalisatie om deel te nemen in een transactie."
  remarks: "Vluchtige bronbeheer niet herstellen van fouten om een waaraan ze zijn deelneemt transactie te voltooien. Voor een duurzame inschrijving voor een transactie verkrijgen, gebruikt u de <xref:System.Transactions.Transaction.EnlistDurable%2A>methode.</xref:System.Transactions.Transaction.EnlistDurable%2A> Zie voor meer informatie over vluchtige en duurzame bronnen, evenals het opnemen van een resource [uitvoering van een Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e). Zie voor meer informatie over hoe een resourcemanager reageert melding doorvoeren en het doorvoeren wordt voorbereid, [doorvoeren van een transactie In Single-Phase en meerdere fase](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Houd er rekening mee dat zelfs wanneer de implementatie van resource manager zich bij deze methode aanmeldt, is er geen garantie dat deze een enkel fase doorvoeren ontvangt. Twee fase doorvoeren meldingen kan nog steeds in plaats daarvan verzenden door de transactiebeheerder. Zie voor meer informatie over de optimalisatie van enkel fase doorvoeren [optimalisatie met behulp van één fase doorvoeren en gepromoveerd één fase melding](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Een object dat u implementeert de <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> interface die moet kunnen enkel fase doorvoeren en twee fase doorvoeren meldingen ontvangen."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Als de resourcemanager wil uitvoeren van extra werk tijdens de fase voorbereiden."
    return:
      type: System.Transactions.Enlistment
      description: "Een <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -object dat de inschrijving wordt beschreven."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Bepaalt of deze transactie en het opgegeven object gelijk zijn."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object dat moet worden vergeleken met dit exemplaar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> obj </code> en deze transactie zijn identiek zijn, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Transactions.Transaction.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetHashCode
  id: GetHashCode
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Retourneert de hash-code voor dit exemplaar."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een 32-bits geheel getal met teken hash-code."
  overload: System.Transactions.Transaction.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetPromotedToken
  id: GetPromotedToken
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Haalt de `byte[]` geretourneerd door de `Promote` methode wanneer de transactie wordt gepromoveerd."
  remarks: "Deze methode heeft een neveneffect van de promotie van de transactie veroorzaken als deze is niet wordt bevorderd.       De indeling van de geretourneerde `byte[]` wordt gedefinieerd door de waarde van de `Transation.PromoterType` eigenschap. Als de waarde van de `Transaction.PromoterType` eigenschap is `TransactionInterop.PromoterTypeDtc` of `Guid.Empty`, wordt de `byte[]` geretourneerd door deze methode is een token van MSDTC zender doorgeven. Een andere waarde voor de `Transaction.PromoterType` eigenschap geeft u een indeling die wordt gedefinieerd door de aanroeper van `Transaction.EnlistPromotableSinglePhase` die de waarde van de eigenschap type opgegeven. Om de gepromoveerde interpreteren token in het laatste geval moet u Raadpleeg de documentatie voor de code die de `EnlistPromotableSinglePhase` aanroepen."
  syntax:
    content: public byte[] GetPromotedToken ();
    parameters: []
    return:
      type: System.Byte[]
      description: "De `byte[]` geretourneerd door de `Promote` methode wanneer de transactie wordt gepromoveerd."
  overload: System.Transactions.Transaction.GetPromotedToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.IsolationLevel
  id: IsolationLevel
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee haalt u het isolatieniveau van de transactie."
  remarks: "Het isolatieniveau van een transactie bepaalt welk niveau van toegang tot andere transacties vluchtige gegevens voordat een transactie zijn is voltooid. Zie voor meer informatie over de isolatieniveaus, de documentatie voor de <xref:System.Transactions.IsolationLevel>opsomming.</xref:System.Transactions.IsolationLevel>"
  syntax:
    content: public System.Transactions.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Transactions.IsolationLevel
      description: "Een van de <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> waarden die het isolatieniveau van de transactie aangeeft."
  overload: System.Transactions.Transaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Test of twee opgegeven <xref href=&quot;System.Transactions.Transaction&quot;> </xref> exemplaren equivalent zijn."
  syntax:
    content: public static bool op_Equality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "De <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -instantie die aan de linkerkant van de gelijkheidsoperator."
    - id: y
      type: System.Transactions.Transaction
      description: "De <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -instantie die aan de rechterkant van de gelijkheidsoperator."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Retourneert een waarde die aangeeft of twee <xref href=&quot;System.Transactions.Transaction&quot;> </xref> exemplaren niet gelijk zijn."
  syntax:
    content: public static bool op_Inequality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "De <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -instantie die aan de linkerkant van de operator ongelijk."
    - id: y
      type: System.Transactions.Transaction
      description: "De <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -instantie die aan de rechterkant van de operator ongelijk."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Ondersteund in de .NET Framework 4.5.2 en latere versies]       Bevordert en een duurzame resourcemanager die ondersteuning biedt voor twee fase doorvoeren om deel te nemen in een transactie zich aanmeldt."
  syntax:
    content: public System.Transactions.Enlistment PromoteAndEnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IPromotableSinglePhaseNotification promotableNotification, System.Transactions.ISinglePhaseNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Een unieke id voor een resourcemanager, dat moet persistent is voor resource manager-fout of opnieuw opstarten."
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Een object dat als een gemachtigde doorvoeren voor een interne aan een resourcemanager niet in de gedistribueerde transactie fungeert."
    - id: enlistmentNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Een object dat u implementeert de <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> interface om twee fase doorvoeren meldingen te ontvangen."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Als de resourcemanager wil uitvoeren van extra werk tijdens de fase voorbereiden."
    return:
      type: System.Transactions.Enlistment
      description: "[Ondersteund in de .NET Framework 4.5.2 en latere versies]       Bevordert en een duurzame resourcemanager die ondersteuning biedt voor twee fase doorvoeren om deel te nemen in een transactie zich aanmeldt."
  overload: System.Transactions.Transaction.PromoteAndEnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoterType
  id: PromoterType
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Een unieke identificatie van de indeling van de `byte[]` geretourneerd door de promotiemethode als de transactie wordt gepromoveerd."
  remarks: "Als de transactie is nog niet gepromoveerd en nog geen aanmelding van een enkel fase gepromoveerd, de waarde van deze eigenschap is `Guid.Empty`. Als de transactie is of wordt gepromoveerd tot MSDTC, wordt de waarde van deze eigenschap is `TransactionInterop.PromoterTypeDtc`. Als de transactie is of door een niet-MSDTC organisator van deze actie wordt gepromoveerd, de waarde van deze eigenschap de waarde die is opgegeven voor een eerdere aanroep zal worden `Transaction.EnlistPromotableSinglePhase`."
  syntax:
    content: public Guid PromoterType { get; }
    return:
      type: System.Guid
      description: "Een guid die een unieke identificatie van de indeling van de `byte[]` geretourneerd door de promotiemethode als de transactie wordt gepromoveerd."
  overload: System.Transactions.Transaction.PromoterType*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback
  id: Rollback
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee wordt de vorige (wordt afgebroken) de transactie."
  remarks: "Een exemplaar van een transactieobject kunt het terugdraaien van de transactie starten door deze methode aanroept. Alleen de oorspronkelijke transactieobject, dat is een <xref:System.Transactions.CommittableTransaction>object, kunnen worden gebruikt voor het initiëren van een poging om door te voeren van de transactie.</xref:System.Transactions.CommittableTransaction> Wanneer deze methode wordt aangeroepen nadat de uitkomst van de transactie al is bepaald, wordt er een uitzondering gegenereerd."
  syntax:
    content: public void Rollback ();
    parameters: []
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  id: Rollback(System.Exception)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee wordt de vorige (wordt afgebroken) de transactie."
  syntax:
    content: public void Rollback (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "Een uitleg van waarom een terugdraaibewerking is opgetreden."
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee stelt u de gedistribueerde transactie-id gegenereerd door de organisator niet MSDTC van deze actie."
  remarks: "Deze methode kan alleen met succes worden aangeroepen terwijl de `IPromotableSinglePhaseNotification.Promote` methode wordt verwerkt. Als deze methode wordt aangeroepen op elk gewenst moment een `TransactionException` gegenereerd.       De opgegeven waarde van de `promotableNotification` parameter moet hetzelfde object dat eerder werd opgegeven voor de `Transaction.EnlistPromotableSinglePhase` aanroepen. Als dit niet het geval is, wordt er een `InvalidOperationException` gegenereerd."
  syntax:
    content: public void SetDistributedTransactionIdentifier (System.Transactions.IPromotableSinglePhaseNotification promotableNotification, Guid distributedTransactionIdentifier);
    parameters:
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Een <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> interface geïmplementeerd door de deelnemer."
    - id: distributedTransactionIdentifier
      type: System.Guid
      description: "De id voor de transactie die wordt gebruikt door de gedistribueerde transactiebeheerder."
  overload: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Haalt een <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> met de gegevens die nodig zijn voor het serialiseren van deze transactie."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "De <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> te vullen met gegevens."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Het doel (Zie <xref:System.Runtime.Serialization.StreamingContext>) voor deze serialisatie.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionCompleted
  id: TransactionCompleted
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
  type: Event
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee wordt aangegeven dat de transactie is voltooid."
  remarks: "U kunt registreren voor deze gebeurtenis in plaats van een vluchtige aanmelding met ophalen van informatie over de uitkomst voor transacties. De parameter doorgegeven aan de <xref:System.Transactions.TransactionCompletedEventHandler>gemachtigde is een <xref:System.Transactions.Transaction>exemplaar.</xref:System.Transactions.Transaction> </xref:System.Transactions.TransactionCompletedEventHandler> U kunt vervolgens een query de <xref:System.Transactions.Transaction.TransactionInformation%2A>eigenschap van het specifieke exemplaar om een exemplaar van <xref:System.Transactions.TransactionInformation>, waarvan <xref:System.Transactions.TransactionInformation.Status%2A>eigenschap bevat de status van een transactie met ofwel de <xref:System.Transactions.TransactionStatus>of <xref:System.Transactions.TransactionStatus>waarde.</xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionInformation.Status%2A> </xref:System.Transactions.TransactionInformation> </xref:System.Transactions.Transaction.TransactionInformation%2A>       **Waarschuwing** aanmelden voor deze gebeurtenis een negatieve invloed op de prestaties van de transactie aan is gekoppeld."
  example:
  - "The following sample shows how an application can obtain the outcome of a transaction by subscribing to the TransactionCompleted event.  \n  \n [!code-cs[Tx_Outcome#1](~/add/codesnippet/csharp/e-system.transactions.tr_1.cs)]\n [!code-vb[Tx_Outcome#1](~/add/codesnippet/visualbasic/e-system.transactions.tr_1.vb)]"
  syntax:
    content: public event System.Transactions.TransactionCompletedEventHandler TransactionCompleted;
    return:
      type: System.Transactions.TransactionCompletedEventHandler
      description: "Moet worden toegevoegd."
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Een poging om u te abonneren van deze gebeurtenis op een transactie die is verwijderd."
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionInformation
  id: TransactionInformation
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Als u meer informatie over een transactie wordt opgehaald."
  syntax:
    content: public System.Transactions.TransactionInformation TransactionInformation { get; }
    return:
      type: System.Transactions.TransactionInformation
      description: "Een <xref href=&quot;System.Transactions.TransactionInformation&quot;> </xref> bevat aanvullende informatie over de transactie."
  overload: System.Transactions.Transaction.TransactionInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Transactions.Transaction.Clone
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.Transaction.Current
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
- uid: System.Transactions.DependentTransaction
  parent: System.Transactions
  isExternal: false
  name: DependentTransaction
  nameWithType: DependentTransaction
  fullName: System.Transactions.DependentTransaction
- uid: System.Transactions.DependentCloneOption
  parent: System.Transactions
  isExternal: false
  name: DependentCloneOption
  nameWithType: DependentCloneOption
  fullName: System.Transactions.DependentCloneOption
- uid: System.Transactions.Transaction.Dispose
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
- uid: System.Transactions.EnlistmentOptions
  parent: System.Transactions
  isExternal: false
  name: EnlistmentOptions
  nameWithType: EnlistmentOptions
  fullName: System.Transactions.EnlistmentOptions
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.ISinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: ISinglePhaseNotification
  nameWithType: ISinglePhaseNotification
  fullName: System.Transactions.ISinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Transactions.IPromotableSinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: IPromotableSinglePhaseNotification
  nameWithType: IPromotableSinglePhaseNotification
  fullName: System.Transactions.IPromotableSinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.Equals(System.Object)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
- uid: System.Transactions.Transaction.GetHashCode
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Transactions.Transaction.GetPromotedToken
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.Transaction.IsolationLevel
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.PromoterType
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Transactions.Transaction.TransactionCompleted
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
- uid: System.Transactions.TransactionCompletedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionCompletedEventHandler
  nameWithType: TransactionCompletedEventHandler
  fullName: System.Transactions.TransactionCompletedEventHandler
- uid: System.Transactions.Transaction.TransactionInformation
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
- uid: System.Transactions.TransactionInformation
  parent: System.Transactions
  isExternal: false
  name: TransactionInformation
  nameWithType: TransactionInformation
  fullName: System.Transactions.TransactionInformation
- uid: System.Transactions.Transaction.Clone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone
  nameWithType: Transaction.Clone
- uid: System.Transactions.Transaction.Current*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
- uid: System.Transactions.Transaction.DependentClone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone
  nameWithType: Transaction.DependentClone
- uid: System.Transactions.Transaction.Dispose*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose
  nameWithType: Transaction.Dispose
- uid: System.Transactions.Transaction.EnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable
  nameWithType: Transaction.EnlistDurable
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase
  nameWithType: Transaction.EnlistPromotableSinglePhase
- uid: System.Transactions.Transaction.EnlistVolatile*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile
  nameWithType: Transaction.EnlistVolatile
- uid: System.Transactions.Transaction.Equals*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals
  nameWithType: Transaction.Equals
- uid: System.Transactions.Transaction.GetHashCode*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode
  nameWithType: Transaction.GetHashCode
- uid: System.Transactions.Transaction.GetPromotedToken*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken
  nameWithType: Transaction.GetPromotedToken
- uid: System.Transactions.Transaction.IsolationLevel*
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality
  nameWithType: Transaction.op_Equality
- uid: System.Transactions.Transaction.op_Inequality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality
  nameWithType: Transaction.op_Inequality
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable
  nameWithType: Transaction.PromoteAndEnlistDurable
- uid: System.Transactions.Transaction.PromoterType*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback
  nameWithType: Transaction.Rollback
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier
  nameWithType: Transaction.SetDistributedTransactionIdentifier
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Transactions.Transaction.TransactionInformation*
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
