### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslTransform
  id: XslTransform
  children:
  - System.Xml.Xsl.XslTransform.#ctor
  - System.Xml.Xsl.XslTransform.Load(System.String)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  - System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.XmlResolver
  langs:
  - csharp
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
  type: Class
  summary: "Transformeert XML-gegevens met een Extensible Stylesheet Language voor opmaakmodel transformaties (XSLT)."
  remarks: "> [!NOTE]> De klasse XslTransform is verouderd in de Microsoft .NET Framework versie 2.0. De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       XslTransform ondersteunt de XSLT-1.0-syntaxis. Het XSLT-opmaakmodel moet de naamruimte gebruiken `http://www.w3.org/1999/XSL/Transform`.       Extra argumenten kunnen ook worden toegevoegd aan het opmaakmodel met behulp van de <xref:System.Xml.Xsl.XsltArgumentList>klasse.</xref:System.Xml.Xsl.XsltArgumentList> Deze klasse bevat invoerparameters voor de style blad en extensie-objecten die kunnen worden aangeroepen vanuit het opmaakmodel.       Voor het transformeren van XML-gegevens: 1.  Maak een XslTransform-object.      2.  Gebruik de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode voor het laden van het opmaakmodel voor de transformatie.</xref:System.Xml.Xsl.XslTransform.Load%2A> Deze methode heeft verschillende overloads en kunnen laden een stijl blad met een <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, of een URL met de locatie van het bestand.</xref:System.Xml.XPath.IXPathNavigable> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlReader>      3.  Gebruik de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode voor het transformeren van de XML-gegevens.</xref:System.Xml.Xsl.XslTransform.Transform%2A> Deze methode heeft verschillende overloads en verschillende soorten invoer en uitvoer kan verwerken. U kunt ook opgeven een <xref:System.Xml.Xsl.XsltArgumentList>met extra argumenten gebruiken als invoer tijdens de transformatie.</xref:System.Xml.Xsl.XsltArgumentList>       **Beveiligingsoverwegingen** bij het maken van een toepassing die gebruikmaakt van de klasse XslTransform, moet u rekening houden met de volgende items en hun gevolgen:-extensie-objecten zijn standaard ingeschakeld. Als een <xref:System.Xml.Xsl.XsltArgumentList>object met de extensie-objecten wordt doorgegeven aan de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode, ze worden benut.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.Xsl.XsltArgumentList>      -XSLT-opmaakmodellen kunnen verwijzingen naar andere bestanden en ingesloten scriptblokken bevatten. Een kwaadwillende gebruiker dit door op te geven u met gegevens kan misbruiken of StyleSheets die bij uitvoering, wordt het systeem verwerkt totdat de computer nog maar weinig resources.      -XSLT toepassingen die worden uitgevoerd in een gemengde betrouwbare omgeving kunnen leiden tot adresvervalsing (spoofing) stijl blad. Bijvoorbeeld een kwaadwillende gebruiker kan een object met een schadelijke opmaakmodel geladen en aanlevert naar een andere gebruiker die vervolgens roept de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode en de transformatie die wordt uitgevoerd.</xref:System.Xml.Xsl.XslTransform.Transform%2A>       Deze beveiligingsproblemen kunnen worden verminderd door accepteert geen XslTransform objecten, XSLT-opmaakmodellen of XML-brongegevens van niet-vertrouwde bronnen.       **Ondersteuning voor scripts** deze klasse biedt ondersteuning voor ingesloten scripting met behulp van de `msxsl:script` element.       Het bewijs van het opmaakmodel bepaalt welke machtigingen zijn opgegeven voor ingesloten scripts op versie 1.1 van .NET Framework.      -Als het opmaakmodel is geladen uit een Uniform Resource Identifier (URI), wordt de URI wordt gebruikt voor het maken van de gegevens. Deze bewijs omvat de URI samen met de site en de zone.      -Als het opmaakmodel is geladen met behulp van een andere bron, kunt u bewijs opgeven door een <xref:System.Security.Policy.Evidence?displayProperty=fullName>object toe aan de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence?displayProperty=fullName> Anders is de script-assembly volledig vertrouwen.       Semi vertrouwde aanroepfuncties: `UnmanagedCode` machtiging is vereist voor het compileren van het ingesloten script. `ControlEvidence`machtiging is vereist voor het bieden <xref:System.Security.Policy.Evidence>naar de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence> Een <xref:System.Security.SecurityException>gegenereerd als de aanroeper niet de vereiste machtigingen beschikt.</xref:System.Security.SecurityException> Zie <xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>en <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>voor meer informatie.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>       De `msxsl:script` element heeft de volgende vereisten: - de `msxsl:script` element behoort tot de `urn:schemas-microsoft-com:xslt` naamruimte. Het opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.      -De `msxsl:script` element kunt bevatten een `language` kenmerk waarmee de scripttaal te gebruiken. De waarde van de `language` kenmerk moet een van de volgende opties: C#, CSharp, VB, VisualBasic, JScript of JavaScript. Omdat de naam van de taal is niet hoofdlettergevoelig, JavaScript en javascript zijn beide geldig. Als een `language` kenmerk niet is opgegeven, wordt standaard JScript.      -De `msxsl:script` element moet bevatten een `implements-prefix` kenmerk dat het voorvoegsel voor de naamruimte die is gekoppeld aan het scriptblok bevat. Deze naamruimte moet worden gedefinieerd in het opmaakmodel. Een opmaakmodel kan bestaan uit meerdere scriptblokken die zijn gegroepeerd op naamruimte. Er is geen scriptblokken met meerdere talen binnen dezelfde naamruimte. Scriptblokken kunnen aanroepen van een functie die is gedefinieerd in een ander scriptblok opgegeven in de scriptblokken bevinden zich in dezelfde naamruimte. De inhoud van een scriptblok zijn geparseerd volgens de regels en de syntaxis van de scripttaal (geleverd door de `language` kenmerk). Bijvoorbeeld, als u had een C#-scriptblok, opmerkingen zou worden voorafgegaan door de `//` tekens. De opmerkingen moeten geldige XML-inhoud.       `Note`Het is raadzaam dat u scriptblokken in een CDATA-sectie verpakt.      ```   <msxsl:script implements-prefix=&quot;xy&quot; language=&quot;C#&quot;>     <![CDATA[     // Add code here.     ]]>   </msxsl:script>   ```Functies kunnen worden gedeclareerd binnen de `msxsl:script` element. De volgende tabel toont de naamruimten die standaard worden ondersteund.      | Ondersteunde naamruimten | Beschrijving |   |--------------------------|-----------------|   | `System`| Systeemklassen. |   | `System.Collection`| Verzameling klassen. |   | `System.Text`| Verwerking van de klassen van tekst. |   | `System.Xml`| Core-XML-klassen. |   | `System.Xml.Xsl`| XSLT-klassen. |   | `System.Xml.XPath`| XML Path-taal (XPath)-klassen. |       De opgegeven argumenten en retourwaarden zijn gedefinieerd door de scriptfuncties moet een van de hieronder vermelde World Wide Web Consortium (W3C)-typen. De volgende tabel ziet u de toewijzing tussen de W3C-typen XPath of XSLT-, en de bijbehorende .NET Framework-klassen.      | W3C-Type | Gelijkwaardige .NET-klasse |   |--------------|---------------------------|   | Tekenreeks (XPath) | `System.String`|   | Booleaanse waarde (XPath) | `System.Boolean`|   | Nummer (XPath) | `System.Double`|   | Leiden Tree Fragment (XSLT) | `System.Xml.XPath.XPathNavigator`|   | Knooppunt ingesteld (XPath) | `System.Xml.XPath.XPathNodeIterator`|       Als de scriptfunctie maakt gebruik van een van de volgende numerieke typen: Int16, UInt16, Int32, UInt32, Int64, UInt64, één of decimaal, deze typen worden gedwongen naar verdubbelt, die wordt toegewezen aan het nummer van het type W3C XPath.       Een uitzondering gegenereerd wanneer een functie wordt aangeroepen die het resultaat van het argument niet converteren naar een van de vereiste typen.      > [!NOTE]  >   `msxsl:script` en `msxsl:node-list` zijn de enige functies van de `urn:schemas-microsoft-com:xslt` naamruimte die worden ondersteund door de klasse XslTransform.       XslTransform biedt de mogelijkheid gebruikmaken van algemene language runtime (CLR)-code als een mechanisme voor uitbreiding. Dit wordt bereikt door een instantie van een klasse wordt doorgegeven aan de klasse XslTransform en de bijbehorende openbare methoden binnen een XSLT-opmaakmodel aan te roepen. Methoden die zijn gedefinieerd met de `params` sleutelwoord waarmee u een niet-opgegeven aantal parameters worden doorgegeven, werken niet goed in dit scenario. Zie [params](~/add/includes/ajax-current-ext-md.md) voor meer informatie.       Zie voor meer informatie [XSLT-transformaties met de klasse XslTransform](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example transforms the specified XML document and outputs the result to the console.  \n  \n [!code-vb[Classic WebData XslTransform Example#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltran_1.vb)]\n [!code-cs[Classic WebData XslTransform Example#1](~/add/codesnippet/csharp/t-system.xml.xsl.xsltran_1.cs)]"
  syntax:
    content: >-
      [System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")]

      public sealed class XslTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref> klasse."
  syntax:
    content: public XslTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laadt het XSLT-opmaakmodel die is opgegeven door een URL."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl=``http://www.w3.org/1999/XSL/Transform`.       Deze methode wordt geladen voor de XSLT-opmaakmodel, inclusief eventuele opmaakmodellen waarnaar wordt verwezen `xsl:include` en `xsl:import` elementen. Externe bronnen worden omgezet met behulp van een <xref:System.Xml.XmlUrlResolver>met geen gebruikersgegevens.</xref:System.Xml.XmlUrlResolver> Als de stijl die wordt bladen zich op een netwerkbron waarvoor verificatie nodig is bevinden, gebruikt u de overbelasting waarvoor een <xref:System.Xml.XmlResolver>als een van de argumenten en geef een <xref:System.Xml.XmlResolver>met de vereiste referenties.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Als het opmaakmodel ingesloten scripting bevat, wordt het script gecompileerd naar een assembly. De URI van het opmaakmodel wordt gebruikt voor het maken van bewijs die wordt toegepast op de assembly. Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Als de aanroeper geen heeft `UnmanagedCode` machtiging, het ingesloten script is niet gecompileerd en een <xref:System.Security.SecurityException>gegenereerd.</xref:System.Security.SecurityException> Zie <xref:System.Security.Permissions.SecurityPermission>en <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>voor meer informatie.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_0_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_0_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_0_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_3.xsl)]"
  syntax:
    content: public void Load (string url);
    parameters:
    - id: url
      type: System.String
      description: "De URL waarmee de XSLT-opmaakmodel geladen."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "De geladen bron is niet een geldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel bevat ingesloten script en de aanroeper heeft geen <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Het XSLT-opmaakmodel opgenomen in de <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> wordt geladen"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Deze methode wordt geladen voor de XSLT-opmaakmodel, inclusief eventuele opmaakmodellen waarnaar wordt verwezen `xsl:include` en `xsl:import` elementen. Externe bronnen worden omgezet met behulp van een <xref:System.Xml.XmlUrlResolver>met geen gebruikersgegevens.</xref:System.Xml.XmlUrlResolver> Als de stijl die wordt bladen zich op een netwerkbron waarvoor verificatie nodig is bevinden, gebruikt u de overbelasting waarvoor een <xref:System.Xml.XmlResolver>als een van de argumenten en geef een <xref:System.Xml.XmlResolver>met de vereiste referenties.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Het opmaakmodel wordt geladen vanaf het huidige knooppunt van de <xref:System.Xml.XmlReader>via alle onderliggende.</xref:System.Xml.XmlReader> Hiermee kunt u een deel van een document gebruiken als het opmaakmodel. Nadat de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode retourneert, de <xref:System.Xml.XmlReader>na het einde van het opmaakmodel dat op het volgende knooppunt is geplaatst.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslTransform.Load%2A> Als het einde van het document is bereikt, de <xref:System.Xml.XmlReader>geplaatst aan het einde van het bestand (EOF).%12%2%3%4%5%6%7%8%9%10%0).</xref:System.Xml.XmlReader>       Als het opmaakmodel de bevat entiteiten, moet u een <xref:System.Xml.XmlReader>die entiteiten kunnen omzetten (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> retourneert `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> In dit geval een <xref:System.Xml.XmlValidatingReader>kan worden gebruikt.</xref:System.Xml.XmlValidatingReader>       Als het opmaakmodel ingesloten scripting bevat, wordt het script gecompileerd naar een assembly. De assembly heeft volledig vertrouwen. De aanbevolen procedure is om te bieden met behulp van bewijs de <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>methode.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Als de aanroeper geen heeft `UnmanagedCode` machtiging, het ingesloten script is niet gecompileerd en een <xref:System.Security.SecurityException>gegenereerd.</xref:System.Security.SecurityException> Zie <xref:System.Security.Permissions.SecurityPermission>en <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>voor meer informatie.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML file sorting all the books by title.  \n  \n [!code-cs[XslTransform.Load3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_1_1.cs)]\n [!code-cpp[XslTransform.Load3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_1_1.cpp)]\n [!code-vb[XslTransform.Load3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_1_1.vb)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load3#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_2.xml)]  \n  \n `titles.xsl`  \n  \n [!code-xml[XslTransform.Load3#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_3.xsl)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>-object dat het XSLT-opmaakmodel bevat.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Het huidige knooppunt voldoet niet aan een ongeldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel bevat ingesloten scripts en de aanroeper heeft geen <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laadt het XSLT-opmaakmodel opgenomen in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Deze methode wordt geladen voor de XSLT-opmaakmodel, inclusief eventuele opmaakmodellen waarnaar wordt verwezen `xsl:include` en `xsl:import` elementen. Externe bronnen worden omgezet met behulp van een <xref:System.Xml.XmlUrlResolver>met geen gebruikersgegevens.</xref:System.Xml.XmlUrlResolver> Als de stijl die wordt bladen zich op een netwerkbron waarvoor verificatie nodig is bevinden, gebruikt u de overbelasting waarvoor een <xref:System.Xml.XmlResolver>als een van de argumenten en geef een <xref:System.Xml.XmlResolver>met de vereiste referenties.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Als het opmaakmodel ingesloten scripting bevat, wordt het script gecompileerd naar een assembly. De assembly heeft volledig vertrouwen. De aanbevolen procedure is om te bieden met behulp van bewijs de <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>methode.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Als de aanroeper geen heeft `UnmanagedCode` machtiging, het ingesloten script is niet gecompileerd en een <xref:System.Security.SecurityException>gegenereerd.</xref:System.Security.SecurityException> Zie <xref:System.Security.Permissions.SecurityPermission>en <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>voor meer informatie.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met het XSLT-opmaakmodel."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "De geladen bron is niet een geldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel bevat ingesloten scripts en de aanroeper heeft geen <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laadt het XSLT-opmaakmodel opgenomen in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Deze methode wordt geladen voor de XSLT-opmaakmodel, inclusief eventuele opmaakmodellen waarnaar wordt verwezen `xsl:include` en `xsl:import` elementen. Externe bronnen worden omgezet met behulp van een <xref:System.Xml.XmlUrlResolver>met geen gebruikersgegevens.</xref:System.Xml.XmlUrlResolver> Als de stijl die wordt bladen zich op een netwerkbron waarvoor verificatie nodig is bevinden, gebruikt u de overbelasting waarvoor een <xref:System.Xml.XmlResolver>als een van de argumenten en geef een <xref:System.Xml.XmlResolver>met de vereiste referenties.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Het opmaakmodel is geladen vanaf de huidige positie van de <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Voor het gebruik van slechts een deel van het document geladen als het opmaakmodel, gaat u naar het knooppunt dat overeenkomt met het begin van het opmaakmodel. Nadat de Load-methode retourneert, de <xref:System.Xml.XPath.XPathNavigator>bevindt zich aan het begin van het opmaakmodel (op de `xsl:style sheet` knooppunt).</xref:System.Xml.XPath.XPathNavigator>       Als het opmaakmodel ingesloten scripting bevat, wordt het script gecompileerd naar een assembly. De assembly heeft volledig vertrouwen. De aanbevolen procedure is om te bieden met behulp van bewijs de <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>methode.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Als de aanroeper geen heeft `UnmanagedCode` machtiging, het ingesloten script is niet gecompileerd en een <xref:System.Security.SecurityException>gegenereerd.</xref:System.Security.SecurityException> Zie <xref:System.Security.Permissions.SecurityPermission>en <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>voor meer informatie.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> -object dat het XSLT-opmaakmodel bevat."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Het huidige knooppunt voldoet niet aan een ongeldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel bevat ingesloten scripts en de aanroeper heeft geen <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laadt het XSLT-opmaakmodel die is opgegeven door een URL."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Als het opmaakmodel ingesloten scripting bevat, wordt het script gecompileerd naar een assembly. De URI van het opmaakmodel wordt gebruikt voor het maken van bewijs die wordt toegepast op de assembly. Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Als de aanroeper geen heeft `UnmanagedCode` machtiging, het ingesloten script is niet gecompileerd en een <xref:System.Security.SecurityException>gegenereerd.</xref:System.Security.SecurityException> Zie <xref:System.Security.Permissions.SecurityPermission>en <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>voor meer informatie.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet. An <xref:System.Xml.XmlUrlResolver> is passed to the Load method which sets the credentials necessary to access the network resource for the included style sheet.  \n  \n [!code-vb[XslTransform.Load2#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_3_1.vb)]\n [!code-cs[XslTransform.Load2#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_3_1.cs)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load2#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_2.xml)]  \n  \n `sort.xsl`  \n  \n [!code-xml[XslTransform.Load2#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_3.xsl)]  \n  \n `includefile.xsl`  \n  \n [!code-xml[XslTransform.Load2#4](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_4.xsl)]"
  syntax:
    content: public void Load (string url, System.Xml.XmlResolver resolver);
    parameters:
    - id: url
      type: System.String
      description: "De URL waarmee de XSLT-opmaakmodel geladen."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruiken om te laden van het opmaakmodel en eventuele stijl bladen waarnaar wordt verwezen in `xsl:import` en `xsl:include` elementen.       Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, een standaard <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> met geen enkele gebruiker referenties worden gebruikt om te openen van het opmaakmodel. De standaardwaarde <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> wordt niet gebruikt voor het omzetten van externe bronnen in het opmaakmodel dus `xsl:import` en `xsl:include` elementen niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen nadat de Load-methode is voltooid."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "De geladen bron is niet een geldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel bevat ingesloten script en de aanroeper heeft geen <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Het XSLT-opmaakmodel opgenomen in de <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> wordt geladen"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Deze methode wordt geladen voor de XSLT-opmaakmodel, inclusief eventuele opmaakmodellen waarnaar wordt verwezen `xsl:include` en `xsl:import` elementen. Het opmaakmodel wordt geladen vanaf het huidige knooppunt van de <xref:System.Xml.XmlReader>via alle onderliggende.</xref:System.Xml.XmlReader> Hiermee kunt u een deel van een document gebruiken als het opmaakmodel.       Nadat de Load-methode retourneert, wordt de <xref:System.Xml.XmlReader>na het einde van het opmaakmodel dat op het volgende knooppunt is geplaatst.</xref:System.Xml.XmlReader> Als het einde van het document is bereikt, de <xref:System.Xml.XmlReader>geplaatst aan het einde van het bestand (EOF).%12%2%3%4%5%6%7%8%9%10%0).</xref:System.Xml.XmlReader>       Als het opmaakmodel de bevat entiteiten, moet u een <xref:System.Xml.XmlReader>die entiteiten kunnen omzetten (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> retourneert `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> In dit geval een <xref:System.Xml.XmlValidatingReader>kan worden gebruikt.</xref:System.Xml.XmlValidatingReader>       Als het opmaakmodel ingesloten scripting bevat, wordt het script gecompileerd naar een assembly. De assembly heeft volledig vertrouwen. De aanbevolen procedure is om te bieden met behulp van bewijs de <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>methode.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts Zie Q316755 in de Microsoft Knowledge Base-artikel op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Als de aanroeper geen heeft `UnmanagedCode` machtiging, het ingesloten script is niet gecompileerd en een <xref:System.Security.SecurityException>gegenereerd.</xref:System.Security.SecurityException> Zie <xref:System.Security.Permissions.SecurityPermission>en <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>voor meer informatie.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>-object dat het XSLT-opmaakmodel bevat.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het laden van opmaakmodellen waarnaar wordt verwezen in `xsl:import` en `xsl:include` elementen. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externe bronnen niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen nadat de Load-methode is voltooid."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Het huidige knooppunt voldoet niet aan een ongeldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel bevat ingesloten scripts en de aanroeper heeft geen <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laadt het XSLT-opmaakmodel opgenomen in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Als het opmaakmodel ingesloten scripting bevat, wordt het script gecompileerd naar een assembly. De assembly heeft volledig vertrouwen. De aanbevolen procedure is om te bieden met behulp van bewijs de <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>methode.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Als de aanroeper geen heeft `UnmanagedCode` machtiging, het ingesloten script is niet gecompileerd en een <xref:System.Security.SecurityException>gegenereerd.</xref:System.Security.SecurityException> Zie <xref:System.Security.Permissions.SecurityPermission>en <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>voor meer informatie.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met het XSLT-opmaakmodel."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het laden van opmaakmodellen waarnaar wordt verwezen in `xsl:import` en `xsl:include` elementen. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externe bronnen niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen na de <xref:System.Xml.Xsl.XslTransform.Load*>methode is voltooid.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "De geladen bron is niet een geldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel bevat ingesloten scripts en de aanroeper heeft geen <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laadt het XSLT-opmaakmodel opgenomen in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Het opmaakmodel is geladen vanaf de huidige positie van de <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Als u wilt gebruiken een deel van het document geladen als het opmaakmodel, gaat u naar het knooppunt dat overeenkomt met het begin van het opmaakmodel. Nadat de Load-methode retourneert, de <xref:System.Xml.XPath.XPathNavigator>bevindt zich aan het begin van het opmaakmodel (op de `xsl:style sheet` knooppunt).</xref:System.Xml.XPath.XPathNavigator>       Als het opmaakmodel ingesloten scripting bevat, wordt het script gecompileerd naar een assembly. De assembly heeft volledig vertrouwen. De aanbevolen procedure is om te bewijzen met behulp van de <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Als de aanroeper geen heeft `UnmanagedCode` machtiging, het ingesloten script is niet gecompileerd en een <xref:System.Security.SecurityException>gegenereerd.</xref:System.Security.SecurityException> Zie <xref:System.Security.Permissions.SecurityPermission>en <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>voor meer informatie.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> -object dat het XSLT-opmaakmodel bevat."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het laden van opmaakmodellen waarnaar wordt verwezen in `xsl:import` en `xsl:include` elementen. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externe bronnen niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen na de <xref:System.Xml.Xsl.XslTransform.Load*>methode is voltooid.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Het huidige knooppunt voldoet niet aan een ongeldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel bevat ingesloten scripts en de aanroeper heeft geen <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Het XSLT-opmaakmodel opgenomen in de <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> wordt geladen Deze methode kunt u de machtigingen van het opmaakmodel beperken door te geven bewijs."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Deze methode wordt geladen voor de XSLT-opmaakmodel, inclusief eventuele opmaakmodellen waarnaar wordt verwezen `xsl:include` en `xsl:import` elementen. Het opmaakmodel wordt geladen vanaf het huidige knooppunt van de <xref:System.Xml.XmlReader>via alle onderliggende.</xref:System.Xml.XmlReader> Hiermee kunt u een deel van een document gebruiken als het opmaakmodel.       Nadat de Load-methode retourneert, wordt de <xref:System.Xml.XmlReader>na het einde van het opmaakmodel dat op het volgende knooppunt is geplaatst.</xref:System.Xml.XmlReader> Als het einde van het document is bereikt, de <xref:System.Xml.XmlReader>geplaatst aan het einde van het bestand (EOF).%12%2%3%4%5%6%7%8%9%10%0).</xref:System.Xml.XmlReader>       Als het opmaakmodel de bevat entiteiten, moet u een <xref:System.Xml.XmlReader>die entiteiten kunnen omzetten (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> retourneert `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> In dit geval een <xref:System.Xml.XmlValidatingReader>kan worden gebruikt.</xref:System.Xml.XmlValidatingReader>       Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Er zijn verschillende manieren om te bewijzen. De volgende tabel beschrijft wat voor soort bewijs te voorzien in algemene gebruikersscenario&quot;s."
  example:
  - "The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>. The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=fullName> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.  \n  \n [!code-vb[XslTransform.Load4#1](~/add/codesnippet/visualbasic/a033551f-1c0f-4994-8153-_1.vb)]\n [!code-cs[XslTransform.Load4#1](~/add/codesnippet/csharp/a033551f-1c0f-4994-8153-_1.cs)]\n [!code-cpp[XslTransform.Load4#1](~/add/codesnippet/cpp/a033551f-1c0f-4994-8153-_1.cpp)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>object met het opmaakmodel geladen.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het laden van opmaakmodellen waarnaar wordt verwezen in `xsl:import` en `xsl:include` elementen. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externe bronnen niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen na de <xref:System.Xml.Xsl.XslTransform.Load*>methode is voltooid.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> ingesteld voor de assembly die is gegenereerd voor de scriptblok is opgegeven in het XSLT-opmaakmodel.       Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, script codeblokken worden niet verwerkt, het XSLT-bestand `document()` functie wordt niet ondersteund en uitbreiding van bevoegdheden objecten zijn niet toegestaan.       De aanroeper moet hebben <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> machtiging te leveren bewijs van de script-assembly. Semi vertrouwde aanroepfuncties deze parameter kunnen worden ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Het huidige knooppunt voldoet niet aan een ongeldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel dat waarnaar wordt verwezen is een functie die niet is toegestaan door de bewijsmateriaal nodig.       De aanroeper probeert aantonen en heeft geen <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laadt het XSLT-opmaakmodel opgenomen in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>. Deze methode kunt u de machtigingen van het opmaakmodel beperken door te geven bewijs."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Er zijn verschillende manieren om te bewijzen. De volgende tabel beschrijft wat voor soort bewijs te voorzien in algemene gebruikersscenario&quot;s."
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met het XSLT-opmaakmodel."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het laden van opmaakmodellen waarnaar wordt verwezen in `xsl:import` en `xsl:include` elementen. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externe bronnen niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen na de <xref:System.Xml.Xsl.XslTransform.Load*>methode is voltooid.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> ingesteld voor de assembly die is gegenereerd voor de scriptblok is opgegeven in het XSLT-opmaakmodel.       Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, script codeblokken worden niet verwerkt, het XSLT-bestand `document()` functie wordt niet ondersteund en uitbreiding van bevoegdheden objecten zijn niet toegestaan.       De aanroeper moet hebben <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> machtiging te leveren bewijs van de script-assembly. Semi vertrouwde aanroepfuncties deze parameter kunnen worden ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "De geladen bron is niet een geldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel dat waarnaar wordt verwezen is een functie die niet is toegestaan door de bewijsmateriaal nodig.       De aanroeper probeert aantonen en heeft geen <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laadt het XSLT-opmaakmodel opgenomen in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>. Deze methode kunt u de machtigingen van het opmaakmodel beperken door te geven bewijs."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Het opmaakmodel is geladen vanaf de huidige positie van de <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Als u wilt gebruiken een deel van het document geladen als het opmaakmodel, gaat u naar het knooppunt dat overeenkomt met het begin van het opmaakmodel. Nadat de Load-methode retourneert, de <xref:System.Xml.XPath.XPathNavigator>bevindt zich aan het begin van het opmaakmodel (op de `xsl:style sheet` knooppunt).</xref:System.Xml.XPath.XPathNavigator>       Voor problemen met de <xref:System.Xml.Xsl.XslTransform.Load%2A>methode en opmaakmodellen met ingesloten scripts, Zie het artikel Q316755 in de Microsoft Knowledge Base op http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Er zijn verschillende manieren om te bewijzen. De volgende tabel beschrijft wat voor soort bewijs te voorzien in algemene gebruikersscenario&quot;s."
  example:
  - "The following example performs an XSLT transformation using a style sheet from an outside source. Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.  \n  \n [!code-cs[XslTransform.Load5#1](~/add/codesnippet/csharp/3ff68c6b-cad3-409a-909a-_1.cs)]\n [!code-vb[XslTransform.Load5#1](~/add/codesnippet/visualbasic/3ff68c6b-cad3-409a-909a-_1.vb)]"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> object met het opmaakmodel geladen."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het laden van opmaakmodellen waarnaar wordt verwezen in `xsl:import` en `xsl:include` elementen. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externe bronnen niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen na de <xref:System.Xml.Xsl.XslTransform.Load*>methode is voltooid.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> ingesteld voor de assembly die is gegenereerd voor de scriptblok is opgegeven in het XSLT-opmaakmodel.       Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, script codeblokken worden niet verwerkt, het XSLT-bestand `document()` functie wordt niet ondersteund en uitbreiding van bevoegdheden objecten zijn niet toegestaan.       De aanroeper moet hebben <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> machtiging te leveren bewijs van de script-assembly. Semi vertrouwde aanroepfuncties deze parameter kunnen worden ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Het huidige knooppunt voldoet niet aan een ongeldig opmaakmodel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Het opmaakmodel dat waarnaar wordt verwezen is een functie die niet is toegestaan door de bewijsmateriaal nodig.       De aanroeper probeert aantonen en heeft geen <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> machtiging."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in het bestand voor invoer en uitvoer van het resultaat dat een bestand voor uitvoer."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Deze methode is verouderd in versie 1.1 van .NET Framework. De instelling van de <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>eigenschap bepaalt hoe de XSLT `document()` functie is opgelost.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> De aanbevolen procedure is met de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode die een <xref:System.Xml.XmlResolver>object als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  example:
  - "The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.  \n  \n [!code-cs[XslTransform.Transform3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_2_1.cs)]\n [!code-cpp[XslTransform.Transform3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_2_1.cpp)]\n [!code-vb[XslTransform.Transform3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_2_1.vb)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_3.xsl)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile);
    parameters:
    - id: inputfile
      type: System.String
      description: "De URL van het brondocument worden getransformeerd."
    - id: outputfile
      type: System.String
      description: "De URL van het uitvoerbestand."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Deze methode is nu verouderd. De instelling van de <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>eigenschap bepaalt hoe de XSLT `document()` functie is opgelost.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> De aanbevolen procedure is met de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode die een <xref:System.Xml.XmlResolver>object als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.Xml.XmlReader>(de `xsl:output` element wordt genegeerd).</xref:System.Xml.XmlReader> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor meer informatie.       Deze methode kunt u een asynchrone transformatie van de brondocument.       Transformaties toepassen op het document als geheel. Met andere woorden, als u in een knooppunt dan het hoofdknooppunt van het document doorgeeft, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Voor het transformeren van een knooppunt fragment, moet u een <xref:System.Xml.XmlDocument>met alleen het knooppunt fragment en doorgeven die <xref:System.Xml.XmlDocument>de transformatie-methode.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Het volgende voorbeeld wordt een transformatie op een knooppunt fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```In het voorbeeld wordt de `library.xml` en `print_root.xsl` -bestanden als invoer en uitvoer van de volgende naar de console.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    return:
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>met de resultaten van de transformatie.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De selecties voor de transformatie wordt toegepast op het document als geheel. Met andere woorden, als het huidige knooppunt is ingesteld in de boomstructuur van een knooppunt dan het hoofdknooppunt van het document, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Nadat de transformatie is uitgevoerd, de <xref:System.Xml.XPath.XPathNavigator>blijft in de oorspronkelijke staat.</xref:System.Xml.XPath.XPathNavigator> Dit betekent dat het knooppunt dat huidige voordat het proces transformatie, het huidige knooppunt blijft nadat de transformatie-methode is aangeroepen.       Omdat <xref:System.Xml.XmlReader>alleen-lezen-uitvoer, biedt de `xsl:output` element wordt genegeerd.</xref:System.Xml.XmlReader> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor meer informatie.       Deze methode kunt u een asynchrone transformatie van de brondocument.      > [!NOTE] > Deze methode is verouderd. De instelling van de <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>eigenschap bepaalt hoe de XSLT-functie document() is opgelost.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> De aanbevolen procedure is met de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode die een <xref:System.Xml.XmlResolver>object als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    return:
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>met de resultaten van de transformatie.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  id: Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in het bestand voor invoer en uitvoer van het resultaat dat een bestand voor uitvoer."
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`."
  example:
  - "The following example performs an XSLT transformation and outputs to a file. An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources. See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.  \n  \n [!code-cs[XslTransform.Transform7#1](~/add/codesnippet/csharp/86f1726f-f5ec-4750-8359-_1.cs)]\n [!code-vb[XslTransform.Transform7#1](~/add/codesnippet/visualbasic/86f1726f-f5ec-4750-8359-_1.vb)]\n [!code-cpp[XslTransform.Transform7#1](~/add/codesnippet/cpp/86f1726f-f5ec-4750-8359-_1.cpp)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);
    parameters:
    - id: inputfile
      type: System.String
      description: "De URL van het brondocument worden getransformeerd."
    - id: outputfile
      type: System.String
      description: "De URL van het uitvoerbestand."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van het XSLT-bestand `document()` functie. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de `document()` functie niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen na de <xref:System.Xml.Xsl.XslTransform.Transform*>methode is voltooid.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Deze methode is nu verouderd. De instelling van de <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>eigenschap bepaalt hoe de XSLT `document()` functie is opgelost.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> De aanbevolen procedure is met de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode die een <xref:System.Xml.XmlResolver>object als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel.       Transformaties toepassen op het document als geheel. Met andere woorden, als u in een knooppunt dan het hoofdknooppunt van het document doorgeeft, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Voor het transformeren van een knooppunt fragment, moet u een <xref:System.Xml.XmlDocument>met alleen het knooppunt fragment en doorgeven die <xref:System.Xml.XmlDocument>de transformatie-methode.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Het volgende voorbeeld wordt een transformatie op een knooppunt fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```In het voorbeeld wordt de `library.xml` en `print_root.xsl` -bestanden als invoer en uitvoer van de volgende naar de console.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.IO.Stream
      description: "De stroom die u wilt uitvoeren."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Deze methode is nu verouderd. De instelling van de <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>eigenschap bepaalt hoe de XSLT `document()` functie is opgelost.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> De aanbevolen procedure is met de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode die een <xref:System.Xml.XmlResolver>object als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel.       Het kenmerk codering op een `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor foutopsporingsgegevens waarop `xsl:output` kenmerken worden ondersteund.       Transformaties toepassen op het document als geheel. Met andere woorden, als u in een knooppunt dan het hoofdknooppunt van het document doorgeeft, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Voor het transformeren van een knooppunt fragment, moet u een <xref:System.Xml.XmlDocument>met alleen het knooppunt fragment en doorgeven die <xref:System.Xml.XmlDocument>aan de transformatie-methode.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Het volgende voorbeeld wordt een transformatie op een knooppunt fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```In het voorbeeld wordt de `library.xml` en `print_root.xsl` -bestanden als invoer en uitvoer van de volgende naar de console.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>waarop u wilt uitvoeren.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.Xml.XmlReader>(de `xsl:output` element wordt genegeerd).</xref:System.Xml.XmlReader> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor meer informatie.       Deze methode kunt u een asynchrone transformatie van de brondocument.       Transformaties toepassen op het document als geheel. Met andere woorden, als u in een knooppunt dan het hoofdknooppunt van het document doorgeeft, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Voor het transformeren van een knooppunt fragment, moet u een <xref:System.Xml.XmlDocument>met alleen het knooppunt fragment en doorgeven die <xref:System.Xml.XmlDocument>aan de transformatie-methode.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Het volgende voorbeeld wordt een transformatie op een knooppunt fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```In het voorbeeld wordt de `library.xml` en `print_root.xsl` -bestanden als invoer en uitvoer van de volgende naar de console.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document and outputs the results to an `XmlReader`. An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.  \n  \n [!code-cpp[XslTransform.Transform4#1](~/add/codesnippet/cpp/33389ef1-3a26-4334-acdd-_1.cpp)]\n [!code-cs[XslTransform.Transform4#1](~/add/codesnippet/csharp/33389ef1-3a26-4334-acdd-_1.cs)]\n [!code-vb[XslTransform.Transform4#1](~/add/codesnippet/visualbasic/33389ef1-3a26-4334-acdd-_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van het XSLT-bestand `document()` functie. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de `document()` functie niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen nadat de transformatie-methode is voltooid."
    return:
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>met de resultaten van de transformatie.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Deze methode is nu verouderd. De instelling van de <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>eigenschap bepaalt hoe de XSLT `document()` functie is opgelost.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> De aanbevolen procedure is met de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode die een <xref:System.Xml.XmlResolver>object als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.Xml.XmlWriter>(`xsl:output` wordt genegeerd).</xref:System.Xml.XmlWriter> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor meer informatie.       Transformaties toepassen op het document als geheel. Met andere woorden, als u in een knooppunt dan het hoofdknooppunt van het document doorgeeft, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Voor het transformeren van een knooppunt fragment, moet u een <xref:System.Xml.XmlDocument>met alleen het knooppunt fragment en doorgeven die <xref:System.Xml.XmlDocument>de transformatie-methode.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Het volgende voorbeeld wordt een transformatie op een knooppunt fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```In het voorbeeld wordt de `library.xml` en `print_root.xsl` -bestanden als invoer en uitvoer van de volgende naar de console.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.Xml.XmlWriter
      description: "De <xref:System.Xml.XmlWriter>waarop u wilt uitvoeren.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De selecties voor de transformatie wordt toegepast op het document als geheel. Met andere woorden, als het huidige knooppunt is ingesteld in de boomstructuur van een knooppunt dan het hoofdknooppunt van het document, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Nadat de transformatie is uitgevoerd, de <xref:System.Xml.XPath.XPathNavigator>blijft in de oorspronkelijke staat.</xref:System.Xml.XPath.XPathNavigator> Dit betekent dat het knooppunt dat huidige voordat het proces transformatie, het huidige knooppunt blijft nadat de transformatie-methode is aangeroepen.       Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor foutopsporingsgegevens waarop `xsl:output` kenmerken worden ondersteund.      > [!NOTE] > Deze methode is nu verouderd. De instelling van de <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>eigenschap bepaalt hoe de XSLT `document()` functie is opgelost.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> De aanbevolen procedure is met de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode die een <xref:System.Xml.XmlResolver>object als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.IO.Stream
      description: "De stroom die u wilt uitvoeren."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De selecties voor de transformatie wordt toegepast op het document als geheel. Met andere woorden, als het huidige knooppunt is ingesteld in de boomstructuur van een knooppunt dan het hoofdknooppunt van het document, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Nadat de transformatie wordt uitgevoerd, de <xref:System.Xml.XPath.XPathNavigator>blijft in de oorspronkelijke staat.</xref:System.Xml.XPath.XPathNavigator> Dit betekent dat het knooppunt dat huidige voordat het proces transformatie, het huidige knooppunt blijft nadat de transformatie-methode is aangeroepen.       Het kenmerk codering op een `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor foutopsporingsgegevens waarop `xsl:output` kenmerken worden ondersteund.      > [!NOTE] > Deze methode is nu verouderd. De instelling van de <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>eigenschap bepaalt hoe de XSLT `document()` functie is opgelost.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> De aanbevolen procedure is met de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode die een <xref:System.Xml.XmlResolver>object als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>waarop u wilt uitvoeren.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De selecties voor de transformatie wordt toegepast op het document als geheel. Met andere woorden, als het huidige knooppunt is ingesteld in de boomstructuur van een knooppunt dan het hoofdknooppunt van het document, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Nadat de transformatie is uitgevoerd, de <xref:System.Xml.XPath.XPathNavigator>blijft in de oorspronkelijke staat.</xref:System.Xml.XPath.XPathNavigator> Dit betekent dat het knooppunt dat huidige voordat het proces transformatie, het huidige knooppunt blijft nadat de transformatie-methode is aangeroepen.       Omdat <xref:System.Xml.XmlReader>alleen-lezen-uitvoer, biedt de `xsl:output` element wordt genegeerd.</xref:System.Xml.XmlReader> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor meer informatie.       Deze methode kunt u een asynchrone transformatie van de brondocument."
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van het XSLT-bestand `document()` functie. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de `document()` functie niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen nadat de transformatie-methode is voltooid."
    return:
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>met de resultaten van de transformatie.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met behulp van de opgegeven argumenten en levert het resultaat dat een <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De selecties voor de transformatie wordt toegepast op het document als geheel. Met andere woorden, als het huidige knooppunt is ingesteld in de boomstructuur van een knooppunt dan het hoofdknooppunt van het document, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Nadat de transformatie wordt uitgevoerd, de <xref:System.Xml.XPath.XPathNavigator>blijft in de oorspronkelijke staat.</xref:System.Xml.XPath.XPathNavigator> Dit betekent dat het knooppunt dat huidige voordat het proces transformatie, het huidige knooppunt blijft nadat de transformatie-methode is aangeroepen.       De `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.Xml.XmlWriter>(`xsl:output` wordt genegeerd).</xref:System.Xml.XmlWriter> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor meer informatie.      > [!NOTE] > Deze methode is nu verouderd. De instelling van de <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>eigenschap bepaalt hoe de XSLT `document()` functie is opgelost.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> De aanbevolen procedure is met de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode die een <xref:System.Xml.XmlResolver>object als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.Xml.XmlWriter
      description: "De <xref:System.Xml.XmlWriter>waarop u wilt uitvoeren.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel.       Transformaties toepassen op het document als geheel. Met andere woorden, als u in een knooppunt dan het hoofdknooppunt van het document doorgeeft, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Voor het transformeren van een knooppunt fragment, moet u een <xref:System.Xml.XmlDocument>met alleen het knooppunt fragment en doorgeven die <xref:System.Xml.XmlDocument>de transformatie-methode.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Het volgende voorbeeld wordt een transformatie op een knooppunt fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```In het voorbeeld wordt de `library.xml` en `print_root.xsl` -bestanden als invoer en uitvoer van de volgende naar de console.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example performs a transformation within an ASP.NET page.  \n  \n [!code-vb[XslTransform.Transform5#1](~/add/codesnippet/visualbasic/0aececb0-8968-432a-8b61-_1.aspx)]\n [!code-cs[XslTransform.Transform5#1](~/add/codesnippet/csharp/0aececb0-8968-432a-8b61-_1.aspx)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.IO.Stream
      description: "De stroom die u wilt uitvoeren."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van het XSLT-bestand `document()` functie. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de `document()` functie niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen na de <xref:System.Xml.Xsl.XslTransform.Transform*>methode is voltooid.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel.       Het kenmerk codering op een `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor foutopsporingsgegevens waarop `xsl:output` kenmerken worden ondersteund.       Transformaties toepassen op het document als geheel. Met andere woorden, als u in een knooppunt dan het hoofdknooppunt van het document doorgeeft, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Voor het transformeren van een knooppunt fragment, moet u een <xref:System.Xml.XmlDocument>met alleen het knooppunt fragment en doorgeven die <xref:System.Xml.XmlDocument>de transformatie-methode.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Het volgende voorbeeld wordt een transformatie op een knooppunt fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```In het voorbeeld wordt de `library.xml` en `print_root.xsl` -bestanden als invoer en uitvoer van de volgende naar de console.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML file and outputs an HTML string. The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.  \n  \n [!code-vb[XslTransform.Transform6#1](~/add/codesnippet/visualbasic/f37e0493-6ab0-43d9-9439-_1.vb)]\n [!code-cs[XslTransform.Transform6#1](~/add/codesnippet/csharp/f37e0493-6ab0-43d9-9439-_1.cs)]  \n  \n The example uses the `books.xml` file as input.  \n  \n [!code-xml[XslTransform.Transform6#2](~/add/codesnippet/xml/f37e0493-6ab0-43d9-9439-_2.xml)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>waarop u wilt uitvoeren.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van het XSLT-bestand `document()` functie. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de `document()` functie niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen nadat de transformatie-methode is voltooid."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.Xml.XmlWriter>(`xsl:output` wordt genegeerd).</xref:System.Xml.XmlWriter> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor meer informatie.       Transformaties toepassen op het document als geheel. Met andere woorden, als u in een knooppunt dan het hoofdknooppunt van het document doorgeeft, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Voor het transformeren van een knooppunt fragment, moet u een <xref:System.Xml.XmlDocument>met alleen het knooppunt fragment en doorgeven die <xref:System.Xml.XmlDocument>de transformatie-methode.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Het volgende voorbeeld wordt een transformatie op een knooppunt fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```In het voorbeeld wordt de `library.xml` en `print_root.xsl` -bestanden als invoer en uitvoer van de volgende naar de console.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/e2f436c8-72f8-4045-80f0-_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/e2f436c8-72f8-4045-80f0-_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/e2f436c8-72f8-4045-80f0-_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_3.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "De implementatie van een object de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. In het .NET Framework en dit kan zijn een <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (meestal een <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), of een <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.Xml.XmlWriter
      description: "De <xref:System.Xml.XmlWriter>waarop u wilt uitvoeren.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van het XSLT-bestand `document()` functie. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de `document()` functie niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen nadat de transformatie-methode is voltooid."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De selecties voor de transformatie wordt toegepast op het document als geheel. Met andere woorden, als het huidige knooppunt is ingesteld in de boomstructuur van een knooppunt dan het hoofdknooppunt van het document, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Nadat de transformatie is uitgevoerd, de <xref:System.Xml.XPath.XPathNavigator>blijft in de oorspronkelijke staat.</xref:System.Xml.XPath.XPathNavigator> Dit betekent dat het knooppunt dat huidige voordat het proces transformatie, het huidige knooppunt blijft nadat de transformatie-methode is aangeroepen.       Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor foutopsporingsgegevens waarop `xsl:output` kenmerken worden ondersteund."
  example:
  - "The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table. The example uses the Microsoft SQL Server 2000 Northwind database.  \n  \n [!code-cs[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/csharp/cf85a737-72d0-4c28-b81d-_1.cs)]\n [!code-vb[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/visualbasic/cf85a737-72d0-4c28-b81d-_1.vb)]  \n  \n The example uses the `customers.xsl` file as input.  \n  \n [!code-xml[XmlDataDocument.CreateNavigator#2](~/add/codesnippet/xml/cf85a737-72d0-4c28-b81d-_2.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.IO.Stream
      description: "De stroom die u wilt uitvoeren."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van het XSLT-bestand `document()` functie. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de `document()` functie niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen nadat de transformatie-methode is voltooid."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met behulp van de opgegeven <code> args </code> en levert het resultaat dat een <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De selecties voor de transformatie wordt toegepast op het document als geheel. Met andere woorden, als het huidige knooppunt is ingesteld in de boomstructuur van een knooppunt dan het hoofdknooppunt van het document, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Nadat de transformatie wordt uitgevoerd, de <xref:System.Xml.XPath.XPathNavigator>blijft in de oorspronkelijke staat.</xref:System.Xml.XPath.XPathNavigator> Dit betekent dat het knooppunt dat huidige voordat het proces transformatie, het huidige knooppunt blijft nadat de transformatie-methode is aangeroepen.       Het kenmerk codering op een `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor foutopsporingsgegevens waarop `xsl:output` kenmerken worden ondersteund."
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>waarop u wilt uitvoeren.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van het XSLT-bestand `document()` functie. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de `document()` functie niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen nadat de transformatie-methode is voltooid."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformeert de XML-gegevens in de <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met behulp van de opgegeven argumenten en levert het resultaat dat een <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>de syntaxis van de XSLT-1.0 ondersteunt.</xref:System.Xml.Xsl.XslTransform> Het XSLT-opmaakmodel vergezeld gaan van de naamruimtedeclaratie `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       De `args` worden vergeleken met de `xsl:param` elementen zijn gedefinieerd in het opmaakmodel. De selecties voor de transformatie wordt toegepast op het document als geheel. Met andere woorden, als het huidige knooppunt is ingesteld in de boomstructuur van een knooppunt dan het hoofdknooppunt van het document, voorkomt dit niet dat het proces transformatie toegang tot alle knooppunten in het document geladen. Nadat de transformatie wordt uitgevoerd, de <xref:System.Xml.XPath.XPathNavigator>blijft in de oorspronkelijke staat.</xref:System.Xml.XPath.XPathNavigator> Dit betekent dat het knooppunt dat huidige voordat het proces transformatie, het huidige knooppunt blijft nadat de transformatie-methode is aangeroepen.       De `xsl:output` element wordt niet ondersteund bij het uitvoeren naar een <xref:System.Xml.XmlWriter>(`xsl:output` wordt genegeerd).</xref:System.Xml.XmlWriter> Zie [uitvoer van een XslTransform](~/add/includes/ajax-current-ext-md.md) voor meer informatie."
  example:
  - "The following example loads and edits an XML document before performing an XSLT transform.  \n  \n [!code-vb[XslTransform.Transform2#1](~/add/codesnippet/visualbasic/3e32b237-2708-4620-b957-_1.vb)]\n [!code-cs[XslTransform.Transform2#1](~/add/codesnippet/csharp/3e32b237-2708-4620-b957-_1.cs)]\n [!code-cpp[XslTransform.Transform2#1](~/add/codesnippet/cpp/3e32b237-2708-4620-b957-_1.cpp)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Een <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> met de gegevens worden getransformeerd."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Een <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> met de gekwalificeerde namespace-argumenten gebruikt als invoer voor de transformatie."
    - id: output
      type: System.Xml.XmlWriter
      description: "De <xref:System.Xml.XmlWriter>waarop u wilt uitvoeren.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van het XSLT-bestand `document()` functie. Als dit <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, wordt de `document()` functie niet is opgelost.       De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> is niet in cache opgeslagen nadat de transformatie-methode is voltooid."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een fout opgetreden bij het verwerken van de XSLT-transformatie.       Opmerking: Dit is een wijziging ten opzichte van eerdere versies. Een <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> gegenereerd als u van Microsoft .NET Framework versie 1.1 of lager gebruikmaakt."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  id: XmlResolver
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Stelt de <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> gebruikt voor het omzetten van externe bronnen als de <xref:System.Xml.Xsl.XslTransform.Transform*>methode wordt aangeroepen.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  remarks: "> [!NOTE]> De <xref:System.Xml.Xsl.XslTransform>klasse is verouderd in versie 2.0 van .NET Framework.</xref:System.Xml.Xsl.XslTransform> De <xref:System.Xml.Xsl.XslCompiledTransform>klasse is de nieuwe XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Zie voor meer informatie [met behulp van de klasse XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) en [migreren van de XslTransform klasse](~/add/includes/ajax-current-ext-md.md).       In versie 1.1 van .NET Framework, bepaalt het vertrouwensniveau van de toepassing het standaardgedrag: `Fully trusted code:` standaard <xref:System.Xml.XmlUrlResolver>met geen enkele gebruiker de referenties die wordt gebruikt om op te lossen de `document()` functie.</xref:System.Xml.XmlUrlResolver> Als verificatie is vereist voor toegang tot de externe bron, gebruikt u deze eigenschap om op te geven een <xref:System.Xml.XmlResolver>met de vereiste referenties.</xref:System.Xml.XmlResolver>       `Semi-trusted code:`De eigenschap is ingesteld op `null`, wat betekent dat de `document()` functie niet is opgelost. Omdat volledig vertrouwen is vereist om op te geven een <xref:System.Xml.XmlResolver>, deze eigenschap ook kan niet worden ingesteld.</xref:System.Xml.XmlResolver>       Deze conflictoplosser wordt gebruikt wanneer de XSLT `document()` functie is aangeroepen. Wordt niet gebruikt om op te lossen `xsl:import` en `xsl:include` elementen waarnaar wordt verwezen in het opmaakmodel. Om op te geven een <xref:System.Xml.XmlResolver>gebruiken om op te lossen `xsl:import` en `xsl:include` elementen waarnaar wordt verwezen in het opmaakmodel gebruiken de <xref:System.Xml.Xsl.XslTransform.Load%2A>overbelasting, welke duurt een <xref:System.Xml.XmlResolver>als een van de argumenten.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Xml.XmlResolver>      > [!NOTE] > Deze eigenschap is verouderd in versie 1.1 van .NET Framework. Geven een <xref:System.Xml.XmlResolver>met behulp van de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode is de aanbevolen werkwijze.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver> In dit geval de <xref:System.Xml.XmlResolver>is niet in cache opgeslagen na de <xref:System.Xml.Xsl.XslTransform.Transform%2A>methode is voltooid.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver>"
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "De <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> worden gebruikt bij de transformatie. Indien ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, de XSLT `document()` functie niet is opgelost."
  overload: System.Xml.Xsl.XslTransform.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Xsl.XsltCompileException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltCompileException
  nameWithType: XsltCompileException
  fullName: System.Xml.Xsl.XsltCompileException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Xsl.XslTransform.#ctor
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
- uid: System.Xml.Xsl.XslTransform.#ctor*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform.XslTransform
- uid: System.Xml.Xsl.XslTransform.Load*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load
  nameWithType: XslTransform.Load
- uid: System.Xml.Xsl.XslTransform.Transform*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform
  nameWithType: XslTransform.Transform
- uid: System.Xml.Xsl.XslTransform.XmlResolver*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
