### YamlMime:ManagedReference
items:
- uid: System.Web.HttpRequest
  id: HttpRequest
  children:
  - System.Web.HttpRequest.#ctor(System.String,System.String,System.String)
  - System.Web.HttpRequest.Abort
  - System.Web.HttpRequest.AcceptTypes
  - System.Web.HttpRequest.AnonymousID
  - System.Web.HttpRequest.ApplicationPath
  - System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  - System.Web.HttpRequest.BinaryRead(System.Int32)
  - System.Web.HttpRequest.Browser
  - System.Web.HttpRequest.ClientCertificate
  - System.Web.HttpRequest.ContentEncoding
  - System.Web.HttpRequest.ContentLength
  - System.Web.HttpRequest.ContentType
  - System.Web.HttpRequest.Cookies
  - System.Web.HttpRequest.CurrentExecutionFilePath
  - System.Web.HttpRequest.CurrentExecutionFilePathExtension
  - System.Web.HttpRequest.FilePath
  - System.Web.HttpRequest.Files
  - System.Web.HttpRequest.Filter
  - System.Web.HttpRequest.Form
  - System.Web.HttpRequest.GetBufferedInputStream
  - System.Web.HttpRequest.GetBufferlessInputStream
  - System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)
  - System.Web.HttpRequest.Headers
  - System.Web.HttpRequest.HttpChannelBinding
  - System.Web.HttpRequest.HttpMethod
  - System.Web.HttpRequest.InputStream
  - System.Web.HttpRequest.InsertEntityBody
  - System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpRequest.IsAuthenticated
  - System.Web.HttpRequest.IsLocal
  - System.Web.HttpRequest.IsSecureConnection
  - System.Web.HttpRequest.Item(System.String)
  - System.Web.HttpRequest.LogonUserIdentity
  - System.Web.HttpRequest.MapImageCoordinates(System.String)
  - System.Web.HttpRequest.MapPath(System.String)
  - System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)
  - System.Web.HttpRequest.MapRawImageCoordinates(System.String)
  - System.Web.HttpRequest.Params
  - System.Web.HttpRequest.Path
  - System.Web.HttpRequest.PathInfo
  - System.Web.HttpRequest.PhysicalApplicationPath
  - System.Web.HttpRequest.PhysicalPath
  - System.Web.HttpRequest.QueryString
  - System.Web.HttpRequest.RawUrl
  - System.Web.HttpRequest.ReadEntityBodyMode
  - System.Web.HttpRequest.RequestContext
  - System.Web.HttpRequest.RequestType
  - System.Web.HttpRequest.SaveAs(System.String,System.Boolean)
  - System.Web.HttpRequest.ServerVariables
  - System.Web.HttpRequest.TimedOutToken
  - System.Web.HttpRequest.TlsTokenBindingInfo
  - System.Web.HttpRequest.TotalBytes
  - System.Web.HttpRequest.Unvalidated
  - System.Web.HttpRequest.Url
  - System.Web.HttpRequest.UrlReferrer
  - System.Web.HttpRequest.UserAgent
  - System.Web.HttpRequest.UserHostAddress
  - System.Web.HttpRequest.UserHostName
  - System.Web.HttpRequest.UserLanguages
  - System.Web.HttpRequest.ValidateInput
  langs:
  - csharp
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
  type: Class
  summary: "Hiermee kan ASP.NET lezen van de HTTP-waarden die is verzonden door een client tijdens een webaanvraag."
  remarks: "De methoden en eigenschappen van de klasse HttpRequest beschikbaar worden gesteld via de `Request` eigenschappen van de <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, en <xref:System.Web.UI.UserControl>klassen.</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication>       Voor toegang tot gegevens uit de <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, of <xref:System.Web.HttpRequest.ServerVariables%2A>verzamelingen, die u kunt schrijven `Request[&quot;key&quot;]`, zoals wordt weergegeven in het voorbeeld voor het <xref:System.Web.HttpRequest.QueryString%2A>eigenschap.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest.ServerVariables%2A> </xref:System.Web.HttpRequest.Cookies%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A>      > [!NOTE] > Unicode-ondersteuning voor HttpRequest klasseleden IIS 6.0 of hoger vereist."
  example:
  - "The following examples access the HttpRequest instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.  \n  \n You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections. You can write `Request[\"key\"]`.  \n  \n The first example shows how to retrieve a query string value when loading a page.  \n  \n```c#  \npublic partial class AddToCart : Page  \n{  \n    protected void Page_Load(object sender, EventArgs e)  \n    {  \n        string rawId = Request[\"ProductID\"];  \n        int productId;  \n        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  \n        {  \n            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  \n            {  \n                usersShoppingCart.AddToCart(productId);  \n            }  \n        }  \n        else  \n        {  \n            throw new Exception(\"Tried to call AddToCart.aspx without setting a ProductId.\");  \n        }  \n        Response.Redirect(\"ShoppingCart.aspx\");  \n    }  \n}  \n```  \n  \n```vb  \nPublic Class AddToCart  \n    Inherits Page  \n  \n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  \n        Dim rawId = Request(\"ProductID\")  \n        Dim productId As Integer  \n        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  \n            Using usersShoppingCart As New ShoppingCartActions()  \n                usersShoppingCart.AddToCart(productId)  \n            End Using  \n  \n        Else  \n            Throw New Exception(\"Tried to call AddToCart.aspx without setting a ProductId.\")  \n        End If  \n        Response.Redirect(\"ShoppingCart.aspx\")  \n    End Sub  \nEnd Class  \n```  \n  \n The next example shows how to check if the request is authenticated and retrieve the raw URL.  \n  \n```c#  \npublic partial class RestrictedPage : Page  \n{  \n    protected void Page_Load(object sender, EventArgs e)  \n    {  \n        if (!Request.IsAuthenticated)  \n        {  \n            var rawUrl = Request.RawUrl;  \n            Response.Redirect(\"/Account/Login?ru=\" + Server.HtmlEncode(rawUrl));  \n        }  \n    }  \n}  \n```  \n  \n```vb  \nPublic Class RestrictedPage  \n    Inherits Page  \n  \n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  \n        If Not Request.IsAuthenticated Then  \n            Dim rawUrl = Request.RawUrl  \n            Response.Redirect(\"/Account/Login?ru=\" + Server.HtmlEncode(rawUrl))  \n        End If  \n    End Sub  \nEnd Class  \n```  \n  \n A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkID=191455).  \n  \n This example uses the <xref:System.IO.StreamWriter> class to write the values of several HttpRequest class properties to a file. For properties that are of type string, the values are HTML encoded as they are written to the file. Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#1](~/add/codesnippet/visualbasic/t-system.web.httprequest_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#1](~/add/codesnippet/csharp/t-system.web.httprequest_1.aspx)]"
  syntax:
    content: public sealed class HttpRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpRequest.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: HttpRequest(String,String,String)
  nameWithType: HttpRequest.HttpRequest(String,String,String)
  fullName: System.Web.HttpRequest.HttpRequest(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initialiseert een <xref href=&quot;System.Web.HttpRequest&quot;> </xref> object."
  remarks: "U hoeft niet te maken van uw eigen exemplaar van de <xref:System.Web.HttpRequest>klasse.</xref:System.Web.HttpRequest> De methoden en eigenschappen van de <xref:System.Web.HttpRequest>klasse worden weergegeven via de `Request` eigenschap van de <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, en <xref:System.Web.UI.UserControl>klassen.</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication> </xref:System.Web.HttpRequest>"
  syntax:
    content: public HttpRequest (string filename, string url, string queryString);
    parameters:
    - id: filename
      type: System.String
      description: "De naam van het bestand dat is gekoppeld aan de aanvraag."
    - id: url
      type: System.String
      description: "De informatie met betrekking tot de URL van de huidige aanvraag."
    - id: queryString
      type: System.String
      description: "De volledige queryreeks verzonden met de aanvraag (alles na de`&quot;?&quot;`)."
  overload: System.Web.HttpRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Abort
  id: Abort
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: HttpRequest.Abort()
  fullName: System.Web.HttpRequest.Abort()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Beëindigd op de onderliggende TCP-verbinding, waardoor alle openstaande i/o&quot;s mislukken. U kunt deze methode gebruiken in reactie op een aanval door een schadelijke HTTP-client."
  remarks: "Deze methode is thread-safe. Een willekeurige thread kan aanroepen op elk gewenst moment.       Deze methode kan alleen worden gebruikt in de geïntegreerde modus. Als u deze in de klassieke modus aanroept, wordt een uitzondering opgetreden. Om te bepalen van de pipeline-modus, gebruikt u <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Web.HttpRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.AcceptTypes
  id: AcceptTypes
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: AcceptTypes
  nameWithType: HttpRequest.AcceptTypes
  fullName: System.Web.HttpRequest.AcceptTypes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald accepteren van een string-matrix van de client ondersteund MIME-typen."
  remarks: ''
  example:
  - "The following code example captures the multiple values returned by the AcceptTypes property into an object variable and writes the number and name of each valueto a separate line of HTTP output.  \n  \n [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_0_1.vb)]\n [!code-cs[Classic HttpRequest.AcceptTypes Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_0_1.cs)]"
  syntax:
    content: public string[] AcceptTypes { get; }
    return:
      type: System.String[]
      description: "Een string-matrix van de client ondersteund MIME-typen accepteren."
  overload: System.Web.HttpRequest.AcceptTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.AnonymousID
  id: AnonymousID
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: AnonymousID
  nameWithType: HttpRequest.AnonymousID
  fullName: System.Web.HttpRequest.AnonymousID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt de anonieme id voor de gebruiker, indien aanwezig."
  remarks: "De eigenschap AnonymousID wijst een lange levensduur hebben unieke id voor een niet-geverifieerde gebruiker, die kan worden gebruikt voor de gebruiker bijhouden of profieleigenschappen aan die gebruiker toewijzen zonder het opslaan van gegevens in een `Session` object. Standaard de eigenschap AnonymousID wordt bijgehouden met behulp van een cookie, maar deze kan worden ingesteld op de URI gebruiken wanneer de <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>kenmerk in de configuratiesectie anonieme identificatie is ingesteld op de <xref:System.Web.HttpCookieMode>, <xref:System.Web.HttpCookieMode>, of <xref:System.Web.HttpCookieMode>waarde.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> Als u niet langer beschikbaar is, bijvoorbeeld wanneer een anonieme gebruiker is geverifieerd, moet u expliciet de cookie wissen.       Anonieme identificatie wordt gebruikt wanneer een hoeft te identificeren van de entiteiten die niet worden geverifieerd en autorisatie vereist is. Zie voor meer informatie [anonymousIdentification Element (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/2bd927ef-9057-4703-9c55-4cfb6d7d0929)"
  example:
  - "The following example shows how to use the AnonymousID property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file. This example has two parts:  \n  \n-   A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.  \n  \n-   A Web Forms page.  \n  \n The first part of the code example shows how to set the AnonymousID property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file. The method that is named `AnonymousIdentification_Creating` sets the AnonymousID property when an anonymous ID is created.  \n  \n [!code-cs[System.Web.HttpRequest_AnonymousID#2](~/add/codesnippet/csharp/p-system.web.httprequest_5_1.cs)]\n [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_5_1.vb)]  \n  \n The second part of the code example shows how to display the new AnonymousID that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.  \n  \n [!code-cs[System.Web.HttpRequest_AnonymousID#1](~/add/codesnippet/csharp/p-system.web.httprequest_5_2.aspx)]\n [!code-vb[System.Web.HttpRequest_AnonymousID#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_5_2.aspx)]"
  syntax:
    content: public string AnonymousID { get; }
    return:
      type: System.String
      description: "Een tekenreeks die de huidige anonieme gebruiker-id vertegenwoordigt."
  overload: System.Web.HttpRequest.AnonymousID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ApplicationPath
  id: ApplicationPath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: HttpRequest.ApplicationPath
  fullName: System.Web.HttpRequest.ApplicationPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de ASP.NET-toepassing virtuele toepassing hoofdpad op de server."
  remarks: "Gebruik deze eigenschap in te stellen van een URL ten opzichte van hoofdmap van de toepassing van een pagina of het webbesturingselement gebruiker die zich niet in de hoofdmap. Hiermee kunt pagina&quot;s en gedeelde-besturingselementen die zich op verschillende niveaus van een directory-structuur dezelfde code gebruiken om te koppelen aan bronnen op vaste locaties in de toepassing."
  example:
  - "The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the ApplicationPath property to a text file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class. It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_6_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_6_1.aspx)]  \n  \n The following example uses the ApplicationPath property to programmatically construct a path to a resource that is in a fixed location in the application. The page that references the resource does not have to be located in the same directory as the resource.  \n  \n [!code-cs[System.Web.HttpRequest.ApplicationPath#2](~/add/codesnippet/csharp/p-system.web.httprequest_6_2.aspx)]\n [!code-vb[System.Web.HttpRequest.ApplicationPath#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_6_2.aspx)]  \n  \n If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the ApplicationPath property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image."
  syntax:
    content: public string ApplicationPath { get; }
    return:
      type: System.String
      description: "Het virtuele pad van de huidige toepassing."
  overload: System.Web.HttpRequest.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  id: AppRelativeCurrentExecutionFilePath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: AppRelativeCurrentExecutionFilePath
  nameWithType: HttpRequest.AppRelativeCurrentExecutionFilePath
  fullName: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Het virtuele pad van hoofdmap van de toepassing opgehaald en maakt u het relatieve met behulp van de notatie tilde (~) voor de hoofdmap van de toepassing (zoals in &quot; ~ / page.aspx &quot;)."
  remarks: "Gebruik deze eigenschap URL-informatie die hetzelfde blijft zelfs als de toepassing, locatie wijzigt opgeven. Hiermee kunt dezelfde URL-toewijzing code moet worden gebruikt in een testomgeving en in de laatste implementatieomgeving of moet worden gebruikt door kopieën van webtoepassingen in verschillende domeinen bevinden."
  example:
  - "The following example uses the AppRelativeCurrentExecutionFilePath property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page. Run this page at different levels of a directory structure to see the resulting AppRelativeCurrentExecutionFilePath property values.  \n  \n [!code-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_31_1.aspx)]\n [!code-cs[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/add/codesnippet/csharp/p-system.web.httprequest_31_1.aspx)]  \n  \n The following example uses the AppRelativeCurrentExecutionFilePath property to programmatically set the path to a resource, based on the current path of the page.  \n  \n [!code-cs[System.Web.HttpRequest.ApplicationPath#1](~/add/codesnippet/csharp/p-system.web.httprequest_31_2.aspx)]\n [!code-vb[System.Web.HttpRequest.ApplicationPath#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_31_2.aspx)]"
  syntax:
    content: public string AppRelativeCurrentExecutionFilePath { get; }
    return:
      type: System.String
      description: "Het virtuele pad van de hoofdmap van de toepassing voor de huidige aanvraag."
  overload: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.BinaryRead(System.Int32)
  id: BinaryRead(System.Int32)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: BinaryRead(Int32)
  nameWithType: HttpRequest.BinaryRead(Int32)
  fullName: System.Web.HttpRequest.BinaryRead(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een binaire lezen van een opgegeven aantal bytes uit de huidige invoerstroom."
  remarks: "De methode BinaryRead is bedoeld voor compatibiliteit met ASP."
  syntax:
    content: public byte[] BinaryRead (int count);
    parameters:
    - id: count
      type: System.Int32
      description: "Het aantal bytes te lezen."
    return:
      type: System.Byte[]
      description: "Een byte-matrix."
  overload: System.Web.HttpRequest.BinaryRead*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>count</code> is 0.  \n  \n \\- or -  \n  \n <code>count</code> is greater than the number of bytes available."
  platform:
  - net462
- uid: System.Web.HttpRequest.Browser
  id: Browser
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Browser
  nameWithType: HttpRequest.Browser
  fullName: System.Web.HttpRequest.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van informatie over de mogelijkheden van de browser van de aanvragende client."
  remarks: ''
  example:
  - "The following code example sends a list of the browser's capabilities back to the client in an HTML page.  \n  \n [!code-vb[Classic HttpRequest.Browser Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_14_1.vb)]\n [!code-cs[Classic HttpRequest.Browser Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_14_1.cs)]"
  syntax:
    content: public System.Web.HttpBrowserCapabilities Browser { get; set; }
    return:
      type: System.Web.HttpBrowserCapabilities
      description: "Een <xref href=&quot;System.Web.HttpBrowserCapabilities&quot;> </xref> object met de mogelijkheden van de clientbrowser."
  overload: System.Web.HttpRequest.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ClientCertificate
  id: ClientCertificate
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ClientCertificate
  nameWithType: HttpRequest.ClientCertificate
  fullName: System.Web.HttpRequest.ClientCertificate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De huidige opgehaald clientcertificaat voor beveiliging van de aanvraag."
  remarks: ''
  example:
  - "The following code example sends the client's certificate settings back to the client in an HTML page.  \n  \n [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_12_1.vb)]\n [!code-cs[Classic HttpRequest.ClientCertificate Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_12_1.cs)]"
  syntax:
    content: public System.Web.HttpClientCertificate ClientCertificate { get; }
    return:
      type: System.Web.HttpClientCertificate
      description: "Een <xref href=&quot;System.Web.HttpClientCertificate&quot;> </xref> -object met informatie over beveiligingsinstellingen voor certificaat van de client."
  overload: System.Web.HttpRequest.ClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ContentEncoding
  id: ContentEncoding
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpRequest.ContentEncoding
  fullName: System.Web.HttpRequest.ContentEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van de tekenset van het hoofdgedeelte."
  remarks: "Inhoud standaardcodering kan worden opgegeven in de [globalisatie Element (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) van een configuratiebestand. Als de codering van inhoud ook door de client is opgegeven, worden de standaardconfiguratie-instellingen overschreven."
  example:
  - "The following code example assigns a value representing the description of the current HTTP encoding to a string variable.  \n  \n [!code-cs[Classic HttpRequest.ContentEncoding Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_18_1.cs)]\n [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_18_1.vb)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Een <xref:System.Text.Encoding>-object als de client-tekenset.</xref:System.Text.Encoding>"
  overload: System.Web.HttpRequest.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ContentLength
  id: ContentLength
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: HttpRequest.ContentLength
  fullName: System.Web.HttpRequest.ContentLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Geeft de lengte in bytes, voor inhoud die is verzonden door de client."
  remarks: ''
  example:
  - "The following code example assigns the value representing the content length of the incoming request to an integer variable.  \n  \n [!code-vb[Classic HttpRequest.ContentLength Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_17_1.vb)]\n [!code-cs[Classic HttpRequest.ContentLength Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_17_1.cs)]"
  syntax:
    content: public int ContentLength { get; }
    return:
      type: System.Int32
      description: "De lengte voor inhoud die is verzonden door de client, in bytes."
  overload: System.Web.HttpRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ContentType
  id: ContentType
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpRequest.ContentType
  fullName: System.Web.HttpRequest.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van het MIME-inhoudstype van de binnenkomende aanvraag."
  remarks: ''
  example:
  - "The following code example assigns the value representing the content type of the incoming request to a string variable.  \n  \n [!code-vb[Classic HttpRequest.ContentType Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_33_1.vb)]\n [!code-cs[Classic HttpRequest.ContentType Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_33_1.cs)]  \n  \n The following example shows output that might be produced by this code.  \n  \n `GET`  \n  \n `127.0.0.1`  \n  \n `127.0.0.1`  \n  \n `GET`"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks die het MIME-inhoudstype van de inkomende aanvraag opgegeven, bijvoorbeeld &quot;text/html&quot; vertegenwoordigt. Aanvullende gangbare MIME-typen zijn &quot;audio.wav&quot;, &quot; installatiekopie/gif&quot; en &quot; application/pdf&quot;."
  overload: System.Web.HttpRequest.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Cookies
  id: Cookies
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpRequest.Cookies
  fullName: System.Web.HttpRequest.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u een verzameling van cookies door de client verzonden."
  remarks: "ASP.NET bevat twee intrinsieke cookie verzamelingen. De collectie toegankelijk via de collectie Cookies van <xref:System.Web.HttpRequest>bevat cookies die zijn verzonden door de client naar de server in de `Cookie` header.</xref:System.Web.HttpRequest> De collectie toegankelijk via de <xref:System.Web.HttpResponse.Cookies%2A>verzameling <xref:System.Web.HttpResponse>bevat nieuwe cookies op de server gemaakt en verzonden naar de client in de `Set-Cookie` header.</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.Cookies%2A>      > [!NOTE] > Na het toevoegen van een cookie met behulp van de <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>verzameling, de cookie is onmiddellijk beschikbaar in de verzameling van Cookies, zelfs als het antwoord niet naar de client verzonden is.</xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>"
  example:
  - "The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.  \n  \n [!code-cs[Classic HttpRequest.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_21_1.cs)]\n [!code-vb[Classic HttpRequest.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_21_1.vb)]"
  syntax:
    content: public System.Web.HttpCookieCollection Cookies { get; }
    return:
      type: System.Web.HttpCookieCollection
      description: "Een <xref href=&quot;System.Web.HttpCookieCollection&quot;> </xref> -object dat de client Cookievariabelen vertegenwoordigt."
  overload: System.Web.HttpRequest.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.CurrentExecutionFilePath
  id: CurrentExecutionFilePath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: CurrentExecutionFilePath
  nameWithType: HttpRequest.CurrentExecutionFilePath
  fullName: System.Web.HttpRequest.CurrentExecutionFilePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u het virtuele pad van de huidige aanvraag."
  remarks: "Het bestandspad retourneert CurrentExecutionFilePath aan de pagina-handler momenteel worden uitgevoerd. Voor de omleiding scenario&quot;s met <xref:System.Web.HttpServerUtility.Execute%2A>en <xref:System.Web.HttpServerUtility.Transfer%2A>methoden dit betekent dat de eigenschap CurrentExecutionFilePath retourneert het pad naar de pagina omgeleid naar (onderliggende pagina).</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> Echter, wanneer de client wordt omgeleid naar een andere pagina de <xref:System.Web.HttpRequest.FilePath%2A>eigenschap retourneert het pad naar de oorspronkelijke pagina.</xref:System.Web.HttpRequest.FilePath%2A>"
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the CurrentExecutionFilePath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_3_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_3_1.aspx)]"
  syntax:
    content: public string CurrentExecutionFilePath { get; }
    return:
      type: System.String
      description: "Het virtuele pad van de huidige aanvraag."
  overload: System.Web.HttpRequest.CurrentExecutionFilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.CurrentExecutionFilePathExtension
  id: CurrentExecutionFilePathExtension
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: CurrentExecutionFilePathExtension
  nameWithType: HttpRequest.CurrentExecutionFilePathExtension
  fullName: System.Web.HttpRequest.CurrentExecutionFilePathExtension
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald van de extensie van het bestand dat is opgegeven in de <xref:System.Web.HttpRequest.CurrentExecutionFilePath*>eigenschap.</xref:System.Web.HttpRequest.CurrentExecutionFilePath*>"
  syntax:
    content: public string CurrentExecutionFilePathExtension { get; }
    return:
      type: System.String
      description: "De extensie van het bestand dat is opgegeven in de <xref:System.Web.HttpRequest.CurrentExecutionFilePath*>eigenschap.</xref:System.Web.HttpRequest.CurrentExecutionFilePath*>"
  overload: System.Web.HttpRequest.CurrentExecutionFilePathExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.FilePath
  id: FilePath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: FilePath
  nameWithType: HttpRequest.FilePath
  fullName: System.Web.HttpRequest.FilePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u het virtuele pad van de huidige aanvraag."
  remarks: "De eigenschap FilePath bevat niet de <xref:System.Web.HttpRequest.PathInfo%2A>aanhangwagen.</xref:System.Web.HttpRequest.PathInfo%2A> De waarde FilePath is bijvoorbeeld voor de URL-http://www.contoso.com/virdir/page.html/tail /virdir/page.html."
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the FilePath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_27_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_27_1.aspx)]"
  syntax:
    content: public string FilePath { get; }
    return:
      type: System.String
      description: "Het virtuele pad van de huidige aanvraag."
  overload: System.Web.HttpRequest.FilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Files
  id: Files
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Files
  nameWithType: HttpRequest.Files
  fullName: System.Web.HttpRequest.Files
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de verzameling bestanden geüpload door de client, in meerdelige MIME-indeling."
  remarks: "Het verzamelen van bestanden wordt alleen ingevuld als de HTTP-aanvraag `Content-Type` waarde is &quot;multipart/form-data&quot;."
  example:
  - "The following code example displays the names of all files in the Files collection.  \n  \n [!code-cs[Classic HttpRequest.Files Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_28_1.cs)]\n [!code-vb[Classic HttpRequest.Files Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_28_1.vb)]"
  syntax:
    content: public System.Web.HttpFileCollection Files { get; }
    return:
      type: System.Web.HttpFileCollection
      description: "Een <xref href=&quot;System.Web.HttpFileCollection&quot;> </xref> object dat vertegenwoordigt een verzameling bestanden geüpload door de client. De items van de <xref href=&quot;System.Web.HttpFileCollection&quot;> </xref> object zijn van het type <xref href=&quot;System.Web.HttpPostedFile&quot;> </xref>."
  overload: System.Web.HttpRequest.Files*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Filter
  id: Filter
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Filter
  nameWithType: HttpRequest.Filter
  fullName: System.Web.HttpRequest.Filter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van het filter dat moet worden gebruikt bij het lezen van de huidige invoerstroom."
  remarks: ''
  example:
  - "The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>. Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.  \n  \n [!code-vb[System.Web.HttpRequest.Filter#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_4_1.aspx)]\n [!code-cs[System.Web.HttpRequest.Filter#1](~/add/codesnippet/csharp/p-system.web.httprequest_4_1.aspx)]"
  syntax:
    content: public System.IO.Stream Filter { get; set; }
    return:
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object moet worden gebruikt als het filter.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.Filter*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De opgegeven <xref:System.IO.Stream>is ongeldig.</xref:System.IO.Stream>"
  platform:
  - net462
- uid: System.Web.HttpRequest.Form
  id: Form
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Form
  nameWithType: HttpRequest.Form
  fullName: System.Web.HttpRequest.Form
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u een verzameling van formuliervariabelen."
  remarks: "De eigenschap Form wordt gevuld wanneer de HTTP-aanvraag `Content-Type` waarde is &quot; application/x-1-800-www-Dell-form-urlencoded&quot; of &quot;multipart/form-data&quot;."
  example:
  - "The following example shows how to read the values in the form collection posted from a browser. Each name/value pair in the collection represents a control in the form and its value.  \n  \n [!code-vb[Classic HttpRequest.Form Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_32_1.vb)]\n [!code-cs[Classic HttpRequest.Form Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_32_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Form { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Een <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> die vertegenwoordigt een verzameling van formuliervariabelen."
  overload: System.Web.HttpRequest.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.GetBufferedInputStream
  id: GetBufferedInputStream
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: GetBufferedInputStream()
  nameWithType: HttpRequest.GetBufferedInputStream()
  fullName: System.Web.HttpRequest.GetBufferedInputStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een <xref:System.IO.Stream>-object dat kan worden gebruikt voor het lezen van de binnenkomende HTTP-entiteitshoofdtekst.</xref:System.IO.Stream>"
  remarks: "Deze methode is identiek aan <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>, behalve dat wordt ook de bytes die gelezen worden gekopieerd naar de interne opslag die wordt gebruikt door ASP.NET voor het vullen van de <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, en <xref:System.Web.HttpRequest.InputStream%2A>Eigenschappen.</xref:System.Web.HttpRequest.InputStream%2A> </xref:System.Web.HttpRequest.Files%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> Omdat deze informatie wordt bewaard, downstream code zoals webformulieren van ASP.NET-pagina&quot;s (ASPX-bestanden) met succes uitgevoerd. Dit is niet het geval is bij de <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>methode.</xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>"
  syntax:
    content: public System.IO.Stream GetBufferedInputStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>-object dat kan worden gebruikt voor het lezen van de binnenkomende HTTP-entiteitshoofdtekst.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.GetBufferedInputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Het hoofdgedeelte van de aanvraag is al geladen en geparseerd. Voorbeelden van eigenschappen die ertoe leiden dat de entiteitshoofdtekst worden geladen en geparseerd omvatten het volgende: - de <> </> *> eigenschap.      -De <> </> *> eigenschap.      -De <> </> *> eigenschap.      -De <> </> *> methode.       Aanroepen om te voorkomen dat deze uitzondering, de <xref:System.Web.HttpRequest.ReadEntityBodyMode*>methode eerste.</xref:System.Web.HttpRequest.ReadEntityBodyMode*> Deze uitzondering wordt ook gegenereerd als de client de verbinding verbreekt tijdens het lezen van het hoofdgedeelte."
  platform:
  - net462
- uid: System.Web.HttpRequest.GetBufferlessInputStream
  id: GetBufferlessInputStream
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: GetBufferlessInputStream()
  nameWithType: HttpRequest.GetBufferlessInputStream()
  fullName: System.Web.HttpRequest.GetBufferlessInputStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een <xref:System.IO.Stream>-object dat kan worden gebruikt voor het lezen van de binnenkomende HTTP-entiteitshoofdtekst.</xref:System.IO.Stream>"
  remarks: "Deze methode biedt een alternatief voor het gebruik van de <xref:System.Web.HttpRequest.InputStream%2A>eigenschap.</xref:System.Web.HttpRequest.InputStream%2A> De <xref:System.Web.HttpRequest.InputStream%2A>eigenschap wacht totdat de hele aanvraag is ontvangen voordat het resultaat een <xref:System.IO.Stream>object.</xref:System.IO.Stream> </xref:System.Web.HttpRequest.InputStream%2A> Daarentegen is de methode GetBufferlessInputStream retourneert de <xref:System.IO.Stream>object onmiddellijk.</xref:System.IO.Stream> U kunt de methode gebruiken om te beginnen met het hoofdgedeelte worden verwerkt voordat de volledige inhoud van de hoofdtekst is ontvangen.       De entiteitshoofdtekst van de (of zoveel ervan als u vragen en is ontvangen) wordt alleen geretourneerd wanneer u het object dat wordt geretourneerd door deze methode kan worden gelezen van de stroom door het aanroepen van methoden, zoals de <xref:System.IO.Stream.Read%2A>methode.</xref:System.IO.Stream.Read%2A> Gebruik van parameters van de <xref:System.IO.Stream.Read%2A>methode om op te geven hoeveel van het hoofdgedeelte te lezen.</xref:System.IO.Stream.Read%2A>       De <xref:System.IO.Stream>object dat wordt geretourneerd door ASP.NET van deze methode ondersteunt synchrone en asynchrone methoden voor het lezen.</xref:System.IO.Stream> De <xref:System.IO.Stream>object wordt geïmplementeerd door zowel de <xref:System.IO.Stream.BeginRead%2A>en <xref:System.IO.Stream.EndRead%2A>methoden.</xref:System.IO.Stream.EndRead%2A> </xref:System.IO.Stream.BeginRead%2A> </xref:System.IO.Stream> De asynchrone methoden kunnen u de entiteit van de aanvraag in chunks asynchroon lezen tijdens de huidige thread tussen elke herhaling van een asynchrone lezen lus versies van ASP.NET.       Deze methode kan nuttig zijn als de aanvraag is een groot bestand wordt geüpload en u toegang krijgen tot inhoud van het bestand wilt voordat het uploaden is voltooid. Echter, u moet alleen gebruiken deze methode voor scenario&quot;s waar u de verwerking van het hoofdgedeelte overnemen. Dit betekent dat u deze methode uit een ASPX-pagina niet gebruiken omdat het door de tijd die een ASPX-pagina wordt uitgevoerd, de entiteitshoofdtekst al is gelezen."
  syntax:
    content: public System.IO.Stream GetBufferlessInputStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>-object dat kan worden gebruikt voor het lezen van de binnenkomende HTTP-entiteitshoofdtekst.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.GetBufferlessInputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Het hoofdgedeelte van de aanvraag is al geladen en geparseerd. Voorbeelden van eigenschappen die ertoe leiden dat de entiteitshoofdtekst worden geladen en geparseerd omvatten het volgende:- <> </> *>- <> </> *>- <> </> *>- <> </> *> aanroepen om te voorkomen dat deze uitzondering, de <xref:System.Web.HttpRequest.ReadEntityBodyMode*>methode eerste.</xref:System.Web.HttpRequest.ReadEntityBodyMode*> Deze uitzondering wordt ook gegenereerd als de client de verbinding verbreekt tijdens het lezen van het hoofdgedeelte."
  platform:
  - net462
- uid: System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)
  id: GetBufferlessInputStream(System.Boolean)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: GetBufferlessInputStream(Boolean)
  nameWithType: HttpRequest.GetBufferlessInputStream(Boolean)
  fullName: System.Web.HttpRequest.GetBufferlessInputStream(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een <xref:System.IO.Stream>-object dat kan worden gebruikt voor het lezen van de binnenkomende HTTP-entiteitshoofdtekst, eventueel het uitschakelen van de aanvraag langer limiet die is ingesteld in de <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength*>eigenschap.</xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength*> </xref:System.IO.Stream>"
  remarks: "Zie voor meer informatie over deze methode de <xref:System.Web.HttpRequest.GetBufferlessInputStream>overbelasting.</xref:System.Web.HttpRequest.GetBufferlessInputStream>"
  syntax:
    content: public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);
    parameters:
    - id: disableMaxRequestLength
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uitschakelen van de aanvraag-lengtelimiet; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>-object dat kan worden gebruikt voor het lezen van de binnenkomende HTTP-entiteitshoofdtekst.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.GetBufferlessInputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Het hoofdgedeelte van de aanvraag is al geladen en geparseerd. Voorbeelden van eigenschappen die ertoe leiden dat de entiteitshoofdtekst worden geladen en geparseerd omvatten het volgende: - de <> </> *> eigenschap.      -De <> </> *> eigenschap.      -De <> </> *> eigenschap.      -De <> </> *> methode.       Aanroepen om te voorkomen dat deze uitzondering, de <xref:System.Web.HttpRequest.ReadEntityBodyMode*>methode eerste.</xref:System.Web.HttpRequest.ReadEntityBodyMode*> Deze uitzondering wordt ook gegenereerd als de client de verbinding verbreekt tijdens het lezen van het hoofdgedeelte."
  platform:
  - net462
- uid: System.Web.HttpRequest.Headers
  id: Headers
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Headers
  nameWithType: HttpRequest.Headers
  fullName: System.Web.HttpRequest.Headers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u een verzameling van HTTP-headers."
  remarks: "Zie voor een overzicht van alle mogelijke kopteksten [koptekstvelden aanvragen](http://go.microsoft.com/fwlink/?LinkId=73147) op de W3C-website."
  example:
  - "The following code example displays the names and values of all headers in the HTTP request.  \n  \n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_24_1.cs)]\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_24_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Een <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> van headers."
  overload: System.Web.HttpRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.HttpChannelBinding
  id: HttpChannelBinding
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: HttpChannelBinding
  nameWithType: HttpRequest.HttpChannelBinding
  fullName: System.Web.HttpRequest.HttpChannelBinding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt de <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>object van het huidige <xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> exemplaar.</xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>"
  syntax:
    content: public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }
    return:
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: "De <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>object van het huidige <xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> exemplaar.</xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>"
  overload: System.Web.HttpRequest.HttpChannelBinding*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De huidige <xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> object is niet een <xref uid=&quot;langword_csharp_System.Web.Hosting.IIS7WorkerRequest&quot; name=&quot;System.Web.Hosting.IIS7WorkerRequest&quot; href=&quot;&quot;> </xref> object of een <xref uid=&quot;langword_csharp_System.Web.Hosting.ISAPIWorkerRequestInProc&quot; name=&quot;System.Web.Hosting.ISAPIWorkerRequestInProc&quot; href=&quot;&quot;> </xref> object."
  platform:
  - net462
- uid: System.Web.HttpRequest.HttpMethod
  id: HttpMethod
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: HttpMethod
  nameWithType: HttpRequest.HttpMethod
  fullName: System.Web.HttpRequest.HttpMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Met deze eigenschap wordt de HTTP-methode voor het overbrengen van gegevens (zoals <xref uid=&quot;langword_csharp_GET&quot; name=&quot;GET&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref>, of <xref uid=&quot;langword_csharp_HEAD&quot; name=&quot;HEAD&quot; href=&quot;&quot;> </xref>) door de client gebruikt."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the HttpMethod property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_2_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_2_1.aspx)]  \n  \n The following example shows output that is produced by this code.  \n  \n `GET`  \n  \n `127.0.0.1`  \n  \n `127.0.0.1`  \n  \n `GET`"
  syntax:
    content: public string HttpMethod { get; }
    return:
      type: System.String
      description: "De HTTP-gegevensoverdracht methode die wordt gebruikt door de client."
  overload: System.Web.HttpRequest.HttpMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.InputStream
  id: InputStream
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: InputStream
  nameWithType: HttpRequest.InputStream
  fullName: System.Web.HttpRequest.InputStream
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt de inhoud van de binnenkomende HTTP-entiteitshoofdtekst opgehaald."
  remarks: ''
  example:
  - "The following code example copies the contents of an InputStream into a string.  \n  \n [!code-cs[Classic HttpRequest.InputStream Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_10_1.aspx)]\n [!code-vb[Classic HttpRequest.InputStream Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_10_1.vb)]"
  syntax:
    content: public System.IO.Stream InputStream { get; }
    return:
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object dat de inhoud van de binnenkomende HTTP-inhoud hoofdtekst.</xref:System.IO.Stream>"
  overload: System.Web.HttpRequest.InputStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.InsertEntityBody
  id: InsertEntityBody
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: InsertEntityBody()
  nameWithType: HttpRequest.InsertEntityBody()
  fullName: System.Web.HttpRequest.InsertEntityBody()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "IIS beschikt over een kopie van het hoofdgedeelte van de HTTP-aanvraag."
  remarks: "IIS biedt een kopie van de aanvraag niet behouden nadat deze is gelezen. Daarom wordt aanbevolen dat alleen de handler voor een HTTP-aanvraag moet worden gebruikt voor het lezen van entiteit van de aanvraag.       De methode InsertEntityBody overbelasting biedt IIS met een kopie van de entiteit van de aanvraag als deze eerder is gelezen door ASP.NET. Deze methode-overload is handig in situaties waar ASP.NET de entiteit-aanvraag heeft lees- en u wilt gebruiken als de bestaande aanvraaggegevens."
  syntax:
    content: public void InsertEntityBody ();
    parameters: []
  overload: System.Web.HttpRequest.InsertEntityBody*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De methode is aangeroepen op een IIS-versie die ouder zijn dan de IIS 7.0."
  platform:
  - net462
- uid: System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  id: InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: InsertEntityBody(Byte[],Int32,Int32)
  nameWithType: HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
  fullName: System.Web.HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Biedt IIS met een kopie van het hoofdgedeelte van de HTTP-aanvraag en informatie over het Aanvraagobject entiteit."
  remarks: "IIS biedt een kopie van de aanvraag niet behouden nadat deze is gelezen. Daarom wordt aanbevolen dat alleen de handler voor een HTTP-aanvraag moet worden gebruikt voor het lezen van entiteit van de aanvraag.       De overbelasting van de methode InsertEntityBody is handig als u uitvoeren van aangepaste verwerking wilt, zoals de hoofdtekst van een andere entiteit invoegen in het geheugen."
  syntax:
    content: public void InsertEntityBody (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een matrix die de gegevens van de entiteit aanvraag bevat."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde positie in `buffer` waarop u wilt beginnen met het opslaan van de gegevens van de entiteit aanvraag."
    - id: count
      type: System.Int32
      description: "Het aantal bytes te lezen in de `buffer` matrix."
  overload: System.Web.HttpRequest.InsertEntityBody*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De methode is aangeroepen op een IIS-versie die ouder zijn dan de IIS 7.0."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>een negatief getal is."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het aantal items in <code> count </code> groter is dan de beschikbare ruimte in <code> buffer </code>basis de <code> offset </code> waarde."
  platform:
  - net462
- uid: System.Web.HttpRequest.IsAuthenticated
  id: IsAuthenticated
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: HttpRequest.IsAuthenticated
  fullName: System.Web.HttpRequest.IsAuthenticated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt een waarde die aangeeft of de aanvraag is geverifieerd."
  remarks: ''
  example:
  - "The following code example uses the IsAuthenticated property to determine whether the current request has been authenticated. If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application. This is a common technique used in the default page for an application.  \n  \n [!code-vb[System.Web.HttpRequest_Sample3#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_15_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample3#1](~/add/codesnippet/csharp/p-system.web.httprequest_15_1.aspx)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de aanvraag kan worden geverifieerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpRequest.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.IsLocal
  id: IsLocal
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: IsLocal
  nameWithType: HttpRequest.IsLocal
  fullName: System.Web.HttpRequest.IsLocal
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een waarde die aangeeft of de aanvraag afkomstig van de lokale computer is."
  remarks: "De eigenschap IsLocal retourneert `true` als het IP-adres van de oorspronkelijke aanvraag 127.0.0.1 of als het IP-adres van de aanvraag hetzelfde als het IP-adres van de server is."
  syntax:
    content: public bool IsLocal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de aanvraag afkomstig van de lokale computer is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpRequest.IsLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.IsSecureConnection
  id: IsSecureConnection
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: IsSecureConnection
  nameWithType: HttpRequest.IsSecureConnection
  fullName: System.Web.HttpRequest.IsSecureConnection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een waarde die aangeeft of de HTTP-verbinding gebruikmaakt van SSL (dat wil zeggen, HTTPS)."
  remarks: ''
  example:
  - "The following code example determines whether the IsSecureConnection property is set to false. If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/csharp/p-system.web.httprequest_13_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/visualbasic/p-system.web.httprequest_13_1.aspx)]"
  syntax:
    content: public bool IsSecureConnection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de verbinding een SSL-verbinding is anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpRequest.IsSecureConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Item(System.String)
  id: Item(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpRequest.Item(String)
  fullName: System.Web.HttpRequest.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt het opgegeven object van het <> </> *>, <> </> *>, <> </> *>, of <> </> *> verzamelingen."
  syntax:
    content: public string this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "De naam van het verzamelingslid om op te halen."
    return:
      type: System.String
      description: "De <> </> *>, <> </> *>, <> </> *>, of <> </> *> verzamelingslid opgegeven in de <code> key </code> parameter. Als de opgegeven <code> key </code> niet wordt gevonden, klikt u vervolgens <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wordt geretourneerd."
  overload: System.Web.HttpRequest.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.LogonUserIdentity
  id: LogonUserIdentity
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: LogonUserIdentity
  nameWithType: HttpRequest.LogonUserIdentity
  fullName: System.Web.HttpRequest.LogonUserIdentity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt de <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> type voor de huidige gebruiker."
  remarks: "De eigenschap LogonUserIdentity beschrijft de eigenschappen en methoden van de <xref:System.Security.Principal.WindowsIdentity>-object voor de momenteel verbonden gebruiker aan Microsoft Internet Information Services (IIS).</xref:System.Security.Principal.WindowsIdentity> Het exemplaar van de <xref:System.Security.Principal.WindowsIdentity>klasse die wordt blootgelegd door LogonUserIdentity houdt de IIS-token voor verbindingsverzoeken en biedt snel toegang tot dit token voor de huidige HTTP-aanvraag wordt verwerkt binnen ASP.NET.</xref:System.Security.Principal.WindowsIdentity> Een exemplaar van de <xref:System.Security.Principal.WindowsIdentity>klasse wordt automatisch gemaakt zodat deze niet te worden samengesteld hoeft voor toegang tot de eigenschappen en methoden.</xref:System.Security.Principal.WindowsIdentity>"
  example:
  - "The following code example shows how to retrieve the LogonUserIdentity property for the current user and write out the values of each item in a text file. Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.  \n  \n [!code-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_35_1.aspx)]\n [!code-cs[System.Web.HttpRequest_LogonUserIdentity#1](~/add/codesnippet/csharp/p-system.web.httprequest_35_1.aspx)]"
  syntax:
    content: public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "Een <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> -object voor de huidige verificatie-instellingen van Internet Information Services (IIS)."
  overload: System.Web.HttpRequest.LogonUserIdentity*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De webtoepassing wordt uitgevoerd in de geïntegreerde modus voor IIS 7 en de <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref> gebeurtenis is nog niet gegenereerd."
  platform:
  - net462
- uid: System.Web.HttpRequest.MapImageCoordinates(System.String)
  id: MapImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapImageCoordinates(String)
  nameWithType: HttpRequest.MapImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapImageCoordinates(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een binnenkomende afbeeldingsveld Maps formulierparameter op juiste x-coördinaat en y-coördinaat waarden."
  syntax:
    content: public int[] MapImageCoordinates (string imageFieldName);
    parameters:
    - id: imageFieldName
      type: System.String
      description: "De naam van het formulier afbeeldingskaart."
    return:
      type: System.Int32[]
      description: "Een tweedimensionale matrix van gehele getallen."
  overload: System.Web.HttpRequest.MapImageCoordinates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HttpRequest.MapPath(String)
  fullName: System.Web.HttpRequest.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Het virtuele pad wordt toegewezen aan een fysiek pad."
  remarks: >-
    > [!CAUTION]

    >  The MapPath property potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.
  example:
  - "The following code example uses the MapPath method to convert a virtual path to a fully qualified physical path on the server. This example has two parts:  \n  \n-   An .aspx page maps the path, reads the file, and displays results of the read operation.  \n  \n-   A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.  \n  \n The first part of the example shows how to convert a virtual path to a fully qualified physical path using the MapPath method. This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file. The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page. The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.  \n  \n [!code-vb[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/visualbasic/m-system.web.httprequest_0_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/csharp/m-system.web.httprequest_0_1.aspx)]  \n  \n The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase. Put this code in the `App_Code` folder for your application.  \n  \n [!code-cs[System.Web.HttpRequest_Samples2#2](~/add/codesnippet/csharp/m-system.web.httprequest_0_2.cs)]\n [!code-vb[System.Web.HttpRequest_Samples2#2](~/add/codesnippet/visualbasic/m-system.web.httprequest_0_2.vb)]"
  syntax:
    content: public string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het virtuele pad (absolute of relatieve) voor de huidige aanvraag."
    return:
      type: System.String
      description: "Het fysieke pad op de server die is opgegeven door <code> virtualPath </code>."
  overload: System.Web.HttpRequest.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Geen <xref href=&quot;System.Web.HttpContext&quot;> </xref> -object is gedefinieerd voor de aanvraag."
  platform:
  - net462
- uid: System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)
  id: MapPath(System.String,System.String,System.Boolean)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapPath(String,String,Boolean)
  nameWithType: HttpRequest.MapPath(String,String,Boolean)
  fullName: System.Web.HttpRequest.MapPath(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Het virtuele pad wordt toegewezen aan een fysiek pad."
  remarks: >-
    > [!CAUTION]

    >  The MapPath property potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.
  syntax:
    content: public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het virtuele pad (absolute of relatieve) voor de huidige aanvraag."
    - id: baseVirtualDir
      type: System.String
      description: "De basismap van de virtuele pad gebruikt voor het relatieve omzetten."
    - id: allowCrossAppMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om aan te geven die `virtualPath` kan behoren tot een andere toepassing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Het fysieke pad op de server."
  overload: System.Web.HttpRequest.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Geen <xref href=&quot;System.Web.HttpContext&quot;> </xref> -object is gedefinieerd voor de aanvraag."
  platform:
  - net462
- uid: System.Web.HttpRequest.MapRawImageCoordinates(System.String)
  id: MapRawImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: MapRawImageCoordinates(String)
  nameWithType: HttpRequest.MapRawImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapRawImageCoordinates(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een binnenkomende installatiekopie veld formulierparameter in de juiste x en y-coördinaat waarden wordt toegewezen."
  syntax:
    content: public double[] MapRawImageCoordinates (string imageFieldName);
    parameters:
    - id: imageFieldName
      type: System.String
      description: "De naam van het afbeeldingsveld."
    return:
      type: System.Double[]
      description: "De x en y-coördinaat waarden."
  overload: System.Web.HttpRequest.MapRawImageCoordinates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Params
  id: Params
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Params
  nameWithType: HttpRequest.Params
  fullName: System.Web.HttpRequest.Params
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt een gecombineerde verzameling <> </> *>, <> </> *>, <> </> *>, en <> </> *> items."
  remarks: "Naam / waarde-paren worden toegevoegd aan de verzameling in de volgende volgorde: 1.  Parameters voor query-tekenreeks.      2.  De velden van het formulier.      3.  Cookies.      4.  Servervariabelen voor de."
  example:
  - "The following code example shows how to loop through the Params property for a page and how to display each key/value pair.  \n  \n [!code-cs[System.Web.HttpRequest.Params#1](~/add/codesnippet/csharp/p-system.web.httprequest_7_1.aspx)]\n [!code-vb[System.Web.HttpRequest.Params#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_7_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Params { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> object."
  overload: System.Web.HttpRequest.Params*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Path
  id: Path
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Path
  nameWithType: HttpRequest.Path
  fullName: System.Web.HttpRequest.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u het virtuele pad van de huidige aanvraag."
  remarks: "Het pad is de samenvoeging van de <xref:System.Web.HttpRequest.FilePath%2A>en de <xref:System.Web.HttpRequest.PathInfo%2A>aanhangwagen.</xref:System.Web.HttpRequest.PathInfo%2A> </xref:System.Web.HttpRequest.FilePath%2A> Bijvoorbeeld, is het pad voor de URL-http://www.contoso.com/virdir/page.html/tail /virdir/page.html/tail."
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the Path property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/visualbasic/p-system.web.httprequest_29_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#2](~/add/codesnippet/csharp/p-system.web.httprequest_29_1.aspx)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "Het virtuele pad van de huidige aanvraag."
  overload: System.Web.HttpRequest.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.PathInfo
  id: PathInfo
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: PathInfo
  nameWithType: HttpRequest.PathInfo
  fullName: System.Web.HttpRequest.PathInfo
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt de informatie over het aanvullende pad voor een resource met de extensie van de URL opgehaald."
  remarks: "Voor de Http://www.contoso.com/virdir/page.html/tail URL is de waarde PathInfo /tail."
  example:
  - "The following code example determines whether the PathInfo property contains an empty string. If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file. If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the PathInfo property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#4](~/add/codesnippet/visualbasic/p-system.web.httprequest_19_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#4](~/add/codesnippet/csharp/p-system.web.httprequest_19_1.aspx)]"
  syntax:
    content: public string PathInfo { get; }
    return:
      type: System.String
      description: "Aanvullende informatie over het pad voor een resource."
  overload: System.Web.HttpRequest.PathInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.PhysicalApplicationPath
  id: PhysicalApplicationPath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: PhysicalApplicationPath
  nameWithType: HttpRequest.PhysicalApplicationPath
  fullName: System.Web.HttpRequest.PhysicalApplicationPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u het fysieke systeem van het bestandspad van de momenteel uitgevoerde servertoepassing hoofdmap."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the PhysicalApplicationPath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/visualbasic/p-system.web.httprequest_1_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/csharp/p-system.web.httprequest_1_1.aspx)]"
  syntax:
    content: public string PhysicalApplicationPath { get; }
    return:
      type: System.String
      description: "Het bestandssysteempad van hoofdmap van de huidige toepassing."
  overload: System.Web.HttpRequest.PhysicalApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.PhysicalPath
  id: PhysicalPath
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: PhysicalPath
  nameWithType: HttpRequest.PhysicalPath
  fullName: System.Web.HttpRequest.PhysicalPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u het fysieke systeem bestandspad overeenkomt met de aangevraagde URL."
  remarks: "In de omleidings-scenario&quot;s met <xref:System.Web.HttpServerUtility.Execute%2A>en <xref:System.Web.HttpServerUtility.Transfer%2A>, de eigenschap PhysicalPath retourneert het pad naar de oorspronkelijke pagina.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> Het fysieke pad van het momenteel wordt uitgevoerd pagina gebruik vinden de <xref:System.Web.HttpRequest.MapPath%2A>methode met de invoer voor argument is ingesteld als de <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>eigenschap.</xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> </xref:System.Web.HttpRequest.MapPath%2A>"
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the PhysicalPath property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/visualbasic/p-system.web.httprequest_20_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/csharp/p-system.web.httprequest_20_1.aspx)]"
  syntax:
    content: public string PhysicalPath { get; }
    return:
      type: System.String
      description: "Het bestandssysteempad van de huidige aanvraag."
  overload: System.Web.HttpRequest.PhysicalPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.QueryString
  id: QueryString
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: QueryString
  nameWithType: HttpRequest.QueryString
  fullName: System.Web.HttpRequest.QueryString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de verzameling van HTTP-query string-variabelen."
  remarks: ''
  example:
  - "The following code example shows two ways to get the value of a query string variable named “fullname”. In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is \"Fadi Fakhouri\" because the `%20` is URL-decoded into a space character. If the URL doesn’t have a `fullname` query string ID, the returned value would be `null`.  \n  \n The first line of code looks for the key “fullname” only in the query string; the second line looks for the key “fullname” in all of the HTTP request collections. For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.  \n  \n```c#  \nstring fullname1 = Request.QueryString[\"fullname\"];  \nstring fullname2 = Request[\"fullname\"];  \n  \n```  \n  \n```vb  \nDim fullname1 As String = Request.QueryString(\"fullname\")  \nDim fullname2 As String = Request(\"fullname\")  \n```"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection QueryString { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "De query tekenreeksvariabelen die door de client verzonden. Sleutels en waarden zijn URL gedecodeerd."
  overload: System.Web.HttpRequest.QueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.RawUrl
  id: RawUrl
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: RawUrl
  nameWithType: HttpRequest.RawUrl
  fullName: System.Web.HttpRequest.RawUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de onbewerkte URL van de huidige aanvraag."
  remarks: "De onbewerkte URL wordt gedefinieerd als het deel van de URL na de domein-informatie. In de URL-tekenreeks http://www.contoso.com/articles/recent.aspx is de onbewerkte URL /articles/recent.aspx. De onbewerkte URL bevat de queryreeks, indien aanwezig."
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the RawUrl property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/visualbasic/p-system.web.httprequest_22_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#5](~/add/codesnippet/csharp/p-system.web.httprequest_22_1.aspx)]"
  syntax:
    content: public string RawUrl { get; }
    return:
      type: System.String
      description: "De onbewerkte URL van de huidige aanvraag."
  overload: System.Web.HttpRequest.RawUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ReadEntityBodyMode
  id: ReadEntityBodyMode
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ReadEntityBodyMode
  nameWithType: HttpRequest.ReadEntityBodyMode
  fullName: System.Web.HttpRequest.ReadEntityBodyMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een waarde die aangeeft of de entiteitshoofdtekst van aanvraag is gelezen en zo ja, hoe het is gelezen."
  remarks: "Deze methode wordt gebruikt om te voorkomen dat de uitzondering die wordt gegenereerd als de entiteitshoofdtekst van de al is gelezen en wordt geprobeerd om dit te lezen met behulp van een niet-compatibele methode. Methoden en eigenschappen die in de entiteitshoofdtekst lezen bevatten het volgende: - de <xref:System.Web.HttpRequest.Form%2A>eigenschap.</xref:System.Web.HttpRequest.Form%2A>      -De <xref:System.Web.HttpRequest.Files%2A>eigenschap.</xref:System.Web.HttpRequest.Files%2A>      -De <xref:System.Web.HttpRequest.InputStream%2A>eigenschap.</xref:System.Web.HttpRequest.InputStream%2A>      -De <xref:System.Web.HttpRequest.GetBufferedInputStream%2A>methode.</xref:System.Web.HttpRequest.GetBufferedInputStream%2A>      -De <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>methode.</xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>"
  syntax:
    content: public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }
    return:
      type: System.Web.ReadEntityBodyMode
      description: "De waarde die hoe de entiteitshoofdtekst van aanvraag was lezen of aangeeft dat deze niet is gelezen."
  overload: System.Web.HttpRequest.ReadEntityBodyMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.RequestContext
  id: RequestContext
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: RequestContext
  nameWithType: HttpRequest.RequestContext
  fullName: System.Web.HttpRequest.RequestContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt de <xref:System.Web.Routing.RequestContext>exemplaar van de huidige aanvraag.</xref:System.Web.Routing.RequestContext>"
  remarks: "Deze eigenschap biedt toegang tot de <xref:System.Web.Routing.RouteData>object voor de huidige aanvraag.</xref:System.Web.Routing.RouteData> Zie voor meer informatie over ASP.NET-routering. [ASP.NET routering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.Routing.RequestContext RequestContext { get; set; }
    return:
      type: System.Web.Routing.RequestContext
      description: "De <xref:System.Web.Routing.RequestContext>exemplaar van de huidige aanvraag.</xref:System.Web.Routing.RequestContext> Voor niet-gerouteerd aanvragen, de <xref:System.Web.Routing.RequestContext>object dat wordt geretourneerd is leeg.</xref:System.Web.Routing.RequestContext>"
  overload: System.Web.HttpRequest.RequestContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.RequestType
  id: RequestType
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: RequestType
  nameWithType: HttpRequest.RequestType
  fullName: System.Web.HttpRequest.RequestType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald of ingesteld van de HTTP-methode voor het overbrengen van gegevens (<xref uid=&quot;langword_csharp_GET&quot; name=&quot;GET&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref>) door de client gebruikt."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the RequestType property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_25_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_25_1.aspx)]"
  syntax:
    content: public string RequestType { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks die het HTTP-aanroep type door de client verzonden."
  overload: System.Web.HttpRequest.RequestType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.SaveAs(System.String,System.Boolean)
  id: SaveAs(System.String,System.Boolean)
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: SaveAs(String,Boolean)
  nameWithType: HttpRequest.SaveAs(String,Boolean)
  fullName: System.Web.HttpRequest.SaveAs(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee slaat u een HTTP-aanvraag naar de schijf."
  remarks: "De aanvraagcontext opslaan op schijf is handig bij foutopsporing."
  example:
  - "The following code example calls the SaveAs method when a page is loaded. The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.  \n  \n [!code-cs[System.Web.HttpRequest_Sample6#1](~/add/codesnippet/csharp/m-system.web.httprequest_1_1.aspx)]\n [!code-vb[System.Web.HttpRequest_Sample6#1](~/add/codesnippet/visualbasic/m-system.web.httprequest_1_1.aspx)]"
  syntax:
    content: public void SaveAs (string filename, bool includeHeaders);
    parameters:
    - id: filename
      type: System.String
      description: "De fysieke pad."
    - id: includeHeaders
      type: System.Boolean
      description: "Een Booleaanse waarde die aangeeft of een HTTP-header moet worden opgeslagen op schijf."
  overload: System.Web.HttpRequest.SaveAs*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*>eigenschap van de <xref href=&quot;System.Web.Configuration.HttpRuntimeSection&quot;> </xref> is ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> maar <code> filename </code> is niet een absoluut pad.</xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*>"
  platform:
  - net462
- uid: System.Web.HttpRequest.ServerVariables
  id: ServerVariables
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ServerVariables
  nameWithType: HttpRequest.ServerVariables
  fullName: System.Web.HttpRequest.ServerVariables
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt een verzameling Web server-variabelen."
  remarks: "Zie voor een lijst van door IIS ondersteund servervariabelen [IIS Server Variables](http://go.microsoft.com/fwlink/?LinkId=52471)."
  example:
  - "The following code example displays the names and values of all named server variables.  \n  \n [!code-cs[Classic HttpRequest.ServerVariables Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_30_1.cs)]\n [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_30_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection ServerVariables { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Een <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> van servervariabelen."
  overload: System.Web.HttpRequest.ServerVariables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.TimedOutToken
  id: TimedOutToken
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: TimedOutToken
  nameWithType: HttpRequest.TimedOutToken
  fullName: System.Web.HttpRequest.TimedOutToken
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Haalt een <xref:System.Threading.CancellationToken>-object dat wordt omzeild wanneer een aanvraag voor een optreedt time-out.</xref:System.Threading.CancellationToken>"
  remarks: "De time-outperiode kan worden opgegeven in het Web.config-bestand (Zie <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=fullName>) of via een programma (Zie <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName>).</xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=fullName> De time-outperiode wordt gemeten vanaf het moment dat de aanvraag wordt geleverd in. Als de standaardtime-out van 110 seconden van kracht is, wordt het token annulering niet ouder is dan 110 seconden nadat de aanvraagverwerking wordt begonnen omzeild. U kunt wijzigen de <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName>eigenschapswaarde, en als lang dit token is niet nog omzeild, de nieuwe time-outwaarde wordt in acht genomen.</xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName>       Het token biedt momenteel alleen 15 tweede mate van granulatie, wat betekent dat als de time-outwaarde is 110 seconden, wordt het token worden omzeild enige tijd tussen 110 en 125 seconden nadat verwerking van aanvragen is gestart. De granulatie kan in de toekomst worden gewijzigd.       Zelfs als deze eigenschap is een thread-veilige, zijn er beperkingen op het gebruik ervan. Zie voor meer informatie <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=fullName>       Deze eigenschap is nutteloos als WebSockets aanvraagverwerking is gestart."
  syntax:
    content: public System.Threading.CancellationToken TimedOutToken { get; }
    return:
      type: System.Threading.CancellationToken
      description: "Het token voor annulering."
  overload: System.Web.HttpRequest.TimedOutToken*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.TlsTokenBindingInfo
  id: TlsTokenBindingInfo
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: TlsTokenBindingInfo
  nameWithType: HttpRequest.TlsTokenBindingInfo
  fullName: System.Web.HttpRequest.TlsTokenBindingInfo
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt de TLS-token bindingsgegevens opgehaald. De eigenschap kan toepassingen token gegevens ophalen uit de binnenkomende HTTP-aanvragen voor verbeterde verificatie."
  remarks: "Deze eigenschap geeft `null` op niet-windows10 platforms."
  syntax:
    content: public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }
    return:
      type: System.Web.ITlsTokenBindingInfo
      description: "Het token van de binding voor de huidige verbinding."
  overload: System.Web.HttpRequest.TlsTokenBindingInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.TotalBytes
  id: TotalBytes
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: TotalBytes
  nameWithType: HttpRequest.TotalBytes
  fullName: System.Web.HttpRequest.TotalBytes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt het aantal bytes in de huidige invoerstroom."
  remarks: ''
  example:
  - "The following code example determines whether the TotalBytes property value is greater than 1000 bytes and writes that information to a file.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#6](~/add/codesnippet/visualbasic/p-system.web.httprequest_23_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#6](~/add/codesnippet/csharp/p-system.web.httprequest_23_1.aspx)]"
  syntax:
    content: public int TotalBytes { get; }
    return:
      type: System.Int32
      description: "Het aantal bytes in de invoerstroom."
  overload: System.Web.HttpRequest.TotalBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Unvalidated
  id: Unvalidated
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Unvalidated
  nameWithType: HttpRequest.Unvalidated
  fullName: System.Web.HttpRequest.Unvalidated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de waarden van HTTP-aanvraag zonder de activering van Aanvraagvalidatie."
  remarks: "Aanvraag validatiecontroles voor HTML-indeling en scripts die kan wijzen op een aanval voor cross-site scripting. Standaard worden alle waarden gecontroleerd met behulp van de aanvraag gevalideerd en als een waarden opmaak of script bevatten, ASP.NET genereert een <xref:System.Web.HttpRequestValidationException>uitzondering.</xref:System.Web.HttpRequestValidationException> Gebruik deze methode als u verwacht dat de aanvraag markup bevat (bijvoorbeeld, u toestaat dat gebruikers inhoud waarin u markup boeken) en u wilt ophalen van de raw-waarde van een aanvraag.      > [!IMPORTANT] > Als u deze eigenschap gebruikt, moet u handmatig de gegevens voor potentiële cross-site scripting aanvallen controleren."
  syntax:
    content: public System.Web.UnvalidatedRequestValues Unvalidated { get; }
    return:
      type: System.Web.UnvalidatedRequestValues
      description: "De waarden van de HTTP-aanvraag die niet met behulp van de Aanvraagvalidatie van de is gecontroleerd."
  overload: System.Web.HttpRequest.Unvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.Url
  id: Url
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: Url
  nameWithType: HttpRequest.Url
  fullName: System.Web.HttpRequest.Url
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u informatie over de URL van de huidige aanvraag."
  remarks: ''
  example:
  - "The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.  \n  \n [!code-cs[Classic HttpRequest.Url Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_34_1.cs)]\n [!code-vb[Classic HttpRequest.Url Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_34_1.vb)]"
  syntax:
    content: public Uri Url { get; }
    return:
      type: System.Uri
      description: "Een <xref:System.Uri>-object dat de URL van de huidige aanvraag bevat.</xref:System.Uri>"
  overload: System.Web.HttpRequest.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UrlReferrer
  id: UrlReferrer
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UrlReferrer
  nameWithType: HttpRequest.UrlReferrer
  fullName: System.Web.HttpRequest.UrlReferrer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u informatie over de URL van de vorige aanvraag van de client die is gekoppeld aan de huidige URL."
  remarks: ''
  example:
  - "The following code example displays the value of two properties of the URL that referred the client to the current application.  \n  \n [!code-cs[Classic HttpRequest.UrlReferrer Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_8_1.cs)]\n [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_8_1.vb)]"
  syntax:
    content: public Uri UrlReferrer { get; }
    return:
      type: System.Uri
      description: "Een <xref:System.Uri>object.</xref:System.Uri>"
  overload: System.Web.HttpRequest.UrlReferrer*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "De HTTP <xref uid=&quot;langword_csharp_Referer&quot; name=&quot;Referer&quot; href=&quot;&quot;> </xref> aanvraagheader is niet goed gevormd en kan niet worden geconverteerd naar een <xref:System.Uri>object.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Web.HttpRequest.UserAgent
  id: UserAgent
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpRequest.UserAgent
  fullName: System.Web.HttpRequest.UserAgent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u onbewerkte tekenreeks van de gebruikersagent van de clientbrowser."
  remarks: ''
  example:
  - "The following code example assigns the type identification of the requesting browser to a string variable.  \n  \n [!code-cs[Classic HttpRequest.UserAgent Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_26_1.cs)]\n [!code-vb[Classic HttpRequest.UserAgent Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_26_1.vb)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "Onbewerkte tekenreeks van de gebruikersagent van de clientbrowser."
  overload: System.Web.HttpRequest.UserAgent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UserHostAddress
  id: UserHostAddress
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserHostAddress
  nameWithType: HttpRequest.UserHostAddress
  fullName: System.Web.HttpRequest.UserHostAddress
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de host IP-adres van de externe client."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the UserHostAddress property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_9_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_9_1.aspx)]"
  syntax:
    content: public string UserHostAddress { get; }
    return:
      type: System.String
      description: "Het IP-adres van de externe client."
  overload: System.Web.HttpRequest.UserHostAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UserHostName
  id: UserHostName
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserHostName
  nameWithType: HttpRequest.UserHostName
  fullName: System.Web.HttpRequest.UserHostName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de DNS-naam van de externe client."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the UserHostName property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file. This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.  \n  \n [!code-vb[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/visualbasic/p-system.web.httprequest_11_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Sample1#7](~/add/codesnippet/csharp/p-system.web.httprequest_11_1.aspx)]"
  syntax:
    content: public string UserHostName { get; }
    return:
      type: System.String
      description: "De DNS-naam van de externe client."
  overload: System.Web.HttpRequest.UserHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.UserLanguages
  id: UserLanguages
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: UserLanguages
  nameWithType: HttpRequest.UserLanguages
  fullName: System.Web.HttpRequest.UserLanguages
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee wordt een gesorteerde string-matrix van het taalvoorkeuren client opgehaald."
  remarks: ''
  example:
  - "The following code example captures the multiple values returned by the UserLanguages property into a string array and writes each language name to a separate line of HTTP output.  \n  \n The language names are provided by the browser, and there is no definitive list of all possible codes.  Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as \"en-us\" for U.S. English and \"fr-ca\" for Canadian French.  \n  \n [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/add/codesnippet/visualbasic/p-system.web.httprequest_16_1.vb)]\n [!code-cs[Classic HttpRequest.UserLanguages Example#1](~/add/codesnippet/csharp/p-system.web.httprequest_16_1.cs)]"
  syntax:
    content: public string[] UserLanguages { get; }
    return:
      type: System.String[]
      description: "Een gesorteerde string-matrix van het taalvoorkeuren client, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als dit leeg is."
  overload: System.Web.HttpRequest.UserLanguages*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequest.ValidateInput
  id: ValidateInput
  parent: System.Web.HttpRequest
  langs:
  - csharp
  name: ValidateInput()
  nameWithType: HttpRequest.ValidateInput()
  fullName: System.Web.HttpRequest.ValidateInput()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Validatie uitgevoerd voor de verzamelingen die toegankelijk is via de <> </> *>, <> </> *>, en <xref:System.Web.HttpRequest.QueryString*>Eigenschappen.</xref:System.Web.HttpRequest.QueryString*>"
  remarks: "De <xref:System.Web.HttpRequest>klasse vlaggen validatie voor invoer gebruikt om te houden of validatie uitvoeren op de aanvraag verzamelingen toegankelijk via de <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, en <xref:System.Web.HttpRequest.QueryString%2A>Eigenschappen.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.Cookies%2A> </xref:System.Web.HttpRequest> De methode ValidateInput stelt deze vlaggen doet dat wanneer de get-accessors voor de <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, of <xref:System.Web.HttpRequest.QueryString%2A>eigenschap worden aangeroepen, validatie voor invoer wordt uitgevoerd.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.Cookies%2A> Validatie werkt door het controleren van alle ingevoerde gegevens op basis van een lijst met vastgelegde van mogelijk schadelijke gegevens.       Als de validatiefunctie is ingeschakeld door de pagina-instructie of de configuratie, deze methode is aangeroepen tijdens de pagina `ProcessRequest` verwerking fase. De methode ValidateInput kan door uw code worden aangeroepen als de validatiefunctie is niet ingeschakeld."
  syntax:
    content: public void ValidateInput ();
    parameters: []
  overload: System.Web.HttpRequest.ValidateInput*
  exceptions:
  - type: System.Web.HttpRequestValidationException
    commentId: T:System.Web.HttpRequestValidationException
    description: "Er is mogelijk schadelijke gegevens ontvangen van de client."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.Web.HttpRequestValidationException
  parent: System.Web
  isExternal: false
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException
  fullName: System.Web.HttpRequestValidationException
- uid: System.Web.HttpRequest.#ctor(System.String,System.String,System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpRequest(String,String,String)
  nameWithType: HttpRequest.HttpRequest(String,String,String)
  fullName: System.Web.HttpRequest.HttpRequest(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpRequest.Abort
  parent: System.Web.HttpRequest
  isExternal: false
  name: Abort()
  nameWithType: HttpRequest.Abort()
  fullName: System.Web.HttpRequest.Abort()
- uid: System.Web.HttpRequest.AcceptTypes
  parent: System.Web.HttpRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpRequest.AcceptTypes
  fullName: System.Web.HttpRequest.AcceptTypes
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest.AnonymousID
  parent: System.Web.HttpRequest
  isExternal: false
  name: AnonymousID
  nameWithType: HttpRequest.AnonymousID
  fullName: System.Web.HttpRequest.AnonymousID
- uid: System.Web.HttpRequest.ApplicationPath
  parent: System.Web.HttpRequest
  isExternal: false
  name: ApplicationPath
  nameWithType: HttpRequest.ApplicationPath
  fullName: System.Web.HttpRequest.ApplicationPath
- uid: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
  parent: System.Web.HttpRequest
  isExternal: false
  name: AppRelativeCurrentExecutionFilePath
  nameWithType: HttpRequest.AppRelativeCurrentExecutionFilePath
  fullName: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath
- uid: System.Web.HttpRequest.BinaryRead(System.Int32)
  parent: System.Web.HttpRequest
  isExternal: false
  name: BinaryRead(Int32)
  nameWithType: HttpRequest.BinaryRead(Int32)
  fullName: System.Web.HttpRequest.BinaryRead(Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpRequest.Browser
  parent: System.Web.HttpRequest
  isExternal: false
  name: Browser
  nameWithType: HttpRequest.Browser
  fullName: System.Web.HttpRequest.Browser
- uid: System.Web.HttpBrowserCapabilities
  parent: System.Web
  isExternal: false
  name: HttpBrowserCapabilities
  nameWithType: HttpBrowserCapabilities
  fullName: System.Web.HttpBrowserCapabilities
- uid: System.Web.HttpRequest.ClientCertificate
  parent: System.Web.HttpRequest
  isExternal: false
  name: ClientCertificate
  nameWithType: HttpRequest.ClientCertificate
  fullName: System.Web.HttpRequest.ClientCertificate
- uid: System.Web.HttpClientCertificate
  parent: System.Web
  isExternal: false
  name: HttpClientCertificate
  nameWithType: HttpClientCertificate
  fullName: System.Web.HttpClientCertificate
- uid: System.Web.HttpRequest.ContentEncoding
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpRequest.ContentEncoding
  fullName: System.Web.HttpRequest.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.HttpRequest.ContentLength
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentLength
  nameWithType: HttpRequest.ContentLength
  fullName: System.Web.HttpRequest.ContentLength
- uid: System.Web.HttpRequest.ContentType
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpRequest.ContentType
  fullName: System.Web.HttpRequest.ContentType
- uid: System.Web.HttpRequest.Cookies
  parent: System.Web.HttpRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpRequest.Cookies
  fullName: System.Web.HttpRequest.Cookies
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.Web.HttpRequest.CurrentExecutionFilePath
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePath
  nameWithType: HttpRequest.CurrentExecutionFilePath
  fullName: System.Web.HttpRequest.CurrentExecutionFilePath
- uid: System.Web.HttpRequest.CurrentExecutionFilePathExtension
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePathExtension
  nameWithType: HttpRequest.CurrentExecutionFilePathExtension
  fullName: System.Web.HttpRequest.CurrentExecutionFilePathExtension
- uid: System.Web.HttpRequest.FilePath
  parent: System.Web.HttpRequest
  isExternal: false
  name: FilePath
  nameWithType: HttpRequest.FilePath
  fullName: System.Web.HttpRequest.FilePath
- uid: System.Web.HttpRequest.Files
  parent: System.Web.HttpRequest
  isExternal: false
  name: Files
  nameWithType: HttpRequest.Files
  fullName: System.Web.HttpRequest.Files
- uid: System.Web.HttpFileCollection
  parent: System.Web
  isExternal: false
  name: HttpFileCollection
  nameWithType: HttpFileCollection
  fullName: System.Web.HttpFileCollection
- uid: System.Web.HttpRequest.Filter
  parent: System.Web.HttpRequest
  isExternal: false
  name: Filter
  nameWithType: HttpRequest.Filter
  fullName: System.Web.HttpRequest.Filter
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.HttpRequest.Form
  parent: System.Web.HttpRequest
  isExternal: false
  name: Form
  nameWithType: HttpRequest.Form
  fullName: System.Web.HttpRequest.Form
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpRequest.GetBufferedInputStream
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferedInputStream()
  nameWithType: HttpRequest.GetBufferedInputStream()
  fullName: System.Web.HttpRequest.GetBufferedInputStream()
- uid: System.Web.HttpRequest.GetBufferlessInputStream
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferlessInputStream()
  nameWithType: HttpRequest.GetBufferlessInputStream()
  fullName: System.Web.HttpRequest.GetBufferlessInputStream()
- uid: System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferlessInputStream(Boolean)
  nameWithType: HttpRequest.GetBufferlessInputStream(Boolean)
  fullName: System.Web.HttpRequest.GetBufferlessInputStream(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpRequest.Headers
  parent: System.Web.HttpRequest
  isExternal: false
  name: Headers
  nameWithType: HttpRequest.Headers
  fullName: System.Web.HttpRequest.Headers
- uid: System.Web.HttpRequest.HttpChannelBinding
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpChannelBinding
  nameWithType: HttpRequest.HttpChannelBinding
  fullName: System.Web.HttpRequest.HttpChannelBinding
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: true
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.Web.HttpRequest.HttpMethod
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpRequest.HttpMethod
  fullName: System.Web.HttpRequest.HttpMethod
- uid: System.Web.HttpRequest.InputStream
  parent: System.Web.HttpRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpRequest.InputStream
  fullName: System.Web.HttpRequest.InputStream
- uid: System.Web.HttpRequest.InsertEntityBody
  parent: System.Web.HttpRequest
  isExternal: false
  name: InsertEntityBody()
  nameWithType: HttpRequest.InsertEntityBody()
  fullName: System.Web.HttpRequest.InsertEntityBody()
- uid: System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpRequest
  isExternal: false
  name: InsertEntityBody(Byte[],Int32,Int32)
  nameWithType: HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
  fullName: System.Web.HttpRequest.InsertEntityBody(Byte[],Int32,Int32)
- uid: System.Web.HttpRequest.IsAuthenticated
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpRequest.IsAuthenticated
  fullName: System.Web.HttpRequest.IsAuthenticated
- uid: System.Web.HttpRequest.IsLocal
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpRequest.IsLocal
  fullName: System.Web.HttpRequest.IsLocal
- uid: System.Web.HttpRequest.IsSecureConnection
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpRequest.IsSecureConnection
  fullName: System.Web.HttpRequest.IsSecureConnection
- uid: System.Web.HttpRequest.Item(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: Item(String)
  nameWithType: HttpRequest.Item(String)
  fullName: System.Web.HttpRequest.Item(String)
- uid: System.Web.HttpRequest.LogonUserIdentity
  parent: System.Web.HttpRequest
  isExternal: false
  name: LogonUserIdentity
  nameWithType: HttpRequest.LogonUserIdentity
  fullName: System.Web.HttpRequest.LogonUserIdentity
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.Web.HttpRequest.MapImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapImageCoordinates(String)
  nameWithType: HttpRequest.MapImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapImageCoordinates(String)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest.MapPath(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapPath(String)
  nameWithType: HttpRequest.MapPath(String)
  fullName: System.Web.HttpRequest.MapPath(String)
- uid: System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapPath(String,String,Boolean)
  nameWithType: HttpRequest.MapPath(String,String,Boolean)
  fullName: System.Web.HttpRequest.MapPath(String,String,Boolean)
- uid: System.Web.HttpRequest.MapRawImageCoordinates(System.String)
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapRawImageCoordinates(String)
  nameWithType: HttpRequest.MapRawImageCoordinates(String)
  fullName: System.Web.HttpRequest.MapRawImageCoordinates(String)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest.Params
  parent: System.Web.HttpRequest
  isExternal: false
  name: Params
  nameWithType: HttpRequest.Params
  fullName: System.Web.HttpRequest.Params
- uid: System.Web.HttpRequest.Path
  parent: System.Web.HttpRequest
  isExternal: false
  name: Path
  nameWithType: HttpRequest.Path
  fullName: System.Web.HttpRequest.Path
- uid: System.Web.HttpRequest.PathInfo
  parent: System.Web.HttpRequest
  isExternal: false
  name: PathInfo
  nameWithType: HttpRequest.PathInfo
  fullName: System.Web.HttpRequest.PathInfo
- uid: System.Web.HttpRequest.PhysicalApplicationPath
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalApplicationPath
  nameWithType: HttpRequest.PhysicalApplicationPath
  fullName: System.Web.HttpRequest.PhysicalApplicationPath
- uid: System.Web.HttpRequest.PhysicalPath
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalPath
  nameWithType: HttpRequest.PhysicalPath
  fullName: System.Web.HttpRequest.PhysicalPath
- uid: System.Web.HttpRequest.QueryString
  parent: System.Web.HttpRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpRequest.QueryString
  fullName: System.Web.HttpRequest.QueryString
- uid: System.Web.HttpRequest.RawUrl
  parent: System.Web.HttpRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpRequest.RawUrl
  fullName: System.Web.HttpRequest.RawUrl
- uid: System.Web.HttpRequest.ReadEntityBodyMode
  parent: System.Web.HttpRequest
  isExternal: false
  name: ReadEntityBodyMode
  nameWithType: HttpRequest.ReadEntityBodyMode
  fullName: System.Web.HttpRequest.ReadEntityBodyMode
- uid: System.Web.ReadEntityBodyMode
  parent: System.Web
  isExternal: false
  name: ReadEntityBodyMode
  nameWithType: ReadEntityBodyMode
  fullName: System.Web.ReadEntityBodyMode
- uid: System.Web.HttpRequest.RequestContext
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestContext
  nameWithType: HttpRequest.RequestContext
  fullName: System.Web.HttpRequest.RequestContext
- uid: System.Web.Routing.RequestContext
  parent: System.Web.Routing
  isExternal: true
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.Web.Routing.RequestContext
- uid: System.Web.HttpRequest.RequestType
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestType
  nameWithType: HttpRequest.RequestType
  fullName: System.Web.HttpRequest.RequestType
- uid: System.Web.HttpRequest.SaveAs(System.String,System.Boolean)
  parent: System.Web.HttpRequest
  isExternal: false
  name: SaveAs(String,Boolean)
  nameWithType: HttpRequest.SaveAs(String,Boolean)
  fullName: System.Web.HttpRequest.SaveAs(String,Boolean)
- uid: System.Web.HttpRequest.ServerVariables
  parent: System.Web.HttpRequest
  isExternal: false
  name: ServerVariables
  nameWithType: HttpRequest.ServerVariables
  fullName: System.Web.HttpRequest.ServerVariables
- uid: System.Web.HttpRequest.TimedOutToken
  parent: System.Web.HttpRequest
  isExternal: false
  name: TimedOutToken
  nameWithType: HttpRequest.TimedOutToken
  fullName: System.Web.HttpRequest.TimedOutToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.HttpRequest.TlsTokenBindingInfo
  parent: System.Web.HttpRequest
  isExternal: false
  name: TlsTokenBindingInfo
  nameWithType: HttpRequest.TlsTokenBindingInfo
  fullName: System.Web.HttpRequest.TlsTokenBindingInfo
- uid: System.Web.ITlsTokenBindingInfo
  parent: System.Web
  isExternal: false
  name: ITlsTokenBindingInfo
  nameWithType: ITlsTokenBindingInfo
  fullName: System.Web.ITlsTokenBindingInfo
- uid: System.Web.HttpRequest.TotalBytes
  parent: System.Web.HttpRequest
  isExternal: false
  name: TotalBytes
  nameWithType: HttpRequest.TotalBytes
  fullName: System.Web.HttpRequest.TotalBytes
- uid: System.Web.HttpRequest.Unvalidated
  parent: System.Web.HttpRequest
  isExternal: false
  name: Unvalidated
  nameWithType: HttpRequest.Unvalidated
  fullName: System.Web.HttpRequest.Unvalidated
- uid: System.Web.UnvalidatedRequestValues
  parent: System.Web
  isExternal: false
  name: UnvalidatedRequestValues
  nameWithType: UnvalidatedRequestValues
  fullName: System.Web.UnvalidatedRequestValues
- uid: System.Web.HttpRequest.Url
  parent: System.Web.HttpRequest
  isExternal: false
  name: Url
  nameWithType: HttpRequest.Url
  fullName: System.Web.HttpRequest.Url
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.HttpRequest.UrlReferrer
  parent: System.Web.HttpRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpRequest.UrlReferrer
  fullName: System.Web.HttpRequest.UrlReferrer
- uid: System.Web.HttpRequest.UserAgent
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpRequest.UserAgent
  fullName: System.Web.HttpRequest.UserAgent
- uid: System.Web.HttpRequest.UserHostAddress
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpRequest.UserHostAddress
  fullName: System.Web.HttpRequest.UserHostAddress
- uid: System.Web.HttpRequest.UserHostName
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpRequest.UserHostName
  fullName: System.Web.HttpRequest.UserHostName
- uid: System.Web.HttpRequest.UserLanguages
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpRequest.UserLanguages
  fullName: System.Web.HttpRequest.UserLanguages
- uid: System.Web.HttpRequest.ValidateInput
  parent: System.Web.HttpRequest
  isExternal: false
  name: ValidateInput()
  nameWithType: HttpRequest.ValidateInput()
  fullName: System.Web.HttpRequest.ValidateInput()
- uid: System.Web.HttpRequest.#ctor*
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest.HttpRequest
- uid: System.Web.HttpRequest.Abort*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Abort
  nameWithType: HttpRequest.Abort
- uid: System.Web.HttpRequest.AcceptTypes*
  parent: System.Web.HttpRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpRequest.AcceptTypes
- uid: System.Web.HttpRequest.AnonymousID*
  parent: System.Web.HttpRequest
  isExternal: false
  name: AnonymousID
  nameWithType: HttpRequest.AnonymousID
- uid: System.Web.HttpRequest.ApplicationPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ApplicationPath
  nameWithType: HttpRequest.ApplicationPath
- uid: System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: AppRelativeCurrentExecutionFilePath
  nameWithType: HttpRequest.AppRelativeCurrentExecutionFilePath
- uid: System.Web.HttpRequest.BinaryRead*
  parent: System.Web.HttpRequest
  isExternal: false
  name: BinaryRead
  nameWithType: HttpRequest.BinaryRead
- uid: System.Web.HttpRequest.Browser*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Browser
  nameWithType: HttpRequest.Browser
- uid: System.Web.HttpRequest.ClientCertificate*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ClientCertificate
  nameWithType: HttpRequest.ClientCertificate
- uid: System.Web.HttpRequest.ContentEncoding*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpRequest.ContentEncoding
- uid: System.Web.HttpRequest.ContentLength*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentLength
  nameWithType: HttpRequest.ContentLength
- uid: System.Web.HttpRequest.ContentType*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpRequest.ContentType
- uid: System.Web.HttpRequest.Cookies*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpRequest.Cookies
- uid: System.Web.HttpRequest.CurrentExecutionFilePath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePath
  nameWithType: HttpRequest.CurrentExecutionFilePath
- uid: System.Web.HttpRequest.CurrentExecutionFilePathExtension*
  parent: System.Web.HttpRequest
  isExternal: false
  name: CurrentExecutionFilePathExtension
  nameWithType: HttpRequest.CurrentExecutionFilePathExtension
- uid: System.Web.HttpRequest.FilePath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: FilePath
  nameWithType: HttpRequest.FilePath
- uid: System.Web.HttpRequest.Files*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Files
  nameWithType: HttpRequest.Files
- uid: System.Web.HttpRequest.Filter*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Filter
  nameWithType: HttpRequest.Filter
- uid: System.Web.HttpRequest.Form*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Form
  nameWithType: HttpRequest.Form
- uid: System.Web.HttpRequest.GetBufferedInputStream*
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferedInputStream
  nameWithType: HttpRequest.GetBufferedInputStream
- uid: System.Web.HttpRequest.GetBufferlessInputStream*
  parent: System.Web.HttpRequest
  isExternal: false
  name: GetBufferlessInputStream
  nameWithType: HttpRequest.GetBufferlessInputStream
- uid: System.Web.HttpRequest.Headers*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Headers
  nameWithType: HttpRequest.Headers
- uid: System.Web.HttpRequest.HttpChannelBinding*
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpChannelBinding
  nameWithType: HttpRequest.HttpChannelBinding
- uid: System.Web.HttpRequest.HttpMethod*
  parent: System.Web.HttpRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpRequest.HttpMethod
- uid: System.Web.HttpRequest.InputStream*
  parent: System.Web.HttpRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpRequest.InputStream
- uid: System.Web.HttpRequest.InsertEntityBody*
  parent: System.Web.HttpRequest
  isExternal: false
  name: InsertEntityBody
  nameWithType: HttpRequest.InsertEntityBody
- uid: System.Web.HttpRequest.IsAuthenticated*
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpRequest.IsAuthenticated
- uid: System.Web.HttpRequest.IsLocal*
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpRequest.IsLocal
- uid: System.Web.HttpRequest.IsSecureConnection*
  parent: System.Web.HttpRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpRequest.IsSecureConnection
- uid: System.Web.HttpRequest.Item*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Item
  nameWithType: HttpRequest.Item
- uid: System.Web.HttpRequest.LogonUserIdentity*
  parent: System.Web.HttpRequest
  isExternal: false
  name: LogonUserIdentity
  nameWithType: HttpRequest.LogonUserIdentity
- uid: System.Web.HttpRequest.MapImageCoordinates*
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapImageCoordinates
  nameWithType: HttpRequest.MapImageCoordinates
- uid: System.Web.HttpRequest.MapPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapPath
  nameWithType: HttpRequest.MapPath
- uid: System.Web.HttpRequest.MapRawImageCoordinates*
  parent: System.Web.HttpRequest
  isExternal: false
  name: MapRawImageCoordinates
  nameWithType: HttpRequest.MapRawImageCoordinates
- uid: System.Web.HttpRequest.Params*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Params
  nameWithType: HttpRequest.Params
- uid: System.Web.HttpRequest.Path*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Path
  nameWithType: HttpRequest.Path
- uid: System.Web.HttpRequest.PathInfo*
  parent: System.Web.HttpRequest
  isExternal: false
  name: PathInfo
  nameWithType: HttpRequest.PathInfo
- uid: System.Web.HttpRequest.PhysicalApplicationPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalApplicationPath
  nameWithType: HttpRequest.PhysicalApplicationPath
- uid: System.Web.HttpRequest.PhysicalPath*
  parent: System.Web.HttpRequest
  isExternal: false
  name: PhysicalPath
  nameWithType: HttpRequest.PhysicalPath
- uid: System.Web.HttpRequest.QueryString*
  parent: System.Web.HttpRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpRequest.QueryString
- uid: System.Web.HttpRequest.RawUrl*
  parent: System.Web.HttpRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpRequest.RawUrl
- uid: System.Web.HttpRequest.ReadEntityBodyMode*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ReadEntityBodyMode
  nameWithType: HttpRequest.ReadEntityBodyMode
- uid: System.Web.HttpRequest.RequestContext*
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestContext
  nameWithType: HttpRequest.RequestContext
- uid: System.Web.HttpRequest.RequestType*
  parent: System.Web.HttpRequest
  isExternal: false
  name: RequestType
  nameWithType: HttpRequest.RequestType
- uid: System.Web.HttpRequest.SaveAs*
  parent: System.Web.HttpRequest
  isExternal: false
  name: SaveAs
  nameWithType: HttpRequest.SaveAs
- uid: System.Web.HttpRequest.ServerVariables*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ServerVariables
  nameWithType: HttpRequest.ServerVariables
- uid: System.Web.HttpRequest.TimedOutToken*
  parent: System.Web.HttpRequest
  isExternal: false
  name: TimedOutToken
  nameWithType: HttpRequest.TimedOutToken
- uid: System.Web.HttpRequest.TlsTokenBindingInfo*
  parent: System.Web.HttpRequest
  isExternal: false
  name: TlsTokenBindingInfo
  nameWithType: HttpRequest.TlsTokenBindingInfo
- uid: System.Web.HttpRequest.TotalBytes*
  parent: System.Web.HttpRequest
  isExternal: false
  name: TotalBytes
  nameWithType: HttpRequest.TotalBytes
- uid: System.Web.HttpRequest.Unvalidated*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Unvalidated
  nameWithType: HttpRequest.Unvalidated
- uid: System.Web.HttpRequest.Url*
  parent: System.Web.HttpRequest
  isExternal: false
  name: Url
  nameWithType: HttpRequest.Url
- uid: System.Web.HttpRequest.UrlReferrer*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpRequest.UrlReferrer
- uid: System.Web.HttpRequest.UserAgent*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpRequest.UserAgent
- uid: System.Web.HttpRequest.UserHostAddress*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpRequest.UserHostAddress
- uid: System.Web.HttpRequest.UserHostName*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpRequest.UserHostName
- uid: System.Web.HttpRequest.UserLanguages*
  parent: System.Web.HttpRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpRequest.UserLanguages
- uid: System.Web.HttpRequest.ValidateInput*
  parent: System.Web.HttpRequest
  isExternal: false
  name: ValidateInput
  nameWithType: HttpRequest.ValidateInput
