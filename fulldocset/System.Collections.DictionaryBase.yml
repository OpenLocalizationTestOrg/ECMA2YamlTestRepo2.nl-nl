### YamlMime:ManagedReference
items:
- uid: System.Collections.DictionaryBase
  id: DictionaryBase
  children:
  - System.Collections.DictionaryBase.#ctor
  - System.Collections.DictionaryBase.Clear
  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  - System.Collections.DictionaryBase.Count
  - System.Collections.DictionaryBase.Dictionary
  - System.Collections.DictionaryBase.GetEnumerator
  - System.Collections.DictionaryBase.InnerHashtable
  - System.Collections.DictionaryBase.OnClear
  - System.Collections.DictionaryBase.OnClearComplete
  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: DictionaryBase
  nameWithType: DictionaryBase
  fullName: System.Collections.DictionaryBase
  type: Class
  summary: "Biedt de <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> basisklasse voor een sterk getypeerde verzameling van sleutel-waardeparen."
  remarks: "De instructie foreach van de taal C# (voor elk in Visual Basic) retourneert een object van het type van de elementen in de verzameling. Omdat elk element van de DictionaryBase een sleutel-waardepaar is, is het elementtype niet op het type van de sleutel of het type van de waarde. In plaats daarvan is het elementtype <xref:System.Collections.DictionaryEntry>.</xref:System.Collections.DictionaryEntry>       De `foreach` -instructie is een wrapper rond de enumerator waarmee alleen lezen van niet schrijven naar de verzameling.      > [!NOTE] > Omdat sleutels kunnen worden overgenomen en hun gedrag is gewijzigd, hun absolute uniekheid niet kan worden gegarandeerd door vergelijkingen met de <xref:System.Type.Equals%2A>methode.</xref:System.Type.Equals%2A>"
  example:
  - "The following code example implements the DictionaryBase class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/t-system.collections.dic_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/t-system.collections.dic_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/t-system.collections.dic_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DictionaryBase : System.Collections.IDictionary
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.#ctor
  id: '#ctor'
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: DictionaryBase()
  nameWithType: DictionaryBase.DictionaryBase()
  fullName: System.Collections.DictionaryBase.DictionaryBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> klasse."
  remarks: "Deze constructor is een bewerking O(1)."
  syntax:
    content: protected DictionaryBase ();
    parameters: []
  overload: System.Collections.DictionaryBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.Clear
  id: Clear
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: Clear()
  nameWithType: DictionaryBase.Clear()
  fullName: System.Collections.DictionaryBase.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee wist u de inhoud van de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "<xref:System.Collections.DictionaryBase.Count%2A>is ingesteld op nul en verwijzingen naar andere objecten in de elementen van de verzameling ook worden vrijgegeven.</xref:System.Collections.DictionaryBase.Count%2A>       Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</xref:System.Collections.DictionaryBase.Count%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.DictionaryBase.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DictionaryBase.CopyTo(Array,Int32)
  fullName: System.Collections.DictionaryBase.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Kopieert de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> elementen op een eendimensionale <xref:System.Array>bij de opgegeven index.</xref:System.Array>"
  remarks: "De elementen zijn gekopieerd naar de <xref:System.Array>in dezelfde volgorde als waarin de enumerator de <xref:System.Collections.DictionaryBase>.</xref:System.Collections.DictionaryBase> doorloopt</xref:System.Array>       Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</xref:System.Collections.DictionaryBase.Count%2A>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "De eendimensionale <xref:System.Array>die het doel van de <xref:System.Collections.DictionaryEntry>objecten die zijn gekopieerd uit de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar.</xref:System.Collections.DictionaryEntry> </xref:System.Array> De <xref:System.Array>moet hebben op nul gebaseerde indexering.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index in `array` welke kopiÃ«ren begint."
  overload: System.Collections.DictionaryBase.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>is kleiner dan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>is multidimensionaal.       - of - het aantal elementen in de bron <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> groter is dan de beschikbare ruimte vanaf <code>index</code> aan het einde van de bestemming <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Het type van de bron <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> kan niet automatisch worden geconverteerd naar het type van de bestemming <code> array </code>."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.Count
  id: Count
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: Count
  nameWithType: DictionaryBase.Count
  fullName: System.Collections.DictionaryBase.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee wordt het aantal elementen in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal elementen in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  overload: System.Collections.DictionaryBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.Dictionary
  id: Dictionary
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: Dictionary
  nameWithType: DictionaryBase.Dictionary
  fullName: System.Collections.DictionaryBase.Dictionary
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee haalt u de lijst van elementen in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De methoden op * worden aangeroepen op het exemplaar dat wordt geretourneerd door de eigenschap woordenlijst, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A>       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/p-system.collections.dic_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/p-system.collections.dic_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/p-system.collections.dic_1.vb)]"
  syntax:
    content: protected System.Collections.IDictionary Dictionary { get; }
    return:
      type: System.Collections.IDictionary
      description: "Een <xref:System.Collections.IDictionary>die vertegenwoordigt de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar zelf.</xref:System.Collections.IDictionary>"
  overload: System.Collections.DictionaryBase.Dictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DictionaryBase.GetEnumerator()
  fullName: System.Collections.DictionaryBase.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Retourneert een <xref:System.Collections.IDictionaryEnumerator>die doorloopt de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "De `foreach` -instructie van de taal C# (`for each` in Visual Basic) de complexiteit van de opsommingen worden verborgen.  Daarom kan het gebruik `foreach` wordt aanbevolen, in plaats van rechtstreeks bewerken van de enumerator.       Enumerators kunnen worden gebruikt om de gegevens in de verzameling te lezen, maar ze kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.       In eerste instantie bevindt de enumerator zich vÃ³Ã³r het eerste element in de verzameling. <xref:System.Collections.IEnumerator.Reset%2A>brengt ook de enumerator terug naar deze positie.</xref:System.Collections.IEnumerator.Reset%2A>  Op deze positie <xref:System.Collections.IEnumerator.Current%2A>is niet gedefinieerd.</xref:System.Collections.IEnumerator.Current%2A> U moet daarom aanroepen <xref:System.Collections.IEnumerator.MoveNext%2A>om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>retourneert de hetzelfde object totdat de <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>wordt aangeroepen.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Hiermee stelt u <xref:System.Collections.IEnumerator.Current%2A>naar het volgende element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Als <xref:System.Collections.IEnumerator.MoveNext%2A>geeft het einde van de verzameling, de enumerator bevindt zich na het laatste element in de verzameling en <xref:System.Collections.IEnumerator.MoveNext%2A>retourneert `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Wanneer de enumerator is op deze positie, volgende aanroepen naar <xref:System.Collections.IEnumerator.MoveNext%2A>ook retourneren `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Als de laatste aanroep aan <xref:System.Collections.IEnumerator.MoveNext%2A>geretourneerd `false`, <xref:System.Collections.IEnumerator.Current%2A>is niet gedefinieerd.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>U kunt naar het eerste element van de verzameling opnieuw aanroepen <xref:System.Collections.IEnumerator.Reset%2A>gevolgd door <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> instellen       Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, de enumerator is permanent ongeldig en het gedrag is niet gedefinieerd.       De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom intrinsiek geen procedure thread-safe.  Om te garanderen thread veiligheid tijdens de opsomming, vergrendelt u de verzameling gedurende de volledige inventarisatie.  Als u wilt toestaan dat de verzameling worden geopend door meerdere threads voor lezen en schrijven, moet u uw eigen synchronisatie implementeren.       Deze methode is een bewerking O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_3_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_3_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_3_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Een <xref:System.Collections.IDictionaryEnumerator>voor de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.DictionaryBase.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.InnerHashtable
  id: InnerHashtable
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: InnerHashtable
  nameWithType: DictionaryBase.InnerHashtable
  fullName: System.Collections.DictionaryBase.InnerHashtable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee haalt u de lijst van elementen in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de eigenschap InnerHashtable.</xref:System.Collections.DictionaryBase.Dictionary%2A>       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: protected System.Collections.Hashtable InnerHashtable { get; }
    return:
      type: System.Collections.Hashtable
      description: "Een <xref href=&quot;System.Collections.Hashtable&quot;> </xref> die vertegenwoordigt de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar zelf."
  overload: System.Collections.DictionaryBase.InnerHashtable*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnClear
  id: OnClear
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnClear()
  nameWithType: DictionaryBase.OnClear()
  fullName: System.Collections.DictionaryBase.OnClear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Aanvullende aangepaste processen worden uitgevoerd voordat het wissen van de inhoud van de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De standaardimplementatie van deze methode is bedoeld om te worden genegeerd door een afgeleide klasse moet een bepaalde actie uitvoeren voordat de verzameling is uitgeschakeld.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  syntax:
    content: protected virtual void OnClear ();
    parameters: []
  overload: System.Collections.DictionaryBase.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnClearComplete
  id: OnClearComplete
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: DictionaryBase.OnClearComplete()
  fullName: System.Collections.DictionaryBase.OnClearComplete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Aanvullende aangepaste processen uitvoert na het uitschakelen van de inhoud van de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De standaardimplementatie van deze methode is bedoeld om te worden genegeerd door een afgeleide klasse uit te voeren van een bepaalde actie nadat de verzameling is uitgeschakeld.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  syntax:
    content: protected virtual void OnClearComplete ();
    parameters: []
  overload: System.Collections.DictionaryBase.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  id: OnGet(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnGet(Object,Object)
  nameWithType: DictionaryBase.OnGet(Object,Object)
  fullName: System.Collections.DictionaryBase.OnGet(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Opgehaald van het element met de opgegeven sleutel en waarde in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De standaardimplementatie van deze methode retourneert `currentValue`. Het is bedoeld om te worden genegeerd door een afgeleide klasse moet extra actie uitvoeren als het opgegeven element is opgehaald.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  syntax:
    content: protected virtual object OnGet (object key, object currentValue);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element om op te halen."
    - id: currentValue
      type: System.Object
      description: "De huidige waarde van het element gekoppeld `key`."
    return:
      type: System.Object
      description: "Een <xref:System.Object>met het element met de opgegeven sleutel en waarde.</xref:System.Object>"
  overload: System.Collections.DictionaryBase.OnGet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  id: OnInsert(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnInsert(Object,Object)
  nameWithType: DictionaryBase.OnInsert(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsert(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Aanvullende aangepaste processen worden uitgevoerd voordat het invoegen van een nieuw element in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De standaardimplementatie van deze methode is bedoeld om te worden genegeerd door een afgeleide klasse een actie uitgevoerd voordat het opgegeven element is ingevoegd.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_0_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_0_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_0_1.vb)]"
  syntax:
    content: protected virtual void OnInsert (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element om in te voegen."
    - id: value
      type: System.Object
      description: "De waarde van het element om in te voegen."
  overload: System.Collections.DictionaryBase.OnInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  id: OnInsertComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnInsertComplete(Object,Object)
  nameWithType: DictionaryBase.OnInsertComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsertComplete(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Aanvullende aangepaste processen uitvoert na het invoegen van een nieuw element in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De standaardimplementatie van deze methode is bedoeld om te worden genegeerd door een afgeleide klasse een actie uitgevoerd nadat het opgegeven element is ingevoegd.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  syntax:
    content: protected virtual void OnInsertComplete (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element om in te voegen."
    - id: value
      type: System.Object
      description: "De waarde van het element om in te voegen."
  overload: System.Collections.DictionaryBase.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  id: OnRemove(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnRemove(Object,Object)
  nameWithType: DictionaryBase.OnRemove(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemove(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Aanvullende aangepaste processen worden uitgevoerd voordat het verwijderen van een element vanuit het <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De standaardimplementatie van deze methode is bedoeld om te worden genegeerd door een afgeleide klasse een actie uitgevoerd voordat het opgegeven element is verwijderd.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_1_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_1_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_1_1.vb)]"
  syntax:
    content: protected virtual void OnRemove (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element te verwijderen."
    - id: value
      type: System.Object
      description: "De waarde van het element te verwijderen."
  overload: System.Collections.DictionaryBase.OnRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  id: OnRemoveComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnRemoveComplete(Object,Object)
  nameWithType: DictionaryBase.OnRemoveComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemoveComplete(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Aanvullende aangepaste processen uitvoert na het verwijderen van een element vanuit het <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De standaardimplementatie van deze methode is bedoeld om te worden genegeerd door een afgeleide klasse een actie uitgevoerd nadat het opgegeven element is verwijderd.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  syntax:
    content: protected virtual void OnRemoveComplete (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element te verwijderen."
    - id: value
      type: System.Object
      description: "De waarde van het element te verwijderen."
  overload: System.Collections.DictionaryBase.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  id: OnSet(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnSet(Object,Object,Object)
  nameWithType: DictionaryBase.OnSet(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSet(Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Aanvullende aangepaste processen worden uitgevoerd voordat het instellen van een waarde de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De standaardimplementatie van deze methode is bedoeld om te worden genegeerd door een afgeleide klasse moet een bepaalde actie uitvoeren voordat het opgegeven element is ingesteld.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/576c3070-5898-49fc-92c2-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/576c3070-5898-49fc-92c2-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/576c3070-5898-49fc-92c2-_1.vb)]"
  syntax:
    content: protected virtual void OnSet (object key, object oldValue, object newValue);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element vinden."
    - id: oldValue
      type: System.Object
      description: "De oude waarde van het element gekoppeld `key`."
    - id: newValue
      type: System.Object
      description: "De nieuwe waarde van het element gekoppeld `key`."
  overload: System.Collections.DictionaryBase.OnSet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  id: OnSetComplete(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnSetComplete(Object,Object,Object)
  nameWithType: DictionaryBase.OnSetComplete(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSetComplete(Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Aanvullende aangepaste processen uitvoert na het instellen van een waarde de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> exemplaar."
  remarks: "De standaardimplementatie van deze methode is bedoeld om te worden genegeerd door een afgeleide klasse een actie uitgevoerd nadat het opgegeven element is ingesteld.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  syntax:
    content: protected virtual void OnSetComplete (object key, object oldValue, object newValue);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element vinden."
    - id: oldValue
      type: System.Object
      description: "De oude waarde van het element gekoppeld `key`."
    - id: newValue
      type: System.Object
      description: "De nieuwe waarde van het element gekoppeld `key`."
  overload: System.Collections.DictionaryBase.OnSetComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  id: OnValidate(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnValidate(Object,Object)
  nameWithType: DictionaryBase.OnValidate(Object,Object)
  fullName: System.Collections.DictionaryBase.OnValidate(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Aanvullende aangepaste processen voert bij het valideren van het element met de opgegeven sleutel en waarde."
  remarks: "De standaardimplementatie van deze methode is bedoeld om te worden genegeerd door een afgeleide klasse een actie uitgevoerd tijdens de validatie van het opgegeven element.       De methoden op * worden aangeroepen alleen op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.Dictionary%2A>eigenschap, maar niet op het exemplaar dat wordt geretourneerd door de <xref:System.Collections.DictionaryBase.InnerHashtable%2A>eigenschap.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       De standaardimplementatie van deze methode is een bewerking O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_2_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_2_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_2_1.vb)]"
  syntax:
    content: protected virtual void OnValidate (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element te valideren."
    - id: value
      type: System.Object
      description: "De waarde van het element te valideren."
  overload: System.Collections.DictionaryBase.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een waarde die aangeeft of de toegang tot een <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> -object wordt gesynchroniseerd (thread-veilig)."
  remarks: "Een <xref:System.Collections.DictionaryBase>object is niet gesynchroniseerd.</xref:System.Collections.DictionaryBase> Afgeleide klassen kunnen bieden een gesynchroniseerde versie van de <xref:System.Collections.DictionaryBase>klasse met behulp van de <xref:System.Collections.ICollection.SyncRoot%2A>eigenschap.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.DictionaryBase>       Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cs[System.Collections.DictionaryBase#3](~/add/codesnippet/csharp/f850b608-c07e-40f9-af58-_1.cs)]\n [!code-cpp[System.Collections.DictionaryBase#3](~/add/codesnippet/cpp/f850b608-c07e-40f9-af58-_1.cpp)]\n [!code-vb[System.Collections.DictionaryBase#3](~/add/codesnippet/visualbasic/f850b608-c07e-40f9-af58-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de toegang tot de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> -object wordt gesynchroniseerd (thread-safe); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een object dat kan worden gebruikt voor het synchroniseren van toegang tot een <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> object."
  remarks: "Afgeleide klassen kunnen bieden hun eigen gesynchroniseerde versie van de <xref:System.Collections.DictionaryBase>klasse met behulp van de <xref:System.Collections.ICollection.SyncRoot%2A>eigenschap.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.DictionaryBase> De code voor het synchroniseren moet bewerkingen uitvoeren op de <xref:System.Collections.ICollection.SyncRoot%2A>eigenschap van de <xref:System.Collections.DictionaryBase>object, niet rechtstreeks op de <xref:System.Collections.DictionaryBase>object.</xref:System.Collections.DictionaryBase> </xref:System.Collections.DictionaryBase> </xref:System.Collections.ICollection.SyncRoot%2A> Dit zorgt ervoor dat de juiste werking van de verzamelingen die zijn afgeleid van andere objecten. In het bijzonder houdt juiste synchronisatie met andere threads dat tegelijkertijd kan worden wijzigt de <xref:System.Collections.DictionaryBase>object.</xref:System.Collections.DictionaryBase>       Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cs[System.Collections.DictionaryBase#3](~/add/codesnippet/csharp/86708232-6546-45cc-abc0-_1.cs)]\n [!code-cpp[System.Collections.DictionaryBase#3](~/add/codesnippet/cpp/86708232-6546-45cc-abc0-_1.cpp)]\n [!code-vb[System.Collections.DictionaryBase#3](~/add/codesnippet/visualbasic/86708232-6546-45cc-abc0-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> object."
  overload: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Voegt een element met de opgegeven sleutel en waarde in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>."
  remarks: "Een object dat geen verband bestaat tussen de status en de hash-code-waarde heeft moet normaal gesproken niet worden gebruikt als de sleutel. Bijvoorbeeld: <xref:System.String>objecten zijn beter dan <xref:System.Text.StringBuilder>objecten voor gebruik als sleutels.</xref:System.Text.StringBuilder> </xref:System.String>       U kunt ook de <xref:System.Collections.IDictionary.Item%2A>eigenschap toevoegen van nieuwe elementen door de waarde van een sleutel die niet bestaat de <xref:System.Collections.DictionaryBase>, bijvoorbeeld `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.DictionaryBase> </xref:System.Collections.IDictionary.Item%2A> Echter, als de opgegeven sleutel al bestaat in de <xref:System.Collections.DictionaryBase>, instelling de <xref:System.Collections.IDictionary.Item%2A>eigenschap overschrijft de oude waarde.</xref:System.Collections.IDictionary.Item%2A> </xref:System.Collections.DictionaryBase> Daarentegen de <xref:System.Collections.IDictionary.Add%2A>methode bestaande elementen niet wijzigt.</xref:System.Collections.IDictionary.Add%2A>       Deze methode is een bewerking O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/c65f1d46-c6ba-40bd-bf67-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/c65f1d46-c6ba-40bd-bf67-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/c65f1d46-c6ba-40bd-bf67-_1.vb)]"
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element om toe te voegen."
    - id: value
      type: System.Object
      description: "De waarde van het element om toe te voegen."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een element met dezelfde sleutel bestaat al in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> is alleen-lezen.       - of - de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> heeft een vaste grootte."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee wordt bepaald of de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> een specifieke sleutel bevat."
  remarks: "Deze methode is een bewerking O(1).       Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten <xref:System.Object.Equals%2A>en <xref:System.IComparable.CompareTo%2A>methoden op `key` om te bepalen of `item` bestaat.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de <xref:System.Object.Equals%2A>en <xref:System.IComparable.CompareTo%2A>methoden van de `key` parameter voor de objecten in de verzameling.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/c59cd535-1a58-4e00-98b8-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/c59cd535-1a58-4e00-98b8-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/c59cd535-1a58-4e00-98b8-_1.vb)]"
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel te vinden in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> bevat een element met de opgegeven sleutel, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een waarde die aangeeft of een <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> -object heeft een vaste grootte."
  remarks: "Een verzameling met een vaste grootte is niet toegestaan het toevoegen of verwijderen van elementen nadat de verzameling is gemaakt, maar toe de wijziging van bestaande elementen dat staat.       Een verzameling met een vaste grootte is gewoon een verzameling met een wrapper waardoor toevoegen en verwijderen van elementen; daarom als wijzigingen zijn aangebracht in de onderliggende verzameling, inclusief het toevoegen of verwijderen van elementen, de verzameling met vaste grootte wordt doorgevoerd die wijzigingen.       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> -object heeft een vaste grootte, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een waarde die aangeeft of een <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> object is alleen-lezen."
  remarks: "Een verzameling die is alleen-lezen is het toevoegen, verwijderen of wijzigen van de elementen niet toegestaan, nadat de verzameling is gemaakt.       Een verzameling die is alleen-lezen is gewoon een verzameling met een wrapper waardoor het wijzigen van de collectie. daarom als wijzigingen worden aangebracht in de onderliggende verzameling, de verzameling alleen-lezen wordt doorgevoerd die wijzigingen.       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> -object is alleen-lezen, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Opgehaald of ingesteld van de waarde die is gekoppeld aan de opgegeven sleutel."
  remarks: "Deze eigenschap biedt de mogelijkheid toegang tot een specifiek element in de verzameling met de volgende syntaxis: `myCollection[key]`.       U kunt ook de <xref:System.Collections.IDictionary.Item%2A>eigenschap toevoegen van nieuwe elementen door de waarde van een sleutel die niet bestaat de <xref:System.Collections.DictionaryBase>, bijvoorbeeld `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.DictionaryBase> </xref:System.Collections.IDictionary.Item%2A> Echter, als de opgegeven sleutel al bestaat in de <xref:System.Collections.DictionaryBase>, instelling de <xref:System.Collections.IDictionary.Item%2A>eigenschap overschrijft de oude waarde.</xref:System.Collections.IDictionary.Item%2A> </xref:System.Collections.DictionaryBase> Daarentegen de <xref:System.Collections.IDictionary.Add%2A>methode bestaande elementen niet wijzigt.</xref:System.Collections.IDictionary.Add%2A>       Ophalen van de waarde van deze eigenschap is een bewerking O(1); de eigenschap is ook een O(1)-bewerking."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/24404b11-3020-40f8-8aa1-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/24404b11-3020-40f8-8aa1-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/24404b11-3020-40f8-8aa1-_1.vb)]"
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel waarvan de waarde ophalen of instellen."
    return:
      type: System.Object
      description: "De waarde die is gekoppeld aan de opgegeven sleutel. Als de opgegeven sleutel niet gevonden is, bij het ophalen van het retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, en maakt u een nieuw element met de opgegeven sleutel probeert in te stellen."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De eigenschap is ingesteld en de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> is alleen-lezen.       - of - de eigenschap is ingesteld, <code> key </code> bestaat niet in de verzameling en de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> heeft een vaste grootte."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een <xref:System.Collections.ICollection>object met de sleutels in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> object.</xref:System.Collections.ICollection>"
  remarks: "De volgorde van de sleutels in de <xref:System.Collections.ICollection>-object is niet opgegeven, maar is dezelfde volgorde als de bijbehorende waarden in de <xref:System.Collections.ICollection>object dat wordt geretourneerd door de <xref:System.Collections.IDictionary.Values%2A>eigenschap.</xref:System.Collections.IDictionary.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       De geretourneerde <xref:System.Collections.ICollection>is niet een statische kopie; in plaats daarvan de <xref:System.Collections.ICollection>verwijst terug naar de sleutels in de oorspronkelijke <xref:System.Collections.DictionaryBase>object.</xref:System.Collections.DictionaryBase> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Daarom worden gewijzigd in de <xref:System.Collections.DictionaryBase>gaan worden weergegeven in de geretourneerde <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.DictionaryBase>       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/55fc7d60-7b22-451a-9b28-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/55fc7d60-7b22-451a-9b28-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/55fc7d60-7b22-451a-9b28-_1.vb)]"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "Een <xref:System.Collections.ICollection>object met de sleutels in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> object.</xref:System.Collections.ICollection>"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee verwijdert u het element met de opgegeven sleutel uit de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>."
  remarks: "Als de <xref:System.Collections.DictionaryBase>bevat geen element met de opgegeven sleutel de <xref:System.Collections.DictionaryBase>blijft ongewijzigd.</xref:System.Collections.DictionaryBase> </xref:System.Collections.DictionaryBase> Er is geen uitzondering is opgetreden.       Deze methode is een bewerking O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/ce3b6ffc-125d-4340-aa5a-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/ce3b6ffc-125d-4340-aa5a-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/ce3b6ffc-125d-4340-aa5a-_1.vb)]"
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element te verwijderen."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> is alleen-lezen.       - of - de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> heeft een vaste grootte."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Values
  nameWithType: DictionaryBase.System.Collections.IDictionary.Values
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een <xref:System.Collections.ICollection>object met de waarden in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> object.</xref:System.Collections.ICollection>"
  remarks: "De volgorde van de waarden in de <xref:System.Collections.ICollection>-object is niet opgegeven, maar wordt dezelfde volgorde als de gekoppelde sleutels in de <xref:System.Collections.ICollection>object dat wordt geretourneerd door de <xref:System.Collections.IDictionary.Keys%2A>eigenschap.</xref:System.Collections.IDictionary.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       De geretourneerde <xref:System.Collections.ICollection>is niet een statische kopie; in plaats daarvan de <xref:System.Collections.ICollection>verwijst terug naar de waarden in de oorspronkelijke <xref:System.Collections.DictionaryBase>object.</xref:System.Collections.DictionaryBase> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Daarom worden gewijzigd in de <xref:System.Collections.DictionaryBase>gaan worden weergegeven in de geretourneerde <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.DictionaryBase>       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/48c1eb68-69bc-40ec-afd8-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/48c1eb68-69bc-40ec-afd8-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/48c1eb68-69bc-40ec-afd8-_1.vb)]"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: "Een <xref:System.Collections.ICollection>object met de waarden in de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> object.</xref:System.Collections.ICollection>"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Values*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Retourneert een <xref:System.Collections.IEnumerator>die doorloopt de <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "De `foreach` -instructie van de taal C# (`for each` in Visual Basic) de complexiteit van de opsommingen worden verborgen. Daarom kan het gebruik `foreach` wordt aanbevolen, in plaats van rechtstreeks bewerken van de enumerator.       Enumerators kunnen worden gebruikt om de gegevens in de verzameling te lezen, maar ze kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.       In eerste instantie bevindt de enumerator zich vÃ³Ã³r het eerste element in de verzameling. <xref:System.Collections.IEnumerator.Reset%2A>brengt ook de enumerator terug naar deze positie.</xref:System.Collections.IEnumerator.Reset%2A> Op deze functie, het aanroepen van <xref:System.Collections.IEnumerator.Current%2A>er een uitzondering gegenereerd.</xref:System.Collections.IEnumerator.Current%2A> U moet daarom aanroepen <xref:System.Collections.IEnumerator.MoveNext%2A>om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>retourneert de hetzelfde object totdat de <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>wordt aangeroepen.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Hiermee stelt u <xref:System.Collections.IEnumerator.Current%2A>naar het volgende element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Als <xref:System.Collections.IEnumerator.MoveNext%2A>geeft het einde van de verzameling, de enumerator bevindt zich na het laatste element in de verzameling en <xref:System.Collections.IEnumerator.MoveNext%2A>retourneert `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Wanneer de enumerator is op deze positie, volgende aanroepen naar <xref:System.Collections.IEnumerator.MoveNext%2A>ook retourneren `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Als de laatste aanroep aan <xref:System.Collections.IEnumerator.MoveNext%2A>geretourneerd `false`, aanroepende <xref:System.Collections.IEnumerator.Current%2A>er een uitzondering gegenereerd.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>U kunt naar het eerste element van de verzameling opnieuw aanroepen <xref:System.Collections.IEnumerator.Reset%2A>gevolgd door <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> instellen       Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, in de enumerator permanent ongeldig wordt gemaakt en de volgende aanroep aan <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>er een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Als de verzameling is gewijzigd tussen <xref:System.Collections.IEnumerator.MoveNext%2A>en <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>retourneert het element dat is ingesteld op, zelfs als de enumerator is al ongeldig gemaakt.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom intrinsiek geen procedure thread-safe. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.       Deze methode is een bewerking O(1)."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.DictionaryBase&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Collections.DictionaryBase.#ctor
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: DictionaryBase()
  nameWithType: DictionaryBase.DictionaryBase()
  fullName: System.Collections.DictionaryBase.DictionaryBase()
- uid: System.Collections.DictionaryBase.Clear
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Clear()
  nameWithType: DictionaryBase.Clear()
  fullName: System.Collections.DictionaryBase.Clear()
- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DictionaryBase.CopyTo(Array,Int32)
  fullName: System.Collections.DictionaryBase.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.DictionaryBase.Count
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Count
  nameWithType: DictionaryBase.Count
  fullName: System.Collections.DictionaryBase.Count
- uid: System.Collections.DictionaryBase.Dictionary
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Dictionary
  nameWithType: DictionaryBase.Dictionary
  fullName: System.Collections.DictionaryBase.Dictionary
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.DictionaryBase.GetEnumerator
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: DictionaryBase.GetEnumerator()
  fullName: System.Collections.DictionaryBase.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.DictionaryBase.InnerHashtable
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: InnerHashtable
  nameWithType: DictionaryBase.InnerHashtable
  fullName: System.Collections.DictionaryBase.InnerHashtable
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections.DictionaryBase.OnClear
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClear()
  nameWithType: DictionaryBase.OnClear()
  fullName: System.Collections.DictionaryBase.OnClear()
- uid: System.Collections.DictionaryBase.OnClearComplete
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClearComplete()
  nameWithType: DictionaryBase.OnClearComplete()
  fullName: System.Collections.DictionaryBase.OnClearComplete()
- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnGet(Object,Object)
  nameWithType: DictionaryBase.OnGet(Object,Object)
  fullName: System.Collections.DictionaryBase.OnGet(Object,Object)
- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsert(Object,Object)
  nameWithType: DictionaryBase.OnInsert(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsert(Object,Object)
- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsertComplete(Object,Object)
  nameWithType: DictionaryBase.OnInsertComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsertComplete(Object,Object)
- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemove(Object,Object)
  nameWithType: DictionaryBase.OnRemove(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemove(Object,Object)
- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemoveComplete(Object,Object)
  nameWithType: DictionaryBase.OnRemoveComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemoveComplete(Object,Object)
- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSet(Object,Object,Object)
  nameWithType: DictionaryBase.OnSet(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSet(Object,Object,Object)
- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSetComplete(Object,Object,Object)
  nameWithType: DictionaryBase.OnSetComplete(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSetComplete(Object,Object,Object)
- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnValidate(Object,Object)
  nameWithType: DictionaryBase.OnValidate(Object,Object)
  fullName: System.Collections.DictionaryBase.OnValidate(Object,Object)
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Contains(Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Item(Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Remove(Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: DictionaryBase.System.Collections.IDictionary.Values
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Values
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.DictionaryBase.#ctor*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: DictionaryBase
  nameWithType: DictionaryBase.DictionaryBase
- uid: System.Collections.DictionaryBase.Clear*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Clear
  nameWithType: DictionaryBase.Clear
- uid: System.Collections.DictionaryBase.CopyTo*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: CopyTo
  nameWithType: DictionaryBase.CopyTo
- uid: System.Collections.DictionaryBase.Count*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Count
  nameWithType: DictionaryBase.Count
- uid: System.Collections.DictionaryBase.Dictionary*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Dictionary
  nameWithType: DictionaryBase.Dictionary
- uid: System.Collections.DictionaryBase.GetEnumerator*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: GetEnumerator
  nameWithType: DictionaryBase.GetEnumerator
- uid: System.Collections.DictionaryBase.InnerHashtable*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: InnerHashtable
  nameWithType: DictionaryBase.InnerHashtable
- uid: System.Collections.DictionaryBase.OnClear*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClear
  nameWithType: DictionaryBase.OnClear
- uid: System.Collections.DictionaryBase.OnClearComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClearComplete
  nameWithType: DictionaryBase.OnClearComplete
- uid: System.Collections.DictionaryBase.OnGet*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnGet
  nameWithType: DictionaryBase.OnGet
- uid: System.Collections.DictionaryBase.OnInsert*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsert
  nameWithType: DictionaryBase.OnInsert
- uid: System.Collections.DictionaryBase.OnInsertComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsertComplete
  nameWithType: DictionaryBase.OnInsertComplete
- uid: System.Collections.DictionaryBase.OnRemove*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemove
  nameWithType: DictionaryBase.OnRemove
- uid: System.Collections.DictionaryBase.OnRemoveComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemoveComplete
  nameWithType: DictionaryBase.OnRemoveComplete
- uid: System.Collections.DictionaryBase.OnSet*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSet
  nameWithType: DictionaryBase.OnSet
- uid: System.Collections.DictionaryBase.OnSetComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSetComplete
  nameWithType: DictionaryBase.OnSetComplete
- uid: System.Collections.DictionaryBase.OnValidate*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnValidate
  nameWithType: DictionaryBase.OnValidate
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: DictionaryBase.System.Collections.IDictionary.Add
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: DictionaryBase.System.Collections.IDictionary.Item
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: DictionaryBase.System.Collections.IDictionary.Values
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator
