### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleLob
  id: OracleLob
  children:
  - System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.BeginBatch
  - System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  - System.Data.OracleClient.OracleLob.CanRead
  - System.Data.OracleClient.OracleLob.CanSeek
  - System.Data.OracleClient.OracleLob.CanWrite
  - System.Data.OracleClient.OracleLob.ChunkSize
  - System.Data.OracleClient.OracleLob.Clone
  - System.Data.OracleClient.OracleLob.Connection
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleLob.EndBatch
  - System.Data.OracleClient.OracleLob.Erase
  - System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Flush
  - System.Data.OracleClient.OracleLob.IsBatched
  - System.Data.OracleClient.OracleLob.IsNull
  - System.Data.OracleClient.OracleLob.IsTemporary
  - System.Data.OracleClient.OracleLob.Length
  - System.Data.OracleClient.OracleLob.LobType
  - System.Data.OracleClient.OracleLob.Null
  - System.Data.OracleClient.OracleLob.Position
  - System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  - System.Data.OracleClient.OracleLob.Value
  - System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  langs:
  - csharp
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
  type: Class
  summary: "Hiermee geeft u een binaire large object (<xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;></xref>) gegevenstype dat is opgeslagen op een Oracle-server. Deze klasse kan niet worden overgenomen."
  remarks: "Een OracleLob wijkt af van een <xref:System.Data.OracleClient.OracleBFile>in dat de gegevens worden opgeslagen op de server in plaats van in een fysiek bestand in het besturingssysteem.</xref:System.Data.OracleClient.OracleBFile> Het kan ook worden veroorzaakt een lezen / schrijven-object, in tegenstelling tot een <xref:System.Data.OracleClient.OracleBFile>, die altijd is alleen-lezen.</xref:System.Data.OracleClient.OracleBFile>       Een OracleLob mogelijk een van deze <xref:System.Data.OracleClient.OracleType>gegevenstypen.</xref:System.Data.OracleClient.OracleType>      | Het gegevenstype OracleType | Beschrijving |   |--------------------------|-----------------|   | `Blob`| Een Oracle `BLOB` gegevenstype met binaire gegevens met een maximale grootte van 4 gigabyte (GB). Dit wordt toegewezen aan een <xref:System.Array>van het type <xref:System.Byte>. |   | `Clob`| Een Oracle `CLOB` gegevenstype met tekengegevens, op basis van het standaardteken ingesteld op de server, met een maximale grootte van 4 GB.</xref:System.Byte> </xref:System.Array> Dit wordt toegewezen aan <xref:System.String>. |   | `NClob`| Een Oracle `NCLOB` gegevenstype met tekengegevens, op basis van de national tekenset op de server met een maximale grootte van 4 GB.</xref:System.String> Dit wordt toegewezen aan <xref:System.String>. |       Een ontwikkelaar van de .NET-toepassingen kan de Oracle ophalen `LOB` waarden in basic .NET-gegevenstypen, zoals <xref:System.Array>van het type <xref:System.Byte>en <xref:System.String>, of het gespecialiseerde OracleLob-gegevenstype.</xref:System.String> </xref:System.Byte> </xref:System.Array> </xref:System.String> De OracleLob klasse ondersteunt lezen van gegevens van en schrijven naar de Oracle `LOB` in de Oracle-database.       Hieronder volgen de belangrijkste kenmerken van een gegevenstype OracleLob die deze van basic .NET-gegevenstypen onderscheidt:: nadat u de Oracle ophalen `LOB` waarde van de Oracle-database in de klasse OracleLob, kunt u de `LOB` gegevens in een geopende transactie en uw wijzigingen rechtstreeks naar de database worden doorgevoerd. Als u de Oracle ophaalt `LOB` waarde in een <xref:System.Array>van het type <xref:System.Byte>of <xref:System.String>en deze matrices, werk uw wijzigingen worden niet weergegeven in de database.</xref:System.String> </xref:System.Byte> </xref:System.Array>      -Wanneer u de klasse OracleLob gebruiken voor toegang tot een deel van een `LOB` , alleen die chunk is doorgegeven vanuit de Oracle-database naar de client. Wanneer u gebruikt de <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>methode voor toegang tot een deel van een `LOB` waarde, de volledige inhoud van de waarde worden doorgegeven vanuit de Oracle-database naar de client.</xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>       Aanroepen voor een object OracleLob de <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>methode.</xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>       U kunt een OracleLob die met deze indeling NULL opstellen: ```   OracleLob myLob = OracleLob.Null;   ``` deze techniek wordt gebruikt voor het testen of een `LOB` geretourneerd vanaf de server is NULL, zoals in dit voorbeeld te zien: ```   If(myLob == OracleLob.Null)   ``` A NULL `LOB` gedraagt zich op dezelfde manier naar een nul-byte `LOB` in dat <xref:System.Data.OracleClient.OracleLob.Read%2A>is gelukt en retourneert altijd nul bytes.</xref:System.Data.OracleClient.OracleLob.Read%2A>       Als u een `LOB` kolom met een null-waarde als resultaat gegeven <xref:System.Data.OracleClient.OracleLob.Null>.</xref:System.Data.OracleClient.OracleLob.Null>       U moet beginnen met een transactie voordat het verkrijgen van een tijdelijke `LOB`. Anders wordt de <xref:System.Data.OracleClient.OracleDataReader>mislukken mogelijk om gegevens te verkrijgen later.</xref:System.Data.OracleClient.OracleDataReader>       U kunt ook een tijdelijke openen `LOB` in Oracle door het aanroepen van de DBMS_LOB. CREATETEMPORARY systeem opgeslagen procedure en de binding een `LOB` uitvoerparameter. Aan de clientzijde, een tijdelijke `LOB` gedraagt zich als een tabel op basis van `LOB`. Bijvoorbeeld, om het bijwerken van de tijdelijke `LOB`, deze moet worden ingesloten in een transactie.       De volgende C#-voorbeeld toont hoe een tijdelijke openen `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```      > [!NOTE]> De overgenomen <xref:System.IO.Stream.WriteByte%2A>methode mislukt als met tekengegevens, gebruikt en een <xref:System.InvalidOperationException>gegenereerd.</xref:System.InvalidOperationException> </xref:System.IO.Stream.WriteByte%2A> Gebruik de <xref:System.Data.OracleClient.OracleLob.Write%2A>methode in plaats daarvan.</xref:System.Data.OracleClient.OracleLob.Write%2A>   >> Tijdelijke `LOB`s zijn alleen gesloten wanneer de verbinding is gesloten, maar met groeperen en belast, tijdelijke `LOB`s niet sluiten. Dit kan worden opgelost door de verwijdering van de tijdelijke `LOB`, door aan te roepen `tempLob.Dispose()`."
  syntax:
    content: 'public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  id: Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gegevens uit de opgegeven voegt <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> naar het huidige <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.       Alle gegevens van de bron `LOB` wordt toegevoegd aan het einde van de huidige `LOB`. De positie van geen van beide `LOB` wordt geÃ«valueerd of gewijzigd tijdens dit proces.       De onderliggende gegevenstypen moet altijd hetzelfde. Bijvoorbeeld, als u van een <xref:System.Data.OracleClient.OracleType>het doel <xref:System.Data.OracleClient.OracleLob>moet ook een <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType> toevoegt      > [!NOTE] > In deze release een schrijfbewerking naar een alleen-lezen `LOB` mogelijk wel, maar werkt niet bij de `LOB` op de server. In dit geval echter de lokale kopie van de `LOB` wordt bijgewerkt. Daarom later leesbewerkingen op de <xref:System.Data.OracleClient.OracleLob>object kan het resultaat van de schrijfbewerking.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public void Append (System.Data.OracleClient.OracleLob source);
    parameters:
    - id: source
      type: System.Data.OracleClient.OracleLob
      description: "De <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> waaruit u gegevens toevoegt."
  overload: System.Data.OracleClient.OracleLob.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De bron <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> is null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bron <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> is leeg, of de verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De bron <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  id: BeginBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Voorkomt dat de triggers-serverzijde starten tijdens het uitvoeren van meerdere leesbewerkingen."
  remarks: "Hiermee opent u de `LOB` in <xref:System.Data.OracleClient.OracleLobOpenMode>modus; daarom de `LOB` kunnen alleen worden gelezen vanaf, niet worden geschreven, totdat de bijbehorende aanroep <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleLobOpenMode> Uitvoeren van batch schrijfbewerkingen naar de `LOB`, roept <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>met <xref:System.Data.OracleClient.OracleLobOpenMode>.</xref:System.Data.OracleClient.OracleLobOpenMode> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>       De Oracle BeginBatch binnen dezelfde transactie momenteel meer dan Ã©Ã©n keer aanroepen genereert &quot; ORA&22293;: LOB al geopend in dezelfde transactie &quot; fout. Als u bovendien de `LOB` met behulp van een andere <xref:System.Data.OracleClient.OracleDataReader>, en de oorspronkelijke aanroeper is niet aangeroepen de <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>methode wordt dezelfde fout wordt gegenereerd.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Daarom moet u de <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>methode wanneer u klaar bent met de <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A> aanroepen"
  syntax:
    content: public void BeginBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  id: BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Voorkomt u dat de triggers-serverzijde wordt dan tijdens het uitvoeren van meerdere lezen- en schrijfbewerkingen in de opgegeven toegangsmodus."
  remarks: "Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.       Het aanroepen van <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>binnen dezelfde transactie momenteel meer dan Ã©Ã©n keer genereert de Oracle &quot; ORA&22293;: LOB al geopend in dezelfde transactie &quot; fout.</xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> Als u bovendien de `LOB` met behulp van een andere <xref:System.Data.OracleClient.OracleDataReader>, en de oorspronkelijke aanroeper is niet aangeroepen de <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>methode wordt dezelfde fout wordt gegenereerd.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Daarom moet u de <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>methode wanneer u klaar bent met de <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A> aanroepen"
  syntax:
    content: public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);
    parameters:
    - id: mode
      type: System.Data.OracleClient.OracleLobOpenMode
      description: "Modus (een van de <xref href=&quot;System.Data.OracleClient.OracleLobOpenMode&quot;> </xref> waarden) waarin de <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> toegankelijk zijn tussen deze aanroep BeginBatch en de bijbehorende <xref:System.Data.OracleClient.OracleLob.EndBatch*>aanroepen.</xref:System.Data.OracleClient.OracleLob.EndBatch*>"
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt een waarde die aangeeft of de <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> stroom kan worden gelezen."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> stroom ondersteunt lezen, anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als een <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> is gesloten of verwijderd."
  overload: System.Data.OracleClient.OracleLob.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt een waarde die aangeeft of voorwaarts en achterwaarts zoekbewerkingen kunnen worden uitgevoerd."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Als een <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> is gesloten of verwijderd, anders <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleLob.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Altijd &quot; true &quot; geretourneerd, ongeacht of de <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> schrijven of niet ondersteunt."
  remarks: "Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet zijn gestart een lokale transactie."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Retourneert altijd <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, ongeacht of u een geopende of undisposed <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> ondersteunt ook het schrijven of niet, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als een <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> is gesloten of verwijderd."
  overload: System.Data.OracleClient.OracleLob.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  id: ChunkSize
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt een waarde die aangeeft het minimum aantal bytes ophalen uit of tijdens een bewerking lezen/schrijven naar de server stuurt."
  remarks: "De waarde die is geretourneerd door de eigenschap ChunkSize is niet een instelling van de .NET Framework-gegevensprovider voor Oracle. Het is in plaats daarvan de waarde die Oracle aanroepen Interface (OCI) gebruikt om te communiceren met de server. Gebruik ChunkSize om ervoor te zorgen dat aan de clientzijde segmenten even groot zijn. Lezen of schrijven in kleinere reeksen geen gegevens in de cache en zorgt ervoor dat een minder geoptimaliseerd retouren naar de server, omdat een volledige pakket is niet ontvangen of verzonden."
  syntax:
    content: public int ChunkSize { get; }
    return:
      type: System.Int32
      description: "Het minimale aantal bytes worden verzonden of ontvangen."
  overload: System.Data.OracleClient.OracleLob.ChunkSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Maakt een nieuw <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object dat verwijst naar dezelfde Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> als de oorspronkelijke <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> object."
  remarks: "De eigenschappen van de nieuwe <xref:System.Data.OracleClient.OracleLob>object in eerste instantie hebben dezelfde waarden als die van het oorspronkelijke object.</xref:System.Data.OracleClient.OracleLob> Echter, nadat het klonen voltooid, elke is <xref:System.Data.OracleClient.OracleLob>object is niet afhankelijk van de andere.</xref:System.Data.OracleClient.OracleLob> Als u bijvoorbeeld de waarde van de <xref:System.Data.OracleClient.OracleLob.Position%2A>eigenschap op de oorspronkelijke <xref:System.Data.OracleClient.OracleLob>verandert niet de waarde van <xref:System.Data.OracleClient.OracleLob.Position%2A>op de kopie.</xref:System.Data.OracleClient.OracleLob.Position%2A> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Een nieuwe <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object dat verwijst naar dezelfde Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> als de oorspronkelijke <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> object."
  overload: System.Data.OracleClient.OracleLob.Clone*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt de <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> gebruikt door dit exemplaar van de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "De verbinding met een gegevensbron."
  overload: System.Data.OracleClient.OracleLob.Connection*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Exemplaren van deze <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> naar een bestemming <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "De onderliggende gegevenstypen moet altijd hetzelfde. Bijvoorbeeld, als u wilt kopiÃ«ren uit een <xref:System.Data.OracleClient.OracleType>het doel <xref:System.Data.OracleClient.OracleLob>moet ook een <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Als de doel-offset voorbij het einde van bestemming is `LOB`, wordt de `LOB` die de gegevens wordt gekopieerd wordt uitgebreid. De afstand tussen het einde van de `LOB` en de verschuiving voorbij het einde van de bestemming opgevuld met nullen voor `BLOB` gegevenstypen en spaties voor `CLOB` en `NCLOB` gegevenstypen.       Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.      > [!NOTE] > In deze release een schrijfbewerking naar een alleen-lezen `LOB` mogelijk slagen, maar niet bijgewerkt de `LOB` op de server. In dit geval echter de lokale kopie van de `LOB` wordt bijgewerkt. Daarom later leesbewerkingen op de <xref:System.Data.OracleClient.OracleLob>object kan het resultaat van de schrijfbewerking.</xref:System.Data.OracleClient.OracleLob>   >> De `CopyTo` methode wist u de inhoud van de bestemming niet `OracleLob` voordat de kopieerbewerking wordt uitgevoerd."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "De bestemming <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    return:
      type: System.Int64
      description: "Het aantal bytes dat wordt gekopieerd. Dit omvat niet alle gevuld bytes."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> opgegeven in de <code> destination </code> -parameter is null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is niet binnen een transactie de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object is null of de verbinding is gesloten."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Exemplaren van deze <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> naar een bestemming <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> met de opgegeven hoeveelheid gegevens."
  remarks: "De onderliggende gegevenstypen moet altijd hetzelfde. Bijvoorbeeld, als u wilt kopiÃ«ren uit een <xref:System.Data.OracleClient.OracleType>het doel <xref:System.Data.OracleClient.OracleLob>moet ook een <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Als de doel-offset voorbij het einde van bestemming is `LOB`, wordt de `LOB` die de gegevens wordt gekopieerd wordt uitgebreid. De afstand tussen het einde van `LOB` en verschuiving voorbij het einde van de bestemming opgevuld met nullen voor `BLOB` gegevenstypen en spaties voor `CLOB` en `NCLOB` gegevenstypen.       Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.      > [!NOTE] > In deze release een schrijfbewerking naar een alleen-lezen `LOB` mogelijk wel, maar werkt niet bij de `LOB` op de server. In dit geval echter de lokale kopie van de `LOB` wordt bijgewerkt. Daarom later leesbewerkingen op de <xref:System.Data.OracleClient.OracleLob>object kan het resultaat van de schrijfbewerking.</xref:System.Data.OracleClient.OracleLob>   >> De `CopyTo` methode wist u de inhoud van de bestemming niet `OracleLob` voordat de kopieerbewerking wordt uitgevoerd."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "De bestemming<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    - id: destinationOffset
      type: System.Int64
      description: "De offset waarnaar u wilt kopiÃ«ren. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even aantal bytes."
    return:
      type: System.Int64
      description: "Het aantal bytes dat wordt gekopieerd. Dit omvat niet alle gevuld bytes."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> opgegeven in de <code> destination </code> parameter vol is."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Een waarde die is opgegeven de <code> destinationOffset </code> parameter is kleiner dan nul of groter zijn dan 4 GB.       - of - waarde is opgegeven in de <code> destinationOffset </code> parameter voor een <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstype is nog niet.       - of - u moet opgeven <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen als een even getal bytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is niet binnen een transactie de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object is null of de verbinding is gesloten."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Exemplaren van deze <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> naar een bestemming <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> met de opgegeven hoeveelheid gegevens en de verschuiving van de bron."
  remarks: "De onderliggende gegevenstypen moet altijd hetzelfde. Bijvoorbeeld, als u wilt kopiÃ«ren uit een <xref:System.Data.OracleClient.OracleType>het doel <xref:System.Data.OracleClient.OracleLob>moet ook een <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Als de doel-offset voorbij het einde van bestemming is `LOB`, wordt de `LOB` die de gegevens wordt gekopieerd wordt uitgebreid. De afstand tussen het einde van `LOB` en verschuiving voorbij het einde van de bestemming opgevuld met nullen voor `BLOB` gegevenstypen en spaties voor `CLOB` en `NCLOB` gegevenstypen.       Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.      > [!NOTE] > In deze release een schrijfbewerking naar een alleen-lezen `LOB` mogelijk wel, maar werkt niet bij de `LOB` op de server. In dit geval echter de lokale kopie van de `LOB` wordt bijgewerkt. Daarom later leesbewerkingen op de <xref:System.Data.OracleClient.OracleLob>object kan het resultaat van de schrijfbewerking.</xref:System.Data.OracleClient.OracleLob>   >> De `CopyTo` methode wist u de inhoud van de bestemming niet `OracleLob` voordat de kopieerbewerking wordt uitgevoerd."
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "De offset waaruit u wilt kopiÃ«ren. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "The destination <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;></xref><xref href=&quot;System.Data.OracleClient&quot;></xref>."
    - id: destinationOffset
      type: System.Int64
      description: "De verschuiving van de bestemming waarnaar u wilt kopiÃ«ren. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
    - id: amount
      type: System.Int64
      description: "De hoeveelheid gegevens, in bytes, te kopiÃ«ren. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
    return:
      type: System.Int64
      description: "Het aantal bytes dat wordt gekopieerd. Dit omvat niet alle gevuld bytes."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> opgegeven in de <code> destination </code> parameter vol is."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Een waarde die is opgegeven de <code> amount </code>, <code> sourceOffset </code>, of <code> destinationOffset </code> parameter is kleiner dan nul of groter zijn dan 4 GB.       -or-       A value specified in the <code>amount</code>, <code>sourceOffset</code>, or <code>destinationOffset</code> parameter for a <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;></xref> data type is not even."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is niet binnen een transactie de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object is null of de verbinding is gesloten."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: System.Data.OracleClient.OracleLob.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.EndBatch
  id: EndBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kan de triggers-serverzijde starten na het uitvoeren van meerdere schrijfbewerkingen hervatten."
  remarks: "Roep de <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>methode voordat u begint met het uitvoeren van schrijfbewerkingen op de <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>"
  syntax:
    content: public void EndBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.EndBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase
  id: Erase
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wist u alle gegevens van dit <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Wissen komt niet afkappen van gegevens. De `LOB` lengte blijft hetzelfde zijn voor een `BLOB` gegevenstype, en de gewiste gegevens wordt vervangen door 0x00. `CLOB`en `NCLOB` gegevenstypen worden vervangen door spaties.       Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.      > [!NOTE] > In deze release een schrijfbewerking naar een alleen-lezen `LOB` mogelijk wel, maar werkt niet bij de `LOB` op de server. In dit geval echter de lokale kopie van de `LOB` wordt bijgewerkt. Daarom later leesbewerkingen op de <xref:System.Data.OracleClient.OracleLob>object kan het resultaat van de schrijfbewerking.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase ();
    parameters: []
    return:
      type: System.Int64
      description: "Het aantal bytes gewist."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is niet binnen een transactie de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object is null of de verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  id: Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wist u de opgegeven hoeveelheid gegevens van deze <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "De som van de waarden in de `offset` en `amount` parameters kunnen niet groter zijn dan die van de grootte van de <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> Daarom geven een waarde die groter is dan die wordt geretourneerd door de <xref:System.Data.OracleClient.OracleLob.Length%2A>eigenschap slaagt; echter <xref:System.Data.OracleClient.OracleLob.Erase%2A>alleen worden gewist met het einde van de <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> </xref:System.Data.OracleClient.OracleLob.Length%2A> (Op dezelfde manier als een negatieve waarde wordt doorgegeven aan `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A>slagen, maar alleen wissen vanaf het begin van de <xref:System.Data.OracleClient.OracleLob>.)</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> Dit gedrag is anders dan die van de <xref:System.Data.OracleClient.OracleLob.Read%2A>en <xref:System.Data.OracleClient.OracleLob.Write%2A>methoden en biedt het voordeel van te wissen van alle gegevens van de waarde die is opgegeven door `offset` zonder dat een extra retour naar de server om te controleren of de werkelijke grootte.</xref:System.Data.OracleClient.OracleLob.Write%2A> </xref:System.Data.OracleClient.OracleLob.Read%2A>       <xref:System.Data.OracleClient.OracleLob.Erase%2A>biedt gegevens niet afkappen.</xref:System.Data.OracleClient.OracleLob.Erase%2A> De `LOB` lengte blijft hetzelfde zijn voor een `BLOB` gegevenstype, en de gewiste gegevens wordt vervangen door 0x00. `CLOB`en `NCLOB` gegevenstypen worden vervangen door spaties.       Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.      > [!NOTE] > In deze release een schrijfbewerking naar een alleen-lezen `LOB` mogelijk wel, maar werkt niet bij de `LOB` op de server. In dit geval echter de lokale kopie van de `LOB` wordt bijgewerkt. Daarom later leesbewerkingen op de <xref:System.Data.OracleClient.OracleLob>object kan het resultaat van de schrijfbewerking.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase (long offset, long amount);
    parameters:
    - id: offset
      type: System.Int64
      description: "De offset waaruit u wilt wissen. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
    - id: amount
      type: System.Int64
      description: "De hoeveelheid gegevens, in bytes, om te wissen. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
    return:
      type: System.Int64
      description: "Het aantal bytes gewist."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is niet binnen een transactie de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object is null of de verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Momenteel niet ondersteund."
  remarks: "In deze release is deze methode niet functioneel."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsBatched
  id: IsBatched
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wordt een waarde die aangeeft of een toepassing aangeroepen de <xref:System.Data.OracleClient.OracleLob.BeginBatch*>methode.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  remarks: 'Wanneer een 8.0.5 Oracle-server, een Oracle &quot; ORA 00600: interne foutcode &quot; uitzondering gegenereerd.'
  syntax:
    content: public bool IsBatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de naam van de toepassing de <xref:System.Data.OracleClient.OracleLob.BeginBatch*>methode, anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  overload: System.Data.OracleClient.OracleLob.IsBatched*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wordt een waarde die aangeeft of de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> is een <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> stroom."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  id: IsTemporary
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Haalt een waarde die aangeeft of de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> is een tijdelijke <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "Het volgende voorbeeld toont het maken van een tijdelijke `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```"
  syntax:
    content: public bool IsTemporary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> is een tijdelijke <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>, anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.IsTemporary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Length
  id: Length
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wordt een waarde die als resultaat de grootte van geeft de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "De grootte van de <xref:System.Data.OracleClient.OracleLob>altijd wordt geretourneerd in bytes voor alle gegevenstypen.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "De grootte van de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> in bytes."
  overload: System.Data.OracleClient.OracleLob.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.LobType
  id: LobType
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee wordt een waarde die als resultaat geeft de <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> gegevenstype."
  remarks: "Een <xref:System.Data.OracleClient.OracleLob>mogelijk een van de volgende <xref:System.Data.OracleClient.OracleType>gegevenstypen.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob>      | Het gegevenstype OracleType | Beschrijving |   |--------------------------|-----------------|   | `Blob`| Een Oracle `BLOB` gegevenstype met binaire gegevens met een maximale grootte van 4 GB. Dit wordt toegewezen aan een <xref:System.Array>van het type <xref:System.Byte>. |   | `Clob`| Een Oracle `CLOB` gegevenstype met tekengegevens, op basis van het standaardteken ingesteld op de server, met een maximale grootte van 4 gigabyte.</xref:System.Byte> </xref:System.Array> Dit wordt toegewezen aan <xref:System.String>. |   | `NClob`| Een Oracle `NCLOB` gegevenstype met tekengegevens, op basis van de national tekenset op de server met een maximale grootte van 4 gigabyte.</xref:System.String> Dit wordt toegewezen aan <xref:System.String>. |</xref:System.String>"
  syntax:
    content: public System.Data.OracleClient.OracleType LobType { get; }
    return:
      type: System.Data.OracleClient.OracleType
      description: "Een van de <xref href=&quot;System.Data.OracleClient.OracleType&quot;> </xref> <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> gegevenstypen."
  overload: System.Data.OracleClient.OracleLob.LobType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee geeft u een null <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> object."
  remarks: "U kunt samenstellen een <xref:System.Data.OracleClient.OracleLob>die NULL met deze indeling is: ```   OracleLob myLob = OracleLOB.Null;   ``` deze techniek wordt gebruikt voor het testen of een `LOB` geretourneerd vanaf de server is NULL, zoals in dit voorbeeld te zien: ```   If(myLob == OracleLob.Null)   ``` A NULL `LOB` gedraagt zich op dezelfde manier naar een nul byte `LOB` in dat <xref:System.Data.OracleClient.OracleLob.Read%2A>is gelukt en retourneert altijd nul bytes.</xref:System.Data.OracleClient.OracleLob.Read%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public static readonly System.Data.OracleClient.OracleLob Null;
    return:
      type: System.Data.OracleClient.OracleLob
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Position
  id: Position
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "De huidige positie in lezen opgehaald de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> stroom."
  remarks: "De stroom moet ondersteuning voor zoekbewerkingen ophalen of instellen van de positie. Gebruik de <xref:System.Data.OracleClient.OracleLob.CanSeek%2A>eigenschap om te bepalen of de stroom zoekbewerkingen ondersteunt.</xref:System.Data.OracleClient.OracleLob.CanSeek%2A>       Zoeken naar andere locaties dan de lengte van de stroom wordt ondersteund. De positie van een oneven voor willen `CLOB` en `NCLOB` gegevenstypen wordt ook ondersteund. Zie voor meer informatie de sectie met opmerkingen van de <xref:System.Data.OracleClient.OracleLob.Read%2A>eigenschap.</xref:System.Data.OracleClient.OracleLob.Read%2A>       De eigenschap Position wordt niet bijhouden van het aantal bytes uit de stroom die is verbruikt, overgeslagen, of beide."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "De huidige positie binnen de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> stroom."
  overload: System.Data.OracleClient.OracleLob.Position*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Een reeks bytes leest uit de huidige <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> stream en ontwikkelingen de positie binnen de stroom door het aantal bytes gelezen."
  remarks: "De methode Read leest maximaal `count` bytes uit de huidige stream en slaat ze op in `buffer` beginnen bij `offset`. De huidige positie in de stroom is geavanceerde door het aantal gelezen bytes. echter, als een uitzondering optreedt, de huidige positie in de stroom blijft ongewijzigd. Lees retourneert het aantal bytes dat is gelezen. De geretourneerde waarde gelijk is aan nul alleen als de positie momenteel aan het einde van de stroom is. Lezen wordt geblokkeerd totdat ten minste Ã©Ã©n byte aan gegevens kan worden gelezen in het geval dat gegevens niet beschikbaar. Lezen van retourneert 0 als u probeert te lezen uit een `LOB` wanneer de huidige positie is aan het einde van `LOB`. Lees kan minder bytes dan de aangevraagde geretourneerd, zelfs als het einde van de stroom niet is bereikt.       De .NET Framework-gegevensprovider voor Oracle handelt alle `CLOB` en `NCLOB` gegevens als Unicode. Daarom bij het openen van `CLOB` en `NCLOB` gegevenstypen, werkt u altijd met het aantal bytes, waarbij elk teken 2 bytes is. Bijvoorbeeld, als een tekenreeks met drie tekens wordt opgeslagen als een `NCLOB` op Oracle-server waar de tekenset is 4 bytes per teken en u uitvoeren een `Read` bewerking, u de lengte van de tekenreeks opgeven als 6 bytes, hoewel deze 12 bytes op de server is opgeslagen.       De volgende C#-voorbeeld toont hoe lezen <xref:System.Data.OracleClient.OracleLob>objecten.</xref:System.Data.OracleClient.OracleLob>      ```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  &quot;CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)&quot;;      //  &quot;INSERT INTO TableWithLobs values (1, &quot;AA&quot;, &quot;AAA&quot;, N&quot;AAAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) >0)            Console.WriteLine(BLOB.LobType + &quot;.Read(&quot; + buffer + &quot;, &quot; + buffer.Length + &quot;) => &quot; + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)            Console.WriteLine(CLOB.LobType + &quot;.Read(&quot; + new string(cbuffer, 0, actual) + &quot;, &quot; + cbuffer.Length + &quot;) => &quot; + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + &quot;.Value => &quot; + NCLOB.Value);      }   }   ```U kunt samenstellen een <xref:System.Data.OracleClient.OracleLob>die NULL met deze indeling is: ```   OracleLob myLob = OracleLob.Null;   ``` deze techniek wordt gebruikt voor het testen of een `LOB` geretourneerd vanaf de server is NULL, zoals in het volgende voorbeeld te zien.</xref:System.Data.OracleClient.OracleLob>      ```   If(myLob == OracleLob.Null)   ```Een NULL `LOB` gedraagt zich op dezelfde manier naar een nul byte `LOB` in dat alleen kan worden uitgevoerd en altijd geeft nul bytes."
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een matrix met bytes. Wanneer deze methode retourneert, de buffer bevat de opgegeven byte-matrix met de waarden tussen `offset` en (`offset` + `count`) vervangen door het aantal bytes lezen uit de huidige bron."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in `buffer` waarop u wilt beginnen met opslaan van de gegevens uit de huidige stroom lezen. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes dat moet worden gelezen uit de huidige stroom. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
    return:
      type: System.Int32
      description: "Het totale aantal bytes in de buffer gelezen. Dit kan zijn dat kleiner is dan het aantal bytes aangevraagd als dat veel bytes momenteel niet beschikbaar zijn, of nul (0) als het einde van de stroom is bereikt."
  overload: System.Data.OracleClient.OracleLob.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> buffer </code> is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Een waarde in de <code> offset </code> of <code> count </code> parameter is niet positief.       - of - de som van de offset en het aantal parameters is groter dan de bufferlengte.       - of - waarde is opgegeven in de <code> amount </code> of <code> offset </code> parameter is kleiner dan nul of groter zijn dan 4 GB."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is niet binnen een transactie de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object is null of de verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee stelt u de positie op de huidige <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> stroom."
  remarks: "Als `offset` is negatief, de nieuwe positie moet worden voorafgegaan door de positie die is opgegeven door `origin` door het aantal bytes dat is opgegeven door `offset`. Als `offset` gelijk is aan nul, de nieuwe positie moet de positie die is opgegeven door `origin`. Als `offset` positief is, de nieuwe positie moet volgen op de positie die is opgegeven door `origin` door het aantal bytes dat is opgegeven door `offset`.       Zoeken naar andere locaties dan de lengte van de stroom wordt ondersteund. De positie van een oneven voor willen `CLOB` en `NCLOB` gegevenstypen wordt ook ondersteund. Zie voor meer informatie de sectie met opmerkingen van de <xref:System.Data.OracleClient.OracleLob.Read%2A>eigenschap.</xref:System.Data.OracleClient.OracleLob.Read%2A>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Een byte-offset ten opzichte van oorsprong. Als `offset` is negatief, de nieuwe positie lager is dan de positie die is opgegeven door `origin` door het aantal bytes dat is opgegeven door `offset`. Als `offset` gelijk is aan nul, vormt de positie die is opgegeven door de nieuwe positie `origin`. Als `offset` positief is, de nieuwe positie volgt de positie die is opgegeven door `origin` door het aantal bytes dat is opgegeven door `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Een waarde van het type <xref:System.IO.SeekOrigin>die wijzen op het referentiepunt gebruikt voor het verkrijgen van de nieuwe positie.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "De nieuwe positie binnen de huidige stroom."
  overload: System.Data.OracleClient.OracleLob.Seek*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> origin </code> parameter bevat geen geldige waarde."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De resulterende positie valt buiten de lengte van de waarde."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee stelt u de lengte van de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> stream naar een waarde lager dan de huidige lengte."
  remarks: "Een poging tot het verhogen van de lengte van de <xref:System.Data.OracleClient.OracleLob>stroom mislukt en retourneert &quot; bericht: ORA&22926;: opgegeven trim lengte is groter dan de lengte van de huidige LOB-waarde &quot; van de Oracle-server.</xref:System.Data.OracleClient.OracleLob>       Een stroom moet ondersteunen zowel schrijven en de functie voor SetLength willen.       De .NET Framework-gegevensprovider voor Oracle handelt alle `CLOB` en `NCLOB` gegevens als Unicode. Daarom bij het openen van `CLOB` en `NCLOB` gegevenstypen, werkt u altijd met het aantal bytes, waarbij elk teken 2 bytes is. Bijvoorbeeld, als een tekenreeks met drie tekens wordt opgeslagen als een `NCLOB` op Oracle-server waar de tekenset is 4 bytes per teken en u uitvoeren een `SetLength` bewerking, u de lengte van de tekenreeks opgeven als 6 bytes, hoewel deze 12 bytes op de server is opgeslagen.       Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.      > [!NOTE] > Een schrijfbewerking naar een alleen-lezen `LOB` mogelijk wel, maar werkt niet bij de `LOB` op de server. In dit geval echter de lokale kopie van de `LOB` wordt bijgewerkt. Daarom later leesbewerkingen op de <xref:System.Data.OracleClient.OracleLob>object kan het resultaat van de schrijfbewerking.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "De gewenste lengte van de huidige <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> stream in bytes. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
  overload: System.Data.OracleClient.OracleLob.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Een waarde die is opgegeven de <code> value </code> parameter voor een <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstype is nog niet.       - of - waarde is opgegeven in de <code> value </code> parameter is kleiner dan nul of groter zijn dan 4 GB."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is niet binnen een transactie de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object is null of de verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Value
  id: Value
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hiermee haalt de common language runtime stroom waarde equivalent van de onderliggende waarde."
  remarks: "Voor <xref:System.Data.OracleClient.OracleType>gegevenstypen, waarde retourneert het gehele onderliggende gegevens als een aaneengesloten matrix van het type `Byte[]`.</xref:System.Data.OracleClient.OracleType> Voor <xref:System.Data.OracleClient.OracleType>en <xref:System.Data.OracleClient.OracleType>gegevenstypen, waarde retourneert de gegevens als een `String` gegevenstype.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleType> Voor null-gegevens retourneert de waarde <xref:System.DBNull>.</xref:System.DBNull> Door de geretourneerde waarden te vergelijken, kunt u onderscheid maken tussen leeg gegevens null-gegevens en gegevens.      > [!NOTE] > Voordeel van het gebruik `LOB` gegevenstypen is de mogelijkheid om op te halen van grote hoeveelheden gegevens in reeksen op de client. Echter, als u waarde gebruikt, krijgt u de gegevens voor de `LOB` kolom als een aaneengesloten chunk die kan toepassing overhead aanzienlijk verhogen."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, an array of type <xref uid=&quot;langword_csharp_Byte[]&quot; name=&quot;Byte[]&quot; href=&quot;&quot;></xref>. For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref> and <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Voor null gegevens <xref href=&quot;System.DBNull&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.Value*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Een reeks bytes geschreven naar het huidige <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> stream en de huidige positie binnen deze stroom wordt bestuurd door het aantal geschreven bytes."
  remarks: "Als de write-bewerking geslaagd is, wordt de positie binnen de stroom gaat door het aantal geschreven bytes. Als u een uitzondering optreedt, wordt de positie binnen de stroom ongewijzigd.       Schrijven van voorbij het einde van `LOB` is toegestaan en vergroot de `LOB` door het aantal geschreven bytes.       De .NET Framework-gegevensprovider voor Oracle handelt alle `CLOB` en `NCLOB` gegevens als Unicode. Daarom bij het openen van `CLOB` en `NCLOB` gegevenstypen, werkt u altijd met het aantal bytes, waarbij elk teken 2 bytes is. Bijvoorbeeld, als een tekenreeks met drie tekens wordt opgeslagen als een `NCLOB` op Oracle-server waar de tekenset is 4 bytes per teken en u uitvoeren een `Write` bewerking, u de lengte van de tekenreeks opgeven als 6 bytes, hoewel deze 12 bytes op de server is opgeslagen.       Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.       De volgende C#-voorbeeld toont hoe om te schrijven naar <xref:System.Data.OracleClient.OracleLob>objecten.</xref:System.Data.OracleClient.OracleLob>      ```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        &quot;CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)&quot;;      //        &quot;INSERT INTO tablewithlobs values (1, &quot;AA&quot;, &quot;AAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs FOR UPDATE&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + &quot;.Write(&quot; + buffer + &quot;, 0, 2) => &quot; + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + &quot;.CopyTo(&quot; + BLOB2.Value + &quot;) => &quot; + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```      > [!NOTE]> Een schrijfbewerking naar een alleen-lezen `LOB` mogelijk wel, maar werkt niet bij de `LOB` op de server. In dit geval echter de lokale kopie van de `LOB` wordt bijgewerkt. Daarom later leesbewerkingen op de <xref:System.Data.OracleClient.OracleLob>object kan het resultaat van de schrijfbewerking.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Een matrix met bytes. Deze methode wordt gekopieerd van het aantal bytes dat is opgegeven `count` van `buffer` naar de huidige stroom."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in `buffer` waarop u wilt beginnen met het kopiÃ«ren van bytes naar de huidige stroom. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
    - id: count
      type: System.Int32
      description: "Het aantal bytes dat moet worden geschreven naar de huidige stroom. Voor <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen, dit moet een even getal zijn."
  overload: System.Data.OracleClient.OracleLob.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> buffer </code> -parameter is een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Een waarde in de <code> offset </code> of <code> count </code> parameter is niet positief.       - of - de som van de <code> offset </code> en <code> count </code> parameters is groter dan de <code> buffer </code> lengte.       - of - waarde is opgegeven in de <code> count </code> of <code> offset </code> parameter is kleiner dan nul of groter zijn dan 4 GB.       - of - u moet opgeven <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> gegevenstypen als een even getal bytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De bewerking is niet binnen een transactie de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> -object is null of de verbinding is gesloten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Het object is gesloten of verwijderd."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Er is een Oracle-fout opgetreden."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Een byte schrijft naar de huidige positie in de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> stream en verplaatst u de positie binnen de stroom van Ã©Ã©n byte."
  remarks: "Als de write-bewerking geslaagd is, gaat de positie binnen de stroom van Ã©Ã©n byte. Als u een uitzondering optreedt, wordt de positie binnen de stroom ongewijzigd.       Schrijven van voorbij het einde van de `LOB` is toegestaan en vergroot de `LOB` door Ã©Ã©n byte.       Schrijven naar de `LOB`, moet u hebt opgehaald de `LOB` met de component FOR UPDATE in de SELECT-instructie en u moet een lokale transactie is gestart.      > [!NOTE] > Een schrijfbewerking naar een alleen-lezen `LOB` mogelijk wel, maar werkt niet bij de `LOB` op de server. In dit geval echter de lokale kopie van de `LOB` wordt bijgewerkt. Daarom later leesbewerkingen op de <xref:System.Data.OracleClient.OracleLob>object kan het resultaat van de schrijfbewerking.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "De byte schrijven naar de stroom."
  overload: System.Data.OracleClient.OracleLob.WriteByte*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
- uid: System.Data.OracleClient.OracleLobOpenMode
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLobOpenMode
  nameWithType: OracleLobOpenMode
  fullName: System.Data.OracleClient.OracleLobOpenMode
- uid: System.Data.OracleClient.OracleLob.CanRead
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleLob.CanSeek
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleLob.Clone
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleLob.Connection
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleLob.EndBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
- uid: System.Data.OracleClient.OracleLob.Erase
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Flush
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
- uid: System.Data.OracleClient.OracleLob.IsBatched
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
- uid: System.Data.OracleClient.OracleType
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleType
  nameWithType: OracleType
  fullName: System.Data.OracleClient.OracleType
- uid: System.Data.OracleClient.OracleLob.Null
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
- uid: System.Data.OracleClient.OracleLob.Position
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
- uid: System.Data.OracleClient.OracleLob.Value
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleLob.Append*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append
  nameWithType: OracleLob.Append
- uid: System.Data.OracleClient.OracleLob.BeginBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch
  nameWithType: OracleLob.BeginBatch
- uid: System.Data.OracleClient.OracleLob.CanRead*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
- uid: System.Data.OracleClient.OracleLob.CanSeek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
- uid: System.Data.OracleClient.OracleLob.Clone*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone
  nameWithType: OracleLob.Clone
- uid: System.Data.OracleClient.OracleLob.Connection*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
- uid: System.Data.OracleClient.OracleLob.CopyTo*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo
  nameWithType: OracleLob.CopyTo
- uid: System.Data.OracleClient.OracleLob.Dispose*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose
  nameWithType: OracleLob.Dispose
- uid: System.Data.OracleClient.OracleLob.EndBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch
  nameWithType: OracleLob.EndBatch
- uid: System.Data.OracleClient.OracleLob.Erase*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase
  nameWithType: OracleLob.Erase
- uid: System.Data.OracleClient.OracleLob.Flush*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush
  nameWithType: OracleLob.Flush
- uid: System.Data.OracleClient.OracleLob.IsBatched*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
- uid: System.Data.OracleClient.OracleLob.Position*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read
  nameWithType: OracleLob.Read
- uid: System.Data.OracleClient.OracleLob.Seek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek
  nameWithType: OracleLob.Seek
- uid: System.Data.OracleClient.OracleLob.SetLength*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength
  nameWithType: OracleLob.SetLength
- uid: System.Data.OracleClient.OracleLob.Value*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write
  nameWithType: OracleLob.Write
- uid: System.Data.OracleClient.OracleLob.WriteByte*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte
  nameWithType: OracleLob.WriteByte
