### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.OpenFileDialog
  id: OpenFileDialog
  children:
  - System.Windows.Forms.OpenFileDialog.#ctor
  - System.Windows.Forms.OpenFileDialog.CheckFileExists
  - System.Windows.Forms.OpenFileDialog.Multiselect
  - System.Windows.Forms.OpenFileDialog.OpenFile
  - System.Windows.Forms.OpenFileDialog.ReadOnlyChecked
  - System.Windows.Forms.OpenFileDialog.Reset
  - System.Windows.Forms.OpenFileDialog.SafeFileName
  - System.Windows.Forms.OpenFileDialog.SafeFileNames
  - System.Windows.Forms.OpenFileDialog.ShowReadOnly
  langs:
  - csharp
  name: OpenFileDialog
  nameWithType: OpenFileDialog
  fullName: System.Windows.Forms.OpenFileDialog
  type: Class
  summary: "Geeft een standaard dialoogvenster waarin de gebruiker een bestand te openen. Deze klasse kan niet worden overgenomen."
  remarks: "Deze klasse kunt u om te controleren of een bestand bestaat en om dit te openen. De <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>eigenschap bepaalt of het selectievakje alleen-lezen wordt weergegeven in het dialoogvenster.</xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> De <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>eigenschap geeft aan of het selectievakje alleen-lezen is ingeschakeld.</xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>       De meeste van de kernfunctionaliteit van deze klasse is gevonden in de <xref:System.Windows.Forms.FileDialog>klasse.</xref:System.Windows.Forms.FileDialog>       Als u wilt dat de gebruiker de mogelijkheid gebruik te selecteren van een map in plaats van een bestand <xref:System.Windows.Forms.FolderBrowserDialog>in plaats daarvan.</xref:System.Windows.Forms.FolderBrowserDialog>"
  example:
  - "The following code example creates an OpenFileDialog, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=fullName> method. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/t-system.windows.forms.o_1_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/t-system.windows.forms.o_1_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.o_1_1.vb)]"
  syntax:
    content: 'public sealed class OpenFileDialog : System.Windows.Forms.FileDialog'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.CommonDialog
  - System.Windows.Forms.FileDialog
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.CommonDialog.HelpRequest
  - System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)
  - System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.CommonDialog.ShowDialog
  - System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)
  - System.Windows.Forms.CommonDialog.Tag
  - System.Windows.Forms.FileDialog.AddExtension
  - System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  - System.Windows.Forms.FileDialog.CheckPathExists
  - System.Windows.Forms.FileDialog.CustomPlaces
  - System.Windows.Forms.FileDialog.DefaultExt
  - System.Windows.Forms.FileDialog.DereferenceLinks
  - System.Windows.Forms.FileDialog.EventFileOk
  - System.Windows.Forms.FileDialog.FileName
  - System.Windows.Forms.FileDialog.FileNames
  - System.Windows.Forms.FileDialog.FileOk
  - System.Windows.Forms.FileDialog.Filter
  - System.Windows.Forms.FileDialog.FilterIndex
  - System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.FileDialog.InitialDirectory
  - System.Windows.Forms.FileDialog.Instance
  - System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.FileDialog.Options
  - System.Windows.Forms.FileDialog.RestoreDirectory
  - System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  - System.Windows.Forms.FileDialog.ShowHelp
  - System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  - System.Windows.Forms.FileDialog.Title
  - System.Windows.Forms.FileDialog.ToString
  - System.Windows.Forms.FileDialog.ValidateNames
  platform:
  - net462
- uid: System.Windows.Forms.OpenFileDialog.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.OpenFileDialog
  langs:
  - csharp
  name: OpenFileDialog()
  nameWithType: OpenFileDialog.OpenFileDialog()
  fullName: System.Windows.Forms.OpenFileDialog.OpenFileDialog()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initialiseert een exemplaar van de <xref href=&quot;System.Windows.Forms.OpenFileDialog&quot;> </xref> klasse."
  remarks: "Dit is de standaard, constructor compiler is opgegeven voor de <xref:System.Windows.Forms.OpenFileDialog>klasse.</xref:System.Windows.Forms.OpenFileDialog>"
  syntax:
    content: public OpenFileDialog ();
    parameters: []
  overload: System.Windows.Forms.OpenFileDialog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OpenFileDialog.CheckFileExists
  id: CheckFileExists
  parent: System.Windows.Forms.OpenFileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: OpenFileDialog.CheckFileExists
  fullName: System.Windows.Forms.OpenFileDialog.CheckFileExists
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of een waarschuwing in het dialoogvenster wordt weergegeven als de gebruiker een bestandsnaam die niet bestaat opgeeft."
  syntax:
    content: public override bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het dialoogvenster wordt een waarschuwing weergegeven wanneer de gebruiker een bestandsnaam in die niet bestaat. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.OpenFileDialog.CheckFileExists*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OpenFileDialog.Multiselect
  id: Multiselect
  parent: System.Windows.Forms.OpenFileDialog
  langs:
  - csharp
  name: Multiselect
  nameWithType: OpenFileDialog.Multiselect
  fullName: System.Windows.Forms.OpenFileDialog.Multiselect
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of het dialoogvenster instelling kunt u meerdere bestanden worden geselecteerd."
  remarks: "Gebruik de <xref:System.Windows.Forms.FileDialog.FileNames%2A>eigenschap voor toegang tot de volledige lijst met bestandsnamen geselecteerd.</xref:System.Windows.Forms.FileDialog.FileNames%2A>"
  example:
  - "The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form. It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the Multiselect property to true. This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.  \n  \n [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/add/codesnippet/visualbasic/TestOpenFileDialogMultiSelectVB/Form1.vb#1)]\n [!code-cs[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/add/codesnippet/csharp/TestOpenFileDialogMultiSelect/Form1.cs#1)]"
  syntax:
    content: public bool Multiselect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het dialoogvenster kunt meerdere bestanden worden geselecteerd samen of gelijktijdig; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.OpenFileDialog.Multiselect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OpenFileDialog.OpenFile
  id: OpenFile
  parent: System.Windows.Forms.OpenFileDialog
  langs:
  - csharp
  name: OpenFile()
  nameWithType: OpenFileDialog.OpenFile()
  fullName: System.Windows.Forms.OpenFileDialog.OpenFile()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee opent u het bestand geselecteerd door de gebruiker, met alleen-lezen toegang. Het bestand wordt opgegeven door de <xref:System.Windows.Forms.FileDialog.FileName*>eigenschap.</xref:System.Windows.Forms.FileDialog.FileName*>"
  remarks: "De methode OpenFile wordt gebruikt voor een faciliteit snel een bestand te openen vanuit het dialoogvenster. Het bestand is geopend in de modus alleen-lezen om beveiligingsredenen. Een bestand openen in de modus lezen/schrijven, moet u een andere methode, zoals <xref:System.IO.FileStream>.</xref:System.IO.FileStream>"
  example:
  - "The following code example demonstrates how to use the OpenFile method.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/m-system.windows.forms.o_1_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/m-system.windows.forms.o_1_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_1_1.vb)]"
  syntax:
    content: public System.IO.Stream OpenFile ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>die het kenmerk alleen-lezen bestand geselecteerd door de gebruiker opgeeft.</xref:System.IO.Stream>"
  overload: System.Windows.Forms.OpenFileDialog.OpenFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De bestandsnaam is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked
  id: ReadOnlyChecked
  parent: System.Windows.Forms.OpenFileDialog
  langs:
  - csharp
  name: ReadOnlyChecked
  nameWithType: OpenFileDialog.ReadOnlyChecked
  fullName: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of het selectievakje alleen-lezen is geselecteerd."
  remarks: "De status van de ReadOnlyChecked heeft geen invloed op de modus lezen/schrijven die <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=fullName>maakt gebruik van een bestand geselecteerd in het dialoogvenster te openen.</xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=fullName> <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>open het bestand wordt altijd in de modus alleen-lezen.</xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>       De <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>eigenschap moet worden ingesteld voordat om het selectievakje alleen-lezen in het dialoogvenster wordt weergegeven.</xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>"
  example:
  - "The following code example demonstrates the use of the ReadOnlyChecked property. This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`. If the user clicks the option to open the file in read-only mode, the ReadOnlyChecked property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file. Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.  \n  \n [!code-vb[DlgOpenFileReadOnly#1](~/add/codesnippet/visualbasic/p-system.windows.forms.o_0_1.vb)]\n [!code-cs[DlgOpenFileReadOnly#1](~/add/codesnippet/csharp/p-system.windows.forms.o_0_1.cs)]\n [!code-cpp[DlgOpenFileReadOnly#1](~/add/codesnippet/cpp/p-system.windows.forms.o_0_1.cpp)]"
  syntax:
    content: public bool ReadOnlyChecked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het selectievakje alleen-lezen is geselecteerd. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OpenFileDialog.Reset
  id: Reset
  parent: System.Windows.Forms.OpenFileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: OpenFileDialog.Reset()
  fullName: System.Windows.Forms.OpenFileDialog.Reset()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee stelt alle eigenschappen op hun standaardwaarden."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Windows.Forms.OpenFileDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OpenFileDialog.SafeFileName
  id: SafeFileName
  parent: System.Windows.Forms.OpenFileDialog
  langs:
  - csharp
  name: SafeFileName
  nameWithType: OpenFileDialog.SafeFileName
  fullName: System.Windows.Forms.OpenFileDialog.SafeFileName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee wordt de bestandsnaam en de extensie voor het geselecteerde bestand in het dialoogvenster. De bestandsnaam bevat niet het pad."
  remarks: "Een veilige bestandsnaam (alleen de bestandsnaam en de extensie zonder pad) kan worden gebruikt om beveiliging te verbeteren voor toepassingen omdat deze wordt informatie over het pad niet beschikbaar. Deze eigenschap moet worden verkregen tot de code die wordt uitgevoerd met beperkt vertrouwen."
  syntax:
    content: public string SafeFileName { get; }
    return:
      type: System.String
      description: "De bestandsnaam en de extensie voor het bestand dat is geselecteerd in het dialoogvenster. De bestandsnaam bevat niet het pad. De standaardwaarde is een lege tekenreeks."
  overload: System.Windows.Forms.OpenFileDialog.SafeFileName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OpenFileDialog.SafeFileNames
  id: SafeFileNames
  parent: System.Windows.Forms.OpenFileDialog
  langs:
  - csharp
  name: SafeFileNames
  nameWithType: OpenFileDialog.SafeFileNames
  fullName: System.Windows.Forms.OpenFileDialog.SafeFileNames
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee wordt een matrix van bestandsnamen en -extensies voor de geselecteerde bestanden in het dialoogvenster. De bestandsnamen opnemen niet het pad."
  remarks: "Een veilige bestandsnaam (alleen de bestandsnaam en de extensie zonder pad) kan worden gebruikt om beveiliging te verbeteren voor toepassingen omdat deze wordt informatie over het pad niet beschikbaar. Deze eigenschap moet worden verkregen tot de code die wordt uitgevoerd met beperkt vertrouwen."
  syntax:
    content: public string[] SafeFileNames { get; }
    return:
      type: System.String[]
      description: "Een matrix van bestandsnamen en -extensies voor de geselecteerde bestanden in het dialoogvenster. De bestandsnamen opnemen niet het pad. Als er geen bestanden zijn geselecteerd, wordt een lege matrix geretourneerd."
  overload: System.Windows.Forms.OpenFileDialog.SafeFileNames*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OpenFileDialog.ShowReadOnly
  id: ShowReadOnly
  parent: System.Windows.Forms.OpenFileDialog
  langs:
  - csharp
  name: ShowReadOnly
  nameWithType: OpenFileDialog.ShowReadOnly
  fullName: System.Windows.Forms.OpenFileDialog.ShowReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of het dialoogvenster een selectievakje alleen-lezen bevat."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the ShowReadOnly property. This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the ShowReadOnly property set to `true`. If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file. Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.  \n  \n [!code-vb[DlgOpenFileReadOnly#1](~/add/codesnippet/visualbasic/p-system.windows.forms.o_1_1.vb)]\n [!code-cs[DlgOpenFileReadOnly#1](~/add/codesnippet/csharp/p-system.windows.forms.o_1_1.cs)]\n [!code-cpp[DlgOpenFileReadOnly#1](~/add/codesnippet/cpp/p-system.windows.forms.o_1_1.cpp)]"
  syntax:
    content: public bool ShowReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het dialoogvenster een selectievakje alleen-lezen bevat. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.OpenFileDialog.ShowReadOnly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.FileDialog
  isExternal: false
  name: System.Windows.Forms.FileDialog
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Forms.OpenFileDialog.#ctor
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: OpenFileDialog()
  nameWithType: OpenFileDialog.OpenFileDialog()
  fullName: System.Windows.Forms.OpenFileDialog.OpenFileDialog()
- uid: System.Windows.Forms.OpenFileDialog.CheckFileExists
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: OpenFileDialog.CheckFileExists
  fullName: System.Windows.Forms.OpenFileDialog.CheckFileExists
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.OpenFileDialog.Multiselect
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: Multiselect
  nameWithType: OpenFileDialog.Multiselect
  fullName: System.Windows.Forms.OpenFileDialog.Multiselect
- uid: System.Windows.Forms.OpenFileDialog.OpenFile
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: OpenFile()
  nameWithType: OpenFileDialog.OpenFile()
  fullName: System.Windows.Forms.OpenFileDialog.OpenFile()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: ReadOnlyChecked
  nameWithType: OpenFileDialog.ReadOnlyChecked
  fullName: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked
- uid: System.Windows.Forms.OpenFileDialog.Reset
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: Reset()
  nameWithType: OpenFileDialog.Reset()
  fullName: System.Windows.Forms.OpenFileDialog.Reset()
- uid: System.Windows.Forms.OpenFileDialog.SafeFileName
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: OpenFileDialog.SafeFileName
  fullName: System.Windows.Forms.OpenFileDialog.SafeFileName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.OpenFileDialog.SafeFileNames
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: OpenFileDialog.SafeFileNames
  fullName: System.Windows.Forms.OpenFileDialog.SafeFileNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.OpenFileDialog.ShowReadOnly
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: ShowReadOnly
  nameWithType: OpenFileDialog.ShowReadOnly
  fullName: System.Windows.Forms.OpenFileDialog.ShowReadOnly
- uid: System.Windows.Forms.OpenFileDialog.#ctor*
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: OpenFileDialog
  nameWithType: OpenFileDialog.OpenFileDialog
- uid: System.Windows.Forms.OpenFileDialog.CheckFileExists*
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: OpenFileDialog.CheckFileExists
- uid: System.Windows.Forms.OpenFileDialog.Multiselect*
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: Multiselect
  nameWithType: OpenFileDialog.Multiselect
- uid: System.Windows.Forms.OpenFileDialog.OpenFile*
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: OpenFile
  nameWithType: OpenFileDialog.OpenFile
- uid: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked*
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: ReadOnlyChecked
  nameWithType: OpenFileDialog.ReadOnlyChecked
- uid: System.Windows.Forms.OpenFileDialog.Reset*
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: Reset
  nameWithType: OpenFileDialog.Reset
- uid: System.Windows.Forms.OpenFileDialog.SafeFileName*
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: OpenFileDialog.SafeFileName
- uid: System.Windows.Forms.OpenFileDialog.SafeFileNames*
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: OpenFileDialog.SafeFileNames
- uid: System.Windows.Forms.OpenFileDialog.ShowReadOnly*
  parent: System.Windows.Forms.OpenFileDialog
  isExternal: false
  name: ShowReadOnly
  nameWithType: OpenFileDialog.ShowReadOnly
