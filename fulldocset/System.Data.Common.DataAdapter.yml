### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DataAdapter
  id: DataAdapter
  children:
  - System.Data.Common.DataAdapter.#ctor
  - System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.GetFillParameters
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
  type: Class
  summary: "Hiermee geeft u een aantal SQL-opdrachten en de verbinding met een database die worden gebruikt voor het vervullen van de <xref href=&quot;System.Data.DataSet&quot;> </xref> en de gegevensbron bijwerken."
  remarks: "De DataAdapter fungeert als een brug tussen een <xref:System.Data.DataSet>en een gegevensbron voor het ophalen en opslaan van gegevens.</xref:System.Data.DataSet> De DataAdapter biedt deze brug door toe te wijzen <xref:System.Data.Common.DataAdapter.Fill%2A>, die de gegevens in de <xref:System.Data.DataSet>overeenkomen met de gegevens in de gegevensbron, en <xref:System.Data.IDataAdapter.Update%2A>, die de gegevens in de gegevensbron om de gegevens in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> gewijzigd</xref:System.Data.IDataAdapter.Update%2A> </xref:System.Data.DataSet> wordt gewijzigd</xref:System.Data.Common.DataAdapter.Fill%2A>       Als u verbinding met een SQL Server-database maakt, kunt u de algehele prestaties verhogen met behulp van de <xref:System.Data.SqlClient.SqlDataAdapter>samen met de bijbehorende <xref:System.Data.SqlClient.SqlCommand>en <xref:System.Data.SqlClient.SqlConnection>objecten.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter> Voor OLE DB-ondersteunde gegevensbronnen, gebruikt u de DataAdapter met de bijbehorende <xref:System.Data.OleDb.OleDbCommand>en <xref:System.Data.OleDb.OleDbConnection>objecten.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand> Voor ODBC-ondersteunde gegevensbronnen, gebruikt u de DataAdapter met de bijbehorende <xref:System.Data.Odbc.OdbcCommand>en <xref:System.Data.Odbc.OdbcConnection>objecten.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcCommand> Voor Oracle-databases, gebruikt u de DataAdapter met de bijbehorende <xref:System.Data.OracleClient.OracleCommand>en <xref:System.Data.OracleClient.OracleConnection>objecten.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleCommand>       Wanneer een exemplaar van DataAdapter is gemaakt, worden de eigenschappen lezen/schrijven ingesteld op de beginwaarden. Zie voor een lijst van deze waarden, de DataAdapter-constructor."
  syntax:
    content: 'public class DataAdapter : System.ComponentModel.Component, System.Data.IDataAdapter'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Data.IDataAdapter
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initialiseert een nieuw exemplaar van een <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> klasse."
  remarks: "Wanneer een exemplaar van <xref:System.Data.Common.DataAdapter>is gemaakt, het volgende lezen/schrijven-eigenschappen zijn ingesteld op de volgende beginwaarden.</xref:System.Data.Common.DataAdapter>      | Eigenschappen | InitiÃ«le waarde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|   | <xref:System.Data.Common.DataAdapter.TableMappings%2A>| Een matrix met objecten <xref:System.Data.Common.DataAdapter.TableMappings%2A>. |       U kunt de waarde van een van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  syntax:
    content: protected DataAdapter ();
    parameters: []
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  id: '#ctor(System.Data.Common.DataAdapter)'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initialiseert een nieuw exemplaar van een <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> klasse vanuit een bestaand object van hetzelfde type."
  remarks: "Deze overbelasting van de <xref:System.Data.Common.DataAdapter>constructor is ontworpen voor gebruik door een .NET Framework-gegevensprovider bij het implementeren van een vergelijkbare constructor voor gebruik in een implementatie van de kloon.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected DataAdapter (System.Data.Common.DataAdapter from);
    parameters:
    - id: from
      type: System.Data.Common.DataAdapter
      description: "Een <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> object dat wordt gebruikt voor het maken van de nieuwe <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  id: AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of <> </> *> is aangeroepen voor een <xref href=&quot;System.Data.DataRow&quot;> </xref> nadat deze is toegevoegd aan de <xref href=&quot;System.Data.DataTable&quot;> </xref> tijdens een van de * *vullen** bewerkingen."
  remarks: "Als `false`, <xref:System.Data.DataRow.AcceptChanges%2A>niet wordt aangeroepen, en de zojuist toegevoegde rijen worden behandeld als ingevoegde rijen.</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public bool AcceptChangesDuringFill { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <xref:System.Data.DataRow.AcceptChanges*>is aangeroepen voor de <xref href=&quot;System.Data.DataRow&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataRow.AcceptChanges*> De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  id: AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Opgehaald of ingesteld of <> </> *> wordt aangeroepen tijdens een <> </> *>."
  remarks: "Tijdens een aanroep naar de `Update` methode van een `DataAdapter`, de database kunt gegevens terug naar de ADO.NET-toepassing als output-parameters of als de eerste geretourneerde record van een resultatenset verzenden. ADO.NET kunt deze waarden ophaalt en bijwerken van de overeenkomstige kolommen in de <xref:System.Data.DataRow>wordt bijgewerkt.</xref:System.Data.DataRow> Standaard ADO.NET roept de `AcceptChanges` methode van de `DataRow` na de update. Echter, als u wilt samenvoegen de bijgewerkte rij weer in een ander <xref:System.Data.DataTable>, kunt u preserver de oorspronkelijke waarde van een primaire sleutelkolom.</xref:System.Data.DataTable> Een primaire sleutelkolom overeenkomt met een automatisch oplopende kolom in de database, zoals een identiteitskolom mag bijvoorbeeld nieuwe waarden die zijn toegewezen door de database die niet overeenkomen met de oorspronkelijke waarden die zijn toegewezen in de `DataRow`. Standaard `AcceptChanges` impliciet wordt aangeroepen na een update en de oorspronkelijke waarden in de rij zijn <xref:System.Data.DataColumn.AutoIncrement%2A>waarden toegewezen door ADO.NET, gaan verloren.</xref:System.Data.DataColumn.AutoIncrement%2A> U kunt behouden de oorspronkelijke waarden in de `DataRow` door te voorkomen dat `ADO.NET` na de aanroep `AcceptChanges` nadat deze door de eigenschap AcceptChangesDuringUpdate in te stellen op een update uitvoert op een rij `false`, die de oorspronkelijke waarden behouden blijft.      > [!NOTE] > Instelling de `AcceptChangesDuringUpdate` eigenschap `false` is van toepassing op alle gegevenswijzigingen, niet alleen wordt ingevoegd. Als u wilt bewerken of verwijderen van rijen in dezelfde update, en als u wilt onderdrukken van de aanroep van `AcceptChanges` alleen voor invoegen en klik vervolgens in plaats van de instelling `AccceptChangesDuringUpdate` naar `false`, gebruikt u een gebeurtenis-handler voor de `RowUpdated` gebeurtenis van de `DataAdapter`. In de gebeurtenisstroom handler die u kunt controleren de <xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A>om te bepalen of wijziging van de gegevens is een INSERT-bewerking, en of `true`, stel de <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>eigenschap van de <xref:System.Data.Common.RowUpdatedEventArgs>tot <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> </xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A> Zie voor meer informatie en een voorbeeld [bij het ophalen van de identiteit of toegevoegde](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example demonstrates extracting changed rows from a `DataTable` and using a <xref:System.Data.SqlClient.SqlDataAdapter> to update the data source and retrieve a new identity column value. By setting the `AcceptChangesDuringUpdate` property of the <xref:System.Data.SqlClient.SqlDataAdapter> to `false` to preserve the original auto increment value, the new data can then be merged into the original <xref:System.Data.DataTable>, even if the new identity value does not match the original auto increment value in the `DataTable`.  \n  \n [!code-vb[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_7_1.vb)]\n [!code-cs[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/csharp/p-system.data.common.dat_7_1.cs)]"
  syntax:
    content: public bool AcceptChangesDuringUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <> </> *> wordt aangeroepen tijdens een <> </> *>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CloneInternals
  id: CloneInternals
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Maakt een kopie van dit exemplaar van <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  remarks: "Deze methode is afgeschaft. De <xref:System.Data.Common.DataAdapter.%23ctor%2A>constructor moet worden gebruikt in plaats van deze methode.</xref:System.Data.Common.DataAdapter.%23ctor%2A>       De opdrachten de <xref:System.Data.Common.DataAdapter.TableMappings%2A>, wordt de <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>, en de <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>worden gekloond.</xref:System.Data.Common.DataAdapter.MissingMappingAction%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> Echter, de verbindingen voor de opdrachten zijn niet gekopieerd, maar gedeeld. Dus de gekloonde <xref:System.Data.Common.DataAdapter>kan worden gebruikt op basis van dezelfde verbinding als het origineel.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected virtual System.Data.Common.DataAdapter CloneInternals ();
    parameters: []
    return:
      type: System.Data.Common.DataAdapter
      description: "Het gekloonde exemplaar van <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.CloneInternals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  id: ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of voor het genereren van een uitzondering opgeleverd bij een fout is opgetreden tijdens het bijwerken van een rij."
  remarks: "Als `ContinueUpdateOnError` is ingesteld op `true`, geen uitzondering gegenereerd wanneer er een fout optreedt tijdens het bijwerken van een rij. Het bijwerken van de rij wordt overgeslagen en de informatie over de fout wordt geplaatst in de <xref:System.Data.DataRow.RowError%2A>eigenschap van de rij in de fout.</xref:System.Data.DataRow.RowError%2A> De <xref:System.Data.Common.DataAdapter>blijft bijwerken van de volgende rijen.</xref:System.Data.Common.DataAdapter>       Als `ContinueUpdateOnError` is ingesteld op `false`, een uitzondering gegenereerd wanneer er een fout optreedt tijdens het bijwerken van een rij."
  syntax:
    content: public bool ContinueUpdateOnError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>de update doorgaan zonder dat er een uitzondering; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  id: CreateTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Maakt een nieuw <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.Common.DataTableMappingCollection CreateTableMappings ();
    parameters: []
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "Een nieuwe tabel toewijzing verzameling."
  overload: System.Data.Common.DataAdapter.CreateTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek <xref:System.IDisposable.Dispose%2A>methode en de <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A> </xref:System.IDisposable.Dispose%2A> `Dispose`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de `disposing` parameter ingesteld op `true`. <xref:System.Object.Finalize%2A>roept `Dispose` met `disposing` ingesteld op `false`.</xref:System.Object.Finalize%2A>       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Data.Common.DataAdapter>verwijzingen.</xref:System.Data.Common.DataAdapter> Deze methode roept de `Dispose` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Data.Common.DataAdapter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  id: Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Wordt toegevoegd of vernieuwt rijen in de <xref href=&quot;System.Data.DataSet&quot;> </xref> overeenkomen met die in de gegevensbron."
  remarks: "De methode opvulling rijen opgehaald uit de gegevensbron met behulp van de SELECT-instructie opgegeven door een gekoppeld <xref:System.Data.IDbDataAdapter.SelectCommand%2A>eigenschap.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Het verbindingsobject dat is gekoppeld aan de SELECT-instructie moet geldig zijn, maar deze hoeft niet te worden geopend. Als de verbinding is gesloten voordat opvulling wordt aangeroepen, wordt geopend om gegevens te halen, wordt gesloten. Als de verbinding geopend is voordat opvulling wordt aangeroepen, blijft het geopend.       De opvulling van de bewerking vervolgens worden de rijen toegevoegd aan de doelserver <xref:System.Data.DataTable>objecten in de <xref:System.Data.DataSet>, maken de <xref:System.Data.DataTable>objecten als deze niet al bestaan.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> Bij het maken van <xref:System.Data.DataTable>objecten, de doorvoerbewerking maakt normaal gesproken alleen naam kolommetagegevens.</xref:System.Data.DataTable> Echter, als de <xref:System.Data.IDataAdapter.MissingSchemaAction%2A>eigenschap is ingesteld op `AddWithKey`, beperkingen en de juiste primaire sleutels zijn gemaakt.</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       Als de `SelectCommand` de resultaten van een OUTER JOIN retourneert de `DataAdapter` een <xref:System.Data.DataTable.PrimaryKey%2A>waarde voor de resulterende <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> niet is ingesteld De primaire sleutel in om ervoor te zorgen dat de dubbele rijen op de juiste manier worden omgezet, moet u expliciet definiÃ«ren. Zie voor meer informatie [primaire sleutels definiÃ«ren](~/add/includes/ajax-current-ext-md.md).       Als er dubbele kolommen in de gegevensadapter tijdens het vullen van optreedt een <xref:System.Data.DataTable>, genereert namen voor de volgende kolommen, met behulp van het patroon &quot;columnname1&quot;, &quot;columnname2&quot;, &quot;columnname3&quot;, enzovoort.</xref:System.Data.DataTable> Als de inkomende gegevens naamloze kolommen bevat, worden geplaatst de <xref:System.Data.DataSet>volgens het patroon &quot;Kolom1&quot;, &quot;Kolom2&quot;, enzovoort.</xref:System.Data.DataSet> Wanneer meerdere resultatensets worden toegevoegd aan de <xref:System.Data.DataSet>elke resultatenset wordt geplaatst in een afzonderlijke tabel.</xref:System.Data.DataSet> Als u meer resultatensets worden benoemd met integraal waarden toe te voegen aan de opgegeven tabelnaam (bijvoorbeeld &quot;Tabel&quot;, &quot;Table1&quot;, &quot;Tabel2&quot;, enzovoort). Toepassingen met behulp van de kolom- en tabelnamen moeten ervoor zorgen dat wordt veroorzaakt een conflict met deze patronen naming wordt niet uitgevoerd.       Wanneer de SELECT-instructie wordt gebruikt voor het vullen van de <xref:System.Data.DataSet>retourneert verschillende resultaten, zoals een batch-SQL-instructies, als een van de resultaten een fout bevat alle toekomstige resultaten worden overgeslagen en niet toegevoegd aan de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataSet>       U kunt de methode opvulling meerdere keren gebruiken op de dezelfde <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Als een primaire sleutel bestaat, worden binnenkomende rijen worden samengevoegd met overeenkomende rijen die al bestaan. Als er geen primaire sleutel bevat, zijn binnenkomende rijen toegevoegd aan de <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > Bij het verwerken van batch SQL-instructies die de implementatie van meerdere resultaten retourneren <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>voor .NET Framework Data Provider voor OLE DB schema-informatie voor alleen het eerste resultaat opgehaald.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Gebruik voor het ophalen van schema-informatie voor de resultaten van meerdere <xref:System.Data.Common.DbDataAdapter.Fill%2A>met de <xref:System.Data.MissingSchemaAction>ingesteld op `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual int Fill (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Een <xref href=&quot;System.Data.DataSet&quot;> </xref> te vullen met records en, indien nodig, schema."
    return:
      type: System.Int32
      description: "Het aantal rijen is toegevoegd aan of vernieuwd in de <xref href=&quot;System.Data.DataSet&quot;> </xref>. Dit omvat geen rijen zijn beÃ¯nvloed door de instructies die geen rijen geretourneerd."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  id: Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Wordt toegevoegd of vernieuwt rijen in de <xref href=&quot;System.Data.DataTable&quot;> </xref> overeenkomen met die in de gegevensbron via de <xref href=&quot;System.Data.DataTable&quot;> </xref> naam en het opgegeven <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
  remarks: "Zie de opmerkingen voor `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` voor meer informatie."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> te vullen met records."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Een exemplaar van <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "Het aantal rijen is toegevoegd aan of vernieuwd in de <xref href=&quot;System.Data.DataTable&quot;> </xref>. Dit omvat geen rijen zijn beÃ¯nvloed door de instructies die geen rijen geretourneerd."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Wordt toegevoegd of rijen in een opgegeven bereik in de verzameling van vernieuwt <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten overeen met die in de gegevensbron."
  remarks: "Zie de opmerkingen voor `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` voor meer informatie."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable[] dataTables, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "Een verzameling van <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten te vullen met records."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Een exemplaar van <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "De op nul gebaseerde index van de eerste record."
    - id: maxRecords
      type: System.Int32
      description: "Een geheel getal dat het maximum aantal records aangeeft."
    return:
      type: System.Int32
      description: "Het aantal rijen is toegevoegd aan of vernieuwd in de <xref href=&quot;System.Data.DataTable&quot;> </xref>. Dit omvat geen rijen zijn beÃ¯nvloed door de instructies die geen rijen geretourneerd."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Wordt toegevoegd of vernieuwt rijen in een opgegeven bereik in de <xref href=&quot;System.Data.DataSet&quot;> </xref> overeenkomen met die in de gegevensbron via de <xref href=&quot;System.Data.DataSet&quot;> </xref> en <xref href=&quot;System.Data.DataTable&quot;> </xref> namen."
  remarks: "Zie de opmerkingen voor `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` voor meer informatie."
  syntax:
    content: protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Een <xref href=&quot;System.Data.DataSet&quot;> </xref> te vullen met records."
    - id: srcTable
      type: System.String
      description: "Een tekenreeks die de naam van de brontabel aangeeft."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Een exemplaar van <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "De op nul gebaseerde index van de eerste record."
    - id: maxRecords
      type: System.Int32
      description: "Een geheel getal dat het maximum aantal records aangeeft."
    return:
      type: System.Int32
      description: "Het aantal rijen is toegevoegd aan of vernieuwd in de <xref href=&quot;System.Data.DataSet&quot;> </xref>. Dit omvat geen rijen zijn beÃ¯nvloed door de instructies die geen rijen geretourneerd."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillError
  id: FillError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Als een fout tijdens fill optreedt geretourneerd."
  remarks: "De **FillError** gebeurtenis kan een gebruiker om te bepalen of de doorvoerbewerking blijven moet nadat de fout is opgetreden. Voorbeelden van wanneer de **FillError** gebeurtenis optreden zijn: - de gegevens die wordt toegevoegd aan een `DataSet` kan niet worden geconverteerd naar een common language runtime-type zonder verlies van precisie.      -De rij wordt toegevoegd bevat gegevens die in strijd met een beperking die moet worden afgedwongen op een `DataColumn` in de `DataSet`."
  syntax:
    content: public event System.Data.FillErrorEventHandler FillError;
    return:
      type: System.Data.FillErrorEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillLoadOption
  id: FillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Data.LoadOption&quot;> </xref> waarmee wordt bepaald hoe de adapter vult de <xref href=&quot;System.Data.DataTable&quot;> </xref> van de <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>."
  syntax:
    content: public System.Data.LoadOption FillLoadOption { get; set; }
    return:
      type: System.Data.LoadOption
      description: "A <xref href=&quot;System.Data.LoadOption&quot;></xref> value."
  overload: System.Data.Common.DataAdapter.FillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Voegt een <xref href=&quot;System.Data.DataTable&quot;> </xref> met het opgegeven <xref href=&quot;System.Data.DataSet&quot;> </xref> en configureert u het schema moet worden gezocht die in de gegevensbron op basis van de opgegeven <xref href=&quot;System.Data.SchemaType&quot;> </xref>."
  remarks: "De methode FillSchema het schema opgehaald uit de gegevensbron met behulp van de <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Het object connection die zijn gekoppeld aan de <xref:System.Data.IDbDataAdapter.SelectCommand%2A>moet geldig zijn, maar deze hoeft niet te worden geopend.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Als de verbinding is gesloten voordat FillSchema wordt aangeroepen, is geopend om gegevens te halen en vervolgens gesloten. Als de verbinding geopend is voordat FillSchema wordt aangeroepen, blijft het geopend.       Een bewerking FillSchema een wordt toegevoegd <xref:System.Data.DataTable>aan de doel- <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Vervolgens voegt het toe in kolommen die u wilt de <xref:System.Data.DataColumnCollection>van de <xref:System.Data.DataTable>, en configureert u de volgende <xref:System.Data.DataColumn>Eigenschappen als deze bestaan in de gegevensbron:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> U moet instellen <xref:System.Data.DataColumn.AutoIncrementStep%2A>en <xref:System.Data.DataColumn.AutoIncrementSeed%2A>afzonderlijk.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A>FillSchema configureert ook de <xref:System.Data.DataTable.PrimaryKey%2A>en <xref:System.Data.DataTable.Constraints%2A>Eigenschappen volgens de volgende regels: - als een of meer primaire-sleutelkolommen worden geretourneerd door het <xref:System.Data.IDbDataAdapter.SelectCommand%2A>die worden gebruikt als de primaire-sleutelkolommen voor de <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      -Als er geen primaire-sleutelkolommen worden geretourneerd, maar uniek kolommen zijn, worden de unieke kolommen als de primaire sleutel gebruikt als en alleen als de unieke kolommen die geen nul mag zijn. Als een van de kolommen waarvoor null is toegestaan, een <xref:System.Data.UniqueConstraint>wordt toegevoegd aan de <xref:System.Data.ConstraintCollection>, maar de <xref:System.Data.DataTable.PrimaryKey%2A>eigenschap is niet ingesteld.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      -Als zowel de primaire-sleutelkolommen als de unieke kolommen worden geretourneerd, worden de primaire-sleutelkolommen gebruikt als de primaire-sleutelkolommen voor de <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > Het onderliggende gegevensarchief kunnen kolomkenmerken die worden niet ondersteund in een <xref:System.Data.DataColumn>, waardoor bepaalde kolomkenmerken correct kunnen worden niet omgezet.</xref:System.Data.DataColumn> Bijvoorbeeld: [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] een identiteitskolom met het gegevenstype van tinyint toestaat dat een <xref:System.Data.DataColumn>kunt Int16, Int32 en Int64 hebben alleen de <xref:System.Data.DataColumn.AutoIncrement%2A>eigenschap is ingesteld.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn> `FillSchema`achtergrond negeert gevallen waar de <xref:System.Data.DataColumn>de gegevensbron kan niet correct worden gespiegeld en genereert geen uitzondering.</xref:System.Data.DataColumn>       Houd er rekening mee dat primaire sleutels en unieke beperkingen worden toegevoegd aan de <xref:System.Data.ConstraintCollection>volgens de voorgaande regels, maar andere beperking typen niet worden toegevoegd.</xref:System.Data.ConstraintCollection>       Als een unieke geclusterde index is gedefinieerd in een kolom of kolommen in een tabel met SQL Server en de primary key-beperking is gedefinieerd in een afzonderlijke set kolommen, en vervolgens de namen van de kolommen in de geclusterde index worden geretourneerd. Als u de naam of namen van de primaire-sleutelkolommen weer, een hint query met de instructie SELECT die de naam van de primaire-sleutelindex specificeert te gebruiken. Zie voor meer informatie over het opgeven van queryhints [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Als de <xref:System.Data.Common.DataAdapter>tegenkomt dubbele kolommen tijdens het vullen van een <xref:System.Data.DataTable>, genereert namen voor de volgende kolommen in het gebruik van het patroon &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3 &quot;, enzovoort.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter> Als de inkomende gegevens naamloze kolommen bevat, worden geplaatst de <xref:System.Data.DataSet>volgens het patroon &quot;Kolom1&quot;, &quot;Kolom2&quot;, enzovoort.</xref:System.Data.DataSet> Wanneer meerdere resultatensets worden toegevoegd aan de <xref:System.Data.DataSet>elke resultatenset wordt geplaatst in een afzonderlijke tabel.</xref:System.Data.DataSet> Als u meer resultatensets worden benoemd met integraal waarden toe te voegen aan de opgegeven tabelnaam (bijvoorbeeld &quot;Tabel&quot;, &quot;Table1&quot;, &quot;Tabel2&quot;, enzovoort). Toepassingen met behulp van de kolom- en tabelnamen moeten ervoor zorgen dat wordt veroorzaakt een conflict met deze patronen naming wordt niet uitgevoerd.       FillSchema retourneert geen rijen. Gebruik de <xref:System.Data.Common.DataAdapter.Fill%2A>methode om toe te voegen rijen in een <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter.Fill%2A>      > [!NOTE] > Bij het verwerken van batch SQL-instructies die de implementatie van meerdere resultaten retourneren <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>voor .NET Framework Data Provider voor OLE DB schema-informatie voor alleen het eerste resultaat opgehaald.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Gebruik voor het ophalen van schema-informatie voor de resultaten van meerdere <xref:System.Data.Common.DbDataAdapter.Fill%2A>met de <xref:System.Data.MissingSchemaAction>ingesteld op `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "De <xref href=&quot;System.Data.DataSet&quot;> </xref> te vullen met het schema van de gegevensbron."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Een van de <xref href=&quot;System.Data.SchemaType&quot;> </xref> waarden."
    return:
      type: System.Data.DataTable[]
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> object met schema-informatie geretourneerd uit de gegevensbron."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  id: FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Voegt een <xref href=&quot;System.Data.DataTable&quot;> </xref> met het opgegeven <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "De <xref href=&quot;System.Data.DataTable&quot;> </xref> moet worden ingevuld vanuit de <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Een van de <xref href=&quot;System.Data.SchemaType&quot;> </xref> waarden."
    - id: dataReader
      type: System.Data.IDataReader
      description: "De <xref href=&quot;System.Data.IDataReader&quot;> </xref> moet worden gebruikt als de gegevensbron bij het invullen van de <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> object met schema-informatie geretourneerd uit de gegevensbron."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Voegt een <xref href=&quot;System.Data.DataTable&quot;> </xref> met het opgegeven <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "De <xref href=&quot;System.Data.DataTable&quot;> </xref> moet worden ingevuld vanuit de <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Een van de <xref href=&quot;System.Data.SchemaType&quot;> </xref> waarden."
    - id: srcTable
      type: System.String
      description: "De naam van de brontabel moet worden gebruikt voor het toewijzen van de tabel."
    - id: dataReader
      type: System.Data.IDataReader
      description: "De <xref href=&quot;System.Data.IDataReader&quot;> </xref> moet worden gebruikt als de gegevensbron bij het invullen van de <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable[]
      description: "Een verwijzing naar een verzameling van <xref href=&quot;System.Data.DataTable&quot;> </xref> objecten die zijn toegevoegd aan de <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.GetFillParameters
  id: GetFillParameters
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee haalt u de parameters die zijn ingesteld door de gebruiker bij het uitvoeren van een SQL SELECT-instructie."
  syntax:
    content: public virtual System.Data.IDataParameter[] GetFillParameters ();
    parameters: []
    return:
      type: System.Data.IDataParameter[]
      description: "Een matrix van <xref href=&quot;System.Data.IDataParameter&quot;> </xref> objecten met de parameters die zijn ingesteld door de gebruiker."
  overload: System.Data.Common.DataAdapter.GetFillParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.HasTableMappings
  id: HasTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee wordt aangegeven of een <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> is gemaakt."
  syntax:
    content: protected bool HasTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> is gemaakt, anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.HasTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  id: MissingMappingAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Bepaalt welke actie moet worden uitgevoerd wanneer het binnenkomende gegevens beschikt niet over een overeenkomende tabel of kolom."
  remarks: "De <xref:System.Data.Common.DataAdapter.TableMappings%2A>eigenschap bevat de master toewijzing tussen de geretourneerde records en de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Common.DataAdapter.TableMappings%2A>"
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_4_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_4_1.cs)]"
  syntax:
    content: public System.Data.MissingMappingAction MissingMappingAction { get; set; }
    return:
      type: System.Data.MissingMappingAction
      description: "Een van de <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> waarden. De standaardwaarde is <xref uid=&quot;langword_csharp_Passthrough&quot; name=&quot;Passthrough&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingMappingAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De waarde ingesteld is niet een van de <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> waarden."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  id: MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Bepaalt welke actie moet worden uitgevoerd wanneer bestaande <xref href=&quot;System.Data.DataSet&quot;> </xref> schema komt niet overeen met de inkomende gegevens."
  remarks: ''
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_9_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_9_1.cs)]"
  syntax:
    content: public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }
    return:
      type: System.Data.MissingSchemaAction
      description: "Een van de <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> waarden. De standaardwaarde is <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingSchemaAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De waarde ingesteld is niet een van de <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> waarden."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  id: OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aangeroepen wanneer een fout tijdens optreedt een <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: protected virtual void OnFillError (System.Data.FillErrorEventArgs value);
    parameters:
    - id: value
      type: System.Data.FillErrorEventArgs
      description: "A <xref href=&quot;System.Data.FillErrorEventArgs&quot;></xref> object."
  overload: System.Data.Common.DataAdapter.OnFillError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  id: ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee stelt u <> </> *> naar de standaardstatus en oorzaken &lt;xref:System.Data.Common.DataAdapter.Fill%2A?displayProperty=fullName&gt; inwilligen <> </> *>."
  syntax:
    content: public void ResetFillLoadOption ();
    parameters: []
  overload: System.Data.Common.DataAdapter.ResetFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  id: ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Opgehaald of ingesteld of de <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> methode moet worden geretourneerd providerspecifieke waarden of algemene compatibel met CLS."
  remarks: "De standaardwaarde is `false`."
  syntax:
    content: public virtual bool ReturnProviderSpecificTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> methode providerspecifieke waarden moet retourneren; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om algemene compatibel met CLS waarden te retourneren."
  overload: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  id: ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee wordt bepaald of de <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>eigenschap moet worden vastgehouden.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  syntax:
    content: public virtual bool ShouldSerializeAcceptChangesDuringFill ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>eigenschap persistente; anders is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  id: ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee wordt bepaald of de <xref:System.Data.Common.DataAdapter.FillLoadOption*>eigenschap moet worden vastgehouden.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  syntax:
    content: public virtual bool ShouldSerializeFillLoadOption ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Data.Common.DataAdapter.FillLoadOption*>eigenschap persistente; anders is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  id: ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee wordt bepaald of een of meer <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objecten bestaan en moet worden gehandhaafd."
  syntax:
    content: protected virtual bool ShouldSerializeTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een of meer <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objecten bestaan; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  id: System#Data#IDataAdapter#TableMappings
  isEii: true
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee wordt aangegeven hoe een brontabel wordt toegewezen aan een dataset-tabel."
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.Common.DataAdapter>exemplaar is geconverteerd naar een <xref:System.Data.IDataAdapter>interface.</xref:System.Data.IDataAdapter> </xref:System.Data.Common.DataAdapter>       Zie voor meer informatie, <xref:System.Data.IDataAdapter.TableMappings%2A>.</xref:System.Data.IDataAdapter.TableMappings%2A>"
  syntax:
    content: System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }
    return:
      type: System.Data.ITableMappingCollection
      description: "Een verzameling die de master toewijzing tussen de geretourneerde records bevat en de <xref href=&quot;System.Data.DataSet&quot;> </xref>. De standaardwaarde is een lege verzameling."
  overload: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.TableMappings
  id: TableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Haalt een verzameling die de master toewijzing tussen een brontabel levert en een <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "Bij het afstemmen van wijzigingen, de <xref:System.Data.Common.DataAdapter>maakt gebruik van de <xref:System.Data.Common.DataTableMappingCollection>verzameling de kolomnamen die wordt gebruikt door de gegevensbron met de kolomnamen gebruikt door de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> koppelen</xref:System.Data.Common.DataTableMappingCollection> </xref:System.Data.Common.DataAdapter>"
  example:
  - "The following example uses a derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to add <xref:System.Data.Common.DataTableMapping> objects to its TableMappings collection and display a list of those mapped source tables. This example assumes that an <xref:System.Data.OleDb.OleDbDataAdapter> has already been created.  \n  \n [!code-vb[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_14_1.vb)]\n [!code-cs[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_14_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMappingCollection TableMappings { get; }
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "Een verzameling die de master toewijzing tussen de geretourneerde records bevat en de <xref href=&quot;System.Data.DataSet&quot;> </xref>. De standaardwaarde is een lege verzameling."
  overload: System.Data.Common.DataAdapter.TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  id: Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Aanroepen van de respectieve INSERT, UPDATE of DELETE-instructies voor elk ingevoegd, bijgewerkt of verwijderd van de rij in de opgegeven <xref href=&quot;System.Data.DataSet&quot;> </xref> van een <xref href=&quot;System.Data.DataTable&quot;> </xref> met de naam &quot;Tabel&quot;."
  remarks: "De update wordt uitgevoerd op basis van de rij op. Voor elke rij ingevoegd, gewijzigd en verwijderd, de methode Update bepaalt het type wijziging die is uitgevoerd op het (invoegen, bijwerken of verwijderen). Afhankelijk van het type wijziging, de `Insert`, `Update,` of `Delete` opdrachtsjabloon wordt uitgevoerd om de gewijzigde rij met de gegevensbron is doorgegeven. Wanneer een toepassing de methode Update roept de <xref:System.Data.Common.DataAdapter>onderzoekt de <xref:System.Data.DataRow.RowState%2A>eigenschap, en worden de vereiste INSERT, UPDATE of DELETE-instructies iteratief voor elke rij, gebaseerd op de volgorde van de indexen die zijn geconfigureerd in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DataAdapter> Bijvoorbeeld: Update mogelijk uitvoeren van een instructie DELETE, gevolgd door een instructie INSERT, en vervolgens een andere instructie DELETE, vanwege de volgorde van de rijen in de <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Houd er rekening mee dat deze instructies worden niet uitgevoerd als een batchproces; elke rij wordt afzonderlijk bijgewerkt. Een toepassing kunt aanroepen de <xref:System.Data.DataSet.GetChanges%2A>methode in situaties waar u de volgorde van de instructie typen moet beheren (bijvoorbeeld invoegen vÃ³Ã³r bijwerken).</xref:System.Data.DataSet.GetChanges%2A> Zie voor meer informatie [gegevensbronnen bijwerken met DataAdapters](~/add/includes/ajax-current-ext-md.md).       Als INSERT, UPDATE of DELETE-instructies zijn niet opgegeven, de methode Update wordt een uitzondering gegenereerd. U kunt echter maken een <xref:System.Data.SqlClient.SqlCommandBuilder>of <xref:System.Data.OleDb.OleDbCommandBuilder>object voor het automatisch genereren van SQL-instructies voor Ã©Ã©n tabel updates als u de `SelectCommand` eigenschap van een .NET Framework-gegevensprovider.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Vervolgens aanvullende SQL-instructies die u instelt worden gegenereerd door de **CommandBuilder**. Deze logica generatie vereist sleutelkolomgegevens moeten zich in de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Zie voor meer informatie [opdrachten genereren met CommandBuilders](~/add/includes/ajax-current-ext-md.md).       De methode Update opgehaald rijen uit de tabel in de eerste toewijzing voordat u een update uitvoert. De Update vervolgens vernieuwt de rij met de waarde van de <xref:System.Data.IDbCommand.UpdatedRowSource%2A>eigenschap.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> Eventuele extra rijen geretourneerd, worden genegeerd.       Nadat de gegevens worden geladen naar de <xref:System.Data.DataSet>, wordt de <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>gebeurtenis wordt geactiveerd, zodat de gebruiker controleert de afgestemd <xref:System.Data.DataSet>uitvoerparameters rij en eventuele geretourneerd door de opdracht.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> Nadat een rij is bijgewerkt, worden de wijzigingen op die rij worden geaccepteerd.       Wanneer u de Update, de volgorde van de uitvoering is als volgt: 1.  De waarden in de <xref:System.Data.DataRow>worden verplaatst naar de parameterwaarden.</xref:System.Data.DataRow>      2.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  De opdracht wordt uitgevoerd.      4.  Als de opdracht is ingesteld op `FirstReturnedRecord`, wordt de eerste geretourneerd resultaat wordt geplaatst in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Als er output-parameters, zijn ze in de <xref:System.Data.DataRow>.</xref:System.Data.DataRow> geplaatst      6.  De <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>gebeurtenis is opgetreden.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName>wordt aangeroepen.</xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName> Dit verhoogt beide de <xref:System.Data.DataTable.RowChanging?displayProperty=fullName>en <xref:System.Data.DataTable.RowChanged?displayProperty=fullName>gebeurtenissen voor de bijgewerkte <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataTable.RowChanged?displayProperty=fullName> </xref:System.Data.DataTable.RowChanging?displayProperty=fullName>       Elke opdracht die is gekoppeld aan de <xref:System.Data.Common.DataAdapter>meestal is een parameterverzameling is gekoppeld.</xref:System.Data.Common.DataAdapter> Parameters zijn toegewezen aan de huidige rij via de `SourceColumn` en `SourceVersion` eigenschappen van a.NET-gegevensprovider `Parameter` klasse. `SourceColumn`verwijst naar een <xref:System.Data.DataTable>kolom die de <xref:System.Data.Common.DataAdapter>verwijzingen naar het verkrijgen van parameterwaarden voor de huidige rij.</xref:System.Data.Common.DataAdapter> </xref:System.Data.DataTable>       `SourceColumn`verwijst naar de niet-toegewezen kolomnaam voordat alle Tabeltoewijzingen zijn toegepast. Als `SourceColumn` verwijst naar een niet-bestaande kolom de actie op die afhankelijk is van een van de volgende <xref:System.Data.MissingMappingAction>waarden.</xref:System.Data.MissingMappingAction>      | Opsommingswaarde | Actie op die |   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| Gebruik van de bron-kolomnamen en tabelnamen in de <xref:System.Data.DataSet>Als er is geen toewijzing aanwezig is. |   | `MissingMappingAction.Ignore`| Een <xref:System.SystemException>wordt gegenereerd.</xref:System.SystemException> </xref:System.Data.DataSet> Wanneer de toewijzingen expliciet zijn ingesteld, een ontbrekende toewijzing voor de invoerparameter is meestal het gevolg van een fout. |   | `MissingMappingAction.Error`| Een <xref:System.SystemException>wordt gegenereerd. |       De `SourceColumn` eigenschap wordt ook gebruikt voor het toewijzen van de waarde voor uitvoer of input/output-parameters terug naar de `DataSet`.</xref:System.SystemException> Een uitzondering wordt gegenereerd als het verwijst naar een niet-bestaande kolom.       De `SourceVersion` eigenschap van een .NET-gegevensprovider `Parameter` klasse bepaalt of de oorspronkelijke, Huidig of voorgesteld versie van de kolomwaarde te gebruiken. Deze mogelijkheid wordt vaak gebruikt voor het opnemen van de oorspronkelijke waarden in de WHERE-component van de instructie UPDATE om te controleren op schendingen van optimistische gelijktijdigheid.       Aanroepen van de <xref:System.Data.DataSet.AcceptChanges%2A>methode of <xref:System.Data.DataTable.AcceptChanges%2A>methode worden alle wijzigingen in de <xref:System.Data.DataSet>of <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataSet> doorvoeren</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> Als een van deze methoden worden aangeroepen voordat de <xref:System.Data.Common.DbDataAdapter.Update%2A>methode wordt aangeroepen, is er geen wijzigingen doorgevoerd wanneer de <xref:System.Data.Common.DbDataAdapter.Update%2A>methode wordt aangeroepen, tenzij u meer wijzigingen zijn aangebracht sinds <xref:System.Data.DataSet.AcceptChanges%2A>of <xref:System.Data.DataTable.AcceptChanges%2A>is aangeroepen.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>      > [!NOTE] > Als er een fout optreedt tijdens het bijwerken van een rij is een uitzondering opgetreden en de uitvoering van de update is stopgezet. Ingesteld om door te gaan de updatebewerking zonder uitzonderingen worden gegenereerd wanneer een fout is opgetreden, de <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>eigenschap `true` aanroepen voordat <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> U kunt ook reageren op fouten op basis van per rij in de `RowUpdated` gebeurtenis van een DataAdapter. De updatebewerking doorgaan zonder dat er een uitzondering binnen de `RowUpdated` gebeurtenis, stel de <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>eigenschap van de <xref:System.Data.Common.RowUpdatedEventArgs>tot <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>   >> Voor elke kolom die u aan de bron-onUpdate gegevens worden doorgegeven, een parameter moet worden toegevoegd aan de `InsertCommand`, `UpdateCommand`, of `DeleteCommand`. De `SourceColumn` eigenschap van de parameter moet worden ingesteld op de naam van de kolom. Deze instelling geeft aan dat de waarde van de parameter niet handmatig is ingesteld, maar is genomen van de desbetreffende kolom in de rij momenteel verwerkt."
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to Update the data source.  \n  \n [!code-cs[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_26_1.cs)]\n [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_26_1.vb)]"
  syntax:
    content: public virtual int Update (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "De <xref href=&quot;System.Data.DataSet&quot;> </xref> gebruikt voor het bijwerken van de gegevensbron."
    return:
      type: System.Int32
      description: "Het aantal rijen bijgewerkt vanuit de <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De brontabel is ongeldig."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Een poging tot het uitvoeren van een instructie INSERT, UPDATE of DELETE geleid tot nul records die van invloed op."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.DBConcurrencyException
  parent: System.Data
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
- uid: System.Data.Common.DataAdapter.#ctor
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
- uid: System.Data.Common.DataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
- uid: System.Data.Common.DataTableMappingCollection
  parent: System.Data.Common
  isExternal: false
  name: DataTableMappingCollection
  nameWithType: DataTableMappingCollection
  fullName: System.Data.Common.DataTableMappingCollection
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DataAdapter.FillError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.Common.DataAdapter.FillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
- uid: System.Data.SchemaType
  parent: System.Data
  isExternal: false
  name: SchemaType
  nameWithType: SchemaType
  fullName: System.Data.SchemaType
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
- uid: System.Data.Common.DataAdapter.GetFillParameters
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
- uid: System.Data.IDataParameter[]
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter[]
  spec.csharp:
  - uid: System.Data.IDataParameter
    name: IDataParameter
    nameWithType: IDataParameter
    fullName: IDataParameter[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.HasTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
- uid: System.Data.MissingMappingAction
  parent: System.Data
  isExternal: false
  name: MissingMappingAction
  nameWithType: MissingMappingAction
  fullName: System.Data.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
- uid: System.Data.MissingSchemaAction
  parent: System.Data
  isExternal: false
  name: MissingSchemaAction
  nameWithType: MissingSchemaAction
  fullName: System.Data.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
- uid: System.Data.FillErrorEventArgs
  parent: System.Data
  isExternal: false
  name: FillErrorEventArgs
  nameWithType: FillErrorEventArgs
  fullName: System.Data.FillErrorEventArgs
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.ITableMappingCollection
  parent: System.Data
  isExternal: false
  name: ITableMappingCollection
  nameWithType: ITableMappingCollection
  fullName: System.Data.ITableMappingCollection
- uid: System.Data.Common.DataAdapter.TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
- uid: System.Data.Common.DataAdapter.#ctor*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals
  nameWithType: DataAdapter.CloneInternals
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings
  nameWithType: DataAdapter.CreateTableMappings
- uid: System.Data.Common.DataAdapter.Dispose*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose
  nameWithType: DataAdapter.Dispose
- uid: System.Data.Common.DataAdapter.Fill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill
  nameWithType: DataAdapter.Fill
- uid: System.Data.Common.DataAdapter.FillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
- uid: System.Data.Common.DataAdapter.FillSchema*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema
  nameWithType: DataAdapter.FillSchema
- uid: System.Data.Common.DataAdapter.GetFillParameters*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters
  nameWithType: DataAdapter.GetFillParameters
- uid: System.Data.Common.DataAdapter.HasTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings
  nameWithType: DataAdapter.HasTableMappings
- uid: System.Data.Common.DataAdapter.MissingMappingAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError
  nameWithType: DataAdapter.OnFillError
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption
  nameWithType: DataAdapter.ResetFillLoadOption
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings
  nameWithType: DataAdapter.ShouldSerializeTableMappings
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update
  nameWithType: DataAdapter.Update
