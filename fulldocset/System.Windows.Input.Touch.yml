### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Touch
  id: Touch
  children:
  - System.Windows.Input.Touch.FrameReported
  langs:
  - csharp
  name: Touch
  nameWithType: Touch
  fullName: System.Windows.Input.Touch
  type: Class
  summary: "Biedt een service op toepassingsniveau die multitouch invoer van het besturingssysteem verwerkt en genereert de <xref href=&quot;System.Windows.Input.Touch.FrameReported&quot;> </xref> gebeurtenis."
  remarks: "De <xref:System.Windows.Input.Touch.FrameReported>gebeurtenis is opgenomen in [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] ter ondersteuning van compatibiliteit met Silverlight.</xref:System.Windows.Input.Touch.FrameReported> Als u geen naar de compatibiliteit met Silverlight, gebruikt u de touch-gebeurtenissen, zoals <xref:System.Windows.UIElement.TouchDown>en <xref:System.Windows.UIElement.TouchMove>op <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, of <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown>       De <xref:System.Windows.Input.Touch.FrameReported>gebeurtenis maakt geen gebruik van hetzelfde gebeurtenismodel als andere WPF invoer gebeurtenissen, zoals <xref:System.Windows.UIElement.TouchDown>en <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> </xref:System.Windows.Input.Touch.FrameReported> In plaats van wordt weergegeven als een element-specifieke gebeurtenis die mogelijk via de objectboomstructuur van een gebruikersinterface, stuurt de <xref:System.Windows.Input.Touch.FrameReported>gebeurtenis is één gebeurtenis die wordt verwerkt op toepassingsniveau.</xref:System.Windows.Input.Touch.FrameReported> Daarom kunt u niet gebruiken de `sender` parameter van de gebeurtenis-handler om te bepalen welke element is gewijzigd.       Gebruik de <xref:System.Windows.Input.TouchFrameEventArgs>ophalen van de <xref:System.Windows.Input.TouchPoint>waarden die relevant voor de gebeurtenis touch zijn.</xref:System.Windows.Input.TouchPoint> </xref:System.Windows.Input.TouchFrameEventArgs> Van de <xref:System.Windows.Input.TouchPoint>, krijgt u de <xref:System.Windows.Input.TouchPoint.Position%2A>van de touch en bepalen of de <xref:System.Windows.Input.TouchAction>is een <xref:System.Windows.Input.TouchAction>, <xref:System.Windows.Input.TouchAction>, of <xref:System.Windows.Input.TouchAction>actie.</xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchPoint.Position%2A> </xref:System.Windows.Input.TouchPoint> U kunt ook gebruiken <xref:System.Windows.Input.TouchPoint>om op te halen van de <xref:System.Windows.Input.TouchDevice>.</xref:System.Windows.Input.TouchDevice> </xref:System.Windows.Input.TouchPoint> Van de <xref:System.Windows.Input.TouchDevice>, kunt u het apparaat bepalen <xref:System.Windows.Input.TouchDevice.Id%2A>en krijgt u informatie over het element dat is geraakt.</xref:System.Windows.Input.TouchDevice.Id%2A> </xref:System.Windows.Input.TouchDevice>"
  example:
  - "The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen. Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.The pattern is created by drawing a line between the touch points provided by the touches. This example requires a Windows Touch–compatible screen.  \n  \n The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.  \n  \n [!code-xml[TouchFrameSample#000](~/add/codesnippet/xaml/wpftouchframesample/mainwindow.xaml#000)]  \n  \n The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n [!code-vb[TouchFrameSample#100](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#100)]\n [!code-cs[TouchFrameSample#100](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#100)]"
  syntax:
    content: public static class Touch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Touch.FrameReported
  id: FrameReported
  parent: System.Windows.Input.Touch
  langs:
  - csharp
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Deze gebeurtenis treedt op wanneer een touch-bericht is verzonden."
  remarks: "Een frame is in een reeks multitouch berichten of touch-punten. U kunt reageren op verbeterd door het afhandelen van de gebeurtenis FrameReported en toegang krijgen tot de details van de <xref:System.Windows.Input.TouchPoint>van de <xref:System.Windows.Input.TouchFrameEventArgs>gebeurtenisgegevens.</xref:System.Windows.Input.TouchFrameEventArgs> </xref:System.Windows.Input.TouchPoint>       De gebeurtenis FrameReported maakt geen gebruik van hetzelfde gebeurtenismodel als andere [!INCLUDE[TLA#tla_titlewinclient](~/add/includes/tlasharptla-titlewinclient-md.md)] gebeurtenissen, zoals <xref:System.Windows.UIElement.TouchDown>en <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> invoer In plaats van als een element-specifieke gebeurtenis die mogelijk van routes via de objectboomstructuur van een gebruikersinterface wordt weergegeven, is de gebeurtenis FrameReported één gebeurtenis die wordt verwerkt op toepassingsniveau. Daarom kunt u niet gebruiken de `sender` parameter van de gebeurtenis-handler om te bepalen welke element is gewijzigd."
  example:
  - "The following example handles the FrameReported event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#110](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#110)]\n [!code-cs[TouchFrameSample#110](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#110)]"
  syntax:
    content: public static event System.Windows.Input.TouchFrameEventHandler FrameReported;
    return:
      type: System.Windows.Input.TouchFrameEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.Touch.FrameReported
  parent: System.Windows.Input.Touch
  isExternal: false
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
- uid: System.Windows.Input.TouchFrameEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: TouchFrameEventHandler
  nameWithType: TouchFrameEventHandler
  fullName: System.Windows.Input.TouchFrameEventHandler
