### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.BindableAttribute
  id: BindableAttribute
  children:
  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  - System.ComponentModel.BindableAttribute.Bindable
  - System.ComponentModel.BindableAttribute.Default
  - System.ComponentModel.BindableAttribute.Direction
  - System.ComponentModel.BindableAttribute.Equals(System.Object)
  - System.ComponentModel.BindableAttribute.GetHashCode
  - System.ComponentModel.BindableAttribute.IsDefaultAttribute
  - System.ComponentModel.BindableAttribute.No
  - System.ComponentModel.BindableAttribute.Yes
  langs:
  - csharp
  name: BindableAttribute
  nameWithType: BindableAttribute
  fullName: System.ComponentModel.BindableAttribute
  type: Class
  summary: "Hiermee geeft u op of een lid doorgaans voor binding gebruikt wordt. Deze klasse kan niet worden overgenomen."
  remarks: "U kunt dit kenmerk opgeven voor meerdere leden, meestal eigenschappen op een besturingselement.       Als een eigenschap is gemarkeerd met de BindableAttribute ingesteld op `true`, en vervolgens een melding van een eigenschap voor die eigenschap moet worden verhoogd. Dit betekent dat wanneer de <xref:System.ComponentModel.BindableAttribute.Bindable%2A>eigenschap is <xref:System.ComponentModel.BindableAttribute.Yes>, en vervolgens wederzijdse gegevensbinding wordt ondersteund.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute.Bindable%2A> Als <xref:System.ComponentModel.BindableAttribute.Bindable%2A>is <xref:System.ComponentModel.BindableAttribute.No>, kunt u nog steeds binden aan de eigenschap, maar deze moet niet worden weergegeven in de reeks eigenschappen om aan te koppelen, omdat deze mogelijk of is mogelijk niet afkomstig van een wijzigingsmelding voor de eigenschap.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute.Bindable%2A>      > [!NOTE] > Wanneer u een eigenschap met markeren <xref:System.ComponentModel.BindableAttribute.%23ctor%2A>ingesteld op `true`, de waarde van dit kenmerk is ingesteld op de constant lid <xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> Voor een eigenschap die is gemarkeerd met de <xref:System.ComponentModel.BindableAttribute.%23ctor%2A>ingesteld op `false`, de waarde is <xref:System.ComponentModel.BindableAttribute.No>.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> Daarom om te controleren van de waarde van dit kenmerk in uw code, moet u het kenmerk als <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>of <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>      > [!CAUTION] > Kunt u dit kenmerk in de ontwerpfase alleen. Er is niets voorkomt u binding aan een eigenschap tijdens runtime.       Zie voor meer informatie [kenmerken](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example marks a property as appropriate to bind data to.  \n  \n [!code-cs[Classic BindableAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._142_1.cs)]\n [!code-vb[Classic BindableAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._142_1.vb)]\n [!code-cpp[Classic BindableAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._142_1.cpp)]  \n  \n The next code example shows how to check the value of the BindableAttribute for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next, the code indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Finally, the code returns the attributes for this property and saves them in the attributes variable. The code example presents two different ways to check the value of the BindableAttribute. In the second code fragment, the example calls the <xref:System.Object.Equals%2A> method. In the last code fragment, the example uses the <xref:System.ComponentModel.BindableAttribute.Bindable%2A> property to check the value.  \n  \n [!code-cs[Classic BindableAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._142_2.cs)]\n [!code-vb[Classic BindableAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._142_2.vb)]\n [!code-cpp[Classic BindableAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._142_2.cpp)]  \n  \n If you marked a class with the BindableAttribute, use the following code example to check the value.  \n  \n [!code-cs[Classic BindableAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._142_3.cs)]\n [!code-vb[Classic BindableAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._142_3.vb)]\n [!code-cpp[Classic BindableAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._142_3.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class BindableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(Boolean)
  nameWithType: BindableAttribute.BindableAttribute(Boolean)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> klasse met een Booleaanse waarde."
  remarks: "Wanneer het markeren van een eigenschap met de <xref:System.ComponentModel.BindableAttribute>ingesteld op `true`, de waarde van dit kenmerk is ingesteld op de constant lid <xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute> Voor een eigenschap die is gemarkeerd met de <xref:System.ComponentModel.BindableAttribute>ingesteld op `false`, de waarde is <xref:System.ComponentModel.BindableAttribute.No>.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute> Daarom om te controleren van de waarde van dit kenmerk in uw code, moet u het kenmerk als <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>of <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>"
  example:
  - "The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cs[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._14_1.cs)]\n [!code-vb[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._14_1.vb)]\n [!code-cpp[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._14_1.cpp)]"
  syntax:
    content: public BindableAttribute (bool bindable);
    parameters:
    - id: bindable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>met behulp van de eigenschap voor binding; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  id: '#ctor(System.ComponentModel.BindableSupport)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(BindableSupport)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> klasse met een van de <xref href=&quot;System.ComponentModel.BindableSupport&quot;> </xref> waarden."
  remarks: "Wanneer het markeren van een eigenschap met de <xref:System.ComponentModel.BindableAttribute>ingesteld op `true`, de waarde van dit kenmerk is ingesteld op de constant lid <xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute> Voor een eigenschap die is gemarkeerd met de <xref:System.ComponentModel.BindableAttribute>ingesteld op `false`, de waarde is <xref:System.ComponentModel.BindableAttribute.No>.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute> Daarom om te controleren van de waarde van dit kenmerk in uw code, moet u het kenmerk als <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>of <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>"
  example:
  - "The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cpp[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/cpp/f23f7ef8-7d45-4e98-96fc-_1.cpp)]\n [!code-vb[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/visualbasic/f23f7ef8-7d45-4e98-96fc-_1.vb)]\n [!code-cs[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/csharp/f23f7ef8-7d45-4e98-96fc-_1.cs)]"
  syntax:
    content: public BindableAttribute (System.ComponentModel.BindableSupport flags);
    parameters:
    - id: flags
      type: System.ComponentModel.BindableSupport
      description: "Een van de <xref href=&quot;System.ComponentModel.BindableSupport&quot;> </xref> waarden."
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  id: '#ctor(System.Boolean,System.ComponentModel.BindingDirection)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(Boolean,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> klasse."
  syntax:
    content: public BindableAttribute (bool bindable, System.ComponentModel.BindingDirection direction);
    parameters:
    - id: bindable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>met behulp van de eigenschap voor binding; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: direction
      type: System.ComponentModel.BindingDirection
      description: "Een van de <xref href=&quot;System.ComponentModel.BindingDirection&quot;> </xref> waarden."
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  id: '#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(BindableSupport,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> klasse."
  syntax:
    content: public BindableAttribute (System.ComponentModel.BindableSupport flags, System.ComponentModel.BindingDirection direction);
    parameters:
    - id: flags
      type: System.ComponentModel.BindableSupport
      description: "Een van de <xref href=&quot;System.ComponentModel.BindableSupport&quot;> </xref> waarden."
    - id: direction
      type: System.ComponentModel.BindingDirection
      description: "Een van de <xref href=&quot;System.ComponentModel.BindingDirection&quot;> </xref> waarden."
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Bindable
  id: Bindable
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Bindable
  nameWithType: BindableAttribute.Bindable
  fullName: System.ComponentModel.BindableAttribute.Bindable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt een waarde die aangeeft dat een eigenschap doorgaans voor binding gebruikt wordt."
  remarks: ''
  example:
  - "The following code example checks to see whether `MyProperty` is bindable. First the code gets the attributes for `MyProperty` by doing the following:  \n  \n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \n  \n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \n  \n-   Saving the attributes for this property in the attributes variable.  \n  \n Then, the code sets `myAttribute` to the value of the <xref:System.ComponentModel.BindableAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is bindable.  \n  \n For this code example to run, you must provide the fully qualified assembly name. For information about how to obtain the fully qualified assembly name, see  \n  \n [Assembly Names](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/csharp/p-system.componentmodel._3_1.cs)]\n [!code-cpp[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/cpp/p-system.componentmodel._3_1.cpp)]\n [!code-vb[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._3_1.vb)]"
  syntax:
    content: public bool Bindable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de eigenschap doorgaans voor binding gebruikt wordt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.BindableAttribute.Bindable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Default
  id: Default
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Default
  nameWithType: BindableAttribute.Default
  fullName: System.ComponentModel.BindableAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee geeft u de standaardwaarde voor de <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>, namelijk <xref href=&quot;System.ComponentModel.BindableAttribute.No&quot;> </xref>. Dit veld is alleen-lezen."
  remarks: "Wanneer u een eigenschap met deze waarde <xref:System.ComponentModel.BindableAttribute>is ingesteld op de constant lid <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute> </xref:System.ComponentModel.BindableAttribute> markeren Dus als u controleren wilt of het kenmerk is ingesteld op deze waarde in uw code, moet u het kenmerk als <xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>"
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute Default;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Direction
  id: Direction
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Direction
  nameWithType: BindableAttribute.Direction
  fullName: System.ComponentModel.BindableAttribute.Direction
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt een waarde die aangeeft van de richting of richtingen van gegevensbinding van deze eigenschap."
  syntax:
    content: public System.ComponentModel.BindingDirection Direction { get; }
    return:
      type: System.ComponentModel.BindingDirection
      description: "De richting van deze eigenschap gegevensbinding."
  overload: System.ComponentModel.BindableAttribute.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BindableAttribute.Equals(Object)
  fullName: System.ComponentModel.BindableAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt bepaald of twee <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> objecten zijn gelijk."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object te vergelijken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> gelijk is aan de huidige <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als dat niet gelijk zijn."
  overload: System.ComponentModel.BindableAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BindableAttribute.GetHashCode()
  fullName: System.ComponentModel.BindableAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Fungeert als een hash-functie voor de <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> klasse."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een hash-code voor de huidige <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>."
  overload: System.ComponentModel.BindableAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: BindableAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt bepaald of dit kenmerk de standaardinstelling is."
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het kenmerk de standaardwaarde voor deze kenmerkklasse is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.BindableAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.No
  id: No
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: No
  nameWithType: BindableAttribute.No
  fullName: System.ComponentModel.BindableAttribute.No
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee geeft u een eigenschap wordt niet meestal gebruikt voor binding. Dit veld is alleen-lezen."
  remarks: "Het veld Nee, is de standaardinstelling voor de <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>       Wanneer het markeren van een eigenschap met de <xref:System.ComponentModel.BindableAttribute.%23ctor%2A>constructor van de waarde `false,` de waarde van dit kenmerk is ingesteld op de constant lid nr.</xref:System.ComponentModel.BindableAttribute.%23ctor%2A> Daarom om te controleren of het kenmerk is ingesteld op deze waarde in uw code, moet u het kenmerk als Nee."
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute No;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Yes
  id: Yes
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: BindableAttribute.Yes
  fullName: System.ComponentModel.BindableAttribute.Yes
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee geeft u een eigenschap wordt doorgaans gebruikt voor binding. Dit veld is alleen-lezen."
  remarks: "Wanneer het markeren van een eigenschap met de <xref:System.ComponentModel.BindableAttribute.%23ctor%2A>constructor van de waarde `true`, de waarde van de <xref:System.ComponentModel.BindableAttribute>is ingesteld op de constant lid Ja.</xref:System.ComponentModel.BindableAttribute> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> U moet daarom om te controleren of het kenmerk is ingesteld op deze waarde in uw code, het kenmerk opgeven als Ja."
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute Yes;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(Boolean)
  nameWithType: BindableAttribute.BindableAttribute(Boolean)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(BindableSupport)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)
- uid: System.ComponentModel.BindableSupport
  parent: System.ComponentModel
  isExternal: false
  name: BindableSupport
  nameWithType: BindableSupport
  fullName: System.ComponentModel.BindableSupport
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(Boolean,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)
- uid: System.ComponentModel.BindingDirection
  parent: System.ComponentModel
  isExternal: false
  name: BindingDirection
  nameWithType: BindingDirection
  fullName: System.ComponentModel.BindingDirection
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(BindableSupport,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
- uid: System.ComponentModel.BindableAttribute.Bindable
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Bindable
  nameWithType: BindableAttribute.Bindable
  fullName: System.ComponentModel.BindableAttribute.Bindable
- uid: System.ComponentModel.BindableAttribute.Default
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Default
  nameWithType: BindableAttribute.Default
  fullName: System.ComponentModel.BindableAttribute.Default
- uid: System.ComponentModel.BindableAttribute
  parent: System.ComponentModel
  isExternal: false
  name: BindableAttribute
  nameWithType: BindableAttribute
  fullName: System.ComponentModel.BindableAttribute
- uid: System.ComponentModel.BindableAttribute.Direction
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Direction
  nameWithType: BindableAttribute.Direction
  fullName: System.ComponentModel.BindableAttribute.Direction
- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: BindableAttribute.Equals(Object)
  fullName: System.ComponentModel.BindableAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.BindableAttribute.GetHashCode
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: BindableAttribute.GetHashCode()
  fullName: System.ComponentModel.BindableAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: BindableAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.BindableAttribute.No
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: No
  nameWithType: BindableAttribute.No
  fullName: System.ComponentModel.BindableAttribute.No
- uid: System.ComponentModel.BindableAttribute.Yes
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Yes
  nameWithType: BindableAttribute.Yes
  fullName: System.ComponentModel.BindableAttribute.Yes
- uid: System.ComponentModel.BindableAttribute.#ctor*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute
  nameWithType: BindableAttribute.BindableAttribute
- uid: System.ComponentModel.BindableAttribute.Bindable*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Bindable
  nameWithType: BindableAttribute.Bindable
- uid: System.ComponentModel.BindableAttribute.Direction*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Direction
  nameWithType: BindableAttribute.Direction
- uid: System.ComponentModel.BindableAttribute.Equals*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Equals
  nameWithType: BindableAttribute.Equals
- uid: System.ComponentModel.BindableAttribute.GetHashCode*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: BindableAttribute.GetHashCode
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: BindableAttribute.IsDefaultAttribute
