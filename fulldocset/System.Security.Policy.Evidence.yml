### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.Evidence
  id: Evidence
  children:
  - System.Security.Policy.Evidence.#ctor
  - System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)
  - System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])
  - System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])
  - System.Security.Policy.Evidence.AddAssembly(System.Object)
  - System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)
  - System.Security.Policy.Evidence.AddHost(System.Object)
  - System.Security.Policy.Evidence.AddHostEvidence``1(``0)
  - System.Security.Policy.Evidence.Clear
  - System.Security.Policy.Evidence.Clone
  - System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)
  - System.Security.Policy.Evidence.Count
  - System.Security.Policy.Evidence.GetAssemblyEnumerator
  - System.Security.Policy.Evidence.GetAssemblyEvidence``1
  - System.Security.Policy.Evidence.GetEnumerator
  - System.Security.Policy.Evidence.GetHostEnumerator
  - System.Security.Policy.Evidence.GetHostEvidence``1
  - System.Security.Policy.Evidence.IsReadOnly
  - System.Security.Policy.Evidence.IsSynchronized
  - System.Security.Policy.Evidence.Locked
  - System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)
  - System.Security.Policy.Evidence.RemoveType(System.Type)
  - System.Security.Policy.Evidence.SyncRoot
  langs:
  - csharp
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
  type: Class
  summary: "Definieert de set van informatie die wordt verstaan onder invoer voor de beveiliging voor beleidsbeslissingen. Deze klasse kan niet worden overgenomen."
  remarks: "Algemene vormen van bewijs handtekeningen en de locatie van de oorsprong van code bevatten, maar kunnen mogelijk van alles zijn. Objecten die worden herkend door het beveiligingsbeleid van elk type vertegenwoordigen bewijs.       Beveiligingsbeleid bestaat uit groepen; een bepaalde assembly (de basiseenheid voor de code voor het verlenen van beveiligingsmachtigingen) is lid van een codegroep als deze voldoet aan de codegroep lidmaatschapsvoorwaarde. Bewijs is de set van invoer voor beleid lidmaatschapsvoorwaarden gebruiken om te bepalen welke codegroepen een assembly behoort.       De klasse bewijs is een verzameling (Zie <xref:System.Collections.ICollection>) die bevat een set objecten die bewijs vertegenwoordigen.</xref:System.Collections.ICollection> Deze klasse bevat twee sets die overeenkomen met de bron van het bewijs: bewijs en assembly-bewijs hosten.       Beleid krijgen bewijs van twee verschillende bronnen bij het evalueren van machtigingen voor de code.      - `Host evidence` wordt aangeboden door de host en kan alleen worden geleverd door hosts die zijn verleend de <xref:System.Security.Permissions.SecurityPermissionFlag>machtiging.</xref:System.Security.Permissions.SecurityPermissionFlag> Dit is meestal bewijs van de oorsprong van de code en digitale handtekeningen in de assembly. Gegevens over de oorsprong bestaan doorgaans uit <xref:System.Security.Policy.Url>, <xref:System.Security.Policy.Site>, en <xref:System.Security.Policy.Zone>bewijs.</xref:System.Security.Policy.Zone> </xref:System.Security.Policy.Site> </xref:System.Security.Policy.Url> Handtekeningen verwijzen naar software-uitgever (AuthentiCode X.509v3-handtekening) en sterke naam identiteiten. Beide soorten digitale handtekening gebaseerde identiteit moeten zijn ingebouwd in de assembly, maar worden gevalideerd en doorgegeven aan het beleid door de host; Wanneer geladen, is het beveiligingssysteem verifieert de handtekening. Het systeem vervolgens maakt u de juiste bewijs en wordt doorgegeven aan het beleid alleen als de bijbehorende handtekening ongeldig is.      - `Assembly evidence` maakt deel uit van de assembly zelf. Ontwikkelaars of beheerders kunnen aangepaste bewijs koppelen aan de assembly uit te breiden de reeks bewijs voor beleid. Assembly-bewijs kan alleen worden toegevoegd op het moment van genereren van assembly vindt plaats voordat de assembly is ondertekend. Het standaardbeleid van het beveiligingssysteem opgegeven assembly-bewijs worden genegeerd, maar het beleid kan worden uitgebreid om te accepteren."
  example:
  - "The following code example demonstrates how to create new Evidence classes with both host evidence and assembly evidence.  \n  \n [!code-vb[System.Security.Policy.Evidence#1](~/add/codesnippet/visualbasic/t-system.security.policy_1_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#1](~/add/codesnippet/cpp/t-system.security.policy_1_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#1](~/add/codesnippet/csharp/t-system.security.policy_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class Evidence : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor
  id: '#ctor'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence()
  nameWithType: Evidence.Evidence()
  fullName: System.Security.Policy.Evidence.Evidence()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#15](~/add/codesnippet/visualbasic/m-system.security.policy_14_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#15](~/add/codesnippet/cpp/m-system.security.policy_14_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#15](~/add/codesnippet/csharp/m-system.security.policy_14_1.cs)]"
  syntax:
    content: public Evidence ();
    parameters: []
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)
  id: '#ctor(System.Security.Policy.Evidence)'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence(Evidence)
  nameWithType: Evidence.Evidence(Evidence)
  fullName: System.Security.Policy.Evidence.Evidence(Evidence)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> klasse vanuit een recente kopie van een bestaande."
  remarks: ''
  example:
  - "The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#12](~/add/codesnippet/visualbasic/m-system.security.policy_31_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#12](~/add/codesnippet/cpp/m-system.security.policy_31_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#12](~/add/codesnippet/csharp/m-system.security.policy_31_1.cs)]"
  syntax:
    content: public Evidence (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> exemplaar waarin het nieuwe exemplaar te maken. Dit exemplaar is niet diep-gekopieerd."
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> evidence </code> parameter is niet geldig exemplaar van <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])
  id: '#ctor(System.Object[],System.Object[])'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence(Object[],Object[])
  nameWithType: Evidence.Evidence(Object[],Object[])
  fullName: System.Security.Policy.Evidence.Evidence(Object[],Object[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> klasse uit meerdere sets met de host en de assembly-bewijs."
  remarks: ''
  example:
  - "The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#3](~/add/codesnippet/visualbasic/m-system.security.policy_2_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#3](~/add/codesnippet/cpp/m-system.security.policy_2_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#3](~/add/codesnippet/csharp/m-system.security.policy_2_1.cs)]"
  syntax:
    content: public Evidence (object[] hostEvidence, object[] assemblyEvidence);
    parameters:
    - id: hostEvidence
      type: System.Object[]
      description: "De host bewijs van waaruit het nieuwe exemplaar te maken."
    - id: assemblyEvidence
      type: System.Object[]
      description: "De assembly-bewijs van waaruit het nieuwe exemplaar te maken."
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])
  id: '#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence(EvidenceBase[],EvidenceBase[])
  nameWithType: Evidence.Evidence(EvidenceBase[],EvidenceBase[])
  fullName: System.Security.Policy.Evidence.Evidence(EvidenceBase[],EvidenceBase[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> klasse uit meerdere sets met de host en de assembly-bewijs."
  remarks: "Deze constructor maakt een nieuw exemplaar van de klasse met behulp van bewijs-objecten die worden overgenomen van de <xref:System.Security.Policy.EvidenceBase>klasse.</xref:System.Security.Policy.EvidenceBase>"
  syntax:
    content: public Evidence (System.Security.Policy.EvidenceBase[] hostEvidence, System.Security.Policy.EvidenceBase[] assemblyEvidence);
    parameters:
    - id: hostEvidence
      type: System.Security.Policy.EvidenceBase[]
      description: "De host bewijs van waaruit het nieuwe exemplaar te maken."
    - id: assemblyEvidence
      type: System.Security.Policy.EvidenceBase[]
      description: "De assembly-bewijs van waaruit het nieuwe exemplaar te maken."
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddAssembly(System.Object)
  id: AddAssembly(System.Object)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddAssembly(Object)
  nameWithType: Evidence.AddAssembly(Object)
  fullName: System.Security.Policy.Evidence.AddAssembly(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Voegt de opgegeven assembly-bewijs toe aan de set bewijs."
  remarks: "Gebruik deze methode voor bewijs dat is afgeleid van de assembly.      > [!NOTE] > Deze methode voert een selectievakje om te voorkomen dat dubbele typen bewijs toe te voegen. Veel assembly-bewijs objecten kunnen op hetzelfde moment bestaan."
  example:
  - "The following code example shows the use of the AddAssembly method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#4](~/add/codesnippet/visualbasic/m-system.security.policy_12_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#4](~/add/codesnippet/cpp/m-system.security.policy_12_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#4](~/add/codesnippet/csharp/m-system.security.policy_12_1.cs)]"
  syntax:
    content: public void AddAssembly (object id);
    parameters:
    - id: id
      type: System.Object
      description: "Een object bewijs."
  overload: System.Security.Policy.Evidence.AddAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>id</code>kan niet worden geserialiseerd."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)
  id: AddAssemblyEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddAssemblyEvidence(T)
  nameWithType: Evidence.AddAssemblyEvidence(T)
  fullName: System.Security.Policy.Evidence.AddAssemblyEvidence(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public void AddAssemblyEvidence<T> (T evidence) where T : System.Security.Policy.EvidenceBase;'
    parameters:
    - id: evidence
      type: T
      description: "Moet worden toegevoegd."
  overload: System.Security.Policy.Evidence.AddAssemblyEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddHost(System.Object)
  id: AddHost(System.Object)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddHost(Object)
  nameWithType: Evidence.AddHost(Object)
  fullName: System.Security.Policy.Evidence.AddHost(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Voegt de opgegeven bewijs geleverd door de host aan de set bewijs toe."
  remarks: "Gebruik deze methode voor bewijs geleverd door de host.      > [!NOTE] > Deze methode voert een selectievakje om te voorkomen dat dubbele typen bewijs toe te voegen. Veel hosten objecten kunnen bestaan op hetzelfde moment bewijs."
  example:
  - "The following code example shows the use of the AddHost method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#2](~/add/codesnippet/visualbasic/m-system.security.policy_20_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#2](~/add/codesnippet/cpp/m-system.security.policy_20_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#2](~/add/codesnippet/csharp/m-system.security.policy_20_1.cs)]"
  syntax:
    content: public void AddHost (object id);
    parameters:
    - id: id
      type: System.Object
      description: "Een object bewijs."
  overload: System.Security.Policy.Evidence.AddHost*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>id</code>kan niet worden geserialiseerd."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddHostEvidence``1(``0)
  id: AddHostEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddHostEvidence(T)
  nameWithType: Evidence.AddHostEvidence(T)
  fullName: System.Security.Policy.Evidence.AddHostEvidence(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public void AddHostEvidence<T> (T evidence) where T : System.Security.Policy.EvidenceBase;'
    parameters:
    - id: evidence
      type: T
      description: "Moet worden toegevoegd."
  overload: System.Security.Policy.Evidence.AddHostEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Clear
  id: Clear
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Clear()
  nameWithType: Evidence.Clear()
  fullName: System.Security.Policy.Evidence.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee verwijdert u de host en de assembly-bewijs van de set bewijs."
  remarks: "Wissen verwijdert de aanwijzingen in de host en assembly inventarisaties, instellen van beide op `null`."
  example:
  - "The following code example shows the use of the Clear method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#13](~/add/codesnippet/visualbasic/m-system.security.policy_16_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#13](~/add/codesnippet/cpp/m-system.security.policy_16_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#13](~/add/codesnippet/csharp/m-system.security.policy_16_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Policy.Evidence.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Clone
  id: Clone
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Clone()
  nameWithType: Evidence.Clone()
  fullName: System.Security.Policy.Evidence.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Retourneert een kopie van dit object bewijs."
  remarks: "Het duplicaat is een volledige kopie met alle bewijs objecten in de verzameling."
  syntax:
    content: public System.Security.Policy.Evidence Clone ();
    parameters: []
    return:
      type: System.Security.Policy.Evidence
      description: "Een kopie van dit object bewijs."
  overload: System.Security.Policy.Evidence.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: Evidence.CopyTo(Array,Int32)
  fullName: System.Security.Policy.Evidence.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Kopieën bewijsmateriaal objecten in een <xref:System.Array>.</xref:System.Array>"
  remarks: ''
  example:
  - "The following code example shows the use of the CopyTo method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#6](~/add/codesnippet/visualbasic/m-system.security.policy_0_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#6](~/add/codesnippet/cpp/m-system.security.policy_0_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#6](~/add/codesnippet/csharp/m-system.security.policy_0_1.cs)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "De doelmatrix waarnaar u wilt kopiëren van bewijs objecten."
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde positie in de matrix waarnaar u wilt beginnen met het kopiëren van bewijs objecten."
  overload: System.Security.Policy.Evidence.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index </code>valt buiten het bereik van de doelmatrix<code>.</code>"
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Count
  id: Count
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Count
  nameWithType: Evidence.Count
  fullName: System.Security.Policy.Evidence.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee haalt het aantal bewijs objecten in de set bewijs."
  remarks: ''
  example:
  - "The following code example shows the use of the Count property. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#12](~/add/codesnippet/visualbasic/p-system.security.policy_13_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#12](~/add/codesnippet/cpp/p-system.security.policy_13_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#12](~/add/codesnippet/csharp/p-system.security.policy_13_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal objecten in de set bewijs bewijs."
  overload: System.Security.Policy.Evidence.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator
  id: GetAssemblyEnumerator
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetAssemblyEnumerator()
  nameWithType: Evidence.GetAssemblyEnumerator()
  fullName: System.Security.Policy.Evidence.GetAssemblyEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "De assembly bewijsmateriaal inventariseren."
  remarks: ''
  example:
  - "The following example shows the use of the GetAssemblyEnumerator method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#3](~/add/codesnippet/visualbasic/m-system.security.policy_22_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#3](~/add/codesnippet/cpp/m-system.security.policy_22_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#3](~/add/codesnippet/csharp/m-system.security.policy_22_1.cs)]"
  syntax:
    content: public System.Collections.IEnumerator GetAssemblyEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator voor bewijs toegevoegd door de <xref:System.Security.Policy.Evidence.AddAssembly*>methode.</xref:System.Security.Policy.Evidence.AddAssembly*>"
  overload: System.Security.Policy.Evidence.GetAssemblyEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetAssemblyEvidence``1
  id: GetAssemblyEvidence``1
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetAssemblyEvidence()
  nameWithType: Evidence.GetAssemblyEvidence()
  fullName: System.Security.Policy.Evidence.GetAssemblyEvidence()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public T GetAssemblyEvidence<T> () where T : System.Security.Policy.EvidenceBase;'
    parameters: []
    return:
      type: T
      description: "Moet worden toegevoegd."
  overload: System.Security.Policy.Evidence.GetAssemblyEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Evidence.GetEnumerator()
  fullName: System.Security.Policy.Evidence.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inventariseren van alle gegevens in de set die wordt geleverd door de host zowel die geleverd door de assembly."
  remarks: ''
  example:
  - "The following code example shows the use of the GetEnumerator method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#14](~/add/codesnippet/visualbasic/m-system.security.policy_5_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#14](~/add/codesnippet/cpp/m-system.security.policy_5_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#14](~/add/codesnippet/csharp/m-system.security.policy_5_1.cs)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator voor bewijs toegevoegd door zowel de <> </> *> methode en de <> </> *> methode."
  overload: System.Security.Policy.Evidence.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetHostEnumerator
  id: GetHostEnumerator
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetHostEnumerator()
  nameWithType: Evidence.GetHostEnumerator()
  fullName: System.Security.Policy.Evidence.GetHostEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inventariseren bewijs geleverd door de host."
  remarks: ''
  example:
  - "The following example shows the use of the GetHostEnumerator method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#2](~/add/codesnippet/visualbasic/m-system.security.policy_35_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#2](~/add/codesnippet/cpp/m-system.security.policy_35_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#2](~/add/codesnippet/csharp/m-system.security.policy_35_1.cs)]"
  syntax:
    content: public System.Collections.IEnumerator GetHostEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator voor bewijs toegevoegd door de <xref:System.Security.Policy.Evidence.AddHost*>methode.</xref:System.Security.Policy.Evidence.AddHost*>"
  overload: System.Security.Policy.Evidence.GetHostEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetHostEvidence``1
  id: GetHostEvidence``1
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetHostEvidence()
  nameWithType: Evidence.GetHostEvidence()
  fullName: System.Security.Policy.Evidence.GetHostEvidence()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public T GetHostEvidence<T> () where T : System.Security.Policy.EvidenceBase;'
    parameters: []
    return:
      type: T
      description: "Moet worden toegevoegd."
  overload: System.Security.Policy.Evidence.GetHostEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.IsReadOnly
  id: IsReadOnly
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: Evidence.IsReadOnly
  fullName: System.Security.Policy.Evidence.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Haalt een waarde die aangeeft of de set bewijs alleen-lezen is."
  remarks: "Deze eigenschap niet normaal wordt gebruikt door toepassingscode."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, omdat het kenmerk alleen-lezen bewijs sets worden niet ondersteund."
  overload: System.Security.Policy.Evidence.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: Evidence.IsSynchronized
  fullName: System.Security.Policy.Evidence.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Haalt een waarde die aangeeft of de set bewijs thread-safe."
  remarks: "Deze eigenschap niet normaal wordt gebruikt door toepassingscode."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> omdat de thread-veilige bewijs sets worden niet ondersteund."
  overload: System.Security.Policy.Evidence.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Locked
  id: Locked
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Locked
  nameWithType: Evidence.Locked
  fullName: System.Security.Policy.Evidence.Locked
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of het bewijs is vergrendeld."
  remarks: ''
  example:
  - "The following code example shows the use of the Locked property. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#7](~/add/codesnippet/visualbasic/p-system.security.policy_2_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#7](~/add/codesnippet/cpp/p-system.security.policy_2_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#7](~/add/codesnippet/csharp/p-system.security.policy_2_1.cs)]"
  syntax:
    content: public bool Locked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het bewijs is vergrendeld. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.Evidence.Locked*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)
  id: Merge(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Merge(Evidence)
  nameWithType: Evidence.Merge(Evidence)
  fullName: System.Security.Policy.Evidence.Merge(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee worden de opgegeven bewijs ingesteld in de huidige bewijs set samengevoegd."
  remarks: "Elk object bewijs in de set opgegeven bewijs wordt toegevoegd aan de assembly en host sets van de huidige set bewijs, volgens de sets waaruit deze afkomstig is.      > [!NOTE] > Deze methode voert een selectievakje om te voorkomen dat dubbele typen bewijs toe te voegen. Veel assembly en host bewijs objecten kunnen op hetzelfde moment bestaan."
  example:
  - "The following code example shows the use of the Merge method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#10](~/add/codesnippet/visualbasic/m-system.security.policy_9_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#10](~/add/codesnippet/cpp/m-system.security.policy_9_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#10](~/add/codesnippet/csharp/m-system.security.policy_9_1.cs)]"
  syntax:
    content: public void Merge (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De gegevens moeten worden samengevoegd met de huidige bewijs set ingesteld."
  overload: System.Security.Policy.Evidence.Merge*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> evidence </code> parameter is niet geldig exemplaar van <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<xref:System.Security.Policy.Evidence.Locked*>is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, de code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>, en de <code> evidence </code> parameter heeft een host-lijst niet leeg is.</xref:System.Security.Policy.Evidence.Locked*>"
  platform:
  - net462
- uid: System.Security.Policy.Evidence.RemoveType(System.Type)
  id: RemoveType(System.Type)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: RemoveType(Type)
  nameWithType: Evidence.RemoveType(Type)
  fullName: System.Security.Policy.Evidence.RemoveType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee verwijdert u het bewijs van een bepaald type van de host en assembly opsommingen."
  remarks: "De resultaten van het uitvoeren van de methode RemoveType kunnen worden bevestigd met behulp van de <xref:System.Security.Policy.Evidence.GetAssemblyEnumerator%2A>methode en de <xref:System.Security.Policy.Evidence.GetHostEnumerator%2A>methode.</xref:System.Security.Policy.Evidence.GetHostEnumerator%2A> </xref:System.Security.Policy.Evidence.GetAssemblyEnumerator%2A>"
  example:
  - "The following code example shows the use of the RemoveType method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#11](~/add/codesnippet/visualbasic/m-system.security.policy_36_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#11](~/add/codesnippet/cpp/m-system.security.policy_36_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#11](~/add/codesnippet/csharp/m-system.security.policy_36_1.cs)]"
  syntax:
    content: public void RemoveType (Type t);
    parameters:
    - id: t
      type: System.Type
      description: "Het type van de gegevens worden verwijderd."
  overload: System.Security.Policy.Evidence.RemoveType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>t</code>is null."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.SyncRoot
  id: SyncRoot
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: SyncRoot
  nameWithType: Evidence.SyncRoot
  fullName: System.Security.Policy.Evidence.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee haalt u de synchronisatie-hoofdmap."
  remarks: "Deze eigenschap wordt normaal gesproken niet gebruikt door de toepassingscode."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Altijd <xref uid=&quot;langword_csharp_this&quot; name=&quot;this&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Me&quot; name=&quot;Me&quot; href=&quot;&quot;> </xref> in Visual Basic), omdat de synchronisatie van bewijs sets wordt niet ondersteund."
  overload: System.Security.Policy.Evidence.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Security.Policy.Evidence.#ctor
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence()
  nameWithType: Evidence.Evidence()
  fullName: System.Security.Policy.Evidence.Evidence()
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence(Evidence)
  nameWithType: Evidence.Evidence(Evidence)
  fullName: System.Security.Policy.Evidence.Evidence(Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence(Object[],Object[])
  nameWithType: Evidence.Evidence(Object[],Object[])
  fullName: System.Security.Policy.Evidence.Evidence(Object[],Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence(EvidenceBase[],EvidenceBase[])
  nameWithType: Evidence.Evidence(EvidenceBase[],EvidenceBase[])
  fullName: System.Security.Policy.Evidence.Evidence(EvidenceBase[],EvidenceBase[])
- uid: System.Security.Policy.EvidenceBase[]
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase[]
  spec.csharp:
  - uid: System.Security.Policy.EvidenceBase
    name: EvidenceBase
    nameWithType: EvidenceBase
    fullName: EvidenceBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.Evidence.AddAssembly(System.Object)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssembly(Object)
  nameWithType: Evidence.AddAssembly(Object)
  fullName: System.Security.Policy.Evidence.AddAssembly(Object)
- uid: System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssemblyEvidence(T)
  nameWithType: Evidence.AddAssemblyEvidence(T)
  fullName: System.Security.Policy.Evidence.AddAssemblyEvidence(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Security.Policy.Evidence.AddHost(System.Object)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHost(Object)
  nameWithType: Evidence.AddHost(Object)
  fullName: System.Security.Policy.Evidence.AddHost(Object)
- uid: System.Security.Policy.Evidence.AddHostEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHostEvidence(T)
  nameWithType: Evidence.AddHostEvidence(T)
  fullName: System.Security.Policy.Evidence.AddHostEvidence(T)
- uid: System.Security.Policy.Evidence.Clear
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clear()
  nameWithType: Evidence.Clear()
  fullName: System.Security.Policy.Evidence.Clear()
- uid: System.Security.Policy.Evidence.Clone
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clone()
  nameWithType: Evidence.Clone()
  fullName: System.Security.Policy.Evidence.Clone()
- uid: System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: Evidence.CopyTo(Array,Int32)
  fullName: System.Security.Policy.Evidence.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.Evidence.Count
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Count
  nameWithType: Evidence.Count
  fullName: System.Security.Policy.Evidence.Count
- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEnumerator()
  nameWithType: Evidence.GetAssemblyEnumerator()
  fullName: System.Security.Policy.Evidence.GetAssemblyEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Policy.Evidence.GetAssemblyEvidence``1
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEvidence()
  nameWithType: Evidence.GetAssemblyEvidence()
  fullName: System.Security.Policy.Evidence.GetAssemblyEvidence()
- uid: System.Security.Policy.Evidence.GetEnumerator
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetEnumerator()
  nameWithType: Evidence.GetEnumerator()
  fullName: System.Security.Policy.Evidence.GetEnumerator()
- uid: System.Security.Policy.Evidence.GetHostEnumerator
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEnumerator()
  nameWithType: Evidence.GetHostEnumerator()
  fullName: System.Security.Policy.Evidence.GetHostEnumerator()
- uid: System.Security.Policy.Evidence.GetHostEvidence``1
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEvidence()
  nameWithType: Evidence.GetHostEvidence()
  fullName: System.Security.Policy.Evidence.GetHostEvidence()
- uid: System.Security.Policy.Evidence.IsReadOnly
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsReadOnly
  nameWithType: Evidence.IsReadOnly
  fullName: System.Security.Policy.Evidence.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.Evidence.IsSynchronized
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsSynchronized
  nameWithType: Evidence.IsSynchronized
  fullName: System.Security.Policy.Evidence.IsSynchronized
- uid: System.Security.Policy.Evidence.Locked
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Locked
  nameWithType: Evidence.Locked
  fullName: System.Security.Policy.Evidence.Locked
- uid: System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Merge(Evidence)
  nameWithType: Evidence.Merge(Evidence)
  fullName: System.Security.Policy.Evidence.Merge(Evidence)
- uid: System.Security.Policy.Evidence.RemoveType(System.Type)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: RemoveType(Type)
  nameWithType: Evidence.RemoveType(Type)
  fullName: System.Security.Policy.Evidence.RemoveType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Policy.Evidence.SyncRoot
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: SyncRoot
  nameWithType: Evidence.SyncRoot
  fullName: System.Security.Policy.Evidence.SyncRoot
- uid: System.Security.Policy.Evidence.#ctor*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence
  nameWithType: Evidence.Evidence
- uid: System.Security.Policy.Evidence.AddAssembly*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssembly
  nameWithType: Evidence.AddAssembly
- uid: System.Security.Policy.Evidence.AddAssemblyEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssemblyEvidence<T>
  nameWithType: Evidence.AddAssemblyEvidence<T>
- uid: System.Security.Policy.Evidence.AddHost*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHost
  nameWithType: Evidence.AddHost
- uid: System.Security.Policy.Evidence.AddHostEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHostEvidence<T>
  nameWithType: Evidence.AddHostEvidence<T>
- uid: System.Security.Policy.Evidence.Clear*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clear
  nameWithType: Evidence.Clear
- uid: System.Security.Policy.Evidence.Clone*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clone
  nameWithType: Evidence.Clone
- uid: System.Security.Policy.Evidence.CopyTo*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: CopyTo
  nameWithType: Evidence.CopyTo
- uid: System.Security.Policy.Evidence.Count*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Count
  nameWithType: Evidence.Count
- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEnumerator
  nameWithType: Evidence.GetAssemblyEnumerator
- uid: System.Security.Policy.Evidence.GetAssemblyEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEvidence<T>
  nameWithType: Evidence.GetAssemblyEvidence<T>
- uid: System.Security.Policy.Evidence.GetEnumerator*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetEnumerator
  nameWithType: Evidence.GetEnumerator
- uid: System.Security.Policy.Evidence.GetHostEnumerator*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEnumerator
  nameWithType: Evidence.GetHostEnumerator
- uid: System.Security.Policy.Evidence.GetHostEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEvidence<T>
  nameWithType: Evidence.GetHostEvidence<T>
- uid: System.Security.Policy.Evidence.IsReadOnly*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsReadOnly
  nameWithType: Evidence.IsReadOnly
- uid: System.Security.Policy.Evidence.IsSynchronized*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsSynchronized
  nameWithType: Evidence.IsSynchronized
- uid: System.Security.Policy.Evidence.Locked*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Locked
  nameWithType: Evidence.Locked
- uid: System.Security.Policy.Evidence.Merge*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Merge
  nameWithType: Evidence.Merge
- uid: System.Security.Policy.Evidence.RemoveType*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: RemoveType
  nameWithType: Evidence.RemoveType
- uid: System.Security.Policy.Evidence.SyncRoot*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: SyncRoot
  nameWithType: Evidence.SyncRoot
