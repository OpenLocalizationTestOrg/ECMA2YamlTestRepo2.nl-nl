### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlEntity
  id: XmlEntity
  children:
  - System.Xml.XmlEntity.BaseURI
  - System.Xml.XmlEntity.CloneNode(System.Boolean)
  - System.Xml.XmlEntity.InnerText
  - System.Xml.XmlEntity.InnerXml
  - System.Xml.XmlEntity.IsReadOnly
  - System.Xml.XmlEntity.LocalName
  - System.Xml.XmlEntity.Name
  - System.Xml.XmlEntity.NodeType
  - System.Xml.XmlEntity.NotationName
  - System.Xml.XmlEntity.OuterXml
  - System.Xml.XmlEntity.PublicId
  - System.Xml.XmlEntity.SystemId
  - System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlEntity
  nameWithType: XmlEntity
  fullName: System.Xml.XmlEntity
  type: Class
  summary: "Hiermee geeft u de declaratie van een entiteit, zoals &lt;! ENTITEIT... &gt;."
  syntax:
    content: 'public class XmlEntity : System.Xml.XmlNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  platform:
  - net462
- uid: System.Xml.XmlEntity.BaseURI
  id: BaseURI
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlEntity.BaseURI
  fullName: System.Xml.XmlEntity.BaseURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u de basis id URI (Uniform Resource) van het huidige knooppunt."
  remarks: "Een XML-document via het netwerk bestaat uit gegevenssegmenten van geaggregeerd met verschillende World Wide Web Consortium (W3C) standaard opgenomen mechanismen en daarom bevat knooppunten die afkomstig uit verschillende plaatsen zijn. De `BaseURI` vertelt u waar deze knooppunten afkomstig is.       De waarde van deze eigenschap varieert afhankelijk van het knooppunttype. Knooppunten die onderliggende elementen van de externe EntityReference-knooppunten zijn retourneren de locatie van de entiteit zelf. Neem bijvoorbeeld het volgende XML-document: ```   <!DOCTYPE item [   <!ENTITY xyz SYSTEM &quot;a/b.xml&quot;>   ]>   <item num=&quot;123&quot;>&xyz;</item>   ``` waarbij de externe entiteit `a/b.xml` bevat de XML-tekst `<test>123</test>`.       Als het document wordt geladen vanaf http://server/mydata.xml, `BaseURI` retourneert het volgende: | NodeType | De naam | BaseURI |   |--------------|----------|-------------|   | Kenmerk | num | http://server/mydata.xml |   | Document | #document | http://server/mydata.xml |   | DocumentType | item | http://server/mydata.xml |   | Entiteit | xyz | http://server/mydata.xml |   | Element | item | http://server/mydata.xml |   | EntityReference | xyz | http://server/mydata.xml |   | Element | testen | http://server/a/b.xml |   | Tekst | #text | http://server/a/b.xml |       `BaseURI` zoekt grenzen van de verwijzing naar entiteit, dus als entiteiten zijn uitgevouwen, deze gegevens blijven niet behouden en deze eigenschap de locatie van geeft de `XmlDocument` object in alle gevallen.       Als een voorbeeld van een tweede, krijgt u de volgende XML-document: ```   <!DOCTYPE Mydata SYSTEM &quot;http://localhost/doctype.dtd&quot;>   <baa>&xyz;</baa>   ``` waar het bestand document type definition (DTD) bevat het volgende: ```   <!ENTITY xyz &quot;<E1>My Data</E1>&quot;>   <!ELEMENT baa #PCDATA>   <!ATTLIST baa attr1 &quot;woof&quot;>   ``` als het XML-document wordt geladen vanaf http://localhost/mydata.xml, `BaseURI` retourneert het volgende voor elk van de knooppunten: | NodeType | De naam | BaseURI |   |--------------|----------|-------------|   | Document | #document | http://localhost/mydata.xml |   | DocumentType | MyData | http://localhost/doctype.dtd |   | Element | baa | http://localhost/mydata.xml |   | Entiteit | xyz | http://localhost/doctype.dtd |   | EntityReference | xyz | http://localhost/mydata.xml |   | Kenmerk | woof | http://localhost/mydata.xml |      > [!NOTE] > De basis-URI van een kenmerk default is hetzelfde als de basis-URI van het element waartoe ze behoren.       Deze eigenschap is een Microsoft-extensie aan het Document Object Model (DOM)."
  syntax:
    content: public override string BaseURI { get; }
    return:
      type: System.String
      description: "De locatie van waaruit het knooppunt is geladen."
  overload: System.Xml.XmlEntity.BaseURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlEntity.CloneNode(Boolean)
  fullName: System.Xml.XmlEntity.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Maakt een kopie van dit knooppunt. Knooppunten van de entiteit kunnen niet worden gekloond. Deze methode aanroept voor een <xref href=&quot;System.Xml.XmlEntity&quot;> </xref> object er een uitzondering gegenereerd."
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om recursief te klonen de substructuur onder het opgegeven knooppunt. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> alleen knooppunt zichzelf klonen."
    return:
      type: System.Xml.XmlNode
      description: "Retourneert een kopie van de <xref href=&quot;System.Xml.XmlNode&quot;> </xref> van de methode wordt aangeroepen."
  overload: System.Xml.XmlEntity.CloneNode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Knooppunten van de entiteit kunnen niet worden gekloond. Deze methode aanroept voor een <xref href=&quot;System.Xml.XmlEntity&quot;> </xref> object er een uitzondering gegenereerd."
  platform:
  - net462
- uid: System.Xml.XmlEntity.InnerText
  id: InnerText
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: InnerText
  nameWithType: XmlEntity.InnerText
  fullName: System.Xml.XmlEntity.InnerText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u de samengevoegde waarden van de entiteit-knooppunt en alle onderliggende groepen."
  remarks: "`XmlEntity`knooppunten zijn alleen-lezen. Als u deze eigenschap instelt, er een uitzondering gegenereerd.       Deze eigenschap is een Microsoft-extensie aan het Document Object Model (DOM)."
  syntax:
    content: public override string InnerText { get; set; }
    return:
      type: System.String
      description: "De samengevoegde waarden van het knooppunt en alle onderliggende groepen."
  overload: System.Xml.XmlEntity.InnerText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wilt de eigenschap niet instellen."
  platform:
  - net462
- uid: System.Xml.XmlEntity.InnerXml
  id: InnerXml
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: InnerXml
  nameWithType: XmlEntity.InnerXml
  fullName: System.Xml.XmlEntity.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u de opmaak die de onderliggende elementen van dit knooppunt vertegenwoordigt."
  remarks: "`XmlEntity`knooppunten zijn alleen-lezen. Als u deze eigenschap instelt, er een uitzondering gegenereerd.       Deze eigenschap is een Microsoft-extensie aan het Document Object Model (DOM)."
  syntax:
    content: public override string InnerXml { get; set; }
    return:
      type: System.String
      description: "Voor <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> knooppunten String.Empty wordt geretourneerd."
  overload: System.Xml.XmlEntity.InnerXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wilt de eigenschap niet instellen."
  platform:
  - net462
- uid: System.Xml.XmlEntity.IsReadOnly
  id: IsReadOnly
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XmlEntity.IsReadOnly
  fullName: System.Xml.XmlEntity.IsReadOnly
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee wordt een waarde die aangeeft of het knooppunt alleen-lezen is."
  remarks: "Een alleen-lezen-knooppunt is een waarvan eigenschappen, kenmerken of onderliggende elementen kan niet worden gewijzigd. U kunt een alleen-lezen-knooppunt verwijderen uit de structuur en voeg deze ergens anders."
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het knooppunt alleen-lezen is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Omdat <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> knooppunten zijn alleen-lezen, retourneert deze eigenschap altijd <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlEntity.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.LocalName
  id: LocalName
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlEntity.LocalName
  fullName: System.Xml.XmlEntity.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u de naam van het knooppunt zonder het naamruimtevoorvoegsel."
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "Voor <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> knooppunten, deze eigenschap retourneert de naam van de entiteit."
  overload: System.Xml.XmlEntity.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.Name
  id: Name
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: Name
  nameWithType: XmlEntity.Name
  fullName: System.Xml.XmlEntity.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u de naam van het knooppunt."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.n_2_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.n_2_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.n_2_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.n_2_2.xml)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "De naam van de entiteit."
  overload: System.Xml.XmlEntity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.NodeType
  id: NodeType
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlEntity.NodeType
  fullName: System.Xml.XmlEntity.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee wordt het type van het knooppunt."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.n_1_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.n_1_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.n_1_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.n_1_2.xml)]"
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "Het knooppunttype. Voor <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> knooppunten, de waarde is XmlNodeType.Entity."
  overload: System.Xml.XmlEntity.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.NotationName
  id: NotationName
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: NotationName
  nameWithType: XmlEntity.NotationName
  fullName: System.Xml.XmlEntity.NotationName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt de naam van de optionele NDATA-kenmerk in de entiteit-declaratie."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.n_0_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.n_0_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.n_0_1.vb)]  \n  \n The example uses the file, `doment.xml`, as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.n_0_2.xml)]"
  syntax:
    content: public string NotationName { get; }
    return:
      type: System.String
      description: "De naam van het kenmerk NDATA. Als er geen NDATA <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wordt geretourneerd."
  overload: System.Xml.XmlEntity.NotationName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.OuterXml
  id: OuterXml
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: OuterXml
  nameWithType: XmlEntity.OuterXml
  fullName: System.Xml.XmlEntity.OuterXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee haalt u de opmaak die dit knooppunt en alle onderliggende groepen vertegenwoordigt."
  remarks: "Deze eigenschap is een Microsoft-extensie aan het Document Object Model (DOM)."
  syntax:
    content: public override string OuterXml { get; }
    return:
      type: System.String
      description: "Voor <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> knooppunten String.Empty wordt geretourneerd."
  overload: System.Xml.XmlEntity.OuterXml*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.PublicId
  id: PublicId
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: PublicId
  nameWithType: XmlEntity.PublicId
  fullName: System.Xml.XmlEntity.PublicId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Wordt de waarde van de publieke id in de entiteit-declaratie."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.p_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.p_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.p_1.vb)]  \n  \n The example uses the file, `doment.xml`, as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.p_2.xml)]"
  syntax:
    content: public string PublicId { get; }
    return:
      type: System.String
      description: "De openbare-id voor de entiteit. Als er geen openbare id <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wordt geretourneerd."
  overload: System.Xml.XmlEntity.PublicId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.SystemId
  id: SystemId
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: SystemId
  nameWithType: XmlEntity.SystemId
  fullName: System.Xml.XmlEntity.SystemId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "De waarde van de systeemidentificatie opgehaald voor de declaratie van de entiteit."
  remarks: ''
  example:
  - "The following example displays information on the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmlentity.s_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmlentity.s_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmlentity.s_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmlentity.s_2.xml)]"
  syntax:
    content: public string SystemId { get; }
    return:
      type: System.String
      description: "De systeem-id voor de entiteit. Als er geen systeemidentificatie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wordt geretourneerd."
  overload: System.Xml.XmlEntity.SystemId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlEntity.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlEntity.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Alle onderliggende elementen van het knooppunt naar de opgegeven <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> opgeslagen Voor <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> knooppunten, deze methode heeft geen effect."
  remarks: "Deze methode is een Microsoft-extensie aan het Document Object Model (DOM)."
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "De <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> waarop u wilt opslaan."
  overload: System.Xml.XmlEntity.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntity
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlEntity.WriteTo(XmlWriter)
  fullName: System.Xml.XmlEntity.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hiermee slaat u het knooppunt aan de opgegeven <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> Voor <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> knooppunten, deze methode heeft geen effect."
  remarks: "Deze methode is een Microsoft-extensie aan het Document Object Model (DOM)."
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "De <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> waarop u wilt opslaan."
  overload: System.Xml.XmlEntity.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlNode
  isExternal: false
  name: System.Xml.XmlNode
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlEntity.BaseURI
  parent: System.Xml.XmlEntity
  isExternal: false
  name: BaseURI
  nameWithType: XmlEntity.BaseURI
  fullName: System.Xml.XmlEntity.BaseURI
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlEntity.CloneNode(System.Boolean)
  parent: System.Xml.XmlEntity
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlEntity.CloneNode(Boolean)
  fullName: System.Xml.XmlEntity.CloneNode(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlEntity.InnerText
  parent: System.Xml.XmlEntity
  isExternal: false
  name: InnerText
  nameWithType: XmlEntity.InnerText
  fullName: System.Xml.XmlEntity.InnerText
- uid: System.Xml.XmlEntity.InnerXml
  parent: System.Xml.XmlEntity
  isExternal: false
  name: InnerXml
  nameWithType: XmlEntity.InnerXml
  fullName: System.Xml.XmlEntity.InnerXml
- uid: System.Xml.XmlEntity.IsReadOnly
  parent: System.Xml.XmlEntity
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlEntity.IsReadOnly
  fullName: System.Xml.XmlEntity.IsReadOnly
- uid: System.Xml.XmlEntity.LocalName
  parent: System.Xml.XmlEntity
  isExternal: false
  name: LocalName
  nameWithType: XmlEntity.LocalName
  fullName: System.Xml.XmlEntity.LocalName
- uid: System.Xml.XmlEntity.Name
  parent: System.Xml.XmlEntity
  isExternal: false
  name: Name
  nameWithType: XmlEntity.Name
  fullName: System.Xml.XmlEntity.Name
- uid: System.Xml.XmlEntity.NodeType
  parent: System.Xml.XmlEntity
  isExternal: false
  name: NodeType
  nameWithType: XmlEntity.NodeType
  fullName: System.Xml.XmlEntity.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlEntity.NotationName
  parent: System.Xml.XmlEntity
  isExternal: false
  name: NotationName
  nameWithType: XmlEntity.NotationName
  fullName: System.Xml.XmlEntity.NotationName
- uid: System.Xml.XmlEntity.OuterXml
  parent: System.Xml.XmlEntity
  isExternal: false
  name: OuterXml
  nameWithType: XmlEntity.OuterXml
  fullName: System.Xml.XmlEntity.OuterXml
- uid: System.Xml.XmlEntity.PublicId
  parent: System.Xml.XmlEntity
  isExternal: false
  name: PublicId
  nameWithType: XmlEntity.PublicId
  fullName: System.Xml.XmlEntity.PublicId
- uid: System.Xml.XmlEntity.SystemId
  parent: System.Xml.XmlEntity
  isExternal: false
  name: SystemId
  nameWithType: XmlEntity.SystemId
  fullName: System.Xml.XmlEntity.SystemId
- uid: System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntity
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlEntity.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlEntity.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlEntity
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlEntity.WriteTo(XmlWriter)
  fullName: System.Xml.XmlEntity.WriteTo(XmlWriter)
- uid: System.Xml.XmlEntity.BaseURI*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: BaseURI
  nameWithType: XmlEntity.BaseURI
- uid: System.Xml.XmlEntity.CloneNode*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: CloneNode
  nameWithType: XmlEntity.CloneNode
- uid: System.Xml.XmlEntity.InnerText*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: InnerText
  nameWithType: XmlEntity.InnerText
- uid: System.Xml.XmlEntity.InnerXml*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: InnerXml
  nameWithType: XmlEntity.InnerXml
- uid: System.Xml.XmlEntity.IsReadOnly*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlEntity.IsReadOnly
- uid: System.Xml.XmlEntity.LocalName*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: LocalName
  nameWithType: XmlEntity.LocalName
- uid: System.Xml.XmlEntity.Name*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: Name
  nameWithType: XmlEntity.Name
- uid: System.Xml.XmlEntity.NodeType*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: NodeType
  nameWithType: XmlEntity.NodeType
- uid: System.Xml.XmlEntity.NotationName*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: NotationName
  nameWithType: XmlEntity.NotationName
- uid: System.Xml.XmlEntity.OuterXml*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: OuterXml
  nameWithType: XmlEntity.OuterXml
- uid: System.Xml.XmlEntity.PublicId*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: PublicId
  nameWithType: XmlEntity.PublicId
- uid: System.Xml.XmlEntity.SystemId*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: SystemId
  nameWithType: XmlEntity.SystemId
- uid: System.Xml.XmlEntity.WriteContentTo*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlEntity.WriteContentTo
- uid: System.Xml.XmlEntity.WriteTo*
  parent: System.Xml.XmlEntity
  isExternal: false
  name: WriteTo
  nameWithType: XmlEntity.WriteTo
