### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.IApplicationTrustManager
  id: IApplicationTrustManager
  children:
  - System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  langs:
  - csharp
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
  type: Interface
  summary: "Bepaalt of een toepassing moet worden uitgevoerd en welke reeks machtigingen moet worden verleend."
  remarks: "Vertrouwen managers moeten de IApplicationTrustManager-interface implementeren. Het aanroepen van de host de <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>methode om te bepalen of een toepassing moet worden uitgevoerd en welke machtigingen moeten worden toegekend aan de toepassing.</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>       In de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] en later, er is slechts één vertrouwensrelatie-servicebeheer, die een aangepaste implementatie van de interface IApplicationTrustManager kan zijn. De standaardimplementatie van de vertrouwensrelatie-manager vraagt de gebruiker om toestemming om de toepassing te installeren en wilt uitbreiden, de machtigingen te krijgen tot de toepassing. Andere trust manager-implementaties kunnen andere gebruikerservaringen bieden. Een implementatie kan bijvoorbeeld een lijst van enterprise voor vertrouwde toepassingen in plaats van de gebruiker die informatie wordt gevraagd te controleren."
  example:
  - "The following example shows a simple implementation of IApplicationTrustManager.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/csharp/t-system.security.policy_3_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/visualbasic/t-system.security.policy_3_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IApplicationTrustManager : System.Security.ISecurityEncodable
  implements:
  - System.Security.ISecurityEncodable
  platform:
  - net462
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Bepaalt of een toepassing moet worden uitgevoerd en welke reeks machtigingen moet worden verleend."
  remarks: "De methode DetermineApplicationTrust wordt aangeroepen door de host om te bepalen of een toepassing moet worden uitgevoerd en welke set machtigingen het moet worden verleend. DetermineApplicationTrust retourneert een <xref:System.Security.Policy.ApplicationTrust>object met een <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A>eigenschap met een machtiging ingesteld voor de machtigingen om te worden toegekend aan elke assembly in de context van de toepassing wordt uitgevoerd.</xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> </xref:System.Security.Policy.ApplicationTrust> De verleende machtigingen zijn niet van toepassing op assembly&quot;s in de global assemblycache. De <xref:System.Security.Policy.ApplicationTrust>-object heeft ook een <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A>eigenschap die de manager van de vertrouwensrelatie wordt ingesteld om aan te geven of de toepassing vertrouwd worden moet.</xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> </xref:System.Security.Policy.ApplicationTrust> Als de manager van de vertrouwensrelatie wordt aangegeven dat de toepassing vertrouwd worden kan, de host de toepassing wordt geactiveerd en de assembly&quot;s verleent de reeks machtigingen die zijn opgegeven in de <xref:System.Security.Policy.ApplicationTrust>verzameling.</xref:System.Security.Policy.ApplicationTrust>"
  example:
  - "The following example shows an implementation of the DetermineApplicationTrust method for a custom trust manager. This code example is part of a larger example provided for the <xref:System.Security.Policy.IApplicationTrustManager> interface.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/csharp/24b6db65-f82b-47e4-ac93-_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/visualbasic/24b6db65-f82b-47e4-ac93-_1.vb)]"
  syntax:
    content: public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "De activeringscontext voor de toepassing."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "De context van de manager vertrouwensrelatie voor de toepassing."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Een object dat beveiliging beslissingen over de toepassing bevat."
  overload: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust
