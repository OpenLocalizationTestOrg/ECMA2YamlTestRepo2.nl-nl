### YamlMime:ManagedReference
items:
- uid: System.Windows.UIElement
  id: UIElement
  children:
  - System.Windows.UIElement.#ctor
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.AllowDrop
  - System.Windows.UIElement.AllowDropProperty
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.AreAnyTouchesCaptured
  - System.Windows.UIElement.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement.AreAnyTouchesOver
  - System.Windows.UIElement.AreAnyTouchesOverProperty
  - System.Windows.UIElement.Arrange(System.Windows.Rect)
  - System.Windows.UIElement.ArrangeCore(System.Windows.Rect)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.BitmapEffect
  - System.Windows.UIElement.BitmapEffectInput
  - System.Windows.UIElement.BitmapEffectInputProperty
  - System.Windows.UIElement.BitmapEffectProperty
  - System.Windows.UIElement.CacheMode
  - System.Windows.UIElement.CacheModeProperty
  - System.Windows.UIElement.CaptureMouse
  - System.Windows.UIElement.CaptureStylus
  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.Clip
  - System.Windows.UIElement.ClipProperty
  - System.Windows.UIElement.ClipToBounds
  - System.Windows.UIElement.ClipToBoundsProperty
  - System.Windows.UIElement.CommandBindings
  - System.Windows.UIElement.DesiredSize
  - System.Windows.UIElement.DragEnter
  - System.Windows.UIElement.DragEnterEvent
  - System.Windows.UIElement.DragLeave
  - System.Windows.UIElement.DragLeaveEvent
  - System.Windows.UIElement.DragOver
  - System.Windows.UIElement.DragOverEvent
  - System.Windows.UIElement.Drop
  - System.Windows.UIElement.DropEvent
  - System.Windows.UIElement.Effect
  - System.Windows.UIElement.EffectProperty
  - System.Windows.UIElement.Focus
  - System.Windows.UIElement.Focusable
  - System.Windows.UIElement.FocusableChanged
  - System.Windows.UIElement.FocusableProperty
  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.UIElement.GetLayoutClip(System.Windows.Size)
  - System.Windows.UIElement.GetUIParentCore
  - System.Windows.UIElement.GiveFeedback
  - System.Windows.UIElement.GiveFeedbackEvent
  - System.Windows.UIElement.GotFocus
  - System.Windows.UIElement.GotFocusEvent
  - System.Windows.UIElement.GotKeyboardFocus
  - System.Windows.UIElement.GotKeyboardFocusEvent
  - System.Windows.UIElement.GotMouseCapture
  - System.Windows.UIElement.GotMouseCaptureEvent
  - System.Windows.UIElement.GotStylusCapture
  - System.Windows.UIElement.GotStylusCaptureEvent
  - System.Windows.UIElement.GotTouchCapture
  - System.Windows.UIElement.GotTouchCaptureEvent
  - System.Windows.UIElement.HasAnimatedProperties
  - System.Windows.UIElement.HasEffectiveKeyboardFocus
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.UIElement.InputBindings
  - System.Windows.UIElement.InputHitTest(System.Windows.Point)
  - System.Windows.UIElement.InvalidateArrange
  - System.Windows.UIElement.InvalidateMeasure
  - System.Windows.UIElement.InvalidateVisual
  - System.Windows.UIElement.IsArrangeValid
  - System.Windows.UIElement.IsEnabled
  - System.Windows.UIElement.IsEnabledChanged
  - System.Windows.UIElement.IsEnabledCore
  - System.Windows.UIElement.IsEnabledProperty
  - System.Windows.UIElement.IsFocused
  - System.Windows.UIElement.IsFocusedProperty
  - System.Windows.UIElement.IsHitTestVisible
  - System.Windows.UIElement.IsHitTestVisibleChanged
  - System.Windows.UIElement.IsHitTestVisibleProperty
  - System.Windows.UIElement.IsInputMethodEnabled
  - System.Windows.UIElement.IsKeyboardFocused
  - System.Windows.UIElement.IsKeyboardFocusedChanged
  - System.Windows.UIElement.IsKeyboardFocusedProperty
  - System.Windows.UIElement.IsKeyboardFocusWithin
  - System.Windows.UIElement.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement.IsManipulationEnabled
  - System.Windows.UIElement.IsManipulationEnabledProperty
  - System.Windows.UIElement.IsMeasureValid
  - System.Windows.UIElement.IsMouseCaptured
  - System.Windows.UIElement.IsMouseCapturedChanged
  - System.Windows.UIElement.IsMouseCapturedProperty
  - System.Windows.UIElement.IsMouseCaptureWithin
  - System.Windows.UIElement.IsMouseCaptureWithinChanged
  - System.Windows.UIElement.IsMouseCaptureWithinProperty
  - System.Windows.UIElement.IsMouseDirectlyOver
  - System.Windows.UIElement.IsMouseDirectlyOverChanged
  - System.Windows.UIElement.IsMouseDirectlyOverProperty
  - System.Windows.UIElement.IsMouseOver
  - System.Windows.UIElement.IsMouseOverProperty
  - System.Windows.UIElement.IsStylusCaptured
  - System.Windows.UIElement.IsStylusCapturedChanged
  - System.Windows.UIElement.IsStylusCapturedProperty
  - System.Windows.UIElement.IsStylusCaptureWithin
  - System.Windows.UIElement.IsStylusCaptureWithinChanged
  - System.Windows.UIElement.IsStylusCaptureWithinProperty
  - System.Windows.UIElement.IsStylusDirectlyOver
  - System.Windows.UIElement.IsStylusDirectlyOverChanged
  - System.Windows.UIElement.IsStylusDirectlyOverProperty
  - System.Windows.UIElement.IsStylusOver
  - System.Windows.UIElement.IsStylusOverProperty
  - System.Windows.UIElement.IsVisible
  - System.Windows.UIElement.IsVisibleChanged
  - System.Windows.UIElement.IsVisibleProperty
  - System.Windows.UIElement.KeyDown
  - System.Windows.UIElement.KeyDownEvent
  - System.Windows.UIElement.KeyUp
  - System.Windows.UIElement.KeyUpEvent
  - System.Windows.UIElement.LayoutUpdated
  - System.Windows.UIElement.LostFocus
  - System.Windows.UIElement.LostFocusEvent
  - System.Windows.UIElement.LostKeyboardFocus
  - System.Windows.UIElement.LostKeyboardFocusEvent
  - System.Windows.UIElement.LostMouseCapture
  - System.Windows.UIElement.LostMouseCaptureEvent
  - System.Windows.UIElement.LostStylusCapture
  - System.Windows.UIElement.LostStylusCaptureEvent
  - System.Windows.UIElement.LostTouchCapture
  - System.Windows.UIElement.LostTouchCaptureEvent
  - System.Windows.UIElement.ManipulationBoundaryFeedback
  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  - System.Windows.UIElement.ManipulationCompleted
  - System.Windows.UIElement.ManipulationCompletedEvent
  - System.Windows.UIElement.ManipulationDelta
  - System.Windows.UIElement.ManipulationDeltaEvent
  - System.Windows.UIElement.ManipulationInertiaStarting
  - System.Windows.UIElement.ManipulationInertiaStartingEvent
  - System.Windows.UIElement.ManipulationStarted
  - System.Windows.UIElement.ManipulationStartedEvent
  - System.Windows.UIElement.ManipulationStarting
  - System.Windows.UIElement.ManipulationStartingEvent
  - System.Windows.UIElement.Measure(System.Windows.Size)
  - System.Windows.UIElement.MeasureCore(System.Windows.Size)
  - System.Windows.UIElement.MouseDown
  - System.Windows.UIElement.MouseDownEvent
  - System.Windows.UIElement.MouseEnter
  - System.Windows.UIElement.MouseEnterEvent
  - System.Windows.UIElement.MouseLeave
  - System.Windows.UIElement.MouseLeaveEvent
  - System.Windows.UIElement.MouseLeftButtonDown
  - System.Windows.UIElement.MouseLeftButtonDownEvent
  - System.Windows.UIElement.MouseLeftButtonUp
  - System.Windows.UIElement.MouseLeftButtonUpEvent
  - System.Windows.UIElement.MouseMove
  - System.Windows.UIElement.MouseMoveEvent
  - System.Windows.UIElement.MouseRightButtonDown
  - System.Windows.UIElement.MouseRightButtonDownEvent
  - System.Windows.UIElement.MouseRightButtonUp
  - System.Windows.UIElement.MouseRightButtonUpEvent
  - System.Windows.UIElement.MouseUp
  - System.Windows.UIElement.MouseUpEvent
  - System.Windows.UIElement.MouseWheel
  - System.Windows.UIElement.MouseWheelEvent
  - System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  - System.Windows.UIElement.OnCreateAutomationPeer
  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)
  - System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.UIElement.Opacity
  - System.Windows.UIElement.OpacityMask
  - System.Windows.UIElement.OpacityMaskProperty
  - System.Windows.UIElement.OpacityProperty
  - System.Windows.UIElement.PersistId
  - System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.UIElement.PreviewDragEnter
  - System.Windows.UIElement.PreviewDragEnterEvent
  - System.Windows.UIElement.PreviewDragLeave
  - System.Windows.UIElement.PreviewDragLeaveEvent
  - System.Windows.UIElement.PreviewDragOver
  - System.Windows.UIElement.PreviewDragOverEvent
  - System.Windows.UIElement.PreviewDrop
  - System.Windows.UIElement.PreviewDropEvent
  - System.Windows.UIElement.PreviewGiveFeedback
  - System.Windows.UIElement.PreviewGiveFeedbackEvent
  - System.Windows.UIElement.PreviewGotKeyboardFocus
  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement.PreviewKeyDown
  - System.Windows.UIElement.PreviewKeyDownEvent
  - System.Windows.UIElement.PreviewKeyUp
  - System.Windows.UIElement.PreviewKeyUpEvent
  - System.Windows.UIElement.PreviewLostKeyboardFocus
  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement.PreviewMouseDown
  - System.Windows.UIElement.PreviewMouseDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonDown
  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonUp
  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement.PreviewMouseMove
  - System.Windows.UIElement.PreviewMouseMoveEvent
  - System.Windows.UIElement.PreviewMouseRightButtonDown
  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement.PreviewMouseRightButtonUp
  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement.PreviewMouseUp
  - System.Windows.UIElement.PreviewMouseUpEvent
  - System.Windows.UIElement.PreviewMouseWheel
  - System.Windows.UIElement.PreviewMouseWheelEvent
  - System.Windows.UIElement.PreviewQueryContinueDrag
  - System.Windows.UIElement.PreviewQueryContinueDragEvent
  - System.Windows.UIElement.PreviewStylusButtonDown
  - System.Windows.UIElement.PreviewStylusButtonDownEvent
  - System.Windows.UIElement.PreviewStylusButtonUp
  - System.Windows.UIElement.PreviewStylusButtonUpEvent
  - System.Windows.UIElement.PreviewStylusDown
  - System.Windows.UIElement.PreviewStylusDownEvent
  - System.Windows.UIElement.PreviewStylusInAirMove
  - System.Windows.UIElement.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement.PreviewStylusInRange
  - System.Windows.UIElement.PreviewStylusInRangeEvent
  - System.Windows.UIElement.PreviewStylusMove
  - System.Windows.UIElement.PreviewStylusMoveEvent
  - System.Windows.UIElement.PreviewStylusOutOfRange
  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement.PreviewStylusSystemGesture
  - System.Windows.UIElement.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement.PreviewStylusUp
  - System.Windows.UIElement.PreviewStylusUpEvent
  - System.Windows.UIElement.PreviewTextInput
  - System.Windows.UIElement.PreviewTextInputEvent
  - System.Windows.UIElement.PreviewTouchDown
  - System.Windows.UIElement.PreviewTouchDownEvent
  - System.Windows.UIElement.PreviewTouchMove
  - System.Windows.UIElement.PreviewTouchMoveEvent
  - System.Windows.UIElement.PreviewTouchUp
  - System.Windows.UIElement.PreviewTouchUpEvent
  - System.Windows.UIElement.QueryContinueDrag
  - System.Windows.UIElement.QueryContinueDragEvent
  - System.Windows.UIElement.QueryCursor
  - System.Windows.UIElement.QueryCursorEvent
  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.ReleaseAllTouchCaptures
  - System.Windows.UIElement.ReleaseMouseCapture
  - System.Windows.UIElement.ReleaseStylusCapture
  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.RenderSize
  - System.Windows.UIElement.RenderTransform
  - System.Windows.UIElement.RenderTransformOrigin
  - System.Windows.UIElement.RenderTransformOriginProperty
  - System.Windows.UIElement.RenderTransformProperty
  - System.Windows.UIElement.ShouldSerializeCommandBindings
  - System.Windows.UIElement.ShouldSerializeInputBindings
  - System.Windows.UIElement.SnapsToDevicePixels
  - System.Windows.UIElement.SnapsToDevicePixelsProperty
  - System.Windows.UIElement.StylusButtonDown
  - System.Windows.UIElement.StylusButtonDownEvent
  - System.Windows.UIElement.StylusButtonUp
  - System.Windows.UIElement.StylusButtonUpEvent
  - System.Windows.UIElement.StylusDown
  - System.Windows.UIElement.StylusDownEvent
  - System.Windows.UIElement.StylusEnter
  - System.Windows.UIElement.StylusEnterEvent
  - System.Windows.UIElement.StylusInAirMove
  - System.Windows.UIElement.StylusInAirMoveEvent
  - System.Windows.UIElement.StylusInRange
  - System.Windows.UIElement.StylusInRangeEvent
  - System.Windows.UIElement.StylusLeave
  - System.Windows.UIElement.StylusLeaveEvent
  - System.Windows.UIElement.StylusMove
  - System.Windows.UIElement.StylusMoveEvent
  - System.Windows.UIElement.StylusOutOfRange
  - System.Windows.UIElement.StylusOutOfRangeEvent
  - System.Windows.UIElement.StylusPlugIns
  - System.Windows.UIElement.StylusSystemGesture
  - System.Windows.UIElement.StylusSystemGestureEvent
  - System.Windows.UIElement.StylusUp
  - System.Windows.UIElement.StylusUpEvent
  - System.Windows.UIElement.TextInput
  - System.Windows.UIElement.TextInputEvent
  - System.Windows.UIElement.TouchDown
  - System.Windows.UIElement.TouchDownEvent
  - System.Windows.UIElement.TouchEnter
  - System.Windows.UIElement.TouchEnterEvent
  - System.Windows.UIElement.TouchesCaptured
  - System.Windows.UIElement.TouchesCapturedWithin
  - System.Windows.UIElement.TouchesDirectlyOver
  - System.Windows.UIElement.TouchesOver
  - System.Windows.UIElement.TouchLeave
  - System.Windows.UIElement.TouchLeaveEvent
  - System.Windows.UIElement.TouchMove
  - System.Windows.UIElement.TouchMoveEvent
  - System.Windows.UIElement.TouchUp
  - System.Windows.UIElement.TouchUpEvent
  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  - System.Windows.UIElement.Uid
  - System.Windows.UIElement.UidProperty
  - System.Windows.UIElement.UpdateLayout
  - System.Windows.UIElement.Visibility
  - System.Windows.UIElement.VisibilityProperty
  langs:
  - csharp
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
  type: Class
  summary: "UIElement is een basisklasse voor WPF core niveau implementaties bouwen op [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] elementen en kenmerken basic presentatie."
  remarks: "UIElement vormt een startpunt voor het element indeling kenmerken en ook virtuele methoden die in klassen afgeleide kunnen negeren, toont die de indeling van de rendering van het gedrag van het element en het onderliggende elementen kunnen beïnvloeden.       Veel van de invoer- en gericht gedrag voor elementen in het algemeen wordt ook gedefinieerd in de klasse UIElement. Dit omvat de gebeurtenissen voor het toetsenbord, muis en tekenpeninvoer en statuseigenschappen van de bijbehorende. Veel van deze gebeurtenissen gerouteerde gebeurtenissen zijn en veel van de invoer-gebeurtenissen hebben beide een doordat routering versie, evenals een tunneling versie van de gebeurtenis. Deze gekoppelde gebeurtenissen zijn doorgaans de gebeurtenissen van de grootste belang zijn voor het besturingselement auteurs.       UIElement bevat ook [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] die betrekking hebben op de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] gebeurtenismodel, met inbegrip van methoden die u kunnen verhogen opgegeven gerouteerde gebeurtenissen die zijn afkomstig van een element-exemplaar.       In termen van architectuur UIElement kan worden overwogen grofweg gelijk aan een vensterkoppeling in [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] programmering of een Element in [!INCLUDE[TLA#tla_dhtml](~/add/includes/tlasharptla-dhtml-md.md)] programmering. UIElement is een base-element op het niveau van de core WPF.       Een UIElement heeft de volgende mogelijkheden die specifiek zijn gedefinieerd door de klasse UIElement:-kan weergeven als een onderliggend element (UIElement afgeleid <xref:System.Windows.Media.Visual>, een hoog niveau graphics-klasse) - bevat de logica die wordt gebruikt voor de grootte en positie van de mogelijke onderliggende elementen van een UIElement (wanneer geïnterpreteerd door het systeem van een lay-out) - kan reageren op invoer van gebruiker (inclusief de controle waar invoer via hun verwerking van de gebeurtenis routering naar verzonden ophalen of Routering van opdrachten) - gerouteerde gebeurtenissen die worden uitgewisseld via de structuur van de logische element een doorsturen kunnen genereren - biedt ondersteuning voor bepaalde aspecten van het systeem animatie <xref:System.Windows.FrameworkElement>is de WPF framework niveau implementatie-klasse die is gebaseerd op UIElement, en voegt specifieke interactie met het niveau van de WPF-framework.</xref:System.Windows.FrameworkElement> </xref:System.Windows.Media.Visual> <xref:System.Windows.FrameworkElement>wordt toegevoegd en definieert de volgende mogelijkheden: - indeling voor extra framework-specifieke kenmerken - ondersteuning voor uitgebreidere metagegevens die worden gerapporteerd met betrekking tot eigenschappen - klasse-specifieke implementatie van bepaalde invoer basisklassen en hun gekoppelde eigenschappen of gebeurtenissen - stijl ondersteuning gekoppeld - verdere animatie ondersteuning voor een andere gerelateerde klasse is <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement></xref:System.Windows.FrameworkElement> De <xref:System.Windows.ContentElement>klasse implementeert veel van dezelfde leden als UIElement; het verschil tussen deze twee klassen moet met het beoogde plaats in het algemene inhoudsmodel.</xref:System.Windows.ContentElement> Een klasse UIElement afgeleid definieert doorgaans een relatief rigid inhoudsmodel, wat betekent dat er beperkingen voor onderliggende elementen in de opmaak door welke elementen worden kunnen zijn. Mogelijk zijn er capaciteit voor het maken van minder beperkend onderliggende inhoud in een UIElement, maar deze capaciteit is doorgaans gecentraliseerd in de eigenschappen van aangewezen inhoud. Een <xref:System.Windows.ContentElement>afgeleide klasse is doorgaans niet zo strikt over inhoud voor de ondersteuning van scenario&quot;s zoals stroom-documenten.</xref:System.Windows.ContentElement>      > [!IMPORTANT] > <xref:System.Windows.UIElement.Visibility%2A>status is van invloed op alle invoer afhandeling door dat element.</xref:System.Windows.UIElement.Visibility%2A> Elementen die niet zichtbaar zijn niet deelnemen aan treffers testen en ontvangt geen invoervelden, zelfs als de muisaanwijzer zich boven de grenzen waar het element zou zijn als zichtbaar zijn."
  syntax:
    content: >-
      [System.Windows.Markup.UidProperty("Uid")]

      public class UIElement : System.Windows.Media.Visual, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Visual
  implements:
  - System.Windows.IInputElement
  - System.Windows.Media.Animation.IAnimatable
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.GetVisualChild(System.Int32)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualChildrenCount
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.UIElement.#ctor
  id: '#ctor'
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: UIElement()
  nameWithType: UIElement.UIElement()
  fullName: System.Windows.UIElement.UIElement()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.UIElement&quot;> </xref> klasse."
  remarks: "Maken van een nieuw exemplaar dat is van het type <xref:System.Windows.UIElement>ongewoon is in de toepassingscode, aangezien <xref:System.Windows.UIElement>is een base-element.</xref:System.Windows.UIElement> </xref:System.Windows.UIElement> Zie [baseren elementen overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public UIElement ();
    parameters: []
  overload: System.Windows.UIElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: UIElement.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement.AddHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Voegt een gerouteerde gebeurtenis-handler voor een opgegeven gerouteerde gebeurtenis, de handler toevoegen aan de handler-verzameling op het huidige element."
  remarks: "U kunt dezelfde voor dezelfde gebeurtenis-handler meerdere keren toevoegen zonder een uitzondering. De handler wordt echter daadwerkelijk aangeroepen voor meerdere keren wanneer de gebeurtenis wordt verwerkt. Overweeg daarom om dit probleem mogelijk hoe bijwerkingen die moeten worden verantwoord in uw implementatie handler.       Normaal gesproken gebruik van deze methode voor de implementatie van de accessor &quot;add&quot; voor de [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] gebeurtenis toegangspatroon van een aangepaste gerouteerde gebeurtenis."
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Een id voor de gerouteerde gebeurtenis moet worden verwerkt."
    - id: handler
      type: System.Delegate
      description: "Een verwijzing naar de handler-implementatie."
  overload: System.Windows.UIElement.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: UIElement.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.UIElement.AddHandler(RoutedEvent,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Voegt een gerouteerde gebeurtenis-handler voor een opgegeven gerouteerde gebeurtenis, de handler toevoegen aan de handler-verzameling op het huidige element. Geef <code> handledEventsToo </code> als <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> te hebben van de opgegeven handler worden aangeroepen voor gerouteerde gebeurtenis die was al is gemarkeerd als verwerkt door een ander element langs de gebeurtenisroute."
  remarks: "Verwerking van laag niveau invoer gebeurtenissen in de praktijk is een complexe taak. Veel besturingselementen implementeren gedrag waarbij een bepaalde gebeurtenis is gemarkeerd als verwerkt en wordt vervangen door een andere intuïtievere gebeurtenis. Een besturingselement wordt in het algemeen alleen een invoer platformgebeurtenis markeren als afgehandeld als er een aantal beoogd ontwerp wordt om te doen. In bepaalde gevallen, die bedoelingen ontwerp mogelijk niet wat uw bepaalde verwerking van de invoer gebeurtenis vereist. Het is voor deze scenario&quot;s die u registreert handlers met `handledEventsToo` als `true` geschikt is. Maar u dit gewoonlijk niet moet doen. Aanroepen van handlers in reactie op alle gebeurtenissen, zelfs als verwerkt, wordt de logica voor uw eigen toepassing gebeurtenisverwerking bemoeilijken. Mogelijk ziet u een afname in de prestaties als de handler logica aanzienlijk is. U moet het gebruik van het koppelen van de handlers voor al verwerkt gebeurtenissen voor situaties waar u al hebt ontdekt tijdens het ontwikkelingsproces dat bepaalde besturingselementen in behandeling gebeurtenissen die u wilt nog steeds verwerken met toepassingslogica reserveren.       Een andere methode voor het voorkomen van de klasse gedrag van bepaalde combinaties van gebeurtenis-besturingselement voor het verwerken is het gebruik van de gebeurtenis preview alternatief. Bijvoorbeeld, als <xref:System.Windows.UIElement.MouseLeftButtonDown>is gemarkeerd als verwerkt door klasse verwerken, kunt u mogelijk toevoegen handlers voor <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>in plaats daarvan.</xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> </xref:System.Windows.UIElement.MouseLeftButtonDown>       U kunt dezelfde voor dezelfde gebeurtenis-handler meerdere keren toevoegen zonder een uitzondering. De handler wordt echter daadwerkelijk aangeroepen voor meerdere keren wanneer de gebeurtenis wordt verwerkt. Overweeg daarom om dit probleem mogelijk hoe bijwerkingen die moeten worden verantwoord in uw implementatie handler.       Normaal gesproken gebruik van deze methode voor de implementatie van de accessor &quot;add&quot; voor de [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] gebeurtenis toegangspatroon van een aangepaste gerouteerde gebeurtenis."
  example:
  - "The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`. This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.  \n  \n [!code-cs[EventOvwSupport#AddHandlerHandledToo](~/add/codesnippet/csharp/EventOvwSupport/page2.xaml.cs#addhandlerhandledtoo)]\n [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/add/codesnippet/visualbasic/eventovwsupport/page2.xaml.vb#addhandlerhandledtoo)]"
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Een id voor de gerouteerde gebeurtenis moet worden verwerkt."
    - id: handler
      type: System.Delegate
      description: "Een verwijzing naar de handler-implementatie."
    - id: handledEventsToo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het registreren van de handler zodanig dat deze wordt aangeroepen, zelfs wanneer de gerouteerde gebeurtenis is gemarkeerd als verwerkt in de gebeurtenisgegevens; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> de handler registreren bij de standaardvoorwaarde die deze niet worden aangeroepen als de gerouteerde gebeurtenis is al gemarkeerd als verwerkt.       De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Niet regelmatig vragen naar een gerouteerde gebeurtenis rehandle. Zie Opmerkingen voor meer informatie."
  overload: System.Windows.UIElement.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  id: AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AddToEventRoute(EventRoute,RoutedEventArgs)
  nameWithType: UIElement.AddToEventRoute(EventRoute,RoutedEventArgs)
  fullName: System.Windows.UIElement.AddToEventRoute(EventRoute,RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Handlers toevoegt aan de opgegeven <xref href=&quot;System.Windows.EventRoute&quot;> </xref> voor de huidige <xref href=&quot;System.Windows.UIElement&quot;> </xref> gebeurtenis-handler verzameling."
  remarks: "Deze methode kan worden gebruikt door de inhoudshost elementen (die zijn geïmplementeerd <xref:System.Windows.IContentHost>of die geen) handlers voor onderliggende elementen toevoegen aan de <xref:System.Windows.EventRoute>.</xref:System.Windows.EventRoute> </xref:System.Windows.IContentHost> Dit is normaal gesproken niet vereist voor <xref:System.Windows.UIElement>omdat handlers worden automatisch toegevoegd voor alle elementen in een voltooide logische structuur gevonden.</xref:System.Windows.UIElement> Echter, in sommige gevallen waarbij <xref:System.Windows.ContentElement>en <xref:System.Windows.UIElement>in sjablonen structuren, Tussenkomende elementen die afkomstig zijn van de sjabloon moet worden toegevoegd aan een route worden vermengd.</xref:System.Windows.UIElement> </xref:System.Windows.ContentElement> Beide <xref:System.Windows.ContentElement>en <xref:System.Windows.UIElement>een versie van deze methode ondersteund.</xref:System.Windows.UIElement> </xref:System.Windows.ContentElement>"
  syntax:
    content: public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);
    parameters:
    - id: route
      type: System.Windows.EventRoute
      description: "De gebeurtenisroute die handlers worden toegevoegd aan."
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "De gebeurtenisgegevens die wordt gebruikt voor het toevoegen van de handlers. Deze methode maakt gebruik van de <xref:System.Windows.RoutedEventArgs.RoutedEvent*>eigenschap van de gegevens van de gebeurtenis voor het maken van de handlers.</xref:System.Windows.RoutedEventArgs.RoutedEvent*>"
  overload: System.Windows.UIElement.AddToEventRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AllowDrop
  id: AllowDrop
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AllowDrop
  nameWithType: UIElement.AllowDrop
  fullName: System.Windows.UIElement.AllowDrop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of dit element kan worden gebruikt als het doel van een bewerking slepen en neerzetten.  Dit is een afhankelijkheidseigenschap."
  remarks: "Slepen en neerzetten bewerkingen worden niet standaard ingeschakeld en bewust moet zijn ingeschakeld door AllowDrop in te stellen op `true`. Afgezien van deze instelling basis slepen en neerzetten gedrag is volledig specifieke implementatie en is niet gedefinieerd door <xref:System.Windows.UIElement>of een andere klasse. de base-element</xref:System.Windows.UIElement> Bepaalde besturingselementen, bijvoorbeeld <xref:System.Windows.Controls.RichTextBox>, beschikt over een standaardgedrag.</xref:System.Windows.Controls.RichTextBox> Zie voor meer informatie over slepen en neerzetten [slepen en neerzetten overzicht](~/add/includes/ajax-current-ext-md.md).       <xref:System.Windows.FrameworkElement>heft de metagegevens voor deze afhankelijkheidseigenschap in de implementatie.</xref:System.Windows.FrameworkElement> In het bijzonder <xref:System.Windows.FrameworkElement>geeft deze eigenschap in op de waarde van Eigenschapsovername toestaan (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metagegevens).</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkElement> Overname van eigenschappen waarde in deze context betekent dat als er onderliggende elementen met er geen andere waarde voor AllowDrop toegewezen via lokale waarden of stijlen, de waarde van het dichtstbijzijnde bovenliggende element met deze waarde toegewezen (nogmaals op stijlen, door de standaardwaarden of een lokale waarde), wordt de waarde van het bovenliggende element wordt toegewezen aan alle eerder niet-toegewezen onderliggende elementen door het systeem eigenschap. In de praktijk dit betekent dat kunt u opgeven of het hoofdelement neerzetten is toegestaan, en dat de waarde worden doorgegeven aan alle onderliggende elementen die niet specifiek als toegewezen `false`.      <a name=&quot;dependencyPropertyInfo_AllowDrop&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.AllowDropProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.AllowDropProperty>"
  example:
  - "The following markup example sets the AllowDrop property `true` using an attribute on a <xref:System.Windows.Controls.TextBox>, as well as setting some other related properties that in aggregate enable that <xref:System.Windows.Controls.TextBox> to be the target of a multiline text data object when it is dragged in. For the complete sample, see [Load a Dropped File Sample](http://msdn.microsoft.com/en-us/be90d645-dd61-4f53-93bb-87902d086ef7).  \n  \n [!code-xml[DragDrop_DropOpenTextFile#UIElementAllowDrop](~/add/codesnippet/xaml/dropopentextfile/window1.xaml#uielementallowdrop)]"
  syntax:
    content: public bool AllowDrop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit element kan worden gebruikt als het doel van een bewerking slepen en neerzetten. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.AllowDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AllowDropProperty
  id: AllowDropProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AllowDropProperty
  nameWithType: UIElement.AllowDropProperty
  fullName: System.Windows.UIElement.AllowDropProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.AllowDrop*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.AllowDrop*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AllowDropProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ApplyAnimationClock(DependencyProperty,AnimationClock)
  nameWithType: UIElement.ApplyAnimationClock(DependencyProperty,AnimationClock)
  fullName: System.Windows.UIElement.ApplyAnimationClock(DependencyProperty,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Een animatie geldt voor een opgegeven afhankelijkheidseigenschap voor dit element. Eventuele bestaande animaties worden gestopt en wordt vervangen door de nieuwe animatie."
  remarks: "Als u wilt een animatie verwijderen uit een eigenschap, geeft u de id voor die eigenschap als `dp` en geef `clock` als `null`. Hiermee verwijdert u de animatie en de animatie-eigenschap is ingesteld op de basiswaarde. De klok oorspronkelijk gekoppeld animatie is echter niet gestopt. Eventuele andere animaties toegewezen aan die klok wordt nog uitgevoerd."
  example:
  - "In the following example, a <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` has a particular timing animation applied to it by calling ApplyAnimationClock .  \n  \n [!code-cs[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/add/codesnippet/csharp/TimingBehavior_csharp/ClockControllerSpeedRatioExample.cs#uielementapplyanimationclock)]\n [!code-vb[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/add/codesnippet/visualbasic/timingbehavior_vb/clockcontrollerspeedratioexample.vb#uielementapplyanimationclock)]"
  syntax:
    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "De id voor de eigenschap voor het animeren."
    - id: clock
      type: System.Windows.Media.Animation.AnimationClock
      description: "De klok van animatie die bepaalt en verklaart de animatie."
  overload: System.Windows.UIElement.ApplyAnimationClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  nameWithType: UIElement.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  fullName: System.Windows.UIElement.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Een animatie geldt voor een opgegeven afhankelijkheidseigenschap voor dit element, de mogelijkheid om op te geven wat er gebeurt als de eigenschap heeft al een actieve animatie."
  remarks: "Als u wilt een animatie verwijderen uit een eigenschap, geeft u de id voor die eigenschap als `dp` en geef `clock` als `null`. Hiermee verwijdert u de animatie en de animatie-eigenschap is ingesteld op de basiswaarde. De klok oorspronkelijk gekoppeld animatie is echter niet gestopt. Eventuele andere animaties toegewezen aan die klok wordt nog uitgevoerd."
  syntax:
    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "De eigenschap voor het animeren."
    - id: clock
      type: System.Windows.Media.Animation.AnimationClock
      description: "De klok van animatie die bepaalt en verklaart de animatie."
    - id: handoffBehavior
      type: System.Windows.Media.Animation.HandoffBehavior
      description: "Een waarde van de inventarisatie. De standaardwaarde is <xref href=&quot;System.Windows.Media.Animation.HandoffBehavior&quot;> </xref>, die worden gestopt eventuele bestaande animatie en vervangen door de nieuwe."
  overload: System.Windows.UIElement.ApplyAnimationClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AreAnyTouchesCaptured
  id: AreAnyTouchesCaptured
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AreAnyTouchesCaptured
  nameWithType: UIElement.AreAnyTouchesCaptured
  fullName: System.Windows.UIElement.AreAnyTouchesCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of ten minste één touch tot dit element wordt vastgelegd."
  syntax:
    content: public bool AreAnyTouchesCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u ten minste één touch is vastgelegd tot dit element; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.AreAnyTouchesCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AreAnyTouchesCapturedProperty
  id: AreAnyTouchesCapturedProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AreAnyTouchesCapturedProperty
  nameWithType: UIElement.AreAnyTouchesCapturedProperty
  fullName: System.Windows.UIElement.AreAnyTouchesCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.AreAnyTouchesCaptured*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.AreAnyTouchesCaptured*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AreAnyTouchesCapturedWithin
  id: AreAnyTouchesCapturedWithin
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AreAnyTouchesCapturedWithin
  nameWithType: UIElement.AreAnyTouchesCapturedWithin
  fullName: System.Windows.UIElement.AreAnyTouchesCapturedWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of ten minste één touch naar dit element of naar alle onderliggende elementen in de visuele boomstructuur is vastgelegd."
  syntax:
    content: public bool AreAnyTouchesCapturedWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u ten minste één touch is vastgelegd voor dit element of eventuele onderliggende elementen in de visuele boomstructuur; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.AreAnyTouchesCapturedWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  id: AreAnyTouchesCapturedWithinProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AreAnyTouchesCapturedWithinProperty
  nameWithType: UIElement.AreAnyTouchesCapturedWithinProperty
  fullName: System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.AreAnyTouchesCapturedWithin*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.AreAnyTouchesCapturedWithin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AreAnyTouchesDirectlyOver
  id: AreAnyTouchesDirectlyOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AreAnyTouchesDirectlyOver
  nameWithType: UIElement.AreAnyTouchesDirectlyOver
  fullName: System.Windows.UIElement.AreAnyTouchesDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of ten minste één touch via dit element wordt ingedrukt."
  syntax:
    content: public bool AreAnyTouchesDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u ten minste één toets wordt ingedrukt via dit element; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.AreAnyTouchesDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  id: AreAnyTouchesDirectlyOverProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AreAnyTouchesDirectlyOverProperty
  nameWithType: UIElement.AreAnyTouchesDirectlyOverProperty
  fullName: System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.AreAnyTouchesDirectlyOver*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.AreAnyTouchesDirectlyOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AreAnyTouchesOver
  id: AreAnyTouchesOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AreAnyTouchesOver
  nameWithType: UIElement.AreAnyTouchesOver
  fullName: System.Windows.UIElement.AreAnyTouchesOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of ten minste één touch via dit element of eventuele onderliggende elementen in de visuele boomstructuur wordt ingedrukt."
  syntax:
    content: public bool AreAnyTouchesOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u ten minste één toets wordt ingedrukt via dit element of eventuele onderliggende elementen in de visuele boomstructuur; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.AreAnyTouchesOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.AreAnyTouchesOverProperty
  id: AreAnyTouchesOverProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: AreAnyTouchesOverProperty
  nameWithType: UIElement.AreAnyTouchesOverProperty
  fullName: System.Windows.UIElement.AreAnyTouchesOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.AreAnyTouchesOver*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.AreAnyTouchesOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.Arrange(System.Windows.Rect)
  id: Arrange(System.Windows.Rect)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Arrange(Rect)
  nameWithType: UIElement.Arrange(Rect)
  fullName: System.Windows.UIElement.Arrange(Rect)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Onderliggende elementen plaatsen en bepaalt de grootte voor een <xref href=&quot;System.Windows.UIElement&quot;> </xref>. Bovenliggende elementen Roep deze methode van hun <xref:System.Windows.UIElement.ArrangeCore*>implementatie (of een equivalent van de framework-niveau WPF) vormt het bijwerken van een recursieve-indeling.</xref:System.Windows.UIElement.ArrangeCore*> Deze methode wordt verstaan onder de tweede stap van een lay-update."
  remarks: "Voor element van WPF-framework-niveau scenario&quot;s die zijn afgeleid, beter niet (en kan niet, tenzij u schaduwkopie) gedrag van schikken worden gewijzigd. In plaats daarvan moet u de <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>implementatie in uw klasse</xref:System.Windows.FrameworkElement.ArrangeOverride%2A> overschrijven Uw <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>implementatie wordt intern aangeroepen door schikken als onderdeel van standaardbewerkingen WPF-framework niveau lay-out.</xref:System.Windows.FrameworkElement.ArrangeOverride%2A> Uw <xref:System.Windows.UIElement.ArrangeCore%2A>implementatie moet ook aanroepen <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>voor elke onderliggende element, als dit onderliggende elementen heeft.</xref:System.Windows.FrameworkElement.ArrangeOverride%2A> </xref:System.Windows.UIElement.ArrangeCore%2A>       Voor WPF core niveau element scenario&quot;s die zijn afgeleid, beter niet (en kan niet, tenzij u schaduwkopie) het gedrag voor schikken worden gewijzigd. U moet in plaats daarvan negeren <xref:System.Windows.UIElement.ArrangeCore%2A>in uw klasse.</xref:System.Windows.UIElement.ArrangeCore%2A> Uw <xref:System.Windows.UIElement.ArrangeCore%2A>implementatie wordt intern aangeroepen door schikken als onderdeel van standaardbewerkingen WPF-framework niveau lay-out.</xref:System.Windows.UIElement.ArrangeCore%2A> Echter, dit wordt ervan uitgegaan dat u zijn WPF framework niveau indeling en een lay-out-systeem, die vaak niet het geval als u elementen op de WPF core niveau speciaal zijn afgeleid van het <xref:System.Windows.UIElement>basiselement klasse.</xref:System.Windows.UIElement> Uw <xref:System.Windows.UIElement.ArrangeCore%2A>implementatie moet ook Arrange niet aanroepen in elk onderliggend element als dit onderliggende elementen heeft.</xref:System.Windows.UIElement.ArrangeCore%2A> Opmerking dat het WPF core niveau scenario impliceert dat u geen gebruikmaakt van een <xref:System.Windows.FrameworkElement>afgeleide klasse, omdat <xref:System.Windows.FrameworkElement>verzegeling <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</xref:System.Windows.FrameworkElement.ArrangeCore%2A> </xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement>       Berekening van WPF framework niveau positie van de opmaak [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] bestaat uit een <xref:System.Windows.UIElement.Measure%2A>aanroep en een aanroep schikken.</xref:System.Windows.UIElement.Measure%2A> Tijdens de <xref:System.Windows.UIElement.Measure%2A>aanroep, de lay-out-systeem bepaalt de vereiste grootte van een element met een opgegeven <xref:System.Windows.Size>(`availableSize`) argument.</xref:System.Windows.Size> </xref:System.Windows.UIElement.Measure%2A> Tijdens de oproep schikken Hiermee het systeem lay-out wordt de grootte en positie van het begrenzingsvak van een element.  Zie voor meer informatie [indeling](~/add/includes/ajax-current-ext-md.md).       `availableSize`een getal van nul tot oneindig kan zijn. Het minimum van elementen moet worden ingedeeld retourneren <xref:System.Windows.Size>ze nodig hebben via de `availableSize` parameter.</xref:System.Windows.Size>       Wanneer een indeling voor het eerst wordt gestart, ontvangt deze altijd een <xref:System.Windows.UIElement.Measure%2A>aanroepen voordat schikken.</xref:System.Windows.UIElement.Measure%2A> Na de eerste stap van de indeling kan er een aanroep schikken zonder een <xref:System.Windows.UIElement.Measure%2A>Dit kan gebeuren wanneer een eigenschap die van invloed alleen schikken is wordt gewijzigd (zoals uitlijning), of wanneer de bovenliggende ontvangt een schikken zonder een <xref:System.Windows.UIElement.Measure%2A>.</xref:System.Windows.UIElement.Measure%2A> </xref:System.Windows.UIElement.Measure%2A> ontvangen Een <xref:System.Windows.UIElement.Measure%2A>aanroep, een aanroep schikken automatisch zijn ongeldig.</xref:System.Windows.UIElement.Measure%2A>       Lay-out-updates worden doorgaans uitgevoerd asynchroon (op een tijdstip bepaald door het systeem lay-out). Een element mogelijk niet onmiddellijk wijzigingen aan de eigenschappen die betrekking hebben op element sizing (zoals <xref:System.Windows.FrameworkElement.Width%2A>).</xref:System.Windows.FrameworkElement.Width%2A>      > [!NOTE] > Indeling updates kunnen worden afgedwongen met behulp van de <xref:System.Windows.UIElement.UpdateLayout%2A>methode; aanroepen van deze functie wordt echter niet aanbevolen, omdat deze meestal niet nodig en leiden slechte prestaties tot kan.</xref:System.Windows.UIElement.UpdateLayout%2A> In veel gevallen waarbij het aanroepen van <xref:System.Windows.UIElement.UpdateLayout%2A>mogelijk geschikt, het systeem lay-out wordt waarschijnlijk al verwerken updates.</xref:System.Windows.UIElement.UpdateLayout%2A> Het systeem lay-out kan verwerken wijzigingen in de indeling op een manier die alle vereiste updates als onderdeel van een pakket kunt optimaliseren.       Het systeem indeling houdt twee afzonderlijke wachtrijen van ongeldige indelingen, één voor <xref:System.Windows.UIElement.Measure%2A>en een voor rangschikken.</xref:System.Windows.UIElement.Measure%2A> De wachtrij lay-out is gesorteerd op basis van de volgorde van elementen in de visuele boomstructuur. Elementen hoger in de boomstructuur zijn aan de bovenkant van de wachtrij om te voorkomen dat redundante indelingen veroorzaakt door herhaalde wijzigingen in de bovenliggende items. Dubbele vermeldingen worden automatisch verwijderd uit de wachtrij en elementen worden automatisch verwijderd uit de wachtrij als ze al geldig zijn.       Bij het bijwerken van lay-out van de <xref:System.Windows.UIElement.Measure%2A>wachtrij is leeggemaakt eerst, gevolgd door de wachtrij schikken.</xref:System.Windows.UIElement.Measure%2A> Een element in de wachtrij schikken nooit worden geordend als er een element in de <xref:System.Windows.UIElement.Measure%2A>wachtrij.</xref:System.Windows.UIElement.Measure%2A>"
  syntax:
    content: public void Arrange (System.Windows.Rect finalRect);
    parameters:
    - id: finalRect
      type: System.Windows.Rect
      description: "De laatste grootte die het bovenliggende item wordt berekend voor het onderliggende element, opgegeven als een <xref href=&quot;System.Windows.Rect&quot;> </xref> exemplaar."
  overload: System.Windows.UIElement.Arrange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ArrangeCore(System.Windows.Rect)
  id: ArrangeCore(System.Windows.Rect)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ArrangeCore(Rect)
  nameWithType: UIElement.ArrangeCore(Rect)
  fullName: System.Windows.UIElement.ArrangeCore(Rect)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee definieert u de sjabloon voor WPF core-niveau indelingsdefinitie rangschikken."
  remarks: >-
    > [!NOTE]

    >  Overriding this method is only appropriate if you are deriving at the WPF core-level, and you are not using the WPF framework-level layout system and <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>. If you are using the WPF framework-level layout system, the appropriate method to override for class-specific layout arrange behavior is <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.
  example:
  - "ArrangeCore implementations should call the base implementation to return a size, then call the <xref:System.Windows.UIElement.Arrange%2A> method of each visible child element, and reconcile the sizes returned by these <xref:System.Windows.UIElement.Arrange%2A> calls with the size of the base implementation. The logic for the reconciliation aspect of a ArrangeCore implementation might vary, depending on the layout characteristics of your element. In the following example template, `VisualChildren` is a hypothetical property that your element might define to help enumerate its content; <xref:System.Windows.UIElement> does not define content collections at this level, the WPF framework-level architecture defers content behavior to derived elements such as specific controls or control base classes.  \n  \n [!code-cs[CorePseudocode#UIElementArrangeOverride](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#uielementarrangeoverride)]\n [!code-vb[CorePseudocode#UIElementArrangeOverride](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#uielementarrangeoverride)]"
  syntax:
    content: protected virtual void ArrangeCore (System.Windows.Rect finalRect);
    parameters:
    - id: finalRect
      type: System.Windows.Rect
      description: "Het laatste gedeelte in de bovenliggende dat element moet gebruiken voor het ordenen zelf en de onderliggende elementen."
  overload: System.Windows.UIElement.ArrangeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: BeginAnimation(DependencyProperty,AnimationTimeline)
  nameWithType: UIElement.BeginAnimation(DependencyProperty,AnimationTimeline)
  fullName: System.Windows.UIElement.BeginAnimation(DependencyProperty,AnimationTimeline)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Start een animatie voor een opgegeven animatie-eigenschap op dit element."
  remarks: "Wanneer u controleert of een eigenschap wordt geanimeerd, houd er rekening mee dat de animatie wordt gestart en worden beschouwd geanimeerd als het eerste frame buiten het beginpunt zonder animatie wordt weergegeven.       Als de <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>voor `animation` is `null`, een huidige animaties worden verwijderd en de huidige waarde van de eigenschap wordt bewaard.</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>       Als het gehele `animation` waarde is `null`, alle animaties worden verwijderd uit de eigenschap en de waarde van eigenschap terugkeert naar de basiswaarde. De oorspronkelijk gekoppeld animatietijdlijn is echter niet gestopt. Eventuele andere animaties toegewezen aan die tijdlijn blijft worden uitgevoerd."
  example:
  - "The following example creates an animation, assigns it, and then calls BeginAnimation to start it.  \n  \n [!code-cs[timingbehaviors_procedural_snip#BeginAnimation](~/add/codesnippet/csharp/TimingBehavior_csharp/GetAnimationBaseValueExample.cs#beginanimation)]\n [!code-vb[timingbehaviors_procedural_snip#BeginAnimation](~/add/codesnippet/visualbasic/timingbehavior_vb/getanimationbasevalueexample.vb#beginanimation)]"
  syntax:
    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "De eigenschap voor het animeren, die is opgegeven als een afhankelijkheid eigenschaps-id."
    - id: animation
      type: System.Windows.Media.Animation.AnimationTimeline
      description: "De tijdlijn van de animatie moet starten."
  overload: System.Windows.UIElement.BeginAnimation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  nameWithType: UIElement.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  fullName: System.Windows.UIElement.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee wordt een specifieke animatie voor een opgegeven animatie-eigenschap voor dit element, klikt u met de optie voor het opgeven van wat er gebeurt als de eigenschap is al een actieve animatie heeft gestart."
  remarks: "Wanneer u controleert of een eigenschap wordt geanimeerd, houd er rekening mee dat de animatie wordt gestart en worden beschouwd geanimeerd als het eerste frame buiten het beginpunt zonder animatie wordt weergegeven.       Als de <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>voor `animation` is `null`, een huidige animaties worden verwijderd en de huidige waarde van de eigenschap wordt bewaard.</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>       Als het gehele `animation` waarde is `null`, alle animaties worden verwijderd uit de eigenschap en de waarde van eigenschap terugkeert naar de basiswaarde. De oorspronkelijk gekoppeld animatietijdlijn is echter niet gestopt. Eventuele andere animaties toegewezen aan die tijdlijn blijft worden uitgevoerd."
  example:
  - "The following example implements a handler that obtains an existing animation from a resource and then calls BeginAnimation with a specified handoff behavior.  \n  \n [!code-cs[BrushesIntroduction#BeginAnimationHandoff](~/add/codesnippet/csharp/BrushesIntroduction.BrushesIntroduction/SampleViewer.xaml.cs#beginanimationhandoff)]\n [!code-vb[BrushesIntroduction#BeginAnimationHandoff](~/add/codesnippet/visualbasic/brushesintroduction/sampleviewer.xaml.vb#beginanimationhandoff)]"
  syntax:
    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "De eigenschap voor het animeren, die is opgegeven als de afhankelijkheid eigenschaps-id."
    - id: animation
      type: System.Windows.Media.Animation.AnimationTimeline
      description: "De planning van de animatie moet worden toegepast."
    - id: handoffBehavior
      type: System.Windows.Media.Animation.HandoffBehavior
      description: "Een waarde van de inventarisatie waarmee wordt aangegeven hoe de nieuwe animatie samenwerkt met de huidige (actief)-animaties die van invloed zijn al op de waarde van eigenschap."
  overload: System.Windows.UIElement.BeginAnimation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.BitmapEffect
  id: BitmapEffect
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: BitmapEffect
  nameWithType: UIElement.BitmapEffect
  fullName: System.Windows.UIElement.BitmapEffect
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een bitmap effect die van toepassing rechtstreeks naar de gerenderde inhoud voor dit element is.  Dit is een afhankelijkheidseigenschap."
  remarks: "<xref:System.Windows.Media.Effects.BitmapEffect>een abstract type is daarom de [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] gebruik vereist een geïmplementeerde afgeleide klasse van <xref:System.Windows.Media.Effects.BitmapEffect>, zoals <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</xref:System.Windows.Media.Effects.OuterGlowBitmapEffect> </xref:System.Windows.Media.Effects.BitmapEffect></xref:System.Windows.Media.Effects.BitmapEffect> Een geïmplementeerd klasse afgeleid is een verzameling kunt u opgeven van meer dan een sequentiële <xref:System.Windows.Media.Effects.BitmapEffect>, met behulp van een geneste label-syntaxis.</xref:System.Windows.Media.Effects.BitmapEffect>       Er zijn geen bestaande afgeleide klasse van <xref:System.Windows.Media.Effects.BitmapEffect>type-conversieprogramma ondersteunt daarom [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] syntaxis die u voor deze eigenschap wordt doorgaans eigenschapselementsyntaxis.</xref:System.Windows.Media.Effects.BitmapEffect>      <a name=&quot;dependencyPropertyInfo_BitmapEffect&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.BitmapEffectProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.BitmapEffectProperty>"
  example:
  - "The following example sets a bitmap effect, using <xref:System.Windows.Media.Effects.BlurBitmapEffect>.  \n  \n [!code-cs[EffectsGallery_snip#CodeBehindBlurCodeBehindExampleInline](~/add/codesnippet/csharp/EffectsGallery/blurcodebehindexample.xaml.cs#codebehindblurcodebehindexampleinline)]"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "Het effect bitmap om toe te passen."
  overload: System.Windows.UIElement.BitmapEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.BitmapEffectInput
  id: BitmapEffectInput
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: BitmapEffectInput
  nameWithType: UIElement.BitmapEffectInput
  fullName: System.Windows.UIElement.BitmapEffectInput
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van de invoerbron voor de bitmap invloed die van toepassing rechtstreeks naar de gerenderde inhoud voor dit element is.  Dit is een afhankelijkheidseigenschap."
  remarks: "<a name=&quot;dependencyPropertyInfo_BitmapEffectInput&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.BitmapEffectInputProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.BitmapEffectInputProperty>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: "De bron voor de bitmap gevolgen."
  overload: System.Windows.UIElement.BitmapEffectInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.BitmapEffectInputProperty
  id: BitmapEffectInputProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: BitmapEffectInputProperty
  nameWithType: UIElement.BitmapEffectInputProperty
  fullName: System.Windows.UIElement.BitmapEffectInputProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.BitmapEffectInput*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.BitmapEffectInput*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.BitmapEffectProperty
  id: BitmapEffectProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: BitmapEffectProperty
  nameWithType: UIElement.BitmapEffectProperty
  fullName: System.Windows.UIElement.BitmapEffectProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.BitmapEffect*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.BitmapEffect*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BitmapEffectProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.CacheMode
  id: CacheMode
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: CacheMode
  nameWithType: UIElement.CacheMode
  fullName: System.Windows.UIElement.CacheMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een weergave in de cache van de <xref href=&quot;System.Windows.UIElement&quot;> </xref>."
  remarks: "Stel de eigenschap CacheMode als u nodig hebt voor betere prestaties voor inhoud die veel tijd in beslag om weer te geven. Zie voor meer informatie <xref:System.Windows.Media.BitmapCache>.</xref:System.Windows.Media.BitmapCache>"
  syntax:
    content: public System.Windows.Media.CacheMode CacheMode { get; set; }
    return:
      type: System.Windows.Media.CacheMode
      description: "Een <xref href=&quot;System.Windows.Media.CacheMode&quot;> </xref> die bevat een weergave in de cache van de <xref href=&quot;System.Windows.UIElement&quot;> </xref>."
  overload: System.Windows.UIElement.CacheMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.CacheModeProperty
  id: CacheModeProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: CacheModeProperty
  nameWithType: UIElement.CacheModeProperty
  fullName: System.Windows.UIElement.CacheModeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.CacheMode*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.CacheMode*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CacheModeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.CaptureMouse
  id: CaptureMouse
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: CaptureMouse()
  nameWithType: UIElement.CaptureMouse()
  fullName: System.Windows.UIElement.CaptureMouse()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pogingen om af te dwingen vastleggen van de muis tot dit element."
  remarks: "Om te worden vastgelegd, moet een element zijn ingeschakeld. Controleer of <xref:System.Windows.UIElement.IsEnabled%2A>is `true` voordat u CaptureMouse aanroepen.</xref:System.Windows.UIElement.IsEnabled%2A>       Als het aanroepen van CaptureMouse retourneert `true`, klikt u vervolgens <xref:System.Windows.UIElement.IsMouseCaptured%2A>is ook `true`.</xref:System.Windows.UIElement.IsMouseCaptured%2A>       Als het aanroepen van CaptureMouse retourneert `true`, wordt de <xref:System.Windows.UIElement.GotMouseCapture>en <xref:System.Windows.UIElement.IsMouseCapturedChanged>gebeurtenissen worden gegenereerd, met <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>in het logboek gegevens vermeld als het element waar de CaptureMouse-methode wordt aangeroepen.</xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName> </xref:System.Windows.UIElement.IsMouseCapturedChanged> </xref:System.Windows.UIElement.GotMouseCapture> Als u wilt vastleggen afdwingen, kunt u bestaande opnamen verstoren, met name opnamen die gerelateerd zijn aan het slepen en neerzetten met de muis.       Schakel muisvastlegging van alle elementen, roepen <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName>met de `element` opgegeven als parameter `null`.</xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName>"
  example:
  - "The following example implements a pair of handlers for mouse and key input combination that capture (and uncapture) the mouse and enable a special mouse mode for viewing a 3D model.  \n  \n [!code-cs[CubeAnimation#UIElementMouseCapture](~/add/codesnippet/csharp/CubeAnimation_XBAP/Trackball.cs#uielementmousecapture)]\n [!code-vb[CubeAnimation#UIElementMouseCapture](~/add/codesnippet/visualbasic/cubeanimation_xbap/trackball.vb#uielementmousecapture)]"
  syntax:
    content: public bool CaptureMouse ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de muis wordt vastgelegd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.CaptureMouse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.CaptureStylus
  id: CaptureStylus
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: CaptureStylus()
  nameWithType: UIElement.CaptureStylus()
  fullName: System.Windows.UIElement.CaptureStylus()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pogingen om af te dwingen vastleggen van de tekenpen tot dit element."
  remarks: "De standaardimplementatie op basis van het onderliggende standaard tekenpen apparaat altijd retourneert `true`. Als u de apparaten waarmee de uitvoering van het apparaat voor de invoer system uitbreidt, is het echter mogelijk te maken van een systeem met een implementatie van alternatieve tekenpen apparaat die mogelijk verschillende resultaten retourneren.       Wanneer een element de tekenpen bevat, ontvangt deze tekenpeninvoer zelfs als de tekenpen buiten de grenzen valt. De tekenpen wordt doorgaans alleen tijdens slepen en neerzetten vastgelegd.       Een onderliggende statische <xref:System.Windows.Input.Stylus>methode <xref:System.Windows.Input.Stylus.Capture%2A>.</xref:System.Windows.Input.Stylus.Capture%2A> </xref:System.Windows.Input.Stylus> aanroepen van deze methode wordt aangeroepen Het gedrag van de werkelijke vastleggen wordt geïmplementeerd door de implementatie van de actieve tekenpen apparaat.       Om te worden vastgelegd, moet een element zijn ingeschakeld. Controleer of <xref:System.Windows.UIElement.IsEnabled%2A>is `true` retourneren voordat u CaptureStylus aanroepen.</xref:System.Windows.UIElement.IsEnabled%2A>       Als het aanroepen van CaptureStylus retourneert `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A>is ook `true`.</xref:System.Windows.UIElement.IsStylusCaptured%2A>"
  syntax:
    content: public bool CaptureStylus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de tekenpen is vastgelegd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.CaptureStylus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  id: CaptureTouch(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: CaptureTouch(TouchDevice)
  nameWithType: UIElement.CaptureTouch(TouchDevice)
  fullName: System.Windows.UIElement.CaptureTouch(TouchDevice)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pogingen om af te dwingen vastleggen van een touch tot dit element."
  remarks: "CaptureTouch retourneert `false` als de <xref:System.Windows.Input.TouchDevice>momenteel wordt vastgelegd naar een ander element.</xref:System.Windows.Input.TouchDevice>       Als CaptureTouch retourneert `true`, wordt de <xref:System.Windows.UIElement.GotTouchCapture>gebeurtenis is opgetreden.</xref:System.Windows.UIElement.GotTouchCapture>       Vastleggen van een enkele touch van dit element de release, gebruiken de <xref:System.Windows.UIElement.ReleaseTouchCapture%2A>methode en geeft u het apparaat touch vrijgeven.</xref:System.Windows.UIElement.ReleaseTouchCapture%2A> Als u wilt vrijgeven alle verbeterd van dit element, gebruiken de <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A>methode.</xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A>"
  syntax:
    content: public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);
    parameters:
    - id: touchDevice
      type: System.Windows.Input.TouchDevice
      description: "Het apparaat om vast te leggen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven touch is vastgelegd tot dit element; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.CaptureTouch*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>touchDevice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.UIElement.Clip
  id: Clip
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Clip
  nameWithType: UIElement.Clip
  fullName: System.Windows.UIElement.Clip
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van de geometrie die wordt gebruikt voor het definiëren van het overzicht van de inhoud van een element.  Dit is een afhankelijkheidseigenschap."
  remarks: "Elementen buiten de geometrie wordt in de gerenderde indeling visueel worden afgekapt. De geometrie geen rechthoekig.      <a name=&quot;dependencyPropertyInfo_Clip&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.ClipProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.ClipProperty>"
  example:
  - "This example shows how to define a framework element'sClipregion. To define a clip, use a <xref:System.Windows.Media.Geometry> (for example, an <xref:System.Windows.Media.EllipseGeometry>to set the element's Clipproperty. Only the area that is within the region of the geometry will be visible.  \n  \n The following example shows an <xref:System.Windows.Controls.Image>element without a defined clip region. Because no clip region is defined, the entire image is displayed.  \n  \n [!code-xml[ClipPathExample#2](~/add/codesnippet/xaml/ClipPathExample/ClipExample.xaml#2)]  \n  \n ![An object before applying a clip region](~/add/media/mil-task-clip-region-noclip.png \"An object before applying a clip region\")  \nImage with No Clip Region  \n  \n In the next example, an identical Image is created, except that it has a defined clip region. Only the part of the image that is within the area the <xref:System.Windows.Media.EllipseGeometry>will be displayed.  \n  \n [!code-xml[ClipPathExample#4](~/add/codesnippet/xaml/ClipPathExample/ClipExample.xaml#4)]  \n  \n ![A clipped object](~/add/media/mil-task-clip-region-ellispe.PNG \"A clipped object\")  \nImage with an Elliptical Clip Region  \n  \n The following example shows how animate a framework element's Clip region. In this example, an <xref:System.Windows.Media.EllipseGeometry> is used to define an elliptical clip region for an <xref:System.Windows.Controls.Image> element. A <xref:System.Windows.Media.Animation.PointAnimation> animates the ellipse geometry's <xref:System.Windows.Media.EllipseGeometry.Center%2A> property from (0, 0) to (200, 150). The animation starts playing after the image is loaded and repeats indefinitely.  \n  \n [!code-xml[ClipPathExample#5](~/add/codesnippet/xaml/ClipPathExample/ClipExample.xaml#5)]  \n  \n For the full sample, see the [Clip Region Sample](http://msdn.microsoft.com/en-us/83043a0b-f824-445f-9675-103280c5ca67)."
  syntax:
    content: public System.Windows.Media.Geometry Clip { get; set; }
    return:
      type: System.Windows.Media.Geometry
      description: "De geometrie die moet worden gebruikt voor het gebied sizing knipsel. De standaardwaarde is een null <xref href=&quot;System.Windows.Media.Geometry&quot;> </xref>."
  overload: System.Windows.UIElement.Clip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ClipProperty
  id: ClipProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ClipProperty
  nameWithType: UIElement.ClipProperty
  fullName: System.Windows.UIElement.ClipProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.Clip*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.Clip*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ClipProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ClipToBounds
  id: ClipToBounds
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ClipToBounds
  nameWithType: UIElement.ClipToBounds
  fullName: System.Windows.UIElement.ClipToBounds
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld waarmee wordt aangegeven of de inhoud van dit element (of de inhoud afkomstig zijn van de onderliggende elementen van dit element) in de grootte van het element met inpast clip.   Dit is een afhankelijkheidseigenschap."
  remarks: "Voor onderliggende elementen heeft ClipToBounds verschillende gevolgen voor de lay-out gedrag, afhankelijk van of de hoogte en breedte van het bovenliggende element zijn bepaald door <xref:System.Windows.FrameworkElement.Height%2A>/ <xref:System.Windows.FrameworkElement.Width%2A>of <xref:System.Windows.FrameworkElement.MaxHeight%2A>/ <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</xref:System.Windows.FrameworkElement.MaxWidth%2A> </xref:System.Windows.FrameworkElement.MaxHeight%2A> </xref:System.Windows.FrameworkElement.Width%2A> </xref:System.Windows.FrameworkElement.Height%2A> <xref:System.Windows.FrameworkElement.MaxHeight%2A>/ <xref:System.Windows.FrameworkElement.MaxWidth%2A>van het bovenliggende element altijd worden nageleefd ongeacht de waarde van ClipToBounds en effectieve knipsel wordt altijd de inhoud op basis van deze maximumwaarden clip.</xref:System.Windows.FrameworkElement.MaxWidth%2A></xref:System.Windows.FrameworkElement.MaxHeight%2A> De bovenliggende <xref:System.Windows.FrameworkElement.Height%2A>/ <xref:System.Windows.FrameworkElement.Width%2A>instellingen wordt de inhoud niet bijsnijden wanneer ClipToBounds `false`, maar de inhoud wordt bijsnijden als ClipToBounds `true`.</xref:System.Windows.FrameworkElement.Width%2A> </xref:System.Windows.FrameworkElement.Height%2A>       Houd er rekening mee dat wel `false` is het algemeen gedrag zoals geïmplementeerd in de <xref:System.Windows.UIElement>klasse.</xref:System.Windows.UIElement> Het is mogelijk voor een bepaald element dat is afgeleid van <xref:System.Windows.UIElement>voor het onderdrukken van de metagegevens van de eigenschap afhankelijkheid voor deze eigenschap in dit exemplaar gebruiken standaard `true` in plaats daarvan.</xref:System.Windows.UIElement> Enkele bestaande afgeleide klassen overschrijven deze metagegevens en/of wijzig de standaardwaarde voor afhankelijkheid-eigenschap.       <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, en <xref:System.Windows.Controls.Primitives.Popup>elk overschrijven de standaardwaarde `true`.</xref:System.Windows.Controls.Primitives.Popup> </xref:System.Windows.Controls.InkPresenter></xref:System.Windows.Controls.InkCanvas>       <xref:System.Windows.FrameworkElement>de metagegevens voor deze afhankelijkheidseigenschap overschrijft.</xref:System.Windows.FrameworkElement> In het bijzonder <xref:System.Windows.FrameworkElement>geeft deze eigenschap in op de waarde van Eigenschapsovername toestaan (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metagegevens).</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkElement> Overname van eigenschappen waarde in deze context betekent dat als er onderliggende elementen met er geen andere waarde voor ClipToBounds toegewezen via lokale waarden of stijlen, de waarde van het dichtstbijzijnde bovenliggende element met deze waarde toegewezen (opnieuw, hetzij in stijlen standaardwaarden, of een lokaal waarde), wordt door het systeem eigenschap de waarde van het bovenliggende element wordt toegewezen aan alle niet-toegewezen onderliggende elementen. In de praktijk dit betekent dat kunt u opgeven of het hoofdelement clip grenzen is toegestaan, en dat de waarde worden doorgegeven aan alle onderliggende elementen die niet specifiek als toegewezen `false`.      <a name=&quot;dependencyPropertyInfo_ClipToBounds&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.ClipToBoundsProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.ClipToBoundsProperty>"
  syntax:
    content: public bool ClipToBounds { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de inhoud moet worden afgekapt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.ClipToBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ClipToBoundsProperty
  id: ClipToBoundsProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ClipToBoundsProperty
  nameWithType: UIElement.ClipToBoundsProperty
  fullName: System.Windows.UIElement.ClipToBoundsProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.ClipToBounds*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.ClipToBounds*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ClipToBoundsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.CommandBindings
  id: CommandBindings
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: CommandBindings
  nameWithType: UIElement.CommandBindings
  fullName: System.Windows.UIElement.CommandBindings
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee wordt een verzameling <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> objecten die zijn gekoppeld met dit element. Een <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> kunnen afhandelen van de opdracht voor dit element en de koppeling tussen een opdracht, de bijbehorende gebeurtenissen en de handlers die zijn gekoppeld met dit element wordt gedeclareerd."
  remarks: "Een andere gangbare manier voor het vullen van de verzameling CommandBindings is met <xref:System.Windows.Input.CommandManager>methoden programmatisch.</xref:System.Windows.Input.CommandManager>      <a name=&quot;xamlPropertyElementUsage_CommandBindings&quot;></a>## XAML eigenschap elementgebruik ```   <object>     <object.CommandBindings>       oneOrMoreCommandBindings     </object.CommandBindings>   </object>   ``` <a name=&quot;xamlValues_CommandBindings&quot;> </a> ## XAML waarden *oneOrMoreCommandBindings* een of meer <xref:System.Windows.Input.CommandBinding>elementen.</xref:System.Windows.Input.CommandBinding>       Elk van deze moet een <xref:System.Windows.Input.CommandBinding.Command%2A>-kenmerk ingesteld op een bekende opdracht en kenmerken instellen voor de <xref:System.Windows.Input.CommandBinding.CanExecute>en <xref:System.Windows.Input.CommandBinding.Executed>handler-implementaties.</xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding.Command%2A> Zie voor meer informatie <xref:System.Windows.Input.CommandBinding>.</xref:System.Windows.Input.CommandBinding>"
  example:
  - "The following example adds a <xref:System.Windows.Input.CommandBinding> to a window using markup. Note that in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the <xref:System.Windows.Input.CommandBindingCollection> is not declared in the markup as an element; the collection object is inferred by the type that the property takes, and you populate the property element with one or more <xref:System.Windows.Input.CommandBinding> elements:  \n  \n [!code-xml[commandWithHandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n For more information about the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example does essentially the same thing in code:  \n  \n [!code-cs[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]"
  syntax:
    content: public System.Windows.Input.CommandBindingCollection CommandBindings { get; }
    return:
      type: System.Windows.Input.CommandBindingCollection
      description: "De verzameling van alle <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> objecten."
  overload: System.Windows.UIElement.CommandBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.DesiredSize
  id: DesiredSize
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: DesiredSize
  nameWithType: UIElement.DesiredSize
  fullName: System.Windows.UIElement.DesiredSize
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee haalt u de grootte die voor dit element berekend tijdens de fase van de meting van het outproces lay."
  remarks: "De waarde die wordt geretourneerd door deze eigenschap is alleen een geldige waarde als de waarde van de <xref:System.Windows.UIElement.IsMeasureValid%2A>eigenschap is `true`.</xref:System.Windows.UIElement.IsMeasureValid%2A>       DesiredSize is doorgaans ingeschakeld als een van de metingsfactoren wanneer u het gedrag van de lay-out implementeren, zoals overschrijft <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, of <xref:System.Windows.UIElement.OnRender%2A>(in de <xref:System.Windows.UIElement.OnRender%2A>case, u wellicht controleren <xref:System.Windows.UIElement.RenderSize%2A>in plaats daarvan, maar dit is afhankelijk van uw implementatie).</xref:System.Windows.UIElement.RenderSize%2A> </xref:System.Windows.UIElement.OnRender%2A> </xref:System.Windows.UIElement.OnRender%2A> </xref:System.Windows.FrameworkElement.MeasureOverride%2A> </xref:System.Windows.FrameworkElement.ArrangeOverride%2A> Afhankelijk van het scenario DesiredSize mogelijk volledig worden voldaan door de logica voor uw implementatie, beperkingen voor DesiredSize kunnen worden toegepast en dergelijke beperkingen mogelijk ook andere kenmerken van het bovenliggende element of een onderliggend element wijzigen. Bijvoorbeeld, vergelijken een besturingselement dat ondersteuning biedt voor schuifbare regio&quot;s (maar niet moet worden afgeleid van de besturingselementen van WPF framework niveau waarmee al schuifbare regio&quot;s) beschikbare grootte om DesiredSize te. Het besturingselement kan vervolgens ingesteld voor een interne ingeschakeld schuifbalken in staat de [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] voor het besturingselement. Of DesiredSize kan mogelijk ook in bepaalde scenario&quot;s worden genegeerd."
  example:
  - "The following example shows DesiredSize as part of a <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementation. Notice how <xref:System.Windows.UIElement.Measure%2A> is called immediately prior to obtaining DesiredSize. This assures that DesiredSize holds a legitimate value.  \n  \n [!code-cs[PlotPanel#2](~/add/codesnippet/csharp/PlotPanel_csharp/PlotPanel.cs#2)]\n [!code-cpp[PlotPanel#2](~/add/codesnippet/cpp/plotpanel/PlotPanel.cpp#2)]\n [!code-vb[PlotPanel#2](~/add/codesnippet/visualbasic/PlotPanel/PlotPanel.vb#2)]"
  syntax:
    content: public System.Windows.Size DesiredSize { get; }
    return:
      type: System.Windows.Size
      description: "De berekende grootte, die de gewenste grootte van de schikken op te geven."
  overload: System.Windows.UIElement.DesiredSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.DragEnter
  id: DragEnter
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: DragEnter
  nameWithType: UIElement.DragEnter
  fullName: System.Windows.UIElement.DragEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het systeem invoer een onderliggende slepen-gebeurtenis met dit element als doel slepen meldt."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat DragEnter maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis DragEnter zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>      <a name=&quot;routedEventInfo_DragEnter&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.DragEnterEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.DragEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewDragEnter>.</xref:System.Windows.UIElement.PreviewDragEnter> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement.DragEnterEvent>      -Overschrijven <xref:System.Windows.UIElement.OnDragEnter%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnDragEnter%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler DragEnter;
    return:
      type: System.Windows.DragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.DragEnterEvent
  id: DragEnterEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: DragEnterEvent
  nameWithType: UIElement.DragEnterEvent
  fullName: System.Windows.UIElement.DragEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.DragEnter&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.DragLeave
  id: DragLeave
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: DragLeave
  nameWithType: UIElement.DragLeave
  fullName: System.Windows.UIElement.DragLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het systeem invoer een onderliggende slepen-gebeurtenis met dit element aan de oorsprong slepen meldt."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat DragLeave maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis DragLeave zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>      <a name=&quot;routedEventInfo_DragLeave&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.DragLeaveEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.DragEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.DragDrop.PreviewDragLeave>.</xref:System.Windows.DragDrop.PreviewDragLeave> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement.DragLeaveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnDragLeave%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnDragLeave%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler DragLeave;
    return:
      type: System.Windows.DragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.DragLeaveEvent
  id: DragLeaveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: DragLeaveEvent
  nameWithType: UIElement.DragLeaveEvent
  fullName: System.Windows.UIElement.DragLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.DragLeave&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.DragOver
  id: DragOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: DragOver
  nameWithType: UIElement.DragOver
  fullName: System.Windows.UIElement.DragOver
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het systeem invoer een onderliggende slepen-gebeurtenis met dit element als het mogelijke doel rapporteert."
  remarks: "Deze gebeurtenis treedt op, zelfs als het slepen afkomstig zijn van de grenzen van het element. Als het slepen buiten de grenzen begint en vervolgens gaat binnen, deze gebeurtenis wordt ook gegenereerd, evenals <xref:System.Windows.UIElement.DragEnter>en gerelateerde gebeurtenissen preview.</xref:System.Windows.UIElement.DragEnter>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat DragOver maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.DragOver?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis DragOver zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>      <a name=&quot;routedEventInfo_DragOver&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.DragOverEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.DragEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.DragDrop.PreviewDragOver>.</xref:System.Windows.DragDrop.PreviewDragOver> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement.DragOverEvent>      -Overschrijven <xref:System.Windows.UIElement.OnDragOver%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnDragOver%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler DragOver;
    return:
      type: System.Windows.DragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.DragOverEvent
  id: DragOverEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: DragOverEvent
  nameWithType: UIElement.DragOverEvent
  fullName: System.Windows.UIElement.DragOverEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.DragOver&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragOverEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.Drop
  id: Drop
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Drop
  nameWithType: UIElement.Drop
  fullName: System.Windows.UIElement.Drop
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het systeem invoer een onderliggende neerzetten-gebeurtenis met dit element als het doel meldt."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.Drop?displayProperty=fullName>gekoppelde gebeurtenis voor deze klasse zodat deze vervolgkeuzelijst maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.Drop?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis Drop zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.Drop?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.Drop?displayProperty=fullName>      <a name=&quot;routedEventInfo_Drop&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.DropEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.DragEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewDrop>.</xref:System.Windows.UIElement.PreviewDrop> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement.DropEvent>      -Overschrijven <xref:System.Windows.UIElement.OnDrop%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnDrop%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler Drop;
    return:
      type: System.Windows.DragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.DropEvent
  id: DropEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: DropEvent
  nameWithType: UIElement.DropEvent
  fullName: System.Windows.UIElement.DropEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.Drop&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DropEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.Effect
  id: Effect
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Effect
  nameWithType: UIElement.Effect
  fullName: System.Windows.UIElement.Effect
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van het effect bitmap toepassen op de <xref href=&quot;System.Windows.UIElement&quot;> </xref>. Dit is een afhankelijkheidseigenschap."
  remarks: "Gebruik de eigenschap Effect bitmap effect toepassen op een <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement>      <a name=&quot;dependencyPropertyInfo_Effect&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.EffectProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.EffectProperty>"
  example:
  - "The following XAML shows how to assign a custom <xref:System.Windows.Media.Effects.ShaderEffect> to the Effect property.  \n  \n [!code-xml[System.Windows.Media.Effects.ShaderEffect#1000](~/add/codesnippet/xaml/ShaderEffectDemo/Window1.xaml#1000)]"
  syntax:
    content: public System.Windows.Media.Effects.Effect Effect { get; set; }
    return:
      type: System.Windows.Media.Effects.Effect
      description: "Een <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref> die staat voor de bitmap effect."
  overload: System.Windows.UIElement.Effect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.EffectProperty
  id: EffectProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: EffectProperty
  nameWithType: UIElement.EffectProperty
  fullName: System.Windows.UIElement.EffectProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.Effect*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.Effect*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty EffectProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.Focus
  id: Focus
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Focus()
  nameWithType: UIElement.Focus()
  fullName: System.Windows.UIElement.Focus()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pogingen om de focus instelt op dit element."
  remarks: "Om u te focussen, worden <xref:System.Windows.UIElement.Focusable%2A>en <xref:System.Windows.UIElement.IsEnabled%2A>moeten beide `true`.</xref:System.Windows.UIElement.IsEnabled%2A> </xref:System.Windows.UIElement.Focusable%2A>       Zelfs als een element te focussen en zijn ingeschakeld, gebeurtenisverwerking binnen een specifieke structuur is, (bijvoorbeeld als een samengesteld besturingselement voor) mogelijk reageren op de focus voorbeeldgebeurtenissen doordat niet focus, dus deze methode zou retourneren `false`.       Focus, wordt bepaald door twee afzonderlijke concepten: toetsenbord focus en logische focus altijd niet identiek zijn.  Zie voor meer informatie [Focus overzicht](~/add/includes/ajax-current-ext-md.md) of [invoer overzicht](~/add/includes/ajax-current-ext-md.md).       Als het aanroepen van Focus retourneert `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A>en <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>zijn ook `true`.</xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> </xref:System.Windows.UIElement.IsKeyboardFocused%2A>       Als de bijbehorende eigenschappen nog geen `true`, bij het aanroepen van Focus, een of meer van de volgende gebeurtenissen worden gegenereerd in de volgende volgorde: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>(bron is de nieuwe focus doel), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus>(bron is de nieuwe focus doel).</xref:System.Windows.UIElement.GotKeyboardFocus> </xref:System.Windows.UIElement.LostKeyboardFocus> </xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> </xref:System.Windows.UIElement.IsKeyboardFocusedChanged> </xref:System.Windows.UIElement.PreviewGotKeyboardFocus> </xref:System.Windows.UIElement.PreviewLostKeyboardFocus>       Een ander element in de toepassing die nodig zijn om focus eerder in volgorde voor deze aanroep om succesvol kunnen werken."
  example:
  - "The following example sets focus to a <xref:System.Windows.Controls.TextBox> referenced by <xref:System.Windows.FrameworkElement.Name%2A>, and then adjusts the position of the cursor within the <xref:System.Windows.Controls.TextBox>.  \n  \n [!code-cs[TextBox_CursorToEnd#UIElementFocus](~/add/codesnippet/csharp/CursorToEnd/Window1.xaml.cs#uielementfocus)]\n [!code-vb[TextBox_CursorToEnd#UIElementFocus](~/add/codesnippet/visualbasic/CursorToEnd/Window1.xaml.vb#uielementfocus)]"
  syntax:
    content: public bool Focus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de toetsenbordfocus en logische focus is ingesteld op dit element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als alleen logische focus is ingesteld op dit element of als de aanroep van deze methode heeft niet de focus wijzigen afdwingen."
  overload: System.Windows.UIElement.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.Focusable
  id: Focusable
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Focusable
  nameWithType: UIElement.Focusable
  fullName: System.Windows.UIElement.Focusable
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of het element focus kan ontvangen.  Dit is een afhankelijkheidseigenschap."
  remarks: "Alleen de gerichte element ontvangt toetsenbordinvoer.       FOCUSABLE is de [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] eigenschapsaccessor voor wat in werkelijkheid een afhankelijkheidseigenschap is. Deze bepaalde afhankelijkheidseigenschap is vrij vaak de duidelijk &quot;standaard&quot; waarde anders in een afgeleid elementklassen, met name in besturingselementen. Dit komt vaak op twee manieren: - de afhankelijkheidseigenschap wordt overgenomen door een bepaalde afgeleide klasse, maar die afgeleide klasse overschrijft de metagegevens van de afhankelijkheidseigenschap en de standaardwaarde voor de eigenschap wordt gewijzigd.      -Een stijl of sjabloon wordt toegepast op een element, wat anders de waarde van die eigenschap afhankelijkheid ingesteld.       Bijvoorbeeld, de duidelijk &quot;standaard&quot; van Focusable voor een <xref:System.Windows.Controls.Button>besturingselement `true`, ook al <xref:System.Windows.Controls.Button>neemt over Focusable als een [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] eigenschap rechtstreeks vanuit <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Button> Dit is omdat de metagegevenswaarde van de toegepaste voor de afhankelijkheidseigenschap te focussen is overschreven in de statische constructor van het <xref:System.Windows.Controls.Control>basisklasse op tussen ligt <xref:System.Windows.Controls.Button>en <xref:System.Windows.UIElement>in de Klassehiërarchie.</xref:System.Windows.UIElement> </xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Control>       Wanneer de overgenomen door <xref:System.Windows.Controls.Control>of de afgeleide klassen <xref:System.Windows.Controls.Control>opnieuw definieert de standaardwaarde van deze eigenschap `true`.</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control>       Wanneer de overgenomen door <xref:System.Windows.Controls.Label>(dit is een <xref:System.Windows.Controls.Control>afgeleide klasse), de standaardwaarde opnieuw opnieuw wordt gedefinieerd als `false`.</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Label>      <a name=&quot;dependencyPropertyInfo_Focusable&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.FocusableProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.FocusableProperty>"
  example:
  - "The following example code illustrates a control template for a particular custom control, which sets Focusable `false` on one of the elements within the template.  \n  \n [!code-xml[RichTextBox_NoScrollViewer#_ControlTemplate](~/add/codesnippet/xaml/richtextbox_noscrollviewer/window1.xaml#_controltemplate)]\n [!code-xml[RichTextBox_NoScrollViewer#_ControlTemplate](~/add/codesnippet/xaml/p-system.windows.uieleme_9_1.xaml)]"
  syntax:
    content: public bool Focusable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element te focussen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, maar Zie de opmerkingen."
  overload: System.Windows.UIElement.Focusable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.FocusableChanged
  id: FocusableChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: FocusableChanged
  nameWithType: UIElement.FocusableChanged
  fullName: System.Windows.UIElement.FocusableChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.Focusable*>eigenschapswijzigingen.</xref:System.Windows.UIElement.Focusable*>"
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.FocusableProperty
  id: FocusableProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: FocusableProperty
  nameWithType: UIElement.FocusableProperty
  fullName: System.Windows.UIElement.FocusableProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.Focusable*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.Focusable*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FocusableProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  id: GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: UIElement.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.UIElement.GetAnimationBaseValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Retourneert de waarde van de basis-eigenschap voor de opgegeven eigenschap voor dit element, waarbij de eventuele waarde van een actieve geanimeerd of animatie is gestopt."
  remarks: "Als er geen animaties zijn gekoppeld aan de eigenschap, wordt de retourwaarde GetAnimationBaseValue is altijd gelijk aan de <xref:System.Windows.DependencyObject.GetValue%2A>waarde retourneren.</xref:System.Windows.DependencyObject.GetValue%2A> Als er animaties die zijn gekoppeld, vervolgens alle mogelijke animatie afgeleid waarden, met inbegrip van de start en stop waarden worden genegeerd en waarde van de eigenschap wordt bepaald op basis van alle mogelijke invoer. Zie voor meer informatie [afhankelijkheid eigenschap waarde prioriteit](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example implements a handler that reports the base value of an animated <xref:System.Windows.FrameworkElement.Width%2A> property on a <xref:System.Windows.Controls.Button>, as well as the base value of a transform.  \n  \n [!code-cs[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/add/codesnippet/csharp/TimingBehavior_csharp/GetAnimationBaseValueExample.cs#getanimationbasevalue)]\n [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/add/codesnippet/visualbasic/timingbehavior_vb/getanimationbasevalueexample.vb#getanimationbasevalue)]"
  syntax:
    content: public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "De afhankelijkheidseigenschap om te controleren."
    return:
      type: System.Object
      description: "Waarde van de eigenschap als geen animaties zijn gekoppeld aan de opgegeven afhankelijkheidseigenschap."
  overload: System.Windows.UIElement.GetAnimationBaseValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GetLayoutClip(System.Windows.Size)
  id: GetLayoutClip(System.Windows.Size)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GetLayoutClip(Size)
  nameWithType: UIElement.GetLayoutClip(Size)
  fullName: System.Windows.UIElement.GetLayoutClip(Size)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Retourneert een alternatieve paginaknipsel geometrie die staat voor de regio die zouden worden afgekapt als <xref:System.Windows.UIElement.ClipToBounds*>zijn ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.UIElement.ClipToBounds*>"
  remarks: "De standaardimplementatie een legitieme waarde wordt geretourneerd, maar maakt geen gebruik van de `layoutSlotSize` parameter in de berekeningen. In plaats daarvan wordt de waarde van <xref:System.Windows.UIElement.RenderSize%2A>.</xref:System.Windows.UIElement.RenderSize%2A>       Deze methode wezen wordt overschreven door de onmiddellijk afgeleide <xref:System.Windows.FrameworkElement>klasse, en de <xref:System.Windows.FrameworkElement>onderdrukking produceert een meer geavanceerde gedrag voor algemene elementen van WPF-framework op blokniveau.</xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement> Zie voor meer informatie <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=fullName>.</xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);
    parameters:
    - id: layoutSlotSize
      type: System.Windows.Size
      description: "De beschikbare grootte die is geleverd door het element."
    return:
      type: System.Windows.Media.Geometry
      description: "De mogelijke paginaknipsel geometrie."
  overload: System.Windows.UIElement.GetLayoutClip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GetUIParentCore
  id: GetUIParentCore
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GetUIParentCore()
  nameWithType: UIElement.GetUIParentCore()
  fullName: System.Windows.UIElement.GetUIParentCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert een alternatief [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] bovenliggende voor dit element als er geen visueel bovenliggend bestaat."
  remarks: "De standaard virtuele implementatie van deze methode retourneert `null`. <xref:System.Windows.FrameworkElement>biedt een praktische implementatie.</xref:System.Windows.FrameworkElement>       Alternatieve bovenliggende items worden gebruikt voor het doorsturen van gebeurtenissen, in gevallen waarbij een element een alternatieve bovenliggende structuur maakt zodat de gebeurtenissen op een manier die van het standaard patroon afwijkt van routering van de visuele boomstructuur met de standaard bovenliggende gerouteerde of omlaag in de preview-routingstrategie."
  syntax:
    content: protected virtual System.Windows.DependencyObject GetUIParentCore ();
    parameters: []
    return:
      type: System.Windows.DependencyObject
      description: "Een object als de uitvoering van een afgeleide klasse heeft een alternatieve bovenliggende verbinding om te rapporteren."
  overload: System.Windows.UIElement.GetUIParentCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GiveFeedback
  id: GiveFeedback
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GiveFeedback
  nameWithType: UIElement.GiveFeedback
  fullName: System.Windows.UIElement.GiveFeedback
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het systeem invoer meldt een onderliggende slepen en neerzetten gebeurtenis dat betrekking heeft op dit element."
  remarks: "De gebeurtenis GiveFeedback kunt de bron van een gebeurtenis Sleep de vormgeving van de muisaanwijzer wijzigen om de gebruiker visuele feedback geven tijdens een bewerking slepen en neerzetten. De visuele feedback versterkt dat een bewerking slepen en neerzetten uitgevoerd wordt.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat GiveFeedback maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis GiveFeedback zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>      <a name=&quot;routedEventInfo_GiveFeedback&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.GiveFeedbackEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.GiveFeedbackEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewGiveFeedback>.</xref:System.Windows.UIElement.PreviewGiveFeedback> </xref:System.Windows.GiveFeedbackEventHandler> </xref:System.Windows.UIElement.GiveFeedbackEvent>      -Overschrijven <xref:System.Windows.UIElement.OnGiveFeedback%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnGiveFeedback%2A>"
  syntax:
    content: public event System.Windows.GiveFeedbackEventHandler GiveFeedback;
    return:
      type: System.Windows.GiveFeedbackEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GiveFeedbackEvent
  id: GiveFeedbackEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GiveFeedbackEvent
  nameWithType: UIElement.GiveFeedbackEvent
  fullName: System.Windows.UIElement.GiveFeedbackEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.GiveFeedback&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotFocus
  id: GotFocus
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotFocus
  nameWithType: UIElement.GotFocus
  fullName: System.Windows.UIElement.GotFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer dit element logische focus krijgt."
  remarks: "Logische focus verschilt van de toetsenbordfocus als focus opzettelijk wordt afgedwongen met behulp van een methodeaanroep van, maar de vorige toetsenbordfocus in een ander bereik bestaat. In dit scenario toetsenbordfocus blijft wanneer het is en het element waarbij een <xref:System.Windows.UIElement.Focus%2A>methode nog steeds opgehaald logische focus wordt aangeroepen.</xref:System.Windows.UIElement.Focus%2A>       Een nauwkeurigere interpretatie van deze gebeurtenis is dat deze wordt gegenereerd wanneer de waarde van de <xref:System.Windows.UIElement.IsFocused%2A>eigenschap van een element in de route is gewijzigd van `false` naar `true`.</xref:System.Windows.UIElement.IsFocused%2A>       Omdat deze gebeurtenis doordat routering gebruikt, mogelijk het element dat de focus krijgt een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in de gebeurtenisgegevens worden opgeslagen om te bepalen van het werkelijke element dat de focus heeft gekregen.</xref:System.Windows.RoutedEventArgs.Source%2A>      <a name=&quot;routedEventInfo_GotFocus&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.GotFocusEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.RoutedEventHandler>|      -Er is geen overeenkomende tunneling gebeurtenis.</xref:System.Windows.RoutedEventHandler> </xref:System.Windows.UIElement.GotFocusEvent>      -Overschrijven <xref:System.Windows.UIElement.OnGotFocus%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnGotFocus%2A>"
  syntax:
    content: public event System.Windows.RoutedEventHandler GotFocus;
    return:
      type: System.Windows.RoutedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotFocusEvent
  nameWithType: UIElement.GotFocusEvent
  fullName: System.Windows.UIElement.GotFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.GotFocus&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotKeyboardFocus
  id: GotKeyboardFocus
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotKeyboardFocus
  nameWithType: UIElement.GotKeyboardFocus
  fullName: System.Windows.UIElement.GotKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer het toetsenbord is gericht op dit element."
  remarks: "<xref:System.Windows.UIElement.IsKeyboardFocusedChanged>is een soortgelijke gebeurtenis bijhouden van statuswijzigingen in een eigenschap die wordt onderhouden door de status van de focus voor een element; de GotKeyboardFocus-gebeurtenis wordt gestart in veel van dezelfde voorwaarden.</xref:System.Windows.UIElement.IsKeyboardFocusedChanged>       Omdat deze gebeurtenis doordat routering gebruikt, mogelijk het element dat de focus heeft een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in de gebeurtenisgegevens worden opgeslagen om te bepalen van het werkelijke element dat de focus heeft.</xref:System.Windows.RoutedEventArgs.Source%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat GotKeyboardFocus maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis GotKeyboardFocus zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>      <a name=&quot;routedEventInfo_GotKeyboardFocus&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.GotKeyboardFocusEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</xref:System.Windows.UIElement.PreviewGotKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement.GotKeyboardFocusEvent>      -Overschrijven <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnGotKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotKeyboardFocusEvent
  id: GotKeyboardFocusEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotKeyboardFocusEvent
  nameWithType: UIElement.GotKeyboardFocusEvent
  fullName: System.Windows.UIElement.GotKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.GotKeyboardFocus&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotMouseCapture
  id: GotMouseCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotMouseCapture
  nameWithType: UIElement.GotMouseCapture
  fullName: System.Windows.UIElement.GotMouseCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de muis door dit element wordt vastgelegd."
  remarks: "Wanneer een element worden vastgelegd met de muis, ontvangt deze muisinvoer zelfs als de muisaanwijzer zich buiten het bereik valt. De muis wordt doorgaans alleen tijdens slepen en neerzetten vastgelegd en vastgelegde blijft totdat de actie verwijderen van de bewerking slepen en neerzetten plaatsvindt.       Omdat deze gebeurtenis doordat routering gebruikt, mogelijk het element dat vastleggen heeft een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in het logboek gegevens om de werkelijke element met de muis vast te leggen.</xref:System.Windows.RoutedEventArgs.Source%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat GotMouseCapture maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis GotMouseCapture zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>      <a name=&quot;routedEventInfo_GotMouseCapture&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.GotMouseCaptureEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.MouseEventHandler>|      -Er is geen overeenkomende tunneling gebeurtenis gedefinieerde.</xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement.GotMouseCaptureEvent>      -Overschrijven <xref:System.Windows.UIElement.OnGotMouseCapture%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnGotMouseCapture%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler GotMouseCapture;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotMouseCaptureEvent
  id: GotMouseCaptureEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotMouseCaptureEvent
  nameWithType: UIElement.GotMouseCaptureEvent
  fullName: System.Windows.UIElement.GotMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.GotMouseCapture&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotStylusCapture
  id: GotStylusCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotStylusCapture
  nameWithType: UIElement.GotStylusCapture
  fullName: System.Windows.UIElement.GotStylusCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer dit element de tekenpen worden vastgelegd."
  remarks: "Wanneer een element de tekenpen bevat, ontvangt deze tekenpeninvoer zelfs als de wijzer buiten de grenzen. De pen meestal alleen tijdens slepen en neerzetten is opgenomen en vastleggen behoudt totdat de bewerking van de bewerking slepen en neerzetten optreedt.       Omdat deze gebeurtenis doordat routering gebruikt, mogelijk het element dat vastleggen heeft een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in de gebeurtenisgegevens worden opgeslagen om te bepalen van het werkelijke element met vastleggen.</xref:System.Windows.RoutedEventArgs.Source%2A>       Deze gebeurtenis een alias voor de gekoppelde gebeurtenis voor deze klasse maakt, zodat GotStylusCapture maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis GotStylusCapture zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName>      <a name=&quot;routedEventInfo_GotStylusCapture&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.GotStylusCaptureEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -Er is geen overeenkomende tunneling gebeurtenis gedefinieerde.</xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.GotStylusCaptureEvent>      -Overschrijven <xref:System.Windows.UIElement.OnGotStylusCapture%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnGotStylusCapture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler GotStylusCapture;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotStylusCaptureEvent
  id: GotStylusCaptureEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotStylusCaptureEvent
  nameWithType: UIElement.GotStylusCaptureEvent
  fullName: System.Windows.UIElement.GotStylusCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.GotStylusCapture&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotTouchCapture
  id: GotTouchCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotTouchCapture
  nameWithType: UIElement.GotTouchCapture
  fullName: System.Windows.UIElement.GotTouchCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een touch tot dit element wordt vastgelegd."
  remarks: "<a name=&quot;routedEventInfo_GotTouchCapture&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.GotTouchCaptureEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -Overschrijven <xref:System.Windows.UIElement.OnGotTouchCapture%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnGotTouchCapture%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.GotTouchCaptureEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> GotTouchCapture;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.GotTouchCaptureEvent
  id: GotTouchCaptureEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: GotTouchCaptureEvent
  nameWithType: UIElement.GotTouchCaptureEvent
  fullName: System.Windows.UIElement.GotTouchCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.GotTouchCapture&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.HasAnimatedProperties
  id: HasAnimatedProperties
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: HasAnimatedProperties
  nameWithType: UIElement.HasAnimatedProperties
  fullName: System.Windows.UIElement.HasAnimatedProperties
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of dit element animatie-eigenschappen heeft."
  remarks: "Deze eigenschap geeft `true` voor permanente (unclocked, altijd actief) animaties of voor animaties waarvoor een specifieke tijdlijn."
  syntax:
    content: public bool HasAnimatedProperties { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit element animaties gekoppeld aan een van de eigenschappen ervan heeft; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.HasAnimatedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.HasEffectiveKeyboardFocus
  id: HasEffectiveKeyboardFocus
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: HasEffectiveKeyboardFocus
  nameWithType: UIElement.HasEffectiveKeyboardFocus
  fullName: System.Windows.UIElement.HasEffectiveKeyboardFocus
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee wordt een waarde die aangeeft of de <xref href=&quot;System.Windows.UIElement&quot;> </xref> de focus heeft."
  remarks: "Subklassen kunnen deze eigenschap opgeven wanneer het element heeft de toetsenbordfocus negeren.  Dit is handig wanneer uw <xref:System.Windows.UIElement>elementen waarvoor de toetsenbordfocus bevat en u wilt dat uw element op het rapport dat deze de focus heeft.</xref:System.Windows.UIElement>"
  syntax:
    content: protected virtual bool HasEffectiveKeyboardFocus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Windows.UIElement&quot;> </xref> de focus heeft; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.HasEffectiveKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  id: HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: HitTestCore(GeometryHitTestParameters)
  nameWithType: UIElement.HitTestCore(GeometryHitTestParameters)
  fullName: System.Windows.UIElement.HitTestCore(GeometryHitTestParameters)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Implements &lt;xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName&gt; op te geven base element testen gedrag bereikt (retourneren <xref href=&quot;System.Windows.Media.GeometryHitTestResult&quot;> </xref>)."
  remarks: "Zie de oorspronkelijke virtuele methode <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName>voor informatie over verdere vervangt van deze methode in klassen afgeleide.</xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName> Houd er rekening mee dat enkele specifieke besturingselementen (<xref:System.Windows.Controls.TextBlock>, bijvoorbeeld) beschikt over de verschillende implementaties, die deze onderdrukking.</xref:System.Windows.Controls.TextBlock>       Deze methode is niet bedoeld om te worden aangeroepen vanuit uw toepassingscode. Deze methode biedt ondersteuning voor interne treffers testen gedrag die worden gebruikt door verschillende aspecten van de invoer-systeem (ongeacht of de muisaanwijzer over een element bijvoorbeeld)."
  syntax:
    content: protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);
    parameters:
    - id: hitTestParameters
      type: System.Windows.Media.GeometryHitTestParameters
      description: "Beschrijft de detectietest om uit te voeren, waaronder het treffers beginpunt."
    return:
      type: System.Windows.Media.GeometryHitTestResult
      description: "De resultaten van de test, met inbegrip van de geëvalueerde geometrie."
  overload: System.Windows.UIElement.HitTestCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)
  id: HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: HitTestCore(PointHitTestParameters)
  nameWithType: UIElement.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.UIElement.HitTestCore(PointHitTestParameters)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Implements <xref:System.Windows.Media.Visual.HitTestCore*>op te geven base element testen gedrag bereikt (retourneren <xref href=&quot;System.Windows.Media.HitTestResult&quot;> </xref>).</xref:System.Windows.Media.Visual.HitTestCore*>"
  remarks: "Zie de oorspronkelijke virtuele methode <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName>voor informatie over verdere vervangt van deze methode in klassen afgeleide.</xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=fullName> Houd er rekening mee dat enkele specifieke besturingselementen (<xref:System.Windows.Controls.TextBlock>, bijvoorbeeld) beschikt over de verschillende implementaties, die HitTestCore overschrijven, zoals gedefinieerd door <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Controls.TextBlock>       Deze methode is niet bedoeld om te worden aangeroepen vanuit uw toepassingscode. Deze methode biedt ondersteuning voor interne treffers testen gedrag die worden gebruikt door verschillende aspecten van de invoer-systeem (ongeacht of de muisaanwijzer over een element bijvoorbeeld)."
  syntax:
    content: protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);
    parameters:
    - id: hitTestParameters
      type: System.Windows.Media.PointHitTestParameters
      description: "Beschrijft de detectietest om uit te voeren, waaronder het treffers beginpunt."
    return:
      type: System.Windows.Media.HitTestResult
      description: "De resultaten van de test, met inbegrip van de geëvalueerde punt."
  overload: System.Windows.UIElement.HitTestCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.InputBindings
  id: InputBindings
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: InputBindings
  nameWithType: UIElement.InputBindings
  fullName: System.Windows.UIElement.InputBindings
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee haalt u de verzameling van invoer bindingen die zijn gekoppeld aan dit element."
  remarks: "Invoer bindingen ondersteuning voor de binding van de opdrachten voor het invoeren van apparaten. Bijvoorbeeld: <xref:System.Windows.Input.MouseBinding>implements invoer bindingen die eigenschappen die specifiek voor muizen zijn bevatten.</xref:System.Windows.Input.MouseBinding>       De verzameling van invoer bindingen bevat zowel invoer bindingen die betrekking op het type hebben als invoer bindingen die zijn gedeclareerd op het exemplaar.       Een verwante eigenschap <xref:System.Windows.UIElement.CommandBindings%2A>, een verzameling van de opdracht bindingen onderhoudt.</xref:System.Windows.UIElement.CommandBindings%2A> Deze verschillen van invoer bindingen in dat ze het volgende niveau af van de verwerking van de opdracht - acties die zijn gekoppeld aan een bekende opdrachten vertegenwoordigen.      <a name=&quot;xamlPropertyElementUsage_InputBindings&quot;></a>## XAML eigenschap elementgebruik ```   <object>     <object.InputBindings>       oneOrMoreInputBindings     </object.InputBindings>   </object>   ``` <a name=&quot;xamlValues_InputBindings&quot;> </a> ## XAML waarden *oneOrMoreInputBindings* een of meer <xref:System.Windows.Input.InputBinding>elementen (meestal de <xref:System.Windows.Input.KeyBinding>of <xref:System.Windows.Input.MouseBinding>afgeleide klassen).</xref:System.Windows.Input.MouseBinding> </xref:System.Windows.Input.KeyBinding> </xref:System.Windows.Input.InputBinding>       Elk van deze naar verwachting hebben een <xref:System.Windows.Input.InputBinding.Command%2A>en <xref:System.Windows.Input.InputBinding.Gesture%2A>set kenmerk.</xref:System.Windows.Input.InputBinding.Gesture%2A> </xref:System.Windows.Input.InputBinding.Command%2A>"
  example:
  - "The following example populates this property on a <xref:System.Windows.Window>, with a single <xref:System.Windows.Input.KeyBinding>.  \n  \n [!code-xml[CommandingOverviewSnippets#CommandingOverviewXAMLKeyBinding](~/add/codesnippet/xaml/CommandingOverviewSnippets/Window1.xaml#commandingoverviewxamlkeybinding)]  \n  \n For more information about the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Input.InputBindingCollection InputBindings { get; }
    return:
      type: System.Windows.Input.InputBindingCollection
      description: "De verzameling van invoer bindingen."
  overload: System.Windows.UIElement.InputBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.InputHitTest(System.Windows.Point)
  id: InputHitTest(System.Windows.Point)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: InputHitTest(Point)
  nameWithType: UIElement.InputHitTest(Point)
  fullName: System.Windows.UIElement.InputHitTest(Point)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Het element input binnen het huidige element dat is opgegeven coördinaten ten opzichte van het huidige element oorsprong retourneert."
  remarks: "<xref:System.Windows.IInputElement>wordt geretourneerd als het retourtype omdat dat type een algemene interface voor beide <xref:System.Windows.UIElement>en <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> is</xref:System.Windows.UIElement></xref:System.Windows.IInputElement> U kunt vervolgens het retourtype op de juiste wijze geconverteerd of het exemplaar van de interface gebruiken voor bepaalde leden die zijn gedefinieerd door de <xref:System.Windows.IInputElement>interface.</xref:System.Windows.IInputElement>       Deze methode is doorgaans niet aangeroepen vanuit de toepassingscode. Deze methode aanroept, is alleen van toepassing als u van plan bent een aanzienlijke hoeveelheid de laag niveau invoer functies die al aanwezig zijn, zoals het opnieuw maken van de muis apparaat logica opnieuw te implementeren.       <xref:System.Windows.IContentHost>contracten een <xref:System.Windows.IContentHost.InputHitTest%2A>methode met dezelfde handtekening die bepaalde elementen kiest voor het implementeren van expliciet.</xref:System.Windows.IContentHost.InputHitTest%2A></xref:System.Windows.IContentHost>"
  syntax:
    content: public System.Windows.IInputElement InputHitTest (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "De offset coördinaten binnen dit element."
    return:
      type: System.Windows.IInputElement
      description: "Het onderliggende element die zich in de opgegeven positie."
  overload: System.Windows.UIElement.InputHitTest*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.InvalidateArrange
  id: InvalidateArrange
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: InvalidateArrange()
  nameWithType: UIElement.InvalidateArrange()
  fullName: System.Windows.UIElement.InvalidateArrange()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "De status van de schikken (schema) voor het element ongeldig. Na de ongeldig te maken, het element wordt de lay-out hebben bijgewerkt, die asynchroon wordt uitgevoerd, tenzij vervolgens afgedwongen door <xref:System.Windows.UIElement.UpdateLayout*>.</xref:System.Windows.UIElement.UpdateLayout*>"
  remarks: "Regelmatige aanroepen naar InvalidateArrange of met name om <xref:System.Windows.UIElement.UpdateLayout%2A>grote gevolgen hebben.</xref:System.Windows.UIElement.UpdateLayout%2A> Daarom te voorkomen dat u deze methode aanroept, tenzij u de status van de precieze indeling absoluut voor volgende aanroepen naar andere vereisen [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)] in uw code. Een geavanceerd scenario, waarin u InvalidateArrange mogelijk aanroepen is als u maakt een <xref:System.Windows.PropertyChangedCallback>voor een afhankelijkheidseigenschap die niet is ingeschakeld een <xref:System.Windows.Freezable>of <xref:System.Windows.FrameworkElement>afgeleide klasse die van invloed is nog steeds de Geef schikken van indeling wanneer deze worden gewijzigd.</xref:System.Windows.FrameworkElement> </xref:System.Windows.Freezable> </xref:System.Windows.PropertyChangedCallback>"
  syntax:
    content: public void InvalidateArrange ();
    parameters: []
  overload: System.Windows.UIElement.InvalidateArrange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.InvalidateMeasure
  id: InvalidateMeasure
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: InvalidateMeasure()
  nameWithType: UIElement.InvalidateMeasure()
  fullName: System.Windows.UIElement.InvalidateMeasure()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "De status van de meting (schema) voor het element ongeldig."
  remarks: "Deze methode aanroept, ook aanroepen <xref:System.Windows.UIElement.InvalidateArrange%2A>intern, is niet nodig om aan te roepen InvalidateMeasure en <xref:System.Windows.UIElement.InvalidateArrange%2A>achter elkaar.</xref:System.Windows.UIElement.InvalidateArrange%2A> </xref:System.Windows.UIElement.InvalidateArrange%2A> Na de ongeldig te maken, het element wordt de lay-out hebben bijgewerkt, die asynchroon wordt uitgevoerd, tenzij <xref:System.Windows.UIElement.UpdateLayout%2A>om af te dwingen een wijziging in de synchrone lay-out wordt aangeroepen.</xref:System.Windows.UIElement.UpdateLayout%2A>       Het systeem WPF-framework niveau indeling omgaat met een eigen van wijzigingen in de visuele boomstructuur van een element en in de meest voorkomende indeling ongeldig maken gevallen het equivalent van deze methode wanneer dat nodig is aanroepen van het systeem lay-out. Als u bij het opstellen van een volledige lay-out-implementatie, die manipulatie van de structuur element of vergelijkbare geavanceerde scenario&quot;s aansturen, moet u alleen deze methode aanroepen. Een geavanceerd scenario is als u maakt een <xref:System.Windows.PropertyChangedCallback>voor een afhankelijkheidseigenschap die niet is ingeschakeld een <xref:System.Windows.Freezable>of <xref:System.Windows.FrameworkElement>afgeleide klasse die van invloed is nog steeds de meting op te geven van de indeling van wanneer deze worden gewijzigd.</xref:System.Windows.FrameworkElement> </xref:System.Windows.Freezable> </xref:System.Windows.PropertyChangedCallback>       Regelmatige aanroepen naar InvalidateMeasure of met name om <xref:System.Windows.UIElement.UpdateLayout%2A>grote gevolgen hebben.</xref:System.Windows.UIElement.UpdateLayout%2A> Daarom te voorkomen dat u deze methode aanroept, tenzij u de status van de precieze indeling absoluut voor volgende aanroepen naar andere vereisen [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)] in uw code."
  syntax:
    content: public void InvalidateMeasure ();
    parameters: []
  overload: System.Windows.UIElement.InvalidateMeasure*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.InvalidateVisual
  id: InvalidateVisual
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: InvalidateVisual()
  nameWithType: UIElement.InvalidateVisual()
  fullName: System.Windows.UIElement.InvalidateVisual()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wordt ongeldig gemaakt de rendering van het element en forceert een volledige nieuwe indeling op te geven. <xref:System.Windows.UIElement.OnRender*>wordt aangeroepen nadat de lay-out cyclus is voltooid.</xref:System.Windows.UIElement.OnRender*>"
  remarks: "Deze methode aanroept <xref:System.Windows.UIElement.InvalidateArrange%2A>intern.</xref:System.Windows.UIElement.InvalidateArrange%2A>       Deze methode is niet in het algemeen aangeroepen vanuit de toepassingscode. Het systeem WPF-framework niveau lay-out eigen omgaat met wijzigingen in de visuele boomstructuur van een element en zou aanroepen van het equivalent van deze methode wanneer dat nodig al. Deze methode aanroept, is alleen nodig voor geavanceerde scenario&quot;s. Een geavanceerd scenario is als u maakt een <xref:System.Windows.PropertyChangedCallback>voor een afhankelijkheidseigenschap die niet is ingeschakeld een <xref:System.Windows.Freezable>of <xref:System.Windows.FrameworkElement>afgeleide klasse die van invloed is nog steeds de indeling wanneer deze worden gewijzigd.</xref:System.Windows.FrameworkElement> </xref:System.Windows.Freezable> </xref:System.Windows.PropertyChangedCallback>"
  syntax:
    content: public void InvalidateVisual ();
    parameters: []
  overload: System.Windows.UIElement.InvalidateVisual*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsArrangeValid
  id: IsArrangeValid
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsArrangeValid
  nameWithType: UIElement.IsArrangeValid
  fullName: System.Windows.UIElement.IsArrangeValid
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of de berekende grootte en positie van de onderliggende elementen in de indeling van dit element geldig zijn."
  remarks: "U kunt afdwingen rangschikking aan ongeldig worden gemaakt door het aanroepen van <xref:System.Windows.UIElement.InvalidateArrange%2A>voor dit element (of de bovenliggende items).</xref:System.Windows.UIElement.InvalidateArrange%2A> Hiermee wordt de indeling voor recomposition at als het systeem indeling bepaalt. U kunt ook een directe aanroep <xref:System.Windows.UIElement.UpdateLayout%2A>kan worden gemaakt, maar dit moet alleen worden uitgevoerd als er zeker van te zijn dat er geen verdere invalidations zijn in behandeling (een groot aantal onnodig geforceerde updates heeft gevolgen voor prestaties).</xref:System.Windows.UIElement.UpdateLayout%2A>       Mag geen IsArrangeValid `true` tenzij <xref:System.Windows.UIElement.IsMeasureValid%2A>is ook `true` (in het proces indeling regeling mag niet geldig zonder eerst wordt geldige meting).</xref:System.Windows.UIElement.IsMeasureValid%2A>"
  syntax:
    content: public bool IsArrangeValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de grootte en positie van de indeling van geldig zijn. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsArrangeValid*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsEnabled
  id: IsEnabled
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsEnabled
  nameWithType: UIElement.IsEnabled
  fullName: System.Windows.UIElement.IsEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of dit element is ingeschakeld de [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)].  Dit is een afhankelijkheidseigenschap."
  remarks: "Houd er rekening mee dat deze eigenschap wordt beïnvloed door de klasse-specifieke implementaties van <xref:System.Windows.UIElement.IsEnabledCore%2A>op bepaalde elementen, vaak tijdens runtime.</xref:System.Windows.UIElement.IsEnabledCore%2A> De standaardwaarde hier vermeld is daarom soms niet effectief. Bijvoorbeeld, een <xref:System.Windows.Controls.Primitives.ScrollBar>worden IsEnabled `false` wanneer wordt vastgesteld dat het is niet nodig voor de ondersteuning van een schuifbalk.</xref:System.Windows.Controls.Primitives.ScrollBar> Bij het instellen van deze waarde wordt mogelijk ook overschreven door de waarde die wordt geretourneerd door <xref:System.Windows.UIElement.IsEnabledCore%2A>.</xref:System.Windows.UIElement.IsEnabledCore%2A>       Elementen die niet zijn ingeschakeld niet deelnemen aan treffers testdoeleinden of focus en daarom niet worden bronnen van gebeurtenissen voor invoer.      <a name=&quot;dependencyPropertyInfo_IsEnabled&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsEnabledProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsEnabledProperty>"
  example:
  - "The following example shows a handler on one button that when executed will set IsEnabled `false` on another named button `b1`.  \n  \n [!code-cs[RoutedEventAddRemoveHandler#Handler](~/add/codesnippet/csharp/RoutedEventAddRemoveHandler/default.xaml.cs#handler)]\n [!code-vb[RoutedEventAddRemoveHandler#Handler](~/add/codesnippet/visualbasic/RoutedEventAddRemoveHandler/default.xaml.vb#handler)]"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element is ingeschakeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsEnabledChanged
  id: IsEnabledChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsEnabledChanged
  nameWithType: UIElement.IsEnabledChanged
  fullName: System.Windows.UIElement.IsEnabledChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsEnabled*>eigenschap van de wijzigingen van dit element.</xref:System.Windows.UIElement.IsEnabled*>"
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsEnabledCore
  id: IsEnabledCore
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsEnabledCore
  nameWithType: UIElement.IsEnabledCore
  fullName: System.Windows.UIElement.IsEnabledCore
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee wordt een waarde die de retourwaarde van wordt <xref:System.Windows.UIElement.IsEnabled*>in afgeleide klassen.</xref:System.Windows.UIElement.IsEnabled*>"
  syntax:
    content: protected virtual bool IsEnabledCore { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element is ingeschakeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsEnabledCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsEnabledProperty
  id: IsEnabledProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsEnabledProperty
  nameWithType: UIElement.IsEnabledProperty
  fullName: System.Windows.UIElement.IsEnabledProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsEnabled*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsEnabled*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsFocused
  id: IsFocused
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsFocused
  nameWithType: UIElement.IsFocused
  fullName: System.Windows.UIElement.IsFocused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die bepaalt of dit element logische focus heeft.  Dit is een afhankelijkheidseigenschap."
  remarks: "Logische focus afwijken van de toetsenbordfocus als een toepassing meerdere focus divisies, zoals tussen menu inhoud en de rest van de toepassing heeft. In dit scenario toetsenbordfocus kan alleen worden voor één element van de gebruikersinterface van de toepassing, maar bepaalde elementen in andere afdelingen focus mogelijk nog steeds richten logische. Zie voor meer informatie over logische focus [Focus overzicht](~/add/includes/ajax-current-ext-md.md).       U stelt focus niet door deze eigenschap (dit is alleen-lezen). Dit wordt typisch gebruikt voor deze eigenschap te gebruiken als een afhankelijkheidseigenschap voor een <xref:System.Windows.Setter>of <xref:System.Windows.EventTrigger>.</xref:System.Windows.EventTrigger> </xref:System.Windows.Setter> Focus programmatisch stelt aanroepen <xref:System.Windows.UIElement.Focus%2A>.</xref:System.Windows.UIElement.Focus%2A> Focus kan ook worden ingesteld door een gebruiker of door besturingselement implementaties, waaronder mogelijk muis vastleggen gedrag.      <a name=&quot;dependencyPropertyInfo_IsFocused&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsFocusedProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsFocusedProperty>"
  example:
  - "The following example is a code handler that changes the background of a control when it is focused.  \n  \n [!code-cs[PopupSimple#IsFocused](~/add/codesnippet/csharp/PopupPropertiesSample/Window1.xaml.cs#isfocused)]  \n  \n Another common way to achieve this same effect is to place a <xref:System.Windows.Trigger> in the <xref:System.Windows.Style> of a control; this approach does not require handling specific events with code-behind and allows designers greater access to the interactive and graphical nature of the [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]. For an example, see [How to: Create an Outer Glow Effect](http://msdn.microsoft.com/en-us/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1)."
  syntax:
    content: public bool IsFocused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit element logische focus heeft; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsFocused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsFocusedProperty
  id: IsFocusedProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsFocusedProperty
  nameWithType: UIElement.IsFocusedProperty
  fullName: System.Windows.UIElement.IsFocusedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsFocused*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsFocused*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsFocusedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsHitTestVisible
  id: IsHitTestVisible
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsHitTestVisible
  nameWithType: UIElement.IsHitTestVisible
  fullName: System.Windows.UIElement.IsHitTestVisible
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een waarde die wordt aangegeven of dit element kan mogelijk worden geretourneerd als gevolg hiervan detectietest van een gedeelte van de inhoud weergegeven. Dit is een afhankelijkheidseigenschap."
  remarks: "De effectieve waarde van deze eigenschap wordt beïnvloed door de relatieve posities van treffers testable elementen in de logische structuur. Bijvoorbeeld, als een element een onderliggend element van een element dat niet detectietest zichtbaar is, blijft de effectieve waarde van de eigenschap op de onderliggende `false`, zelfs als probeert in te stellen die waarde lokaal. Daarom is het belangrijk dat u niet IsHitTestVisible ingesteld op `false` op een samengestelde besturingselement tenzij u niet wilt dat geen invoer of detectietest op dit besturingselement. Zie voor meer informatie over het testen van treffers [bereikt testen in de Visual laag](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsHitTestVisible&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsHitTestVisibleProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsHitTestVisibleProperty>"
  syntax:
    content: public bool IsHitTestVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit element kan worden geretourneerd als gevolg hiervan wordt detectietest van ten minste één punt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsHitTestVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsHitTestVisibleChanged
  id: IsHitTestVisibleChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsHitTestVisibleChanged
  nameWithType: UIElement.IsHitTestVisibleChanged
  fullName: System.Windows.UIElement.IsHitTestVisibleChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsHitTestVisible*>eigenschapswijzigingen afhankelijkheid voor dit element.</xref:System.Windows.UIElement.IsHitTestVisible*>"
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsHitTestVisibleProperty
  id: IsHitTestVisibleProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsHitTestVisibleProperty
  nameWithType: UIElement.IsHitTestVisibleProperty
  fullName: System.Windows.UIElement.IsHitTestVisibleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsHitTestVisible*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsHitTestVisible*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsInputMethodEnabled
  id: IsInputMethodEnabled
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsInputMethodEnabled
  nameWithType: UIElement.IsInputMethodEnabled
  fullName: System.Windows.UIElement.IsInputMethodEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of een systeem invoermethode, zoals een [!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)], is ingeschakeld voor het verwerken van de invoer voor dit element."
  remarks: "Deze eigenschap retourneert de waarde die wordt geretourneerd door de gekoppelde eigenschap <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName>voor de momenteel ingeschakelde invoermethoden (toetsenbord, spraak en andere apparaten).</xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInputMethodEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een invoermethode niet actief is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde van het onderliggende gekoppelde eigenschap is <xref uid=&quot;langword_csharp_true;&quot; name=&quot;true;&quot; href=&quot;&quot;> </xref> echter deze zullen worden beïnvloed door de huidige status van invoermethoden tijdens runtime."
  overload: System.Windows.UIElement.IsInputMethodEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsKeyboardFocused
  id: IsKeyboardFocused
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsKeyboardFocused
  nameWithType: UIElement.IsKeyboardFocused
  fullName: System.Windows.UIElement.IsKeyboardFocused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of dit element de focus heeft.  Dit is een afhankelijkheidseigenschap."
  remarks: "Wijzigingen in de bepaald waarde van deze eigenschap vergezeld gaan van focus-gebeurtenissen.       IsKeyboardFocused en <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>vaak worden gebruikt binnen een klasse gebeurtenis-handlers voor andere invoer-gerelateerde gebeurtenissen, bijvoorbeeld te bepalen of het element bevat al de toetsenbordfocus of aanbrengen bepalingen wanneer de muis en toetsenbordgebeurtenissen in combinatie optreden.</xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>      <a name=&quot;dependencyPropertyInfo_IsKeyboardFocused&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsKeyboardFocusedProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsKeyboardFocusedProperty>"
  syntax:
    content: public bool IsKeyboardFocused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit element heeft de toetsenbordfocus; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsKeyboardFocused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsKeyboardFocusedChanged
  id: IsKeyboardFocusedChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsKeyboardFocusedChanged
  nameWithType: UIElement.IsKeyboardFocusedChanged
  fullName: System.Windows.UIElement.IsKeyboardFocusedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsKeyboardFocused*>eigenschapswijzigingen op dit element.</xref:System.Windows.UIElement.IsKeyboardFocused*>"
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsKeyboardFocusedProperty
  id: IsKeyboardFocusedProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsKeyboardFocusedProperty
  nameWithType: UIElement.IsKeyboardFocusedProperty
  fullName: System.Windows.UIElement.IsKeyboardFocusedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsKeyboardFocused*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsKeyboardFocused*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsKeyboardFocusWithin
  id: IsKeyboardFocusWithin
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsKeyboardFocusWithin
  nameWithType: UIElement.IsKeyboardFocusWithin
  fullName: System.Windows.UIElement.IsKeyboardFocusWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee wordt een waarde die aangeeft of toetsenbordfocus overal in het element of de visuele boomstructuur onderliggende elementen.  Dit is een afhankelijkheidseigenschap."
  remarks: "Wijzigingen in de waarde van deze eigenschap verhogen doorgaans de <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>gebeurtenis, tenzij een afgeleide klasse heeft overschreven <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A>onderdrukken van de gebeurtenis.</xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> </xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>       U stelt deze eigenschap niet rechtstreeks, maar u kunt de focus instellen op een element door het aanroepen van <xref:System.Windows.UIElement.Focus%2A>, of door een <xref:System.Windows.UIElement.MoveFocus%2A>aanvraag.</xref:System.Windows.UIElement.MoveFocus%2A> </xref:System.Windows.UIElement.Focus%2A> Een van deze methodeaanroepen met deze eigenschapswaarde kan worden gewijzigd.       <xref:System.Windows.UIElement.IsKeyboardFocused%2A>en IsKeyboardFocusWithin worden doorgaans gebruikt in de klasse gebeurtenis-handlers voor andere invoer-gerelateerde gebeurtenissen, bijvoorbeeld te bepalen of het element bevat al de toetsenbordfocus of aanbrengen bepalingen wanneer de muis en toetsenbordgebeurtenissen in combinatie optreden.</xref:System.Windows.UIElement.IsKeyboardFocused%2A>      <a name=&quot;dependencyPropertyInfo_IsKeyboardFocusWithin&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>"
  syntax:
    content: public bool IsKeyboardFocusWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het toetsenbord richt zich voornamelijk op het element of de onderliggende elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsKeyboardFocusWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsKeyboardFocusWithinChanged
  id: IsKeyboardFocusWithinChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsKeyboardFocusWithinChanged
  nameWithType: UIElement.IsKeyboardFocusWithinChanged
  fullName: System.Windows.UIElement.IsKeyboardFocusWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de eigenschap IsKeyboardFocusWithinChanged gewijzigd in dit element."
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsKeyboardFocusWithinProperty
  id: IsKeyboardFocusWithinProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsKeyboardFocusWithinProperty
  nameWithType: UIElement.IsKeyboardFocusWithinProperty
  fullName: System.Windows.UIElement.IsKeyboardFocusWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsKeyboardFocusWithin*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsKeyboardFocusWithin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsManipulationEnabled
  id: IsManipulationEnabled
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsManipulationEnabled
  nameWithType: UIElement.IsManipulationEnabled
  fullName: System.Windows.UIElement.IsManipulationEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of manipulatie gebeurtenissen zijn ingeschakeld op deze <xref href=&quot;System.Windows.UIElement&quot;> </xref>."
  remarks: 'Deze eigenschap instellen op true als u wilt dat de <xref:System.Windows.UIElement>voor het ontvangen van de <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, en <xref:System.Windows.UIElement.ManipulationCompleted>gebeurtenissen.</xref:System.Windows.UIElement.ManipulationCompleted> </xref:System.Windows.UIElement.ManipulationBoundaryFeedback> </xref:System.Windows.UIElement.ManipulationInertiaStarting> </xref:System.Windows.UIElement.ManipulationDelta> </xref:System.Windows.UIElement.ManipulationStarted> </xref:System.Windows.UIElement.ManipulationStarting> </xref:System.Windows.UIElement> Zie voor meer informatie over bewerkingen, de [invoer overzicht](~/add/includes/ajax-current-ext-md.md).  Zie voor een voorbeeld van een toepassing die op bewerkingen reageert [scenario: uw eerste Touch-toepassing maken](~/add/includes/ajax-current-ext-md.md).'
  example:
  - "The following example creates an application that has a red Rectangle.  The IsManipulationEnabled property of the Rectangle is set to true and the application's window subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md).  \n  \n [!code-xml[BasicManipulation#UI](~/add/codesnippet/xaml/basicmanipulation/mainwindow.xaml#ui)]"
  syntax:
    content: public bool IsManipulationEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als manipulatie gebeurtenissen zijn ingeschakeld op deze <xref href=&quot;System.Windows.UIElement&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsManipulationEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsManipulationEnabledProperty
  id: IsManipulationEnabledProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsManipulationEnabledProperty
  nameWithType: UIElement.IsManipulationEnabledProperty
  fullName: System.Windows.UIElement.IsManipulationEnabledProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsManipulationEnabled*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsManipulationEnabled*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsManipulationEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMeasureValid
  id: IsMeasureValid
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMeasureValid
  nameWithType: UIElement.IsMeasureValid
  fullName: System.Windows.UIElement.IsMeasureValid
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of de huidige grootte die is geretourneerd door de lay-out meting geldig is."
  remarks: "U kunt afdwingen meting en -regeling voor ongeldig worden gemaakt door het aanroepen van <xref:System.Windows.UIElement.InvalidateMeasure%2A>voor dit element (of een bovenliggend element van de visuele boomstructuur).</xref:System.Windows.UIElement.InvalidateMeasure%2A> Hiermee wordt de indeling voor recomposition asynchroon tegelijk bepaald door het systeem lay-out optreedt. U kunt ook kunt u een directe aanroep van <xref:System.Windows.UIElement.UpdateLayout%2A>.</xref:System.Windows.UIElement.UpdateLayout%2A> Echter, moet u alleen aanroepen <xref:System.Windows.UIElement.UpdateLayout%2A>als is het waarschijnlijk dat er geen verdere invalidations in behandeling zijn (een groot aantal onnodig geforceerde updates hebben gevolgen voor prestaties).</xref:System.Windows.UIElement.UpdateLayout%2A>       Als IsMeasureValid `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A>moet ook `false` (door de afgedwongen logica van het proces indeling regeling mag niet geldig zonder eerst wordt geldige meting).</xref:System.Windows.UIElement.IsArrangeValid%2A>"
  syntax:
    content: public bool IsMeasureValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de meting van doorgeeft lay-out geretourneerd met een geldig en de huidige waarde; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsMeasureValid*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseCaptured
  id: IsMouseCaptured
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseCaptured
  nameWithType: UIElement.IsMouseCaptured
  fullName: System.Windows.UIElement.IsMouseCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of de muis tot dit element wordt vastgelegd.  Dit is een afhankelijkheidseigenschap."
  remarks: "Muis vastleggen status is gerelateerd aan de in-process slepen en neerzetten.      <a name=&quot;dependencyPropertyInfo_IsMouseCaptured&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsMouseCapturedProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsMouseCapturedProperty>"
  example:
  - "The following example turns the mouse capture state on or off based on whether the mouse is already captured for the element.  \n  \n If mouse capture is elsewhere, the mouse capture is set to that element. If the element had mouse capture, it is cleared by calling <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName> with a null input.  \n  \n [!code-vb[MouseSnippetSample#IsMouseCaptured](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#ismousecaptured)]\n [!code-cs[MouseSnippetSample#IsMouseCaptured](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#ismousecaptured)]"
  syntax:
    content: public bool IsMouseCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element heeft de muisvastlegging; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsMouseCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseCapturedChanged
  id: IsMouseCapturedChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseCapturedChanged
  nameWithType: UIElement.IsMouseCapturedChanged
  fullName: System.Windows.UIElement.IsMouseCapturedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsMouseCaptured*>eigenschapswijzigingen op dit element.</xref:System.Windows.UIElement.IsMouseCaptured*>"
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseCapturedProperty
  id: IsMouseCapturedProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseCapturedProperty
  nameWithType: UIElement.IsMouseCapturedProperty
  fullName: System.Windows.UIElement.IsMouseCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsMouseCaptured*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsMouseCaptured*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseCaptureWithin
  id: IsMouseCaptureWithin
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseCaptureWithin
  nameWithType: UIElement.IsMouseCaptureWithin
  fullName: System.Windows.UIElement.IsMouseCaptureWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die bepaalt of de muisvastlegging wordt vastgehouden door dit element of onderliggende elementen in de visuele boomstructuur. Dit is een afhankelijkheidseigenschap."
  remarks: "<a name=&quot;dependencyPropertyInfo_IsMouseCaptureWithin&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>"
  syntax:
    content: public bool IsMouseCaptureWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit element of een element muisvastlegging heeft; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsMouseCaptureWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseCaptureWithinChanged
  id: IsMouseCaptureWithinChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseCaptureWithinChanged
  nameWithType: UIElement.IsMouseCaptureWithinChanged
  fullName: System.Windows.UIElement.IsMouseCaptureWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref href=&quot;System.Windows.UIElement.IsMouseCaptureWithinProperty&quot;> </xref> wijzigingen in dit element."
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseCaptureWithinProperty
  id: IsMouseCaptureWithinProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseCaptureWithinProperty
  nameWithType: UIElement.IsMouseCaptureWithinProperty
  fullName: System.Windows.UIElement.IsMouseCaptureWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsMouseCaptureWithin*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsMouseCaptureWithin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseDirectlyOver
  id: IsMouseDirectlyOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseDirectlyOver
  nameWithType: UIElement.IsMouseDirectlyOver
  fullName: System.Windows.UIElement.IsMouseDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of de positie van de muisaanwijzer komt overeen met de testresultaten die element samenstellen in aanmerking nemen bereikt.  Dit is een afhankelijkheidseigenschap."
  remarks: "In tegenstelling tot <xref:System.Windows.UIElement.IsMouseOver%2A>, deze eigenschap is alleen `true` als de muisaanwijzer zich boven het letterlijke element, zoals bij een treffers test.</xref:System.Windows.UIElement.IsMouseOver%2A> Als de muisaanwijzer in plaats daarvan via een onderliggend element is, met name over de elementen die deel van een element diepere sjabloon en samenstellen uitmaken, deze eigenschap kan worden `false`. Tenzij u weet hoe een besturingselement samengestelde is (bijvoorbeeld, u deze eigenschap gebruikt in een aangepast besturingselement-sjabloon voor een besturingselement dat u definieert), deze eigenschap kan onverwachte resultaten retourneren. Gebruik voor de meeste scenario&quot;s waar u niet besturingselementen schrijft <xref:System.Windows.UIElement.IsMouseOver%2A>in plaats daarvan.</xref:System.Windows.UIElement.IsMouseOver%2A>       Als de muis wordt vastgelegd door dit element, en deze eigenschap is `true` bij vastleggen, blijft deze eigenschap om terug te keren `true` totdat muisvastlegging verloren en wordt de aanwijzer niet via de grenzen is.      <a name=&quot;dependencyPropertyInfo_IsMouseDirectlyOver&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>"
  syntax:
    content: public bool IsMouseDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de muisaanwijzer zich boven het resultaat van de dezelfde element als een detectietest; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsMouseDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseDirectlyOverChanged
  id: IsMouseDirectlyOverChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseDirectlyOverChanged
  nameWithType: UIElement.IsMouseDirectlyOverChanged
  fullName: System.Windows.UIElement.IsMouseDirectlyOverChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsMouseDirectlyOver*>eigenschapswijzigingen op dit element.</xref:System.Windows.UIElement.IsMouseDirectlyOver*>"
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseDirectlyOverProperty
  id: IsMouseDirectlyOverProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseDirectlyOverProperty
  nameWithType: UIElement.IsMouseDirectlyOverProperty
  fullName: System.Windows.UIElement.IsMouseDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsMouseDirectlyOver*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsMouseDirectlyOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseOver
  id: IsMouseOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseOver
  nameWithType: UIElement.IsMouseOver
  fullName: System.Windows.UIElement.IsMouseOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee wordt een waarde die aangeeft of de muisaanwijzer zich via dit element (inclusief onderliggende elementen in de visuele boomstructuur).  Dit is een afhankelijkheidseigenschap."
  remarks: "Besturingselementen zijn meestal samengestelde zodanig dat de verschillende elementen in het besturingselement (de visuele boomstructuur) alle voor het besturingselement met de status van de muis rapporteren wordt. Bijvoorbeeld, een <xref:System.Windows.Controls.ListBox>stijl besturingselement rapporteert IsMouseOver als `true` als de muisaanwijzer zich ergens boven de geometrie, inclusief eventuele <xref:System.Windows.Controls.ListBoxItem>.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBox>       Hoewel een vergelijkbaar &quot;IsMouseOverChanged&quot; gebeurtenis niet bestaat, is enkele soortgelijke gebeurtenissen doen. Bijvoorbeeld, kunt u verwerken <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, en <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> </xref:System.Windows.UIElement.MouseMove> </xref:System.Windows.UIElement.MouseEnter>       Als dit element de muis bevat, blijft deze eigenschap `true` totdat muisvastlegging verloren en wordt de muisaanwijzer de grenzen van het element blijft.       Sommige besturingselementen vastleggen opzettelijk de muis op bepaalde acties die worden niet rechtstreeks betrekking hebben op de muis. Dit kan leiden tot IsMouseOver wordt `true` zelfs als de muis heeft blijkbaar niet verplaatst.      <a name=&quot;dependencyPropertyInfo_IsMouseOver&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsMouseOverProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsMouseOverProperty>"
  example:
  - "The following example references this property as the property type of a <xref:System.Windows.Trigger>, part of a \\<Style.Triggers> block. If the mouse is over the control, the control text turns blue and the cursor becomes a hand.  \n  \n [!code-xml[ListViewCheckBox#Trigger](~/add/codesnippet/xaml/p-system.windows.uieleme_12_1.xaml)]\n [!code-xml[ListViewCheckBox#Trigger](~/add/codesnippet/xaml/p-system.windows.uieleme_12_1.xaml)]"
  syntax:
    content: public bool IsMouseOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de muisaanwijzer zich boven het element of de onderliggende elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsMouseOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsMouseOverProperty
  id: IsMouseOverProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsMouseOverProperty
  nameWithType: UIElement.IsMouseOverProperty
  fullName: System.Windows.UIElement.IsMouseOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsMouseOver*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsMouseOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusCaptured
  id: IsStylusCaptured
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusCaptured
  nameWithType: UIElement.IsStylusCaptured
  fullName: System.Windows.UIElement.IsStylusCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of de tekenpen is vastgelegd door dit element.  Dit is een afhankelijkheidseigenschap."
  remarks: "Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusCaptured&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsStylusCapturedProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsStylusCapturedProperty>"
  syntax:
    content: public bool IsStylusCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element tekenpen vastleggen heeft; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsStylusCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusCapturedChanged
  id: IsStylusCapturedChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusCapturedChanged
  nameWithType: UIElement.IsStylusCapturedChanged
  fullName: System.Windows.UIElement.IsStylusCapturedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsStylusCaptured*>eigenschapswijzigingen op dit element.</xref:System.Windows.UIElement.IsStylusCaptured*>"
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusCapturedProperty
  id: IsStylusCapturedProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusCapturedProperty
  nameWithType: UIElement.IsStylusCapturedProperty
  fullName: System.Windows.UIElement.IsStylusCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsStylusCaptured*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsStylusCaptured*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusCaptureWithin
  id: IsStylusCaptureWithin
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusCaptureWithin
  nameWithType: UIElement.IsStylusCaptureWithin
  fullName: System.Windows.UIElement.IsStylusCaptureWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die bepaalt of tekenpen vastleggen wordt bewaard door dit element of een element binnen de grenzen van het element en de visuele boomstructuur. Dit is een afhankelijkheidseigenschap."
  remarks: "Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [Touch invoer ondersteuning in Windows Vista](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) en [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusCaptureWithin&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>"
  syntax:
    content: public bool IsStylusCaptureWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit element of een element tekenpen vastleggen heeft; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsStylusCaptureWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusCaptureWithinChanged
  id: IsStylusCaptureWithinChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusCaptureWithinChanged
  nameWithType: UIElement.IsStylusCaptureWithinChanged
  fullName: System.Windows.UIElement.IsStylusCaptureWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsStylusCaptureWithin*>eigenschapswijzigingen op dit element.</xref:System.Windows.UIElement.IsStylusCaptureWithin*>"
  remarks: "Dit is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusCaptureWithinProperty
  id: IsStylusCaptureWithinProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusCaptureWithinProperty
  nameWithType: UIElement.IsStylusCaptureWithinProperty
  fullName: System.Windows.UIElement.IsStylusCaptureWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsStylusCaptureWithin*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsStylusCaptureWithin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusDirectlyOver
  id: IsStylusDirectlyOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusDirectlyOver
  nameWithType: UIElement.IsStylusDirectlyOver
  fullName: System.Windows.UIElement.IsStylusDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of de positie tekenpen komt overeen met de testresultaten die element samenstellen in aanmerking nemen bereikt.  Dit is een afhankelijkheidseigenschap."
  remarks: "In tegenstelling tot <xref:System.Windows.UIElement.IsStylusOver%2A>, deze eigenschap is alleen `true` als de pen op het element.</xref:System.Windows.UIElement.IsStylusOver%2A> Als de tekenpen in plaats daarvan via een onderliggend element of elementen die deel van een element diepere samenstellen (de visuele boomstructuur uitmaken), deze eigenschap kan worden `false`.       Tenzij u weet hoe een besturingselement samengestelde is (bijvoorbeeld, u deze eigenschap gebruikt in een aangepast besturingselement-sjabloon voor een besturingselement dat u definieert), deze eigenschap kan onverwachte resultaten retourneren. Gebruik voor de meeste scenario&quot;s waar u niet besturingselementen schrijft <xref:System.Windows.UIElement.IsStylusOver%2A>in plaats daarvan.</xref:System.Windows.UIElement.IsStylusOver%2A>       Als dit element tekenpen vastleggen heeft en deze eigenschap is `true` op het moment van vastleggen, blijft deze eigenschap `true` totdat tekenpen vastleggen verloren en wordt de tekenpen niet via de grenzen is.       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusDirectlyOver&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>"
  syntax:
    content: public bool IsStylusDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de tekenpen aanwijzer zich op hetzelfde resultaat element als een detectietest; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsStylusDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusDirectlyOverChanged
  id: IsStylusDirectlyOverChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusDirectlyOverChanged
  nameWithType: UIElement.IsStylusDirectlyOverChanged
  fullName: System.Windows.UIElement.IsStylusDirectlyOverChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsStylusDirectlyOver*>eigenschapswijzigingen op dit element.</xref:System.Windows.UIElement.IsStylusDirectlyOver*>"
  remarks: "Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusDirectlyOverProperty
  id: IsStylusDirectlyOverProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusDirectlyOverProperty
  nameWithType: UIElement.IsStylusDirectlyOverProperty
  fullName: System.Windows.UIElement.IsStylusDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsStylusDirectlyOver*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsStylusDirectlyOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusOver
  id: IsStylusOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusOver
  nameWithType: UIElement.IsStylusOver
  fullName: System.Windows.UIElement.IsStylusOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die aangeeft of de cursor tekenpen via dit element (inclusief visual onderliggende elementen) zich bevindt.  Dit is een afhankelijkheidseigenschap."
  remarks: "Als dit element tekenpen vastleggen heeft, blijven deze eigenschap retourneren `true` totdat tekenpen vastleggen verloren en wordt de aanwijzer zich buiten de grenzen.       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusOver&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsStylusOverProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsStylusOverProperty>"
  syntax:
    content: public bool IsStylusOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als tekenpen cursor zich boven het element of de onderliggende elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsStylusOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsStylusOverProperty
  id: IsStylusOverProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsStylusOverProperty
  nameWithType: UIElement.IsStylusOverProperty
  fullName: System.Windows.UIElement.IsStylusOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsStylusOver*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsStylusOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsVisible
  id: IsVisible
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsVisible
  nameWithType: UIElement.IsVisible
  fullName: System.Windows.UIElement.IsVisible
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee wordt een waarde die aangeeft of dit element is zichtbaar in de [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)].  Dit is een afhankelijkheidseigenschap."
  remarks: "Bepaling van de waarde IsVisible rekening met alle factoren van lay-out. Daarentegen <xref:System.Windows.UIElement.Visibility%2A>, namelijk een instelbare eigenschap geeft alleen aan de intentie programmatisch een element zichtbaar of onzichtbaar.</xref:System.Windows.UIElement.Visibility%2A>       Elementen waar IsVisible `false` niet deelnemen aan invoervelden (of opdrachten), kan niet van invloed zijn op beide de meting of schikken stadia van de indeling van, zijn niet te focussen, zijn niet in een reeks tabblad en worden niet vermeld in de treffers testen. Daarentegen elementen waar <xref:System.Windows.UIElement.IsEnabled%2A>is `false` nog steeds wordt opgenomen in de gebeurtenissen en opdrachten en treffers testen, maar zijn ook niet te focussen.</xref:System.Windows.UIElement.IsEnabled%2A>      <a name=&quot;dependencyPropertyInfo_IsVisible&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.IsVisibleProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.IsVisibleProperty>"
  syntax:
    content: public bool IsVisible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element zichtbaar; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsVisibleChanged
  id: IsVisibleChanged
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsVisibleChanged
  nameWithType: UIElement.IsVisibleChanged
  fullName: System.Windows.UIElement.IsVisibleChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsVisible*>eigenschapswijzigingen op dit element.</xref:System.Windows.UIElement.IsVisible*>"
  remarks: "Deze gebeurtenis wordt niet gestart als het element niet wordt weergegeven door het systeem lay-out voor andere doeleinden dan de waarde van de <xref:System.Windows.UIElement.IsVisible%2A>eigenschap.</xref:System.Windows.UIElement.IsVisible%2A> Het element kan bijvoorbeeld geen een visual gekoppeld.       Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.IsVisibleProperty
  id: IsVisibleProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: IsVisibleProperty
  nameWithType: UIElement.IsVisibleProperty
  fullName: System.Windows.UIElement.IsVisibleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.IsVisible*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.IsVisible*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsVisibleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.KeyDown
  id: KeyDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: KeyDown
  nameWithType: UIElement.KeyDown
  fullName: System.Windows.UIElement.KeyDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een toets wordt ingedrukt terwijl dit element de focus heeft."
  remarks: "Verwerking van communiceert met andere onderdelen platform zoals samenstelling bestuurt en tekst. De gebeurtenis KeyDown is een lager niveau tekst invoer gebeurtenis die niet werken mogelijk zoals verwacht op bepaalde besturingselementen. Dit is omdat sommige besturingselementen samenstellen besturingselement heeft of de verwerking van de klasse die een hogere versie van de tekst van biedt invoer verwerking en gerelateerde gebeurtenissen.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat de gebeurtenis KeyDown maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis KeyDown zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>      <a name=&quot;routedEventInfo_KeyDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.KeyDownEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.KeyEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewKeyDown>.</xref:System.Windows.UIElement.PreviewKeyDown> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement.KeyDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnKeyDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnKeyDown%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler KeyDown;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.KeyDownEvent
  id: KeyDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: KeyDownEvent
  nameWithType: UIElement.KeyDownEvent
  fullName: System.Windows.UIElement.KeyDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.KeyDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent KeyDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.KeyUp
  id: KeyUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: KeyUp
  nameWithType: UIElement.KeyUp
  fullName: System.Windows.UIElement.KeyUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een toets wordt losgelaten terwijl dit element de focus heeft."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat toets omhoog maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan gebeurtenissen zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>      <a name=&quot;routedEventInfo_KeyUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.KeyUpEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.KeyEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewKeyUp>.</xref:System.Windows.UIElement.PreviewKeyUp> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement.KeyUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnKeyUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnKeyUp%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler KeyUp;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.KeyUpEvent
  id: KeyUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: KeyUpEvent
  nameWithType: UIElement.KeyUpEvent
  fullName: System.Windows.UIElement.KeyUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.KeyUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent KeyUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LayoutUpdated
  id: LayoutUpdated
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LayoutUpdated
  nameWithType: UIElement.LayoutUpdated
  fullName: System.Windows.UIElement.LayoutUpdated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de indeling van de verschillende visuele elementen die zijn gekoppeld aan de huidige <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> wijzigingen."
  remarks: "Het bijwerken van een indeling kan optreden als gevolg van een wijziging van de eigenschap, het formaat van een venster of een expliciete gebruikersaanvraag.       Dit lid is een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gebeurtenis, geen gerouteerde gebeurtenis."
  syntax:
    content: public event EventHandler LayoutUpdated;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostFocus
  id: LostFocus
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostFocus
  nameWithType: UIElement.LostFocus
  fullName: System.Windows.UIElement.LostFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer dit element logische focus verliest."
  remarks: "Logische focus verschilt van de toetsenbordfocus als focus opzettelijk geforceerd op weg met behulp van een methodeaanroep van, maar de vorige toetsenbordfocus in een ander bereik bestaat. In dit scenario, toetsenbord focus blijft wanneer het is en het element waarbij een <xref:System.Windows.UIElement.Focus%2A>methode nog steeds opgehaald logische focus wordt aangeroepen.</xref:System.Windows.UIElement.Focus%2A>       Een nauwkeurigere interpretatie van deze gebeurtenis is dat deze wordt deze gebeurtenis treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsFocused%2A>eigenschap van een element in de route wordt gewijzigd van `true` naar `false`.</xref:System.Windows.UIElement.IsFocused%2A>       Omdat deze gebeurtenis doordat routering gebruikt, het element dat niet meer de focus is mogelijk een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in de gebeurtenisgegevens worden opgeslagen om te bepalen van het werkelijke element dat de focus heeft gekregen.</xref:System.Windows.RoutedEventArgs.Source%2A>      <a name=&quot;routedEventInfo_LostFocus&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.LostFocusEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.RoutedEventHandler>|      -Er is geen overeenkomende tunneling gebeurtenis.</xref:System.Windows.RoutedEventHandler> </xref:System.Windows.UIElement.LostFocusEvent>      -Overschrijven <xref:System.Windows.UIElement.OnLostFocus%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnLostFocus%2A>"
  syntax:
    content: public event System.Windows.RoutedEventHandler LostFocus;
    return:
      type: System.Windows.RoutedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostFocusEvent
  nameWithType: UIElement.LostFocusEvent
  fullName: System.Windows.UIElement.LostFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostKeyboardFocus
  id: LostKeyboardFocus
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostKeyboardFocus
  nameWithType: UIElement.LostKeyboardFocus
  fullName: System.Windows.UIElement.LostKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer het toetsenbord niet meer voor dit element is gericht."
  remarks: "Omdat deze gebeurtenis doordat routering gebruikt, het element dat de focus heeft verloren is mogelijk een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in de gebeurtenisgegevens worden opgeslagen om te bepalen van het werkelijke element dat de focus heeft verloren.</xref:System.Windows.RoutedEventArgs.Source%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat LostKeyboardFocus maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis LostKeyboardFocus zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>      <a name=&quot;routedEventInfo_LostKeyboardFocus&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.LostKeyboardFocusEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</xref:System.Windows.UIElement.PreviewLostKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement.LostKeyboardFocusEvent>      -Overschrijven <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnLostKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostKeyboardFocusEvent
  id: LostKeyboardFocusEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostKeyboardFocusEvent
  nameWithType: UIElement.LostKeyboardFocusEvent
  fullName: System.Windows.UIElement.LostKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.LostKeyboardFocus&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostMouseCapture
  id: LostMouseCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostMouseCapture
  nameWithType: UIElement.LostMouseCapture
  fullName: System.Windows.UIElement.LostMouseCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer dit element muisvastlegging verliest."
  remarks: "Wanneer een element worden vastgelegd met de muis, ontvangt deze muisinvoer zelfs als de wijzer buiten de grenzen. De muis wordt doorgaans alleen tijdens slepen en neerzetten vastgelegd.       Omdat deze gebeurtenis doordat routering gebruikt, mogelijk het element dat verliest voor het vastleggen van een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in de gebeurtenisgegevens worden opgeslagen om te bepalen van het werkelijke element dat vastleggen verloren.</xref:System.Windows.RoutedEventArgs.Source%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat LostMouseCapture maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis LostMouseCapture zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>      <a name=&quot;routedEventInfo_LostMouseCapture&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.LostMouseCaptureEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.MouseEventHandler>|      -Er is geen overeenkomende tunneling gebeurtenis gedefinieerde.</xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement.LostMouseCaptureEvent>      -Overschrijven <xref:System.Windows.UIElement.OnLostMouseCapture%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnLostMouseCapture%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler LostMouseCapture;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostMouseCaptureEvent
  id: LostMouseCaptureEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostMouseCaptureEvent
  nameWithType: UIElement.LostMouseCaptureEvent
  fullName: System.Windows.UIElement.LostMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.LostMouseCapture&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostStylusCapture
  id: LostStylusCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostStylusCapture
  nameWithType: UIElement.LostStylusCapture
  fullName: System.Windows.UIElement.LostStylusCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer dit element tekenpen vastleggen verliest."
  remarks: "Wanneer een element de tekenpen bevat, ontvangt deze tekenpeninvoer zelfs als de wijzer buiten de grenzen. De tekenpen wordt doorgaans alleen tijdens slepen en neerzetten vastgelegd.       Omdat deze gebeurtenis doordat routering gebruikt, het element dat niet meer de focus is mogelijk een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in de gebeurtenisgegevens worden opgeslagen om te bepalen van het werkelijke element dat de focus heeft verloren.</xref:System.Windows.RoutedEventArgs.Source%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat LostStylusCapture maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis LostStylusCapture zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>      <a name=&quot;routedEventInfo_LostStylusCapture&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.LostStylusCaptureEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -Er is geen overeenkomende tunneling gebeurtenis gedefinieerde.</xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.LostStylusCaptureEvent>      -Overschrijven <xref:System.Windows.UIElement.OnLostStylusCapture%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnLostStylusCapture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler LostStylusCapture;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostStylusCaptureEvent
  id: LostStylusCaptureEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostStylusCaptureEvent
  nameWithType: UIElement.LostStylusCaptureEvent
  fullName: System.Windows.UIElement.LostStylusCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.LostStylusCapture&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostTouchCapture
  id: LostTouchCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostTouchCapture
  nameWithType: UIElement.LostTouchCapture
  fullName: System.Windows.UIElement.LostTouchCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer dit element een touch-vastleggen verliest."
  remarks: "<a name=&quot;routedEventInfo_LostTouchCapture&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.LostTouchCaptureEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -Overschrijven <xref:System.Windows.UIElement.OnLostTouchCapture%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnLostTouchCapture%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.LostTouchCaptureEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> LostTouchCapture;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.LostTouchCaptureEvent
  id: LostTouchCaptureEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: LostTouchCaptureEvent
  nameWithType: UIElement.LostTouchCaptureEvent
  fullName: System.Windows.UIElement.LostTouchCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.LostTouchCapture&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationBoundaryFeedback
  id: ManipulationBoundaryFeedback
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationBoundaryFeedback
  nameWithType: UIElement.ManipulationBoundaryFeedback
  fullName: System.Windows.UIElement.ManipulationBoundaryFeedback
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een grens wordt aangetroffen bewerkingen uit te voeren."
  remarks: "<a name=&quot;routedEventInfo_ManipulationBoundaryFeedback&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.|</xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs> ManipulationBoundaryFeedback;
    return:
      type: System.EventHandler{System.Windows.Input.ManipulationBoundaryFeedbackEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  id: ManipulationBoundaryFeedbackEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationBoundaryFeedbackEvent
  nameWithType: UIElement.ManipulationBoundaryFeedbackEvent
  fullName: System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.ManipulationBoundaryFeedback&quot;> </xref> gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationCompleted
  id: ManipulationCompleted
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationCompleted
  nameWithType: UIElement.ManipulationCompleted
  fullName: System.Windows.UIElement.ManipulationCompleted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een manipulatie en traagheid op de <xref href=&quot;System.Windows.UIElement&quot;> </xref> object is voltooid."
  remarks: "U kunt deze gebeurtenis gebruiken om informatie over de bewerking is voltooid.  U kunt bijvoorbeeld de <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=fullName>eigenschap om te bepalen van de totale hoeveelheid de positie van de bewerking is gewijzigd.</xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=fullName>       Zie voor meer informatie over bewerkingen, de [invoer overzicht](~/add/includes/ajax-current-ext-md.md).  Zie voor een voorbeeld van een toepassing die op bewerkingen reageert [scenario: uw eerste Touch-toepassing maken](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_ManipulationCompleted&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.ManipulationCompletedEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.|</xref:System.Windows.Input.ManipulationCompletedEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement.ManipulationCompletedEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.ManipulationCompletedEventArgs> ManipulationCompleted;
    return:
      type: System.EventHandler{System.Windows.Input.ManipulationCompletedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationCompletedEvent
  id: ManipulationCompletedEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationCompletedEvent
  nameWithType: UIElement.ManipulationCompletedEvent
  fullName: System.Windows.UIElement.ManipulationCompletedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.ManipulationCompleted&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent ManipulationCompletedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationDelta
  id: ManipulationDelta
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationDelta
  nameWithType: UIElement.ManipulationDelta
  fullName: System.Windows.UIElement.ManipulationDelta
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het invoerapparaat positie tijdens een manipulatie wijzigt."
  remarks: "De gebeurtenis ManipulationDelta optreedt verscheidene keren wanneer de gebruiker vingers versleept over het scherm tijdens een bewerken en opnieuw wanneer traagheid plaatsvindt.  U kunt de <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A>eigenschap om te controleren of de gebeurtenis tijdens traagheid voordoet zich.</xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A>       Het element op met de gebeurtenis ManipulationDelta wordt niet beïnvloed op elke manier als de gebeurtenis.  U moet de logica voor het element dat moet worden gemanipuleerd opgeven.  De <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>en <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A>Eigenschappen die van het type <xref:System.Windows.Input.ManipulationDelta>, bevatten gegevens over hoe de positie van de bewerkingen wijzigen en geïnterpreteerd als verplaatsen, vergroten of verkleinen of wanneer u een object.</xref:System.Windows.Input.ManipulationDelta> </xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> </xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>  U die informatie van toepassing op het element dat moet worden bewerkt.       Zie voor meer informatie over bewerkingen, de [invoer overzicht](~/add/includes/ajax-current-ext-md.md).  Zie voor een voorbeeld van een toepassing die op bewerkingen reageert [scenario: uw eerste Touch-toepassing maken](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_ManipulationDelta&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.ManipulationDeltaEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.|</xref:System.Windows.Input.ManipulationDeltaEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement.ManipulationDeltaEvent>"
  example:
  - "The following example shows an event handler for the ManipulationDelta event. The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.  The example also checks whether the ManipulationDelta event occurred during inertia and whether the rectangle is touching the edge of a window.  If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md).  \n  \n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public event EventHandler<System.Windows.Input.ManipulationDeltaEventArgs> ManipulationDelta;
    return:
      type: System.EventHandler{System.Windows.Input.ManipulationDeltaEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationDeltaEvent
  id: ManipulationDeltaEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationDeltaEvent
  nameWithType: UIElement.ManipulationDeltaEvent
  fullName: System.Windows.UIElement.ManipulationDeltaEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.ManipulationDelta&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent ManipulationDeltaEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationInertiaStarting
  id: ManipulationInertiaStarting
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationInertiaStarting
  nameWithType: UIElement.ManipulationInertiaStarting
  fullName: System.Windows.UIElement.ManipulationInertiaStarting
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het apparaat contact met verliest de <xref href=&quot;System.Windows.UIElement&quot;> </xref> object tijdens een manipulatie en traagheid begint."
  remarks: "De ManipulationInertiaStarting gebeurtenis treedt op wanneer de gebruiker alle kunnen van het scherm liftonderhoud tijdens een bewerkingen uit te voeren. Bijvoorbeeld, als een gebruiker &quot;genereert&quot; een <xref:System.Windows.UIElement>over een oppervlak de gebruiker blijven het <xref:System.Windows.UIElement>verplaatsen van de vinger over het scherm voor een korte afstand om te beginnen met de actie en laat de <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement> Als de gebruiker het element loslaat, traagheid begint en de ManipulationInertiaStarting gebeurtenis.  De <xref:System.Windows.UIElement>blijft ontvangen <xref:System.Windows.UIElement.ManipulationDelta>gebeurtenissen om aan te geven dat traagheid op het element voordoet zich.</xref:System.Windows.UIElement.ManipulationDelta> </xref:System.Windows.UIElement>       Deze gebeurtenis kunt u het gedrag van de traagheid opgeven.  U kunt bijvoorbeeld instellen dat de initiële snelheid die wordt gebruikt wanneer traagheid begint.  U kunt ook de hoeveelheid traagheid opgeven met behulp van de gewenste vertraging of door de gewenste plaatsing instellen.  U kunt deze waarden voor elk type manipulatie (vertaling, uitbreiding of rotatie) onafhankelijk instellen.  Zie voor meer informatie <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>       Zie voor meer informatie over bewerkingen, de [invoer overzicht](~/add/includes/ajax-current-ext-md.md).  Zie voor een voorbeeld van een toepassing die op bewerkingen reageert [scenario: uw eerste Touch-toepassing maken](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_ManipulationInertiaStarting&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.|</xref:System.Windows.Input.ManipulationInertiaStartingEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>"
  example:
  - "The following example shows the ManipulationInertiaStarting event handler and sets the desired deceleration for translation, expansion, and rotation that is used during inertia. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md).  \n  \n [!code-cs[BasicManipulation#ManipulationInertiaStarting](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationinertiastarting)]\n [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationinertiastarting)]"
  syntax:
    content: public event EventHandler<System.Windows.Input.ManipulationInertiaStartingEventArgs> ManipulationInertiaStarting;
    return:
      type: System.EventHandler{System.Windows.Input.ManipulationInertiaStartingEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationInertiaStartingEvent
  id: ManipulationInertiaStartingEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationInertiaStartingEvent
  nameWithType: UIElement.ManipulationInertiaStartingEvent
  fullName: System.Windows.UIElement.ManipulationInertiaStartingEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.ManipulationInertiaStarting&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent ManipulationInertiaStartingEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationStarted
  id: ManipulationStarted
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationStarted
  nameWithType: UIElement.ManipulationStarted
  fullName: System.Windows.UIElement.ManipulationStarted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een invoerapparaat een manipulatie begint op de <xref href=&quot;System.Windows.UIElement&quot;> </xref> object."
  remarks: "De gebeurtenis ManipulationStarted vindt plaats nadat de <xref:System.Windows.UIElement.ManipulationStarting>gebeurtenis.</xref:System.Windows.UIElement.ManipulationStarting>  U kunt het volgende doen met de <xref:System.Windows.Input.ManipulationStartedEventArgs>:-ophalen van het element dat de manipulatie positie relatief ten opzichte met behulp van is de <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A>eigenschap.</xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> </xref:System.Windows.Input.ManipulationStartedEventArgs>      -De oorsprong van de manipulatie ophalen met behulp van de <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A>eigenschap.</xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A>      -De bewerking annuleren door het aanroepen van de <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A>methode.</xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A>       Zie voor meer informatie over bewerkingen, de [invoer overzicht](~/add/includes/ajax-current-ext-md.md).  Zie voor een voorbeeld van een toepassing die op bewerkingen reageert [scenario: uw eerste Touch-toepassing maken](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_ManipulationStarted&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.ManipulationStartedEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartedEventArgs>.|</xref:System.Windows.Input.ManipulationStartedEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement.ManipulationStartedEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.ManipulationStartedEventArgs> ManipulationStarted;
    return:
      type: System.EventHandler{System.Windows.Input.ManipulationStartedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationStartedEvent
  id: ManipulationStartedEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationStartedEvent
  nameWithType: UIElement.ManipulationStartedEvent
  fullName: System.Windows.UIElement.ManipulationStartedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.ManipulationStarted&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent ManipulationStartedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationStarting
  id: ManipulationStarting
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationStarting
  nameWithType: UIElement.ManipulationStarting
  fullName: System.Windows.UIElement.ManipulationStarting
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de processor manipulatie wordt gemaakt."
  remarks: "De gebeurtenis ManipulationStarting op een element met de <xref:System.Windows.UIElement.IsManipulationEnabled%2A>eigenschap ingesteld op `true` wanneer de gebruiker een vinger plaatst op deze</xref:System.Windows.UIElement.IsManipulationEnabled%2A> Standaard gebeurtenissen van de volgende bewerkingen uit te voeren de positie van de manipulatie ten opzichte van het element dat is gerapporteerd <xref:System.Windows.UIElement.IsManipulationEnabled%2A>ingesteld op `true`.</xref:System.Windows.UIElement.IsManipulationEnabled%2A>  U kunt opgeven dat de positie ten opzichte van een ander element door in te stellen moeten de <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>eigenschap.</xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> Bijvoorbeeld, kunt u de manipulatie ten opzichte van het bovenliggende item van het element.       U kunt ook in een gebeurtenis-handler voor ManipulationStarting het volgende doen:-opgeven of de gebruiker meer dan één vinger op de bewerkingen uit te voeren door in te stellen, moet de <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName>eigenschap.</xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=fullName>      -Geef aan welke soorten manipulatie zijn ingeschakeld door in te stellen de <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName>eigenschap in op een <xref:System.Windows.Input.ManipulationModes>opsomming.</xref:System.Windows.Input.ManipulationModes> </xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=fullName>      -Geef het draaipunt een één-vinger door in te stellen de <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName>eigenschap.</xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName>      -De bewerking annuleren door het aanroepen van de <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName>methode.</xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=fullName>       Zie voor meer informatie over bewerkingen, de [invoer overzicht](~/add/includes/ajax-current-ext-md.md).  Zie voor een voorbeeld van een toepassing die op bewerkingen reageert [scenario: uw eerste Touch-toepassing maken](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_ManipulationStarting&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.ManipulationStartingEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartingEventArgs>.|</xref:System.Windows.Input.ManipulationStartingEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement.ManipulationStartingEvent>"
  example:
  - "The following example shows the event handler for the ManipulationStarting event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> to the parent element that receives the manipulation events so that the coordinates of the manipulation are relative to the parent element.  This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md).  \n  \n [!code-cs[BasicManipulation#ManipulationStarting](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationstarting)]\n [!code-vb[BasicManipulation#ManipulationStarting](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationstarting)]"
  syntax:
    content: public event EventHandler<System.Windows.Input.ManipulationStartingEventArgs> ManipulationStarting;
    return:
      type: System.EventHandler{System.Windows.Input.ManipulationStartingEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ManipulationStartingEvent
  id: ManipulationStartingEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ManipulationStartingEvent
  nameWithType: UIElement.ManipulationStartingEvent
  fullName: System.Windows.UIElement.ManipulationStartingEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.ManipulationStarting&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent ManipulationStartingEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.Measure(System.Windows.Size)
  id: Measure(System.Windows.Size)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Measure(Size)
  nameWithType: UIElement.Measure(Size)
  fullName: System.Windows.UIElement.Measure(Size)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Updates the <>*> of a <xref href=&quot;System.Windows.UIElement&quot;></xref>. Bovenliggende elementen deze methode niet aanroepen van hun eigen <> </> *> implementaties van een recursieve indeling formulier bijwerken. Deze methode aanroept, vormt de eerste stap (de &quot;Eenheid&quot; pass) van een lay-update."
  remarks: "Berekening van de positie van de opmaak [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] bestaat van de aanroep van een meting en een <xref:System.Windows.UIElement.Arrange%2A>aanroepen.</xref:System.Windows.UIElement.Arrange%2A> Tijdens de aanroep van de meting wordt een element de vereiste grootte met behulp van een `availableSize` invoer. Tijdens de <xref:System.Windows.UIElement.Arrange%2A>aanroep van de grootte van het element is voltooid.</xref:System.Windows.UIElement.Arrange%2A>       `availableSize`is een getal van nul tot oneindige. Elementen die deel uitmaken van lay-out moeten minimaal retourneren <xref:System.Windows.Size>ze nodig hebben voor een bepaalde `availableSize`.</xref:System.Windows.Size>       Wanneer een lay-out voor het eerst wordt gestart, ontvangt het altijd een aanroep van de meting voordat <xref:System.Windows.UIElement.Arrange%2A>.</xref:System.Windows.UIElement.Arrange%2A> Echter na de eerste stap van de lay-out wordt er een <xref:System.Windows.UIElement.Arrange%2A>aanroepen zonder een meting; dit kan gebeuren wanneer een eigenschap die is alleen van invloed op <xref:System.Windows.UIElement.Arrange%2A>wordt gewijzigd (zoals uitlijning), of wanneer de bovenliggende ontvangt een <xref:System.Windows.UIElement.Arrange%2A>zonder een meting.</xref:System.Windows.UIElement.Arrange%2A> </xref:System.Windows.UIElement.Arrange%2A> </xref:System.Windows.UIElement.Arrange%2A> Een aanroep van de meting worden automatisch ongeldig een <xref:System.Windows.UIElement.Arrange%2A>aanroepen.</xref:System.Windows.UIElement.Arrange%2A>       Lay-out updates gebeuren asynchroon, zodat de hoofdthread niet op elke wijziging indeling wachten is. Opvragen van een element via code-behind controle van de waarden van eigenschappen mogelijk niet onmiddellijk wijzigingen aan de eigenschappen die in combinatie met de kenmerken sizing of lay-out (de <xref:System.Windows.FrameworkElement.Width%2A>eigenschap bijvoorbeeld).</xref:System.Windows.FrameworkElement.Width%2A>      > [!NOTE] > Indeling updates kunnen worden afgedwongen met behulp van de <xref:System.Windows.UIElement.UpdateLayout%2A>methode.</xref:System.Windows.UIElement.UpdateLayout%2A> Aanroepen van deze methode is echter meestal niet nodig en kan leiden tot slechte prestaties.       Het systeem indeling houdt twee afzonderlijke wachtrijen van ongeldige indelingen, één voor de meting en één voor <xref:System.Windows.UIElement.Arrange%2A>.</xref:System.Windows.UIElement.Arrange%2A> De wachtrij lay-out is gesorteerd op basis van de volgorde van elementen in de visuele boomstructuur van het element voor het uitvoeren van lay-out; elementen hoger in de boomstructuur zijn aan de bovenkant van de wachtrij staan, om te voorkomen dat redundante indelingen veroorzaakt door herhaalde wijzigingen in de bovenliggende items. Dubbele vermeldingen worden automatisch verwijderd uit de wachtrij en elementen worden automatisch verwijderd uit de wachtrij als ze al indeling gevalideerd.       Bij het bijwerken van de indeling van de meting wachtrij eerst wordt leeggemaakt gevolgd door de <xref:System.Windows.UIElement.Arrange%2A>wachtrij.</xref:System.Windows.UIElement.Arrange%2A> Een element in de <xref:System.Windows.UIElement.Arrange%2A>wachtrij nooit worden geordend als er een element in de wachtrij voor de meting.</xref:System.Windows.UIElement.Arrange%2A>"
  syntax:
    content: public void Measure (System.Windows.Size availableSize);
    parameters:
    - id: availableSize
      type: System.Windows.Size
      description: "De beschikbare ruimte of een onderliggend element kan worden toegewezen aan een bovenliggend element. Een onderliggend element kunt aanvragen een spatie groter is dan wat beschikbaar is. de opgegeven grootte kan worden aangepast als schuiven mogelijk in het inhoudsmodel van het huidige element is."
  overload: System.Windows.UIElement.Measure*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MeasureCore(System.Windows.Size)
  id: MeasureCore(System.Windows.Size)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MeasureCore(Size)
  nameWithType: UIElement.MeasureCore(Size)
  fullName: System.Windows.UIElement.MeasureCore(Size)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wanneer in een afgeleide klasse genegeerd, biedt de meting logica voor het aanpassen van dit element correct, waarbij rekening wordt gehouden van de grootte van de inhoud van een onderliggend element."
  remarks: "Het is vaker worden afgeleid van een element van <xref:System.Windows.FrameworkElement>plaats <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.FrameworkElement> Als u afleiding van <xref:System.Windows.FrameworkElement>, houd er rekening mee dat een onderdrukking van MeasureCore op <xref:System.Windows.FrameworkElement>de methode MeasureCore verzegeld.</xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement> Daarom overschrijven u alleen MeasureCore als een manier voor het wijzigen van lay-out meting kenmerken als u afgeleid <xref:System.Windows.UIElement>via een overname die geen <xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement> omvat</xref:System.Windows.UIElement> Dit kan het geval zijn als u probeert te bouwen van uw eigen implementatie op de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] core-niveau. Anders, als u afleiding van <xref:System.Windows.FrameworkElement>, en vervolgens de implementatie-sjabloon voor het gedrag van de meting is de <xref:System.Windows.FrameworkElement>implementatie van de.<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</xref:System.Windows.FrameworkElement.MeasureOverride%2A> </xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement>       Een bovenliggend element met onderliggende elementen moet aanroepen <xref:System.Windows.UIElement.Measure%2A>op elke onderliggende anders deze onderliggende elementen zijn niet aangepast of gerangschikte en verdwijnt effectief van lay-out.</xref:System.Windows.UIElement.Measure%2A>"
  example:
  - "A typical override of MeasureCore follows this approximate pattern (there is not a built-in collection called `VisualChildren`; `VisualChildren` is a  placeholder that represents whatever child collection your element maintains).  \n  \n [!code-cs[CorePseudocode#UIElementMeasureOverride](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#uielementmeasureoverride)]\n [!code-vb[CorePseudocode#UIElementMeasureOverride](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#uielementmeasureoverride)]  \n  \n-   You must call <xref:System.Windows.UIElement.Measure%2A> on each child element.  \n  \n-   Generally, your implementation should cache measurement information between the MeasureCore and <xref:System.Windows.UIElement.ArrangeCore%2A> method calls in the same element.  \n  \n-   Calling base implementations of MeasureCore is not required, but might be appropriate if the base implementation provides a desired layout capability.  \n  \n-   Calls to <xref:System.Windows.UIElement.Measure%2A> on child elements should pass either the same `availableSize` as the parent, or a subset of the area, depending on the type of layout the parent element supports. For example, it would be valid to remove the area for an element-specific border or padding, a scrollbar, or a custom control."
  syntax:
    content: protected virtual System.Windows.Size MeasureCore (System.Windows.Size availableSize);
    parameters:
    - id: availableSize
      type: System.Windows.Size
      description: "De beschikbare grootte die het bovenliggende element voor de onderliggende kunt toewijzen."
    return:
      type: System.Windows.Size
      description: "De gewenste grootte van dit element in de lay-out."
  overload: System.Windows.UIElement.MeasureCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseDown
  id: MouseDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseDown
  nameWithType: UIElement.MouseDown
  fullName: System.Windows.UIElement.MouseDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een muisknop wordt ingedrukt terwijl de aanwijzer zich op dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat MouseDown maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis MouseDown zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       De gebeurtenis MouseDown vaak treedt op samen met een <xref:System.Windows.UIElement.MouseLeftButtonDown>of <xref:System.Windows.UIElement.MouseRightButtonDown>, wat overeenkomt met een druk op van een van de twee standaard muisknop.</xref:System.Windows.UIElement.MouseRightButtonDown> </xref:System.Windows.UIElement.MouseLeftButtonDown> <xref:System.Windows.UIElement.MouseLeftButtonDown>en <xref:System.Windows.UIElement.MouseRightButtonDown>zijn ook gerouteerde gebeurtenissen, maar ze zijn direct gerouteerde gebeurtenissen en de juiste knop-specifieke gebeurtenis treedt op wanneer de <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>gebeurtenis bereikt dit element langs de gebeurtenisroute.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.UIElement.MouseRightButtonDown></xref:System.Windows.UIElement.MouseLeftButtonDown> Zie de opmerkingen voor <xref:System.Windows.UIElement.MouseLeftButtonDown>of <xref:System.Windows.UIElement.MouseRightButtonDown>.</xref:System.Windows.UIElement.MouseRightButtonDown> </xref:System.Windows.UIElement.MouseLeftButtonDown>      > [!IMPORTANT] > Sommige besturingselementen wellicht inherente klasse voor muis knopgebeurtenissen verwerken. De linkermuisknop ingedrukt gebeurtenis is de meest waarschijnlijke gebeurtenis te verwerken in een besturingselement klasse hebben. De klasse verwerken vaak markeert de onderliggende <xref:System.Windows.Input.Mouse>gebeurtenis klasse zoals afgehandeld.</xref:System.Windows.Input.Mouse> Zodra de gebeurtenis is gemarkeerd als verwerkt, worden de andere exemplaar handlers die zijn gekoppeld aan dat element niet normaal opgetreden. Een andere klasse- of instantienaam handlers die zijn gekoppeld aan de elementen in de richting van de doordat naar de hoofdmap in de structuur van de gebruikersinterface worden ook niet normaal gegenereerd.       U kunt het probleem dat wordt beschreven in de voorgaande belangrijk en nog steeds MouseDown gebeurtenissen voor linkermuisknop ingedrukt gebeurtenissen voor een afgeleide klasse die verwerkt is door een van deze oplossingen klasse oplossen:-handlers voor Koppel de <xref:System.Windows.UIElement.PreviewMouseDown>gebeurtenis, die niet is gemarkeerd als verwerkt door de besturingselementen.</xref:System.Windows.UIElement.PreviewMouseDown> U ziet dat omdat dit een preview-gebeurtenis is, de route wordt gestart in de hoofdmap en tunnels naar beneden op het besturingselement.      -Een handler registreren op het besturingselement procedure door het aanroepen van <xref:System.Windows.UIElement.AddHandler%2A>en kiezen van de handtekening optie waarmee luisteren naar gebeurtenissen, zelfs als deze al zijn gemarkeerd als verwerkt in de gegevens van gerouteerde gebeurtenis-handlers.</xref:System.Windows.UIElement.AddHandler%2A>      <a name=&quot;routedEventInfo_MouseDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseDownEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewMouseDown>.</xref:System.Windows.UIElement.PreviewMouseDown> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.MouseDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnMouseDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseDown%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseDownEvent
  id: MouseDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseDownEvent
  nameWithType: UIElement.MouseDownEvent
  fullName: System.Windows.UIElement.MouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseEnter
  id: MouseEnter
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseEnter
  nameWithType: UIElement.MouseEnter
  fullName: System.Windows.UIElement.MouseEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de muisaanwijzer in de grenzen van dit element."
  remarks: "MouseEnter is een die gebruikmaakt van de directe gebeurtenisafhandeling routingstrategie. Directe gerouteerde gebeurtenissen worden niet gegenereerd op een route; in plaats daarvan worden ze verwerkt in het element met dezelfde waar ze worden gegenereerd. Ze echter andere aspecten van het gedrag van gerouteerde gebeurtenis, zoals gebeurtenistriggers in stijlen inschakelen.       Hoewel MouseEnter bijgehouden wanneer de muisaanwijzer in de grenzen van een element, deze gebeurtenis meer letterlijk meldt dat de <xref:System.Windows.UIElement.IsMouseOver%2A>eigenschapswaarde is gewijzigd van `false` naar `true` voor dit element.</xref:System.Windows.UIElement.IsMouseOver%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat MouseEnter maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis MouseEnter zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>       Een <xref:System.Windows.Controls.Button>(of een <xref:System.Windows.Controls.Primitives.ButtonBase>afgeleide klasse) heeft systeemeigen verwerking voor een <xref:System.Windows.UIElement.KeyDown>gebeurtenis geactiveerd wanneer de knop focus heeft, en de toets de ruimte bar. is</xref:System.Windows.UIElement.KeyDown> </xref:System.Windows.Controls.Primitives.ButtonBase> </xref:System.Windows.Controls.Button> De verwerking van systeemeigen verhoogt de <xref:System.Windows.Controls.Primitives.ButtonBase.Click>gebeurtenis met de knop als de bron en ook de muis vastlegt, zelfs als de muisaanwijzer niet lijkt te verplaatsen.</xref:System.Windows.Controls.Primitives.ButtonBase.Click> Als gevolg van de muisvastlegging een gebeurtenis MouseEnter ook treedt op met de knop als de bron. In het algemeen als een element worden vastgelegd met de muis, klikt u vervolgens MouseEnter is gegenereerd, evenals <xref:System.Windows.UIElement.GotMouseCapture>en mogelijk andere besturingselement-specifieke gebeurtenissen.</xref:System.Windows.UIElement.GotMouseCapture>      <a name=&quot;routedEventInfo_MouseEnter&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseEnterEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnMouseEnter%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseEnter%2A> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement.MouseEnterEvent>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseEnter;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseEnterEvent
  id: MouseEnterEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseEnterEvent
  nameWithType: UIElement.MouseEnterEvent
  fullName: System.Windows.UIElement.MouseEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseEnter&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseLeave
  id: MouseLeave
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseLeave
  nameWithType: UIElement.MouseLeave
  fullName: System.Windows.UIElement.MouseLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de muisaanwijzer de grenzen van dit element verlaat."
  remarks: "MouseLeave is een die gebruikmaakt van de directe gebeurtenisafhandeling routingstrategie. Directe gerouteerde gebeurtenissen worden niet gegenereerd op een route; in plaats daarvan worden ze verwerkt in het element met dezelfde waar ze worden gegenereerd. Ze echter andere aspecten van het gedrag van gerouteerde gebeurtenis, zoals gebeurtenistriggers in stijlen inschakelen.       Hoewel MouseLeave bijgehouden wanneer de muis een element verlaat, deze gebeurtenis meer letterlijk wordt gemeld dat de <xref:System.Windows.UIElement.IsMouseOver%2A>eigenschapswaarde is gewijzigd van `true` naar `false` voor dit element.</xref:System.Windows.UIElement.IsMouseOver%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat MouseLeave maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis MouseLeave zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>      <a name=&quot;routedEventInfo_MouseLeave&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseLeaveEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnMouseLeave%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseLeave%2A> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement.MouseLeaveEvent>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseLeave;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseLeaveEvent
  id: MouseLeaveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseLeaveEvent
  nameWithType: UIElement.MouseLeaveEvent
  fullName: System.Windows.UIElement.MouseLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseLeave&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseLeftButtonDown
  id: MouseLeftButtonDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseLeftButtonDown
  nameWithType: UIElement.MouseLeftButtonDown
  fullName: System.Windows.UIElement.MouseLeftButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de linkermuisknop wordt ingedrukt terwijl de muisaanwijzer zich boven dit element."
  remarks: "Hoewel dit lijkt een doordat doorsturen via een element-structuur te volgen, is een directe gerouteerde gebeurtenis die wordt ingediend en reraised langs de element-structuur door elke <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> daadwerkelijk       Deze gebeurtenis is een van de verschillende gerelateerde gebeurtenissen die de muisknop details van een onderliggende rapporteren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>gebeurtenis is een gekoppelde gebeurtenis die wordt verwerkt door elk element langs een gebeurtenisroute.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       De gebeurtenisgegevens van deze gebeurtenis wordt de gebeurtenisgegevens van de onderliggende <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>gebeurtenis.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Als deze gebeurtenis is gemarkeerd als verwerkt op de gebeurtenisroute, worden nog steeds de muisknop ingedrukt specifieke gebeurtenissen gegenereerd; handlers van de muisknop ingedrukt specifieke gebeurtenissen moeten echter worden toegevoegd door het expliciet aanroepen <xref:System.Windows.UIElement.AddHandler%2A>, met de optie voor het afhandelen van gebeurtenissen die zijn al gemarkeerd als verwerkt, om te worden van de gebeurtenis voor listeners.</xref:System.Windows.UIElement.AddHandler%2A> Als u MouseLeftButtonDown verwerkt markeert, die u in feite markeren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>verwerkt voor alle verdere luisteraars langs de route en op alle gerelateerde gebeurtenissen.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Dit mogelijk omvat gebeurtenissen van de klasse-handler die worden gegenereerd zoals <xref:System.Windows.Controls.Control.MouseDoubleClick>.</xref:System.Windows.Controls.Control.MouseDoubleClick>       Deze gebeurtenis conceptueel gezien zien (en andere gebeurtenissen muisknop los op <xref:System.Windows.UIElement>) moet een muis &quot;service&quot; (met de servicedefinitie geleverd door de <xref:System.Windows.Input.Mouse>klasse).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement> De gebeurtenis wordt toegevoegd voor het gemak van hoeven niet controleren van de muis knopstatussen (links-rechts, pijl omhoog en omlaag) van de oorspronkelijke muisgebeurtenissen in de gebeurtenisgegevens worden opgeslagen. Voor meer geavanceerde scenario&quot;s, zoals het controleren op de status van niet-standaard knoppen, moet u mogelijk gebruik van de [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] op de <xref:System.Windows.Input.Mouse>klasse in plaats van op <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse>      > [!IMPORTANT] > Sommige klassen besturingselement wellicht inherente klasse voor muis knopgebeurtenissen verwerken. De linkermuisknop ingedrukt gebeurtenis is de meest waarschijnlijke gebeurtenis te verwerken in een besturingselement klasse hebben. De klasse verwerken vaak markeert de onderliggende <xref:System.Windows.Input.Mouse>gebeurtenis klasse zoals afgehandeld.</xref:System.Windows.Input.Mouse> Zodra de gebeurtenis is gemarkeerd als verwerkt, worden de andere exemplaar handlers die zijn gekoppeld aan dat element niet normaal opgetreden. Een andere klasse- of instantienaam handlers die zijn gekoppeld aan de elementen in de richting van de doordat naar de hoofdmap in de structuur van de gebruikersinterface worden ook niet normaal gegenereerd.       U kunt het probleem dat wordt beschreven in de voorgaande belangrijk en nog steeds MouseLeftButtonDown gebeurtenissen voor linkermuisknop ingedrukt gebeurtenissen voor een afgeleide klasse die verwerkt is door een van deze oplossingen klasse oplossen:-handlers voor Koppel de <xref:System.Windows.UIElement.PreviewMouseDown>gebeurtenis, die niet is gemarkeerd als verwerkt door de besturingselementen.</xref:System.Windows.UIElement.PreviewMouseDown> U ziet dat omdat dit een preview-gebeurtenis is, de route wordt gestart in de hoofdmap en tunnels naar beneden op het besturingselement.      -Een handler registreren op het besturingselement procedure door het aanroepen van <xref:System.Windows.UIElement.AddHandler%2A>en kiezen van de handtekening optie waarmee luisteren naar gebeurtenissen, zelfs als deze al zijn gemarkeerd als verwerkt in de gegevens van gerouteerde gebeurtenis-handlers.</xref:System.Windows.UIElement.AddHandler%2A>      <a name=&quot;routedEventInfo_MouseLeftButtonDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseLeftButtonDownEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.MouseLeftButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseLeftButtonDownEvent
  id: MouseLeftButtonDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseLeftButtonDownEvent
  nameWithType: UIElement.MouseLeftButtonDownEvent
  fullName: System.Windows.UIElement.MouseLeftButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseLeftButtonDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseLeftButtonUp
  id: MouseLeftButtonUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseLeftButtonUp
  nameWithType: UIElement.MouseLeftButtonUp
  fullName: System.Windows.UIElement.MouseLeftButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de linker muisknop wordt losgelaten terwijl de muisaanwijzer zich boven dit element."
  remarks: "Hoewel dit lijkt een doordat doorsturen via een element-structuur te volgen, is een directe gerouteerde gebeurtenis die wordt ingediend en reraised langs de element-structuur door elke <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> daadwerkelijk       Deze gebeurtenis is een van de verschillende gerelateerde gebeurtenissen die de muisknop details van een onderliggende rapporteren <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>gebeurtenis is een gekoppelde gebeurtenis die wordt verwerkt door elk element langs een gebeurtenisroute.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       De gebeurtenisgegevens van deze gebeurtenis wordt de gebeurtenisgegevens van de onderliggende <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>gebeurtenis.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Als deze gebeurtenis is gemarkeerd als verwerkt op de gebeurtenisroute, worden nog steeds de muisknop ingedrukt specifieke gebeurtenissen gegenereerd; handlers van de muisknop ingedrukt specifieke gebeurtenissen moeten echter worden toegevoegd door het expliciet aanroepen <xref:System.Windows.UIElement.AddHandler%2A>, met de optie voor het afhandelen van gebeurtenissen die zijn al gemarkeerd als verwerkt, om te worden van de gebeurtenis voor listeners.</xref:System.Windows.UIElement.AddHandler%2A> Als u MouseLeftButtonUp verwerkt markeert, die u in feite markeren <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>verwerkt voor alle verdere luisteraars langs de route en op alle gerelateerde gebeurtenissen.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       Deze gebeurtenis conceptueel gezien zien (en andere gebeurtenissen muisknop los op <xref:System.Windows.UIElement>) moet een muis &quot;service&quot; (met de servicedefinitie geleverd door de <xref:System.Windows.Input.Mouse>klasse).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement> De gebeurtenis wordt toegevoegd voor het gemak van hoeven niet controleren van de muis knopstatussen (links-rechts, pijl omhoog en omlaag) van de oorspronkelijke muisgebeurtenissen in de gebeurtenisgegevens worden opgeslagen. Voor meer geavanceerde scenario&quot;s, zoals het controleren op de status van niet-standaard knoppen, moet u mogelijk gebruik van de [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] op de <xref:System.Windows.Input.Mouse>klasse in plaats van op <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_MouseLeftButtonUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseLeftButtonUpEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.MouseLeftButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseLeftButtonUpEvent
  id: MouseLeftButtonUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseLeftButtonUpEvent
  nameWithType: UIElement.MouseLeftButtonUpEvent
  fullName: System.Windows.UIElement.MouseLeftButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseLeftButtonUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseMove
  id: MouseMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseMove
  nameWithType: UIElement.MouseMove
  fullName: System.Windows.UIElement.MouseMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de muisaanwijzer terwijl over dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat MouseMove maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis MouseMove zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>      <a name=&quot;routedEventInfo_MouseMove&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseMoveEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.MouseEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewMouseMove>.</xref:System.Windows.UIElement.PreviewMouseMove> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement.MouseMoveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnMouseMove%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseMove%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseMove;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseMoveEvent
  id: MouseMoveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseMoveEvent
  nameWithType: UIElement.MouseMoveEvent
  fullName: System.Windows.UIElement.MouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseMove&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseRightButtonDown
  id: MouseRightButtonDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseRightButtonDown
  nameWithType: UIElement.MouseRightButtonDown
  fullName: System.Windows.UIElement.MouseRightButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de rechter muisknop wordt ingedrukt terwijl de muisaanwijzer zich boven dit element."
  remarks: "Hoewel dit lijkt een doordat doorsturen via een element-structuur te volgen, is een directe gerouteerde gebeurtenis die wordt ingediend en reraised langs de element-structuur door elke <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> daadwerkelijk       Deze gebeurtenis is een van de verschillende gerelateerde gebeurtenissen die de muisknop details van een onderliggende rapporteren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>gebeurtenis is een gekoppelde gebeurtenis die wordt verwerkt door elk element langs een gebeurtenisroute.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       De gebeurtenisgegevens van deze gebeurtenis wordt de gebeurtenisgegevens van de onderliggende <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>gebeurtenis.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Als deze gebeurtenis is gemarkeerd als verwerkt op de gebeurtenisroute, worden nog steeds de muisknop ingedrukt specifieke gebeurtenissen gegenereerd; handlers van de muisknop ingedrukt specifieke gebeurtenissen moeten echter worden toegevoegd door het expliciet aanroepen <xref:System.Windows.UIElement.AddHandler%2A>, met de optie voor het afhandelen van gebeurtenissen die zijn al gemarkeerd als verwerkt, om te worden van de gebeurtenis voor listeners.</xref:System.Windows.UIElement.AddHandler%2A> Als u MouseRightButtonDown verwerkt markeert, die u in feite markeren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>verwerkt voor alle verdere luisteraars langs de route en op alle gerelateerde gebeurtenissen.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Dit mogelijk omvat gebeurtenissen van de klasse-handler die worden gegenereerd zoals <xref:System.Windows.Controls.Control.MouseDoubleClick>.</xref:System.Windows.Controls.Control.MouseDoubleClick>       Deze gebeurtenis conceptueel gezien zien (en andere gebeurtenissen muisknop los op <xref:System.Windows.UIElement>) moet een muis &quot;service&quot; (met de servicedefinitie geleverd door de <xref:System.Windows.Input.Mouse>klasse).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement> De gebeurtenis wordt toegevoegd voor het gemak van hoeven niet controleren van de muis knopstatussen (links-rechts, pijl omhoog en omlaag) van de oorspronkelijke muisgebeurtenissen in de gebeurtenisgegevens worden opgeslagen. Voor meer geavanceerde scenario&quot;s, zoals het controleren op de status van niet-standaard knoppen, moet u mogelijk gebruik van de [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] op de <xref:System.Windows.Input.Mouse>klasse in plaats van op <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse>       Systeemeigen verwerking hebben rechtermuisknop muisgebeurtenissen vaak in toepassingsscenario&quot;s. Een rechter muisknop ingedrukt kan bijvoorbeeld een contextmenu weergegeven. Zie [ContextMenu overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseRightButtonDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseRightButtonDownEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.MouseRightButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseRightButtonDownEvent
  id: MouseRightButtonDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseRightButtonDownEvent
  nameWithType: UIElement.MouseRightButtonDownEvent
  fullName: System.Windows.UIElement.MouseRightButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseRightButtonDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseRightButtonUp
  id: MouseRightButtonUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseRightButtonUp
  nameWithType: UIElement.MouseRightButtonUp
  fullName: System.Windows.UIElement.MouseRightButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de rechter muisknop wordt losgelaten terwijl de muisaanwijzer zich boven dit element."
  remarks: "Hoewel dit lijkt een doordat doorsturen via een element-structuur te volgen, is een directe gerouteerde gebeurtenis die wordt ingediend en reraised langs de element-structuur door elke <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> daadwerkelijk       Deze gebeurtenis is een van de verschillende gerelateerde gebeurtenissen die de muisknop details van een onderliggende rapporteren <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>gebeurtenis is een gekoppelde gebeurtenis die wordt verwerkt door elk element langs een gebeurtenisroute.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       De gebeurtenisgegevens van deze gebeurtenis wordt de gebeurtenisgegevens van de onderliggende <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>gebeurtenis.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Als deze gebeurtenis is gemarkeerd als verwerkt op de gebeurtenisroute, worden nog steeds de muisknop ingedrukt specifieke gebeurtenissen gegenereerd; handlers van de muisknop ingedrukt specifieke gebeurtenissen moeten echter worden toegevoegd door het expliciet aanroepen <xref:System.Windows.UIElement.AddHandler%2A>, met de optie voor het afhandelen van gebeurtenissen die zijn al gemarkeerd als verwerkt, om te worden van de gebeurtenis voor listeners.</xref:System.Windows.UIElement.AddHandler%2A> Als u MouseRightButtonUp verwerkt markeert, die u in feite markeren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>verwerkt voor alle verdere luisteraars langs de route en op alle gerelateerde gebeurtenissen.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       Deze gebeurtenis conceptueel gezien zien (en andere gebeurtenissen muisknop los op <xref:System.Windows.UIElement>) moet een muis &quot;service&quot; (met de servicedefinitie geleverd door de <xref:System.Windows.Input.Mouse>klasse).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement> De gebeurtenis wordt toegevoegd voor het gemak van hoeven niet controleren van de muis knopstatussen (links-rechts, pijl omhoog en omlaag) van de oorspronkelijke muisgebeurtenissen in de gebeurtenisgegevens worden opgeslagen. Voor meer geavanceerde scenario&quot;s, zoals het controleren op de status van niet-standaard knoppen, moet u mogelijk gebruik van de [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] op de <xref:System.Windows.Input.Mouse>klasse in plaats van op <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_MouseRightButtonUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseRightButtonUpEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.MouseRightButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseRightButtonUpEvent
  id: MouseRightButtonUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseRightButtonUpEvent
  nameWithType: UIElement.MouseRightButtonUpEvent
  fullName: System.Windows.UIElement.MouseRightButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseRightButtonUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseUp
  id: MouseUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseUp
  nameWithType: UIElement.MouseUp
  fullName: System.Windows.UIElement.MouseUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een muisknop wordt losgelaten via dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat MouseUp maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis MouseUp zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       De gebeurtenis MouseUp vaak treedt op samen met een <xref:System.Windows.UIElement.MouseLeftButtonUp>of <xref:System.Windows.UIElement.MouseRightButtonUp>, wat overeenkomt met een versie van een van de twee standaard muisknop.</xref:System.Windows.UIElement.MouseRightButtonUp> </xref:System.Windows.UIElement.MouseLeftButtonUp> <xref:System.Windows.UIElement.MouseLeftButtonUp>en <xref:System.Windows.UIElement.MouseRightButtonUp>zijn ook gerouteerde gebeurtenissen, maar ze zijn direct gerouteerde gebeurtenissen en de juiste knop-specifieke gebeurtenis treedt op wanneer de <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>gebeurtenis bereikt dit element langs de gebeurtenisroute.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.UIElement.MouseRightButtonUp></xref:System.Windows.UIElement.MouseLeftButtonUp> Zie de opmerkingen voor <xref:System.Windows.UIElement.MouseLeftButtonUp>of <xref:System.Windows.UIElement.MouseRightButtonUp>.</xref:System.Windows.UIElement.MouseRightButtonUp> </xref:System.Windows.UIElement.MouseLeftButtonUp>      <a name=&quot;routedEventInfo_MouseUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseUpEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewMouseUp>.</xref:System.Windows.UIElement.PreviewMouseUp> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.MouseUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnMouseUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseUp%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseUpEvent
  id: MouseUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseUpEvent
  nameWithType: UIElement.MouseUpEvent
  fullName: System.Windows.UIElement.MouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseWheel
  id: MouseWheel
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseWheel
  nameWithType: UIElement.MouseWheel
  fullName: System.Windows.UIElement.MouseWheel
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de gebruiker het muiswiel draait, terwijl de muisaanwijzer zich boven dit element."
  remarks: "Focus of muis vastleggen hebben voorrang op wanneer de muisaanwijzer zich; dus als u de gebeurtenis MouseWheel van een element gerichte of vastgelegd ontvangt, de muisaanwijzer daadwerkelijk mogelijk via een ander element.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat MouseWheel maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis MouseWheel zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>      <a name=&quot;routedEventInfo_MouseWheel&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.MouseWheelEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.MouseWheelEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewMouseWheel>.</xref:System.Windows.UIElement.PreviewMouseWheel> </xref:System.Windows.Input.MouseWheelEventHandler> </xref:System.Windows.UIElement.MouseWheelEvent>      -Overschrijven <xref:System.Windows.UIElement.OnMouseWheel%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnMouseWheel%2A>"
  syntax:
    content: public event System.Windows.Input.MouseWheelEventHandler MouseWheel;
    return:
      type: System.Windows.Input.MouseWheelEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MouseWheelEvent
  id: MouseWheelEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MouseWheelEvent
  nameWithType: UIElement.MouseWheelEvent
  fullName: System.Windows.UIElement.MouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.MouseWheel&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)
  id: MoveFocus(System.Windows.Input.TraversalRequest)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: MoveFocus(TraversalRequest)
  nameWithType: UIElement.MoveFocus(TraversalRequest)
  fullName: System.Windows.UIElement.MoveFocus(TraversalRequest)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pogingen om de focus van dit element verplaatst naar een ander element. De richting omlaag is opgegeven door een richting richtlijnen die binnen de organisatie van de bovenliggende visual voor dit element wordt geïnterpreteerd."
  remarks: "Zorg ervoor dat u de geretourneerde waarde van deze methode controleren. Een retourwaarde van `false` kan worden geretourneerd als het transport wordt uitgevoerd in een tabstop die is gedefinieerd in de samenstelling van een besturingselement en de aanvraag traversal niet hebt aangevraagd om in te verpakken."
  syntax:
    content: public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);
    parameters:
    - id: request
      type: System.Windows.Input.TraversalRequest
      description: "Een aanvraag traversal waarin een eigenschap die aangeeft dat ofwel een modus om te bladeren in bestaande tabvolgorde of richting visueel te verplaatsen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het aangevraagde transport is uitgevoerd. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.MoveFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  id: OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnAccessKey(AccessKeyEventArgs)
  nameWithType: UIElement.OnAccessKey(AccessKeyEventArgs)
  fullName: System.Windows.UIElement.OnAccessKey(AccessKeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor wanneer een toegangssleutel die zinvol voor dit element wordt aangeroepen."
  remarks: "Er is geen daadwerkelijke AccessKey-gebeurtenis in de <xref:System.Windows.UIElement>klasse, of elders, die u kunt verhogen of koppelen handlers for.</xref:System.Windows.UIElement> In plaats daarvan de gebeurtenis is afkomstig zijn via een klasse toegewezen manager <xref:System.Windows.Input.AccessKeyManager>, welke na alle invoer om te zoeken naar toegangstoetsen die van toepassing op het gehele invoer model processen.</xref:System.Windows.Input.AccessKeyManager>"
  syntax:
    content: protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.AccessKeyEventArgs
      description: "De gebeurtenisgegevens worden opgeslagen op de toegang tot belangrijke gebeurtenis. De gebeurtenis gegevens rapporten welke sleutel is aangeroepen en geven aan of de <xref href=&quot;System.Windows.Input.AccessKeyManager&quot;> </xref> het aanroepen van deze toegang object dat bepaalt het verzenden van deze gebeurtenissen ook verstuurd naar andere elementen."
  overload: System.Windows.UIElement.OnAccessKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  id: OnChildDesiredSizeChanged(System.Windows.UIElement)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnChildDesiredSizeChanged(UIElement)
  nameWithType: UIElement.OnChildDesiredSizeChanged(UIElement)
  fullName: System.Windows.UIElement.OnChildDesiredSizeChanged(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Ondersteunt indeling gedrag als de grootte van een onderliggend element is gewijzigd."
  remarks: "Deze methode wordt doorgaans niet aangeroepen door de toepassingscode. Deze wordt weergegeven zodat die afgeleid element klassen verdere aanbrengen kunnen controles uit op de status van hun eigen mogelijk ongeldige indeling. Klassen kunnen ook proberen optimalisaties om te minimaliseren, de verwerkingstijd voor een pass-indeling op basis van de grootte van wijzigingen in de onderliggende elementen. Het afgeleide element van een voorbeeld van de klasse die wordt geïmplementeerd OnChildDesiredSizeChanged is de <xref:System.Windows.Controls.Grid>besturingselement.</xref:System.Windows.Controls.Grid>"
  syntax:
    content: protected virtual void OnChildDesiredSizeChanged (System.Windows.UIElement child);
    parameters:
    - id: child
      type: System.Windows.UIElement
      description: "Het onderliggende element grootte wordt gewijzigd."
  overload: System.Windows.UIElement.OnChildDesiredSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnCreateAutomationPeer
  id: OnCreateAutomationPeer
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnCreateAutomationPeer()
  nameWithType: UIElement.OnCreateAutomationPeer()
  fullName: System.Windows.UIElement.OnCreateAutomationPeer()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Retourneert de klasse-specifieke <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;> </xref> implementaties voor de [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructuur."
  syntax:
    content: protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();
    parameters: []
    return:
      type: System.Windows.Automation.Peers.AutomationPeer
      description: "De type-specifieke <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;> </xref> implementatie."
  overload: System.Windows.UIElement.OnCreateAutomationPeer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  id: OnDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnDragEnter(DragEventArgs)
  nameWithType: UIElement.OnDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement.OnDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnDragEnter (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "De <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  id: OnDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnDragLeave(DragEventArgs)
  nameWithType: UIElement.OnDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement.OnDragLeave(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnDragLeave (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "De <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  id: OnDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnDragOver(DragEventArgs)
  nameWithType: UIElement.OnDragOver(DragEventArgs)
  fullName: System.Windows.UIElement.OnDragOver(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnDragOver (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "De <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  id: OnDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnDrop(DragEventArgs)
  nameWithType: UIElement.OnDrop(DragEventArgs)
  fullName: System.Windows.UIElement.OnDrop(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnDrop (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "De <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  id: OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement.OnGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);
    parameters:
    - id: e
      type: System.Windows.GiveFeedbackEventArgs
      description: "De <xref href=&quot;System.Windows.GiveFeedbackEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)
  id: OnGotFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: UIElement.OnGotFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement.OnGotFocus(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Geeft de <xref href=&quot;System.Windows.UIElement.GotFocus&quot;> </xref> gerouteerde gebeurtenis met behulp van de opgegeven gebeurtenisgegevens."
  remarks: "This method, although virtual, does have a default implementation that raises the event.  \n  \n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes. The OnGotFocus implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\* implementations, which only provide a convenient way to add class handling for that event."
  syntax:
    content: protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "Een <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> die gebeurtenisgegevens bevat. Deze gebeurtenisgegevens moet bevatten de id voor de <xref href=&quot;System.Windows.UIElement.GotFocus&quot;> </xref> gebeurtenis."
  overload: System.Windows.UIElement.OnGotFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "De <xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnGotKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  id: OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnGotMouseCapture(MouseEventArgs)
  nameWithType: UIElement.OnGotMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement.OnGotMouseCapture(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnGotMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  id: OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnGotStylusCapture(StylusEventArgs)
  nameWithType: UIElement.OnGotStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement.OnGotStylusCapture(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnGotStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  id: OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnGotTouchCapture(TouchEventArgs)
  nameWithType: UIElement.OnGotTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement.OnGotTouchCapture(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.GotTouchCapture&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer een touch tot dit element wordt vastgelegd."
  remarks: "De methode OnGotTouchCapture heeft geen standaardimplementatie. Overschrijven OnGotTouchCapture in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.GotTouchCapture>gebeurtenis.</xref:System.Windows.UIElement.GotTouchCapture> Zorg ervoor dat de basisklasse OnGotTouchCapture methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnGotTouchCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.IsKeyboardFocusedChanged&quot;> </xref> gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze virtuele methode treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsKeyboardFocused%2A>afhankelijkheid eigenschapswijzigingen.</xref:System.Windows.UIElement.IsKeyboardFocused%2A> De virtuele methode eerst wordt gegenereerd en de gebeurtenisgegevens zo nodig kunt bewerken. Vervolgens wordt de <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>gebeurtenis is opgetreden met die hetzelfde exemplaar met gebeurtenisgegevens.</xref:System.Windows.UIElement.IsKeyboardFocusedChanged> U ziet dat de <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>gebeurtenis is niet een gerouteerde gebeurtenis.</xref:System.Windows.UIElement.IsKeyboardFocusedChanged> U kan het daarom markeren als verwerkt in de klasse-handler.       Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten."
  syntax:
    content: protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "De <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnIsKeyboardFocusedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen vlak voordat de <xref href=&quot;System.Windows.UIElement.IsKeyboardFocusWithinChanged&quot;> </xref> gebeurtenis wordt geactiveerd door dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze virtuele methode treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>afhankelijkheid eigenschapswijzigingen.</xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> De virtuele methode eerst wordt gegenereerd en de gebeurtenisgegevens zo nodig kunt bewerken. Vervolgens wordt de <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>gebeurtenis is opgetreden met die hetzelfde exemplaar met gebeurtenisgegevens.</xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> U ziet dat de <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>gebeurtenis is niet een gerouteerde gebeurtenis.</xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> U kan het daarom markeren als verwerkt in de klasse-handler.       Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten."
  syntax:
    content: protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Een <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnIsKeyboardFocusWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.IsMouseCapturedChanged&quot;> </xref> gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze virtuele methode treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsMouseCaptured%2A>afhankelijkheidseigenschap verandert de waarde ervan.</xref:System.Windows.UIElement.IsMouseCaptured%2A> De virtuele methode eerst wordt gegenereerd en de gebeurtenisgegevens zo nodig kunt bewerken. Vervolgens wordt de <xref:System.Windows.UIElement.IsMouseCapturedChanged>gebeurtenis is opgetreden met die hetzelfde exemplaar met gebeurtenisgegevens.</xref:System.Windows.UIElement.IsMouseCapturedChanged> U ziet dat de gebeurtenis <xref:System.Windows.UIElement.IsMouseCapturedChanged>niet een gerouteerde gebeurtenis is. Daarom u kan niet als gemarkeerd verwerkt in de klasse-handler.</xref:System.Windows.UIElement.IsMouseCapturedChanged>       Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten."
  syntax:
    content: protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "De <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnIsMouseCapturedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.IsMouseCaptureWithinChanged&quot;> </xref> gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  syntax:
    content: protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Een <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnIsMouseCaptureWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.IsMouseDirectlyOverChanged&quot;> </xref> gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze virtuele methode treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A>afhankelijkheidseigenschap verandert de waarde ervan.</xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> De virtuele methode eerst wordt gegenereerd en de gebeurtenisgegevens zo nodig kunt bewerken. Vervolgens wordt de <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>gebeurtenis is opgetreden met die hetzelfde exemplaar met gebeurtenisgegevens.</xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> U ziet dat de <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>gebeurtenis is niet een gerouteerde gebeurtenis.</xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> U kan het daarom markeren als verwerkt in de klasse-handler.       Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten."
  syntax:
    content: protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "De <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnIsMouseDirectlyOverChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.IsStylusCapturedChanged&quot;> </xref> gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze virtuele methode treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsStylusCaptured%2A>afhankelijkheidseigenschap verandert de waarde ervan.</xref:System.Windows.UIElement.IsStylusCaptured%2A> De virtuele methode eerst wordt gegenereerd en de gebeurtenisgegevens zo nodig kunt bewerken. Vervolgens wordt de <xref:System.Windows.UIElement.IsStylusCapturedChanged>gebeurtenis is opgetreden met die hetzelfde exemplaar met gebeurtenisgegevens.</xref:System.Windows.UIElement.IsStylusCapturedChanged> U ziet dat de gebeurtenis niet een gerouteerde gebeurtenis is. U kan het daarom markeren als verwerkt in de klasse-handler.       Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten."
  syntax:
    content: protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Een <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnIsStylusCapturedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.IsStylusCaptureWithinChanged&quot;> </xref> gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze virtuele methode treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A>afhankelijkheidseigenschap verandert de waarde ervan.</xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> De virtuele methode eerst wordt gegenereerd en de gebeurtenisgegevens zo nodig kunt bewerken. Vervolgens wordt de <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged>gebeurtenis is opgetreden met die hetzelfde exemplaar met gebeurtenisgegevens.</xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> U ziet dat de gebeurtenis niet een gerouteerde gebeurtenis is. U kan het daarom markeren als verwerkt in de klasse-handler.       Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten."
  syntax:
    content: protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "De <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnIsStylusCaptureWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.IsStylusDirectlyOverChanged&quot;> </xref> gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze virtuele methode treedt op wanneer de waarde van de <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A>afhankelijkheidseigenschap verandert de waarde ervan.</xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> De virtuele methode eerst wordt gegenereerd en de gebeurtenisgegevens zo nodig kunt bewerken. Vervolgens wordt de <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged>gebeurtenis is opgetreden met die hetzelfde exemplaar met gebeurtenisgegevens.</xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> U ziet dat de gebeurtenis niet een gerouteerde gebeurtenis is. U kan het daarom markeren als verwerkt in de klasse-handler.       Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten."
  syntax:
    content: protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "De <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnIsStylusDirectlyOverChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnKeyDown(KeyEventArgs)
  nameWithType: UIElement.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement.OnKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyDown is not invoked.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "De <xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  id: OnKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnKeyUp(KeyEventArgs)
  nameWithType: UIElement.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement.OnKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyUp is not invoked.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "De <xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  id: OnLostFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: UIElement.OnLostFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement.OnLostFocus(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Geeft de <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> gerouteerde gebeurtenis met behulp van de gegevens van de gebeurtenis die is opgegeven."
  remarks: "This method, although virtual, does have a default implementation that raises the event.  \n  \n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes. This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\* implementations, which only provide a convenient way to add class handling for that event."
  syntax:
    content: protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "Een <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> die gebeurtenisgegevens bevat. Deze gebeurtenisgegevens moet bevatten de id voor de <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> gebeurtenis."
  overload: System.Windows.UIElement.OnLostFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "De <xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> die gebeurtenisgegevens bevat."
  overload: System.Windows.UIElement.OnLostKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  id: OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnLostMouseCapture(MouseEventArgs)
  nameWithType: UIElement.OnLostMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement.OnLostMouseCapture(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> die gebeurtenisgegevens bevat."
  overload: System.Windows.UIElement.OnLostMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  id: OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnLostStylusCapture(StylusEventArgs)
  nameWithType: UIElement.OnLostStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement.OnLostStylusCapture(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> die gebeurtenisgegevens bevat."
  overload: System.Windows.UIElement.OnLostStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  id: OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnLostTouchCapture(TouchEventArgs)
  nameWithType: UIElement.OnLostTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement.OnLostTouchCapture(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.LostTouchCapture&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer dit element een touch-vastleggen verliest."
  remarks: "De methode OnLostTouchCapture heeft geen standaardimplementatie. Overschrijven OnLostTouchCapture in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.LostTouchCapture>gebeurtenis.</xref:System.Windows.UIElement.LostTouchCapture> Zorg ervoor dat de basisklasse OnLostTouchCapture methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnLostTouchCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  id: OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs)
  nameWithType: UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs)
  fullName: System.Windows.UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer de <xref href=&quot;System.Windows.UIElement.ManipulationBoundaryFeedback&quot;> </xref> gebeurtenis plaatsvindt."
  remarks: "De methode OnManipulationBoundaryFeedback heeft geen standaardimplementatie. Overschrijven OnManipulationBoundaryFeedback in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>gebeurtenis.</xref:System.Windows.UIElement.ManipulationBoundaryFeedback> Zorg ervoor dat de OnManipulationBoundaryFeedback-methode van de basisklasse aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.Windows.UIElement.OnManipulationBoundaryFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  id: OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnManipulationCompleted(ManipulationCompletedEventArgs)
  nameWithType: UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs)
  fullName: System.Windows.UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer de <xref href=&quot;System.Windows.UIElement.ManipulationCompleted&quot;> </xref> gebeurtenis plaatsvindt."
  remarks: "De methode OnManipulationCompleted heeft geen standaardimplementatie. Overschrijven OnManipulationCompleted in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.ManipulationCompleted>gebeurtenis.</xref:System.Windows.UIElement.ManipulationCompleted> Zorg ervoor dat de OnManipulationCompleted-methode van de basisklasse aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnManipulationCompleted (System.Windows.Input.ManipulationCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.ManipulationCompletedEventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.Windows.UIElement.OnManipulationCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  id: OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnManipulationDelta(ManipulationDeltaEventArgs)
  nameWithType: UIElement.OnManipulationDelta(ManipulationDeltaEventArgs)
  fullName: System.Windows.UIElement.OnManipulationDelta(ManipulationDeltaEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer de <xref href=&quot;System.Windows.UIElement.ManipulationDelta&quot;> </xref> gebeurtenis plaatsvindt."
  remarks: "De methode OnManipulationDelta heeft geen standaardimplementatie. Overschrijven OnManipulationDelta in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.ManipulationDelta>gebeurtenis.</xref:System.Windows.UIElement.ManipulationDelta> Zorg ervoor dat de OnManipulationDelta-methode van de basisklasse aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnManipulationDelta (System.Windows.Input.ManipulationDeltaEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.ManipulationDeltaEventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.Windows.UIElement.OnManipulationDelta*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  id: OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs)
  nameWithType: UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs)
  fullName: System.Windows.UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer de <xref href=&quot;System.Windows.UIElement.ManipulationInertiaStarting&quot;> </xref> gebeurtenis plaatsvindt."
  remarks: "De methode OnManipulationInertiaStarting heeft geen standaardimplementatie. Overschrijven OnManipulationInertiaStarting in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.ManipulationInertiaStarting>gebeurtenis.</xref:System.Windows.UIElement.ManipulationInertiaStarting> Zorg ervoor dat de OnManipulationInertiaStarting-methode van de basisklasse aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnManipulationInertiaStarting (System.Windows.Input.ManipulationInertiaStartingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.ManipulationInertiaStartingEventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.Windows.UIElement.OnManipulationInertiaStarting*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  id: OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnManipulationStarted(ManipulationStartedEventArgs)
  nameWithType: UIElement.OnManipulationStarted(ManipulationStartedEventArgs)
  fullName: System.Windows.UIElement.OnManipulationStarted(ManipulationStartedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer de <xref href=&quot;System.Windows.UIElement.ManipulationStarted&quot;> </xref> gebeurtenis plaatsvindt."
  remarks: "De methode OnManipulationStarted heeft geen standaardimplementatie. Overschrijven OnManipulationStarted in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.ManipulationStarted>gebeurtenis.</xref:System.Windows.UIElement.ManipulationStarted> Zorg ervoor dat de OnManipulationStarted-methode van de basisklasse aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnManipulationStarted (System.Windows.Input.ManipulationStartedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.ManipulationStartedEventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.Windows.UIElement.OnManipulationStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  id: OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnManipulationStarting(ManipulationStartingEventArgs)
  nameWithType: UIElement.OnManipulationStarting(ManipulationStartingEventArgs)
  fullName: System.Windows.UIElement.OnManipulationStarting(ManipulationStartingEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.ManipulationStarting&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer de processor manipulatie eerste is gemaakt."
  remarks: "De methode OnManipulationStarting heeft geen standaardimplementatie. Overschrijven OnManipulationStarting in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.ManipulationStarting>gebeurtenis.</xref:System.Windows.UIElement.ManipulationStarting> Zorg ervoor dat de basisklasse OnManipulationStarting methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnManipulationStarting (System.Windows.Input.ManipulationStartingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.ManipulationStartingEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.ManipulationStartingEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnManipulationStarting*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event as handled, OnMouseDown is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. Deze gebeurtenisgegevens rapporteert details over de muisknop waarop is gedrukt en de status van de verwerkte."
  overload: System.Windows.UIElement.OnMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  id: OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: UIElement.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.UIElement.OnMouseEnter(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; gekoppelde gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten.       Het doel van deze methode is vergelijkbaar met de [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] gebeurtenis patroon op * methoden: deze methode biedt de mogelijkheid om de overeenkomende gebeurtenis vanuit de afgeleide klassen verwerkt door het tot stand brengen van een klasse-handler in plaats van een exemplaar-handler. In dit geval wordt de overeenkomende gebeurtenis een gerouteerde gebeurtenis, met een strategie voor directe routering. De gebeurtenis is gemarkeerd als verwerkt nog steeds gebruiken om te voorkomen dat de handlers typische exemplaar (die geen opgeeft `handledEventsToo`) niet wordt aangeroepen."
  syntax:
    content: protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnMouseEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  id: OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: UIElement.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.UIElement.OnMouseLeave(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; gekoppelde gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten.       Het doel van deze methode is vergelijkbaar met de [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] gebeurtenis patroon op * methoden: deze methode biedt de mogelijkheid om de overeenkomende gebeurtenis vanuit de afgeleide klassen verwerkt door het tot stand brengen van een klasse-handler in plaats van een exemplaar-handler. In dit geval wordt de overeenkomende gebeurtenis een gerouteerde gebeurtenis, met een strategie voor directe routering. De gebeurtenis is gemarkeerd als verwerkt nog steeds gebruiken om te voorkomen dat de handlers typische exemplaar (die geen opgeeft `handledEventsToo`) niet wordt aangeroepen."
  syntax:
    content: protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnMouseLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.MouseLeftButtonDown&quot;> </xref> gerouteerde gebeurtenis wordt geactiveerd voor dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "De <xref:System.Windows.UIElement.MouseLeftButtonDown>gebeurtenis lijkt een doordat route op reis maar daadwerkelijk wordt verzonden in een indirecte manier.</xref:System.Windows.UIElement.MouseLeftButtonDown> <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>de onderliggende gebeurtenis die wordt gerouteerd belgrootte en elke <xref:System.Windows.UIElement>langs de gebeurtenis route identiek verwerken om te verhogen van de directe gerouteerde gebeurtenis <xref:System.Windows.UIElement.MouseLeftButtonDown>.</xref:System.Windows.UIElement.MouseLeftButtonDown> gebruikt</xref:System.Windows.UIElement></xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Hoewel u wilt markeren de <xref:System.Windows.UIElement.MouseLeftButtonDown>gebeurtenis zoals verwerkt voor de doeleinden van dit element, de status van de verwerkte komt niet gehouden doordat sneller naar andere elementen langs de gebeurtenisroute.</xref:System.Windows.UIElement.MouseLeftButtonDown> Echter, u kunt de gebeurtenis niet markeren als om te voorkomen dat algemene exemplaar handlers verwerkt (die geen `handledEventsToo`) niet wordt aangeroepen.       De standaardimplementatie voor algemene muis gebeurtenisafhandeling in <xref:System.Windows.UIElement>luistert naar <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>en converteert deze naar een geschikte lokale gebeurtenis.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.UIElement> Als u deze logica overschrijven wilt, moet u een afgeleide klasse maken. In de statische constructor van de afgeleide klasse, registreert u een alternatieve klasse-handler voor <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> U kunt de muis gedrag van verwerking niet wijzigen <xref:System.Windows.UIElement>OnMouseLeftButtonDown overschrijft.</xref:System.Windows.UIElement>       U kunt ook kunt u deze methode om te wijzigen voor een specifieke muisstatus gebeurtenisafhandeling overschrijven. Of u aan te roepen de basisimplementatie kiezen, hangt af van uw scenario. Hiermee schakelt u mislukt aan te roepen base invoer verwerking van de standaard voor die muisgebeurtenis op de bovenliggende klassen die ook aan te roepen OnMouseLeftButtonDown verwacht. Bijvoorbeeld, u kunt afleiden uit <xref:System.Windows.Controls.Button>en OnMouseLeftButtonDown in uw afgeleide klasse moet worden overschreven zonder dat de basisimplementatie aangeroepen; echter Hierdoor wordt uitgeschakeld, vervangen de <xref:System.Windows.Controls.Primitives.ButtonBase.Click>gebeurtenis.</xref:System.Windows.Controls.Primitives.ButtonBase.Click> </xref:System.Windows.Controls.Button>"
  syntax:
    content: protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat de linkermuisknop ingedrukt is."
  overload: System.Windows.UIElement.OnMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.MouseLeftButtonUp&quot;> </xref> gerouteerde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "De <xref:System.Windows.UIElement.MouseLeftButtonUp>gebeurtenis lijkt een doordat route op reis maar daadwerkelijk wordt verzonden in een indirecte manier.</xref:System.Windows.UIElement.MouseLeftButtonUp> <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>de onderliggende gebeurtenis die is belgrootte doorgestuurd en elke <xref:System.Windows.UIElement>langs de gebeurtenis route identiek verwerken om te verhogen van de directe gerouteerde gebeurtenis <xref:System.Windows.UIElement.MouseLeftButtonUp>.</xref:System.Windows.UIElement.MouseLeftButtonUp> gebruikt</xref:System.Windows.UIElement></xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Hoewel u wilt markeren de <xref:System.Windows.UIElement.MouseLeftButtonUp>gebeurtenis zoals verwerkt voor de doeleinden van dit element, de status van de verwerkte komt niet gehouden doordat sneller naar andere elementen langs de gebeurtenisroute.</xref:System.Windows.UIElement.MouseLeftButtonUp> Echter, u kunt de gebeurtenis niet markeren als om te voorkomen dat algemene exemplaar handlers verwerkt (die geen `handledEventsToo`) niet wordt aangeroepen.       De standaardimplementatie voor algemene muis gebeurtenisafhandeling in <xref:System.Windows.UIElement>luistert naar <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>en converteert deze naar een geschikte lokale gebeurtenis.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> </xref:System.Windows.UIElement> Als u deze logica overschrijven wilt, moet u een afgeleide klasse maken. In de statische constructor van de afgeleide klasse, registreert u een alternatieve klasse-handler voor <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> U kunt de muis gedrag van verwerking niet wijzigen <xref:System.Windows.UIElement>OnMouseLeftButtonUp overschrijft.</xref:System.Windows.UIElement>"
  syntax:
    content: protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat de linkermuisknop werd uitgebracht."
  overload: System.Windows.UIElement.OnMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseMove(MouseEventArgs)
  nameWithType: UIElement.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement.OnMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.MouseRightButtonDown&quot;> </xref> gerouteerde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "De <xref:System.Windows.UIElement.MouseRightButtonDown>gebeurtenis lijkt een doordat route reizen maar daadwerkelijk wordt verzonden in een indirecte manier.</xref:System.Windows.UIElement.MouseRightButtonDown> <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>de onderliggende gebeurtenis die wordt gerouteerd belgrootte en elke <xref:System.Windows.UIElement>langs de gebeurtenis route identiek verwerken om te verhogen van de directe gerouteerde gebeurtenis <xref:System.Windows.UIElement.MouseRightButtonDown>.</xref:System.Windows.UIElement.MouseRightButtonDown> gebruikt</xref:System.Windows.UIElement></xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Hoewel u wilt markeren de <xref:System.Windows.UIElement.MouseRightButtonDown>gebeurtenis zoals verwerkt voor de doeleinden van dit element, de status van de verwerkte komt niet gehouden doordat sneller naar andere elementen langs de gebeurtenisroute.</xref:System.Windows.UIElement.MouseRightButtonDown> Echter, u kunt de gebeurtenis niet markeren als om te voorkomen dat algemene exemplaar handlers verwerkt (die geen `handledEventsToo`) niet wordt aangeroepen.       De standaardimplementatie voor algemene muis gebeurtenisafhandeling in <xref:System.Windows.UIElement>luistert naar <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>en converteert deze naar een geschikte lokale gebeurtenis.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.UIElement> Als u deze logica overschrijven wilt, moet u een afgeleide klasse maken. In de statische constructor van de afgeleide klasse, registreert u een alternatieve klasse-handler voor <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> U kunt de muis gedrag van verwerking niet wijzigen <xref:System.Windows.UIElement>OnMouseRightButtonDown overschrijft.</xref:System.Windows.UIElement>       U kunt ook kunt u deze methode om te wijzigen voor een specifieke muisstatus gebeurtenisafhandeling overschrijven. Of u aan te roepen de basisimplementatie kiezen, hangt af van uw scenario. Hiermee schakelt u mislukt aan te roepen base invoer verwerking van de standaard voor die muisgebeurtenis op de bovenliggende klassen die ook aan te roepen OnMouseRightButtonDown verwacht. Bijvoorbeeld, u kunt afleiden uit <xref:System.Windows.Controls.Control>en OnMouseRightButtonDown in de afgeleide klasse zonder aanroepen base overschrijven; deze onderdrukking wordt echter uitgeschakeld voor de context menu services op het besturingselement, die deel uitmaken van de <xref:System.Windows.Controls.Control>standaardgedrag.</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control>"
  syntax:
    content: protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat de rechter muisknop is ingedrukt."
  overload: System.Windows.UIElement.OnMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.MouseRightButtonUp&quot;> </xref> gerouteerde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "De <xref:System.Windows.UIElement.MouseRightButtonUp>gebeurtenis lijkt een doordat route op reis maar daadwerkelijk wordt verzonden in een indirecte manier.</xref:System.Windows.UIElement.MouseRightButtonUp> <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>de onderliggende gebeurtenis die wordt gerouteerd belgrootte en elke <xref:System.Windows.UIElement>langs de gebeurtenis route identiek verwerken om te verhogen van de directe gerouteerde gebeurtenis <xref:System.Windows.UIElement.MouseRightButtonUp>.</xref:System.Windows.UIElement.MouseRightButtonUp> gebruikt</xref:System.Windows.UIElement></xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Hoewel u wilt markeren de <xref:System.Windows.UIElement.MouseRightButtonUp>gebeurtenis zoals verwerkt voor de doeleinden van dit element, de status van de verwerkte komt niet gehouden doordat sneller naar andere elementen langs de gebeurtenisroute.</xref:System.Windows.UIElement.MouseRightButtonUp> Echter, u kunt de gebeurtenis niet markeren als om te voorkomen dat algemene exemplaar handlers verwerkt (die geen `handledEventsToo`) niet wordt aangeroepen.       De standaardimplementatie voor algemene muis gebeurtenisafhandeling in <xref:System.Windows.UIElement>luistert naar <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>en converteert deze naar een geschikte lokale gebeurtenis.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> </xref:System.Windows.UIElement> Als u deze logica overschrijven wilt, moet u een afgeleide klasse maken. In de statische constructor van de afgeleide klasse, registreert u een alternatieve klasse-handler voor <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> U kunt de muis gedrag van verwerking niet wijzigen <xref:System.Windows.UIElement>OnMouseRightButtonUp overschrijft.</xref:System.Windows.UIElement>"
  syntax:
    content: protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat de rechter muisknop is vrijgegeven."
  overload: System.Windows.UIElement.OnMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; gerouteerde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event as handled, OnMouseUp is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat de muisknop is vrijgegeven."
  overload: System.Windows.UIElement.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  id: OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement.OnMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement.OnMouseWheel(MouseWheelEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseWheelEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseWheelEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  id: OnPreviewDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewDragEnter(DragEventArgs)
  nameWithType: UIElement.OnPreviewDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "De <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  id: OnPreviewDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewDragLeave(DragEventArgs)
  nameWithType: UIElement.OnPreviewDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewDragLeave(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "De <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  id: OnPreviewDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewDragOver(DragEventArgs)
  nameWithType: UIElement.OnPreviewDragOver(DragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewDragOver(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "De <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  id: OnPreviewDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewDrop(DragEventArgs)
  nameWithType: UIElement.OnPreviewDrop(DragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewDrop(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "De <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  id: OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);
    parameters:
    - id: e
      type: System.Windows.GiveFeedbackEventArgs
      description: "De <xref href=&quot;System.Windows.GiveFeedbackEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "De <xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewGotKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewKeyDown(KeyEventArgs)
  nameWithType: UIElement.OnPreviewKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement.OnPreviewKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "De <xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  id: OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewKeyUp(KeyEventArgs)
  nameWithType: UIElement.OnPreviewKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement.OnPreviewKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "De <xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "De <xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewLostKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; gekoppelde gerouteerde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event as handled, OnPreviewMouseDown is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat een of meer muisknop is ingedrukt."
  overload: System.Windows.UIElement.OnPreviewMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.PreviewMouseLeftButtonDown&quot;> </xref> gerouteerde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "De <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>gebeurtenis lijkt een tunneling route op reis maar daadwerkelijk wordt verzonden in een indirecte manier.</xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>de onderliggende gebeurtenis die wordt gerouteerd tunnel en elke <xref:System.Windows.UIElement>langs de gebeurtenis route identiek verwerken om te verhogen van de directe gerouteerde gebeurtenis <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> gebruikt</xref:System.Windows.UIElement></xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Hoewel u wilt markeren de <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>gebeurtenis zoals verwerkt voor de doeleinden van dit element, de status van de verwerkte komt niet gehouden doordat sneller naar andere elementen langs de gebeurtenisroute.</xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> Echter, u kunt de gebeurtenis niet markeren als om te voorkomen dat algemene exemplaar handlers verwerkt (die geen `handledEventsToo`) niet wordt aangeroepen.       De standaardimplementatie voor algemene muis gebeurtenisafhandeling in <xref:System.Windows.UIElement>luistert naar <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>en converteert deze naar een geschikte lokale gebeurtenis.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> </xref:System.Windows.UIElement> Als u deze logica overschrijven wilt, moet u een afgeleide klasse maken. In de statische constructor van de afgeleide klasse, registreert u een alternatieve klasse-handler voor <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> U kunt de muis gedrag van verwerking niet wijzigen <xref:System.Windows.UIElement>OnPreviewMouseLeftButtonDown overschrijft.</xref:System.Windows.UIElement>       U kunt ook kunt u deze methode om te wijzigen voor een specifieke muisstatus gebeurtenisafhandeling overschrijven. Of u aan te roepen de basisimplementatie kiezen, hangt af van uw scenario. Hiermee schakelt u mislukt aan te roepen base invoer verwerking van de standaard voor die muisgebeurtenis op de bovenliggende klassen die ook aan te roepen OnPreviewMouseLeftButtonDown verwacht. Bijvoorbeeld, u kunt afleiden uit <xref:System.Windows.Controls.Button>en OnPreviewMouseLeftButtonDown in uw afgeleide klasse moet worden overschreven zonder dat de basisimplementatie aangeroepen; echter Hierdoor wordt uitgeschakeld, vervangen de <xref:System.Windows.Controls.Primitives.ButtonBase.Click>gebeurtenis.</xref:System.Windows.Controls.Primitives.ButtonBase.Click> </xref:System.Windows.Controls.Button>"
  syntax:
    content: protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat de linkermuisknop ingedrukt is."
  overload: System.Windows.UIElement.OnPreviewMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.PreviewMouseLeftButtonUp&quot;> </xref> gerouteerde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "De <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>gebeurtenis lijkt een tunneling route op reis maar daadwerkelijk wordt verzonden in een indirecte manier.</xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>de onderliggende gebeurtenis die wordt gerouteerd tunnel en elke <xref:System.Windows.UIElement>langs de gebeurtenis route identiek verwerken om te verhogen van de directe gerouteerde gebeurtenis <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> gebruikt</xref:System.Windows.UIElement></xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Hoewel u wilt markeren de <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>gebeurtenis zoals verwerkt voor de doeleinden van dit element, de status van de verwerkte komt niet gehouden doordat sneller naar andere elementen langs de gebeurtenisroute.</xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> Echter, u kunt de gebeurtenis niet markeren als om te voorkomen dat algemene exemplaar handlers verwerkt (die geen `handledEventsToo`) niet wordt aangeroepen.       De standaardimplementatie voor algemene muis gebeurtenisafhandeling in <xref:System.Windows.UIElement>luistert naar <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>en converteert deze naar een geschikte lokale gebeurtenis.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> </xref:System.Windows.UIElement> Als u deze logica overschrijven wilt, moet u een afgeleide klasse maken. In de statische constructor van de afgeleide klasse, registreert u een alternatieve klasse-handler voor <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> U kunt de muis gedrag van verwerking niet wijzigen <xref:System.Windows.UIElement>OnPreviewMouseLeftButtonUp overschrijft.</xref:System.Windows.UIElement>"
  syntax:
    content: protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat de linkermuisknop werd uitgebracht."
  overload: System.Windows.UIElement.OnPreviewMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewMouseMove(MouseEventArgs)
  nameWithType: UIElement.OnPreviewMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.PreviewMouseRightButtonDown&quot;> </xref> gerouteerde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "De <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>gebeurtenis lijkt een tunneling route op reis maar daadwerkelijk wordt verzonden in een indirecte manier.</xref:System.Windows.UIElement.PreviewMouseRightButtonDown> <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>de onderliggende gebeurtenis die wordt gerouteerd tunnel en elke <xref:System.Windows.UIElement>langs de gebeurtenis route identiek verwerken om te verhogen van de directe gerouteerde gebeurtenis <xref:System.Windows.UIElement.MouseRightButtonDown>.</xref:System.Windows.UIElement.MouseRightButtonDown> gebruikt</xref:System.Windows.UIElement></xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Hoewel u wilt markeren de <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>gebeurtenis zoals verwerkt voor de doeleinden van dit element, de status van de verwerkte komt niet gehouden doordat sneller naar andere elementen langs de gebeurtenisroute.</xref:System.Windows.UIElement.PreviewMouseRightButtonDown> Echter, u kunt de gebeurtenis niet markeren als om te voorkomen dat algemene exemplaar handlers verwerkt (die geen `handledEventsToo`) niet wordt aangeroepen.       De standaardimplementatie voor algemene muis gebeurtenisafhandeling in <xref:System.Windows.UIElement>luistert naar <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>en converteert deze naar een geschikte lokale gebeurtenis.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> </xref:System.Windows.UIElement> Als u deze logica overschrijven wilt, moet u een afgeleide klasse maken. In de statische constructor van de afgeleide klasse, registreert u een alternatieve klasse-handler voor <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> U kunt de muis gedrag van verwerking niet wijzigen <xref:System.Windows.UIElement>OnPreviewMouseRightButtonDown overschrijft.</xref:System.Windows.UIElement>       U kunt ook kunt u deze methode om te wijzigen voor een specifieke muisstatus gebeurtenisafhandeling overschrijven. Of u aan te roepen de basisimplementatie kiezen, hangt af van uw scenario. Hiermee schakelt u mislukt aan te roepen base invoer verwerking van de standaard voor die muisgebeurtenis op de bovenliggende klassen die ook aan te roepen OnPreviewMouseRightButtonDown verwacht. Bijvoorbeeld, u kunt afleiden uit <xref:System.Windows.Controls.Control>en OnPreviewMouseRightButtonDown in de afgeleide klasse zonder aanroepen base overschrijven; deze onderdrukking wordt echter uitgeschakeld voor de context menu services op het besturingselement, die deel uitmaken van de <xref:System.Windows.Controls.Control>standaardgedrag.</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control>"
  syntax:
    content: protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat de rechter muisknop is ingedrukt."
  overload: System.Windows.UIElement.OnPreviewMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte <xref href=&quot;System.Windows.UIElement.PreviewMouseRightButtonUp&quot;> </xref> gerouteerde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "De <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>gebeurtenis lijkt een tunneling route op reis maar daadwerkelijk wordt verzonden in een indirecte manier.</xref:System.Windows.UIElement.PreviewMouseRightButtonUp> <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>de onderliggende gebeurtenis die wordt gerouteerd tunnel en elke <xref:System.Windows.UIElement>langs de gebeurtenis route identiek verwerken om te verhogen van de directe gerouteerde gebeurtenis <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</xref:System.Windows.UIElement.PreviewMouseRightButtonUp> gebruikt</xref:System.Windows.UIElement></xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Hoewel u wilt markeren de <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>gebeurtenis zoals verwerkt voor de doeleinden van dit element, de status van de verwerkte komt niet gehouden doordat sneller naar andere elementen langs de gebeurtenisroute.</xref:System.Windows.UIElement.PreviewMouseRightButtonUp> Echter, u kunt de gebeurtenis niet markeren als om te voorkomen dat algemene exemplaar handlers verwerkt (die geen `handledEventsToo`) niet wordt aangeroepen.       De standaardimplementatie voor algemene muis gebeurtenisafhandeling in <xref:System.Windows.UIElement>luistert naar <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>en converteert deze naar een geschikte lokale gebeurtenis.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> </xref:System.Windows.UIElement> Als u deze logica overschrijven wilt, moet u een afgeleide klasse maken. In de statische constructor van de afgeleide klasse, registreert u een alternatieve klasse-handler voor <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> U kunt de muis gedrag van verwerking niet wijzigen <xref:System.Windows.UIElement>OnPreviewMouseRightButtonUp overschrijft.</xref:System.Windows.UIElement>"
  syntax:
    content: protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat de rechter muisknop is vrijgegeven."
  overload: System.Windows.UIElement.OnPreviewMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event as handled, OnPreviewMouseUp is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen. De gebeurtenisgegevens rapporteert dat een of meer muisknop zijn uitgebracht."
  overload: System.Windows.UIElement.OnPreviewMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  id: OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement.OnPreviewMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseWheel(MouseWheelEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseWheelEventArgs
      description: "De <xref href=&quot;System.Windows.Input.MouseWheelEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  id: OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.QueryContinueDragEventArgs
      description: "De <xref href=&quot;System.Windows.QueryContinueDragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  id: OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewStylusButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  id: OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewStylusButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  id: OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewStylusDown(StylusDownEventArgs)
  nameWithType: UIElement.OnPreviewStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusDown(StylusDownEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusDownEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusDownEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewStylusDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusInAirMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewStylusInAirMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewStylusInRange(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusInRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewStylusInRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewStylusMove(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewStylusMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusOutOfRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewStylusOutOfRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  id: OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusSystemGestureEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusSystemGestureEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewStylusSystemGesture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewStylusUp(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusUp(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewStylusUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  id: OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewTextInput(TextCompositionEventArgs)
  nameWithType: UIElement.OnPreviewTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement.OnPreviewTextInput(TextCompositionEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TextCompositionEventArgs
      description: "De <xref href=&quot;System.Windows.Input.TextCompositionEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewTextInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewTouchDown(TouchEventArgs)
  nameWithType: UIElement.OnPreviewTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement.OnPreviewTouchDown(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.PreviewTouchDown&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer een touch dit element indrukt."
  remarks: "De methode OnPreviewTouchDown heeft geen standaardimplementatie. Overschrijven OnPreviewTouchDown in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.PreviewTouchDown>gebeurtenis.</xref:System.Windows.UIElement.PreviewTouchDown> Zorg ervoor dat de basisklasse OnPreviewTouchDown methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewTouchDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewTouchMove(TouchEventArgs)
  nameWithType: UIElement.OnPreviewTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement.OnPreviewTouchMove(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.PreviewTouchMove&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer een touch verplaatst terwijl ze zich in dit element."
  remarks: "De methode OnPreviewTouchMove heeft geen standaardimplementatie. Overschrijven OnPreviewTouchMove in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.PreviewTouchMove>gebeurtenis.</xref:System.Windows.UIElement.PreviewTouchMove> Zorg ervoor dat de basisklasse OnPreviewTouchMove methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewTouchMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnPreviewTouchUp(TouchEventArgs)
  nameWithType: UIElement.OnPreviewTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement.OnPreviewTouchUp(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.PreviewTouchUp&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer er een touch binnen dit element wordt uitgebracht."
  remarks: "De methode OnPreviewTouchUp heeft geen standaardimplementatie. Overschrijven OnPreviewTouchUp in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.PreviewTouchUp>gebeurtenis.</xref:System.Windows.UIElement.PreviewTouchUp> Zorg ervoor dat de basisklasse OnPreviewTouchUp methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnPreviewTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  id: OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.QueryContinueDragEventArgs
      description: "De <xref href=&quot;System.Windows.QueryContinueDragEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  id: OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnQueryCursor(QueryCursorEventArgs)
  nameWithType: UIElement.OnQueryCursor(QueryCursorEventArgs)
  fullName: System.Windows.UIElement.OnQueryCursor(QueryCursorEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.QueryCursorEventArgs
      description: "De <xref href=&quot;System.Windows.Input.QueryCursorEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnQueryCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)
  id: OnRender(System.Windows.Media.DrawingContext)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnRender(DrawingContext)
  nameWithType: UIElement.OnRender(DrawingContext)
  fullName: System.Windows.UIElement.OnRender(DrawingContext)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wanneer dit wordt genegeerd in een afgeleide klasse, deel uitmaakt van rendering bewerkingen die door het systeem lay-out worden omgeleid. De rendering instructies voor dit element rechtstreeks wanneer deze methode wordt opgeroepen, niet worden gebruikt en in plaats daarvan worden behouden voor later asynchrone gebruik door indeling en de tekening wordt gemaakt."
  remarks: "Deze methode heeft geen standaardimplementatie in de <xref:System.Windows.UIElement>klasse.</xref:System.Windows.UIElement>"
  example:
  - "The following code example shows a possible implementation for a panel derived class.  \n  \n [!code-vb[LightWeightCustomPanel#1](~/add/codesnippet/visualbasic/light_custom_panel_vb/offsetpanel.vb#1)]\n [!code-cs[LightWeightCustomPanel#1](~/add/codesnippet/csharp/Light_Custom_Panel_csharp/OffsetPanel.cs#1)]"
  syntax:
    content: protected virtual void OnRender (System.Windows.Media.DrawingContext drawingContext);
    parameters:
    - id: drawingContext
      type: System.Windows.Media.DrawingContext
      description: "De tekening instructies voor een specifiek element. Deze context wordt geleverd aan de lay-out-systeem."
  overload: System.Windows.UIElement.OnRender*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  id: OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnRenderSizeChanged(SizeChangedInfo)
  nameWithType: UIElement.OnRenderSizeChanged(SizeChangedInfo)
  fullName: System.Windows.UIElement.OnRenderSizeChanged(SizeChangedInfo)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wanneer dit wordt genegeerd in een afgeleide klasse, deel uitmaakt van rendering bewerkingen die door het systeem lay-out worden omgeleid. Deze methode wordt aangeroepen nadat de lay-out is bijgewerkt, en voordat de rendering als van het element <xref:System.Windows.UIElement.RenderSize*>als gevolg van lay-update is gewijzigd.</xref:System.Windows.UIElement.RenderSize*>"
  remarks: "Deze methode heeft geen standaardimplementatie. Een typische WPF-framework niveau element gebruikt de onderdrukking implementatie vanuit <xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement> De <xref:System.Windows.FrameworkElement>implementatie ongeldig de <xref:System.Windows.FrameworkElement.Width%2A>en <xref:System.Windows.FrameworkElement.Height%2A>Eigenschappen en de basisprincipes van opnieuw maken van de lay-out-ingangen.</xref:System.Windows.FrameworkElement.Height%2A> </xref:System.Windows.FrameworkElement.Width%2A> </xref:System.Windows.FrameworkElement> Overschrijven OnRenderSizeChanged op de <xref:System.Windows.UIElement>niveau betekent dat uw implementatie element opzettelijk geen gebruik van de implementatie van de framework-niveau WPF maakt en daarom uw element indeling logica meer direct doorgaans verwerken moet door het schrijven van een lay-out vervangend.</xref:System.Windows.UIElement>"
  syntax:
    content: protected virtual void OnRenderSizeChanged (System.Windows.SizeChangedInfo info);
    parameters:
    - id: info
      type: System.Windows.SizeChangedInfo
      description: "De verpakte parameters (<xref href=&quot;System.Windows.SizeChangedInfo&quot;></xref>), waaronder oude en nieuwe grootten en die daadwerkelijk wijzigingen dimensie."
  overload: System.Windows.UIElement.OnRenderSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  id: OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement.OnStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement.OnStylusButtonDown(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  id: OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement.OnStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement.OnStylusButtonUp(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  id: OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusDown(StylusDownEventArgs)
  nameWithType: UIElement.OnStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement.OnStylusDown(StylusDownEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusDownEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusDownEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  id: OnStylusEnter(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusEnter(StylusEventArgs)
  nameWithType: UIElement.OnStylusEnter(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusEnter(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; gekoppelde gebeurtenis wordt geactiveerd door dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten.       Het doel van deze methode is vergelijkbaar met [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] gebeurtenis patroon op * methoden: deze methode biedt de mogelijkheid om de overeenkomende gebeurtenis vanuit de afgeleide klassen verwerkt door het tot stand brengen van een klasse-handler in plaats van een exemplaar-handler. In dit geval wordt de overeenkomende gebeurtenis een gerouteerde gebeurtenis. De gebeurtenis is gemarkeerd als verwerkt is nog steeds nuttig voor het verhinderen van typische exemplaar handlers (die geen opgeeft `handledEventsToo`) niet wordt aangeroepen."
  syntax:
    content: protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  id: OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement.OnStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusInAirMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusInAirMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  id: OnStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusInRange(StylusEventArgs)
  nameWithType: UIElement.OnStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusInRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusInRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  id: OnStylusLeave(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusLeave(StylusEventArgs)
  nameWithType: UIElement.OnStylusLeave(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusLeave(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; gekoppelde gebeurtenis wordt geactiveerd door dit element. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "Deze methode heeft geen standaardimplementatie. Omdat een tussenklasse in de overname deze methode implementeert kan, wordt u aangeraden dat u de basisimplementatie in uw implementatie aanroepen. U kunt aanroepen base vóór of na de speciale verwerking afhankelijk van uw vereisten.       Het doel van deze methode is vergelijkbaar met [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] gebeurtenis patroon op * methoden: deze methode biedt de mogelijkheid om de overeenkomende gebeurtenis vanuit de afgeleide klassen verwerkt door het tot stand brengen van een klasse-handler in plaats van een exemplaar-handler. In dit geval wordt de overeenkomende gebeurtenis een gerouteerde gebeurtenis. De gebeurtenis is gemarkeerd als verwerkt is nog steeds nuttig voor het verhinderen van typische exemplaar handlers (die geen opgeeft `handledEventsToo`) niet wordt aangeroepen."
  syntax:
    content: protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  id: OnStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusMove(StylusEventArgs)
  nameWithType: UIElement.OnStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  id: OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement.OnStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusOutOfRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusOutOfRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  id: OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusSystemGestureEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusSystemGestureEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusSystemGesture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  id: OnStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnStylusUp(StylusEventArgs)
  nameWithType: UIElement.OnStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusUp(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "De <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnStylusUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  id: OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnTextInput(TextCompositionEventArgs)
  nameWithType: UIElement.OnTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement.OnTextInput(TextCompositionEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer een niet-verwerkte &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; gekoppelde gebeurtenis een element in de route die is afgeleid van deze klasse is bereikt. Implementeer deze methode om toe te voegen klasse verwerking voor deze gebeurtenis."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TextCompositionEventArgs
      description: "De <xref href=&quot;System.Windows.Input.TextCompositionEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnTextInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  id: OnTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnTouchDown(TouchEventArgs)
  nameWithType: UIElement.OnTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchDown(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.TouchDown&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer een touch binnen dit element indrukt."
  remarks: "De methode OnTouchDown heeft geen standaardimplementatie. Overschrijven OnTouchDown in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.TouchDown>gebeurtenis.</xref:System.Windows.UIElement.TouchDown> Zorg ervoor dat de basisklasse OnTouchDown methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnTouchDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  id: OnTouchEnter(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnTouchEnter(TouchEventArgs)
  nameWithType: UIElement.OnTouchEnter(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchEnter(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.TouchEnter&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer een touch wordt verplaatst van buiten naar binnen de grenzen van dit element."
  remarks: "TheOnTouchEnter methode heeft geen standaardimplementatie. Overschrijven OnTouchEnter in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.TouchEnter>gebeurtenis.</xref:System.Windows.UIElement.TouchEnter> Zorg ervoor dat de basisklasse OnTouchEnter methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnTouchEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  id: OnTouchLeave(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnTouchLeave(TouchEventArgs)
  nameWithType: UIElement.OnTouchLeave(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchLeave(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.TouchLeave&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer een touch wordt verplaatst van binnen naar buiten de grenzen van dit <xref href=&quot;System.Windows.UIElement&quot;> </xref>."
  remarks: "De methode OnTouchLeave heeft geen standaardimplementatie. Overschrijven OnTouchLeave in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.TouchLeave>gebeurtenis.</xref:System.Windows.UIElement.TouchLeave> Zorg ervoor dat de basisklasse OnTouchLeave methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnTouchLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  id: OnTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnTouchMove(TouchEventArgs)
  nameWithType: UIElement.OnTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchMove(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.TouchMove&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer een touch verplaatst terwijl ze zich in dit element."
  remarks: "De methode OnTouchMove heeft geen standaardimplementatie. Overschrijven OnTouchMove in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.TouchMove>gebeurtenis.</xref:System.Windows.UIElement.TouchMove> Zorg ervoor dat de basisklasse OnTouchMove methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnTouchMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  id: OnTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnTouchUp(TouchEventArgs)
  nameWithType: UIElement.OnTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchUp(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Biedt klasse verwerking voor de <xref href=&quot;System.Windows.UIElement.TouchUp&quot;> </xref> gerouteerde gebeurtenis die optreedt wanneer er een touch binnen dit element wordt uitgebracht."
  remarks: "De methode OnTouchUp heeft geen standaardimplementatie. Overschrijven OnTouchUp in een afgeleide klasse voor het afhandelen van de <xref:System.Windows.UIElement.TouchUp>gebeurtenis.</xref:System.Windows.UIElement.TouchUp> Zorg ervoor dat de basisklasse OnTouchUp methode aanroept, zodat de gebeurtenis basisklassen ontvangt."
  syntax:
    content: protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "Een <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Windows.UIElement.OnTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)
  id: OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: UIElement.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.UIElement.OnVisualParentChanged(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Aangeroepen wanneer het bovenliggende element van dit <xref href=&quot;System.Windows.UIElement&quot;> </xref> meldt een wijziging aan de onderliggende visual bovenliggende."
  syntax:
    content: protected override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);
    parameters:
    - id: oldParent
      type: System.Windows.DependencyObject
      description: "De vorige bovenliggende. Dit kan worden opgegeven als <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> heeft een bovenliggend element niet eerder hebt."
  overload: System.Windows.UIElement.OnVisualParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.Opacity
  id: Opacity
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Opacity
  nameWithType: UIElement.Opacity
  fullName: System.Windows.UIElement.Opacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van de factor dekking die wordt toegepast op de gehele <xref href=&quot;System.Windows.UIElement&quot;> </xref> wanneer deze wordt weergegeven in de [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)].  Dit is een afhankelijkheidseigenschap."
  remarks: "De standaardwaarde 1.0 is de standaardwaarde geleverd door de aanvankelijke metagegevens van deze afhankelijkheidseigenschap van de <xref:System.Windows.UIElement>klasse.</xref:System.Windows.UIElement> Andere afgeleide klassen kunnen deze standaardwaarde mogelijk wijzigen door het overschrijven van de metagegevens van binnen hun klassen-constructor.       De waarde van de dekking niet worden toegepast op werkelijke lay-out, tenzij het element ook weergegeven wordt (<xref:System.Windows.UIElement.IsVisible%2A> is `true`).</xref:System.Windows.UIElement.IsVisible%2A>       Ondoorzichtigheid van bovenliggende elementen op element boomstructuur wordt toegepast op onderliggende elementen, maar er zijn niet zichtbaar gevolgen van de instellingen voor geneste dekking aangegeven in de eigenschapwaarde van afzonderlijke onderliggende elementen. Bijvoorbeeld, als een lijst een dekking 50% (0,5 heeft) en een lijst met items een eigen dekking ingesteld op 20% (0,2 heeft), worden net zichtbaar ondoorzichtigheid voor dit item in de lijst weergegeven alsof deze 10% (0,1) zijn, maar de waarde van de eigenschap van het lijstitem dekking eigenschap nog steeds 0,2 wordt wanneer een query uitgevoerd.       Zelfs als de dekking gedeclareerd of geëvalueerde 0 is, een element nog steeds deel uitmaakt van de invoer gebeurtenissen en opdrachten en is mogelijk te focussen. Dit aspect kan nuttig, dat bijvoorbeeld kunt u een object dekking nul (zoals een vorm) voor het maskeren van onderliggende objecten met transparante elementen zijn. Het object dekking nul kan vervolgens alle invoer voor een onderliggende gebied verwerking van gebeurtenissen verwerken. Echter, de `Background` of `Fill` van het object of de vorm moet worden ingesteld op een waarde, zelfs als deze <xref:System.Windows.Media.Brushes.Transparent%2A>, anders treffers testen is niet ingeschakeld en er zijn geen gebeurtenissen worden ontvangen.</xref:System.Windows.Media.Brushes.Transparent%2A>      <a name=&quot;dependencyPropertyInfo_Opacity&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.OpacityProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.OpacityProperty>"
  syntax:
    content: public double Opacity { get; set; }
    return:
      type: System.Double
      description: "De factor dekking. Ondoorzichtigheid van de standaardwaarde is 1.0. Verwachte waarden liggen tussen 0,0 en 1,0 liggen."
  overload: System.Windows.UIElement.Opacity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OpacityMask
  id: OpacityMask
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OpacityMask
  nameWithType: UIElement.OpacityMask
  fullName: System.Windows.UIElement.OpacityMask
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een dekkingsmasker als een <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> implementatie dat maskering alfa-kanaal voor de gerenderde inhoud van dit element wordt toegepast.  Dit is een afhankelijkheidseigenschap."
  remarks: "Deze eigenschap wordt alleen gebruikt ongeacht de waarde alpha-kanaal is voor de opgegeven <xref:System.Windows.Media.Brush>.</xref:System.Windows.Media.Brush> De andere kanalen van de <xref:System.Windows.Media.Brush>de inhoud (rode, blauwe of groene) weergegeven, worden genegeerd.</xref:System.Windows.Media.Brush>       De meest voorkomende <xref:System.Windows.Media.Brush>voor dit doel is een <xref:System.Windows.Media.ImageBrush>, die kan worden gebruikt voor een verscheidenheid aan photo dat maskering technieken zoals een vignet.</xref:System.Windows.Media.ImageBrush> </xref:System.Windows.Media.Brush> Maar gedefinieerde <xref:System.Windows.Media.Brush>(zoals <xref:System.Windows.Media.LinearGradientBrush>) kunnen worden gebruikt.</xref:System.Windows.Media.LinearGradientBrush> </xref:System.Windows.Media.Brush>       In [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], waarde van deze eigenschap kunt gebruiken een inline-syntaxis die specifiek is voor elke implementatie van de <xref:System.Windows.Media.Brush>abstracte klasse.</xref:System.Windows.Media.Brush> Zie voor meer informatie [tekenen met effen kleuren en verlopen overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_OpacityMask&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.OpacityMaskProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.OpacityMaskProperty>"
  example:
  - "The following markup example shows an <xref:System.Windows.Media.ImageBrush> opacity mask applied to another <xref:System.Windows.Controls.Image>.  \n  \n [!code-xml[OpacityMasksExample#UIElementOpacityMask](~/add/codesnippet/xaml/p-system.windows.uieleme_6_1.xaml)]\n [!code-xml[OpacityMasksExample#UIElementOpacityMask](~/add/codesnippet/xaml/p-system.windows.uieleme_6_1.xaml)]"
  syntax:
    content: public System.Windows.Media.Brush OpacityMask { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "De kwast moet worden gebruikt voor ondoorzichtigheid maskeren."
  overload: System.Windows.UIElement.OpacityMask*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OpacityMaskProperty
  id: OpacityMaskProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OpacityMaskProperty
  nameWithType: UIElement.OpacityMaskProperty
  fullName: System.Windows.UIElement.OpacityMaskProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.OpacityMask*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.OpacityMask*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty OpacityMaskProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.OpacityProperty
  id: OpacityProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: OpacityProperty
  nameWithType: UIElement.OpacityProperty
  fullName: System.Windows.UIElement.OpacityProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.Opacity*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.Opacity*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty OpacityProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PersistId
  id: PersistId
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PersistId
  nameWithType: UIElement.PersistId
  fullName: System.Windows.UIElement.PersistId
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Haalt een waarde die een unieke identificatie van dit element."
  remarks: "PersistId is uniek voor elk element in. Een element houdt de dezelfde PersistId telkens dezelfde [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] is geladen (inclusief binaire verklaringen). Deze id wordt gebruikt voor interne bij het laden van parseren en voor de serialisatie-vereisten. Het is niet bedoeld voor gebruik door de toepassingscode.       Deze eigenschap heeft geen betrekking op de <xref:System.Object.GetHashCode%2A>resultaat voor een bepaalde instantie.</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int PersistId { get; }
    return:
      type: System.Int32
      description: "De unieke id voor dit element."
  overload: System.Windows.UIElement.PersistId*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  id: PredictFocus(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PredictFocus(FocusNavigationDirection)
  nameWithType: UIElement.PredictFocus(FocusNavigationDirection)
  fullName: System.Windows.UIElement.PredictFocus(FocusNavigationDirection)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Wanneer in een afgeleide klasse genegeerd, retourneert het element dat focus richting traversal opgegeven focus krijgt daadwerkelijk zonder focus te verplaatsen naar dat element."
  remarks: "De standaardimplementatie van deze methode in deze klasse is niet volledig en retourneert altijd `null`."
  syntax:
    content: public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);
    parameters:
    - id: direction
      type: System.Windows.Input.FocusNavigationDirection
      description: "De richting van het aangevraagde focus-transport."
    return:
      type: System.Windows.DependencyObject
      description: "Het element dat zou hebben ontvangen, is de focus als <xref:System.Windows.UIElement.MoveFocus*>zijn daadwerkelijk aangeroepen.</xref:System.Windows.UIElement.MoveFocus*>"
  overload: System.Windows.UIElement.PredictFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewDragEnter
  id: PreviewDragEnter
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewDragEnter
  nameWithType: UIElement.PreviewDragEnter
  fullName: System.Windows.UIElement.PreviewDragEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het systeem invoer een onderliggende slepen-gebeurtenis met dit element als doel slepen meldt."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewDragEnter maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewDragEnter zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewDragEnter&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewDragEnterEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.DragEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.DragEnter>.</xref:System.Windows.UIElement.DragEnter> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement.PreviewDragEnterEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewDragEnter%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewDragEnter%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragEnter;
    return:
      type: System.Windows.DragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewDragEnterEvent
  id: PreviewDragEnterEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewDragEnterEvent
  nameWithType: UIElement.PreviewDragEnterEvent
  fullName: System.Windows.UIElement.PreviewDragEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewDragEnter&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewDragLeave
  id: PreviewDragLeave
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewDragLeave
  nameWithType: UIElement.PreviewDragLeave
  fullName: System.Windows.UIElement.PreviewDragLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het systeem invoer een onderliggende slepen-gebeurtenis met dit element aan de oorsprong slepen meldt."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewDragLeave maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewDragLeave zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewDragLeave&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewDragLeaveEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.DragEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.DragLeave>.</xref:System.Windows.UIElement.DragLeave> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement.PreviewDragLeaveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewDragLeave%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewDragLeave%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragLeave;
    return:
      type: System.Windows.DragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewDragLeaveEvent
  id: PreviewDragLeaveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewDragLeaveEvent
  nameWithType: UIElement.PreviewDragLeaveEvent
  fullName: System.Windows.UIElement.PreviewDragLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewDragLeave&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewDragOver
  id: PreviewDragOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewDragOver
  nameWithType: UIElement.PreviewDragOver
  fullName: System.Windows.UIElement.PreviewDragOver
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het systeem invoer een onderliggende slepen-gebeurtenis met dit element als het mogelijke doel rapporteert."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewDragOver maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewDragOver zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewDragOver&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewDragOverEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.DragEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.DragOver>.</xref:System.Windows.UIElement.DragOver> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement.PreviewDragOverEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewDragOver%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewDragOver%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragOver;
    return:
      type: System.Windows.DragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewDragOverEvent
  id: PreviewDragOverEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewDragOverEvent
  nameWithType: UIElement.PreviewDragOverEvent
  fullName: System.Windows.UIElement.PreviewDragOverEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewDragOver&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewDrop
  id: PreviewDrop
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewDrop
  nameWithType: UIElement.PreviewDrop
  fullName: System.Windows.UIElement.PreviewDrop
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer het systeem invoer een onderliggende neerzetten-gebeurtenis met dit element als het doel meldt."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewDrop maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewDrop zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewDrop&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewDropEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.DragEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.Drop>.</xref:System.Windows.UIElement.Drop> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement.PreviewDropEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewDrop%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewDrop%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDrop;
    return:
      type: System.Windows.DragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewDropEvent
  id: PreviewDropEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewDropEvent
  nameWithType: UIElement.PreviewDropEvent
  fullName: System.Windows.UIElement.PreviewDropEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewDrop&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDropEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewGiveFeedback
  id: PreviewGiveFeedback
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewGiveFeedback
  nameWithType: UIElement.PreviewGiveFeedback
  fullName: System.Windows.UIElement.PreviewGiveFeedback
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een bewerking slepen en neerzetten is gestart."
  remarks: "De gebeurtenis PreviewGiveFeedback kunt de bron van een gebeurtenis Sleep de vormgeving van de muisaanwijzer wijzigen om de gebruiker visuele feedback geven tijdens een bewerking slepen en neerzetten.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewGiveFeedback maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewGiveFeedback zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewGiveFeedback&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.GiveFeedbackEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.GiveFeedback>.</xref:System.Windows.UIElement.GiveFeedback> </xref:System.Windows.GiveFeedbackEventHandler> </xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A>"
  syntax:
    content: public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;
    return:
      type: System.Windows.GiveFeedbackEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewGiveFeedbackEvent
  id: PreviewGiveFeedbackEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewGiveFeedbackEvent
  nameWithType: UIElement.PreviewGiveFeedbackEvent
  fullName: System.Windows.UIElement.PreviewGiveFeedbackEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewGiveFeedback&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewGotKeyboardFocus
  id: PreviewGotKeyboardFocus
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewGotKeyboardFocus
  nameWithType: UIElement.PreviewGotKeyboardFocus
  fullName: System.Windows.UIElement.PreviewGotKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer het toetsenbord is gericht op dit element."
  remarks: "Omdat deze gebeurtenis maakt gebruik van tunneling routering, mogelijk het element dat de focus heeft een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in de gebeurtenisgegevens worden opgeslagen om te bepalen van het werkelijke element dat de focus heeft.</xref:System.Windows.RoutedEventArgs.Source%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewGotKeyboardFocus maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewGotKeyboardFocus zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewGotKeyboardFocus&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.GotKeyboardFocus>.</xref:System.Windows.UIElement.GotKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  id: PreviewGotKeyboardFocusEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewGotKeyboardFocusEvent
  nameWithType: UIElement.PreviewGotKeyboardFocusEvent
  fullName: System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewGotKeyboardFocus&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewKeyDown
  id: PreviewKeyDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewKeyDown
  nameWithType: UIElement.PreviewKeyDown
  fullName: System.Windows.UIElement.PreviewKeyDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een toets wordt ingedrukt terwijl dit element de focus heeft."
  remarks: "Verwerking van communiceert met andere onderdelen platform zoals samenstelling bestuurt en tekst. De <xref:System.Windows.UIElement.KeyDown>gebeurtenis is een lager niveau tekst invoer gebeurtenis die niet werken mogelijk zoals verwacht op bepaalde besturingselementen.</xref:System.Windows.UIElement.KeyDown> Dit is omdat sommige besturingselementen samenstellen besturingselement heeft of de verwerking van de klasse die een hogere versie van de tekst van biedt invoer verwerking en gerelateerde gebeurtenissen.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewKeyDown maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewKeyDown zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewKeyDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewKeyDownEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.KeyEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.KeyDown>.</xref:System.Windows.UIElement.KeyDown> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement.PreviewKeyDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewKeyDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewKeyDown%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler PreviewKeyDown;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewKeyDownEvent
  id: PreviewKeyDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewKeyDownEvent
  nameWithType: UIElement.PreviewKeyDownEvent
  fullName: System.Windows.UIElement.PreviewKeyDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewKeyDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewKeyUp
  id: PreviewKeyUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewKeyUp
  nameWithType: UIElement.PreviewKeyUp
  fullName: System.Windows.UIElement.PreviewKeyUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een toets wordt losgelaten terwijl dit element de focus heeft."
  remarks: "Verwerking van communiceert met andere onderdelen platform zoals samenstelling bestuurt en tekst. De <xref:System.Windows.UIElement.KeyUp>gebeurtenis is een lager niveau tekst invoer gebeurtenis die niet werken mogelijk zoals verwacht op bepaalde besturingselementen.</xref:System.Windows.UIElement.KeyUp> Dit is omdat sommige besturingselementen samenstellen besturingselement heeft of de verwerking van de klasse die een hogere versie van de tekst van biedt invoer verwerking en gerelateerde gebeurtenissen. Raadpleeg de documentatie voor de afzonderlijke besturingselementen voor meer informatie.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewKeyUp maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewKeyUp zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewKeyUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewKeyUpEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.KeyEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.KeyUp>.</xref:System.Windows.UIElement.KeyUp> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement.PreviewKeyUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewKeyUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewKeyUp%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler PreviewKeyUp;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewKeyUpEvent
  id: PreviewKeyUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewKeyUpEvent
  nameWithType: UIElement.PreviewKeyUpEvent
  fullName: System.Windows.UIElement.PreviewKeyUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewKeyUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewLostKeyboardFocus
  id: PreviewLostKeyboardFocus
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewLostKeyboardFocus
  nameWithType: UIElement.PreviewLostKeyboardFocus
  fullName: System.Windows.UIElement.PreviewLostKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer het toetsenbord niet meer voor dit element is gericht."
  remarks: "Omdat deze gebeurtenis maakt gebruik van tunneling routering, het element dat de focus heeft verloren is mogelijk een onderliggend element in plaats van het element waarvan de gebeurtenis-handler daadwerkelijk is gekoppeld. Controleer de <xref:System.Windows.RoutedEventArgs.Source%2A>in de gebeurtenisgegevens worden opgeslagen om te bepalen van het werkelijke element dat de focus heeft verloren.</xref:System.Windows.RoutedEventArgs.Source%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewLostKeyboardFocus maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewLostKeyboardFocus zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewLostKeyboardFocus&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.LostKeyboardFocus>.</xref:System.Windows.UIElement.LostKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  id: PreviewLostKeyboardFocusEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewLostKeyboardFocusEvent
  nameWithType: UIElement.PreviewLostKeyboardFocusEvent
  fullName: System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewLostKeyboardFocus&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseDown
  id: PreviewMouseDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseDown
  nameWithType: UIElement.PreviewMouseDown
  fullName: System.Windows.UIElement.PreviewMouseDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een muisknop wordt ingedrukt terwijl de aanwijzer zich op dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewMouseDown maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewMouseDown zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>       De gebeurtenis PreviewMouseDown vaak treedt op samen met een <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>of <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, wat overeenkomt met een druk op van een van de twee standaard muisknop.</xref:System.Windows.UIElement.PreviewMouseRightButtonDown> </xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>en <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>zijn ook gerouteerde gebeurtenissen, maar ze zijn direct gerouteerde gebeurtenissen en de juiste knop-specifieke gebeurtenis treedt op wanneer de <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>gebeurtenis bereikt dit element langs de gebeurtenisroute.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> </xref:System.Windows.UIElement.PreviewMouseRightButtonDown></xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> Zie de opmerkingen voor <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>of <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</xref:System.Windows.UIElement.PreviewMouseRightButtonDown> </xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>      <a name=&quot;routedEventInfo_PreviewMouseDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewMouseDownEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.MouseDown>.</xref:System.Windows.UIElement.MouseDown> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.PreviewMouseDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewMouseDown%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseDownEvent
  id: PreviewMouseDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseDownEvent
  nameWithType: UIElement.PreviewMouseDownEvent
  fullName: System.Windows.UIElement.PreviewMouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewMouseDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseLeftButtonDown
  id: PreviewMouseLeftButtonDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseLeftButtonDown
  nameWithType: UIElement.PreviewMouseLeftButtonDown
  fullName: System.Windows.UIElement.PreviewMouseLeftButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de linkermuisknop wordt ingedrukt terwijl de muisaanwijzer zich boven dit element."
  remarks: "Hoewel dit lijkt een tunneling doorsturen via een element-structuur te volgen, is een directe gerouteerde gebeurtenis die wordt ingediend en reraised langs de element-structuur door elke <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> daadwerkelijk       Deze gebeurtenis is een van de verschillende gerelateerde gebeurtenissen die de muisknop details van een onderliggende rapporteren <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>gebeurtenis is een gekoppelde gebeurtenis die wordt verwerkt door elk element langs een gebeurtenisroute.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>       De gebeurtenisgegevens van deze gebeurtenis wordt de gebeurtenisgegevens van de onderliggende <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>gebeurtenis.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Als deze gebeurtenis is gemarkeerd als verwerkt op de gebeurtenisroute, worden nog steeds de muisknop ingedrukt specifieke gebeurtenissen gegenereerd; handlers van de muisknop ingedrukt specifieke gebeurtenissen moeten echter worden toegevoegd door het expliciet aanroepen <xref:System.Windows.UIElement.AddHandler%2A>, met de optie voor het afhandelen van gebeurtenissen die zijn al gemarkeerd als verwerkt, om te worden van de gebeurtenis voor listeners.</xref:System.Windows.UIElement.AddHandler%2A> Als u PreviewMouseLeftButtonDown verwerkt markeert, die u in feite markeren <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>verwerkt voor alle verdere luisteraars langs de route en op alle gerelateerde gebeurtenissen.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Dit mogelijk omvat gebeurtenissen van de klasse-handler die worden gegenereerd zoals <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>       Deze gebeurtenis conceptueel gezien zien (en andere gebeurtenissen muisknop los op <xref:System.Windows.UIElement>) moet een muis &quot;service&quot; (met de servicedefinitie geleverd door de <xref:System.Windows.Input.Mouse>klasse).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement> De gebeurtenis wordt toegevoegd voor het gemak van hoeven niet controleren van de muis knopstatussen (links-rechts, pijl omhoog en omlaag) van de oorspronkelijke muisgebeurtenissen in de gebeurtenisgegevens worden opgeslagen. Voor meer geavanceerde scenario&quot;s, zoals het controleren op de status van niet-standaard knoppen, moet u mogelijk gebruik van de [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] op de <xref:System.Windows.Input.Mouse>klasse in plaats van op <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_PreviewMouseLeftButtonDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  id: PreviewMouseLeftButtonDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseLeftButtonDownEvent
  nameWithType: UIElement.PreviewMouseLeftButtonDownEvent
  fullName: System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewMouseLeftButtonDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseLeftButtonUp
  id: PreviewMouseLeftButtonUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseLeftButtonUp
  nameWithType: UIElement.PreviewMouseLeftButtonUp
  fullName: System.Windows.UIElement.PreviewMouseLeftButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de linker muisknop wordt losgelaten terwijl de muisaanwijzer zich boven dit element."
  remarks: "Hoewel dit lijkt een tunneling doorsturen via een element-structuur te volgen, is een directe gerouteerde gebeurtenis die wordt ingediend en reraised langs de element-structuur door elke <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> daadwerkelijk       Deze gebeurtenis is een van de verschillende gerelateerde gebeurtenissen die de muisknop details van een onderliggende rapporteren <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>gebeurtenis is een gekoppelde gebeurtenis die wordt verwerkt door elk element langs een gebeurtenisroute.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       De gebeurtenisgegevens van deze gebeurtenis wordt de gebeurtenisgegevens van de onderliggende <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>gebeurtenis.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Als deze gebeurtenis is gemarkeerd als verwerkt op de gebeurtenisroute, worden nog steeds de muisknop ingedrukt specifieke gebeurtenissen gegenereerd; handlers van de muisknop ingedrukt specifieke gebeurtenissen moeten echter worden toegevoegd door het expliciet aanroepen <xref:System.Windows.UIElement.AddHandler%2A>, met de optie voor het afhandelen van gebeurtenissen die zijn al gemarkeerd als verwerkt, om te worden van de gebeurtenis voor listeners.</xref:System.Windows.UIElement.AddHandler%2A> Als u PreviewMouseLeftButtonUp verwerkt markeert, die u in feite markeren <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>verwerkt voor alle verdere luisteraars langs de route en op alle gerelateerde gebeurtenissen.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Deze gebeurtenis conceptueel gezien zien (en andere gebeurtenissen muisknop los op <xref:System.Windows.UIElement>) moet een muis &quot;service&quot; (met de servicedefinitie geleverd door de <xref:System.Windows.Input.Mouse>klasse).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement> De gebeurtenis wordt toegevoegd voor het gemak van hoeven niet controleren van de muis knopstatussen (links-rechts, pijl omhoog en omlaag) van de oorspronkelijke muisgebeurtenissen in de gebeurtenisgegevens worden opgeslagen. Voor meer geavanceerde scenario&quot;s, zoals het controleren op de status van niet-standaard knoppen, moet u mogelijk gebruik van de [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] op de <xref:System.Windows.Input.Mouse>klasse in plaats van op <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_PreviewMouseLeftButtonUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  id: PreviewMouseLeftButtonUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseLeftButtonUpEvent
  nameWithType: UIElement.PreviewMouseLeftButtonUpEvent
  fullName: System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewMouseLeftButtonUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseMove
  id: PreviewMouseMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseMove
  nameWithType: UIElement.PreviewMouseMove
  fullName: System.Windows.UIElement.PreviewMouseMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de muisaanwijzer eroverheen wordt bewogen terwijl de muisaanwijzer zich boven dit element."
  remarks: "Deze gebeurtenis treedt op beide wanneer de muisaanwijzer binnen de grenzen element binnenkomt en ook wanneer de muisaanwijzer hoewel ze nog binnen de grenzen van het element.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewMouseMove maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewMouseMove zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewMouseMove&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewMouseMoveEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.MouseEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.MouseMove>.</xref:System.Windows.UIElement.MouseMove> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement.PreviewMouseMoveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewMouseMove%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewMouseMove%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler PreviewMouseMove;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseMoveEvent
  id: PreviewMouseMoveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseMoveEvent
  nameWithType: UIElement.PreviewMouseMoveEvent
  fullName: System.Windows.UIElement.PreviewMouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewMouseMove&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseRightButtonDown
  id: PreviewMouseRightButtonDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseRightButtonDown
  nameWithType: UIElement.PreviewMouseRightButtonDown
  fullName: System.Windows.UIElement.PreviewMouseRightButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de rechter muisknop wordt ingedrukt terwijl de muisaanwijzer zich boven dit element."
  remarks: "Hoewel dit lijkt een tunneling doorsturen via een element-structuur te volgen, is een directe gerouteerde gebeurtenis die wordt ingediend en reraised langs de element-structuur door elke <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> daadwerkelijk       Deze gebeurtenis is een van de verschillende gerelateerde gebeurtenissen die de muisknop details van een onderliggende rapporteren <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>gebeurtenis is een gekoppelde gebeurtenis die wordt verwerkt door elk element langs een gebeurtenisroute.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>       De gebeurtenisgegevens van deze gebeurtenis wordt de gebeurtenisgegevens van de onderliggende <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>gebeurtenis.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Als deze gebeurtenis is gemarkeerd als verwerkt op de gebeurtenisroute, worden nog steeds de muisknop ingedrukt specifieke gebeurtenissen gegenereerd; handlers van de muisknop ingedrukt specifieke gebeurtenissen moeten echter worden toegevoegd door het expliciet aanroepen <xref:System.Windows.UIElement.AddHandler%2A>, met de optie voor het afhandelen van gebeurtenissen die zijn al gemarkeerd als verwerkt, om te worden van de gebeurtenis voor listeners.</xref:System.Windows.UIElement.AddHandler%2A> Als u PreviewMouseRightButtonDown verwerkt markeert, die u in feite markeren <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>verwerkt voor alle verdere luisteraars langs de route en op alle gerelateerde gebeurtenissen.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Dit mogelijk omvat gebeurtenissen van de klasse-handler die worden gegenereerd zoals <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>       Deze gebeurtenis conceptueel gezien zien (en andere gebeurtenissen muisknop los op <xref:System.Windows.UIElement>) moet een muis &quot;service&quot; (met de servicedefinitie geleverd door de <xref:System.Windows.Input.Mouse>klasse).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement> De gebeurtenis wordt toegevoegd voor het gemak van hoeven niet controleren van de muis knopstatussen (links-rechts, pijl omhoog en omlaag) van de oorspronkelijke muisgebeurtenissen in de gebeurtenisgegevens worden opgeslagen. Voor meer geavanceerde scenario&quot;s, zoals het controleren op de status van niet-standaard knoppen, moet u mogelijk gebruik van de [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] op de <xref:System.Windows.Input.Mouse>klasse in plaats van op <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_PreviewMouseRightButtonDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  id: PreviewMouseRightButtonDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseRightButtonDownEvent
  nameWithType: UIElement.PreviewMouseRightButtonDownEvent
  fullName: System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewMouseRightButtonDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseRightButtonUp
  id: PreviewMouseRightButtonUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseRightButtonUp
  nameWithType: UIElement.PreviewMouseRightButtonUp
  fullName: System.Windows.UIElement.PreviewMouseRightButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de rechter muisknop wordt losgelaten terwijl de muisaanwijzer zich boven dit element."
  remarks: "Hoewel dit lijkt een tunneling doorsturen via een element-structuur te volgen, is een directe gerouteerde gebeurtenis die wordt ingediend en reraised langs de element-structuur door elke <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> daadwerkelijk       Deze gebeurtenis is een van de verschillende gerelateerde gebeurtenissen die de muisknop details van een onderliggende rapporteren <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>gebeurtenis is een gekoppelde gebeurtenis die wordt verwerkt door elk element langs een gebeurtenisroute.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       De gebeurtenisgegevens van deze gebeurtenis wordt de gebeurtenisgegevens van de onderliggende <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>gebeurtenis.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Als deze gebeurtenis is gemarkeerd als verwerkt op de gebeurtenisroute, worden nog steeds de muisknop ingedrukt specifieke gebeurtenissen gegenereerd; handlers van de muisknop ingedrukt specifieke gebeurtenissen moeten echter worden toegevoegd door het expliciet aanroepen <xref:System.Windows.UIElement.AddHandler%2A>, met de optie voor het afhandelen van gebeurtenissen die zijn al gemarkeerd als verwerkt, om te worden van de gebeurtenis voor listeners.</xref:System.Windows.UIElement.AddHandler%2A> Als u PreviewMouseRightButtonUp verwerkt markeert, die u in feite markeren <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>verwerkt voor alle verdere luisteraars langs de route en op alle gerelateerde gebeurtenissen.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Deze gebeurtenis conceptueel gezien zien (en andere gebeurtenissen muisknop los op <xref:System.Windows.UIElement>) moet een muis &quot;service&quot; (met de servicedefinitie geleverd door de <xref:System.Windows.Input.Mouse>klasse).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement> De gebeurtenis wordt toegevoegd voor het gemak van hoeven niet controleren van de muis knopstatussen (links-rechts, pijl omhoog en omlaag) van de oorspronkelijke muisgebeurtenissen in de gebeurtenisgegevens worden opgeslagen. Voor meer geavanceerde scenario&quot;s, zoals het controleren op de status van niet-standaard knoppen, moet u mogelijk gebruik van de [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] op de <xref:System.Windows.Input.Mouse>klasse in plaats van op <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_PreviewMouseRightButtonUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  id: PreviewMouseRightButtonUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseRightButtonUpEvent
  nameWithType: UIElement.PreviewMouseRightButtonUpEvent
  fullName: System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewMouseRightButtonUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseUp
  id: PreviewMouseUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseUp
  nameWithType: UIElement.PreviewMouseUp
  fullName: System.Windows.UIElement.PreviewMouseUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een muisknop wordt losgelaten terwijl de muisaanwijzer zich boven dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewMouseUp maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewMouseUp zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       De gebeurtenis PreviewMouseUp vaak treedt op samen met een <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>of <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, wat overeenkomt met een druk op van een van de twee standaard muisknop.</xref:System.Windows.UIElement.PreviewMouseRightButtonUp> </xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>en <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>zijn ook gerouteerde gebeurtenissen, maar ze zijn direct gerouteerde gebeurtenissen en de juiste knop-specifieke gebeurtenis treedt op wanneer de <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>gebeurtenis bereikt dit element langs de gebeurtenisroute.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> </xref:System.Windows.UIElement.PreviewMouseRightButtonUp></xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> Zie de opmerkingen voor <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>of <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</xref:System.Windows.UIElement.PreviewMouseRightButtonUp> </xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>      <a name=&quot;routedEventInfo_PreviewMouseUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewMouseUpEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.MouseButtonEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.MouseUp>.</xref:System.Windows.UIElement.MouseUp> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement.PreviewMouseUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewMouseUp%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseUpEvent
  id: PreviewMouseUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseUpEvent
  nameWithType: UIElement.PreviewMouseUpEvent
  fullName: System.Windows.UIElement.PreviewMouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewMouseUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseWheel
  id: PreviewMouseWheel
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseWheel
  nameWithType: UIElement.PreviewMouseWheel
  fullName: System.Windows.UIElement.PreviewMouseWheel
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de gebruiker het muiswiel draait, terwijl de muisaanwijzer zich boven dit element."
  remarks: "Focus of muis vastleggen hebben voorrang op wanneer de muisaanwijzer zich; dus als u deze gebeurtenis van een element gerichte of vastgelegd ontvangt, de muisaanwijzer daadwerkelijk mogelijk via een ander element.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat <xref:System.Windows.UIElement.PreviewMouseMove>maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.UIElement.PreviewMouseMove> </xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de <xref:System.Windows.UIElement.PreviewMouseMove>gebeurtenis zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> </xref:System.Windows.UIElement.PreviewMouseMove>      <a name=&quot;routedEventInfo_PreviewMouseWheel&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewMouseWheelEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.MouseWheelEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.MouseWheel>.</xref:System.Windows.UIElement.MouseWheel> </xref:System.Windows.Input.MouseWheelEventHandler> </xref:System.Windows.UIElement.PreviewMouseWheelEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewMouseWheel%2A>"
  syntax:
    content: public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;
    return:
      type: System.Windows.Input.MouseWheelEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewMouseWheelEvent
  id: PreviewMouseWheelEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewMouseWheelEvent
  nameWithType: UIElement.PreviewMouseWheelEvent
  fullName: System.Windows.UIElement.PreviewMouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewMouseWheel&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewQueryContinueDrag
  id: PreviewQueryContinueDrag
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewQueryContinueDrag
  nameWithType: UIElement.PreviewQueryContinueDrag
  fullName: System.Windows.UIElement.PreviewQueryContinueDrag
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer er een wijziging in de status van de knop toetsenbord of muis tijdens een bewerking slepen en neerzetten."
  remarks: "De gebeurtenis PreviewQueryContinueDrag kan de sleepbron op te geven of de bewerking slepen en neerzetten moet worden geannuleerd.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewQueryContinueDrag maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewQueryContinueDrag zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewQueryContinueDrag&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.QueryContinueDragEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.QueryContinueDrag>.</xref:System.Windows.UIElement.QueryContinueDrag> </xref:System.Windows.QueryContinueDragEventHandler> </xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A>"
  syntax:
    content: public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;
    return:
      type: System.Windows.QueryContinueDragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewQueryContinueDragEvent
  id: PreviewQueryContinueDragEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewQueryContinueDragEvent
  nameWithType: UIElement.PreviewQueryContinueDragEvent
  fullName: System.Windows.UIElement.PreviewQueryContinueDragEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewQueryContinueDrag&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusButtonDown
  id: PreviewStylusButtonDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusButtonDown
  nameWithType: UIElement.PreviewStylusButtonDown
  fullName: System.Windows.UIElement.PreviewStylusButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de tekenpen-knop wordt ingedrukt terwijl de muisaanwijzer op dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewStylusButtonDown maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewStylusButtonDown zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [Touch invoer ondersteuning in Windows Vista](http://msdn.microsoft.com/en-us/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) en [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusButtonDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.StylusButtonEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.StylusButtonDown>.</xref:System.Windows.UIElement.StylusButtonDown> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusButtonDownEvent
  id: PreviewStylusButtonDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusButtonDownEvent
  nameWithType: UIElement.PreviewStylusButtonDownEvent
  fullName: System.Windows.UIElement.PreviewStylusButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewStylusButtonDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusButtonUp
  id: PreviewStylusButtonUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusButtonUp
  nameWithType: UIElement.PreviewStylusButtonUp
  fullName: System.Windows.UIElement.PreviewStylusButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de knop tekenpen terwijl de muisaanwijzer op dit element wordt vrijgegeven."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewStylusButtonUp maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewStylusButtonUp zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusButtonUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.StylusButtonEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.StylusButtonUp>.</xref:System.Windows.UIElement.StylusButtonUp> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusButtonUpEvent
  id: PreviewStylusButtonUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusButtonUpEvent
  nameWithType: UIElement.PreviewStylusButtonUpEvent
  fullName: System.Windows.UIElement.PreviewStylusButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewStylusButtonUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusDown
  id: PreviewStylusDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusDown
  nameWithType: UIElement.PreviewStylusDown
  fullName: System.Windows.UIElement.PreviewStylusDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de tekenpen digitizer raakt terwijl er op dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewStylusDown maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewStylusDown zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewStylusDownEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.StylusDownEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.StylusDown>.</xref:System.Windows.UIElement.StylusDown> </xref:System.Windows.Input.StylusDownEventHandler> </xref:System.Windows.UIElement.PreviewStylusDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewStylusDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewStylusDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;
    return:
      type: System.Windows.Input.StylusDownEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusDownEvent
  id: PreviewStylusDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusDownEvent
  nameWithType: UIElement.PreviewStylusDownEvent
  fullName: System.Windows.UIElement.PreviewStylusDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewStylusDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusInAirMove
  id: PreviewStylusInAirMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusInAirMove
  nameWithType: UIElement.PreviewStylusInAirMove
  fullName: System.Windows.UIElement.PreviewStylusInAirMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de tekenpen zonder dat u daadwerkelijk digitizer over een element beweegt."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewStylusInAirMove maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewStylusInAirMove zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusInAirMove&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.StylusInAirMove>.</xref:System.Windows.UIElement.StylusInAirMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusInAirMoveEvent
  id: PreviewStylusInAirMoveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusInAirMoveEvent
  nameWithType: UIElement.PreviewStylusInAirMoveEvent
  fullName: System.Windows.UIElement.PreviewStylusInAirMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewStylusInAirMove&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusInRange
  id: PreviewStylusInRange
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusInRange
  nameWithType: UIElement.PreviewStylusInRange
  fullName: System.Windows.UIElement.PreviewStylusInRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de pen dicht bij de digitizer om te worden gedetecteerd, terwijl u via dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewStylusInRange maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewStylusInRange zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusInRange&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewStylusInRangeEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.StylusInRange>.</xref:System.Windows.UIElement.StylusInRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.PreviewStylusInRangeEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewStylusInRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusInRangeEvent
  id: PreviewStylusInRangeEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusInRangeEvent
  nameWithType: UIElement.PreviewStylusInRangeEvent
  fullName: System.Windows.UIElement.PreviewStylusInRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewStylusInRange&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusMove
  id: PreviewStylusMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusMove
  nameWithType: UIElement.PreviewStylusMove
  fullName: System.Windows.UIElement.PreviewStylusMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de tekenpen wordt bewogen terwijl via het element. De tekenpen moet verplaatsen tijdens worden gedetecteerd door de digitizer verhogen van deze gebeurtenis, anders <xref href=&quot;System.Windows.UIElement.PreviewStylusInAirMove&quot;> </xref> in plaats daarvan wordt gegenereerd."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewStylusMove maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewStylusMove zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusMove&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewStylusMoveEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.StylusMove>.</xref:System.Windows.UIElement.StylusMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.PreviewStylusMoveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewStylusMove%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewStylusMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusMoveEvent
  id: PreviewStylusMoveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusMoveEvent
  nameWithType: UIElement.PreviewStylusMoveEvent
  fullName: System.Windows.UIElement.PreviewStylusMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewStylusMove&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusOutOfRange
  id: PreviewStylusOutOfRange
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusOutOfRange
  nameWithType: UIElement.PreviewStylusOutOfRange
  fullName: System.Windows.UIElement.PreviewStylusOutOfRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de tekenpen te ver van digitizer om te worden gedetecteerd."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewStylusOutOfRange maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewStylusOutOfRange zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusOutOfRange&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.StylusOutOfRange>.</xref:System.Windows.UIElement.StylusOutOfRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  id: PreviewStylusOutOfRangeEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusOutOfRangeEvent
  nameWithType: UIElement.PreviewStylusOutOfRangeEvent
  fullName: System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewStylusOutOfRange&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusSystemGesture
  id: PreviewStylusSystemGesture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusSystemGesture
  nameWithType: UIElement.PreviewStylusSystemGesture
  fullName: System.Windows.UIElement.PreviewStylusSystemGesture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een gebruiker een van de verschillende tekenpen gebaren uitvoert."
  remarks: "Zie voor informatie over tekenpen gebaren <xref:System.Windows.Input.SystemGesture>.</xref:System.Windows.Input.SystemGesture>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewStylusSystemGesture maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewStylusSystemGesture zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusSystemGesture&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.StylusSystemGestureEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.StylusSystemGesture>.</xref:System.Windows.UIElement.StylusSystemGesture> </xref:System.Windows.Input.StylusSystemGestureEventHandler> </xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;
    return:
      type: System.Windows.Input.StylusSystemGestureEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusSystemGestureEvent
  id: PreviewStylusSystemGestureEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusSystemGestureEvent
  nameWithType: UIElement.PreviewStylusSystemGestureEvent
  fullName: System.Windows.UIElement.PreviewStylusSystemGestureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewStylusSystemGesture&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusUp
  id: PreviewStylusUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusUp
  nameWithType: UIElement.PreviewStylusUp
  fullName: System.Windows.UIElement.PreviewStylusUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de gebruiker wordt gegeven de tekenpen uitschakelen digitizer terwijl de tekenpen op dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat <xref:System.Windows.UIElement.PreviewStylusDown>maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.UIElement.PreviewStylusDown> </xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de <xref:System.Windows.UIElement.PreviewStylusDown>gebeurtenis zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> </xref:System.Windows.UIElement.PreviewStylusDown>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewStylusUpEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.StylusUp>.</xref:System.Windows.UIElement.StylusUp> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.PreviewStylusUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewStylusUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewStylusUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusUp;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewStylusUpEvent
  id: PreviewStylusUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewStylusUpEvent
  nameWithType: UIElement.PreviewStylusUpEvent
  fullName: System.Windows.UIElement.PreviewStylusUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewStylusUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewTextInput
  id: PreviewTextInput
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewTextInput
  nameWithType: UIElement.PreviewTextInput
  fullName: System.Windows.UIElement.PreviewTextInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer dit element tekst op een apparaat-onafhankelijke wijze opgehaald."
  remarks: "De gebeurtenis PreviewTextInput kan een onderdeel of toepassing om te luisteren naar tekstinvoer op een apparaat-onafhankelijke wijze. Het toetsenbord is de primaire methode voor PreviewTextInput; maar spraak, handschrift en andere invoerapparaten ook PreviewTextInput kunnen genereren.       Vanwege toetsencombinaties — in standaardtoetsenborden of via de invoermethode editors: meerdere belangrijke gebeurtenissen kunnen slechts één tekst invoergebeurtenis verhogen.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat PreviewTextInput maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis PreviewTextInput zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewTextInput&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewTextInputEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.Windows.Input.TextCompositionEventHandler>|      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.TextInput>.</xref:System.Windows.UIElement.TextInput> </xref:System.Windows.Input.TextCompositionEventHandler> </xref:System.Windows.UIElement.PreviewTextInputEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewTextInput%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewTextInput%2A>"
  syntax:
    content: public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;
    return:
      type: System.Windows.Input.TextCompositionEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewTextInputEvent
  id: PreviewTextInputEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewTextInputEvent
  nameWithType: UIElement.PreviewTextInputEvent
  fullName: System.Windows.UIElement.PreviewTextInputEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewTextInput&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewTouchDown
  id: PreviewTouchDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewTouchDown
  nameWithType: UIElement.PreviewTouchDown
  fullName: System.Windows.UIElement.PreviewTouchDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een vinger het scherm, raakt terwijl de vinger op dit element."
  remarks: "Standaard wordt de PreviewTouchDown en <xref:System.Windows.UIElement.TouchDown>gebeurtenissen wordt niet bijgewerkt tot een vinger het scherm raakt en wordt verplaatst.</xref:System.Windows.UIElement.TouchDown> Een vinger drukken op het scherm houden zonder het te verplaatsen zorgt ervoor dat de druk op en houdt u het gedrag van een <xref:System.Windows.Input.Stylus>.</xref:System.Windows.Input.Stylus> Het gedrag ingedrukt komt overeen met de muis met de rechtermuisknop.       De PreviewTouchDown veroorzaken en <xref:System.Windows.UIElement.TouchDown>gebeurtenissen optreden als een vinger het scherm voor het raakt instellen de <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName>eigenschap gekoppeld `false` voor dit element.</xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> </xref:System.Windows.UIElement.TouchDown>      <a name=&quot;routedEventInfo_PreviewTouchDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewTouchDownEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.TouchDown>.</xref:System.Windows.UIElement.TouchDown> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.PreviewTouchDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewTouchDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewTouchDown%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchDown;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewTouchDownEvent
  id: PreviewTouchDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewTouchDownEvent
  nameWithType: UIElement.PreviewTouchDownEvent
  fullName: System.Windows.UIElement.PreviewTouchDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewTouchDown&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewTouchMove
  id: PreviewTouchMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewTouchMove
  nameWithType: UIElement.PreviewTouchMove
  fullName: System.Windows.UIElement.PreviewTouchMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een vinger op het scherm wordt verplaatst terwijl de vinger op dit element."
  remarks: "<a name=&quot;routedEventInfo_PreviewTouchMove&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewTouchMoveEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.PreviewTouchMoveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewTouchMove%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewTouchMove%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchMove;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewTouchMoveEvent
  id: PreviewTouchMoveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewTouchMoveEvent
  nameWithType: UIElement.PreviewTouchMoveEvent
  fullName: System.Windows.UIElement.PreviewTouchMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewTouchMove&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewTouchUp
  id: PreviewTouchUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewTouchUp
  nameWithType: UIElement.PreviewTouchUp
  fullName: System.Windows.UIElement.PreviewTouchUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een vinger op het scherm wordt gegenereerd terwijl de vinger op dit element."
  remarks: "<a name=&quot;routedEventInfo_PreviewTouchUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.PreviewTouchUpEvent>|   | Routingstrategie | Tunneling |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -De overeenkomende doordat gebeurtenis is <xref:System.Windows.UIElement.TouchUp>.</xref:System.Windows.UIElement.TouchUp> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.PreviewTouchUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnPreviewTouchUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnPreviewTouchUp%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchUp;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.PreviewTouchUpEvent
  id: PreviewTouchUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: PreviewTouchUpEvent
  nameWithType: UIElement.PreviewTouchUpEvent
  fullName: System.Windows.UIElement.PreviewTouchUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.PreviewTouchUp&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.QueryContinueDrag
  id: QueryContinueDrag
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: QueryContinueDrag
  nameWithType: UIElement.QueryContinueDrag
  fullName: System.Windows.UIElement.QueryContinueDrag
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer er een wijziging in de status van de knop toetsenbord of muis tijdens een bewerking slepen en neerzetten."
  remarks: "De gebeurtenis QueryContinueDrag kan de sleepbron om te bepalen of de bewerking slepen en neerzetten moet worden geannuleerd.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat QueryContinueDrag maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis QueryContinueDrag zijn gekoppeld aan de onderliggende <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>      <a name=&quot;routedEventInfo_QueryContinueDrag&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.QueryContinueDragEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.QueryContinueDragEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</xref:System.Windows.UIElement.PreviewQueryContinueDrag> </xref:System.Windows.QueryContinueDragEventHandler> </xref:System.Windows.UIElement.QueryContinueDragEvent>      -Overschrijven <xref:System.Windows.UIElement.OnQueryContinueDrag%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnQueryContinueDrag%2A>"
  syntax:
    content: public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;
    return:
      type: System.Windows.QueryContinueDragEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.QueryContinueDragEvent
  id: QueryContinueDragEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: QueryContinueDragEvent
  nameWithType: UIElement.QueryContinueDragEvent
  fullName: System.Windows.UIElement.QueryContinueDragEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.QueryContinueDrag&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.QueryCursor
  id: QueryCursor
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: QueryCursor
  nameWithType: UIElement.QueryCursor
  fullName: System.Windows.UIElement.QueryCursor
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de cursor is aangevraagd om weer te geven. Deze gebeurtenis treedt op een element telkens wanneer de muisaanwijzer naar een nieuwe locatie, betekent dat die het cursorobject mogelijk moeten worden gewijzigd op basis van de nieuwe positie."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat QueryCursor maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis QueryCursor zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>       De cursor wordt verwezen door de naam van deze gebeurtenis is niet noodzakelijkerwijs een cursor voor de tekst (soms ook wel de invoegpositie genoemd). In plaats daarvan de cursor in deze context is het object dat de grafische schermweergave verband houden met verschillende mogelijke invoer-gerelateerde apparaten of concepten in declareert [!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)] programmeren. Dit object wordt vertegenwoordigd door de <xref:System.Windows.Input.Cursor>-klasse in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)].</xref:System.Windows.Input.Cursor> De [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] invoer systeem kunt u deze cursor wijzigen wanneer deze de positie op het scherm van de muisaanwijzer vertegenwoordigt. U kunt vooraf gedefinieerde waarden uit de <xref:System.Windows.Input.Cursors>opsomming of u kunt een aangepaste cursor als een installatiekopiebestand declareren.</xref:System.Windows.Input.Cursors>       Voor de gebeurtenis QueryCursor luisteren is niet een efficiënte techniek voor het beheer van de cursor. In plaats daarvan moet voor elk element in het eigen gedrag cursor door <xref:System.Windows.FrameworkContentElement.Cursor%2A>en <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</xref:System.Windows.FrameworkContentElement.ForceCursor%2A> </xref:System.Windows.FrameworkContentElement.Cursor%2A> definiëren U moet alleen afgaan op QueryCursor als u geen van de basiselementen van WPF framework-niveau gebruikmaakt of in buitengewone omstandigheden waarin cursor gedrag definiëren op basis van per element voldoet niet aan uw behoeften. Zie voor meer informatie over het implementeren van het gedrag van de cursor in reactie op QueryCursor <xref:System.Windows.Input.QueryCursorEventHandler>.</xref:System.Windows.Input.QueryCursorEventHandler>      <a name=&quot;routedEventInfo_QueryCursor&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.QueryCursorEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.QueryCursorEventHandler>|      -Er is geen overeenkomende tunneling gebeurtenis gedefinieerde.</xref:System.Windows.Input.QueryCursorEventHandler> </xref:System.Windows.UIElement.QueryCursorEvent>      -Overschrijven <xref:System.Windows.UIElement.OnQueryCursor%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnQueryCursor%2A>"
  syntax:
    content: public event System.Windows.Input.QueryCursorEventHandler QueryCursor;
    return:
      type: System.Windows.Input.QueryCursorEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.QueryCursorEvent
  id: QueryCursorEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: QueryCursorEvent
  nameWithType: UIElement.QueryCursorEvent
  fullName: System.Windows.UIElement.QueryCursorEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.QueryCursor&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent QueryCursorEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  id: RaiseEvent(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: RaiseEvent(RoutedEventArgs)
  nameWithType: UIElement.RaiseEvent(RoutedEventArgs)
  fullName: System.Windows.UIElement.RaiseEvent(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Activeert een specifieke gerouteerde gebeurtenis. De <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> wordt gegenereerd, wordt geïdentificeerd in de <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> -exemplaar dat is opgegeven (als de <xref:System.Windows.RoutedEventArgs.RoutedEvent*>eigenschap van die gebeurtenisgegevens).</xref:System.Windows.RoutedEventArgs.RoutedEvent*>"
  remarks: "De `e` parameter is getypeerd als de algemene basistype voor alle gegevens van gerouteerde gebeurtenis; echter gegevens van de gebeurtenis moet worden gegeven als het meest specifiek gebeurtenistype die beschikbaar is voor de gebeurtenis wordt gegenereerd, omdat <xref:System.Windows.RoutedEventArgs>afgeleide klassen bevatten de eigenschappen van de werkelijke specifieke gegevens die zijn bedoeld voor de specifieke gebeurtenis wanneer deze wordt gegenereerd.</xref:System.Windows.RoutedEventArgs>       <xref:System.Windows.RoutedEventArgs>is niet alleen de eigenschappen van status voor de gebeurtenis plaatsvindt. het identificeert ook welke gerouteerde gebeurtenis te verhogen.</xref:System.Windows.RoutedEventArgs> Dit patroon gebeurtenis verhogen en de gegevens van de gerouteerde gebeurtenis beide van verschillen [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] gebeurtenissen en de gegevens klassen, die doorgaans bevatten alleen eigenschappen die gerelateerd zijn aan de gebeurtenis."
  example:
  - "The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.  \n  \n [!code-cs[RoutedEventCustom#RaiseEvent](~/add/codesnippet/csharp/RoutedEventCustom/SDKSampleLibrary/class1.cs#raiseevent)]\n [!code-vb[RoutedEventCustom#RaiseEvent](~/add/codesnippet/visualbasic/SDKSampleLibrary/Class1.vb#raiseevent)]"
  syntax:
    content: public void RaiseEvent (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "Een <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> die bevat gegevens van de gebeurtenis en identificeert ook de gebeurtenis te verhogen."
  overload: System.Windows.UIElement.RaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ReleaseAllTouchCaptures
  id: ReleaseAllTouchCaptures
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ReleaseAllTouchCaptures()
  nameWithType: UIElement.ReleaseAllTouchCaptures()
  fullName: System.Windows.UIElement.ReleaseAllTouchCaptures()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Alle vastgelegde touch-apparaten van dit element versies."
  syntax:
    content: public void ReleaseAllTouchCaptures ();
    parameters: []
  overload: System.Windows.UIElement.ReleaseAllTouchCaptures*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ReleaseMouseCapture
  id: ReleaseMouseCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ReleaseMouseCapture()
  nameWithType: UIElement.ReleaseMouseCapture()
  fullName: System.Windows.UIElement.ReleaseMouseCapture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "De muisvastlegging versies als dit element het vastleggen."
  remarks: "Als dit element niet de opname bijhoudt heeft, heeft aanroepen van deze methode geen effect. Houd rekening met de waarde van <xref:System.Windows.UIElement.IsMouseCaptured%2A>voordat u deze methode niet aanroepen.</xref:System.Windows.UIElement.IsMouseCaptured%2A>"
  example:
  - "The following example is the parallel to the example given for <xref:System.Windows.UIElement.CaptureMouse%2A>: it handles mouse button up to release mouse capture and re-enable moving the mouse.  \n  \n [!code-cs[CubeAnimation#UIElementMouseCapture](~/add/codesnippet/csharp/CubeAnimation_XBAP/Trackball.cs#uielementmousecapture)]\n [!code-vb[CubeAnimation#UIElementMouseCapture](~/add/codesnippet/visualbasic/cubeanimation_xbap/trackball.vb#uielementmousecapture)]"
  syntax:
    content: public void ReleaseMouseCapture ();
    parameters: []
  overload: System.Windows.UIElement.ReleaseMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ReleaseStylusCapture
  id: ReleaseStylusCapture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ReleaseStylusCapture()
  nameWithType: UIElement.ReleaseStylusCapture()
  fullName: System.Windows.UIElement.ReleaseStylusCapture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Het vastleggen van het apparaat tekenpen versies als dit element het vastleggen."
  remarks: "Als dit element niet de opname bijhoudt heeft, heeft aanroepen van deze methode geen effect. Houd rekening met de waarde van <xref:System.Windows.UIElement.IsStylusCaptured%2A>voordat u deze methode niet aanroepen.</xref:System.Windows.UIElement.IsStylusCaptured%2A>"
  syntax:
    content: public void ReleaseStylusCapture ();
    parameters: []
  overload: System.Windows.UIElement.ReleaseStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  id: ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ReleaseTouchCapture(TouchDevice)
  nameWithType: UIElement.ReleaseTouchCapture(TouchDevice)
  fullName: System.Windows.UIElement.ReleaseTouchCapture(TouchDevice)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Pogingen om het apparaat opgegeven touch van dit element vrij te geven."
  syntax:
    content: public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);
    parameters:
    - id: touchDevice
      type: System.Windows.Input.TouchDevice
      description: "Het apparaat om vrij te geven."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het apparaat touch wordt vrijgegeven; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.ReleaseTouchCapture*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>touchDevice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  id: RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: UIElement.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement.RemoveHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Verwijdert de opgegeven gerouteerde gebeurtenis-handler van dit element."
  remarks: "Het meest voorkomende scenario voor het gebruik van deze [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] is wanneer u implementeert de [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] &quot;wrapper&quot; gebeurtenis die is gekoppeld aan een aangepaste gerouteerde gebeurtenis, specifiek bij het implementeren van de logica &quot;verwijderen&quot; voor handlers op de [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] niveau. Het volgende dit voorbeeld opmerkingen hoofdstuk ziet u voorbeelden van dit scenario.       Deze methode aanroept, heeft geen effect als er geen handlers die zijn geregistreerd met de criteria die overeenkomt met de invoerparameters voor de methodeaanroep.       Als er meer dan één handler is gekoppeld die overeenkomen met de criteria, alleen de eerste handler in de gebeurtenis handler archief wordt verwijderd. Dit gedrag is consistent met [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] gedrag van de `-=` operator.       Noch `routedEvent` noch `handler` mogelijk `null`. Poging om een waarde als `null` een uitzondering.       Deze methode negeert de `handledEventsToo` parameterinformatie die wordt geleverd als de handler voor het eerst werd toegevoegd met de <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>handtekening waarmee de verwerking van gebeurtenissen al verwerkt.</xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Beide typen handler is verwijderd."
  example:
  - "The following example uses RemoveHandler as part of an event wrapper definition.  \n  \n [!code-cs[RoutedEventCustom#AddRemoveHandler](~/add/codesnippet/csharp/RoutedEventCustom/SDKSampleLibrary/class1.cs#addremovehandler)]\n [!code-vb[RoutedEventCustom#AddRemoveHandler](~/add/codesnippet/visualbasic/SDKSampleLibrary/Class1.vb#addremovehandler)]"
  syntax:
    content: public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "De id van de gerouteerde gebeurtenis waarvoor de handler is gekoppeld."
    - id: handler
      type: System.Delegate
      description: "De implementatie van de specifieke handler wilt verwijderen uit de verzameling van de gebeurtenis-handler voor dit element."
  overload: System.Windows.UIElement.RemoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.RenderSize
  id: RenderSize
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: RenderSize
  nameWithType: UIElement.RenderSize
  fullName: System.Windows.UIElement.RenderSize
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald (of sets, maar Zie de opmerkingen) de laatste weergavegrootte van dit element."
  remarks: "> [!IMPORTANT]> Probeer niet stelt deze eigenschap in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] of in de programmacode, als het WPF framework niveau indeling gebruikt. Bijna alle typische toepassingsscenario&quot;s gebruikt dit systeem lay-out. Het systeem lay-out wordt geen rekening gehouden met grootten ingesteld bij de eigenschap RenderSize rechtstreeks. De eigenschap RenderSize is gedeclareerd beschrijfbare alleen voor het inschakelen van bepaalde WPF core-niveau bridging aanvragen die opzettelijk de typische lay-protocollen, zoals ondersteuning voor de <xref:System.Windows.Documents.Adorner>klasse omzeilen.</xref:System.Windows.Documents.Adorner>       Deze eigenschap kan worden gebruikt voor het controleren van dat de grootte van toepassing weergeven in de lay-out system overschrijft zoals <xref:System.Windows.UIElement.OnRender%2A>of <xref:System.Windows.UIElement.GetLayoutClip%2A>.</xref:System.Windows.UIElement.GetLayoutClip%2A> </xref:System.Windows.UIElement.OnRender%2A>       Een veelvoorkomende scenario verwerkt de <xref:System.Windows.FrameworkElement.SizeChanged>gebeurtenis met de klasse-handler overschrijven of de <xref:System.Windows.UIElement.OnRenderSizeChanged%2A>gebeurtenis.</xref:System.Windows.UIElement.OnRenderSizeChanged%2A> </xref:System.Windows.FrameworkElement.SizeChanged>      <a name=&quot;xamlTextUsage_RenderSize&quot;></a>## XAML tekst gebruik"
  example:
  - "The following example shows how a custom adorner uses the RenderSize value in order to create and size the rectangle graphic that defines the adorner, as part of its <xref:System.Windows.UIElement.OnRender%2A>implementation.  \n  \n [!code-vb[AdornersMiscCode#UIElementDesiredSize](~/add/codesnippet/visualbasic/adornersmisccode/window1.xaml.vb#uielementdesiredsize)]\n [!code-cs[AdornersMiscCode#UIElementDesiredSize](~/add/codesnippet/csharp/AdornersMiscCode/Window1.xaml.cs#uielementdesiredsize)]"
  syntax:
    content: public System.Windows.Size RenderSize { get; set; }
    return:
      type: System.Windows.Size
      description: "De weergegeven grootte voor dit element."
  overload: System.Windows.UIElement.RenderSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.RenderTransform
  id: RenderTransform
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: RenderTransform
  nameWithType: UIElement.RenderTransform
  fullName: System.Windows.UIElement.RenderTransform
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van de transformatie-informatie die van invloed op de positie van de rendering van dit element.  Dit is een afhankelijkheidseigenschap."
  remarks: "Een transformatie render niet opnieuw genereren van de grootte van de lay-out of informatie over de grootte weergeven. Renderen transformaties zijn meestal bedoeld voor het animeren van of toepassen van een tijdelijke invloed op een element. Bijvoorbeeld: het element mogelijk zoomen als gericht of bij het laden naar dat deel van de ogen wordt getekend mogelijk jitter moused via de [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)].      <a name=&quot;dependencyPropertyInfo_RenderTransform&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.RenderTransformProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.RenderTransformProperty>"
  syntax:
    content: public System.Windows.Media.Transform RenderTransform { get; set; }
    return:
      type: System.Windows.Media.Transform
      description: "Beschrijft de details van de gewenste render-transformatie. De standaardwaarde is &lt;xref:System.Windows.Media.Transform.Identity%2A?displayProperty=fullName&gt;."
  overload: System.Windows.UIElement.RenderTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.RenderTransformOrigin
  id: RenderTransformOrigin
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: RenderTransformOrigin
  nameWithType: UIElement.RenderTransformOrigin
  fullName: System.Windows.UIElement.RenderTransformOrigin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van het middelpunt van een mogelijke render transformatie gedeclareerd door <xref:System.Windows.UIElement.RenderTransform*>, ten opzichte van de grenzen van het element.</xref:System.Windows.UIElement.RenderTransform*>  Dit is een afhankelijkheidseigenschap."
  remarks: "RenderTransformOrigin heeft een beetje niet-standaard gebruik van de <xref:System.Windows.Point>structuur, waarde in die de <xref:System.Windows.Point>vertegenwoordigt een absolute locatie in een coördinatensysteem.</xref:System.Windows.Point> </xref:System.Windows.Point> In plaats daarvan worden waarden tussen 0 en 1 geïnterpreteerd als een factor voor het bereik van het huidige element in elk x-en y-as. Bijvoorbeeld: (0.5,0.5) zullen de transform render worden gericht op het element of (1,1) plaatst de transformatie render aan de onderkant van het element. <xref:System.Double.NaN>is geen toegestane waarde.</xref:System.Double.NaN>       Waarden dan 0 en 1 ook worden geaccepteerd en resulteert in meer niet-conventionele transformatie-effecten. Bijvoorbeeld, als u RenderTransformOrigin (5,5), en vervolgens toepassen instellen een <xref:System.Windows.Media.RotateTransform>, het punt wisselen worden ook buiten de grenzen van het element zelf.</xref:System.Windows.Media.RotateTransform> De transformatie wordt uw element om in een grote cirkel die afkomstig buiten rechtsonder is draaien. De oorsprong mogelijk ergens in het bovenliggende element en kan mogelijk mogelijk worden buiten het kader of weergave. Negatieve waarden zijn vergelijkbaar, gaat deze boven links grenzen.       Renderen transformaties niet van invloed zijn op de indeling en worden doorgaans gebruikt voor het animeren of een tijdelijke effect toepassen op een element.      <a name=&quot;xamlAttributeUsage_RenderTransformOrigin&quot;></a>## XAML Kenmerkgebruik ```   <object RenderTransformOrigin=&quot;xOrigin, yOrigin&quot;/>   ``` <a name=&quot;xamlPropertyElementUsage_RenderTransformOrigin&quot;> </a> ## elementgebruik XAML-eigenschap ```   <object>     <object.RenderTransformOrigin>       <Point X=&quot; xOrigin &quot; Y=&quot; yOrigin &quot;/>     </object.RenderTransformOrigin>   </object>   ``` <a name=&quot;xamlValues_RenderTransformOrigin&quot;> </a> ## XAML waarden *xOrigin* de factor Horizontaal beginpunt.             Dit wordt doorgaans weergegeven als een waarde tussen 0 en 1. Zie de opmerkingen.       *yOrigin* de factor verticale oorsprong. Dit wordt doorgaans weergegeven als een waarde tussen 0 en 1. Zie de opmerkingen.      <a name=&quot;dependencyPropertyInfo_RenderTransformOrigin&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.RenderTransformOriginProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.RenderTransformOriginProperty>"
  example:
  - "The following example builds up elements in code, applies a RenderTransformOrigin, and then applies a  <xref:System.Windows.UIElement.RenderTransform%2A>.  \n  \n [!code-cs[transformanimations_snip#UIElementRenderTransformOrigin](~/add/codesnippet/csharp/transformanimations_snip.project/RotateAboutCenterExample.cs#uielementrendertransformorigin)]\n [!code-vb[transformanimations_snip#UIElementRenderTransformOrigin](~/add/codesnippet/visualbasic/project/rotateaboutcenterexample.vb#uielementrendertransformorigin)]"
  syntax:
    content: public System.Windows.Point RenderTransformOrigin { get; set; }
    return:
      type: System.Windows.Point
      description: "De waarde die de transformatie render declareert. De standaardwaarde is een <xref href=&quot;System.Windows.Point&quot;> </xref> met coördinaten (0,0)."
  overload: System.Windows.UIElement.RenderTransformOrigin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.RenderTransformOriginProperty
  id: RenderTransformOriginProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: RenderTransformOriginProperty
  nameWithType: UIElement.RenderTransformOriginProperty
  fullName: System.Windows.UIElement.RenderTransformOriginProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.RenderTransformOrigin*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.RenderTransformOrigin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RenderTransformOriginProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.RenderTransformProperty
  id: RenderTransformProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: RenderTransformProperty
  nameWithType: UIElement.RenderTransformProperty
  fullName: System.Windows.UIElement.RenderTransformProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.RenderTransform*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.RenderTransform*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RenderTransformProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ShouldSerializeCommandBindings
  id: ShouldSerializeCommandBindings
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ShouldSerializeCommandBindings()
  nameWithType: UIElement.ShouldSerializeCommandBindings()
  fullName: System.Windows.UIElement.ShouldSerializeCommandBindings()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Retourneert of serialisatie processen serialisatie toepassen op de inhoud van de <xref:System.Windows.UIElement.CommandBindings*>eigenschap op instanties van deze klasse moeten.</xref:System.Windows.UIElement.CommandBindings*>"
  remarks: "Hiermee herstelt u `true` als <xref:System.Windows.UIElement.CommandBindings%2A>lokaal is ingesteld.</xref:System.Windows.UIElement.CommandBindings%2A>       Dit `ShouldSerialize` methode is bedoeld, omdat de <xref:System.Windows.UIElement.CommandBindings%2A>eigenschap heeft geen waarde voor een eenvoudige.</xref:System.Windows.UIElement.CommandBindings%2A> Deze methode geeft aan of de eigenschap van de standaardwaarde is gewijzigd. U doorgaans aanroept deze methode als u wilt ontwikkelen van een ontwerpfunctie of uw eigen besturingselement opnemen van een <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> ontwikkelen       Zie voor meer informatie [standaardwaarden definiëren met de methoden opnieuw instellen en ShouldSerialize](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ShouldSerializeCommandBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Windows.UIElement.CommandBindings*>eigenschapswaarde moet geserialiseerde; anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.UIElement.CommandBindings*>"
  overload: System.Windows.UIElement.ShouldSerializeCommandBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.ShouldSerializeInputBindings
  id: ShouldSerializeInputBindings
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: ShouldSerializeInputBindings()
  nameWithType: UIElement.ShouldSerializeInputBindings()
  fullName: System.Windows.UIElement.ShouldSerializeInputBindings()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Retourneert of serialisatie processen serialisatie toepassen op de inhoud van de <xref:System.Windows.UIElement.InputBindings*>eigenschap op instanties van deze klasse moeten.</xref:System.Windows.UIElement.InputBindings*>"
  remarks: "Hiermee herstelt u `true` als <xref:System.Windows.UIElement.InputBindings%2A>lokaal is ingesteld.</xref:System.Windows.UIElement.InputBindings%2A>       Dit `ShouldSerialize` methode is bedoeld, omdat de <xref:System.Windows.UIElement.InputBindings%2A>eigenschap heeft geen waarde voor een eenvoudige.</xref:System.Windows.UIElement.InputBindings%2A> Deze methode geeft aan of de eigenschap van de standaardwaarde is gewijzigd. U doorgaans aanroept deze methode als u wilt ontwikkelen van een ontwerpfunctie of uw eigen besturingselement opnemen van een <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> ontwikkelen       Zie voor meer informatie [standaardwaarden definiëren met de methoden opnieuw instellen en ShouldSerialize](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ShouldSerializeInputBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.Windows.UIElement.InputBindings*>eigenschapswaarde moet geserialiseerde; anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.UIElement.InputBindings*>"
  overload: System.Windows.UIElement.ShouldSerializeInputBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.SnapsToDevicePixels
  id: SnapsToDevicePixels
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: SnapsToDevicePixels
  nameWithType: UIElement.SnapsToDevicePixels
  fullName: System.Windows.UIElement.SnapsToDevicePixels
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van een waarde die bepaalt of de apparaat-specifieke pixelinstellingen voor rendering voor dit element moet worden gebruikt tijdens de rendering.  Dit is een afhankelijkheidseigenschap."
  remarks: "U kunt deze eigenschap instellen op `true` in uw hoofdelement om in te schakelen pixel uitlijnen weergeven in de gebruikersinterface. Voor apparaten die op dat groter is dan 96 [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)], pixel rendering kunt minimaliseren anti-aliasing visual artefacten in de buurt van één eenheid ononderbroken lijnen worden uitgelijnd.       Wanneer overgenomen door <xref:System.Windows.FrameworkElement>of de eventuele afgeleide klassen, <xref:System.Windows.FrameworkElement>overschrijft de metagegevens voor deze afhankelijkheidseigenschap in te stellen de <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>metagegevenseigenschap naar `true`.</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement> Dit bereikt toe is dat alleen het buitenste element in een substructuur moet specificeren SnapsToDevicePixels als `true`, en alle onderliggende elementen van de substructuur die wordt SnapsToDevicePixels als rapporteren `true` en het SnapsToDevicePixels visuele effect heeft.      <a name=&quot;dependencyPropertyInfo_SnapsToDevicePixels&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>"
  syntax:
    content: public bool SnapsToDevicePixels { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het element wordt gerenderd overeenkomstig apparaat pixels. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde als gedeclareerd op <xref href=&quot;System.Windows.UIElement&quot;> </xref> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.UIElement.SnapsToDevicePixels*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.SnapsToDevicePixelsProperty
  id: SnapsToDevicePixelsProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: SnapsToDevicePixelsProperty
  nameWithType: UIElement.SnapsToDevicePixelsProperty
  fullName: System.Windows.UIElement.SnapsToDevicePixelsProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.SnapsToDevicePixels*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.SnapsToDevicePixels*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusButtonDown
  id: StylusButtonDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusButtonDown
  nameWithType: UIElement.StylusButtonDown
  fullName: System.Windows.UIElement.StylusButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de tekenpen-knop wordt ingedrukt terwijl de muisaanwijzer op dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusButtonDown maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusButtonDown zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusButtonDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusButtonDownEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusButtonEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</xref:System.Windows.UIElement.PreviewStylusButtonDown> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement.StylusButtonDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnStylusButtonDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusButtonDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusButtonDownEvent
  id: StylusButtonDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusButtonDownEvent
  nameWithType: UIElement.StylusButtonDownEvent
  fullName: System.Windows.UIElement.StylusButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusButtonDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusButtonUp
  id: StylusButtonUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusButtonUp
  nameWithType: UIElement.StylusButtonUp
  fullName: System.Windows.UIElement.StylusButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de knop tekenpen is vrijgegeven terwijl de muisaanwijzer op dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusButtonUp maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusButtonUp zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusButtonUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusButtonUpEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusButtonEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</xref:System.Windows.UIElement.PreviewStylusButtonUp> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement.StylusButtonUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnStylusButtonUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusButtonUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusButtonUpEvent
  id: StylusButtonUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusButtonUpEvent
  nameWithType: UIElement.StylusButtonUpEvent
  fullName: System.Windows.UIElement.StylusButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusButtonUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusDown
  id: StylusDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusDown
  nameWithType: UIElement.StylusDown
  fullName: System.Windows.UIElement.StylusDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de tekenpen digitizer raakt terwijl de tekenpen op dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusDown maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusDown zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusDownEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusDownEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewStylusDown>.</xref:System.Windows.UIElement.PreviewStylusDown> </xref:System.Windows.Input.StylusDownEventHandler> </xref:System.Windows.UIElement.StylusDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnStylusDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusDownEventHandler StylusDown;
    return:
      type: System.Windows.Input.StylusDownEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusDownEvent
  id: StylusDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusDownEvent
  nameWithType: UIElement.StylusDownEvent
  fullName: System.Windows.UIElement.StylusDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusDown&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusEnter
  id: StylusEnter
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusEnter
  nameWithType: UIElement.StylusEnter
  fullName: System.Windows.UIElement.StylusEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de tekenpen bij de grenzen van dit element."
  remarks: "StylusEnter is een die gebruikmaakt van de directe gebeurtenisafhandeling routingstrategie. Directe gerouteerde gebeurtenissen worden niet gegenereerd op een route; in plaats daarvan worden ze verwerkt in het element met dezelfde waar ze worden gegenereerd. Ze echter andere aspecten van het gedrag van gerouteerde gebeurtenis, zoals gebeurtenistriggers in stijlen inschakelen.       Hoewel StylusEnter bijgehouden wanneer de tekenpen de grenzen van een element krijgt, deze gebeurtenis meer letterlijk wordt gemeld dat de <xref:System.Windows.UIElement.IsStylusOver%2A>eigenschapswaarde is gewijzigd van `false` naar `true` voor dit element.</xref:System.Windows.UIElement.IsStylusOver%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusEnter maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusEnter zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusEnter&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusEnterEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnStylusEnter%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusEnter%2A> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.StylusEnterEvent>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusEnter;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusEnterEvent
  id: StylusEnterEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusEnterEvent
  nameWithType: UIElement.StylusEnterEvent
  fullName: System.Windows.UIElement.StylusEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusEnter&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusInAirMove
  id: StylusInAirMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusInAirMove
  nameWithType: UIElement.StylusInAirMove
  fullName: System.Windows.UIElement.StylusInAirMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de tekenpen zonder dat u daadwerkelijk digitizer over een element beweegt."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusInAirMove maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusInAirMove zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusInAirMove&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusInAirMoveEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</xref:System.Windows.UIElement.PreviewStylusInAirMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.StylusInAirMoveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnStylusInAirMove%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusInAirMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusInAirMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusInAirMoveEvent
  id: StylusInAirMoveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusInAirMoveEvent
  nameWithType: UIElement.StylusInAirMoveEvent
  fullName: System.Windows.UIElement.StylusInAirMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusInAirMove&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusInRange
  id: StylusInRange
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusInRange
  nameWithType: UIElement.StylusInRange
  fullName: System.Windows.UIElement.StylusInRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de pen dicht bij de digitizer om te worden gedetecteerd, terwijl u via dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusInRange maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusInRange zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusInRange&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusInRangeEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewStylusInRange>.</xref:System.Windows.UIElement.PreviewStylusInRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.StylusInRangeEvent>      -Overschrijven <xref:System.Windows.UIElement.OnStylusInRange%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusInRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusInRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusInRangeEvent
  id: StylusInRangeEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusInRangeEvent
  nameWithType: UIElement.StylusInRangeEvent
  fullName: System.Windows.UIElement.StylusInRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusInRange&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusInRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusLeave
  id: StylusLeave
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusLeave
  nameWithType: UIElement.StylusLeave
  fullName: System.Windows.UIElement.StylusLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de tekenpen de grenzen van het element verlaat."
  remarks: "StylusLeave is een die gebruikmaakt van de directe gebeurtenisafhandeling routingstrategie. Directe gerouteerde gebeurtenissen worden niet gegenereerd op een route; in plaats daarvan worden ze verwerkt in het element met dezelfde waar ze worden gegenereerd. Ze echter andere aspecten van het gedrag van gerouteerde gebeurtenis, zoals gebeurtenistriggers in stijlen inschakelen.       Hoewel StylusLeave bijgehouden wanneer de tekenpen de grenzen van een element verlaat, deze gebeurtenis meer letterlijk wordt gemeld dat de <xref:System.Windows.UIElement.IsStylusOver%2A>eigenschapswaarde is gewijzigd van `true` naar `false` voor dit element.</xref:System.Windows.UIElement.IsStylusOver%2A>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusLeave maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusLeave zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusLeave&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusLeaveEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -Overschrijven <xref:System.Windows.UIElement.OnStylusLeave%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusLeave%2A> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.StylusLeaveEvent>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusLeave;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusLeaveEvent
  id: StylusLeaveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusLeaveEvent
  nameWithType: UIElement.StylusLeaveEvent
  fullName: System.Windows.UIElement.StylusLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusLeave&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusMove
  id: StylusMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusMove
  nameWithType: UIElement.StylusMove
  fullName: System.Windows.UIElement.StylusMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer de tekenpen over dit element wordt bewogen. De tekenpen moet verplaatsen terwijl op de digitizer verhogen van deze gebeurtenis. Anders <xref href=&quot;System.Windows.UIElement.StylusInAirMove&quot;> </xref> in plaats daarvan wordt gegenereerd."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusMove maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusMove zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusMove&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusMoveEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewStylusMove>.</xref:System.Windows.UIElement.PreviewStylusMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.StylusMoveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnStylusMove%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusMoveEvent
  id: StylusMoveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusMoveEvent
  nameWithType: UIElement.StylusMoveEvent
  fullName: System.Windows.UIElement.StylusMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusMove&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusOutOfRange
  id: StylusOutOfRange
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusOutOfRange
  nameWithType: UIElement.StylusOutOfRange
  fullName: System.Windows.UIElement.StylusOutOfRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de tekenpen te ver van digitizer om te worden gedetecteerd, terwijl u via dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusOutOfRange maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusOutOfRange zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusOutOfRange&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusOutOfRangeEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</xref:System.Windows.UIElement.PreviewStylusOutOfRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.StylusOutOfRangeEvent>      -Overschrijven <xref:System.Windows.UIElement.OnStylusOutOfRange%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusOutOfRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusOutOfRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusOutOfRangeEvent
  id: StylusOutOfRangeEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusOutOfRangeEvent
  nameWithType: UIElement.StylusOutOfRangeEvent
  fullName: System.Windows.UIElement.StylusOutOfRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusOutOfRange&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusPlugIns
  id: StylusPlugIns
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusPlugIns
  nameWithType: UIElement.StylusPlugIns
  fullName: System.Windows.UIElement.StylusPlugIns
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee haalt u een verzameling van alle tekenpen invoegtoepassing (aanpassing) objecten gekoppeld met dit element."
  remarks: "Een voorbeeld van een besturingselement dat deze verzameling vult is <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> <xref:System.Windows.Controls.InkCanvas>voegt de <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>als een Verzamelingsitem de waardoor de <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>voor interactie met tekenpeninvoer en produceren van de unieke rendering in reactie op gebeurtenissen gebaseerde tekenpen.</xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> </xref:System.Windows.Input.StylusPlugIns.DynamicRenderer></xref:System.Windows.Controls.InkCanvas>       Zie voor informatie over het maken van aangepaste invoegtoepassingen die kan ontvangen en tekenpeninvoer interpreteren, [onderscheppen invoer van de tekenpen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instance and adds it to the StylusPlugIns collection for a custom ink handling control.  \n  \n [!code-vb[StylusPluginSamples#3](~/add/codesnippet/visualbasic/StylusPluginSamples/StylusControl.vb#3)]\n [!code-cs[StylusPluginSamples#3](~/add/codesnippet/csharp/StylusPluginSamples/StylusControl.cs#3)]"
  syntax:
    content: protected System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns { get; }
    return:
      type: System.Windows.Input.StylusPlugIns.StylusPlugInCollection
      description: "De verzameling tekenpen invoegtoepassingen, als een specifieke verzameling."
  overload: System.Windows.UIElement.StylusPlugIns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusSystemGesture
  id: StylusSystemGesture
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusSystemGesture
  nameWithType: UIElement.StylusSystemGesture
  fullName: System.Windows.UIElement.StylusSystemGesture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een gebruiker een van de verschillende tekenpen gebaren uitvoert."
  remarks: "Zie voor meer informatie over tekenpen gebaren <xref:System.Windows.Input.SystemGesture>.</xref:System.Windows.Input.SystemGesture>       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusSystemGesture maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusSystemGesture zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusSystemGesture&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusSystemGestureEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusSystemGestureEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</xref:System.Windows.UIElement.PreviewStylusSystemGesture> </xref:System.Windows.Input.StylusSystemGestureEventHandler> </xref:System.Windows.UIElement.StylusSystemGestureEvent>      -Overschrijven <xref:System.Windows.UIElement.OnStylusSystemGesture%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusSystemGesture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;
    return:
      type: System.Windows.Input.StylusSystemGestureEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusSystemGestureEvent
  id: StylusSystemGestureEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusSystemGestureEvent
  nameWithType: UIElement.StylusSystemGestureEvent
  fullName: System.Windows.UIElement.StylusSystemGestureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusSystemGesture&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusUp
  id: StylusUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusUp
  nameWithType: UIElement.StylusUp
  fullName: System.Windows.UIElement.StylusUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer de gebruiker wordt gegeven de tekenpen uitschakelen digitizer terwijl er op dit element."
  remarks: "Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat StylusUp maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis StylusUp zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>       Touch, muis en tekenpeninvoer bestaan in een bepaalde relatie. Zie voor meer informatie [invoer overzicht](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.StylusUpEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.StylusEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewStylusUp>.</xref:System.Windows.UIElement.PreviewStylusUp> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement.StylusUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnStylusUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnStylusUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusUp;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.StylusUpEvent
  id: StylusUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: StylusUpEvent
  nameWithType: UIElement.StylusUpEvent
  fullName: System.Windows.UIElement.StylusUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.StylusUp&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TextInput
  id: TextInput
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TextInput
  nameWithType: UIElement.TextInput
  fullName: System.Windows.UIElement.TextInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer dit element tekst op een apparaat-onafhankelijke wijze opgehaald."
  remarks: "> [!IMPORTANT]> Deze gebeurtenis mogelijk al worden gemarkeerd als verwerkt door de interne implementaties van samengestelde besturingselementen. Zie de opmerking hieronder.       De gebeurtenis TextInput mogelijk al worden gemarkeerd als verwerkt door de interne implementaties van samengestelde besturingselementen. Bijvoorbeeld, een <xref:System.Windows.Controls.TextBox>is een samengestelde besturingselement waar de gebeurtenis TextInput is al gemarkeerd als verwerkt; binnen de samenstellen.</xref:System.Windows.Controls.TextBox> Besturingselementen hiervoor omdat het besturingselement enkele typen van de invoer, zoals pijltoetsen moet, alsof deze speciale betekenis in dat besturingselement interpreteren. Als u <xref:System.Windows.UIElement.PreviewTextInput>Als de gebeurtenis waar u handlers voor tekstinvoer toevoegen, kunt u betere resultaten krijgen.</xref:System.Windows.UIElement.PreviewTextInput> Deze techniek gevolg de meeste gevallen waarbij besturingselement samenstelling heeft deze gebeurtenis al gemarkeerd als verwerkt en wordt voorkomen dat de handler de gebeurtenis langs de gebeurtenisroute ontvangt.       De gebeurtenis TextInput kan een onderdeel of toepassing om te luisteren naar tekstinvoer op een apparaat-onafhankelijke wijze. Het toetsenbord is de primaire methode voor TextInput, maar spraak, handschriftherkenning en andere invoerapparaten kunnen ook TextInput oproepen.       Vanwege toetsencombinaties — in standaardtoetsenborden of via de invoermethode editors: meerdere belangrijke gebeurtenissen kunnen slechts één tekst invoergebeurtenis verhogen.       Deze gebeurtenis wordt gemaakt van een alias voor de <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>gebeurtenis voor deze klasse gekoppeld zodat TextInput maakt deel uit van de klasse lijst leden <xref:System.Windows.UIElement>als een base-element is overgenomen.</xref:System.Windows.UIElement> </xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName> Gebeurtenis-handlers die zijn gekoppeld aan de gebeurtenis TextInput zijn gekoppeld aan de onderliggende <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>gebeurtenis gekoppeld en de hetzelfde exemplaar met gebeurtenisgegevens ontvangen.</xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>      <a name=&quot;routedEventInfo_TextInput&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.TextInputEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.Windows.Input.TextCompositionEventHandler>|      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewTextInput>.</xref:System.Windows.UIElement.PreviewTextInput> </xref:System.Windows.Input.TextCompositionEventHandler> </xref:System.Windows.UIElement.TextInputEvent>      -Overschrijven <xref:System.Windows.UIElement.OnTextInput%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnTextInput%2A>"
  syntax:
    content: public event System.Windows.Input.TextCompositionEventHandler TextInput;
    return:
      type: System.Windows.Input.TextCompositionEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TextInputEvent
  id: TextInputEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TextInputEvent
  nameWithType: UIElement.TextInputEvent
  fullName: System.Windows.UIElement.TextInputEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.TextInput&quot;> </xref> gerouteerde gebeurtenis."
  remarks: "Gerouteerde gebeurtenis-id&quot;s worden gemaakt wanneer gerouteerde gebeurtenissen zijn geregistreerd. Deze id&quot;s bevatten een unieke naam, eigenaarstype handler-type, routingstrategie en hulpprogramma methode voor het toevoegen van eigenaars voor de gebeurtenis. U kunt deze id&quot;s gebruiken om toe te voegen klasse-handlers.       Zie voor meer informatie over het registreren van gerouteerde gebeurtenissen <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Zie voor meer informatie over het gebruik van gerouteerde gebeurtenis-id&quot;s voor het toevoegen van de klasse-handlers <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TextInputEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchDown
  id: TouchDown
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchDown
  nameWithType: UIElement.TouchDown
  fullName: System.Windows.UIElement.TouchDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een vinger het scherm, raakt terwijl de vinger op dit element."
  remarks: "Standaard de <xref:System.Windows.UIElement.PreviewTouchDown>en TouchDown gebeurtenissen wordt niet bijgewerkt tot een vinger het scherm raakt en wordt verplaatst.</xref:System.Windows.UIElement.PreviewTouchDown> Een vinger drukken op het scherm houden zonder het te verplaatsen zorgt ervoor dat de druk op en houdt u het gedrag van een <xref:System.Windows.Input.Stylus>.</xref:System.Windows.Input.Stylus> Het gedrag ingedrukt komt overeen met de muis met de rechtermuisknop.       Leiden dat de <xref:System.Windows.UIElement.PreviewTouchDown>en TouchDown gebeurtenissen optreden als een vinger het scherm raakt de <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName>eigenschap gekoppeld `false` voor dit element.</xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> </xref:System.Windows.UIElement.PreviewTouchDown>      <a name=&quot;routedEventInfo_TouchDown&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.TouchDownEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewTouchDown>.</xref:System.Windows.UIElement.PreviewTouchDown> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.TouchDownEvent>      -Overschrijven <xref:System.Windows.UIElement.OnTouchDown%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnTouchDown%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchDown;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchDownEvent
  id: TouchDownEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchDownEvent
  nameWithType: UIElement.TouchDownEvent
  fullName: System.Windows.UIElement.TouchDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.TouchDown&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchEnter
  id: TouchEnter
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchEnter
  nameWithType: UIElement.TouchEnter
  fullName: System.Windows.UIElement.TouchEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer er wordt een touch van verplaatst buiten naar binnen de grenzen van dit element."
  remarks: "Deze gebeurtenis wordt altijd gestart of zonder het apparaat touch tot dit element wordt vastgelegd.      <a name=&quot;routedEventInfo_TouchEnter&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.TouchEnterEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -Overschrijven <xref:System.Windows.UIElement.OnTouchEnter%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnTouchEnter%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.TouchEnterEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchEnter;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchEnterEvent
  id: TouchEnterEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchEnterEvent
  nameWithType: UIElement.TouchEnterEvent
  fullName: System.Windows.UIElement.TouchEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.TouchEnter&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchesCaptured
  id: TouchesCaptured
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchesCaptured
  nameWithType: UIElement.TouchesCaptured
  fullName: System.Windows.UIElement.TouchesCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee haalt u alle touch-apparaten die zijn vastgelegd voor dit element."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCaptured { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "Een opsomming van <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> objecten die zijn vastgelegd op dit element."
  overload: System.Windows.UIElement.TouchesCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchesCapturedWithin
  id: TouchesCapturedWithin
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchesCapturedWithin
  nameWithType: UIElement.TouchesCapturedWithin
  fullName: System.Windows.UIElement.TouchesCapturedWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee haalt alle touch-apparaten die zijn vastgelegd voor dit element of eventuele onderliggende elementen in de visuele boomstructuur."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCapturedWithin { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "Een opsomming van <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> objecten die zijn vastgelegd op dit element of eventuele onderliggende elementen in de visuele boomstructuur."
  overload: System.Windows.UIElement.TouchesCapturedWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchesDirectlyOver
  id: TouchesDirectlyOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchesDirectlyOver
  nameWithType: UIElement.TouchesDirectlyOver
  fullName: System.Windows.UIElement.TouchesDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee haalt u alle touch-apparaten die via dit element zijn."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesDirectlyOver { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "Een opsomming van <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> objecten die via dit element."
  overload: System.Windows.UIElement.TouchesDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchesOver
  id: TouchesOver
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchesOver
  nameWithType: UIElement.TouchesOver
  fullName: System.Windows.UIElement.TouchesOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hiermee haalt alle touch-apparaten die via dit element of eventuele onderliggende elementen in de visuele boomstructuur."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesOver { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "Een opsomming van <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> objecten die via dit element of eventuele onderliggende elementen in de visuele boomstructuur."
  overload: System.Windows.UIElement.TouchesOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchLeave
  id: TouchLeave
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchLeave
  nameWithType: UIElement.TouchLeave
  fullName: System.Windows.UIElement.TouchLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een touch wordt verplaatst van binnen naar buiten de grenzen van dit element."
  remarks: "Deze gebeurtenis wordt altijd gestart of zonder het apparaat touch tot dit element wordt vastgelegd.      <a name=&quot;routedEventInfo_TouchLeave&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.TouchLeaveEvent>|   | Routingstrategie | Directe |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -Overschrijven <xref:System.Windows.UIElement.OnTouchLeave%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnTouchLeave%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.TouchLeaveEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchLeave;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchLeaveEvent
  id: TouchLeaveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchLeaveEvent
  nameWithType: UIElement.TouchLeaveEvent
  fullName: System.Windows.UIElement.TouchLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.TouchLeave&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchMove
  id: TouchMove
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchMove
  nameWithType: UIElement.TouchMove
  fullName: System.Windows.UIElement.TouchMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Treedt op wanneer een vinger op het scherm wordt verplaatst terwijl de vinger op dit element."
  remarks: "<a name=&quot;routedEventInfo_TouchMove&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.TouchMoveEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewTouchMove>.</xref:System.Windows.UIElement.PreviewTouchMove> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.TouchMoveEvent>      -Overschrijven <xref:System.Windows.UIElement.OnTouchMove%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnTouchMove%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchMove;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchMoveEvent
  id: TouchMoveEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchMoveEvent
  nameWithType: UIElement.TouchMoveEvent
  fullName: System.Windows.UIElement.TouchMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.TouchMove&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchUp
  id: TouchUp
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchUp
  nameWithType: UIElement.TouchUp
  fullName: System.Windows.UIElement.TouchUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Deze gebeurtenis treedt op wanneer een vinger op het scherm wordt gegenereerd terwijl de vinger op dit element."
  remarks: "<a name=&quot;routedEventInfo_TouchUp&quot;></a>## Gerouteerd gebeurtenisgegevens |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.TouchUpEvent>|   | Routingstrategie | Vastleg |   | Gemachtigde | <xref:System.EventHandler%601>van het type <xref:System.Windows.Input.TouchEventArgs>. |      -De overeenkomende tunneling gebeurtenis is <xref:System.Windows.UIElement.PreviewTouchUp>.</xref:System.Windows.UIElement.PreviewTouchUp> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement.TouchUpEvent>      -Overschrijven <xref:System.Windows.UIElement.OnTouchUp%2A>voor het implementeren van de klasse verwerking voor deze gebeurtenis in afgeleide klassen.</xref:System.Windows.UIElement.OnTouchUp%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchUp;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TouchUpEvent
  id: TouchUpEvent
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TouchUpEvent
  nameWithType: UIElement.TouchUpEvent
  fullName: System.Windows.UIElement.TouchUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref href=&quot;System.Windows.UIElement.TouchUp&quot;> </xref> gerouteerde gebeurtenis."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  id: TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: TranslatePoint(Point,UIElement)
  nameWithType: UIElement.TranslatePoint(Point,UIElement)
  fullName: System.Windows.UIElement.TranslatePoint(Point,UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zet een punt ten opzichte van dit element op de coördinaten die ten opzichte van het opgegeven element zijn."
  remarks: "Doorgegeven `null` voor `relativeTo` is toegestaan en geeft aan dat de coördinaten ten opzichte van het hoofdelement in de logische structuur die dit element behoort moeten zijn.       Deze methode wordt gebruikt voor vertalen testwaarden punt bereikt. Aanroepen van deze methode is hoofdzakelijk van belang als u een besturingselement ontwerpen en moet verwerken invoer op een lager niveau. Als u van bestaande besturingselementen gebruikmaakt, kunt u in het algemeen ervan uitgaan dat voltooide besturingselementen correct vertaalde detectietest resultaten wordt gerapporteerd."
  syntax:
    content: public System.Windows.Point TranslatePoint (System.Windows.Point point, System.Windows.UIElement relativeTo);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Het punt waarde, zoals ten opzichte van dit element."
    - id: relativeTo
      type: System.Windows.UIElement
      description: "Het element omzetten van het gegeven punt in."
    return:
      type: System.Windows.Point
      description: "De waarde van een punt nu ten opzichte van het doelelement in plaats van dit bronelement."
  overload: System.Windows.UIElement.TranslatePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.Uid
  id: Uid
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Uid
  nameWithType: UIElement.Uid
  fullName: System.Windows.UIElement.Uid
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld van de unieke id (voor lokalisatie) voor dit element. Dit is een afhankelijkheidseigenschap."
  remarks: "Gebruikt door ontwerpers voor het ophalen van de `x:Uid` waarde (Zie [WPF globalisatie en lokalisatie-overzicht](~/add/includes/ajax-current-ext-md.md) voor meer informatie).      <a name=&quot;dependencyPropertyInfo_WindowWindowStyle&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.UidProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.UidProperty>"
  syntax:
    content: public string Uid { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks die is de unieke id voor dit element."
  overload: System.Windows.UIElement.Uid*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.UidProperty
  id: UidProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: UidProperty
  nameWithType: UIElement.UidProperty
  fullName: System.Windows.UIElement.UidProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.Uid*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.Uid*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty UidProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.UpdateLayout
  id: UpdateLayout
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: UpdateLayout()
  nameWithType: UIElement.UpdateLayout()
  fullName: System.Windows.UIElement.UpdateLayout()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zorgt ervoor dat alle visual onderliggende elementen van dit element op de juiste manier worden bijgewerkt voor lay-out."
  remarks: "Wanneer u deze methode aanroepen, elementen met <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` of <xref:System.Windows.UIElement.IsArrangeValid%2A> `false` belt element-specifieke <xref:System.Windows.UIElement.MeasureCore%2A>en <xref:System.Windows.UIElement.ArrangeCore%2A>methoden, waardoor de lay-out bijwerken, en alle berekende grootten worden gevalideerd.</xref:System.Windows.UIElement.ArrangeCore%2A> </xref:System.Windows.UIElement.MeasureCore%2A> </xref:System.Windows.UIElement.IsArrangeValid%2A></xref:System.Windows.UIElement.IsMeasureValid%2A>       Deze methode aanroept, heeft geen effect als de indeling ongewijzigd of als regeling noch meting status van een lay-out is ongeldig. Als indeling ongeldig in beide opzicht is, wordt de aanroep UpdateLayout echter de hele indeling opnieuw. U moet daarom UpdateLayout aanroepen na elke incrementele en secundaire wijziging in de structuur van element. De lay-out wordt uitgevoerd element lay-out in een uitgestelde manier, met een algoritme dat een compromis tussen de prestaties en valuta&quot;s en met een weging strategie om uit te stellen wijzigingen aan de hoofdmappen totdat alle onderliggende elementen geldig zijn. Als u dit echt bijgewerkte grootte en positie en alleen als u zeker weet dat alle wijzigingen in de eigenschappen dat u controle en die invloed kan zijn op indeling zijn voltooid, moet u alleen UpdateLayout aanroepen."
  syntax:
    content: public void UpdateLayout ();
    parameters: []
  overload: System.Windows.UIElement.UpdateLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.Visibility
  id: Visibility
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: Visibility
  nameWithType: UIElement.Visibility
  fullName: System.Windows.UIElement.Visibility
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Opgehaald of ingesteld de [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] zichtbaarheid van dit element.  Dit is een afhankelijkheidseigenschap."
  remarks: "Als u deze eigenschap is van invloed op de waarde van <xref:System.Windows.UIElement.IsVisible%2A>, die op zijn beurt kunnen verhogen de <xref:System.Windows.UIElement.IsVisibleChanged>gebeurtenis.</xref:System.Windows.UIElement.IsVisibleChanged> </xref:System.Windows.UIElement.IsVisible%2A> Echter, <xref:System.Windows.UIElement.IsVisible%2A>heeft andere factoren die van invloed zijn op deze, bijvoorbeeld de instellingen voor zichtbaarheid van bovenliggende items die deze bevatten</xref:System.Windows.UIElement.IsVisible%2A>       Elementen zichtbaarheid waar geen is <xref:System.Windows.Visibility>geen deel uitmaken van invoer gebeurtenissen (of opdrachten), niet van invloed op de meting of het schikken stadia van de indeling van, zijn niet in een reeks tabblad en worden niet vermeld in het testen van treffers.</xref:System.Windows.Visibility>       Wanneer overgenomen door <xref:System.Windows.Window>of afgeleide klassen, <xref:System.Windows.Window>opnieuw definieert de standaardwaarde van deze eigenschap niet <xref:System.Windows.Visibility>.</xref:System.Windows.Visibility> </xref:System.Windows.Window> </xref:System.Windows.Window> Dit is het effect van de meting op te geven van de indeling van niet wordt uitgevoerd op een in eerste instantie gemaakte <xref:System.Windows.Window>, en <xref:System.Windows.UIElement.RenderSize%2A>(0,0) retourneert.</xref:System.Windows.UIElement.RenderSize%2A> </xref:System.Windows.Window> Zie voor meer informatie <xref:System.Windows.Window>.</xref:System.Windows.Window> <xref:System.Windows.Controls.Primitives.Popup>ook opnieuw definieert de standaardwaarde als <xref:System.Windows.Visibility>, met vergelijkbare resulterende gedrag voor <xref:System.Windows.Controls.Primitives.Popup>en afgeleide klassen.</xref:System.Windows.Controls.Primitives.Popup> </xref:System.Windows.Visibility></xref:System.Windows.Controls.Primitives.Popup>      <a name=&quot;dependencyPropertyInfo_Visibility&quot;></a>## Gegevens van afhankelijkheidseigenschap |||   |-|-|   | Id-veld | <xref:System.Windows.UIElement.VisibilityProperty>|   | Eigenschappen van metagegevens is ingesteld op `true`| Geen |</xref:System.Windows.UIElement.VisibilityProperty>"
  example:
  - "The following example implements a handler that references two different named buttons that are intended to be a mutually exclusive pair in the user interface. Prior to running the actual program logic associated with the button, the button itself is set to be <xref:System.Windows.Visibility?displayProperty=fullName>, and the other button in the pair is set to <xref:System.Windows.Visibility?displayProperty=fullName>.  \n  \n [!code-cs[MediaElement_snip#UIElementVisibility](~/add/codesnippet/csharp/p-system.windows.uieleme_13_1.cs)]\n [!code-vb[MediaElement_snip#UIElementVisibility](~/add/codesnippet/visualbasic/p-system.windows.uieleme_13_1.vb)]"
  syntax:
    content: public System.Windows.Visibility Visibility { get; set; }
    return:
      type: System.Windows.Visibility
      description: "Een waarde van de inventarisatie. De standaardwaarde is <xref href=&quot;System.Windows.Visibility&quot;> </xref>."
  overload: System.Windows.UIElement.Visibility*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement.VisibilityProperty
  id: VisibilityProperty
  parent: System.Windows.UIElement
  langs:
  - csharp
  name: VisibilityProperty
  nameWithType: UIElement.VisibilityProperty
  fullName: System.Windows.UIElement.VisibilityProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identificeert de <xref:System.Windows.UIElement.Visibility*>afhankelijkheidseigenschap.</xref:System.Windows.UIElement.Visibility*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty VisibilityProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Visual
  isExternal: false
  name: System.Windows.Media.Visual
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.UIElement.#ctor
  parent: System.Windows.UIElement
  isExternal: false
  name: UIElement()
  nameWithType: UIElement.UIElement()
  fullName: System.Windows.UIElement.UIElement()
- uid: System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: UIElement.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement.AddHandler(RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.UIElement
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: UIElement.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.UIElement.AddHandler(RoutedEvent,Delegate,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: AddToEventRoute(EventRoute,RoutedEventArgs)
  nameWithType: UIElement.AddToEventRoute(EventRoute,RoutedEventArgs)
  fullName: System.Windows.UIElement.AddToEventRoute(EventRoute,RoutedEventArgs)
- uid: System.Windows.EventRoute
  parent: System.Windows
  isExternal: false
  name: EventRoute
  nameWithType: EventRoute
  fullName: System.Windows.EventRoute
- uid: System.Windows.RoutedEventArgs
  parent: System.Windows
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.UIElement.AllowDrop
  parent: System.Windows.UIElement
  isExternal: false
  name: AllowDrop
  nameWithType: UIElement.AllowDrop
  fullName: System.Windows.UIElement.AllowDrop
- uid: System.Windows.UIElement.AllowDropProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: AllowDropProperty
  nameWithType: UIElement.AllowDropProperty
  fullName: System.Windows.UIElement.AllowDropProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.UIElement
  isExternal: false
  name: ApplyAnimationClock(DependencyProperty,AnimationClock)
  nameWithType: UIElement.ApplyAnimationClock(DependencyProperty,AnimationClock)
  fullName: System.Windows.UIElement.ApplyAnimationClock(DependencyProperty,AnimationClock)
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.UIElement
  isExternal: false
  name: ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  nameWithType: UIElement.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  fullName: System.Windows.UIElement.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
- uid: System.Windows.Media.Animation.HandoffBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: HandoffBehavior
  nameWithType: HandoffBehavior
  fullName: System.Windows.Media.Animation.HandoffBehavior
- uid: System.Windows.UIElement.AreAnyTouchesCaptured
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesCaptured
  nameWithType: UIElement.AreAnyTouchesCaptured
  fullName: System.Windows.UIElement.AreAnyTouchesCaptured
- uid: System.Windows.UIElement.AreAnyTouchesCapturedProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesCapturedProperty
  nameWithType: UIElement.AreAnyTouchesCapturedProperty
  fullName: System.Windows.UIElement.AreAnyTouchesCapturedProperty
- uid: System.Windows.UIElement.AreAnyTouchesCapturedWithin
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesCapturedWithin
  nameWithType: UIElement.AreAnyTouchesCapturedWithin
  fullName: System.Windows.UIElement.AreAnyTouchesCapturedWithin
- uid: System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesCapturedWithinProperty
  nameWithType: UIElement.AreAnyTouchesCapturedWithinProperty
  fullName: System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
- uid: System.Windows.UIElement.AreAnyTouchesDirectlyOver
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesDirectlyOver
  nameWithType: UIElement.AreAnyTouchesDirectlyOver
  fullName: System.Windows.UIElement.AreAnyTouchesDirectlyOver
- uid: System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesDirectlyOverProperty
  nameWithType: UIElement.AreAnyTouchesDirectlyOverProperty
  fullName: System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
- uid: System.Windows.UIElement.AreAnyTouchesOver
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesOver
  nameWithType: UIElement.AreAnyTouchesOver
  fullName: System.Windows.UIElement.AreAnyTouchesOver
- uid: System.Windows.UIElement.AreAnyTouchesOverProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesOverProperty
  nameWithType: UIElement.AreAnyTouchesOverProperty
  fullName: System.Windows.UIElement.AreAnyTouchesOverProperty
- uid: System.Windows.UIElement.Arrange(System.Windows.Rect)
  parent: System.Windows.UIElement
  isExternal: false
  name: Arrange(Rect)
  nameWithType: UIElement.Arrange(Rect)
  fullName: System.Windows.UIElement.Arrange(Rect)
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.UIElement.ArrangeCore(System.Windows.Rect)
  parent: System.Windows.UIElement
  isExternal: false
  name: ArrangeCore(Rect)
  nameWithType: UIElement.ArrangeCore(Rect)
  fullName: System.Windows.UIElement.ArrangeCore(Rect)
- uid: System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  parent: System.Windows.UIElement
  isExternal: false
  name: BeginAnimation(DependencyProperty,AnimationTimeline)
  nameWithType: UIElement.BeginAnimation(DependencyProperty,AnimationTimeline)
  fullName: System.Windows.UIElement.BeginAnimation(DependencyProperty,AnimationTimeline)
- uid: System.Windows.Media.Animation.AnimationTimeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationTimeline
  nameWithType: AnimationTimeline
  fullName: System.Windows.Media.Animation.AnimationTimeline
- uid: System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.UIElement
  isExternal: false
  name: BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  nameWithType: UIElement.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  fullName: System.Windows.UIElement.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
- uid: System.Windows.UIElement.BitmapEffect
  parent: System.Windows.UIElement
  isExternal: false
  name: BitmapEffect
  nameWithType: UIElement.BitmapEffect
  fullName: System.Windows.UIElement.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.UIElement.BitmapEffectInput
  parent: System.Windows.UIElement
  isExternal: false
  name: BitmapEffectInput
  nameWithType: UIElement.BitmapEffectInput
  fullName: System.Windows.UIElement.BitmapEffectInput
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.UIElement.BitmapEffectInputProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: BitmapEffectInputProperty
  nameWithType: UIElement.BitmapEffectInputProperty
  fullName: System.Windows.UIElement.BitmapEffectInputProperty
- uid: System.Windows.UIElement.BitmapEffectProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: BitmapEffectProperty
  nameWithType: UIElement.BitmapEffectProperty
  fullName: System.Windows.UIElement.BitmapEffectProperty
- uid: System.Windows.UIElement.CacheMode
  parent: System.Windows.UIElement
  isExternal: false
  name: CacheMode
  nameWithType: UIElement.CacheMode
  fullName: System.Windows.UIElement.CacheMode
- uid: System.Windows.Media.CacheMode
  parent: System.Windows.Media
  isExternal: false
  name: CacheMode
  nameWithType: CacheMode
  fullName: System.Windows.Media.CacheMode
- uid: System.Windows.UIElement.CacheModeProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: CacheModeProperty
  nameWithType: UIElement.CacheModeProperty
  fullName: System.Windows.UIElement.CacheModeProperty
- uid: System.Windows.UIElement.CaptureMouse
  parent: System.Windows.UIElement
  isExternal: false
  name: CaptureMouse()
  nameWithType: UIElement.CaptureMouse()
  fullName: System.Windows.UIElement.CaptureMouse()
- uid: System.Windows.UIElement.CaptureStylus
  parent: System.Windows.UIElement
  isExternal: false
  name: CaptureStylus()
  nameWithType: UIElement.CaptureStylus()
  fullName: System.Windows.UIElement.CaptureStylus()
- uid: System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement
  isExternal: false
  name: CaptureTouch(TouchDevice)
  nameWithType: UIElement.CaptureTouch(TouchDevice)
  fullName: System.Windows.UIElement.CaptureTouch(TouchDevice)
- uid: System.Windows.Input.TouchDevice
  parent: System.Windows.Input
  isExternal: false
  name: TouchDevice
  nameWithType: TouchDevice
  fullName: System.Windows.Input.TouchDevice
- uid: System.Windows.UIElement.Clip
  parent: System.Windows.UIElement
  isExternal: false
  name: Clip
  nameWithType: UIElement.Clip
  fullName: System.Windows.UIElement.Clip
- uid: System.Windows.Media.Geometry
  parent: System.Windows.Media
  isExternal: false
  name: Geometry
  nameWithType: Geometry
  fullName: System.Windows.Media.Geometry
- uid: System.Windows.UIElement.ClipProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: ClipProperty
  nameWithType: UIElement.ClipProperty
  fullName: System.Windows.UIElement.ClipProperty
- uid: System.Windows.UIElement.ClipToBounds
  parent: System.Windows.UIElement
  isExternal: false
  name: ClipToBounds
  nameWithType: UIElement.ClipToBounds
  fullName: System.Windows.UIElement.ClipToBounds
- uid: System.Windows.UIElement.ClipToBoundsProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: ClipToBoundsProperty
  nameWithType: UIElement.ClipToBoundsProperty
  fullName: System.Windows.UIElement.ClipToBoundsProperty
- uid: System.Windows.UIElement.CommandBindings
  parent: System.Windows.UIElement
  isExternal: false
  name: CommandBindings
  nameWithType: UIElement.CommandBindings
  fullName: System.Windows.UIElement.CommandBindings
- uid: System.Windows.Input.CommandBindingCollection
  parent: System.Windows.Input
  isExternal: false
  name: CommandBindingCollection
  nameWithType: CommandBindingCollection
  fullName: System.Windows.Input.CommandBindingCollection
- uid: System.Windows.UIElement.DesiredSize
  parent: System.Windows.UIElement
  isExternal: false
  name: DesiredSize
  nameWithType: UIElement.DesiredSize
  fullName: System.Windows.UIElement.DesiredSize
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.UIElement.DragEnter
  parent: System.Windows.UIElement
  isExternal: false
  name: DragEnter
  nameWithType: UIElement.DragEnter
  fullName: System.Windows.UIElement.DragEnter
- uid: System.Windows.DragEventHandler
  parent: System.Windows
  isExternal: false
  name: DragEventHandler
  nameWithType: DragEventHandler
  fullName: System.Windows.DragEventHandler
- uid: System.Windows.UIElement.DragEnterEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: DragEnterEvent
  nameWithType: UIElement.DragEnterEvent
  fullName: System.Windows.UIElement.DragEnterEvent
- uid: System.Windows.UIElement.DragLeave
  parent: System.Windows.UIElement
  isExternal: false
  name: DragLeave
  nameWithType: UIElement.DragLeave
  fullName: System.Windows.UIElement.DragLeave
- uid: System.Windows.UIElement.DragLeaveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: DragLeaveEvent
  nameWithType: UIElement.DragLeaveEvent
  fullName: System.Windows.UIElement.DragLeaveEvent
- uid: System.Windows.UIElement.DragOver
  parent: System.Windows.UIElement
  isExternal: false
  name: DragOver
  nameWithType: UIElement.DragOver
  fullName: System.Windows.UIElement.DragOver
- uid: System.Windows.UIElement.DragOverEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: DragOverEvent
  nameWithType: UIElement.DragOverEvent
  fullName: System.Windows.UIElement.DragOverEvent
- uid: System.Windows.UIElement.Drop
  parent: System.Windows.UIElement
  isExternal: false
  name: Drop
  nameWithType: UIElement.Drop
  fullName: System.Windows.UIElement.Drop
- uid: System.Windows.UIElement.DropEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: DropEvent
  nameWithType: UIElement.DropEvent
  fullName: System.Windows.UIElement.DropEvent
- uid: System.Windows.UIElement.Effect
  parent: System.Windows.UIElement
  isExternal: false
  name: Effect
  nameWithType: UIElement.Effect
  fullName: System.Windows.UIElement.Effect
- uid: System.Windows.Media.Effects.Effect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
- uid: System.Windows.UIElement.EffectProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: EffectProperty
  nameWithType: UIElement.EffectProperty
  fullName: System.Windows.UIElement.EffectProperty
- uid: System.Windows.UIElement.Focus
  parent: System.Windows.UIElement
  isExternal: false
  name: Focus()
  nameWithType: UIElement.Focus()
  fullName: System.Windows.UIElement.Focus()
- uid: System.Windows.UIElement.Focusable
  parent: System.Windows.UIElement
  isExternal: false
  name: Focusable
  nameWithType: UIElement.Focusable
  fullName: System.Windows.UIElement.Focusable
- uid: System.Windows.UIElement.FocusableChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: FocusableChanged
  nameWithType: UIElement.FocusableChanged
  fullName: System.Windows.UIElement.FocusableChanged
- uid: System.Windows.DependencyPropertyChangedEventHandler
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventHandler
  nameWithType: DependencyPropertyChangedEventHandler
  fullName: System.Windows.DependencyPropertyChangedEventHandler
- uid: System.Windows.UIElement.FocusableProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: FocusableProperty
  nameWithType: UIElement.FocusableProperty
  fullName: System.Windows.UIElement.FocusableProperty
- uid: System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.UIElement
  isExternal: false
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: UIElement.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.UIElement.GetAnimationBaseValue(DependencyProperty)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.UIElement.GetLayoutClip(System.Windows.Size)
  parent: System.Windows.UIElement
  isExternal: false
  name: GetLayoutClip(Size)
  nameWithType: UIElement.GetLayoutClip(Size)
  fullName: System.Windows.UIElement.GetLayoutClip(Size)
- uid: System.Windows.UIElement.GetUIParentCore
  parent: System.Windows.UIElement
  isExternal: false
  name: GetUIParentCore()
  nameWithType: UIElement.GetUIParentCore()
  fullName: System.Windows.UIElement.GetUIParentCore()
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.UIElement.GiveFeedback
  parent: System.Windows.UIElement
  isExternal: false
  name: GiveFeedback
  nameWithType: UIElement.GiveFeedback
  fullName: System.Windows.UIElement.GiveFeedback
- uid: System.Windows.GiveFeedbackEventHandler
  parent: System.Windows
  isExternal: false
  name: GiveFeedbackEventHandler
  nameWithType: GiveFeedbackEventHandler
  fullName: System.Windows.GiveFeedbackEventHandler
- uid: System.Windows.UIElement.GiveFeedbackEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: GiveFeedbackEvent
  nameWithType: UIElement.GiveFeedbackEvent
  fullName: System.Windows.UIElement.GiveFeedbackEvent
- uid: System.Windows.UIElement.GotFocus
  parent: System.Windows.UIElement
  isExternal: false
  name: GotFocus
  nameWithType: UIElement.GotFocus
  fullName: System.Windows.UIElement.GotFocus
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.UIElement.GotFocusEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: GotFocusEvent
  nameWithType: UIElement.GotFocusEvent
  fullName: System.Windows.UIElement.GotFocusEvent
- uid: System.Windows.UIElement.GotKeyboardFocus
  parent: System.Windows.UIElement
  isExternal: false
  name: GotKeyboardFocus
  nameWithType: UIElement.GotKeyboardFocus
  fullName: System.Windows.UIElement.GotKeyboardFocus
- uid: System.Windows.Input.KeyboardFocusChangedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardFocusChangedEventHandler
  nameWithType: KeyboardFocusChangedEventHandler
  fullName: System.Windows.Input.KeyboardFocusChangedEventHandler
- uid: System.Windows.UIElement.GotKeyboardFocusEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: GotKeyboardFocusEvent
  nameWithType: UIElement.GotKeyboardFocusEvent
  fullName: System.Windows.UIElement.GotKeyboardFocusEvent
- uid: System.Windows.UIElement.GotMouseCapture
  parent: System.Windows.UIElement
  isExternal: false
  name: GotMouseCapture
  nameWithType: UIElement.GotMouseCapture
  fullName: System.Windows.UIElement.GotMouseCapture
- uid: System.Windows.Input.MouseEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Input.MouseEventHandler
- uid: System.Windows.UIElement.GotMouseCaptureEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: GotMouseCaptureEvent
  nameWithType: UIElement.GotMouseCaptureEvent
  fullName: System.Windows.UIElement.GotMouseCaptureEvent
- uid: System.Windows.UIElement.GotStylusCapture
  parent: System.Windows.UIElement
  isExternal: false
  name: GotStylusCapture
  nameWithType: UIElement.GotStylusCapture
  fullName: System.Windows.UIElement.GotStylusCapture
- uid: System.Windows.Input.StylusEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusEventHandler
  nameWithType: StylusEventHandler
  fullName: System.Windows.Input.StylusEventHandler
- uid: System.Windows.UIElement.GotStylusCaptureEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: GotStylusCaptureEvent
  nameWithType: UIElement.GotStylusCaptureEvent
  fullName: System.Windows.UIElement.GotStylusCaptureEvent
- uid: System.Windows.UIElement.GotTouchCapture
  parent: System.Windows.UIElement
  isExternal: false
  name: GotTouchCapture
  nameWithType: UIElement.GotTouchCapture
  fullName: System.Windows.UIElement.GotTouchCapture
- uid: System.EventHandler{System.Windows.Input.TouchEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<TouchEventArgs>
  nameWithType: EventHandler<TouchEventArgs>
  fullName: System.EventHandler<System.Windows.Input.TouchEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.TouchEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.TouchEventArgs
    name: TouchEventArgs
    nameWithType: TouchEventArgs
    fullName: TouchEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement.GotTouchCaptureEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: GotTouchCaptureEvent
  nameWithType: UIElement.GotTouchCaptureEvent
  fullName: System.Windows.UIElement.GotTouchCaptureEvent
- uid: System.Windows.UIElement.HasAnimatedProperties
  parent: System.Windows.UIElement
  isExternal: false
  name: HasAnimatedProperties
  nameWithType: UIElement.HasAnimatedProperties
  fullName: System.Windows.UIElement.HasAnimatedProperties
- uid: System.Windows.UIElement.HasEffectiveKeyboardFocus
  parent: System.Windows.UIElement
  isExternal: false
  name: HasEffectiveKeyboardFocus
  nameWithType: UIElement.HasEffectiveKeyboardFocus
  fullName: System.Windows.UIElement.HasEffectiveKeyboardFocus
- uid: System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  parent: System.Windows.UIElement
  isExternal: false
  name: HitTestCore(GeometryHitTestParameters)
  nameWithType: UIElement.HitTestCore(GeometryHitTestParameters)
  fullName: System.Windows.UIElement.HitTestCore(GeometryHitTestParameters)
- uid: System.Windows.Media.GeometryHitTestResult
  parent: System.Windows.Media
  isExternal: false
  name: GeometryHitTestResult
  nameWithType: GeometryHitTestResult
  fullName: System.Windows.Media.GeometryHitTestResult
- uid: System.Windows.Media.GeometryHitTestParameters
  parent: System.Windows.Media
  isExternal: false
  name: GeometryHitTestParameters
  nameWithType: GeometryHitTestParameters
  fullName: System.Windows.Media.GeometryHitTestParameters
- uid: System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.UIElement
  isExternal: false
  name: HitTestCore(PointHitTestParameters)
  nameWithType: UIElement.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.UIElement.HitTestCore(PointHitTestParameters)
- uid: System.Windows.Media.HitTestResult
  parent: System.Windows.Media
  isExternal: false
  name: HitTestResult
  nameWithType: HitTestResult
  fullName: System.Windows.Media.HitTestResult
- uid: System.Windows.Media.PointHitTestParameters
  parent: System.Windows.Media
  isExternal: false
  name: PointHitTestParameters
  nameWithType: PointHitTestParameters
  fullName: System.Windows.Media.PointHitTestParameters
- uid: System.Windows.UIElement.InputBindings
  parent: System.Windows.UIElement
  isExternal: false
  name: InputBindings
  nameWithType: UIElement.InputBindings
  fullName: System.Windows.UIElement.InputBindings
- uid: System.Windows.Input.InputBindingCollection
  parent: System.Windows.Input
  isExternal: false
  name: InputBindingCollection
  nameWithType: InputBindingCollection
  fullName: System.Windows.Input.InputBindingCollection
- uid: System.Windows.UIElement.InputHitTest(System.Windows.Point)
  parent: System.Windows.UIElement
  isExternal: false
  name: InputHitTest(Point)
  nameWithType: UIElement.InputHitTest(Point)
  fullName: System.Windows.UIElement.InputHitTest(Point)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.UIElement.InvalidateArrange
  parent: System.Windows.UIElement
  isExternal: false
  name: InvalidateArrange()
  nameWithType: UIElement.InvalidateArrange()
  fullName: System.Windows.UIElement.InvalidateArrange()
- uid: System.Windows.UIElement.InvalidateMeasure
  parent: System.Windows.UIElement
  isExternal: false
  name: InvalidateMeasure()
  nameWithType: UIElement.InvalidateMeasure()
  fullName: System.Windows.UIElement.InvalidateMeasure()
- uid: System.Windows.UIElement.InvalidateVisual
  parent: System.Windows.UIElement
  isExternal: false
  name: InvalidateVisual()
  nameWithType: UIElement.InvalidateVisual()
  fullName: System.Windows.UIElement.InvalidateVisual()
- uid: System.Windows.UIElement.IsArrangeValid
  parent: System.Windows.UIElement
  isExternal: false
  name: IsArrangeValid
  nameWithType: UIElement.IsArrangeValid
  fullName: System.Windows.UIElement.IsArrangeValid
- uid: System.Windows.UIElement.IsEnabled
  parent: System.Windows.UIElement
  isExternal: false
  name: IsEnabled
  nameWithType: UIElement.IsEnabled
  fullName: System.Windows.UIElement.IsEnabled
- uid: System.Windows.UIElement.IsEnabledChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsEnabledChanged
  nameWithType: UIElement.IsEnabledChanged
  fullName: System.Windows.UIElement.IsEnabledChanged
- uid: System.Windows.UIElement.IsEnabledCore
  parent: System.Windows.UIElement
  isExternal: false
  name: IsEnabledCore
  nameWithType: UIElement.IsEnabledCore
  fullName: System.Windows.UIElement.IsEnabledCore
- uid: System.Windows.UIElement.IsEnabledProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsEnabledProperty
  nameWithType: UIElement.IsEnabledProperty
  fullName: System.Windows.UIElement.IsEnabledProperty
- uid: System.Windows.UIElement.IsFocused
  parent: System.Windows.UIElement
  isExternal: false
  name: IsFocused
  nameWithType: UIElement.IsFocused
  fullName: System.Windows.UIElement.IsFocused
- uid: System.Windows.UIElement.IsFocusedProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsFocusedProperty
  nameWithType: UIElement.IsFocusedProperty
  fullName: System.Windows.UIElement.IsFocusedProperty
- uid: System.Windows.UIElement.IsHitTestVisible
  parent: System.Windows.UIElement
  isExternal: false
  name: IsHitTestVisible
  nameWithType: UIElement.IsHitTestVisible
  fullName: System.Windows.UIElement.IsHitTestVisible
- uid: System.Windows.UIElement.IsHitTestVisibleChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsHitTestVisibleChanged
  nameWithType: UIElement.IsHitTestVisibleChanged
  fullName: System.Windows.UIElement.IsHitTestVisibleChanged
- uid: System.Windows.UIElement.IsHitTestVisibleProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsHitTestVisibleProperty
  nameWithType: UIElement.IsHitTestVisibleProperty
  fullName: System.Windows.UIElement.IsHitTestVisibleProperty
- uid: System.Windows.UIElement.IsInputMethodEnabled
  parent: System.Windows.UIElement
  isExternal: false
  name: IsInputMethodEnabled
  nameWithType: UIElement.IsInputMethodEnabled
  fullName: System.Windows.UIElement.IsInputMethodEnabled
- uid: System.Windows.UIElement.IsKeyboardFocused
  parent: System.Windows.UIElement
  isExternal: false
  name: IsKeyboardFocused
  nameWithType: UIElement.IsKeyboardFocused
  fullName: System.Windows.UIElement.IsKeyboardFocused
- uid: System.Windows.UIElement.IsKeyboardFocusedChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsKeyboardFocusedChanged
  nameWithType: UIElement.IsKeyboardFocusedChanged
  fullName: System.Windows.UIElement.IsKeyboardFocusedChanged
- uid: System.Windows.UIElement.IsKeyboardFocusedProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsKeyboardFocusedProperty
  nameWithType: UIElement.IsKeyboardFocusedProperty
  fullName: System.Windows.UIElement.IsKeyboardFocusedProperty
- uid: System.Windows.UIElement.IsKeyboardFocusWithin
  parent: System.Windows.UIElement
  isExternal: false
  name: IsKeyboardFocusWithin
  nameWithType: UIElement.IsKeyboardFocusWithin
  fullName: System.Windows.UIElement.IsKeyboardFocusWithin
- uid: System.Windows.UIElement.IsKeyboardFocusWithinChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsKeyboardFocusWithinChanged
  nameWithType: UIElement.IsKeyboardFocusWithinChanged
  fullName: System.Windows.UIElement.IsKeyboardFocusWithinChanged
- uid: System.Windows.UIElement.IsKeyboardFocusWithinProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsKeyboardFocusWithinProperty
  nameWithType: UIElement.IsKeyboardFocusWithinProperty
  fullName: System.Windows.UIElement.IsKeyboardFocusWithinProperty
- uid: System.Windows.UIElement.IsManipulationEnabled
  parent: System.Windows.UIElement
  isExternal: false
  name: IsManipulationEnabled
  nameWithType: UIElement.IsManipulationEnabled
  fullName: System.Windows.UIElement.IsManipulationEnabled
- uid: System.Windows.UIElement.IsManipulationEnabledProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsManipulationEnabledProperty
  nameWithType: UIElement.IsManipulationEnabledProperty
  fullName: System.Windows.UIElement.IsManipulationEnabledProperty
- uid: System.Windows.UIElement.IsMeasureValid
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMeasureValid
  nameWithType: UIElement.IsMeasureValid
  fullName: System.Windows.UIElement.IsMeasureValid
- uid: System.Windows.UIElement.IsMouseCaptured
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseCaptured
  nameWithType: UIElement.IsMouseCaptured
  fullName: System.Windows.UIElement.IsMouseCaptured
- uid: System.Windows.UIElement.IsMouseCapturedChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseCapturedChanged
  nameWithType: UIElement.IsMouseCapturedChanged
  fullName: System.Windows.UIElement.IsMouseCapturedChanged
- uid: System.Windows.UIElement.IsMouseCapturedProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseCapturedProperty
  nameWithType: UIElement.IsMouseCapturedProperty
  fullName: System.Windows.UIElement.IsMouseCapturedProperty
- uid: System.Windows.UIElement.IsMouseCaptureWithin
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseCaptureWithin
  nameWithType: UIElement.IsMouseCaptureWithin
  fullName: System.Windows.UIElement.IsMouseCaptureWithin
- uid: System.Windows.UIElement.IsMouseCaptureWithinChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseCaptureWithinChanged
  nameWithType: UIElement.IsMouseCaptureWithinChanged
  fullName: System.Windows.UIElement.IsMouseCaptureWithinChanged
- uid: System.Windows.UIElement.IsMouseCaptureWithinProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseCaptureWithinProperty
  nameWithType: UIElement.IsMouseCaptureWithinProperty
  fullName: System.Windows.UIElement.IsMouseCaptureWithinProperty
- uid: System.Windows.UIElement.IsMouseDirectlyOver
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseDirectlyOver
  nameWithType: UIElement.IsMouseDirectlyOver
  fullName: System.Windows.UIElement.IsMouseDirectlyOver
- uid: System.Windows.UIElement.IsMouseDirectlyOverChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseDirectlyOverChanged
  nameWithType: UIElement.IsMouseDirectlyOverChanged
  fullName: System.Windows.UIElement.IsMouseDirectlyOverChanged
- uid: System.Windows.UIElement.IsMouseDirectlyOverProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseDirectlyOverProperty
  nameWithType: UIElement.IsMouseDirectlyOverProperty
  fullName: System.Windows.UIElement.IsMouseDirectlyOverProperty
- uid: System.Windows.UIElement.IsMouseOver
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseOver
  nameWithType: UIElement.IsMouseOver
  fullName: System.Windows.UIElement.IsMouseOver
- uid: System.Windows.UIElement.IsMouseOverProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseOverProperty
  nameWithType: UIElement.IsMouseOverProperty
  fullName: System.Windows.UIElement.IsMouseOverProperty
- uid: System.Windows.UIElement.IsStylusCaptured
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusCaptured
  nameWithType: UIElement.IsStylusCaptured
  fullName: System.Windows.UIElement.IsStylusCaptured
- uid: System.Windows.UIElement.IsStylusCapturedChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusCapturedChanged
  nameWithType: UIElement.IsStylusCapturedChanged
  fullName: System.Windows.UIElement.IsStylusCapturedChanged
- uid: System.Windows.UIElement.IsStylusCapturedProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusCapturedProperty
  nameWithType: UIElement.IsStylusCapturedProperty
  fullName: System.Windows.UIElement.IsStylusCapturedProperty
- uid: System.Windows.UIElement.IsStylusCaptureWithin
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusCaptureWithin
  nameWithType: UIElement.IsStylusCaptureWithin
  fullName: System.Windows.UIElement.IsStylusCaptureWithin
- uid: System.Windows.UIElement.IsStylusCaptureWithinChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusCaptureWithinChanged
  nameWithType: UIElement.IsStylusCaptureWithinChanged
  fullName: System.Windows.UIElement.IsStylusCaptureWithinChanged
- uid: System.Windows.UIElement.IsStylusCaptureWithinProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusCaptureWithinProperty
  nameWithType: UIElement.IsStylusCaptureWithinProperty
  fullName: System.Windows.UIElement.IsStylusCaptureWithinProperty
- uid: System.Windows.UIElement.IsStylusDirectlyOver
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusDirectlyOver
  nameWithType: UIElement.IsStylusDirectlyOver
  fullName: System.Windows.UIElement.IsStylusDirectlyOver
- uid: System.Windows.UIElement.IsStylusDirectlyOverChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusDirectlyOverChanged
  nameWithType: UIElement.IsStylusDirectlyOverChanged
  fullName: System.Windows.UIElement.IsStylusDirectlyOverChanged
- uid: System.Windows.UIElement.IsStylusDirectlyOverProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusDirectlyOverProperty
  nameWithType: UIElement.IsStylusDirectlyOverProperty
  fullName: System.Windows.UIElement.IsStylusDirectlyOverProperty
- uid: System.Windows.UIElement.IsStylusOver
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusOver
  nameWithType: UIElement.IsStylusOver
  fullName: System.Windows.UIElement.IsStylusOver
- uid: System.Windows.UIElement.IsStylusOverProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusOverProperty
  nameWithType: UIElement.IsStylusOverProperty
  fullName: System.Windows.UIElement.IsStylusOverProperty
- uid: System.Windows.UIElement.IsVisible
  parent: System.Windows.UIElement
  isExternal: false
  name: IsVisible
  nameWithType: UIElement.IsVisible
  fullName: System.Windows.UIElement.IsVisible
- uid: System.Windows.UIElement.IsVisibleChanged
  parent: System.Windows.UIElement
  isExternal: false
  name: IsVisibleChanged
  nameWithType: UIElement.IsVisibleChanged
  fullName: System.Windows.UIElement.IsVisibleChanged
- uid: System.Windows.UIElement.IsVisibleProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: IsVisibleProperty
  nameWithType: UIElement.IsVisibleProperty
  fullName: System.Windows.UIElement.IsVisibleProperty
- uid: System.Windows.UIElement.KeyDown
  parent: System.Windows.UIElement
  isExternal: false
  name: KeyDown
  nameWithType: UIElement.KeyDown
  fullName: System.Windows.UIElement.KeyDown
- uid: System.Windows.Input.KeyEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: KeyEventHandler
  nameWithType: KeyEventHandler
  fullName: System.Windows.Input.KeyEventHandler
- uid: System.Windows.UIElement.KeyDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: KeyDownEvent
  nameWithType: UIElement.KeyDownEvent
  fullName: System.Windows.UIElement.KeyDownEvent
- uid: System.Windows.UIElement.KeyUp
  parent: System.Windows.UIElement
  isExternal: false
  name: KeyUp
  nameWithType: UIElement.KeyUp
  fullName: System.Windows.UIElement.KeyUp
- uid: System.Windows.UIElement.KeyUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: KeyUpEvent
  nameWithType: UIElement.KeyUpEvent
  fullName: System.Windows.UIElement.KeyUpEvent
- uid: System.Windows.UIElement.LayoutUpdated
  parent: System.Windows.UIElement
  isExternal: false
  name: LayoutUpdated
  nameWithType: UIElement.LayoutUpdated
  fullName: System.Windows.UIElement.LayoutUpdated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.UIElement.LostFocus
  parent: System.Windows.UIElement
  isExternal: false
  name: LostFocus
  nameWithType: UIElement.LostFocus
  fullName: System.Windows.UIElement.LostFocus
- uid: System.Windows.UIElement.LostFocusEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: LostFocusEvent
  nameWithType: UIElement.LostFocusEvent
  fullName: System.Windows.UIElement.LostFocusEvent
- uid: System.Windows.UIElement.LostKeyboardFocus
  parent: System.Windows.UIElement
  isExternal: false
  name: LostKeyboardFocus
  nameWithType: UIElement.LostKeyboardFocus
  fullName: System.Windows.UIElement.LostKeyboardFocus
- uid: System.Windows.UIElement.LostKeyboardFocusEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: LostKeyboardFocusEvent
  nameWithType: UIElement.LostKeyboardFocusEvent
  fullName: System.Windows.UIElement.LostKeyboardFocusEvent
- uid: System.Windows.UIElement.LostMouseCapture
  parent: System.Windows.UIElement
  isExternal: false
  name: LostMouseCapture
  nameWithType: UIElement.LostMouseCapture
  fullName: System.Windows.UIElement.LostMouseCapture
- uid: System.Windows.UIElement.LostMouseCaptureEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: LostMouseCaptureEvent
  nameWithType: UIElement.LostMouseCaptureEvent
  fullName: System.Windows.UIElement.LostMouseCaptureEvent
- uid: System.Windows.UIElement.LostStylusCapture
  parent: System.Windows.UIElement
  isExternal: false
  name: LostStylusCapture
  nameWithType: UIElement.LostStylusCapture
  fullName: System.Windows.UIElement.LostStylusCapture
- uid: System.Windows.UIElement.LostStylusCaptureEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: LostStylusCaptureEvent
  nameWithType: UIElement.LostStylusCaptureEvent
  fullName: System.Windows.UIElement.LostStylusCaptureEvent
- uid: System.Windows.UIElement.LostTouchCapture
  parent: System.Windows.UIElement
  isExternal: false
  name: LostTouchCapture
  nameWithType: UIElement.LostTouchCapture
  fullName: System.Windows.UIElement.LostTouchCapture
- uid: System.Windows.UIElement.LostTouchCaptureEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: LostTouchCaptureEvent
  nameWithType: UIElement.LostTouchCaptureEvent
  fullName: System.Windows.UIElement.LostTouchCaptureEvent
- uid: System.Windows.UIElement.ManipulationBoundaryFeedback
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationBoundaryFeedback
  nameWithType: UIElement.ManipulationBoundaryFeedback
  fullName: System.Windows.UIElement.ManipulationBoundaryFeedback
- uid: System.EventHandler{System.Windows.Input.ManipulationBoundaryFeedbackEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ManipulationBoundaryFeedbackEventArgs>
  nameWithType: EventHandler<ManipulationBoundaryFeedbackEventArgs>
  fullName: System.EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs
    name: ManipulationBoundaryFeedbackEventArgs
    nameWithType: ManipulationBoundaryFeedbackEventArgs
    fullName: ManipulationBoundaryFeedbackEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationBoundaryFeedbackEvent
  nameWithType: UIElement.ManipulationBoundaryFeedbackEvent
  fullName: System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
- uid: System.Windows.UIElement.ManipulationCompleted
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationCompleted
  nameWithType: UIElement.ManipulationCompleted
  fullName: System.Windows.UIElement.ManipulationCompleted
- uid: System.EventHandler{System.Windows.Input.ManipulationCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ManipulationCompletedEventArgs>
  nameWithType: EventHandler<ManipulationCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.ManipulationCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.ManipulationCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.ManipulationCompletedEventArgs
    name: ManipulationCompletedEventArgs
    nameWithType: ManipulationCompletedEventArgs
    fullName: ManipulationCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement.ManipulationCompletedEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationCompletedEvent
  nameWithType: UIElement.ManipulationCompletedEvent
  fullName: System.Windows.UIElement.ManipulationCompletedEvent
- uid: System.Windows.UIElement.ManipulationDelta
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationDelta
  nameWithType: UIElement.ManipulationDelta
  fullName: System.Windows.UIElement.ManipulationDelta
- uid: System.EventHandler{System.Windows.Input.ManipulationDeltaEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ManipulationDeltaEventArgs>
  nameWithType: EventHandler<ManipulationDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.ManipulationDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.ManipulationDeltaEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.ManipulationDeltaEventArgs
    name: ManipulationDeltaEventArgs
    nameWithType: ManipulationDeltaEventArgs
    fullName: ManipulationDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement.ManipulationDeltaEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationDeltaEvent
  nameWithType: UIElement.ManipulationDeltaEvent
  fullName: System.Windows.UIElement.ManipulationDeltaEvent
- uid: System.Windows.UIElement.ManipulationInertiaStarting
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationInertiaStarting
  nameWithType: UIElement.ManipulationInertiaStarting
  fullName: System.Windows.UIElement.ManipulationInertiaStarting
- uid: System.EventHandler{System.Windows.Input.ManipulationInertiaStartingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ManipulationInertiaStartingEventArgs>
  nameWithType: EventHandler<ManipulationInertiaStartingEventArgs>
  fullName: System.EventHandler<System.Windows.Input.ManipulationInertiaStartingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.ManipulationInertiaStartingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.ManipulationInertiaStartingEventArgs
    name: ManipulationInertiaStartingEventArgs
    nameWithType: ManipulationInertiaStartingEventArgs
    fullName: ManipulationInertiaStartingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement.ManipulationInertiaStartingEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationInertiaStartingEvent
  nameWithType: UIElement.ManipulationInertiaStartingEvent
  fullName: System.Windows.UIElement.ManipulationInertiaStartingEvent
- uid: System.Windows.UIElement.ManipulationStarted
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationStarted
  nameWithType: UIElement.ManipulationStarted
  fullName: System.Windows.UIElement.ManipulationStarted
- uid: System.EventHandler{System.Windows.Input.ManipulationStartedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ManipulationStartedEventArgs>
  nameWithType: EventHandler<ManipulationStartedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.ManipulationStartedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.ManipulationStartedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.ManipulationStartedEventArgs
    name: ManipulationStartedEventArgs
    nameWithType: ManipulationStartedEventArgs
    fullName: ManipulationStartedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement.ManipulationStartedEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationStartedEvent
  nameWithType: UIElement.ManipulationStartedEvent
  fullName: System.Windows.UIElement.ManipulationStartedEvent
- uid: System.Windows.UIElement.ManipulationStarting
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationStarting
  nameWithType: UIElement.ManipulationStarting
  fullName: System.Windows.UIElement.ManipulationStarting
- uid: System.EventHandler{System.Windows.Input.ManipulationStartingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ManipulationStartingEventArgs>
  nameWithType: EventHandler<ManipulationStartingEventArgs>
  fullName: System.EventHandler<System.Windows.Input.ManipulationStartingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.ManipulationStartingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.ManipulationStartingEventArgs
    name: ManipulationStartingEventArgs
    nameWithType: ManipulationStartingEventArgs
    fullName: ManipulationStartingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement.ManipulationStartingEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: ManipulationStartingEvent
  nameWithType: UIElement.ManipulationStartingEvent
  fullName: System.Windows.UIElement.ManipulationStartingEvent
- uid: System.Windows.UIElement.Measure(System.Windows.Size)
  parent: System.Windows.UIElement
  isExternal: false
  name: Measure(Size)
  nameWithType: UIElement.Measure(Size)
  fullName: System.Windows.UIElement.Measure(Size)
- uid: System.Windows.UIElement.MeasureCore(System.Windows.Size)
  parent: System.Windows.UIElement
  isExternal: false
  name: MeasureCore(Size)
  nameWithType: UIElement.MeasureCore(Size)
  fullName: System.Windows.UIElement.MeasureCore(Size)
- uid: System.Windows.UIElement.MouseDown
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseDown
  nameWithType: UIElement.MouseDown
  fullName: System.Windows.UIElement.MouseDown
- uid: System.Windows.Input.MouseButtonEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventHandler
  nameWithType: MouseButtonEventHandler
  fullName: System.Windows.Input.MouseButtonEventHandler
- uid: System.Windows.UIElement.MouseDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseDownEvent
  nameWithType: UIElement.MouseDownEvent
  fullName: System.Windows.UIElement.MouseDownEvent
- uid: System.Windows.UIElement.MouseEnter
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseEnter
  nameWithType: UIElement.MouseEnter
  fullName: System.Windows.UIElement.MouseEnter
- uid: System.Windows.UIElement.MouseEnterEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseEnterEvent
  nameWithType: UIElement.MouseEnterEvent
  fullName: System.Windows.UIElement.MouseEnterEvent
- uid: System.Windows.UIElement.MouseLeave
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseLeave
  nameWithType: UIElement.MouseLeave
  fullName: System.Windows.UIElement.MouseLeave
- uid: System.Windows.UIElement.MouseLeaveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseLeaveEvent
  nameWithType: UIElement.MouseLeaveEvent
  fullName: System.Windows.UIElement.MouseLeaveEvent
- uid: System.Windows.UIElement.MouseLeftButtonDown
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseLeftButtonDown
  nameWithType: UIElement.MouseLeftButtonDown
  fullName: System.Windows.UIElement.MouseLeftButtonDown
- uid: System.Windows.UIElement.MouseLeftButtonDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseLeftButtonDownEvent
  nameWithType: UIElement.MouseLeftButtonDownEvent
  fullName: System.Windows.UIElement.MouseLeftButtonDownEvent
- uid: System.Windows.UIElement.MouseLeftButtonUp
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseLeftButtonUp
  nameWithType: UIElement.MouseLeftButtonUp
  fullName: System.Windows.UIElement.MouseLeftButtonUp
- uid: System.Windows.UIElement.MouseLeftButtonUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseLeftButtonUpEvent
  nameWithType: UIElement.MouseLeftButtonUpEvent
  fullName: System.Windows.UIElement.MouseLeftButtonUpEvent
- uid: System.Windows.UIElement.MouseMove
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseMove
  nameWithType: UIElement.MouseMove
  fullName: System.Windows.UIElement.MouseMove
- uid: System.Windows.UIElement.MouseMoveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseMoveEvent
  nameWithType: UIElement.MouseMoveEvent
  fullName: System.Windows.UIElement.MouseMoveEvent
- uid: System.Windows.UIElement.MouseRightButtonDown
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseRightButtonDown
  nameWithType: UIElement.MouseRightButtonDown
  fullName: System.Windows.UIElement.MouseRightButtonDown
- uid: System.Windows.UIElement.MouseRightButtonDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseRightButtonDownEvent
  nameWithType: UIElement.MouseRightButtonDownEvent
  fullName: System.Windows.UIElement.MouseRightButtonDownEvent
- uid: System.Windows.UIElement.MouseRightButtonUp
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseRightButtonUp
  nameWithType: UIElement.MouseRightButtonUp
  fullName: System.Windows.UIElement.MouseRightButtonUp
- uid: System.Windows.UIElement.MouseRightButtonUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseRightButtonUpEvent
  nameWithType: UIElement.MouseRightButtonUpEvent
  fullName: System.Windows.UIElement.MouseRightButtonUpEvent
- uid: System.Windows.UIElement.MouseUp
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseUp
  nameWithType: UIElement.MouseUp
  fullName: System.Windows.UIElement.MouseUp
- uid: System.Windows.UIElement.MouseUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseUpEvent
  nameWithType: UIElement.MouseUpEvent
  fullName: System.Windows.UIElement.MouseUpEvent
- uid: System.Windows.UIElement.MouseWheel
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseWheel
  nameWithType: UIElement.MouseWheel
  fullName: System.Windows.UIElement.MouseWheel
- uid: System.Windows.Input.MouseWheelEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseWheelEventHandler
  nameWithType: MouseWheelEventHandler
  fullName: System.Windows.Input.MouseWheelEventHandler
- uid: System.Windows.UIElement.MouseWheelEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: MouseWheelEvent
  nameWithType: UIElement.MouseWheelEvent
  fullName: System.Windows.UIElement.MouseWheelEvent
- uid: System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)
  parent: System.Windows.UIElement
  isExternal: false
  name: MoveFocus(TraversalRequest)
  nameWithType: UIElement.MoveFocus(TraversalRequest)
  fullName: System.Windows.UIElement.MoveFocus(TraversalRequest)
- uid: System.Windows.Input.TraversalRequest
  parent: System.Windows.Input
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
- uid: System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnAccessKey(AccessKeyEventArgs)
  nameWithType: UIElement.OnAccessKey(AccessKeyEventArgs)
  fullName: System.Windows.UIElement.OnAccessKey(AccessKeyEventArgs)
- uid: System.Windows.Input.AccessKeyEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: AccessKeyEventArgs
  nameWithType: AccessKeyEventArgs
  fullName: System.Windows.Input.AccessKeyEventArgs
- uid: System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnChildDesiredSizeChanged(UIElement)
  nameWithType: UIElement.OnChildDesiredSizeChanged(UIElement)
  fullName: System.Windows.UIElement.OnChildDesiredSizeChanged(UIElement)
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.UIElement.OnCreateAutomationPeer
  parent: System.Windows.UIElement
  isExternal: false
  name: OnCreateAutomationPeer()
  nameWithType: UIElement.OnCreateAutomationPeer()
  fullName: System.Windows.UIElement.OnCreateAutomationPeer()
- uid: System.Windows.Automation.Peers.AutomationPeer
  parent: System.Windows.Automation.Peers
  isExternal: false
  name: AutomationPeer
  nameWithType: AutomationPeer
  fullName: System.Windows.Automation.Peers.AutomationPeer
- uid: System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnDragEnter(DragEventArgs)
  nameWithType: UIElement.OnDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement.OnDragEnter(DragEventArgs)
- uid: System.Windows.DragEventArgs
  parent: System.Windows
  isExternal: false
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: System.Windows.DragEventArgs
- uid: System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnDragLeave(DragEventArgs)
  nameWithType: UIElement.OnDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement.OnDragLeave(DragEventArgs)
- uid: System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnDragOver(DragEventArgs)
  nameWithType: UIElement.OnDragOver(DragEventArgs)
  fullName: System.Windows.UIElement.OnDragOver(DragEventArgs)
- uid: System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnDrop(DragEventArgs)
  nameWithType: UIElement.OnDrop(DragEventArgs)
  fullName: System.Windows.UIElement.OnDrop(DragEventArgs)
- uid: System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement.OnGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.GiveFeedbackEventArgs
  parent: System.Windows
  isExternal: false
  name: GiveFeedbackEventArgs
  nameWithType: GiveFeedbackEventArgs
  fullName: System.Windows.GiveFeedbackEventArgs
- uid: System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: UIElement.OnGotFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement.OnGotFocus(RoutedEventArgs)
- uid: System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.Input.KeyboardFocusChangedEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardFocusChangedEventArgs
  nameWithType: KeyboardFocusChangedEventArgs
  fullName: System.Windows.Input.KeyboardFocusChangedEventArgs
- uid: System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotMouseCapture(MouseEventArgs)
  nameWithType: UIElement.OnGotMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement.OnGotMouseCapture(MouseEventArgs)
- uid: System.Windows.Input.MouseEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
- uid: System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotStylusCapture(StylusEventArgs)
  nameWithType: UIElement.OnGotStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement.OnGotStylusCapture(StylusEventArgs)
- uid: System.Windows.Input.StylusEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusEventArgs
  nameWithType: StylusEventArgs
  fullName: System.Windows.Input.StylusEventArgs
- uid: System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotTouchCapture(TouchEventArgs)
  nameWithType: UIElement.OnGotTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement.OnGotTouchCapture(TouchEventArgs)
- uid: System.Windows.Input.TouchEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: TouchEventArgs
  nameWithType: TouchEventArgs
  fullName: System.Windows.Input.TouchEventArgs
- uid: System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnKeyDown(KeyEventArgs)
  nameWithType: UIElement.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement.OnKeyDown(KeyEventArgs)
- uid: System.Windows.Input.KeyEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Input.KeyEventArgs
- uid: System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnKeyUp(KeyEventArgs)
  nameWithType: UIElement.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement.OnKeyUp(KeyEventArgs)
- uid: System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: UIElement.OnLostFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement.OnLostFocus(RoutedEventArgs)
- uid: System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostMouseCapture(MouseEventArgs)
  nameWithType: UIElement.OnLostMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement.OnLostMouseCapture(MouseEventArgs)
- uid: System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostStylusCapture(StylusEventArgs)
  nameWithType: UIElement.OnLostStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement.OnLostStylusCapture(StylusEventArgs)
- uid: System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostTouchCapture(TouchEventArgs)
  nameWithType: UIElement.OnLostTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement.OnLostTouchCapture(TouchEventArgs)
- uid: System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs)
  nameWithType: UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs)
  fullName: System.Windows.UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs)
- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationBoundaryFeedbackEventArgs
  nameWithType: ManipulationBoundaryFeedbackEventArgs
  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs
- uid: System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationCompleted(ManipulationCompletedEventArgs)
  nameWithType: UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs)
  fullName: System.Windows.UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs)
- uid: System.Windows.Input.ManipulationCompletedEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationCompletedEventArgs
  nameWithType: ManipulationCompletedEventArgs
  fullName: System.Windows.Input.ManipulationCompletedEventArgs
- uid: System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationDelta(ManipulationDeltaEventArgs)
  nameWithType: UIElement.OnManipulationDelta(ManipulationDeltaEventArgs)
  fullName: System.Windows.UIElement.OnManipulationDelta(ManipulationDeltaEventArgs)
- uid: System.Windows.Input.ManipulationDeltaEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationDeltaEventArgs
  nameWithType: ManipulationDeltaEventArgs
  fullName: System.Windows.Input.ManipulationDeltaEventArgs
- uid: System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs)
  nameWithType: UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs)
  fullName: System.Windows.UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs)
- uid: System.Windows.Input.ManipulationInertiaStartingEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationInertiaStartingEventArgs
  nameWithType: ManipulationInertiaStartingEventArgs
  fullName: System.Windows.Input.ManipulationInertiaStartingEventArgs
- uid: System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationStarted(ManipulationStartedEventArgs)
  nameWithType: UIElement.OnManipulationStarted(ManipulationStartedEventArgs)
  fullName: System.Windows.UIElement.OnManipulationStarted(ManipulationStartedEventArgs)
- uid: System.Windows.Input.ManipulationStartedEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationStartedEventArgs
  nameWithType: ManipulationStartedEventArgs
  fullName: System.Windows.Input.ManipulationStartedEventArgs
- uid: System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationStarting(ManipulationStartingEventArgs)
  nameWithType: UIElement.OnManipulationStarting(ManipulationStartingEventArgs)
  fullName: System.Windows.UIElement.OnManipulationStarting(ManipulationStartingEventArgs)
- uid: System.Windows.Input.ManipulationStartingEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationStartingEventArgs
  nameWithType: ManipulationStartingEventArgs
  fullName: System.Windows.Input.ManipulationStartingEventArgs
- uid: System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseDown(MouseButtonEventArgs)
- uid: System.Windows.Input.MouseButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
- uid: System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: UIElement.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.UIElement.OnMouseEnter(MouseEventArgs)
- uid: System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: UIElement.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.UIElement.OnMouseLeave(MouseEventArgs)
- uid: System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseMove(MouseEventArgs)
  nameWithType: UIElement.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement.OnMouseMove(MouseEventArgs)
- uid: System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnMouseUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement.OnMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement.OnMouseWheel(MouseWheelEventArgs)
- uid: System.Windows.Input.MouseWheelEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseWheelEventArgs
  nameWithType: MouseWheelEventArgs
  fullName: System.Windows.Input.MouseWheelEventArgs
- uid: System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewDragEnter(DragEventArgs)
  nameWithType: UIElement.OnPreviewDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewDragEnter(DragEventArgs)
- uid: System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewDragLeave(DragEventArgs)
  nameWithType: UIElement.OnPreviewDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewDragLeave(DragEventArgs)
- uid: System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewDragOver(DragEventArgs)
  nameWithType: UIElement.OnPreviewDragOver(DragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewDragOver(DragEventArgs)
- uid: System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewDrop(DragEventArgs)
  nameWithType: UIElement.OnPreviewDrop(DragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewDrop(DragEventArgs)
- uid: System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewKeyDown(KeyEventArgs)
  nameWithType: UIElement.OnPreviewKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement.OnPreviewKeyDown(KeyEventArgs)
- uid: System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewKeyUp(KeyEventArgs)
  nameWithType: UIElement.OnPreviewKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement.OnPreviewKeyUp(KeyEventArgs)
- uid: System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseMove(MouseEventArgs)
  nameWithType: UIElement.OnPreviewMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseMove(MouseEventArgs)
- uid: System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement.OnPreviewMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement.OnPreviewMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement.OnPreviewMouseWheel(MouseWheelEventArgs)
- uid: System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.QueryContinueDragEventArgs
  parent: System.Windows
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.QueryContinueDragEventArgs
- uid: System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)
- uid: System.Windows.Input.StylusButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusButtonEventArgs
  nameWithType: StylusButtonEventArgs
  fullName: System.Windows.Input.StylusButtonEventArgs
- uid: System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)
- uid: System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusDown(StylusDownEventArgs)
  nameWithType: UIElement.OnPreviewStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusDown(StylusDownEventArgs)
- uid: System.Windows.Input.StylusDownEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusDownEventArgs
  nameWithType: StylusDownEventArgs
  fullName: System.Windows.Input.StylusDownEventArgs
- uid: System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusInAirMove(StylusEventArgs)
- uid: System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusInRange(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusInRange(StylusEventArgs)
- uid: System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusMove(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusMove(StylusEventArgs)
- uid: System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusOutOfRange(StylusEventArgs)
- uid: System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
- uid: System.Windows.Input.StylusSystemGestureEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusSystemGestureEventArgs
  nameWithType: StylusSystemGestureEventArgs
  fullName: System.Windows.Input.StylusSystemGestureEventArgs
- uid: System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusUp(StylusEventArgs)
  nameWithType: UIElement.OnPreviewStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement.OnPreviewStylusUp(StylusEventArgs)
- uid: System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewTextInput(TextCompositionEventArgs)
  nameWithType: UIElement.OnPreviewTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement.OnPreviewTextInput(TextCompositionEventArgs)
- uid: System.Windows.Input.TextCompositionEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: TextCompositionEventArgs
  nameWithType: TextCompositionEventArgs
  fullName: System.Windows.Input.TextCompositionEventArgs
- uid: System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewTouchDown(TouchEventArgs)
  nameWithType: UIElement.OnPreviewTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement.OnPreviewTouchDown(TouchEventArgs)
- uid: System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewTouchMove(TouchEventArgs)
  nameWithType: UIElement.OnPreviewTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement.OnPreviewTouchMove(TouchEventArgs)
- uid: System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewTouchUp(TouchEventArgs)
  nameWithType: UIElement.OnPreviewTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement.OnPreviewTouchUp(TouchEventArgs)
- uid: System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnQueryCursor(QueryCursorEventArgs)
  nameWithType: UIElement.OnQueryCursor(QueryCursorEventArgs)
  fullName: System.Windows.UIElement.OnQueryCursor(QueryCursorEventArgs)
- uid: System.Windows.Input.QueryCursorEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: QueryCursorEventArgs
  nameWithType: QueryCursorEventArgs
  fullName: System.Windows.Input.QueryCursorEventArgs
- uid: System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnRender(DrawingContext)
  nameWithType: UIElement.OnRender(DrawingContext)
  fullName: System.Windows.UIElement.OnRender(DrawingContext)
- uid: System.Windows.Media.DrawingContext
  parent: System.Windows.Media
  isExternal: false
  name: DrawingContext
  nameWithType: DrawingContext
  fullName: System.Windows.Media.DrawingContext
- uid: System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnRenderSizeChanged(SizeChangedInfo)
  nameWithType: UIElement.OnRenderSizeChanged(SizeChangedInfo)
  fullName: System.Windows.UIElement.OnRenderSizeChanged(SizeChangedInfo)
- uid: System.Windows.SizeChangedInfo
  parent: System.Windows
  isExternal: false
  name: SizeChangedInfo
  nameWithType: SizeChangedInfo
  fullName: System.Windows.SizeChangedInfo
- uid: System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement.OnStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement.OnStylusButtonDown(StylusButtonEventArgs)
- uid: System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement.OnStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement.OnStylusButtonUp(StylusButtonEventArgs)
- uid: System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusDown(StylusDownEventArgs)
  nameWithType: UIElement.OnStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement.OnStylusDown(StylusDownEventArgs)
- uid: System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusEnter(StylusEventArgs)
  nameWithType: UIElement.OnStylusEnter(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusEnter(StylusEventArgs)
- uid: System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement.OnStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusInAirMove(StylusEventArgs)
- uid: System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusInRange(StylusEventArgs)
  nameWithType: UIElement.OnStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusInRange(StylusEventArgs)
- uid: System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusLeave(StylusEventArgs)
  nameWithType: UIElement.OnStylusLeave(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusLeave(StylusEventArgs)
- uid: System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusMove(StylusEventArgs)
  nameWithType: UIElement.OnStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusMove(StylusEventArgs)
- uid: System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement.OnStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusOutOfRange(StylusEventArgs)
- uid: System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)
- uid: System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusUp(StylusEventArgs)
  nameWithType: UIElement.OnStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement.OnStylusUp(StylusEventArgs)
- uid: System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTextInput(TextCompositionEventArgs)
  nameWithType: UIElement.OnTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement.OnTextInput(TextCompositionEventArgs)
- uid: System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchDown(TouchEventArgs)
  nameWithType: UIElement.OnTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchDown(TouchEventArgs)
- uid: System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchEnter(TouchEventArgs)
  nameWithType: UIElement.OnTouchEnter(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchEnter(TouchEventArgs)
- uid: System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchLeave(TouchEventArgs)
  nameWithType: UIElement.OnTouchLeave(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchLeave(TouchEventArgs)
- uid: System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchMove(TouchEventArgs)
  nameWithType: UIElement.OnTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchMove(TouchEventArgs)
- uid: System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchUp(TouchEventArgs)
  nameWithType: UIElement.OnTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement.OnTouchUp(TouchEventArgs)
- uid: System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.UIElement
  isExternal: false
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: UIElement.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.UIElement.OnVisualParentChanged(DependencyObject)
- uid: System.Windows.UIElement.Opacity
  parent: System.Windows.UIElement
  isExternal: false
  name: Opacity
  nameWithType: UIElement.Opacity
  fullName: System.Windows.UIElement.Opacity
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.UIElement.OpacityMask
  parent: System.Windows.UIElement
  isExternal: false
  name: OpacityMask
  nameWithType: UIElement.OpacityMask
  fullName: System.Windows.UIElement.OpacityMask
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.UIElement.OpacityMaskProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: OpacityMaskProperty
  nameWithType: UIElement.OpacityMaskProperty
  fullName: System.Windows.UIElement.OpacityMaskProperty
- uid: System.Windows.UIElement.OpacityProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: OpacityProperty
  nameWithType: UIElement.OpacityProperty
  fullName: System.Windows.UIElement.OpacityProperty
- uid: System.Windows.UIElement.PersistId
  parent: System.Windows.UIElement
  isExternal: false
  name: PersistId
  nameWithType: UIElement.PersistId
  fullName: System.Windows.UIElement.PersistId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.UIElement
  isExternal: false
  name: PredictFocus(FocusNavigationDirection)
  nameWithType: UIElement.PredictFocus(FocusNavigationDirection)
  fullName: System.Windows.UIElement.PredictFocus(FocusNavigationDirection)
- uid: System.Windows.Input.FocusNavigationDirection
  parent: System.Windows.Input
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: FocusNavigationDirection
  fullName: System.Windows.Input.FocusNavigationDirection
- uid: System.Windows.UIElement.PreviewDragEnter
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewDragEnter
  nameWithType: UIElement.PreviewDragEnter
  fullName: System.Windows.UIElement.PreviewDragEnter
- uid: System.Windows.UIElement.PreviewDragEnterEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewDragEnterEvent
  nameWithType: UIElement.PreviewDragEnterEvent
  fullName: System.Windows.UIElement.PreviewDragEnterEvent
- uid: System.Windows.UIElement.PreviewDragLeave
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewDragLeave
  nameWithType: UIElement.PreviewDragLeave
  fullName: System.Windows.UIElement.PreviewDragLeave
- uid: System.Windows.UIElement.PreviewDragLeaveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewDragLeaveEvent
  nameWithType: UIElement.PreviewDragLeaveEvent
  fullName: System.Windows.UIElement.PreviewDragLeaveEvent
- uid: System.Windows.UIElement.PreviewDragOver
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewDragOver
  nameWithType: UIElement.PreviewDragOver
  fullName: System.Windows.UIElement.PreviewDragOver
- uid: System.Windows.UIElement.PreviewDragOverEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewDragOverEvent
  nameWithType: UIElement.PreviewDragOverEvent
  fullName: System.Windows.UIElement.PreviewDragOverEvent
- uid: System.Windows.UIElement.PreviewDrop
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewDrop
  nameWithType: UIElement.PreviewDrop
  fullName: System.Windows.UIElement.PreviewDrop
- uid: System.Windows.UIElement.PreviewDropEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewDropEvent
  nameWithType: UIElement.PreviewDropEvent
  fullName: System.Windows.UIElement.PreviewDropEvent
- uid: System.Windows.UIElement.PreviewGiveFeedback
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewGiveFeedback
  nameWithType: UIElement.PreviewGiveFeedback
  fullName: System.Windows.UIElement.PreviewGiveFeedback
- uid: System.Windows.UIElement.PreviewGiveFeedbackEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewGiveFeedbackEvent
  nameWithType: UIElement.PreviewGiveFeedbackEvent
  fullName: System.Windows.UIElement.PreviewGiveFeedbackEvent
- uid: System.Windows.UIElement.PreviewGotKeyboardFocus
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewGotKeyboardFocus
  nameWithType: UIElement.PreviewGotKeyboardFocus
  fullName: System.Windows.UIElement.PreviewGotKeyboardFocus
- uid: System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewGotKeyboardFocusEvent
  nameWithType: UIElement.PreviewGotKeyboardFocusEvent
  fullName: System.Windows.UIElement.PreviewGotKeyboardFocusEvent
- uid: System.Windows.UIElement.PreviewKeyDown
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewKeyDown
  nameWithType: UIElement.PreviewKeyDown
  fullName: System.Windows.UIElement.PreviewKeyDown
- uid: System.Windows.UIElement.PreviewKeyDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewKeyDownEvent
  nameWithType: UIElement.PreviewKeyDownEvent
  fullName: System.Windows.UIElement.PreviewKeyDownEvent
- uid: System.Windows.UIElement.PreviewKeyUp
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewKeyUp
  nameWithType: UIElement.PreviewKeyUp
  fullName: System.Windows.UIElement.PreviewKeyUp
- uid: System.Windows.UIElement.PreviewKeyUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewKeyUpEvent
  nameWithType: UIElement.PreviewKeyUpEvent
  fullName: System.Windows.UIElement.PreviewKeyUpEvent
- uid: System.Windows.UIElement.PreviewLostKeyboardFocus
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewLostKeyboardFocus
  nameWithType: UIElement.PreviewLostKeyboardFocus
  fullName: System.Windows.UIElement.PreviewLostKeyboardFocus
- uid: System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewLostKeyboardFocusEvent
  nameWithType: UIElement.PreviewLostKeyboardFocusEvent
  fullName: System.Windows.UIElement.PreviewLostKeyboardFocusEvent
- uid: System.Windows.UIElement.PreviewMouseDown
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseDown
  nameWithType: UIElement.PreviewMouseDown
  fullName: System.Windows.UIElement.PreviewMouseDown
- uid: System.Windows.UIElement.PreviewMouseDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseDownEvent
  nameWithType: UIElement.PreviewMouseDownEvent
  fullName: System.Windows.UIElement.PreviewMouseDownEvent
- uid: System.Windows.UIElement.PreviewMouseLeftButtonDown
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseLeftButtonDown
  nameWithType: UIElement.PreviewMouseLeftButtonDown
  fullName: System.Windows.UIElement.PreviewMouseLeftButtonDown
- uid: System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseLeftButtonDownEvent
  nameWithType: UIElement.PreviewMouseLeftButtonDownEvent
  fullName: System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
- uid: System.Windows.UIElement.PreviewMouseLeftButtonUp
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseLeftButtonUp
  nameWithType: UIElement.PreviewMouseLeftButtonUp
  fullName: System.Windows.UIElement.PreviewMouseLeftButtonUp
- uid: System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseLeftButtonUpEvent
  nameWithType: UIElement.PreviewMouseLeftButtonUpEvent
  fullName: System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
- uid: System.Windows.UIElement.PreviewMouseMove
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseMove
  nameWithType: UIElement.PreviewMouseMove
  fullName: System.Windows.UIElement.PreviewMouseMove
- uid: System.Windows.UIElement.PreviewMouseMoveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseMoveEvent
  nameWithType: UIElement.PreviewMouseMoveEvent
  fullName: System.Windows.UIElement.PreviewMouseMoveEvent
- uid: System.Windows.UIElement.PreviewMouseRightButtonDown
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseRightButtonDown
  nameWithType: UIElement.PreviewMouseRightButtonDown
  fullName: System.Windows.UIElement.PreviewMouseRightButtonDown
- uid: System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseRightButtonDownEvent
  nameWithType: UIElement.PreviewMouseRightButtonDownEvent
  fullName: System.Windows.UIElement.PreviewMouseRightButtonDownEvent
- uid: System.Windows.UIElement.PreviewMouseRightButtonUp
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseRightButtonUp
  nameWithType: UIElement.PreviewMouseRightButtonUp
  fullName: System.Windows.UIElement.PreviewMouseRightButtonUp
- uid: System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseRightButtonUpEvent
  nameWithType: UIElement.PreviewMouseRightButtonUpEvent
  fullName: System.Windows.UIElement.PreviewMouseRightButtonUpEvent
- uid: System.Windows.UIElement.PreviewMouseUp
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseUp
  nameWithType: UIElement.PreviewMouseUp
  fullName: System.Windows.UIElement.PreviewMouseUp
- uid: System.Windows.UIElement.PreviewMouseUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseUpEvent
  nameWithType: UIElement.PreviewMouseUpEvent
  fullName: System.Windows.UIElement.PreviewMouseUpEvent
- uid: System.Windows.UIElement.PreviewMouseWheel
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseWheel
  nameWithType: UIElement.PreviewMouseWheel
  fullName: System.Windows.UIElement.PreviewMouseWheel
- uid: System.Windows.UIElement.PreviewMouseWheelEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewMouseWheelEvent
  nameWithType: UIElement.PreviewMouseWheelEvent
  fullName: System.Windows.UIElement.PreviewMouseWheelEvent
- uid: System.Windows.UIElement.PreviewQueryContinueDrag
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewQueryContinueDrag
  nameWithType: UIElement.PreviewQueryContinueDrag
  fullName: System.Windows.UIElement.PreviewQueryContinueDrag
- uid: System.Windows.QueryContinueDragEventHandler
  parent: System.Windows
  isExternal: false
  name: QueryContinueDragEventHandler
  nameWithType: QueryContinueDragEventHandler
  fullName: System.Windows.QueryContinueDragEventHandler
- uid: System.Windows.UIElement.PreviewQueryContinueDragEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewQueryContinueDragEvent
  nameWithType: UIElement.PreviewQueryContinueDragEvent
  fullName: System.Windows.UIElement.PreviewQueryContinueDragEvent
- uid: System.Windows.UIElement.PreviewStylusButtonDown
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusButtonDown
  nameWithType: UIElement.PreviewStylusButtonDown
  fullName: System.Windows.UIElement.PreviewStylusButtonDown
- uid: System.Windows.Input.StylusButtonEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusButtonEventHandler
  nameWithType: StylusButtonEventHandler
  fullName: System.Windows.Input.StylusButtonEventHandler
- uid: System.Windows.UIElement.PreviewStylusButtonDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusButtonDownEvent
  nameWithType: UIElement.PreviewStylusButtonDownEvent
  fullName: System.Windows.UIElement.PreviewStylusButtonDownEvent
- uid: System.Windows.UIElement.PreviewStylusButtonUp
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusButtonUp
  nameWithType: UIElement.PreviewStylusButtonUp
  fullName: System.Windows.UIElement.PreviewStylusButtonUp
- uid: System.Windows.UIElement.PreviewStylusButtonUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusButtonUpEvent
  nameWithType: UIElement.PreviewStylusButtonUpEvent
  fullName: System.Windows.UIElement.PreviewStylusButtonUpEvent
- uid: System.Windows.UIElement.PreviewStylusDown
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusDown
  nameWithType: UIElement.PreviewStylusDown
  fullName: System.Windows.UIElement.PreviewStylusDown
- uid: System.Windows.Input.StylusDownEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusDownEventHandler
  nameWithType: StylusDownEventHandler
  fullName: System.Windows.Input.StylusDownEventHandler
- uid: System.Windows.UIElement.PreviewStylusDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusDownEvent
  nameWithType: UIElement.PreviewStylusDownEvent
  fullName: System.Windows.UIElement.PreviewStylusDownEvent
- uid: System.Windows.UIElement.PreviewStylusInAirMove
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusInAirMove
  nameWithType: UIElement.PreviewStylusInAirMove
  fullName: System.Windows.UIElement.PreviewStylusInAirMove
- uid: System.Windows.UIElement.PreviewStylusInAirMoveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusInAirMoveEvent
  nameWithType: UIElement.PreviewStylusInAirMoveEvent
  fullName: System.Windows.UIElement.PreviewStylusInAirMoveEvent
- uid: System.Windows.UIElement.PreviewStylusInRange
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusInRange
  nameWithType: UIElement.PreviewStylusInRange
  fullName: System.Windows.UIElement.PreviewStylusInRange
- uid: System.Windows.UIElement.PreviewStylusInRangeEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusInRangeEvent
  nameWithType: UIElement.PreviewStylusInRangeEvent
  fullName: System.Windows.UIElement.PreviewStylusInRangeEvent
- uid: System.Windows.UIElement.PreviewStylusMove
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusMove
  nameWithType: UIElement.PreviewStylusMove
  fullName: System.Windows.UIElement.PreviewStylusMove
- uid: System.Windows.UIElement.PreviewStylusMoveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusMoveEvent
  nameWithType: UIElement.PreviewStylusMoveEvent
  fullName: System.Windows.UIElement.PreviewStylusMoveEvent
- uid: System.Windows.UIElement.PreviewStylusOutOfRange
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusOutOfRange
  nameWithType: UIElement.PreviewStylusOutOfRange
  fullName: System.Windows.UIElement.PreviewStylusOutOfRange
- uid: System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusOutOfRangeEvent
  nameWithType: UIElement.PreviewStylusOutOfRangeEvent
  fullName: System.Windows.UIElement.PreviewStylusOutOfRangeEvent
- uid: System.Windows.UIElement.PreviewStylusSystemGesture
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusSystemGesture
  nameWithType: UIElement.PreviewStylusSystemGesture
  fullName: System.Windows.UIElement.PreviewStylusSystemGesture
- uid: System.Windows.Input.StylusSystemGestureEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusSystemGestureEventHandler
  nameWithType: StylusSystemGestureEventHandler
  fullName: System.Windows.Input.StylusSystemGestureEventHandler
- uid: System.Windows.UIElement.PreviewStylusSystemGestureEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusSystemGestureEvent
  nameWithType: UIElement.PreviewStylusSystemGestureEvent
  fullName: System.Windows.UIElement.PreviewStylusSystemGestureEvent
- uid: System.Windows.UIElement.PreviewStylusUp
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusUp
  nameWithType: UIElement.PreviewStylusUp
  fullName: System.Windows.UIElement.PreviewStylusUp
- uid: System.Windows.UIElement.PreviewStylusUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewStylusUpEvent
  nameWithType: UIElement.PreviewStylusUpEvent
  fullName: System.Windows.UIElement.PreviewStylusUpEvent
- uid: System.Windows.UIElement.PreviewTextInput
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewTextInput
  nameWithType: UIElement.PreviewTextInput
  fullName: System.Windows.UIElement.PreviewTextInput
- uid: System.Windows.Input.TextCompositionEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: TextCompositionEventHandler
  nameWithType: TextCompositionEventHandler
  fullName: System.Windows.Input.TextCompositionEventHandler
- uid: System.Windows.UIElement.PreviewTextInputEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewTextInputEvent
  nameWithType: UIElement.PreviewTextInputEvent
  fullName: System.Windows.UIElement.PreviewTextInputEvent
- uid: System.Windows.UIElement.PreviewTouchDown
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewTouchDown
  nameWithType: UIElement.PreviewTouchDown
  fullName: System.Windows.UIElement.PreviewTouchDown
- uid: System.Windows.UIElement.PreviewTouchDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewTouchDownEvent
  nameWithType: UIElement.PreviewTouchDownEvent
  fullName: System.Windows.UIElement.PreviewTouchDownEvent
- uid: System.Windows.UIElement.PreviewTouchMove
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewTouchMove
  nameWithType: UIElement.PreviewTouchMove
  fullName: System.Windows.UIElement.PreviewTouchMove
- uid: System.Windows.UIElement.PreviewTouchMoveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewTouchMoveEvent
  nameWithType: UIElement.PreviewTouchMoveEvent
  fullName: System.Windows.UIElement.PreviewTouchMoveEvent
- uid: System.Windows.UIElement.PreviewTouchUp
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewTouchUp
  nameWithType: UIElement.PreviewTouchUp
  fullName: System.Windows.UIElement.PreviewTouchUp
- uid: System.Windows.UIElement.PreviewTouchUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: PreviewTouchUpEvent
  nameWithType: UIElement.PreviewTouchUpEvent
  fullName: System.Windows.UIElement.PreviewTouchUpEvent
- uid: System.Windows.UIElement.QueryContinueDrag
  parent: System.Windows.UIElement
  isExternal: false
  name: QueryContinueDrag
  nameWithType: UIElement.QueryContinueDrag
  fullName: System.Windows.UIElement.QueryContinueDrag
- uid: System.Windows.UIElement.QueryContinueDragEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: QueryContinueDragEvent
  nameWithType: UIElement.QueryContinueDragEvent
  fullName: System.Windows.UIElement.QueryContinueDragEvent
- uid: System.Windows.UIElement.QueryCursor
  parent: System.Windows.UIElement
  isExternal: false
  name: QueryCursor
  nameWithType: UIElement.QueryCursor
  fullName: System.Windows.UIElement.QueryCursor
- uid: System.Windows.Input.QueryCursorEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: QueryCursorEventHandler
  nameWithType: QueryCursorEventHandler
  fullName: System.Windows.Input.QueryCursorEventHandler
- uid: System.Windows.UIElement.QueryCursorEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: QueryCursorEvent
  nameWithType: UIElement.QueryCursorEvent
  fullName: System.Windows.UIElement.QueryCursorEvent
- uid: System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement
  isExternal: false
  name: RaiseEvent(RoutedEventArgs)
  nameWithType: UIElement.RaiseEvent(RoutedEventArgs)
  fullName: System.Windows.UIElement.RaiseEvent(RoutedEventArgs)
- uid: System.Windows.UIElement.ReleaseAllTouchCaptures
  parent: System.Windows.UIElement
  isExternal: false
  name: ReleaseAllTouchCaptures()
  nameWithType: UIElement.ReleaseAllTouchCaptures()
  fullName: System.Windows.UIElement.ReleaseAllTouchCaptures()
- uid: System.Windows.UIElement.ReleaseMouseCapture
  parent: System.Windows.UIElement
  isExternal: false
  name: ReleaseMouseCapture()
  nameWithType: UIElement.ReleaseMouseCapture()
  fullName: System.Windows.UIElement.ReleaseMouseCapture()
- uid: System.Windows.UIElement.ReleaseStylusCapture
  parent: System.Windows.UIElement
  isExternal: false
  name: ReleaseStylusCapture()
  nameWithType: UIElement.ReleaseStylusCapture()
  fullName: System.Windows.UIElement.ReleaseStylusCapture()
- uid: System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement
  isExternal: false
  name: ReleaseTouchCapture(TouchDevice)
  nameWithType: UIElement.ReleaseTouchCapture(TouchDevice)
  fullName: System.Windows.UIElement.ReleaseTouchCapture(TouchDevice)
- uid: System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement
  isExternal: false
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: UIElement.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement.RemoveHandler(RoutedEvent,Delegate)
- uid: System.Windows.UIElement.RenderSize
  parent: System.Windows.UIElement
  isExternal: false
  name: RenderSize
  nameWithType: UIElement.RenderSize
  fullName: System.Windows.UIElement.RenderSize
- uid: System.Windows.UIElement.RenderTransform
  parent: System.Windows.UIElement
  isExternal: false
  name: RenderTransform
  nameWithType: UIElement.RenderTransform
  fullName: System.Windows.UIElement.RenderTransform
- uid: System.Windows.Media.Transform
  parent: System.Windows.Media
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Windows.Media.Transform
- uid: System.Windows.UIElement.RenderTransformOrigin
  parent: System.Windows.UIElement
  isExternal: false
  name: RenderTransformOrigin
  nameWithType: UIElement.RenderTransformOrigin
  fullName: System.Windows.UIElement.RenderTransformOrigin
- uid: System.Windows.UIElement.RenderTransformOriginProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: RenderTransformOriginProperty
  nameWithType: UIElement.RenderTransformOriginProperty
  fullName: System.Windows.UIElement.RenderTransformOriginProperty
- uid: System.Windows.UIElement.RenderTransformProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: RenderTransformProperty
  nameWithType: UIElement.RenderTransformProperty
  fullName: System.Windows.UIElement.RenderTransformProperty
- uid: System.Windows.UIElement.ShouldSerializeCommandBindings
  parent: System.Windows.UIElement
  isExternal: false
  name: ShouldSerializeCommandBindings()
  nameWithType: UIElement.ShouldSerializeCommandBindings()
  fullName: System.Windows.UIElement.ShouldSerializeCommandBindings()
- uid: System.Windows.UIElement.ShouldSerializeInputBindings
  parent: System.Windows.UIElement
  isExternal: false
  name: ShouldSerializeInputBindings()
  nameWithType: UIElement.ShouldSerializeInputBindings()
  fullName: System.Windows.UIElement.ShouldSerializeInputBindings()
- uid: System.Windows.UIElement.SnapsToDevicePixels
  parent: System.Windows.UIElement
  isExternal: false
  name: SnapsToDevicePixels
  nameWithType: UIElement.SnapsToDevicePixels
  fullName: System.Windows.UIElement.SnapsToDevicePixels
- uid: System.Windows.UIElement.SnapsToDevicePixelsProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: SnapsToDevicePixelsProperty
  nameWithType: UIElement.SnapsToDevicePixelsProperty
  fullName: System.Windows.UIElement.SnapsToDevicePixelsProperty
- uid: System.Windows.UIElement.StylusButtonDown
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusButtonDown
  nameWithType: UIElement.StylusButtonDown
  fullName: System.Windows.UIElement.StylusButtonDown
- uid: System.Windows.UIElement.StylusButtonDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusButtonDownEvent
  nameWithType: UIElement.StylusButtonDownEvent
  fullName: System.Windows.UIElement.StylusButtonDownEvent
- uid: System.Windows.UIElement.StylusButtonUp
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusButtonUp
  nameWithType: UIElement.StylusButtonUp
  fullName: System.Windows.UIElement.StylusButtonUp
- uid: System.Windows.UIElement.StylusButtonUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusButtonUpEvent
  nameWithType: UIElement.StylusButtonUpEvent
  fullName: System.Windows.UIElement.StylusButtonUpEvent
- uid: System.Windows.UIElement.StylusDown
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusDown
  nameWithType: UIElement.StylusDown
  fullName: System.Windows.UIElement.StylusDown
- uid: System.Windows.UIElement.StylusDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusDownEvent
  nameWithType: UIElement.StylusDownEvent
  fullName: System.Windows.UIElement.StylusDownEvent
- uid: System.Windows.UIElement.StylusEnter
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusEnter
  nameWithType: UIElement.StylusEnter
  fullName: System.Windows.UIElement.StylusEnter
- uid: System.Windows.UIElement.StylusEnterEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusEnterEvent
  nameWithType: UIElement.StylusEnterEvent
  fullName: System.Windows.UIElement.StylusEnterEvent
- uid: System.Windows.UIElement.StylusInAirMove
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusInAirMove
  nameWithType: UIElement.StylusInAirMove
  fullName: System.Windows.UIElement.StylusInAirMove
- uid: System.Windows.UIElement.StylusInAirMoveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusInAirMoveEvent
  nameWithType: UIElement.StylusInAirMoveEvent
  fullName: System.Windows.UIElement.StylusInAirMoveEvent
- uid: System.Windows.UIElement.StylusInRange
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusInRange
  nameWithType: UIElement.StylusInRange
  fullName: System.Windows.UIElement.StylusInRange
- uid: System.Windows.UIElement.StylusInRangeEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusInRangeEvent
  nameWithType: UIElement.StylusInRangeEvent
  fullName: System.Windows.UIElement.StylusInRangeEvent
- uid: System.Windows.UIElement.StylusLeave
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusLeave
  nameWithType: UIElement.StylusLeave
  fullName: System.Windows.UIElement.StylusLeave
- uid: System.Windows.UIElement.StylusLeaveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusLeaveEvent
  nameWithType: UIElement.StylusLeaveEvent
  fullName: System.Windows.UIElement.StylusLeaveEvent
- uid: System.Windows.UIElement.StylusMove
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusMove
  nameWithType: UIElement.StylusMove
  fullName: System.Windows.UIElement.StylusMove
- uid: System.Windows.UIElement.StylusMoveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusMoveEvent
  nameWithType: UIElement.StylusMoveEvent
  fullName: System.Windows.UIElement.StylusMoveEvent
- uid: System.Windows.UIElement.StylusOutOfRange
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusOutOfRange
  nameWithType: UIElement.StylusOutOfRange
  fullName: System.Windows.UIElement.StylusOutOfRange
- uid: System.Windows.UIElement.StylusOutOfRangeEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusOutOfRangeEvent
  nameWithType: UIElement.StylusOutOfRangeEvent
  fullName: System.Windows.UIElement.StylusOutOfRangeEvent
- uid: System.Windows.UIElement.StylusPlugIns
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusPlugIns
  nameWithType: UIElement.StylusPlugIns
  fullName: System.Windows.UIElement.StylusPlugIns
- uid: System.Windows.Input.StylusPlugIns.StylusPlugInCollection
  parent: System.Windows.Input.StylusPlugIns
  isExternal: false
  name: StylusPlugInCollection
  nameWithType: StylusPlugInCollection
  fullName: System.Windows.Input.StylusPlugIns.StylusPlugInCollection
- uid: System.Windows.UIElement.StylusSystemGesture
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusSystemGesture
  nameWithType: UIElement.StylusSystemGesture
  fullName: System.Windows.UIElement.StylusSystemGesture
- uid: System.Windows.UIElement.StylusSystemGestureEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusSystemGestureEvent
  nameWithType: UIElement.StylusSystemGestureEvent
  fullName: System.Windows.UIElement.StylusSystemGestureEvent
- uid: System.Windows.UIElement.StylusUp
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusUp
  nameWithType: UIElement.StylusUp
  fullName: System.Windows.UIElement.StylusUp
- uid: System.Windows.UIElement.StylusUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusUpEvent
  nameWithType: UIElement.StylusUpEvent
  fullName: System.Windows.UIElement.StylusUpEvent
- uid: System.Windows.UIElement.TextInput
  parent: System.Windows.UIElement
  isExternal: false
  name: TextInput
  nameWithType: UIElement.TextInput
  fullName: System.Windows.UIElement.TextInput
- uid: System.Windows.UIElement.TextInputEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: TextInputEvent
  nameWithType: UIElement.TextInputEvent
  fullName: System.Windows.UIElement.TextInputEvent
- uid: System.Windows.UIElement.TouchDown
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchDown
  nameWithType: UIElement.TouchDown
  fullName: System.Windows.UIElement.TouchDown
- uid: System.Windows.UIElement.TouchDownEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchDownEvent
  nameWithType: UIElement.TouchDownEvent
  fullName: System.Windows.UIElement.TouchDownEvent
- uid: System.Windows.UIElement.TouchEnter
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchEnter
  nameWithType: UIElement.TouchEnter
  fullName: System.Windows.UIElement.TouchEnter
- uid: System.Windows.UIElement.TouchEnterEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchEnterEvent
  nameWithType: UIElement.TouchEnterEvent
  fullName: System.Windows.UIElement.TouchEnterEvent
- uid: System.Windows.UIElement.TouchesCaptured
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchesCaptured
  nameWithType: UIElement.TouchesCaptured
  fullName: System.Windows.UIElement.TouchesCaptured
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<TouchDevice>
  nameWithType: IEnumerable<TouchDevice>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Input.TouchDevice>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.TouchDevice
    name: TouchDevice
    nameWithType: TouchDevice
    fullName: TouchDevice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement.TouchesCapturedWithin
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchesCapturedWithin
  nameWithType: UIElement.TouchesCapturedWithin
  fullName: System.Windows.UIElement.TouchesCapturedWithin
- uid: System.Windows.UIElement.TouchesDirectlyOver
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchesDirectlyOver
  nameWithType: UIElement.TouchesDirectlyOver
  fullName: System.Windows.UIElement.TouchesDirectlyOver
- uid: System.Windows.UIElement.TouchesOver
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchesOver
  nameWithType: UIElement.TouchesOver
  fullName: System.Windows.UIElement.TouchesOver
- uid: System.Windows.UIElement.TouchLeave
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchLeave
  nameWithType: UIElement.TouchLeave
  fullName: System.Windows.UIElement.TouchLeave
- uid: System.Windows.UIElement.TouchLeaveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchLeaveEvent
  nameWithType: UIElement.TouchLeaveEvent
  fullName: System.Windows.UIElement.TouchLeaveEvent
- uid: System.Windows.UIElement.TouchMove
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchMove
  nameWithType: UIElement.TouchMove
  fullName: System.Windows.UIElement.TouchMove
- uid: System.Windows.UIElement.TouchMoveEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchMoveEvent
  nameWithType: UIElement.TouchMoveEvent
  fullName: System.Windows.UIElement.TouchMoveEvent
- uid: System.Windows.UIElement.TouchUp
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchUp
  nameWithType: UIElement.TouchUp
  fullName: System.Windows.UIElement.TouchUp
- uid: System.Windows.UIElement.TouchUpEvent
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchUpEvent
  nameWithType: UIElement.TouchUpEvent
  fullName: System.Windows.UIElement.TouchUpEvent
- uid: System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  parent: System.Windows.UIElement
  isExternal: false
  name: TranslatePoint(Point,UIElement)
  nameWithType: UIElement.TranslatePoint(Point,UIElement)
  fullName: System.Windows.UIElement.TranslatePoint(Point,UIElement)
- uid: System.Windows.UIElement.Uid
  parent: System.Windows.UIElement
  isExternal: false
  name: Uid
  nameWithType: UIElement.Uid
  fullName: System.Windows.UIElement.Uid
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.UIElement.UidProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: UidProperty
  nameWithType: UIElement.UidProperty
  fullName: System.Windows.UIElement.UidProperty
- uid: System.Windows.UIElement.UpdateLayout
  parent: System.Windows.UIElement
  isExternal: false
  name: UpdateLayout()
  nameWithType: UIElement.UpdateLayout()
  fullName: System.Windows.UIElement.UpdateLayout()
- uid: System.Windows.UIElement.Visibility
  parent: System.Windows.UIElement
  isExternal: false
  name: Visibility
  nameWithType: UIElement.Visibility
  fullName: System.Windows.UIElement.Visibility
- uid: System.Windows.Visibility
  parent: System.Windows
  isExternal: false
  name: Visibility
  nameWithType: Visibility
  fullName: System.Windows.Visibility
- uid: System.Windows.UIElement.VisibilityProperty
  parent: System.Windows.UIElement
  isExternal: false
  name: VisibilityProperty
  nameWithType: UIElement.VisibilityProperty
  fullName: System.Windows.UIElement.VisibilityProperty
- uid: System.Windows.UIElement.#ctor*
  parent: System.Windows.UIElement
  isExternal: false
  name: UIElement
  nameWithType: UIElement.UIElement
- uid: System.Windows.UIElement.AddHandler*
  parent: System.Windows.UIElement
  isExternal: false
  name: AddHandler
  nameWithType: UIElement.AddHandler
- uid: System.Windows.UIElement.AddToEventRoute*
  parent: System.Windows.UIElement
  isExternal: false
  name: AddToEventRoute
  nameWithType: UIElement.AddToEventRoute
- uid: System.Windows.UIElement.AllowDrop*
  parent: System.Windows.UIElement
  isExternal: false
  name: AllowDrop
  nameWithType: UIElement.AllowDrop
- uid: System.Windows.UIElement.ApplyAnimationClock*
  parent: System.Windows.UIElement
  isExternal: false
  name: ApplyAnimationClock
  nameWithType: UIElement.ApplyAnimationClock
- uid: System.Windows.UIElement.AreAnyTouchesCaptured*
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesCaptured
  nameWithType: UIElement.AreAnyTouchesCaptured
- uid: System.Windows.UIElement.AreAnyTouchesCapturedWithin*
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesCapturedWithin
  nameWithType: UIElement.AreAnyTouchesCapturedWithin
- uid: System.Windows.UIElement.AreAnyTouchesDirectlyOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesDirectlyOver
  nameWithType: UIElement.AreAnyTouchesDirectlyOver
- uid: System.Windows.UIElement.AreAnyTouchesOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: AreAnyTouchesOver
  nameWithType: UIElement.AreAnyTouchesOver
- uid: System.Windows.UIElement.Arrange*
  parent: System.Windows.UIElement
  isExternal: false
  name: Arrange
  nameWithType: UIElement.Arrange
- uid: System.Windows.UIElement.ArrangeCore*
  parent: System.Windows.UIElement
  isExternal: false
  name: ArrangeCore
  nameWithType: UIElement.ArrangeCore
- uid: System.Windows.UIElement.BeginAnimation*
  parent: System.Windows.UIElement
  isExternal: false
  name: BeginAnimation
  nameWithType: UIElement.BeginAnimation
- uid: System.Windows.UIElement.BitmapEffect*
  parent: System.Windows.UIElement
  isExternal: false
  name: BitmapEffect
  nameWithType: UIElement.BitmapEffect
- uid: System.Windows.UIElement.BitmapEffectInput*
  parent: System.Windows.UIElement
  isExternal: false
  name: BitmapEffectInput
  nameWithType: UIElement.BitmapEffectInput
- uid: System.Windows.UIElement.CacheMode*
  parent: System.Windows.UIElement
  isExternal: false
  name: CacheMode
  nameWithType: UIElement.CacheMode
- uid: System.Windows.UIElement.CaptureMouse*
  parent: System.Windows.UIElement
  isExternal: false
  name: CaptureMouse
  nameWithType: UIElement.CaptureMouse
- uid: System.Windows.UIElement.CaptureStylus*
  parent: System.Windows.UIElement
  isExternal: false
  name: CaptureStylus
  nameWithType: UIElement.CaptureStylus
- uid: System.Windows.UIElement.CaptureTouch*
  parent: System.Windows.UIElement
  isExternal: false
  name: CaptureTouch
  nameWithType: UIElement.CaptureTouch
- uid: System.Windows.UIElement.Clip*
  parent: System.Windows.UIElement
  isExternal: false
  name: Clip
  nameWithType: UIElement.Clip
- uid: System.Windows.UIElement.ClipToBounds*
  parent: System.Windows.UIElement
  isExternal: false
  name: ClipToBounds
  nameWithType: UIElement.ClipToBounds
- uid: System.Windows.UIElement.CommandBindings*
  parent: System.Windows.UIElement
  isExternal: false
  name: CommandBindings
  nameWithType: UIElement.CommandBindings
- uid: System.Windows.UIElement.DesiredSize*
  parent: System.Windows.UIElement
  isExternal: false
  name: DesiredSize
  nameWithType: UIElement.DesiredSize
- uid: System.Windows.UIElement.Effect*
  parent: System.Windows.UIElement
  isExternal: false
  name: Effect
  nameWithType: UIElement.Effect
- uid: System.Windows.UIElement.Focus*
  parent: System.Windows.UIElement
  isExternal: false
  name: Focus
  nameWithType: UIElement.Focus
- uid: System.Windows.UIElement.Focusable*
  parent: System.Windows.UIElement
  isExternal: false
  name: Focusable
  nameWithType: UIElement.Focusable
- uid: System.Windows.UIElement.GetAnimationBaseValue*
  parent: System.Windows.UIElement
  isExternal: false
  name: GetAnimationBaseValue
  nameWithType: UIElement.GetAnimationBaseValue
- uid: System.Windows.UIElement.GetLayoutClip*
  parent: System.Windows.UIElement
  isExternal: false
  name: GetLayoutClip
  nameWithType: UIElement.GetLayoutClip
- uid: System.Windows.UIElement.GetUIParentCore*
  parent: System.Windows.UIElement
  isExternal: false
  name: GetUIParentCore
  nameWithType: UIElement.GetUIParentCore
- uid: System.Windows.UIElement.HasAnimatedProperties*
  parent: System.Windows.UIElement
  isExternal: false
  name: HasAnimatedProperties
  nameWithType: UIElement.HasAnimatedProperties
- uid: System.Windows.UIElement.HasEffectiveKeyboardFocus*
  parent: System.Windows.UIElement
  isExternal: false
  name: HasEffectiveKeyboardFocus
  nameWithType: UIElement.HasEffectiveKeyboardFocus
- uid: System.Windows.UIElement.HitTestCore*
  parent: System.Windows.UIElement
  isExternal: false
  name: HitTestCore
  nameWithType: UIElement.HitTestCore
- uid: System.Windows.UIElement.InputBindings*
  parent: System.Windows.UIElement
  isExternal: false
  name: InputBindings
  nameWithType: UIElement.InputBindings
- uid: System.Windows.UIElement.InputHitTest*
  parent: System.Windows.UIElement
  isExternal: false
  name: InputHitTest
  nameWithType: UIElement.InputHitTest
- uid: System.Windows.UIElement.InvalidateArrange*
  parent: System.Windows.UIElement
  isExternal: false
  name: InvalidateArrange
  nameWithType: UIElement.InvalidateArrange
- uid: System.Windows.UIElement.InvalidateMeasure*
  parent: System.Windows.UIElement
  isExternal: false
  name: InvalidateMeasure
  nameWithType: UIElement.InvalidateMeasure
- uid: System.Windows.UIElement.InvalidateVisual*
  parent: System.Windows.UIElement
  isExternal: false
  name: InvalidateVisual
  nameWithType: UIElement.InvalidateVisual
- uid: System.Windows.UIElement.IsArrangeValid*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsArrangeValid
  nameWithType: UIElement.IsArrangeValid
- uid: System.Windows.UIElement.IsEnabled*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsEnabled
  nameWithType: UIElement.IsEnabled
- uid: System.Windows.UIElement.IsEnabledCore*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsEnabledCore
  nameWithType: UIElement.IsEnabledCore
- uid: System.Windows.UIElement.IsFocused*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsFocused
  nameWithType: UIElement.IsFocused
- uid: System.Windows.UIElement.IsHitTestVisible*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsHitTestVisible
  nameWithType: UIElement.IsHitTestVisible
- uid: System.Windows.UIElement.IsInputMethodEnabled*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsInputMethodEnabled
  nameWithType: UIElement.IsInputMethodEnabled
- uid: System.Windows.UIElement.IsKeyboardFocused*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsKeyboardFocused
  nameWithType: UIElement.IsKeyboardFocused
- uid: System.Windows.UIElement.IsKeyboardFocusWithin*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsKeyboardFocusWithin
  nameWithType: UIElement.IsKeyboardFocusWithin
- uid: System.Windows.UIElement.IsManipulationEnabled*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsManipulationEnabled
  nameWithType: UIElement.IsManipulationEnabled
- uid: System.Windows.UIElement.IsMeasureValid*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMeasureValid
  nameWithType: UIElement.IsMeasureValid
- uid: System.Windows.UIElement.IsMouseCaptured*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseCaptured
  nameWithType: UIElement.IsMouseCaptured
- uid: System.Windows.UIElement.IsMouseCaptureWithin*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseCaptureWithin
  nameWithType: UIElement.IsMouseCaptureWithin
- uid: System.Windows.UIElement.IsMouseDirectlyOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseDirectlyOver
  nameWithType: UIElement.IsMouseDirectlyOver
- uid: System.Windows.UIElement.IsMouseOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsMouseOver
  nameWithType: UIElement.IsMouseOver
- uid: System.Windows.UIElement.IsStylusCaptured*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusCaptured
  nameWithType: UIElement.IsStylusCaptured
- uid: System.Windows.UIElement.IsStylusCaptureWithin*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusCaptureWithin
  nameWithType: UIElement.IsStylusCaptureWithin
- uid: System.Windows.UIElement.IsStylusDirectlyOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusDirectlyOver
  nameWithType: UIElement.IsStylusDirectlyOver
- uid: System.Windows.UIElement.IsStylusOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsStylusOver
  nameWithType: UIElement.IsStylusOver
- uid: System.Windows.UIElement.IsVisible*
  parent: System.Windows.UIElement
  isExternal: false
  name: IsVisible
  nameWithType: UIElement.IsVisible
- uid: System.Windows.UIElement.Measure*
  parent: System.Windows.UIElement
  isExternal: false
  name: Measure
  nameWithType: UIElement.Measure
- uid: System.Windows.UIElement.MeasureCore*
  parent: System.Windows.UIElement
  isExternal: false
  name: MeasureCore
  nameWithType: UIElement.MeasureCore
- uid: System.Windows.UIElement.MoveFocus*
  parent: System.Windows.UIElement
  isExternal: false
  name: MoveFocus
  nameWithType: UIElement.MoveFocus
- uid: System.Windows.UIElement.OnAccessKey*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnAccessKey
  nameWithType: UIElement.OnAccessKey
- uid: System.Windows.UIElement.OnChildDesiredSizeChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnChildDesiredSizeChanged
  nameWithType: UIElement.OnChildDesiredSizeChanged
- uid: System.Windows.UIElement.OnCreateAutomationPeer*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnCreateAutomationPeer
  nameWithType: UIElement.OnCreateAutomationPeer
- uid: System.Windows.UIElement.OnDragEnter*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnDragEnter
  nameWithType: UIElement.OnDragEnter
- uid: System.Windows.UIElement.OnDragLeave*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnDragLeave
  nameWithType: UIElement.OnDragLeave
- uid: System.Windows.UIElement.OnDragOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnDragOver
  nameWithType: UIElement.OnDragOver
- uid: System.Windows.UIElement.OnDrop*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnDrop
  nameWithType: UIElement.OnDrop
- uid: System.Windows.UIElement.OnGiveFeedback*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGiveFeedback
  nameWithType: UIElement.OnGiveFeedback
- uid: System.Windows.UIElement.OnGotFocus*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotFocus
  nameWithType: UIElement.OnGotFocus
- uid: System.Windows.UIElement.OnGotKeyboardFocus*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotKeyboardFocus
  nameWithType: UIElement.OnGotKeyboardFocus
- uid: System.Windows.UIElement.OnGotMouseCapture*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotMouseCapture
  nameWithType: UIElement.OnGotMouseCapture
- uid: System.Windows.UIElement.OnGotStylusCapture*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotStylusCapture
  nameWithType: UIElement.OnGotStylusCapture
- uid: System.Windows.UIElement.OnGotTouchCapture*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnGotTouchCapture
  nameWithType: UIElement.OnGotTouchCapture
- uid: System.Windows.UIElement.OnIsKeyboardFocusedChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsKeyboardFocusedChanged
  nameWithType: UIElement.OnIsKeyboardFocusedChanged
- uid: System.Windows.UIElement.OnIsKeyboardFocusWithinChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged
  nameWithType: UIElement.OnIsKeyboardFocusWithinChanged
- uid: System.Windows.UIElement.OnIsMouseCapturedChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsMouseCapturedChanged
  nameWithType: UIElement.OnIsMouseCapturedChanged
- uid: System.Windows.UIElement.OnIsMouseCaptureWithinChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsMouseCaptureWithinChanged
  nameWithType: UIElement.OnIsMouseCaptureWithinChanged
- uid: System.Windows.UIElement.OnIsMouseDirectlyOverChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsMouseDirectlyOverChanged
  nameWithType: UIElement.OnIsMouseDirectlyOverChanged
- uid: System.Windows.UIElement.OnIsStylusCapturedChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsStylusCapturedChanged
  nameWithType: UIElement.OnIsStylusCapturedChanged
- uid: System.Windows.UIElement.OnIsStylusCaptureWithinChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsStylusCaptureWithinChanged
  nameWithType: UIElement.OnIsStylusCaptureWithinChanged
- uid: System.Windows.UIElement.OnIsStylusDirectlyOverChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnIsStylusDirectlyOverChanged
  nameWithType: UIElement.OnIsStylusDirectlyOverChanged
- uid: System.Windows.UIElement.OnKeyDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnKeyDown
  nameWithType: UIElement.OnKeyDown
- uid: System.Windows.UIElement.OnKeyUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnKeyUp
  nameWithType: UIElement.OnKeyUp
- uid: System.Windows.UIElement.OnLostFocus*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostFocus
  nameWithType: UIElement.OnLostFocus
- uid: System.Windows.UIElement.OnLostKeyboardFocus*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostKeyboardFocus
  nameWithType: UIElement.OnLostKeyboardFocus
- uid: System.Windows.UIElement.OnLostMouseCapture*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostMouseCapture
  nameWithType: UIElement.OnLostMouseCapture
- uid: System.Windows.UIElement.OnLostStylusCapture*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostStylusCapture
  nameWithType: UIElement.OnLostStylusCapture
- uid: System.Windows.UIElement.OnLostTouchCapture*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnLostTouchCapture
  nameWithType: UIElement.OnLostTouchCapture
- uid: System.Windows.UIElement.OnManipulationBoundaryFeedback*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationBoundaryFeedback
  nameWithType: UIElement.OnManipulationBoundaryFeedback
- uid: System.Windows.UIElement.OnManipulationCompleted*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationCompleted
  nameWithType: UIElement.OnManipulationCompleted
- uid: System.Windows.UIElement.OnManipulationDelta*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationDelta
  nameWithType: UIElement.OnManipulationDelta
- uid: System.Windows.UIElement.OnManipulationInertiaStarting*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationInertiaStarting
  nameWithType: UIElement.OnManipulationInertiaStarting
- uid: System.Windows.UIElement.OnManipulationStarted*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationStarted
  nameWithType: UIElement.OnManipulationStarted
- uid: System.Windows.UIElement.OnManipulationStarting*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnManipulationStarting
  nameWithType: UIElement.OnManipulationStarting
- uid: System.Windows.UIElement.OnMouseDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseDown
  nameWithType: UIElement.OnMouseDown
- uid: System.Windows.UIElement.OnMouseEnter*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseEnter
  nameWithType: UIElement.OnMouseEnter
- uid: System.Windows.UIElement.OnMouseLeave*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseLeave
  nameWithType: UIElement.OnMouseLeave
- uid: System.Windows.UIElement.OnMouseLeftButtonDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseLeftButtonDown
  nameWithType: UIElement.OnMouseLeftButtonDown
- uid: System.Windows.UIElement.OnMouseLeftButtonUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseLeftButtonUp
  nameWithType: UIElement.OnMouseLeftButtonUp
- uid: System.Windows.UIElement.OnMouseMove*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseMove
  nameWithType: UIElement.OnMouseMove
- uid: System.Windows.UIElement.OnMouseRightButtonDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseRightButtonDown
  nameWithType: UIElement.OnMouseRightButtonDown
- uid: System.Windows.UIElement.OnMouseRightButtonUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseRightButtonUp
  nameWithType: UIElement.OnMouseRightButtonUp
- uid: System.Windows.UIElement.OnMouseUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseUp
  nameWithType: UIElement.OnMouseUp
- uid: System.Windows.UIElement.OnMouseWheel*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnMouseWheel
  nameWithType: UIElement.OnMouseWheel
- uid: System.Windows.UIElement.OnPreviewDragEnter*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewDragEnter
  nameWithType: UIElement.OnPreviewDragEnter
- uid: System.Windows.UIElement.OnPreviewDragLeave*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewDragLeave
  nameWithType: UIElement.OnPreviewDragLeave
- uid: System.Windows.UIElement.OnPreviewDragOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewDragOver
  nameWithType: UIElement.OnPreviewDragOver
- uid: System.Windows.UIElement.OnPreviewDrop*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewDrop
  nameWithType: UIElement.OnPreviewDrop
- uid: System.Windows.UIElement.OnPreviewGiveFeedback*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewGiveFeedback
  nameWithType: UIElement.OnPreviewGiveFeedback
- uid: System.Windows.UIElement.OnPreviewGotKeyboardFocus*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewGotKeyboardFocus
  nameWithType: UIElement.OnPreviewGotKeyboardFocus
- uid: System.Windows.UIElement.OnPreviewKeyDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewKeyDown
  nameWithType: UIElement.OnPreviewKeyDown
- uid: System.Windows.UIElement.OnPreviewKeyUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewKeyUp
  nameWithType: UIElement.OnPreviewKeyUp
- uid: System.Windows.UIElement.OnPreviewLostKeyboardFocus*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewLostKeyboardFocus
  nameWithType: UIElement.OnPreviewLostKeyboardFocus
- uid: System.Windows.UIElement.OnPreviewMouseDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseDown
  nameWithType: UIElement.OnPreviewMouseDown
- uid: System.Windows.UIElement.OnPreviewMouseLeftButtonDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseLeftButtonDown
  nameWithType: UIElement.OnPreviewMouseLeftButtonDown
- uid: System.Windows.UIElement.OnPreviewMouseLeftButtonUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseLeftButtonUp
  nameWithType: UIElement.OnPreviewMouseLeftButtonUp
- uid: System.Windows.UIElement.OnPreviewMouseMove*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseMove
  nameWithType: UIElement.OnPreviewMouseMove
- uid: System.Windows.UIElement.OnPreviewMouseRightButtonDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseRightButtonDown
  nameWithType: UIElement.OnPreviewMouseRightButtonDown
- uid: System.Windows.UIElement.OnPreviewMouseRightButtonUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseRightButtonUp
  nameWithType: UIElement.OnPreviewMouseRightButtonUp
- uid: System.Windows.UIElement.OnPreviewMouseUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseUp
  nameWithType: UIElement.OnPreviewMouseUp
- uid: System.Windows.UIElement.OnPreviewMouseWheel*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewMouseWheel
  nameWithType: UIElement.OnPreviewMouseWheel
- uid: System.Windows.UIElement.OnPreviewQueryContinueDrag*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewQueryContinueDrag
  nameWithType: UIElement.OnPreviewQueryContinueDrag
- uid: System.Windows.UIElement.OnPreviewStylusButtonDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusButtonDown
  nameWithType: UIElement.OnPreviewStylusButtonDown
- uid: System.Windows.UIElement.OnPreviewStylusButtonUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusButtonUp
  nameWithType: UIElement.OnPreviewStylusButtonUp
- uid: System.Windows.UIElement.OnPreviewStylusDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusDown
  nameWithType: UIElement.OnPreviewStylusDown
- uid: System.Windows.UIElement.OnPreviewStylusInAirMove*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusInAirMove
  nameWithType: UIElement.OnPreviewStylusInAirMove
- uid: System.Windows.UIElement.OnPreviewStylusInRange*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusInRange
  nameWithType: UIElement.OnPreviewStylusInRange
- uid: System.Windows.UIElement.OnPreviewStylusMove*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusMove
  nameWithType: UIElement.OnPreviewStylusMove
- uid: System.Windows.UIElement.OnPreviewStylusOutOfRange*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusOutOfRange
  nameWithType: UIElement.OnPreviewStylusOutOfRange
- uid: System.Windows.UIElement.OnPreviewStylusSystemGesture*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusSystemGesture
  nameWithType: UIElement.OnPreviewStylusSystemGesture
- uid: System.Windows.UIElement.OnPreviewStylusUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewStylusUp
  nameWithType: UIElement.OnPreviewStylusUp
- uid: System.Windows.UIElement.OnPreviewTextInput*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewTextInput
  nameWithType: UIElement.OnPreviewTextInput
- uid: System.Windows.UIElement.OnPreviewTouchDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewTouchDown
  nameWithType: UIElement.OnPreviewTouchDown
- uid: System.Windows.UIElement.OnPreviewTouchMove*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewTouchMove
  nameWithType: UIElement.OnPreviewTouchMove
- uid: System.Windows.UIElement.OnPreviewTouchUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnPreviewTouchUp
  nameWithType: UIElement.OnPreviewTouchUp
- uid: System.Windows.UIElement.OnQueryContinueDrag*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnQueryContinueDrag
  nameWithType: UIElement.OnQueryContinueDrag
- uid: System.Windows.UIElement.OnQueryCursor*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnQueryCursor
  nameWithType: UIElement.OnQueryCursor
- uid: System.Windows.UIElement.OnRender*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnRender
  nameWithType: UIElement.OnRender
- uid: System.Windows.UIElement.OnRenderSizeChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnRenderSizeChanged
  nameWithType: UIElement.OnRenderSizeChanged
- uid: System.Windows.UIElement.OnStylusButtonDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusButtonDown
  nameWithType: UIElement.OnStylusButtonDown
- uid: System.Windows.UIElement.OnStylusButtonUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusButtonUp
  nameWithType: UIElement.OnStylusButtonUp
- uid: System.Windows.UIElement.OnStylusDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusDown
  nameWithType: UIElement.OnStylusDown
- uid: System.Windows.UIElement.OnStylusEnter*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusEnter
  nameWithType: UIElement.OnStylusEnter
- uid: System.Windows.UIElement.OnStylusInAirMove*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusInAirMove
  nameWithType: UIElement.OnStylusInAirMove
- uid: System.Windows.UIElement.OnStylusInRange*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusInRange
  nameWithType: UIElement.OnStylusInRange
- uid: System.Windows.UIElement.OnStylusLeave*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusLeave
  nameWithType: UIElement.OnStylusLeave
- uid: System.Windows.UIElement.OnStylusMove*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusMove
  nameWithType: UIElement.OnStylusMove
- uid: System.Windows.UIElement.OnStylusOutOfRange*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusOutOfRange
  nameWithType: UIElement.OnStylusOutOfRange
- uid: System.Windows.UIElement.OnStylusSystemGesture*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusSystemGesture
  nameWithType: UIElement.OnStylusSystemGesture
- uid: System.Windows.UIElement.OnStylusUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnStylusUp
  nameWithType: UIElement.OnStylusUp
- uid: System.Windows.UIElement.OnTextInput*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTextInput
  nameWithType: UIElement.OnTextInput
- uid: System.Windows.UIElement.OnTouchDown*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchDown
  nameWithType: UIElement.OnTouchDown
- uid: System.Windows.UIElement.OnTouchEnter*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchEnter
  nameWithType: UIElement.OnTouchEnter
- uid: System.Windows.UIElement.OnTouchLeave*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchLeave
  nameWithType: UIElement.OnTouchLeave
- uid: System.Windows.UIElement.OnTouchMove*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchMove
  nameWithType: UIElement.OnTouchMove
- uid: System.Windows.UIElement.OnTouchUp*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnTouchUp
  nameWithType: UIElement.OnTouchUp
- uid: System.Windows.UIElement.OnVisualParentChanged*
  parent: System.Windows.UIElement
  isExternal: false
  name: OnVisualParentChanged
  nameWithType: UIElement.OnVisualParentChanged
- uid: System.Windows.UIElement.Opacity*
  parent: System.Windows.UIElement
  isExternal: false
  name: Opacity
  nameWithType: UIElement.Opacity
- uid: System.Windows.UIElement.OpacityMask*
  parent: System.Windows.UIElement
  isExternal: false
  name: OpacityMask
  nameWithType: UIElement.OpacityMask
- uid: System.Windows.UIElement.PersistId*
  parent: System.Windows.UIElement
  isExternal: false
  name: PersistId
  nameWithType: UIElement.PersistId
- uid: System.Windows.UIElement.PredictFocus*
  parent: System.Windows.UIElement
  isExternal: false
  name: PredictFocus
  nameWithType: UIElement.PredictFocus
- uid: System.Windows.UIElement.RaiseEvent*
  parent: System.Windows.UIElement
  isExternal: false
  name: RaiseEvent
  nameWithType: UIElement.RaiseEvent
- uid: System.Windows.UIElement.ReleaseAllTouchCaptures*
  parent: System.Windows.UIElement
  isExternal: false
  name: ReleaseAllTouchCaptures
  nameWithType: UIElement.ReleaseAllTouchCaptures
- uid: System.Windows.UIElement.ReleaseMouseCapture*
  parent: System.Windows.UIElement
  isExternal: false
  name: ReleaseMouseCapture
  nameWithType: UIElement.ReleaseMouseCapture
- uid: System.Windows.UIElement.ReleaseStylusCapture*
  parent: System.Windows.UIElement
  isExternal: false
  name: ReleaseStylusCapture
  nameWithType: UIElement.ReleaseStylusCapture
- uid: System.Windows.UIElement.ReleaseTouchCapture*
  parent: System.Windows.UIElement
  isExternal: false
  name: ReleaseTouchCapture
  nameWithType: UIElement.ReleaseTouchCapture
- uid: System.Windows.UIElement.RemoveHandler*
  parent: System.Windows.UIElement
  isExternal: false
  name: RemoveHandler
  nameWithType: UIElement.RemoveHandler
- uid: System.Windows.UIElement.RenderSize*
  parent: System.Windows.UIElement
  isExternal: false
  name: RenderSize
  nameWithType: UIElement.RenderSize
- uid: System.Windows.UIElement.RenderTransform*
  parent: System.Windows.UIElement
  isExternal: false
  name: RenderTransform
  nameWithType: UIElement.RenderTransform
- uid: System.Windows.UIElement.RenderTransformOrigin*
  parent: System.Windows.UIElement
  isExternal: false
  name: RenderTransformOrigin
  nameWithType: UIElement.RenderTransformOrigin
- uid: System.Windows.UIElement.ShouldSerializeCommandBindings*
  parent: System.Windows.UIElement
  isExternal: false
  name: ShouldSerializeCommandBindings
  nameWithType: UIElement.ShouldSerializeCommandBindings
- uid: System.Windows.UIElement.ShouldSerializeInputBindings*
  parent: System.Windows.UIElement
  isExternal: false
  name: ShouldSerializeInputBindings
  nameWithType: UIElement.ShouldSerializeInputBindings
- uid: System.Windows.UIElement.SnapsToDevicePixels*
  parent: System.Windows.UIElement
  isExternal: false
  name: SnapsToDevicePixels
  nameWithType: UIElement.SnapsToDevicePixels
- uid: System.Windows.UIElement.StylusPlugIns*
  parent: System.Windows.UIElement
  isExternal: false
  name: StylusPlugIns
  nameWithType: UIElement.StylusPlugIns
- uid: System.Windows.UIElement.TouchesCaptured*
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchesCaptured
  nameWithType: UIElement.TouchesCaptured
- uid: System.Windows.UIElement.TouchesCapturedWithin*
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchesCapturedWithin
  nameWithType: UIElement.TouchesCapturedWithin
- uid: System.Windows.UIElement.TouchesDirectlyOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchesDirectlyOver
  nameWithType: UIElement.TouchesDirectlyOver
- uid: System.Windows.UIElement.TouchesOver*
  parent: System.Windows.UIElement
  isExternal: false
  name: TouchesOver
  nameWithType: UIElement.TouchesOver
- uid: System.Windows.UIElement.TranslatePoint*
  parent: System.Windows.UIElement
  isExternal: false
  name: TranslatePoint
  nameWithType: UIElement.TranslatePoint
- uid: System.Windows.UIElement.Uid*
  parent: System.Windows.UIElement
  isExternal: false
  name: Uid
  nameWithType: UIElement.Uid
- uid: System.Windows.UIElement.UpdateLayout*
  parent: System.Windows.UIElement
  isExternal: false
  name: UpdateLayout
  nameWithType: UIElement.UpdateLayout
- uid: System.Windows.UIElement.Visibility*
  parent: System.Windows.UIElement
  isExternal: false
  name: Visibility
  nameWithType: UIElement.Visibility
