### YamlMime:ManagedReference
items:
- uid: System.Threading.HostExecutionContextManager
  id: HostExecutionContextManager
  children:
  - System.Threading.HostExecutionContextManager.#ctor
  - System.Threading.HostExecutionContextManager.Capture
  - System.Threading.HostExecutionContextManager.Revert(System.Object)
  - System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)
  langs:
  - csharp
  name: HostExecutionContextManager
  nameWithType: HostExecutionContextManager
  fullName: System.Threading.HostExecutionContextManager
  type: Class
  summary: "Biedt de functionaliteit waarmee een common language runtime-host om deel te nemen in de stroom of de migratie van de uitvoeringscontext."
  remarks: "Als de huidige <xref:System.AppDomainManager>bevat een verwijzing naar een HostExecutionContextManager in de <xref:System.AppDomainManager.HostExecutionContextManager%2A>eigenschap en vervolgens de common language runtime roept de manager telkens wanneer er een aanroep van de <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName>methode optreedt, dat de host om deel te nemen in de stroom van de uitvoeringscontext.</xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> </xref:System.AppDomainManager.HostExecutionContextManager%2A> </xref:System.AppDomainManager>"
  syntax:
    content: public class HostExecutionContextManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.#ctor
  id: '#ctor'
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: HostExecutionContextManager()
  nameWithType: HostExecutionContextManager.HostExecutionContextManager()
  fullName: System.Threading.HostExecutionContextManager.HostExecutionContextManager()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Threading.HostExecutionContextManager&quot;> </xref> klasse."
  syntax:
    content: public HostExecutionContextManager ();
    parameters: []
  overload: System.Threading.HostExecutionContextManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.Capture
  id: Capture
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: Capture()
  nameWithType: HostExecutionContextManager.Capture()
  fullName: System.Threading.HostExecutionContextManager.Capture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hiermee worden vastgelegd in de context van de host worden uitgevoerd vanuit de huidige thread."
  remarks: "De <xref:System.Threading.HostExecutionContext>wordt gemaakt met een SafeHandle die de `IUnknown` aanwijzer voor de host uitvoeren van de huidige thread.</xref:System.Threading.HostExecutionContext>"
  syntax:
    content: public virtual System.Threading.HostExecutionContext Capture ();
    parameters: []
    return:
      type: System.Threading.HostExecutionContext
      description: "Een <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref> -object als de host uitvoeringscontext van de huidige thread."
  overload: System.Threading.HostExecutionContextManager.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)
  id: Revert(System.Object)
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: Revert(Object)
  nameWithType: HostExecutionContextManager.Revert(Object)
  fullName: System.Threading.HostExecutionContextManager.Revert(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "De uitvoeringscontext host worden teruggezet in de vorige staat."
  remarks: '`previousState`moet worden het object geretourneerd door de <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A>methode.</xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A>'
  syntax:
    content: public virtual void Revert (object previousState);
    parameters:
    - id: previousState
      type: System.Object
      description: "De vorige context status te herstellen."
  overload: System.Threading.HostExecutionContextManager.Revert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previousState</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>previousState</code> is niet gemaakt in de huidige thread.       - of - <code>previousState</code> is niet de laatste status voor de <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref>."
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)
  id: SetHostExecutionContext(System.Threading.HostExecutionContext)
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: SetHostExecutionContext(HostExecutionContext)
  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
  fullName: System.Threading.HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hiermee stelt u de huidige uitvoeringscontext van host naar de opgegeven host uitvoeringscontext."
  remarks: "De methode SetHostExecutionContext stelt u de context van de host worden uitgevoerd voor de huidige <xref:System.Threading.HostExecutionContext>.</xref:System.Threading.HostExecutionContext>  Een <xref:System.Threading.HostExecutionContext>die is gebruikt als het argument voor een andere aanroep van SetHostExecutionContext methode kan niet worden doorgegeven als de parameter voor deze methode.</xref:System.Threading.HostExecutionContext> Gebruik in plaats daarvan de <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName>methode voor het maken van een kopie van een <xref:System.Threading.HostExecutionContext>object en vervolgens met de kopie in te stellen van de uitvoeringscontext host.</xref:System.Threading.HostExecutionContext> </xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName>       Roep de <xref:System.Threading.HostExecutionContextManager.Revert%2A>methode om te herstellen met behulp van het object dat wordt geretourneerd door deze methode de <xref:System.Threading.HostExecutionContext>in de vorige status.</xref:System.Threading.HostExecutionContext> </xref:System.Threading.HostExecutionContextManager.Revert%2A>"
  syntax:
    content: public virtual object SetHostExecutionContext (System.Threading.HostExecutionContext hostExecutionContext);
    parameters:
    - id: hostExecutionContext
      type: System.Threading.HostExecutionContext
      description: "De <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref> moet worden ingesteld."
    return:
      type: System.Object
      description: "Een object voor het herstellen van de <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref> in de vorige status."
  overload: System.Threading.HostExecutionContextManager.SetHostExecutionContext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>hostExecutionContext</code>niet is verkregen via een capture-bewerking.       - of - <code>hostExecutionContext</code> is het argument voor een eerdere aanroep voor SetHostExecutionContext-methode."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Threading.HostExecutionContextManager.#ctor
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: HostExecutionContextManager()
  nameWithType: HostExecutionContextManager.HostExecutionContextManager()
  fullName: System.Threading.HostExecutionContextManager.HostExecutionContextManager()
- uid: System.Threading.HostExecutionContextManager.Capture
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Capture()
  nameWithType: HostExecutionContextManager.Capture()
  fullName: System.Threading.HostExecutionContextManager.Capture()
- uid: System.Threading.HostExecutionContext
  parent: System.Threading
  isExternal: false
  name: HostExecutionContext
  nameWithType: HostExecutionContext
  fullName: System.Threading.HostExecutionContext
- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Revert(Object)
  nameWithType: HostExecutionContextManager.Revert(Object)
  fullName: System.Threading.HostExecutionContextManager.Revert(Object)
- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: SetHostExecutionContext(HostExecutionContext)
  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
  fullName: System.Threading.HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
- uid: System.Threading.HostExecutionContextManager.#ctor*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: HostExecutionContextManager
  nameWithType: HostExecutionContextManager.HostExecutionContextManager
- uid: System.Threading.HostExecutionContextManager.Capture*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Capture
  nameWithType: HostExecutionContextManager.Capture
- uid: System.Threading.HostExecutionContextManager.Revert*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Revert
  nameWithType: HostExecutionContextManager.Revert
- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: SetHostExecutionContext
  nameWithType: HostExecutionContextManager.SetHostExecutionContext
