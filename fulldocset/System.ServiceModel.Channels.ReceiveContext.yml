### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ReceiveContext
  id: ReceiveContext
  children:
  - System.ServiceModel.Channels.ReceiveContext.#ctor
  - System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.Fault
  - System.ServiceModel.Channels.ReceiveContext.Faulted
  - System.ServiceModel.Channels.ReceiveContext.Name
  - System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.OnFaulted
  - System.ServiceModel.Channels.ReceiveContext.State
  - System.ServiceModel.Channels.ReceiveContext.ThisLock
  - System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  - System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  langs:
  - csharp
  name: ReceiveContext
  nameWithType: ReceiveContext
  fullName: System.ServiceModel.Channels.ReceiveContext
  type: Class
  summary: "Afgeleid van deze klasse voor het implementeren van een aangepaste statusmachine ontvangen voor context-functionaliteit."
  remarks: "Ontvangen context-functionaliteit is tweeledig. Bij het werken met een in de wachtrij kanaal ontvangen wordt context kunt u een bericht voordat de verwerking van het vergrendelen. Als er een fout optreedt, blijft het bericht vergrendeld zodat de service die het bericht verwerkt eigendom onderhoudt (een andere service kan niet ontvangen en verwerken van hetzelfde bericht) en kunnen ervoor kiezen om uit te voeren van een andere actie erop. Bij het werken met een eenzijdige kanaal ontvangen kan context een service om te bepalen wanneer het bevestigingsbericht verzendt of dit kan duiden op een probleem door een negatieve ontvangstbevestiging bericht te verzenden. De client kunt vervolgens het bericht opnieuw verzenden als een negatieve ontvangstbevestiging wordt ontvangen of als deze niet binnen een bepaalde periode een bevestiging ontvangt."
  syntax:
    content: public abstract class ReceiveContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: ReceiveContext()
  nameWithType: ReceiveContext.ReceiveContext()
  fullName: System.ServiceModel.Channels.ReceiveContext.ReceiveContext()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.Channels.ReceiveContext&quot;> </xref> klasse."
  syntax:
    content: protected ReceiveContext ();
    parameters: []
  overload: System.ServiceModel.Channels.ReceiveContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)
  id: Abandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Abandon(TimeSpan)
  nameWithType: ReceiveContext.Abandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Zorgt ervoor dat de statuscomputer overstappen naar de status afgebroken met de opgegeven time-outwaarde."
  syntax:
    content: public virtual void Abandon (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor de bewerking afbreken is voltooid."
  overload: System.ServiceModel.Channels.ReceiveContext.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)
  id: Abandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Abandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.Abandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(Exception,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Zorgt ervoor dat de statuscomputer overstappen naar de status afgebroken met de opgegeven uitzondering en de time-outwaarde."
  syntax:
    content: public virtual void Abandon (Exception exception, TimeSpan timeout);
    parameters:
    - id: exception
      type: System.Exception
      description: "De uitzondering die ervoor zorgt de bewerking afbreken dat."
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor de bewerking afbreken is voltooid."
  overload: System.ServiceModel.Channels.ReceiveContext.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: BeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Een bewerking asynchroon afbreken met de opgegeven time-out, asynchrone callback en gegevens van de gebruiker gedefinieerde status begint."
  syntax:
    content: public virtual IAsyncResult BeginAbandon (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor de bewerking afbreken is voltooid."
    - id: callback
      type: System.AsyncCallback
      description: "De gemachtigde asynchrone callback die de melding van de voltooiing van de asynchrone bewerking ontvangt."
    - id: state
      type: System.Object
      description: "De gegevens van de gebruiker gedefinieerde status."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>dat verwijst naar de bewerking asynchroon afbreken.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.BeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Een bewerking asynchroon afbreken met de opgegeven uitzondering, time, asynchrone callback en gegevens van de gebruiker gedefinieerde status begint."
  syntax:
    content: public virtual IAsyncResult BeginAbandon (Exception exception, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: exception
      type: System.Exception
      description: "Een uitzondering met de reden voor de bewerking afbreken."
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor de bewerking afbreken is voltooid."
    - id: callback
      type: System.AsyncCallback
      description: "De gemachtigde asynchrone callback die de melding van de voltooiing van de asynchrone bewerking ontvangt."
    - id: state
      type: System.Object
      description: "de gegevens van de gebruiker gedefinieerde status."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>dat verwijst naar de bewerking asynchroon afbreken.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.BeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: BeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Een asynchrone complete bewerking met de opgegeven time-out, asynchrone callback en gegevens van de gebruiker gedefinieerde status begint."
  syntax:
    content: public virtual IAsyncResult BeginComplete (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor het voltooien van de bewerking te voltooien."
    - id: callback
      type: System.AsyncCallback
      description: "De gemachtigde asynchrone callback die de melding van de voltooiing van de asynchrone bewerking ontvangt."
    - id: state
      type: System.Object
      description: "De gegevens van de gebruiker gedefinieerde status."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>dat verwijst naar de asynchrone bewerking voltooid.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.BeginComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)
  id: Complete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Complete(TimeSpan)
  nameWithType: ReceiveContext.Complete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Complete(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Zorgt ervoor dat de statuscomputer overstappen naar de status voltooid met de opgegeven time-outwaarde."
  syntax:
    content: public virtual void Complete (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor het voltooien van de bewerking te voltooien."
  overload: System.ServiceModel.Channels.ReceiveContext.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)
  id: EndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: EndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.EndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndAbandon(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Een bewerking asynchroon afbreken voltooit."
  syntax:
    content: public virtual void EndAbandon (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd door een aanroep naar een van de <xref:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon*>methoden.</xref:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.EndAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)
  id: EndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: EndComplete(IAsyncResult)
  nameWithType: ReceiveContext.EndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndComplete(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Een asynchrone bewerking voltooid is."
  syntax:
    content: public virtual void EndComplete (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd door een aanroep naar de <xref:System.ServiceModel.Channels.ReceiveContext.BeginComplete*>methode.</xref:System.ServiceModel.Channels.ReceiveContext.BeginComplete*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.EndComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Fault
  id: Fault
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Fault()
  nameWithType: ReceiveContext.Fault()
  fullName: System.ServiceModel.Channels.ReceiveContext.Fault()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "De statuscomputer overstappen naar de status van de fout veroorzaakt."
  syntax:
    content: protected virtual void Fault ();
    parameters: []
  overload: System.ServiceModel.Channels.ReceiveContext.Fault*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Faulted
  id: Faulted
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Faulted
  nameWithType: ReceiveContext.Faulted
  fullName: System.ServiceModel.Channels.ReceiveContext.Faulted
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hiermee definieert u de gebeurtenis die optreedt wanneer er is een uitzondering opgetreden tijdens het messaging."
  syntax:
    content: public event EventHandler Faulted;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Name
  id: Name
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Name
  nameWithType: ReceiveContext.Name
  fullName: System.ServiceModel.Channels.ReceiveContext.Name
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "De naam van de ontvangstcontext."
  syntax:
    content: public static readonly string Name;
    return:
      type: System.String
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)
  id: OnAbandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnAbandon(TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Wordt aangeroepen wanneer de statuscomputer een overgang naar de status afgebroken met de opgegeven time-outwaarde."
  syntax:
    content: protected abstract void OnAbandon (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor de bewerking afbreken is voltooid."
  overload: System.ServiceModel.Channels.ReceiveContext.OnAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)
  id: OnAbandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnAbandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(Exception,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Wordt aangeroepen wanneer de statuscomputer een overgang naar de status afgebroken met de opgegeven uitzondering en de time-outwaarde."
  syntax:
    content: protected virtual void OnAbandon (Exception exception, TimeSpan timeout);
    parameters:
    - id: exception
      type: System.Exception
      description: "Een uitzondering met de reden voor de bewerking afbreken."
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor de bewerking afbreken is voltooid."
  overload: System.ServiceModel.Channels.ReceiveContext.OnAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Wordt aangeroepen wanneer de statuscomputer een overgang naar de status afgebroken asynchroon met de opgegeven time-outwaarde, callback en gegevens van de gebruikersstatus."
  syntax:
    content: protected abstract IAsyncResult OnBeginAbandon (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor de bewerking afbreken is voltooid."
    - id: callback
      type: System.AsyncCallback
      description: "De gemachtigde asynchrone callback die de melding van de voltooiing van de asynchrone bewerking ontvangt."
    - id: state
      type: System.Object
      description: "De statusgegevens van de gebruiker gedefinieerde."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>dat verwijst naar de asynchrone bewerking.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Wordt aangeroepen wanneer de statuscomputer een overgang naar de status afgebroken asynchroon met de opgegeven uitzondering, time-outwaarde, callback en gegevens van de gebruikersstatus."
  syntax:
    content: protected virtual IAsyncResult OnBeginAbandon (Exception exception, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: exception
      type: System.Exception
      description: "Een uitzondering met de reden voor de bewerking afbreken."
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor de bewerking afbreken is voltooid."
    - id: callback
      type: System.AsyncCallback
      description: "De gemachtigde asynchrone callback die de melding van de voltooiing van de asynchrone bewerking ontvangt."
    - id: state
      type: System.Object
      description: "De gegevens van de gebruiker gedefinieerde status."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>dat verwijst naar de asynchrone bewerking.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnBeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Wordt aangeroepen wanneer de statuscomputer een overgang naar de status voltooid asynchroon met de opgegeven time-out, callback en gegevens van de gebruikersstatus."
  syntax:
    content: protected abstract IAsyncResult OnBeginComplete (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor het voltooien van de bewerking te voltooien."
    - id: callback
      type: System.AsyncCallback
      description: "De gemachtigde asynchrone callback die de melding van de voltooiing van de asynchrone bewerking ontvangt."
    - id: state
      type: System.Object
      description: "De gegevens van de gebruiker gedefinieerde status."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>dat verwijst naar de asynchrone bewerking.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)
  id: OnComplete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnComplete(TimeSpan)
  nameWithType: ReceiveContext.OnComplete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnComplete(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Wordt aangeroepen wanneer de statuscomputer een overgang naar de status voltooid met de opgegeven time-outwaarde."
  syntax:
    content: protected abstract void OnComplete (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "De time-out voor het voltooien van de bewerking te voltooien."
  overload: System.ServiceModel.Channels.ReceiveContext.OnComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)
  id: OnEndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnEndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.OnEndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Wordt aangeroepen wanneer de statusmachine asynchroon naar de status afgebroken overstappen is."
  syntax:
    content: protected abstract void OnEndAbandon (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd door een aanroep naar een van de <xref:System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*>methoden.</xref:System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)
  id: OnEndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnEndComplete(IAsyncResult)
  nameWithType: ReceiveContext.OnEndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Wordt aangeroepen wanneer de statusmachine asynchroon naar de status voltooid overstappen is."
  syntax:
    content: protected abstract void OnEndComplete (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd door een aanroep naar de <xref:System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*></xref:System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnEndComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnFaulted
  id: OnFaulted
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnFaulted()
  nameWithType: ReceiveContext.OnFaulted()
  fullName: System.ServiceModel.Channels.ReceiveContext.OnFaulted()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Wordt aangeroepen wanneer de statuscomputer een overgang naar de mislukte status."
  syntax:
    content: protected virtual void OnFaulted ();
    parameters: []
  overload: System.ServiceModel.Channels.ReceiveContext.OnFaulted*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.State
  id: State
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: State
  nameWithType: ReceiveContext.State
  fullName: System.ServiceModel.Channels.ReceiveContext.State
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Opgehaald of ingesteld van de status van de statuscomputer."
  syntax:
    content: public System.ServiceModel.Channels.ReceiveContextState State { get; protected set; }
    return:
      type: System.ServiceModel.Channels.ReceiveContextState
      description: "De huidige status van de context van de statusmachine ontvangen."
  overload: System.ServiceModel.Channels.ReceiveContext.State*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.ThisLock
  id: ThisLock
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: ThisLock
  nameWithType: ReceiveContext.ThisLock
  fullName: System.ServiceModel.Channels.ReceiveContext.ThisLock
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Een object dat wordt gebruikt voor het vergrendelen van de <xref href=&quot;System.ServiceModel.Channels.ReceiveContext&quot;> </xref> exemplaar."
  syntax:
    content: protected object ThisLock { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>.</xref:System.Object>"
  overload: System.ServiceModel.Channels.ReceiveContext.ThisLock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  id: TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: TryGet(Message,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(Message,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(Message,ReceiveContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Probeert op te halen van de ontvangstcontext uit het opgegeven bericht."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Channels.ReceiveContext property);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Het bericht."
    - id: property
      type: System.ServiceModel.Channels.ReceiveContext
      description: "De ontvangstcontext."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de ontvangstcontext is opgehaald; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReceiveContext.TryGet*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  id: TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: TryGet(MessageProperties,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(MessageProperties,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(MessageProperties,ReceiveContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Probeert op te halen van de ontvangstcontext uit de verzameling van de eigenschappen opgegeven bericht."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Channels.ReceiveContext property);
    parameters:
    - id: properties
      type: System.ServiceModel.Channels.MessageProperties
      description: "De verzameling van de bericht-eigenschappen."
    - id: property
      type: System.ServiceModel.Channels.ReceiveContext
      description: "De ontvangstcontext."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de ontvangstcontext is opgehaald; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReceiveContext.TryGet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Channels.ReceiveContext.#ctor
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ReceiveContext()
  nameWithType: ReceiveContext.ReceiveContext()
  fullName: System.ServiceModel.Channels.ReceiveContext.ReceiveContext()
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Abandon(TimeSpan)
  nameWithType: ReceiveContext.Abandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Abandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.Abandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(Exception,TimeSpan)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Complete(TimeSpan)
  nameWithType: ReceiveContext.Complete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Complete(TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.EndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndAbandon(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndComplete(IAsyncResult)
  nameWithType: ReceiveContext.EndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndComplete(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.Fault
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Fault()
  nameWithType: ReceiveContext.Fault()
  fullName: System.ServiceModel.Channels.ReceiveContext.Fault()
- uid: System.ServiceModel.Channels.ReceiveContext.Faulted
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Faulted
  nameWithType: ReceiveContext.Faulted
  fullName: System.ServiceModel.Channels.ReceiveContext.Faulted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ServiceModel.Channels.ReceiveContext.Name
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Name
  nameWithType: ReceiveContext.Name
  fullName: System.ServiceModel.Channels.ReceiveContext.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnAbandon(TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnAbandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(Exception,TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnComplete(TimeSpan)
  nameWithType: ReceiveContext.OnComplete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnComplete(TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.OnEndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndComplete(IAsyncResult)
  nameWithType: ReceiveContext.OnEndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.OnFaulted
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnFaulted()
  nameWithType: ReceiveContext.OnFaulted()
  fullName: System.ServiceModel.Channels.ReceiveContext.OnFaulted()
- uid: System.ServiceModel.Channels.ReceiveContext.State
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: State
  nameWithType: ReceiveContext.State
  fullName: System.ServiceModel.Channels.ReceiveContext.State
- uid: System.ServiceModel.Channels.ReceiveContextState
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReceiveContextState
  nameWithType: ReceiveContextState
  fullName: System.ServiceModel.Channels.ReceiveContextState
- uid: System.ServiceModel.Channels.ReceiveContext.ThisLock
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ThisLock
  nameWithType: ReceiveContext.ThisLock
  fullName: System.ServiceModel.Channels.ReceiveContext.ThisLock
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: TryGet(Message,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(Message,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(Message,ReceiveContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.ReceiveContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReceiveContext
  nameWithType: ReceiveContext
  fullName: System.ServiceModel.Channels.ReceiveContext
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: TryGet(MessageProperties,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(MessageProperties,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(MessageProperties,ReceiveContext)
- uid: System.ServiceModel.Channels.MessageProperties
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: System.ServiceModel.Channels.MessageProperties
- uid: System.ServiceModel.Channels.ReceiveContext.#ctor*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ReceiveContext
  nameWithType: ReceiveContext.ReceiveContext
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Abandon
  nameWithType: ReceiveContext.Abandon
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginAbandon
  nameWithType: ReceiveContext.BeginAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.BeginComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginComplete
  nameWithType: ReceiveContext.BeginComplete
- uid: System.ServiceModel.Channels.ReceiveContext.Complete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Complete
  nameWithType: ReceiveContext.Complete
- uid: System.ServiceModel.Channels.ReceiveContext.EndAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndAbandon
  nameWithType: ReceiveContext.EndAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.EndComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndComplete
  nameWithType: ReceiveContext.EndComplete
- uid: System.ServiceModel.Channels.ReceiveContext.Fault*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Fault
  nameWithType: ReceiveContext.Fault
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnAbandon
  nameWithType: ReceiveContext.OnAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginAbandon
  nameWithType: ReceiveContext.OnBeginAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginComplete
  nameWithType: ReceiveContext.OnBeginComplete
- uid: System.ServiceModel.Channels.ReceiveContext.OnComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnComplete
  nameWithType: ReceiveContext.OnComplete
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndAbandon
  nameWithType: ReceiveContext.OnEndAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndComplete
  nameWithType: ReceiveContext.OnEndComplete
- uid: System.ServiceModel.Channels.ReceiveContext.OnFaulted*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnFaulted
  nameWithType: ReceiveContext.OnFaulted
- uid: System.ServiceModel.Channels.ReceiveContext.State*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: State
  nameWithType: ReceiveContext.State
- uid: System.ServiceModel.Channels.ReceiveContext.ThisLock*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ThisLock
  nameWithType: ReceiveContext.ThisLock
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: TryGet
  nameWithType: ReceiveContext.TryGet
