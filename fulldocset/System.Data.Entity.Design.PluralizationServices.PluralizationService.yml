### YamlMime:ManagedReference
items:
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService
  id: PluralizationService
  children:
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)
  langs:
  - csharp
  name: PluralizationService
  nameWithType: PluralizationService
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService
  type: Class
  summary: "Biedt methoden voor het maken van meervoud en enkelvoud vormen van woorden."
  remarks: "De klasse PluralizationService past Engelse regels voor het maken van meervoud en enkelvoud vormen van woorden. Als u wilt uitbreiden van de service voor andere talen, gebruiken de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>op de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>klasse.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public abstract class PluralizationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor
  id: '#ctor'
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: PluralizationService()
  nameWithType: PluralizationService.PluralizationService()
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.PluralizationService()
  type: Constructor
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> klasse."
  syntax:
    content: protected PluralizationService ();
    parameters: []
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)
  id: CreateService(System.Globalization.CultureInfo)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: CreateService(CultureInfo)
  nameWithType: PluralizationService.CreateService(CultureInfo)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(CultureInfo)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Maakt een <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> die van toepassing is taalregels die overeenkomen met de opgegeven <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
  remarks: "De <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>klasse past Engelse regels voor het maken van meervoud en enkelvoud vormen van woorden.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Als u wilt uitbreiden van de service voor andere talen, gebruiken de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>op de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>klasse.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public static System.Data.Entity.Design.PluralizationServices.PluralizationService CreateService (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "De <xref:System.Globalization.CultureInfo>die overeenkomt met de taalregels worden toegepast op enkelvoud en het meervoud vormen van woorden.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Data.Entity.Design.PluralizationServices.PluralizationService
      description: "Het zojuist gemaakte <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> object."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  id: Culture
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: Culture
  nameWithType: PluralizationService.Culture
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> cultuur."
  remarks: "De <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>klasse past Engelse regels voor het maken van meervoud en enkelvoud vormen van woorden.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Als u wilt uitbreiden van de service voor andere talen, gebruiken de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>op de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>klasse.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; protected set; }
    return:
      type: System.Globalization.CultureInfo
      description: "Een object dat aangeeft welke taal toe te passen voor singulars en meervouden regels."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)
  id: IsPlural(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: IsPlural(String)
  nameWithType: PluralizationService.IsPlural(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Hiermee wordt bepaald of het opgegeven woord meervoud."
  remarks: "De <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>klasse past Engelse regels voor het maken van meervoud en enkelvoud vormen van woorden.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Als u wilt uitbreiden van de service voor andere talen, gebruiken de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>op de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>klasse.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>       Zowel de <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A>en <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A>methoden kunnen terugkeren `true` voor hetzelfde woord.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> </xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> Bijvoorbeeld: beide methoden wordt geretourneerd `true` voor het woord &quot;vis&quot;."
  syntax:
    content: public abstract bool IsPlural (string word);
    parameters:
    - id: word
      type: System.String
      description: "De waarde moet worden geanalyseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het woord meervoud; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)
  id: IsSingular(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: IsSingular(String)
  nameWithType: PluralizationService.IsSingular(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Hiermee wordt bepaald of het opgegeven woord enkelvoud."
  remarks: "De <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>klasse past Engelse regels voor het maken van meervoud en enkelvoud vormen van woorden.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Als u wilt uitbreiden van de service voor andere talen, gebruiken de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>op de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>klasse.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>       Zowel de <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A>en <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A>methoden kunnen terugkeren `true` voor hetzelfde woord.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> </xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> Bijvoorbeeld: beide methoden wordt geretourneerd `true` voor het woord &quot;vis&quot;."
  syntax:
    content: public abstract bool IsSingular (string word);
    parameters:
    - id: word
      type: System.String
      description: "De waarde moet worden geanalyseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het woord enkelvoud; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)
  id: Pluralize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: Pluralize(String)
  nameWithType: PluralizationService.Pluralize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Retourneert de meervoud van het opgegeven woord"
  remarks: "De <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>klasse past Engelse regels voor het maken van meervoud en enkelvoud vormen van woorden.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Als u wilt uitbreiden van de service voor andere talen, gebruiken de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>op de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>klasse.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public abstract string Pluralize (string word);
    parameters:
    - id: word
      type: System.String
      description: "Het woord moet plaatsvinden meervoud."
    return:
      type: System.String
      description: "De meervoud van de invoerparameter."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)
  id: Singularize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: Singularize(String)
  nameWithType: PluralizationService.Singularize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Retourneert het enkelvoud van het opgegeven woord."
  remarks: "De <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>klasse past Engelse regels voor het maken van meervoud en enkelvoud vormen van woorden.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Als u wilt uitbreiden van de service voor andere talen, gebruiken de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>op de <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>klasse.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public abstract string Singularize (string word);
    parameters:
    - id: word
      type: System.String
      description: "Het woord moet plaatsvinden enkelvoud."
    return:
      type: System.String
      description: "De enige vorm van de invoerparameter."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: PluralizationService()
  nameWithType: PluralizationService.PluralizationService()
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.PluralizationService()
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: CreateService(CultureInfo)
  nameWithType: PluralizationService.CreateService(CultureInfo)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(CultureInfo)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService
  parent: System.Data.Entity.Design.PluralizationServices
  isExternal: false
  name: PluralizationService
  nameWithType: PluralizationService
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Culture
  nameWithType: PluralizationService.Culture
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsPlural(String)
  nameWithType: PluralizationService.IsPlural(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsSingular(String)
  nameWithType: PluralizationService.IsSingular(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(String)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Pluralize(String)
  nameWithType: PluralizationService.Pluralize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(String)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Singularize(String)
  nameWithType: PluralizationService.Singularize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(String)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: PluralizationService
  nameWithType: PluralizationService.PluralizationService
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: CreateService
  nameWithType: PluralizationService.CreateService
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Culture
  nameWithType: PluralizationService.Culture
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsPlural
  nameWithType: PluralizationService.IsPlural
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsSingular
  nameWithType: PluralizationService.IsSingular
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Pluralize
  nameWithType: PluralizationService.Pluralize
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Singularize
  nameWithType: PluralizationService.Singularize
