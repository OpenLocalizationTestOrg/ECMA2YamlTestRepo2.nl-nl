### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ICustomMarshaler
  id: ICustomMarshaler
  children:
  - System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)
  - System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)
  - System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
  - System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)
  - System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)
  langs:
  - csharp
  name: ICustomMarshaler
  nameWithType: ICustomMarshaler
  fullName: System.Runtime.InteropServices.ICustomMarshaler
  type: Interface
  summary: "Aangepaste wrappers biedt voor het verwerken van methode-aanroepen."
  remarks: "Een marshaller biedt een brug tussen de functionaliteit van de oude en nieuwe interfaces. Aangepaste marshaling biedt de volgende voordelen:-Hiermee kunt clienttoepassingen die zijn ontworpen voor gebruik met een oude interface ook werken met servers die een nieuwe interface implementeren.      -Kunnen clienttoepassingen die compatibel zijn met een nieuwe interface werken met servers die een oude-interface implementeren.       Als u een interface die verschillende Marshal gedrag introduceert of die het Component Object Model (COM) wordt weergegeven in een andere manier hebt, kunt u een aangepaste marshaller in plaats van de interop-marshaller ontwerpen. Met behulp van een aangepaste marshaller minimaliseert u het verschil tussen nieuwe onderdelen van .NET Framework en bestaande COM-onderdelen.       Stel bijvoorbeeld dat u een beheerde interface naam ontwikkelt `INew`. Wanneer deze interface wordt blootgesteld aan COM via een standaard COM callable wrapper (CCW), heeft dezelfde methoden als de beheerde-interface en gebruikt de Marshal regels die zijn ingebouwd in de interop-marshaller. Stel nu dat een bekende COM-interface aangeroepen `IOld` al bieden dezelfde functionaliteit als de `INew` interface. Een aangepaste marshaller ontwerpt, kunt u een niet-beheerde implementatie van bieden `IOld` die het aanroepen van de beheerde implementatie van gewoon delegeert de `INew` interface. Daarom worden de aangepaste marshaller fungeert als een brug tussen de interfaces beheerde en onbeheerde.      > [!NOTE] > Aangepaste marshallers zijn niet aangeroepen bij het aanroepen van beheerde code naar onbegeleide code op een interface verzending alleen-lezen.      ## Definieert de Marshal-Type voordat u een aangepaste marshaller kunt maken, moet u de beheerde en onbeheerde interfaces die zal worden gemarshald definiëren. Deze interfaces vervullen dezelfde functie vaak maar anders worden blootgesteld aan beheerde en onbeheerde objecten.       Een beheerde compiler produceert een beheerde-interface van metagegevens en de resulterende interface ziet eruit als een beheerde interface. Het volgende voorbeeld toont een typische interface.       [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#1](~/add/codesnippet/cpp/t-system.runtime.interop_8_1.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#1](~/add/codesnippet/csharp/t-system.runtime.interop_8_1.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#1](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_1.vb) ] u definieert het type zonder begeleiding in Interface Definition Language (IDL) en met de compiler Interface Definition Language (MIDL) worden gecompileerd.     U definieert de interface binnen een instructie bibliotheek en deze de interface-ID met het kenmerk universal UUID (unique identifier) toewijzen als het volgende voorbeeld laat zien.      ```    [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library OldLib {        [uuid(9B2BAADD-0705-11D3-A0CD-00C04FA35826)]        interface IOld : IUnknown            HRESULT OldMethod();   }   ```De compiler MIDL produceert verschillende uitvoerbestanden. Als de interface is gedefinieerd in Old.idl, het uitvoerbestand Old_i.c definieert een `const` variabele met de interface-id (IID) van de interface, zoals in het volgende voorbeeld laat zien.      ```   const IID IID_IOld = {0x9B2BAADD,0x0705,0x11D3,{0xA0,0xCD,0x00,0xC0,0x4F,0xA3,0x58,0x26}};   ```Het bestand Old.h wordt ook geproduceerd door MIDL. Het bevat een C++-definitie van de interface die kan worden opgenomen in de broncode C++.      ## Implementeert de ICustomMarshaler-Interface uw aangepaste marshaller, moet de ICustomMarshaler-interface om de juiste wrappers de runtime implementeren.       De volgende C#-code weergegeven de base interface die moet worden geïmplementeerd door alle aangepaste marshallers.       [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#2](~/add/codesnippet/cpp/t-system.runtime.interop_8_2.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#2](~/add/codesnippet/csharp/t-system.runtime.interop_8_2.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#2](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_2.vb) ] de ICustomMarshaler-interface bevat methoden voor het bieden van ondersteuning, opschonen ondersteuning en informatie over de gegevens worden gemarshald.          | Type bewerking | De methode ICustomMarshaler | Beschrijving |   |-----------------------|-----------------------------|-----------------|   | Conversie (van systeemeigen naar begeleide code) | <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>| Een verwijzing naar de oorspronkelijke gegevens in een begeleid object gemarshald.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> Deze methode retourneert een aangepaste runtime callable wrapper (RCW) die de niet-beheerde interface die is doorgegeven als een argument kan marshallen. De marshaller als resultaat moet een exemplaar van de aangepaste RCW voor dat type. |   | Conversie (van beheerde naar systeemeigen code) | <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>| Een beheerd object in een verwijzing naar de oorspronkelijke gegevens gemarshald.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> Deze methode retourneert een aangepaste COM callable wrapper (CCW) die is doorgegeven als een argument van de beheerde interface kan het marshallen. De marshaller als resultaat moet een exemplaar van de aangepaste CCW voor dat type. |   | Opschonen (van systeemeigen code) | <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A>| Hiermee kunt u de marshaller opschonen van de oorspronkelijke gegevens (CCW) die wordt geretourneerd door de methode <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>. |   | Opschonen (van beheerde code) | <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A>| Hiermee kunt u de marshaller opschonen van de beheerde gegevens (de RCW) die wordt geretourneerd door de methode <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>. |   | Informatie (over systeemeigen code) | <xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A>| Retourneert de grootte van de niet-beheerde gegevens moeten worden verzonden. |      ### Conversie <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=fullName>gemarshald van een verwijzing naar de oorspronkelijke gegevens in een begeleid object.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=fullName> </xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A> Deze methode retourneert een aangepaste runtime callable wrapper (RCW) die de niet-beheerde interface die is doorgegeven als een argument kan marshallen. De marshaller moet een exemplaar van de aangepaste RCW voor dat type worden geretourneerd.       <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=fullName>Een beheerd object in een verwijzing naar de oorspronkelijke gegevens gemarshald.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=fullName> Deze methode retourneert een aangepaste COM callable wrapper (CCW) die is doorgegeven als een argument van de beheerde interface kan het marshallen. De marshaller moet een exemplaar van de aangepaste CCW voor dat type worden geretourneerd.      ### Opruimen <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=fullName>kunnen de marshaller opschonen van de oorspronkelijke gegevens (CCW) die wordt geretourneerd door de <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>methode.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=fullName>       <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=fullName>Hiermee kunt u de marshaller opschonen van de beheerde gegevens (de RCW) die wordt geretourneerd door de <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>methode.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A></xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=fullName>      ### Het formaat van informatie <xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=fullName>retourneert de grootte van de niet-beheerde gegevens moeten worden gemarshald.</xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=fullName>      ## De methode GetInstance naast het implementeren van de ICustomMarshaler-interface implementeert, aangepaste marshallers moeten implementeren een `static` aangeroepen methode `GetInstance` die accepteert een <xref:System.String>als een parameter en heeft een retourtype van ICustomMarshaler.</xref:System.String> Dit `static` methode wordt aangeroepen door de common language runtime van COM-interop laag instantiëren van een exemplaar van de aangepaste marshaller. De tekenreeks die wordt doorgegeven aan `GetInstance` is een cookie die de methode voor het aanpassen van de geretourneerde aangepaste marshaller kunt gebruiken.      ```   static ICustomMarshaler *GetInstance(String *pstrCookie);   ```## Een aangepaste marshaller toepassen MarshalAsAttribute te gebruiken, moet u de <xref:System.Runtime.InteropServices.MarshalAsAttribute>kenmerk met de parameter of een veld dat is worden gemarshald.</xref:System.Runtime.InteropServices.MarshalAsAttribute>       U moet ook doorgeven de <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>opsommingswaarde naar de <xref:System.Runtime.InteropServices.MarshalAsAttribute>constructor.</xref:System.Runtime.InteropServices.MarshalAsAttribute> </xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> Bovendien moet u de <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>veld met een van de volgende benoemde parameters:- <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>(vereist): de assembly gekwalificeerde naam van de aangepaste marshaller.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> </xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> De naam moet de naamruimte en klassenaam van de aangepaste marshaller bevatten. Als de aangepaste marshaller is niet gedefinieerd in de assembly die wordt gebruikt in, moet u de naam van de assembly waarin deze is gedefinieerd.          > [!NOTE] > Kunt u de <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>veld in plaats van de <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>veld.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> </xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>heeft een type dat is het eenvoudiger om op te geven.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>      - <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie>(optioneel): een cookie die wordt doorgegeven aan de aangepaste marshaller.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie> U kunt de cookie gebruiken om de marshaller aanvullende informatie te geven. Als de dezelfde marshaller wordt gebruikt om een aantal wrappers, identificeert de cookie een specifieke wrapper. De cookie wordt doorgegeven aan de `GetInstance` methode van de marshaller.       De <xref:System.Runtime.InteropServices.MarshalAsAttribute>kenmerk identificeert de aangepaste marshaller, zodat de juiste wrapper kunnen worden geactiveerd.</xref:System.Runtime.InteropServices.MarshalAsAttribute> De common language runtime van interop-service wordt vervolgens het kenmerk moet worden gecontroleerd en de aangepaste marshaller de eerste keer maakt de argument (parameter of veld) moet worden gemarshald.       De runtime roept vervolgens de <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>en <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>methoden voor de aangepaste marshaller voor het activeren van de juiste wrapper voor het afhandelen van de aanroep.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>      ## Gebruik een aangepaste marshaller wanneer de aangepaste marshaller is voltooid, kunt u deze als aangepaste wrapper voor een bepaald type. Het volgende voorbeeld toont de definitie van de `IUserData` beheerde-interface: [!code-cpp [System.Runtime.InteropServices.ICustomMarshaler#3](~/add/codesnippet/cpp/t-system.runtime.interop_8_3.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#3](~/add/codesnippet/csharp/t-system.runtime.interop_8_3.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#3](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_3.vb) ] In het volgende voorbeeld wordt de `IUserData` interface gebruikt de `NewOldMarshaler` aangepaste marshaller voor niet-beheerde client-toepassingen om door te geven een `IOld` in de interface de `DoSomeStuff` methode.     De beheerde beschrijving van de `DoSomeStuff` methode duurt een `INew` interface, zoals wordt weergegeven in het vorige voorbeeld, dat de niet-beheerde versie van `DoSomeStuff` duurt een `IOld` -interface-aanwijzer, zoals wordt weergegeven in het volgende voorbeeld.      ```   [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library UserLib {        [uuid(9B2BABCD-0705-11D3-A0CD-00C04FA35826)]        interface IUserData : IUnknown            HRESULT DoSomeStuff(IUnknown* pIOld);   }   ```De typebibliotheek die wordt gegenereerd door de begeleide definitie van exporteren `IUserData` resulteert in de definitie van de niet-beheerde weergegeven in dit voorbeeld in plaats van de standaarddefinitie. De <xref:System.Runtime.InteropServices.MarshalAsAttribute>kenmerk toegepast op de `INew` argument in de begeleide definitie van de `DoSomeStuff` methode geeft aan dat het argument een aangepaste marshaller als het volgende voorbeeld wordt getoond gebruikt.</xref:System.Runtime.InteropServices.MarshalAsAttribute>       [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#4](~/add/codesnippet/cpp/t-system.runtime.interop_8_4.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#4](~/add/codesnippet/csharp/t-system.runtime.interop_8_4.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#4](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_4.vb)][!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#5](~/add/codesnippet/cpp/t-system.runtime.interop_8_5.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#5](~/add/codesnippet/csharp/t-system.runtime.interop_8_5.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#5](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_5.vb) ] In de voorgaande voorbeelden worden de eerste parameter opgegeven voor de <xref:System.Runtime.InteropServices.MarshalAsAttribute>kenmerk is de <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>opsommingswaarde `UnmanagedType.CustomMarshaler`.</xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> </xref:System.Runtime.InteropServices.MarshalAsAttribute>                      De tweede parameter is de <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>veld, waardoor de assembly gekwalificeerde naam van de aangepaste marshaller.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> Deze naam bestaat uit de naamruimte en klassenaam van de aangepaste marshaller (`MarshalType=&quot;MyCompany.NewOldMarshaler&quot;`)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ICustomMarshaler
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)
  id: CleanUpManagedData(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: CleanUpManagedData(Object)
  nameWithType: ICustomMarshaler.CleanUpManagedData(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Voert de voltooiing van de beheerde gegevens wanneer deze niet langer nodig is."
  syntax:
    content: public void CleanUpManagedData (object ManagedObj);
    parameters:
    - id: ManagedObj
      type: System.Object
      description: "Het beheerde object worden vernietigd."
  overload: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)
  id: CleanUpNativeData(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: CleanUpNativeData(IntPtr)
  nameWithType: ICustomMarshaler.CleanUpNativeData(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Voert de voltooiing van de niet-beheerde gegevens wanneer deze niet langer nodig is."
  syntax:
    content: public void CleanUpNativeData (IntPtr pNativeData);
    parameters:
    - id: pNativeData
      type: System.IntPtr
      description: "Een verwijzing naar de niet-beheerde gegevens worden vernietigd."
  overload: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
  id: GetNativeDataSize
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: GetNativeDataSize()
  nameWithType: ICustomMarshaler.GetNativeDataSize()
  fullName: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Retourneert de grootte van de oorspronkelijke gegevens worden gemarshald."
  syntax:
    content: public int GetNativeDataSize ();
    parameters: []
    return:
      type: System.Int32
      description: "De grootte in bytes van de oorspronkelijke gegevens."
  overload: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)
  id: MarshalManagedToNative(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: MarshalManagedToNative(Object)
  nameWithType: ICustomMarshaler.MarshalManagedToNative(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Converteert de beheerde gegevens naar niet-beheerde gegevens."
  syntax:
    content: public IntPtr MarshalManagedToNative (object ManagedObj);
    parameters:
    - id: ManagedObj
      type: System.Object
      description: "Het beheerde object moet worden geconverteerd."
    return:
      type: System.IntPtr
      description: "Een verwijzing naar de COM-weergave van het beheerde object."
  overload: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)
  id: MarshalNativeToManaged(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: MarshalNativeToManaged(IntPtr)
  nameWithType: ICustomMarshaler.MarshalNativeToManaged(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Converteert de niet-beheerde gegevens op beheerde gegevens."
  syntax:
    content: public object MarshalNativeToManaged (IntPtr pNativeData);
    parameters:
    - id: pNativeData
      type: System.IntPtr
      description: "Een verwijzing naar de niet-beheerde gegevens moeten worden ingepakt."
    return:
      type: System.Object
      description: "Een object dat de beheerde weergave van de COM-gegevens vertegenwoordigt."
  overload: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpManagedData(Object)
  nameWithType: ICustomMarshaler.CleanUpManagedData(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpNativeData(IntPtr)
  nameWithType: ICustomMarshaler.CleanUpNativeData(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: GetNativeDataSize()
  nameWithType: ICustomMarshaler.GetNativeDataSize()
  fullName: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalManagedToNative(Object)
  nameWithType: ICustomMarshaler.MarshalManagedToNative(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(Object)
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalNativeToManaged(IntPtr)
  nameWithType: ICustomMarshaler.MarshalNativeToManaged(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(IntPtr)
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpManagedData
  nameWithType: ICustomMarshaler.CleanUpManagedData
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpNativeData
  nameWithType: ICustomMarshaler.CleanUpNativeData
- uid: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: GetNativeDataSize
  nameWithType: ICustomMarshaler.GetNativeDataSize
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalManagedToNative
  nameWithType: ICustomMarshaler.MarshalManagedToNative
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalNativeToManaged
  nameWithType: ICustomMarshaler.MarshalNativeToManaged
