### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.HttpSessionState
  id: HttpSessionState
  children:
  - System.Web.SessionState.HttpSessionState.Abandon
  - System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.HttpSessionState.Clear
  - System.Web.SessionState.HttpSessionState.CodePage
  - System.Web.SessionState.HttpSessionState.Contents
  - System.Web.SessionState.HttpSessionState.CookieMode
  - System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.HttpSessionState.Count
  - System.Web.SessionState.HttpSessionState.GetEnumerator
  - System.Web.SessionState.HttpSessionState.IsCookieless
  - System.Web.SessionState.HttpSessionState.IsNewSession
  - System.Web.SessionState.HttpSessionState.IsReadOnly
  - System.Web.SessionState.HttpSessionState.IsSynchronized
  - System.Web.SessionState.HttpSessionState.Item(System.Int32)
  - System.Web.SessionState.HttpSessionState.Item(System.String)
  - System.Web.SessionState.HttpSessionState.Keys
  - System.Web.SessionState.HttpSessionState.LCID
  - System.Web.SessionState.HttpSessionState.Mode
  - System.Web.SessionState.HttpSessionState.Remove(System.String)
  - System.Web.SessionState.HttpSessionState.RemoveAll
  - System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.HttpSessionState.SessionID
  - System.Web.SessionState.HttpSessionState.StaticObjects
  - System.Web.SessionState.HttpSessionState.SyncRoot
  - System.Web.SessionState.HttpSessionState.Timeout
  langs:
  - csharp
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
  type: Class
  summary: "Biedt toegang tot de sessiestatus waarden, evenals niveau van de sessie-instellingen en levensduur beheermethoden."
  remarks: "ASP.NET biedt sessiestatus management zodat u gegevens die zijn gekoppeld aan een unieke browsersessie voor meerdere aanvragen op te slaan. U kunt een verzameling waarden waarnaar wordt verwezen door de naam van een sleutel of door een numerieke index kunt opslaan. Toegang tot de sessiewaarden en functionaliteit is beschikbaar via de HttpSessionState-klasse, die toegankelijk via is de <xref:System.Web.HttpContext.Session%2A>eigenschap van het huidige <xref:System.Web.HttpContext>, of de <xref:System.Web.UI.Page.Session%2A>eigenschap van het <xref:System.Web.UI.Page>.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Session%2A> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Session%2A>       Sessiegegevens is gekoppeld aan een specifieke browsersessie met behulp van een unieke id. Deze id wordt standaard opgeslagen in een niet-verlopende sessiecookie in de browser, maar u kunt ook uw toepassing voor het opslaan van de sessie-id in de URL door in te stellen de `cookieless` kenmerk `true` of <xref:System.Web.HttpCookieMode>in het element van de configuratie van uw toepassing.</xref:System.Web.HttpCookieMode> U kunt bepalen of cookies worden ondersteund door de browser door een waarde van ASP.NET hebben <xref:System.Web.HttpCookieMode>voor de `cookieless` kenmerk.</xref:System.Web.HttpCookieMode> U kunt ook laten ASP.NET of cookies zijn ingeschakeld voor de browser door een waarde van <xref:System.Web.HttpCookieMode>voor de `cookieless` kenmerk.</xref:System.Web.HttpCookieMode> Als u cookies worden ondersteund wanneer <xref:System.Web.HttpCookieMode>is opgegeven of ingeschakeld wanneer <xref:System.Web.HttpCookieMode>is opgegeven, wordt de sessie-id wordt opgeslagen in een cookie, anders zijn de sessie-id wordt opgeslagen in de URL.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode>       Sessies worden gestart tijdens de eerste aanvraag en sessiewaarden wordt blijven behouden zolang een nieuwe aanvraag wordt gedaan door de browser voordat u het aantal minuten dat is opgegeven in de <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>eigenschap nageleefd.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Wanneer een nieuwe sessie begint, wordt de sessie <xref:System.Web.SessionState.SessionStateModule.Start>gebeurtenis is opgetreden.</xref:System.Web.SessionState.SessionStateModule.Start> U kunt deze gebeurtenis om uit te voeren van extra werk aan het begin van een sessie, zoals standaard sessiewaarden instellen. Wanneer een sessietime-out optreedt, de <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>methode wordt aangeroepen, of de ASP.NET-toepassing wordt afgesloten, de sessie <xref:System.Web.SessionState.SessionStateModule.End>gebeurtenis is opgetreden.</xref:System.Web.SessionState.SessionStateModule.End> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Deze gebeurtenis kunt u alle benodigde opgeruimd. De <xref:System.Web.SessionState.SessionStateModule.End>gebeurtenis treedt op alleen wanneer de sessiestatus `mode` is ingesteld op <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateModule.End>       Om prestaties te verbeteren, sessies die gebruikmaken van cookies niet toewijst sessie opslag totdat gegevens daadwerkelijk worden opgeslagen in de <xref:System.Web.UI.Page.Session%2A>object.</xref:System.Web.UI.Page.Session%2A> Zie voor meer informatie de <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>eigenschap.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       Sessiestatus niet bewaard is gebleven buiten de grenzen van de ASP.NET-toepassing. Als u een browser navigeren naar een andere toepassing, is de sessie-informatie niet beschikbaar is voor de nieuwe toepassing.       Sessiewaarden zijn standaard opgeslagen in het geheugen op de webserver. U kunt ook sessiewaarden opslaan in een SQL Server-database, een statusserver ASP.NET of een aangepaste server. Hiermee kunt u behouden blijven sessiewaarden in gevallen waarin het proces voor ASP.NET of IIS of de ASP.NET-toepassing opnieuw wordt gestart en dat de sessiewaarden beschikbaar maken op alle servers in een webfarm. Dit gedrag is geconfigureerd door in te stellen de `mode` kenmerk aan een geldige <xref:System.Web.SessionState.SessionStateMode>waarde in het element van de configuratie van uw toepassing.</xref:System.Web.SessionState.SessionStateMode> Zie voor meer informatie [sessiestatus modi](~/add/includes/ajax-current-ext-md.md).       Alternatieven voor sessiestatus toepassingsstatus opnemen (Zie de eigenschap <xref:System.Web.HttpApplication.Application%2A>) en de ASP.NET-cache (Zie de naamruimte <xref:System.Web.Caching>), die bij het opslaan van variabelen die toegankelijk zijn voor alle gebruikers van een ASP.NET-toepassing; het ASP.NET-profiel (Zie de naamruimte <xref:System.Web.Profile>), die de waarden van de gebruikersnaam in een gegevensarchief zich blijft voordoen zonder verloopt deze met een time-out; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=fullName>, die overblijven control-waarden in de <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; de <xref:System.Web.HttpRequest.QueryString%2A>eigenschap; en de velden op een HTML-formulier die beschikbaar zijn via een HTTP `POST` met behulp van de <xref:System.Web.HttpRequest.Form%2A>verzameling.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.WebControls?displayProperty=fullName> </xref:System.Web.Profile> </xref:System.Web.Caching> </xref:System.Web.HttpApplication.Application%2A> Zie voor meer informatie over de verschillen tussen de sessiestatus en andere alternatieven statusbeheer [ASP.NET status Management aanbevelingen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example sets and retrieves values from session state.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#30](~/add/codesnippet/csharp/t-system.web.sessionstat_5_1.aspx)]\n [!code-vb[HttpSessionState#30](~/add/codesnippet/visualbasic/t-system.web.sessionstat_5_1.aspx)]"
  syntax:
    content: 'public sealed class HttpSessionState : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee annuleert u de huidige sessie."
  remarks: "Zodra de afbreken-methode wordt aangeroepen, wordt de huidige sessie is niet meer geldig en wordt een nieuwe sessie kan worden gestart. Afbreken oorzaken de <xref:System.Web.SessionState.SessionStateModule.End>gebeurtenis wordt gegenereerd.</xref:System.Web.SessionState.SessionStateModule.End> Een nieuwe <xref:System.Web.SessionState.SessionStateModule.Start>gebeurtenis wordt op de volgende aanvraag wordt gegenereerd.</xref:System.Web.SessionState.SessionStateModule.Start>       Sessie-id&quot;s voor afgebroken of verlopen sessies worden gerecycled standaard. Dat wil zeggen, als een aanvraag wordt gedaan met de sessie-id voor een verlopen of afgebroken sessie, is een nieuwe sessie gestart met de dezelfde sessie-id. U kunt dit uitschakelen door in te stellen `regenerateExpiredSessionId` kenmerk van het configuratie-element moet `true`. Zie voor meer informatie [sessie-id&quot;s](~/add/includes/ajax-current-ext-md.md).       De <xref:System.Web.SessionState.SessionStateModule.End>gebeurtenis wordt ondersteund alleen wanneer de <xref:System.Web.SessionState.HttpSessionState.Mode%2A>eigenschap is ingesteld op <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> </xref:System.Web.SessionState.SessionStateModule.End>"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Een nieuw item toevoegt aan de verzameling van de sessiestatus."
  remarks: "Als de `name` parameter verwijst naar een bestaand item voor sessie-status, het bestaande item wordt overschreven met de opgegeven `value`."
  example:
  - "The following example shows how to store values in session state by using the Add method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_16_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_16_1.aspx)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het item toevoegen aan de verzameling van de sessiestatus."
    - id: value
      type: System.Object
      description: "De waarde van het item toevoegen aan de verzameling van de sessiestatus."
  overload: System.Web.SessionState.HttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee verwijdert u alle sleutels en waarden uit de sessiestatus verzameling."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Opgehaald of ingesteld van de tekenset id voor de huidige sessie."
  remarks: "Een tekenset (codetabel) wordt gebruikt om te interpreteren multibyte-gegevens, bepalen de tekenwaarde, en daarom sorteervolgorde. Codetabel instellingen gelden alleen voor multibyte-gegevens niet naar Unicode-tekengegevens.       Dit <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A>eigenschap wordt aangeboden voor compatibiliteit met eerdere versies van ASP alleen.</xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> Als u niet nodig hebt voor neerwaartse compatibiliteit met ASP-pagina&quot;s, gebruiken de <xref:System.Web.HttpResponse.ContentEncoding%2A>eigenschap in plaats daarvan.</xref:System.Web.HttpResponse.ContentEncoding%2A>"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "De tekenset id voor de huidige sessie."
  overload: System.Web.SessionState.HttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Contents
  id: Contents
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee haalt u een verwijzing naar de huidige status van de sessie-object."
  remarks: "De eigenschap inhoud is beschikbaar voor compatibiliteit met eerdere versies van ASP."
  example:
  - "The following code example lists the item names and values in the Contents property.  \n  \n [!code-cs[HttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_8_1.aspx)]\n [!code-vb[HttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_8_1.aspx)]"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Contents { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "De huidige <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.Contents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Haalt een waarde die aangeeft of de toepassing is geconfigureerd voor sessies zonder cookies."
  remarks: "Wanneer <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>is `true`, de eigenschap CookieMode retourneert <xref:System.Web.HttpCookieMode>; anders is de eigenschap CookieMode <xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> resultaat</xref:System.Web.HttpCookieMode> </xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to `true` in the Web.config file. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Een van de <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> waarden die aangeven of de toepassing is geconfigureerd voor sessies zonder cookies. De standaardwaarde is <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "De verzameling van waarden van de sessiestatus kopieert naar een eendimensionale matrix, beginnend bij de opgegeven index in de matrix."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "De <xref:System.Array>ontvangt dat de sessiewaarden.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index in `array` van welke kopiëren wordt gestart."
  overload: System.Web.SessionState.HttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee haalt het aantal items in de verzameling van de sessiestatus."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal items in de verzameling."
  overload: System.Web.SessionState.HttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Retourneert een enumerator die kan worden gebruikt om te lezen van alle sessiestatus namen van variabelen in de huidige sessie."
  remarks: ''
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The GetEnumerator method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_14_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_14_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een <xref:System.Collections.IEnumerator>die de namen van variabelen in de verzameling sessiestatus kunt doorlopen.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.HttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee wordt een waarde die aangeeft of de sessie-ID is ingesloten in de URL of in een HTTP-cookie opgeslagen."
  remarks: "ASP.NET wordt sessies uniek geïdentificeerd met elke browser. De unieke id voor een sessie wordt standaard opgeslagen in een niet-verlopende sessiecookie in de browser. U kunt opgeven dat sessie-id&quot;s niet worden opgeslagen in een cookie door in te stellen de `cookieless` kenmerk `true` in het configuratie-element.      > [!NOTE] > Ter verbetering van de beveiliging van uw toepassing, uw toepassing moet toestaan dat gebruikers zich afmeldt, waarna deze moet aanroepen de <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>methode.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Dit vermindert de kans dat een ongewenste bron met de unieke id in de URL voor het ophalen van persoonlijke gegevens die zijn opgeslagen in de sessie voor een gebruiker.       ASP.NET onderhoudt cookieless sessiestatus door het automatisch invoegen van een unieke sessie-ID in URL van de pagina. Bijvoorbeeld de volgende URL is gewijzigd door ASP.NET moet bevatten de unieke sessie-ID lit3py55t21z5v55vlm25s55: ```   http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx   ``` ASP.NET koppelingen in alle aangevraagde pagina&quot;s door het insluiten van een sessie-ID-waarde in de koppelingen net vóór het verzenden van elke pagina naar de browser wordt gewijzigd. De sessiestatus behouden zolang de gebruiker via het pad van de koppelingen die de site biedt. Echter, als de gebruikersagent een URL herschrijft, het exemplaar van de sessiestatus niet verloren.       De sessie-ID is ingesloten in de URL na de slash die volgt op de naam van de toepassing en voor eventuele resterende bestand of de virtuele map-id. Hierdoor kan ASP.NET de toepassingsnaam oplossen voordat u met betrekking tot de <xref:System.Web.SessionState.SessionStateModule>in de aanvraag.</xref:System.Web.SessionState.SessionStateModule>       Sessie-id&quot;s die zijn gebruikt in sessies zonder cookies zijn standaard gerecycled. Dat wil zeggen, als een aanvraag wordt gedaan met een sessie-ID die is verlopen, is een nieuwe sessie gestart met behulp van de sessie-ID die is meegeleverd met de aanvraag. Dit gedrag kan leiden tot het ongewenste delen van sessiegegevens wanneer een koppeling met een cookieless sessie-ID worden gedeeld met meerdere browsers mogelijk via een zoekmachine of een ander programma. U kunt de mogelijkheid van sessiegegevens gedeeld door meerdere clients door het uitschakelen van het recyclen van sessie-id&quot;s verminderen. Stel hiervoor de `regenerateExpiredSessionId` kenmerk van het configuratie-element moet `true`. Dit leidt tot een nieuwe sessie-ID die wordt gegenereerd wanneer een sessie cookieless-aanvraag wordt gedaan met een verlopen sessie-ID. Houd er rekening mee dat als de aanvraag gemaakt met de verlopen sessie-ID maakt gebruik van de HTTP `POST` methode en vervolgens een geposte gegevens gaan verloren wanneer `regenerateExpiredSessionId` is `true`, zoals ASP.NET een omleiding voert om ervoor te zorgen dat de browser de nieuwe sessie-id in de URL heeft.      > [!NOTE] > Instelling terwijl de `regenerateExpiredSessionId` kenmerk `true` verkleint de kans van ongewenste delen van sessiegegevens, deze biedt geen bescherming tegen een ongewenste bron toegang krijgen tot de sessie van een andere gebruiker op te halen de <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>waarde en op te nemen in hun aanvragen aan de server.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Als u persoonlijke of gevoelige gegevens in de sessiestatus opslaat, wordt aanbevolen dat u SSL gebruikt om alle communicatie tussen de browser en de server met de <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> te versleutelen"
  example:
  - "The following code example sets the `cookieless` session attribute to true in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sessie is ingesloten in de URL; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Haalt een waarde die aangeeft of de sessie is gemaakt met de huidige aanvraag."
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sessie is gemaakt met de huidige aanvraag; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee wordt een waarde die aangeeft of de sessie alleen-lezen is."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sessie alleen-lezen is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Haalt een waarde die aangeeft of de toegang tot het verzamelen van waarden van de sessiestatus wordt gesynchroniseerd (thread-veilig)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u toegang tot de verzameling is gesynchroniseerd (thread-safe); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Opgehaald of ingesteld van een sessiewaarde door een numerieke index."
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "De numerieke index van de sessiewaarde."
    return:
      type: System.Object
      description: "De waarde van de sessiestatus opgeslagen bij de opgegeven index of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het item niet bestaat."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Opgehaald of ingesteld van de sessiewaarde van een met de naam."
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "De sleutelnaam van de sessiewaarde."
    return:
      type: System.Object
      description: "De waarde van de sessiestatus met de opgegeven naam of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het item niet bestaat."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee haalt u een verzameling van de sleutels voor alle waarden in de verzameling van de sessiestatus wordt opgeslagen."
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "De <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>die de sessiesleutels bevat.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.HttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Opgehaald of ingesteld van de landinstellingen-id (LCID) van de huidige sessie."
  remarks: "De eigenschap LCID is beschikbaar voor compatibiliteit met eerdere versies van ASP alleen. Als u niet nodig hebt voor neerwaartse compatibiliteit met ASP-pagina&quot;s, gebruiken de <xref:System.Globalization.CultureInfo.LCID%2A>eigenschap in plaats daarvan.</xref:System.Globalization.CultureInfo.LCID%2A>       ASP.NET opslaat de landinstellings-id niet in de sessiestatus. De eigenschap LCID opent de <xref:System.Globalization.CultureInfo.LCID%2A>eigenschap ophalen en de id instellen.</xref:System.Globalization.CultureInfo.LCID%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "Een <xref:System.Globalization.CultureInfo>exemplaar waarin de cultuur van de huidige sessie.</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.HttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee haalt u de huidige status van de sessie-modus."
  remarks: "Voor informatie over het configureren van uw server voor <xref:System.Web.SessionState.SessionStateMode>of <xref:System.Web.SessionState.SessionStateMode>sessiestatusopslag, Zie [overzicht van ASP.NET-sessiestatus](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode>"
  example:
  - "The following code example sets the `mode` session attribute to <xref:System.Web.SessionState.SessionStateMode> in the Web.config file. For SQL Server session mode, the `sqlConnectionString` attribute is also required.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"SQLServer\"  \n      sqlConnectionString=\"Data Source=localhost;Integrated Security=SSPI\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "Een van de <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> waarden."
  overload: System.Web.SessionState.HttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee verwijdert een item uit de sessiestatus verzameling."
  remarks: "Als de sessiestatus verzameling bevat geen element met de opgegeven `name`, de verzameling blijft ongewijzigd. Er is geen uitzondering is opgetreden."
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the Remove method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_6_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_6_1.aspx)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van het item te verwijderen uit de sessiestatus verzameling."
  overload: System.Web.SessionState.HttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee verwijdert u alle sleutels en waarden uit de sessiestatus verzameling."
  remarks: "RemoveAll voert dezelfde functie uit als <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.</xref:System.Web.SessionState.HttpSessionState.Clear%2A>"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee verwijdert een item op een opgegeven index van de sessiestatus verzameling."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De index van het item te verwijderen uit de sessiestatus verzameling."
  overload: System.Web.SessionState.HttpSessionState.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref:System.Web.SessionState.HttpSessionState.Count*>."
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee wordt de unieke id voor de sessie."
  remarks: "De eigenschap SessionID wordt gebruikt als unieke identificatie van een browser met sessiegegevens op de server. De sessie-id-waarde is willekeurig gegenereerd door ASP.NET en opgeslagen in een niet-verlopende sessiecookie in de browser. De sessie-id-waarde wordt verzonden in een cookie bij elke aanvraag naar de ASP.NET-toepassing.       Als u wilt het gebruik van cookies in uw ASP.NET-toepassing uitschakelen en nog steeds maken gebruik van de sessiestatus, kunt u uw toepassing voor het opslaan van de sessie-id in de URL in plaats van een cookie door in te stellen de `cookieless` kenmerk van het configuratie-element moet `true`, of <xref:System.Web.HttpCookieMode>, in het bestand Web.config voor uw toepassing.</xref:System.Web.HttpCookieMode> U kunt bepalen of cookies worden ondersteund door de browser door een waarde van ASP.NET hebben <xref:System.Web.HttpCookieMode>voor de `cookieless` kenmerk.</xref:System.Web.HttpCookieMode> U kunt ook laten ASP.NET of cookies zijn ingeschakeld voor de browser door een waarde van <xref:System.Web.HttpCookieMode>voor de `cookieless` kenmerk.</xref:System.Web.HttpCookieMode> Als u cookies worden ondersteund wanneer <xref:System.Web.HttpCookieMode>is opgegeven of ingeschakeld wanneer <xref:System.Web.HttpCookieMode>is opgegeven, wordt de sessie-id wordt opgeslagen in een cookie, anders zijn de sessie-id wordt opgeslagen in de URL.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> Zie voor meer informatie de <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>eigenschap.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>       De sessie-id wordt verzonden tussen de server en de browser in ongecodeerde tekst, in een cookie of in de URL. Hierdoor kan een ongewenste bron toegang tot de sessie van een andere gebruiker door de waarde van de sessie-id verkrijgen en dit op te nemen in hun aanvragen aan de server. Als u persoonlijke of gevoelige gegevens in de sessiestatus opslaat, is het raadzaam dat u SSL gebruikt om alle communicatie tussen de browser en de server met de sessie-id te versleutelen.       Bij gebruik van cookies gebaseerde sessiestatus ASP.NET geen opslag toewijzen voor sessiegegevens totdat de <xref:System.Web.UI.Page.Session%2A>object wordt gebruikt.</xref:System.Web.UI.Page.Session%2A> Hierdoor wordt een nieuwe sessie-ID gegenereerd voor elke pagina-aanvraag totdat het sessieobject wordt geopend. Als uw toepassing een statische sessie-ID voor de hele sessie vereist, kunt u beide implementeren de `Session_Start` methode in Global.asax-bestand van de toepassing en gegevens op te slaan in de <xref:System.Web.UI.Page.Session%2A>object om op te lossen de sessie-ID of u kunt de code in een ander deel van uw toepassing gebruiken voor het opslaan van gegevens in expliciet de <xref:System.Web.UI.Page.Session%2A>object.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.Page.Session%2A>       Als uw toepassing cookieless sessiestatus gebruikt, wordt de sessie-ID is gegenereerd op de eerste paginaweergave en voor de hele sessie blijft behouden."
  example:
  - "The following code example shows a Web.config file that configures session state to use cookieless session identifiers. For more information, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "De unieke sessie-id."
  overload: System.Web.SessionState.HttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee wordt een verzameling van objecten die zijn gedeclareerd door <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> labels binnen het ASP.NET-toepassingsbestand Global.asax."
  remarks: "Als een object op een pagina serialisatie niet ondersteunt en <xref:System.Web.SessionState.HttpSessionState.Mode%2A>is out-of-process (<xref:System.Web.SessionState.SessionStateMode> of <xref:System.Web.SessionState.SessionStateMode>), het object wordt niet gemaakt en wordt niet toegevoegd aan deze verzameling.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       De eigenschap StaticObjects is beschikbaar voor compatibiliteit met eerdere versies van ASP."
  example:
  - "The following code example lists the `id` and object type of the objects in the StaticObjects collection.  \n  \n [!code-cs[HttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_9_1.aspx)]\n [!code-vb[HttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_9_1.aspx)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "Een <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> met objecten die zijn gedeclareerd in het bestand Global.asax."
  overload: System.Web.SessionState.HttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee haalt u een object dat kan worden gebruikt voor toegang tot het verzamelen van waarden van de sessiestatus te synchroniseren."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Een object dat kan worden gebruikt voor het synchroniseren van toegang tot de verzameling."
  overload: System.Web.SessionState.HttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Opgehaald en ingesteld van de hoeveelheid tijd in minuten, toegestaan tussen aanvragen voordat de sessiestatus provider de sessie wordt beëindigd."
  remarks: "De eigenschap Timeout kan worden ingesteld in het bestand Web.config voor een toepassing met behulp van de `timeout` kenmerk van het configuratie-element, of u kunt de time-eigenschapswaarde direct met toepassingscode instellen.       De eigenschap Timeout kan niet worden ingesteld op een waarde groter is dan 525,600 minuten (1 jaar). De standaardwaarde is 20 minuten."
  example:
  - "The following code example sets the `timeout` session attribute to 30 minutes in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "De time-outperiode in minuten."
  overload: System.Web.SessionState.HttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SessionState.HttpSessionState.Abandon
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.HttpSessionState.Clear
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
- uid: System.Web.SessionState.HttpSessionState.CodePage
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.HttpSessionState.Contents
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.HttpSessionState.Count
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
- uid: System.Web.SessionState.HttpSessionState.Keys
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.HttpSessionState.LCID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.HttpSessionState.SessionID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
- uid: System.Web.SessionState.HttpSessionState.Abandon*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: HttpSessionState.Abandon
- uid: System.Web.SessionState.HttpSessionState.Add*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add
  nameWithType: HttpSessionState.Add
- uid: System.Web.SessionState.HttpSessionState.Clear*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear
  nameWithType: HttpSessionState.Clear
- uid: System.Web.SessionState.HttpSessionState.CodePage*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
- uid: System.Web.SessionState.HttpSessionState.Contents*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState.CookieMode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: HttpSessionState.CopyTo
- uid: System.Web.SessionState.HttpSessionState.Count*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpSessionState.GetEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
- uid: System.Web.SessionState.HttpSessionState.IsNewSession*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item
  nameWithType: HttpSessionState.Item
- uid: System.Web.SessionState.HttpSessionState.Keys*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
- uid: System.Web.SessionState.HttpSessionState.LCID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
- uid: System.Web.SessionState.HttpSessionState.Remove*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove
  nameWithType: HttpSessionState.Remove
- uid: System.Web.SessionState.HttpSessionState.RemoveAll*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: HttpSessionState.RemoveAll
- uid: System.Web.SessionState.HttpSessionState.RemoveAt*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: HttpSessionState.RemoveAt
- uid: System.Web.SessionState.HttpSessionState.SessionID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
- uid: System.Web.SessionState.HttpSessionState.SyncRoot*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
