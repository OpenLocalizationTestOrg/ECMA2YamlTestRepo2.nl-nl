### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.SecurityRoleAttribute
  id: SecurityRoleAttribute
  children:
  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  - System.EnterpriseServices.SecurityRoleAttribute.Description
  - System.EnterpriseServices.SecurityRoleAttribute.Role
  - System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  langs:
  - csharp
  name: SecurityRoleAttribute
  nameWithType: SecurityRoleAttribute
  fullName: System.EnterpriseServices.SecurityRoleAttribute
  type: Class
  summary: "Hiermee configureert u een rol voor een toepassing of onderdeel. Deze klasse kan niet worden overgenomen."
  remarks: "U kunt de SecurityRoleAttribute rollen toevoegen aan een toepassing, en deze te koppelen met onderdelen. Wanneer SecurityRoleAttribute wordt toegepast op een assembly als geheel, zorgt u ervoor dat de rol in de configuratie van de toepassing (COM +-catalogus bestaat). U kunt leden van de rol met behulp van de COM + Explorer toevoegen.       Wanneer toegepast op een onderdeel, de SecurityRoleAttribute zorgt ervoor dat de rol in de toepassingsconfiguratie bestaat en doelonderdeel aan de rol koppelt.       Gemaakte rollen hebben standaard geen leden. Als de <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A>eigenschap is ingesteld op `true`, iedereen gebruikersgroep wordt automatisch toegevoegd aan de rol.</xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A> Dit is het meest geschikt voor type all-access-functies die zijn opgegeven minimale controle over het systeem.       Beveiligingsrollen kunnen worden opgegeven op onderdeelniveau, per interface en per methode. Net als bij andere kenmerken methode beveiligingsconfiguratie niet gedeeld tussen interfacedefinitie en de methode-implementatie."
  example:
  - "The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \n  \n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/t-system.enterpriseservi_22_1.cpp)]\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/t-system.enterpriseservi_22_1.cs)]\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/t-system.enterpriseservi_22_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SecurityRoleAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SecurityRoleAttribute(String)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.EnterpriseServices.SecurityRoleAttribute&quot;> </xref> klasse en stelt de <xref:System.EnterpriseServices.SecurityRoleAttribute.Role*>eigenschap.</xref:System.EnterpriseServices.SecurityRoleAttribute.Role*>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \n  \n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/m-system.enterpriseservi_5_1.cpp)]\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/m-system.enterpriseservi_5_1.cs)]\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/m-system.enterpriseservi_5_1.vb)]"
  syntax:
    content: public SecurityRoleAttribute (string role);
    parameters:
    - id: role
      type: System.String
      description: "Een beveiligingsrol voor de toepassing, onderdeel, interface of methode."
  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SecurityRoleAttribute(String,Boolean)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.EnterpriseServices.SecurityRoleAttribute&quot;> </xref> klasse en stelt de <> </> *> en <> </> *> eigenschappen."
  syntax:
    content: public SecurityRoleAttribute (string role, bool everyone);
    parameters:
    - id: role
      type: System.String
      description: "Een beveiligingsrol voor de toepassing, onderdeel, interface of methode."
    - id: everyone
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>vereisen dat de zojuist gemaakte rol de iedereen gebruikersgroep toegevoegd als een gebruiker. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description
  id: Description
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: Description
  nameWithType: SecurityRoleAttribute.Description
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Opgehaald of ingesteld van de beschrijving van de rol."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "De beschrijving voor de rol."
  overload: System.EnterpriseServices.SecurityRoleAttribute.Description*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role
  id: Role
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: Role
  nameWithType: SecurityRoleAttribute.Role
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Opgehaald of ingesteld van de beveiligingsrol."
  syntax:
    content: public string Role { get; set; }
    return:
      type: System.String
      description: "De beveiligingsrol toegepast op een toepassing, onderdeel, interface of methode."
  overload: System.EnterpriseServices.SecurityRoleAttribute.Role*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  id: SetEveryoneAccess
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Hiermee stelt u een waarde die aangeeft of Iedereen toevoegt gebruikersgroep als een gebruiker."
  remarks: "Deze eigenschap instellen op `false` moet worden onderdrukt met het toevoegen van de iedereen gebruikersgroep als een gebruiker voor de zojuist gemaakte rollen. Stel de eigenschap op `true` om te vereisen dat een nieuwe rol iedereen toegevoegd als een gebruiker. Rollen die al aanwezig zijn op de toepassing niet worden gewijzigd."
  syntax:
    content: public bool SetEveryoneAccess { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>vereisen dat een nieuwe rol de iedereen gebruikersgroep toegevoegd als een gebruiker (rollen die al bestaan op de toepassing niet worden gewijzigd); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> onderdrukken toe te voegen iedereen gebruikersgroep als een gebruiker."
  overload: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute(String)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute(String,Boolean)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Description
  nameWithType: SecurityRoleAttribute.Description
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Role
  nameWithType: SecurityRoleAttribute.Role
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Description
  nameWithType: SecurityRoleAttribute.Description
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Role
  nameWithType: SecurityRoleAttribute.Role
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
