### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbEnumerator
  id: DbEnumerator
  children:
  - System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  - System.Data.Common.DbEnumerator.Current
  - System.Data.Common.DbEnumerator.MoveNext
  - System.Data.Common.DbEnumerator.Reset
  langs:
  - csharp
  name: DbEnumerator
  nameWithType: DbEnumerator
  fullName: System.Data.Common.DbEnumerator
  type: Class
  summary: "Beschrijft de <xref:System.Collections.IEnumerable.GetEnumerator*>methode, die ondersteuning biedt voor een eenvoudige iteratie over een verzameling door een .NET Framework-gegevensprovider.</xref:System.Collections.IEnumerable.GetEnumerator*>"
  remarks: "De klasse DbEnumerator wordt geïmplementeerd door een .NET Framework-gegevensprovider gegevens binding ondersteuning te bieden.       Standaard is het object DbEnumerator bedoeld voor gebruik met slechts één resultatenset. Als u een batch-instructie die de twee SQL SELECT-instructies die resulteren in verschillende schema&quot;s worden uitgevoerd, kan de tweede instructie niet retourneert het gehele schema. Om te voorkomen dat deze situatie, een DbEnumerator voor elke resultatenset verkrijgen en roept u vervolgens de `NextResult` methode van een object met .NET Framework data provider-DataReader."
  syntax:
    content: 'public class DbEnumerator : System.Collections.IEnumerator'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  id: '#ctor(System.Data.Common.DbDataReader)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(DbDataReader)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> klasse met de lezer van de n gegevens geven."
  syntax:
    content: public DbEnumerator (System.Data.Common.DbDataReader reader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: "De DataReader waarmee herhalen."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  id: '#ctor(System.Data.IDataReader)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(IDataReader)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> klasse met behulp van de opgegeven <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public DbEnumerator (System.Data.IDataReader reader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: "De <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> waarmee herhalen."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  id: '#ctor(System.Data.Common.DbDataReader,System.Boolean)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(DbDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> klasse met behulp van de opgegeven lezer en geeft aan of de lezer automatisch sluiten als u doorloopt de gegevens."
  syntax:
    content: public DbEnumerator (System.Data.Common.DbDataReader reader, bool closeReader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: "De DataReader waarmee herhalen."
    - id: closeReader
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>de DataReader automatisch sluiten als u doorloopt de gegevens. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  id: '#ctor(System.Data.IDataReader,System.Boolean)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(IDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> met behulp van de opgegeven klasse <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>, en geeft aan of automatisch sluiten de <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> na het doorlopen van de gegevens."
  syntax:
    content: public DbEnumerator (System.Data.IDataReader reader, bool closeReader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: "De <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> waarmee herhalen."
    - id: closeReader
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>automatisch sluiten de <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> na het doorlopen van de gegevens; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.Current
  id: Current
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: DbEnumerator.Current
  fullName: System.Data.Common.DbEnumerator.Current
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee haalt het huidige element in de verzameling."
  remarks: "Nadat een enumerator is gemaakt of na een <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A>moet worden aangeroepen om de enumerator gaan naar het eerste element van de verzameling voordat het lezen van de waarde van Current; anders wordt de huidige is niet gedefinieerd.</xref:System.Data.Common.DbEnumerator.MoveNext%2A> </xref:System.Data.Common.DbEnumerator.Reset%2A> Huidige er ook een uitzondering gegenereerd als de laatste aanroep aan <xref:System.Data.Common.DbEnumerator.MoveNext%2A>heeft false geretourneerd, waarvan het einde van de verzameling aangeeft.</xref:System.Data.Common.DbEnumerator.MoveNext%2A> Huidige de positie van de enumerator niet verplaatst en opeenvolgende aanroepen naar de huidige hetzelfde object retourneren totdat de <xref:System.Data.Common.DbEnumerator.MoveNext%2A>of <xref:System.Data.Common.DbEnumerator.Reset%2A>is aangeroepen.</xref:System.Data.Common.DbEnumerator.Reset%2A> </xref:System.Data.Common.DbEnumerator.MoveNext%2A> Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, de enumerator is permanent ongeldig en roept u de volgende of <xref:System.Data.Common.DbEnumerator.MoveNext%2A> <xref:System.Data.Common.DbEnumerator.Reset%2A>genereert een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.Common.DbEnumerator.Reset%2A> </xref:System.Data.Common.DbEnumerator.MoveNext%2A> Als de verzameling is gewijzigd tussen <xref:System.Data.Common.DbEnumerator.MoveNext%2A>en huidige, Huidig retourneert het element waarnaar deze is ingesteld, zelfs als de enumerator is al ongeldig gemaakt.</xref:System.Data.Common.DbEnumerator.MoveNext%2A>"
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: "Het huidige element in de verzameling."
  overload: System.Data.Common.DbEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De enumerator bevindt zich vóór het eerste element van de verzameling of na het laatste element."
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.MoveNext
  id: MoveNext
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: DbEnumerator.MoveNext()
  fullName: System.Data.Common.DbEnumerator.MoveNext()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "De enumerator verplaatst naar het volgende onderdeel van de verzameling."
  remarks: "Nadat een enumerator is gemaakt of na een aanroep van <xref:System.Data.Common.DbEnumerator.Reset%2A>, een enumerator bevindt zich vóór het eerste element van de verzameling en de eerste aanroep MoveNext de enumerator over het eerste element van de verzameling beweegt.</xref:System.Data.Common.DbEnumerator.Reset%2A> Na het einde van de verzameling wordt doorgegeven, volgende aanroepen MoveNext false tot terug <xref:System.Data.Common.DbEnumerator.Reset%2A>wordt aangeroepen.</xref:System.Data.Common.DbEnumerator.Reset%2A> Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, de enumerator is permanent ongeldig gemaakt en de volgende Roep MoveNext of <xref:System.Data.Common.DbEnumerator.Reset%2A>genereert een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.Common.DbEnumerator.Reset%2A>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de enumerator is is voortgezet naar het volgende element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de enumerator is voorbij het einde van de verzameling."
  overload: System.Data.Common.DbEnumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verzameling is gewijzigd nadat de enumerator is gemaakt."
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.Reset
  id: Reset
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: DbEnumerator.Reset()
  fullName: System.Data.Common.DbEnumerator.Reset()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee stelt u de enumerator op de oorspronkelijke positie die vóór het eerste element in de verzameling."
  remarks: "Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Wijzigingen worden aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, de enumerator is permanent ongeldig als de volgende aanroep <xref:System.Data.Common.DbEnumerator.MoveNext%2A>of opnieuw instellen van een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> genereert</xref:System.Data.Common.DbEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Data.Common.DbEnumerator.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verzameling is gewijzigd nadat de enumerator is gemaakt."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(DbDataReader)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(IDataReader)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(DbDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(IDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader,Boolean)
- uid: System.Data.Common.DbEnumerator.Current
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Current
  nameWithType: DbEnumerator.Current
  fullName: System.Data.Common.DbEnumerator.Current
- uid: System.Data.Common.DbEnumerator.MoveNext
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: DbEnumerator.MoveNext()
  fullName: System.Data.Common.DbEnumerator.MoveNext()
- uid: System.Data.Common.DbEnumerator.Reset
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Reset()
  nameWithType: DbEnumerator.Reset()
  fullName: System.Data.Common.DbEnumerator.Reset()
- uid: System.Data.Common.DbEnumerator.#ctor*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator
  nameWithType: DbEnumerator.DbEnumerator
- uid: System.Data.Common.DbEnumerator.Current*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Current
  nameWithType: DbEnumerator.Current
- uid: System.Data.Common.DbEnumerator.MoveNext*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: DbEnumerator.MoveNext
- uid: System.Data.Common.DbEnumerator.Reset*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Reset
  nameWithType: DbEnumerator.Reset
