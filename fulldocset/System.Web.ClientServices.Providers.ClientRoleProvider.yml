### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.Providers.ClientRoleProvider
  id: ClientRoleProvider
  children:
  - System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  - System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  - System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  - System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  langs:
  - csharp
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider
  type: Class
  summary: "Hiermee haalt u informatie van de functie voor Windows-toepassingen van een [!INCLUDE[ajax_current_short](~/add/includes/ajax-current-short-md.md)] rollen service."
  remarks: "Client toepassingsservices kunt u functiegegevens ophalen uit een bestaande rollen service door het configureren van uw toepassing om de klasse ClientRoleProvider te gebruiken. Na de configuratie, kunt u bepalen of een geverifieerde gebruiker in een bepaalde rol door het aanroepen van is de <xref:System.Security.Principal.IPrincipal.IsInRole%2A>methode van de <xref:System.Security.Principal.IPrincipal>geretourneerd door de `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> Voor toepassingen die zijn geconfigureerd voor het gebruik van de client-toepassingsservices, retourneert deze eigenschap een <xref:System.Web.ClientServices.ClientRolePrincipal>.</xref:System.Web.ClientServices.ClientRolePrincipal> Omdat deze klasse implementeert de <xref:System.Security.Principal.IPrincipal>interface, hoeft u niet expliciet verwijzen naar.</xref:System.Security.Principal.IPrincipal> De <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>methode roept intern de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName>methode.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName> </xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>       De klasse ClientRoleProvider is een alleen-lezenrol lidmaatschapsprovider waarmee rolgegevens voor geverifieerde gebruikers worden opgehaald uit de rollen service aangegeven door de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>eigenschap.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> De waarde van de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>eigenschap doorgaans wordt opgehaald uit het toepassingsconfiguratiebestand samen met andere configuratiewaarden.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> Zie voor meer informatie [hoe: Client toepassingsservices configureren](~/add/includes/ajax-current-ext-md.md).       U kunt het huidige exemplaar van ClientRoleProvider via ophalen de `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>eigenschap.</xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>       De klasse ClientRoleProvider ondersteunt alleen de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>en <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>methoden van de <xref:System.Web.Security.RoleProvider>abstracte klasse.</xref:System.Web.Security.RoleProvider> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> Wanneer u een van deze methoden voor een bepaalde gebruiker aanroepen, controleert de serviceprovider eerst de lokale gegevenscache voor rol informatie. Als de cache geen rolgegevens bevat of de cache is verlopen, wordt de serviceprovider haalt de informatie van de rol van de rollen-service en voegt het toe aan de cache.       U kunt de time-outperiode voor de cache rollen opgeven bij het configureren van client-toepassingsservices. Om af te dwingen de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>methode voor het ophalen van rolgegevens van de service in plaats van de lokale cache, aanroep van de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A>methode eerste.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       U kunt de klasse ClientRoleProvider niet gebruiken, maken of verwijderen van functies of te wijzigen van het rollidmaatschap van de van gebruikers. Als u wilt maken of wijzigen van gegevens over de serverfunctie, moet u de configuratie van de functieservice op de server."
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: 'public class ClientRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;> </xref> klasse."
  syntax:
    content: public ClientRoleProvider ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Deze methode wordt niet gebruikt door deze klasse."
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Niet gebruikt."
    - id: roleNames
      type: System.String[]
      description: "Niet gebruikt."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Deze eigenschap wordt niet gebruikt door deze klasse."
  remarks: "Deze instelling heeft geen effect."
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "De naam van de toepassing voor de provider."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Deze methode wordt niet gebruikt door deze klasse."
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Niet gebruikt."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Deze methode wordt niet gebruikt door deze klasse."
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Niet gebruikt."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Niet gebruikt."
    return:
      type: System.Boolean
      description: "Niet van toepassing. Deze methode er altijd een uitzondering gegenereerd."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Deze methode wordt niet gebruikt door deze klasse."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Niet gebruikt."
    - id: usernameToMatch
      type: System.String
      description: "Niet gebruikt."
    return:
      type: System.String[]
      description: "Niet van toepassing. Deze methode er altijd een uitzondering gegenereerd."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Deze methode wordt niet gebruikt door deze klasse."
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Niet van toepassing. Deze methode er altijd een uitzondering gegenereerd."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Hiermee haalt u de namen van de functies die de opgegeven gebruiker behoort."
  remarks: "De methode GetRolesForUser rol wordt informatie opgehaald voor de huidige, geverifieerde gebruiker, die u moet opgeven in de `username` parameter. U kunt de gebruikersnaam niet ophalen via de `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap als volgt: `Thread.CurrentPrincipal.Identity.Name`.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       De serviceprovider in de cache opgeslagen rol informatie over het lokale bestandssysteem om onnodige serviceaanroepen te vermijden. Zie voor meer informatie de <xref:System.Web.ClientServices.Providers.ClientRoleProvider>overzicht van de klasse.</xref:System.Web.ClientServices.Providers.ClientRoleProvider>"
  example:
  - "The following example code demonstrates how to use this method to determine whether the user login has expired before testing role membership. This code assumes that all valid users are associated with one or more roles. In this case, the GetRolesForUser method will not return any roles for a previously-authenticated user whose login has expired. If the user login has expired, this code displays the login dialog box. Otherwise, it calls the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> method to determine whether the user is in the \"manager\" role. The restricted code is in a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "De naam van de gebruiker voor het ophalen van rollen voor."
    return:
      type: System.String[]
      description: "Namen van de rol die <code> username </code> behoort of een lege matrix als de gebruiker is niet geverifieerd."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>username</code> is niet de gebruikersnaam van de huidige, geverifieerde gebruiker."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Deze methode wordt niet gebruikt door deze klasse."
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Niet gebruikt."
    return:
      type: System.String[]
      description: "Niet van toepassing. Deze methode er altijd een uitzondering gegenereerd."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Initialiseert de provider."
  remarks: "De [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] uitbreidbaarheidsmodel roept de methode Initialize initialiseren de <xref:System.Web.ClientServices.Providers.ClientRoleProvider>met behulp van de gegevens in uw configuratiebestand.</xref:System.Web.ClientServices.Providers.ClientRoleProvider> Deze methode herkent de volgende kenmerken van rol service configuration:- `name`       -    `description`       -    `cacheTimeout`       -    `connectionStringName`       -    `serviceUri`       -    `honorCookieExpiry` Zie voor meer informatie over deze kenmerken [hoe: Client toepassingsservices configureren](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "De beschrijvende naam van de provider."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Een verzameling naam/waarde-paren die de provider-specifieke kenmerken opgegeven in de configuratie voor deze provider vertegenwoordigt."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>config</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>is leeg.       - of - <code>config</code> bevat een niet-herkende waarde. Zie de sectie met opmerkingen voor meer informatie."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dit <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;> </xref> is al geïnitialiseerd."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>config</code>bevat een `cacheTimeout` waarde die niet in de juiste indeling voor conversie naar een <xref:System.Int32> waarde."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "<code>config</code>bevat een `cacheTimeout` waarde een getal kleiner dan <xref:System.Int32.MinValue> of groter dan <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Hiermee wordt een waarde die aangeeft of de opgegeven gebruiker in de opgegeven rol."
  remarks: "U kunt bepalen of een geverifieerde gebruiker in een bepaalde rol door het aanroepen van is de <xref:System.Security.Principal.IPrincipal.IsInRole%2A>methode van de <xref:System.Security.Principal.IPrincipal>geretourneerd door de `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> Voor toepassingen die zijn geconfigureerd voor het gebruik van de client-toepassingsservices, retourneert deze eigenschap een <xref:System.Web.ClientServices.ClientRolePrincipal>.</xref:System.Web.ClientServices.ClientRolePrincipal> Omdat deze klasse implementeert de <xref:System.Security.Principal.IPrincipal>interface, hoeft u niet expliciet verwijzen naar.</xref:System.Security.Principal.IPrincipal> De <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>methode roept intern de methode IsUserInRole.</xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName> De methode IsUserInRole gebruikt de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>methode om te bepalen of de gebruiker wordt aangegeven door `username` is in de rol die is aangegeven door `roleName`.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       De serviceprovider in de cache opgeslagen rol informatie over het lokale bestandssysteem om onnodige serviceaanroepen te vermijden. Zie voor meer informatie de <xref:System.Web.ClientServices.Providers.ClientRoleProvider>overzicht van de klasse.</xref:System.Web.ClientServices.Providers.ClientRoleProvider>"
  example:
  - "The following example code demonstrates how to access this method directly to determine whether the user is in a particular role. This code first tests whether the user login has expired. An explicit <xref:System.Web.ClientServices.Providers.ClientRoleProvider> reference is required to call the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> method, so the same reference is used to call the IsUserInRole method. If the user is in the \"manager\" role, this code calls a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "De naam van de gebruiker."
    - id: roleName
      type: System.String
      description: "De naam van de rol."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven gebruiker in de opgegeven rol; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de opgegeven gebruiker is niet geverifieerd of niet in de opgegeven rol is."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>username</code> is niet de gebruikersnaam van de huidige, geverifieerde gebruiker."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "De gebruiker niet langer wordt geverifieerd.       - of - de rollen-service is niet beschikbaar."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Deze methode wordt niet gebruikt door deze klasse."
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Niet gebruikt."
    - id: roleNames
      type: System.String[]
      description: "Niet gebruikt."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  id: ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Hiermee wist u de informatie in de cache rol en herstelt u de cache-time-outperiode."
  remarks: "De methode ResetCache verwijdert alle informatie van de rol uit de lokale cache en zorgt ervoor dat de cache verloopt. Nadat u deze methode aanroept, uw volgende aanroepen naar de <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>of <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>methode rolgegevens wordt opgehaald uit de geconfigureerde functieservice in plaats van de lokale cache.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       U kunt deze methode gebruiken om gebruikers de cache rollen vernieuwd wanneer hun rol is gewijzigd, maar de cache is nog niet verlopen. Zie voor meer informatie over het instellen van de rollen cache-time-outinterval [hoe: Client toepassingsservices configureren](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example code demonstrates how to use this method to reset the local roles cache.  \n  \n [!code-vb[ClientApplicationServices#314](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#314)]\n [!code-cs[ClientApplicationServices#314](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#314)]"
  syntax:
    content: public void ResetCache ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Deze methode wordt niet gebruikt door deze klasse."
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Niet gebruikt."
    return:
      type: System.Boolean
      description: "Niet van toepassing. Deze methode er altijd een uitzondering gegenereerd."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  id: ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Opgehaald of ingesteld van de URI van de functieservice."
  remarks: "U kunt de eigenschap ServiceUri instellen in uw toepassingscode, maar de waarde wordt doorgaans wordt ingesteld in het configuratiebestand van de toepassing. Hiermee kunt u de servicelocatie van de wijzigen zonder de code compileren. Zie voor meer informatie [hoe: Client toepassingsservices configureren](~/add/includes/ajax-current-ext-md.md).       Als u de locatie van de programmatisch instelt, moet u de volledige URI, dat altijd met &quot;Role_JSON_AppService.axd eindigt&quot;-service."
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: public string ServiceUri { get; set; }
    return:
      type: System.String
      description: "De functieservice URI."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Bij het ophalen van deze eigenschap geen service URI is gevonden in het configuratiebestand van de toepassing en deze eigenschap niet eerder is ingesteld."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider.ClientRoleProvider
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: ClientRoleProvider.AddUsersToRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: ClientRoleProvider.CreateRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: ClientRoleProvider.DeleteRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: ClientRoleProvider.FindUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: ClientRoleProvider.GetAllRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: ClientRoleProvider.GetRolesForUser
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: ClientRoleProvider.GetUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: ClientRoleProvider.Initialize
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: ClientRoleProvider.IsUserInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache
  nameWithType: ClientRoleProvider.ResetCache
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: ClientRoleProvider.RoleExists
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
