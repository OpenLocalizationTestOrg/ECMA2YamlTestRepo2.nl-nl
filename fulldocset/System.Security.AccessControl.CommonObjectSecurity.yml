### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonObjectSecurity
  id: CommonObjectSecurity
  children:
  - System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  langs:
  - csharp
  name: CommonObjectSecurity
  nameWithType: CommonObjectSecurity
  fullName: System.Security.AccessControl.CommonObjectSecurity
  type: Class
  summary: "Controleert de toegang tot objecten zonder directe manipulatie van toegangsbeheerlijsten (ACL&quot;s). Deze klasse is de abstracte basisklasse voor de <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> klasse."
  syntax:
    content: 'public abstract class CommonObjectSecurity : System.Security.AccessControl.ObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: CommonObjectSecurity(Boolean)
  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> klasse."
  syntax:
    content: protected CommonObjectSecurity (bool isContainer);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het nieuwe object een container-object is."
  overload: System.Security.AccessControl.CommonObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  id: AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: AddAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Voegt de opgegeven toegangsregel aan de DACL lijst (Discretionary Access Control) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  remarks: "Een toegangsregel toe te voegen veroorzaken bestaande toegangsregels bij de DACL worden samengevoegd.       Voorkom toegang principals onbedoeld geeft toepassingen moeten controleren op de aanwezigheid van toestaan iedereen volledige toegang (AEFA) ACE access control entry () en deze te verwijderen voordat u een DACL wijzigt."
  syntax:
    content: protected void AddAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "De toegangsregel om toe te voegen."
  overload: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  id: AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: AddAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Voegt de opgegeven controleregel naar het systeem toegang besturingselement lijst (SACL) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  remarks: "Een regel audit toe te voegen veroorzaken bestaande toegangsregels bij de SACL worden samengevoegd."
  syntax:
    content: protected void AddAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "De controleregel om toe te voegen."
  overload: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee wordt een verzameling van de toegangsregels die zijn gekoppeld aan de opgegeven beveiligings-id opgehaald."
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt opnemen toegang regels expliciet ingesteld voor het object."
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>overgenomen toegangsregels om op te nemen."
    - id: targetType
      type: System.Type
      description: "Hiermee bepaalt u of de beveiligings-id die voor het ophalen van regels voor toegang van type T:System.Security.Principal.SecurityIdentifier of T:System.Security.Principal.NTAccount. De waarde van deze parameter moet een type dat kan worden omgezet in de <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> type."
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "De verzameling van toegangsregels die zijn gekoppeld aan de opgegeven <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> object."
  overload: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee wordt een verzameling van de audit-regels die zijn gekoppeld aan de opgegeven beveiligings-id opgehaald."
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt opnemen audit regels expliciet ingesteld voor het object."
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>overgenomen audit regels om op te nemen."
    - id: targetType
      type: System.Type
      description: "De beveiligings-id waarvoor audit-regels ophalen. Dit moet een object dat kan worden geconverteerd als een <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> object."
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "De verzameling van regels voor controle is gekoppeld aan de opgegeven <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> object."
  overload: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "De opgegeven wijziging aan de DACL lijst (Discretionary Access Control) die zijn gekoppeld aan dit geldt <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  remarks: "Voorkom toegang principals onbedoeld geeft toepassingen moeten controleren op de aanwezigheid van toestaan iedereen volledige toegang (AEFA) ACE access control entry () en deze te verwijderen voordat u een DACL wijzigt."
  syntax:
    content: protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "De wijziging toe te passen aan de DACL."
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "De toegangsregel om te wijzigen."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de DACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de DACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "De opgegeven wijziging aan het systeem toegang besturingselement lijst SACL () die zijn gekoppeld aan dit geldt <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  syntax:
    content: protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "De wijziging toepassen op de SACL."
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "De controleregel te wijzigen."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de SACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de SACL is gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u toegangsregels die door de dezelfde beveiligings-id en toegang masker bevatten als de opgegeven toegangsregel van de discretionaire lijst (Discretionary Access Control) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  remarks: "Verwijdering van de toegang kan worden bereikt via een complex algoritme die toegangscontroleregels toevoegen mogelijk naast te verwijderen.       Deze methode om te verwijderen van de toegangsregel is mislukt en retourneert `false` als de overname-regels die zijn gekoppeld aan de toegangsregel te complex voor de algoritme verwijderen om te slagen.       Voorkom toegang principals onbedoeld geeft toepassingen moeten controleren op de aanwezigheid van toestaan iedereen volledige toegang (AEFA) ACE access control entry () en deze te verwijderen voordat u een DACL wijzigt."
  syntax:
    content: protected bool RemoveAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "De toegangsregel om te verwijderen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u de toegangsregel is verwijderd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle toegangsregels die dezelfde beveiligings-id hebben als de opgegeven toegangsregel van de discretionaire lijst (Discretionary Access Control) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  remarks: "Voorkom toegang principals onbedoeld geeft toepassingen moeten controleren op de aanwezigheid van toestaan iedereen volledige toegang (AEFA) ACE access control entry () en deze te verwijderen voordat u een DACL wijzigt."
  syntax:
    content: protected void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "De toegangsregel om te verwijderen."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle toegangsregels die exact overeenkomt met de opgegeven toegangsregel van de discretionaire lijst (Discretionary Access Control) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  remarks: "Voorkom toegang principals onbedoeld geeft toepassingen moeten controleren op de aanwezigheid van toestaan iedereen volledige toegang (AEFA) ACE access control entry () en deze te verwijderen voordat u een DACL wijzigt."
  syntax:
    content: protected void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "De toegangsregel om te verwijderen."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u audit-regels die de dezelfde beveiligings-id en toegang masker bevatten als de opgegeven controleregel van het systeem toegang besturingselement lijst (SACL) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  remarks: "Verwijderen van audit kan worden bereikt via een complex algoritme die mogelijk audit naast het verwijderen van deze regels wilt toevoegen.       Deze methode om te verwijderen van de controleregel is mislukt en retourneert `false` als de overname-regels die zijn gekoppeld aan de controleregel te complex voor de algoritme verwijderen om te slagen."
  syntax:
    content: protected bool RemoveAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "De controleregel te verwijderen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de controleregel is verwijderd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle audit-regels die dezelfde beveiligings-id hebben als de opgegeven controleregel van het systeem toegang besturingselement lijst (SACL) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  syntax:
    content: protected void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "De controleregel te verwijderen."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle audit-regels die exact overeenkomen met de opgegeven controleregel van het systeem toegang besturingselement lijst SACL () die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object."
  syntax:
    content: protected void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "De controleregel te verwijderen."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  id: ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ResetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle regels voor toegang in de discretionaire lijst (Discretionary Access Control) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object en voegt u de opgegeven toegangsregel."
  remarks: "Voorkom toegang principals onbedoeld geeft toepassingen moeten controleren op de aanwezigheid van toestaan iedereen volledige toegang (AEFA) ACE access control entry () en deze te verwijderen voordat u een DACL wijzigt."
  syntax:
    content: protected void ResetAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "De toegangsregel om in te stellen."
  overload: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  id: SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: SetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle toegangsregels die dezelfde beveiligings-id en kwalificatie bevatten als de opgegeven toegangsregel in de discretionaire lijst (Discretionary Access Control) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object en voegt u de opgegeven toegangsregel."
  remarks: "Voorkom toegang principals onbedoeld geeft toepassingen moeten controleren op de aanwezigheid van toestaan iedereen volledige toegang (AEFA) ACE access control entry () en deze te verwijderen voordat u een DACL wijzigt."
  syntax:
    content: protected void SetAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "De toegangsregel om in te stellen."
  overload: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  id: SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: SetAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee verwijdert u alle audit-regels die de dezelfde beveiligings-id en kwalificatie bevatten als de opgegeven controleregel in het systeem toegang besturingselement lijst (SACL) die zijn gekoppeld aan dit <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> object en voegt u de opgegeven controleregel."
  syntax:
    content: protected void SetAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "De controleregel om in te stellen."
  overload: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.ObjectSecurity
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: CommonObjectSecurity(Boolean)
  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.AuthorizationRuleCollection
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRuleCollection
  nameWithType: AuthorizationRuleCollection
  fullName: System.Security.AccessControl.AuthorizationRuleCollection
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ResetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: CommonObjectSecurity
  nameWithType: CommonObjectSecurity.CommonObjectSecurity
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: CommonObjectSecurity.AddAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: CommonObjectSecurity.AddAuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAccessRules
  nameWithType: CommonObjectSecurity.GetAccessRules
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAuditRules
  nameWithType: CommonObjectSecurity.GetAuditRules
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAccess
  nameWithType: CommonObjectSecurity.ModifyAccess
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAudit
  nameWithType: CommonObjectSecurity.ModifyAudit
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: CommonObjectSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: CommonObjectSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: CommonObjectSecurity.ResetAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: CommonObjectSecurity.SetAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: CommonObjectSecurity.SetAuditRule
