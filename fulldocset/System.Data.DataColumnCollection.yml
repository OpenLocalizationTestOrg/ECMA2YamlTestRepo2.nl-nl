### YamlMime:ManagedReference
items:
- uid: System.Data.DataColumnCollection
  id: DataColumnCollection
  children:
  - System.Data.DataColumnCollection.Add
  - System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Add(System.String)
  - System.Data.DataColumnCollection.Add(System.String,System.Type)
  - System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  - System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  - System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Clear
  - System.Data.DataColumnCollection.CollectionChanged
  - System.Data.DataColumnCollection.Contains(System.String)
  - System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  - System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  - System.Data.DataColumnCollection.IndexOf(System.String)
  - System.Data.DataColumnCollection.Item(System.Int32)
  - System.Data.DataColumnCollection.Item(System.String)
  - System.Data.DataColumnCollection.List
  - System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Remove(System.String)
  - System.Data.DataColumnCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataColumnCollection
  nameWithType: DataColumnCollection
  fullName: System.Data.DataColumnCollection
  type: Class
  summary: "Vertegenwoordigt een verzameling <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten voor een <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "De DataColumnCollection definieert het schema van een <xref:System.Data.DataTable>, en bepaalt welk type gegevens elke <xref:System.Data.DataColumn>kan bevatten.</xref:System.Data.DataColumn> </xref:System.Data.DataTable> U hebt toegang tot de DataColumnCollection via de <xref:System.Data.DataTable.Columns%2A>eigenschap van de <xref:System.Data.DataTable>object.</xref:System.Data.DataTable> </xref:System.Data.DataTable.Columns%2A>       Maakt gebruik van de DataColumnCollection de <xref:System.Data.DataColumnCollection.Add%2A>en <xref:System.Data.DataColumnCollection.Remove%2A>methoden voor het invoegen en verwijderen van <xref:System.Data.DataColumn>objecten.</xref:System.Data.DataColumn> </xref:System.Data.DataColumnCollection.Remove%2A> </xref:System.Data.DataColumnCollection.Add%2A> Gebruik de <xref:System.Data.InternalDataCollectionBase.Count%2A>eigenschap om te bepalen hoeveel <xref:System.Data.DataColumn>objecten zijn in de verzameling.</xref:System.Data.DataColumn> </xref:System.Data.InternalDataCollectionBase.Count%2A> Gebruik de <xref:System.Data.DataColumnCollection.Contains%2A>methode om te controleren of de naam van een opgegeven index of kolom in de verzameling bestaat.</xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example iterates through a collection of <xref:System.Data.DataColumn> objects and prints various properties of each column in the collection.  \n  \n [!code-cs[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/csharp/t-system.data.datacolumn_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datacolumn_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class DataColumnCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add
  id: Add
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add()
  nameWithType: DataColumnCollection.Add()
  fullName: System.Data.DataColumnCollection.Add()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Wordt gemaakt en wordt een <xref href=&quot;System.Data.DataColumn&quot;> </xref> object toe aan de <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Een standaardnaam (&quot;Kolom1&quot;, &quot;Kolom2&quot;, enzovoort) wordt verleend aan de kolom.       Als de verzameling is gewijzigd door het toevoegen of verwijderen van kolommen, de <xref:System.Data.DataColumnCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to the <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add5 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_9_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add ();
    parameters: []
    return:
      type: System.Data.DataColumn
      description: "Het zojuist gemaakte <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  id: Add(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(DataColumn)
  nameWithType: DataColumnCollection.Add(DataColumn)
  fullName: System.Data.DataColumnCollection.Add(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Maakt en voegt de opgegeven <xref href=&quot;System.Data.DataColumn&quot;> </xref> object toe aan de <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Als de verzameling is gewijzigd door het toevoegen of verwijderen van kolommen, de <xref:System.Data.DataColumnCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_2_1.vb)]"
  syntax:
    content: public void Add (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "The <xref href=&quot;System.Data.DataColumn&quot;></xref> to add."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De kolom hoort al aan deze verzameling of naar een andere verzameling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "De verzameling al is een kolom met de opgegeven naam. (De vergelijking is niet hoofdlettergevoelig)."
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "De expressie is ongeldig. Zie de <xref:System.Data.DataColumn.Expression*>eigenschap voor meer informatie over het maken van expressies.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: DataColumnCollection.Add(String)
  fullName: System.Data.DataColumnCollection.Add(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Wordt gemaakt en wordt een <xref href=&quot;System.Data.DataColumn&quot;> </xref> object waarvoor de opgegeven naam niet aan de <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Standaard de <xref:System.Data.DataColumn.DataType%2A>voor de nieuwe kolom is `string`.</xref:System.Data.DataColumn.DataType%2A>       Als `null` of een lege tekenreeks (&quot;&quot;) wordt doorgegeven in voor de naam een standaardnaam (&quot;Kolom1&quot;, &quot;Kolom2&quot;, enzovoort) wordt toegekend aan de kolom.       Gebruik de <xref:System.Data.DataColumnCollection.Contains%2A>methode om te bepalen of een kolom met de voorgestelde naam al in de verzameling bestaat.</xref:System.Data.DataColumnCollection.Contains%2A>       Als de verzameling is gewijzigd door het toevoegen of verwijderen van kolommen, de <xref:System.Data.DataColumnCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add4 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_11_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "De naam van de kolom."
    return:
      type: System.Data.DataColumn
      description: "Het zojuist gemaakte <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "De verzameling al is een kolom met de opgegeven naam. (De vergelijking is niet hoofdlettergevoelig)."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)
  id: Add(System.String,System.Type)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String,Type)
  nameWithType: DataColumnCollection.Add(String,Type)
  fullName: System.Data.DataColumnCollection.Add(String,Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Wordt gemaakt en wordt een <xref href=&quot;System.Data.DataColumn&quot;> </xref> -object dat de opgegeven naam en type heeft de <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Als `null` of een lege tekenreeks (&quot;&quot;) wordt doorgegeven in voor de naam een standaardnaam (&quot;Kolom1&quot;, &quot;Kolom2&quot;, enzovoort) wordt toegekend aan de kolom.       Gebruik de <xref:System.Data.DataColumnCollection.Contains%2A>methode om te bepalen of een kolom met de voorgestelde naam al in de verzameling bestaat.</xref:System.Data.DataColumnCollection.Contains%2A>       Als de verzameling is gewijzigd door het toevoegen of verwijderen van kolommen, de <xref:System.Data.DataColumnCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_7_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName, Type type);
    parameters:
    - id: columnName
      type: System.String
      description: "De <xref:System.Data.DataColumn.ColumnName*>moet worden gebruikt bij het maken van de kolom.</xref:System.Data.DataColumn.ColumnName*>"
    - id: type
      type: System.Type
      description: "De <xref:System.Data.DataColumn.DataType*>van de nieuwe kolom.</xref:System.Data.DataColumn.DataType*>"
    return:
      type: System.Data.DataColumn
      description: "Het zojuist gemaakte <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "De verzameling al is een kolom met de opgegeven naam. (De vergelijking is niet hoofdlettergevoelig)."
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "De expressie is ongeldig. Zie de <xref:System.Data.DataColumn.Expression*>eigenschap voor meer informatie over het maken van expressies.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  id: Add(System.String,System.Type,System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String,Type,String)
  nameWithType: DataColumnCollection.Add(String,Type,String)
  fullName: System.Data.DataColumnCollection.Add(String,Type,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Wordt gemaakt en wordt een <xref href=&quot;System.Data.DataColumn&quot;> </xref> object waarvoor de opgegeven naam, type en de expressie voor de <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Als `null` of een lege tekenreeks (&quot;&quot;) wordt doorgegeven in voor de naam een standaardnaam (&quot;Kolom1&quot;, &quot;Kolom2&quot;, enzovoort) wordt toegekend aan de kolom.       Gebruik de <xref:System.Data.DataColumnCollection.Contains%2A>methode om te bepalen of een kolom met de voorgestelde naam al in de verzameling bestaat.</xref:System.Data.DataColumnCollection.Contains%2A>       Als de verzameling is gewijzigd door het toevoegen of verwijderen van kolommen, de <xref:System.Data.DataColumnCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName, Type type, string expression);
    parameters:
    - id: columnName
      type: System.String
      description: "De naam moet worden gebruikt bij het maken van de kolom."
    - id: type
      type: System.Type
      description: "De <xref:System.Data.DataColumn.DataType*>van de nieuwe kolom.</xref:System.Data.DataColumn.DataType*>"
    - id: expression
      type: System.String
      description: "De expressie toewijzen aan de <xref:System.Data.DataColumn.Expression*>eigenschap.</xref:System.Data.DataColumn.Expression*>"
    return:
      type: System.Data.DataColumn
      description: "Het zojuist gemaakte <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "De verzameling al is een kolom met de opgegeven naam. (De vergelijking is niet hoofdlettergevoelig)."
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "De expressie is ongeldig. Zie de <xref:System.Data.DataColumn.Expression*>eigenschap voor meer informatie over het maken van expressies.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  id: AddRange(System.Data.DataColumn[])
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: AddRange(DataColumn[])
  nameWithType: DataColumnCollection.AddRange(DataColumn[])
  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopieert de elementen van de opgegeven <xref href=&quot;System.Data.DataColumn&quot;> </xref> matrix aan het einde van de verzameling."
  syntax:
    content: public void AddRange (System.Data.DataColumn[] columns);
    parameters:
    - id: columns
      type: System.Data.DataColumn[]
      description: "De matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten toevoegen aan de verzameling."
  overload: System.Data.DataColumnCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  id: CanRemove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CanRemove(DataColumn)
  nameWithType: DataColumnCollection.CanRemove(DataColumn)
  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Controleert of een specifieke kolom kan worden verwijderd uit de verzameling."
  remarks: "De methode CanRemove voert enkele controles voordat er wordt teruggekeerd uit een `true` of `false` resultaat. Dit omvat het volgende: Hiermee wordt aangegeven of de kolom bestaat, behoort tot de tabel of is betrokken bij een beperking of een relatie.       Gebruik de methode CanRemove voordat u probeert te verwijderen van een kolom uit een verzameling. U kunt ook de <xref:System.Data.DataColumnCollection.Contains%2A>methode om te bepalen of een bepaalde kolom bestaat voordat u probeert te verwijderen.</xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If found, the CanRemove method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \n  \n [!code-vb[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_16_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_16_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Een <xref href=&quot;System.Data.DataColumn&quot;> </xref> in de verzameling."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de kolom kan worden verwijderd. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>if,      -   The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -De kolom behoort niet tot deze verzameling.      -De kolom uitmaakt deel van een relatie.      -Een andere kolomexpressie is afhankelijk van deze kolom."
  overload: System.Data.DataColumnCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Clear
  id: Clear
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataColumnCollection.Clear()
  fullName: System.Data.DataColumnCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wist u de verzameling van kolommen."
  remarks: "Als de verzameling is gewijzigd door het toevoegen of verwijderen van kolommen, de <xref:System.Data.DataColumnCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example clears the columns collection.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_0_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_0_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataColumnCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataColumnCollection.CollectionChanged
  fullName: System.Data.DataColumnCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Deze gebeurtenis treedt op wanneer de columns-verzameling wordt gewijzigd, door het toevoegen of verwijderen van een kolom."
  remarks: "Gebruik de <xref:System.Data.DataColumnCollection.Contains%2A>en <xref:System.Data.DataColumnCollection.CanRemove%2A>methoden om te bepalen of een kolom bestaat en kan worden verwijderd.</xref:System.Data.DataColumnCollection.CanRemove%2A> </xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example adds an event handler for the CollectionChanged event.  \n  \n [!code-cs[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datacolumn_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datacolumn_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataColumnCollection.Contains(String)
  fullName: System.Data.DataColumnCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Controleert of de verzameling een kolom met de opgegeven naam bevat."
  remarks: "Gebruik de methode bevat om te bevestigen dat het bestaan van een kolom voordat u extra bewerkingen op de kolom uitvoeren. De methode retourneert `false` wanneer twee of meer kolommen hebben dezelfde naam maar verschillende naamruimten. De aanroep is niet mogelijk als er dubbelzinnigheid wanneer die overeenkomt met de naam van een kolom naar exact één kolom."
  example:
  - "The following example uses the Contains method and the <xref:System.Data.DataColumnCollection.CanRemove%2A> method to determine whether the column can be removed. If so, the column is removed.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_3_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_3_1.cs)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "De <xref:System.Data.DataColumn.ColumnName*>van de kolom for. opzoeken</xref:System.Data.DataColumn.ColumnName*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als er een kolom met deze naam; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  id: CopyTo(System.Data.DataColumn[],System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CopyTo(DataColumn[],Int32)
  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)
  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De volledige verzameling worden gekopieerd naar een bestaande matrix, beginnend bij een opgegeven index binnen de matrix."
  syntax:
    content: public void CopyTo (System.Data.DataColumn[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataColumn[]
      description: "Een matrix van <xref href=&quot;System.Data.DataColumn&quot;> </xref> objecten om te kopiëren van de verzameling in."
    - id: index
      type: System.Int32
      description: "De index te starten vanaf."
  overload: System.Data.DataColumnCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  id: IndexOf(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: IndexOf(DataColumn)
  nameWithType: DataColumnCollection.IndexOf(DataColumn)
  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt de index van een kolom die is opgegeven met de naam opgehaald."
  remarks: "De methode IndexOf is niet hoofdlettergevoelig."
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a specified column exists in a <xref:System.Data.DataColumnCollection>. If so, the IndexOf method returns the index of the column.  \n  \n [!code-vb[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_14_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_14_1.cs)]"
  syntax:
    content: public int IndexOf (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "De naam van de kolom te retourneren."
    return:
      type: System.Int32
      description: "De index van de kolom die is opgegeven door <code> column </code> als deze gevonden, anders wordt is -1."
  overload: System.Data.DataColumnCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataColumnCollection.IndexOf(String)
  fullName: System.Data.DataColumnCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee haalt u de index van de kolom met de naam (de naam is niet hoofdlettergevoelig)."
  syntax:
    content: public int IndexOf (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "De naam van de kolom te vinden."
    return:
      type: System.Int32
      description: "De op nul gebaseerde index van de kolom met de opgegeven naam of -1 als de kolom niet bestaat in de verzameling."
  overload: System.Data.DataColumnCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataColumnCollection.Item(Int32)
  fullName: System.Data.DataColumnCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.DataColumn&quot;> </xref> uit de verzameling met de opgegeven index."
  remarks: "De <xref:System.Data.DataColumnCollection.Contains%2A>methode kan worden gebruikt om te testen op de aanwezigheid van een kolom.</xref:System.Data.DataColumnCollection.Contains%2A> Dit is handig voordat u probeert te gebruiken van Item."
  example:
  - "The following example uses the Item property to print the <xref:System.Data.DataColumn.ColumnName%2A> value of a <xref:System.Data.DataColumn> object specified by index. The example uses the <xref:System.Data.DataTable> that is contained by a System.Windows.Forms.DataGrid control.  \n  \n [!code-cs[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_11_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_11_1.vb)]"
  syntax:
    content: public System.Data.DataColumn this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de kolom te retourneren."
    return:
      type: System.Data.DataColumn
      description: "De <xref href=&quot;System.Data.DataColumn&quot;> </xref> bij de opgegeven index."
  overload: System.Data.DataColumnCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Waarde voor de index is groter dan het aantal items in de verzameling."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataColumnCollection.Item(String)
  fullName: System.Data.DataColumnCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Haalt de <xref href=&quot;System.Data.DataColumn&quot;> </xref> uit de verzameling met de opgegeven naam."
  remarks: "<xref:System.Data.DataColumnCollection.Item%2A>voorwaardelijk hoofdlettergevoelig is bij het zoeken naar kolomnamen.</xref:System.Data.DataColumnCollection.Item%2A> Bijvoorbeeld, als een <xref:System.Data.DataColumn>met de naam &quot;mydatacolumn&quot; en een andere naam &quot;Mydatacolumn&quot;, een tekenreeks die wordt gebruikt om te zoeken naar een van de kolommen wordt beschouwd als hoofdlettergevoelig.</xref:System.Data.DataColumn> Echter als &quot;mydatacolumn&quot; bestaat en niet het &quot;Mydatacolumn&quot;, de zoekreeks, wordt beschouwd als niet hoofdlettergevoelig."
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Item%2A> property to print the <xref:System.Data.DataColumn.DataType%2A> value of a <xref:System.Data.DataColumn> object specified by index.  \n  \n [!code-vb[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_14_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_14_1.cs)]"
  syntax:
    content: public System.Data.DataColumn this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "De <xref:System.Data.DataColumn.ColumnName*>van de kolom te retourneren.</xref:System.Data.DataColumn.ColumnName*>"
    return:
      type: System.Data.DataColumn
      description: "De <xref href=&quot;System.Data.DataColumn&quot;> </xref> in de verzameling met de opgegeven <xref:System.Data.DataColumn.ColumnName*>; anders een null-waarde als de <xref href=&quot;System.Data.DataColumn&quot;> </xref> bestaat niet.</xref:System.Data.DataColumn.ColumnName*>"
  overload: System.Data.DataColumnCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.List
  id: List
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: List
  nameWithType: DataColumnCollection.List
  fullName: System.Data.DataColumnCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "Moet worden toegevoegd."
  overload: System.Data.DataColumnCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  id: Remove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Remove(DataColumn)
  nameWithType: DataColumnCollection.Remove(DataColumn)
  fullName: System.Data.DataColumnCollection.Remove(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verwijdert de opgegeven <xref href=&quot;System.Data.DataColumn&quot;> </xref> object uit de verzameling."
  remarks: "Als de verzameling is gewijzigd door het toevoegen of verwijderen van kolommen, de <xref:System.Data.DataColumnCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a named column exists. If so, the <xref:System.Data.DataColumnCollection.Item%2A> property returns the column. The <xref:System.Data.DataColumnCollection.CanRemove%2A> method then checks whether the column can be removed; if so, the Remove method removes it.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_10_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_10_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "De <xref href=&quot;System.Data.DataColumn&quot;> </xref> te verwijderen."
  overload: System.Data.DataColumnCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De kolom behoort niet tot deze verzameling.       - Of - de kolom deel uitmaakt van een relatie.       - Of - expressie voor een andere kolom, is afhankelijk van deze kolom."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataColumnCollection.Remove(String)
  fullName: System.Data.DataColumnCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee verwijdert u de <xref href=&quot;System.Data.DataColumn&quot;> </xref> -object dat de opgegeven naam van de verzameling heeft."
  remarks: "Als de verzameling is gewijzigd door het toevoegen of verwijderen van kolommen, de <xref:System.Data.DataColumnCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_12_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_12_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de kolom te verwijderen."
  overload: System.Data.DataColumnCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De verzameling heeft geen een kolom met de opgegeven naam."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataColumnCollection.RemoveAt(Int32)
  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De kolom in de opgegeven index verwijdert uit de verzameling."
  remarks: "Als de verzameling is gewijzigd door het toevoegen of verwijderen van kolommen, de <xref:System.Data.DataColumnCollection.CollectionChanged>gebeurtenis plaatsvindt.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the RemoveAt method.  \n  \n [!code-vb[Classic WebData DataColumnCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_4_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De index van de kolom te verwijderen."
  overload: System.Data.DataColumnCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De verzameling heeft geen een kolom met de opgegeven index."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.InvalidExpressionException
  parent: System.Data
  isExternal: false
  name: InvalidExpressionException
  nameWithType: InvalidExpressionException
  fullName: System.Data.InvalidExpressionException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataColumnCollection.Add
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add()
  nameWithType: DataColumnCollection.Add()
  fullName: System.Data.DataColumnCollection.Add()
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(DataColumn)
  nameWithType: DataColumnCollection.Add(DataColumn)
  fullName: System.Data.DataColumnCollection.Add(DataColumn)
- uid: System.Data.DataColumnCollection.Add(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String)
  nameWithType: DataColumnCollection.Add(String)
  fullName: System.Data.DataColumnCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String,Type)
  nameWithType: DataColumnCollection.Add(String,Type)
  fullName: System.Data.DataColumnCollection.Add(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String,Type,String)
  nameWithType: DataColumnCollection.Add(String,Type,String)
  fullName: System.Data.DataColumnCollection.Add(String,Type,String)
- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: AddRange(DataColumn[])
  nameWithType: DataColumnCollection.AddRange(DataColumn[])
  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CanRemove(DataColumn)
  nameWithType: DataColumnCollection.CanRemove(DataColumn)
  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataColumnCollection.Clear
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Clear()
  nameWithType: DataColumnCollection.Clear()
  fullName: System.Data.DataColumnCollection.Clear()
- uid: System.Data.DataColumnCollection.CollectionChanged
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataColumnCollection.CollectionChanged
  fullName: System.Data.DataColumnCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataColumnCollection.Contains(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataColumnCollection.Contains(String)
  fullName: System.Data.DataColumnCollection.Contains(String)
- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CopyTo(DataColumn[],Int32)
  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)
  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf(DataColumn)
  nameWithType: DataColumnCollection.IndexOf(DataColumn)
  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)
- uid: System.Data.DataColumnCollection.IndexOf(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataColumnCollection.IndexOf(String)
  fullName: System.Data.DataColumnCollection.IndexOf(String)
- uid: System.Data.DataColumnCollection.Item(System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataColumnCollection.Item(Int32)
  fullName: System.Data.DataColumnCollection.Item(Int32)
- uid: System.Data.DataColumnCollection.Item(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataColumnCollection.Item(String)
  fullName: System.Data.DataColumnCollection.Item(String)
- uid: System.Data.DataColumnCollection.List
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: List
  nameWithType: DataColumnCollection.List
  fullName: System.Data.DataColumnCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove(DataColumn)
  nameWithType: DataColumnCollection.Remove(DataColumn)
  fullName: System.Data.DataColumnCollection.Remove(DataColumn)
- uid: System.Data.DataColumnCollection.Remove(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataColumnCollection.Remove(String)
  fullName: System.Data.DataColumnCollection.Remove(String)
- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataColumnCollection.RemoveAt(Int32)
  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)
- uid: System.Data.DataColumnCollection.Add*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add
  nameWithType: DataColumnCollection.Add
- uid: System.Data.DataColumnCollection.AddRange*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: AddRange
  nameWithType: DataColumnCollection.AddRange
- uid: System.Data.DataColumnCollection.CanRemove*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataColumnCollection.CanRemove
- uid: System.Data.DataColumnCollection.Clear*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Clear
  nameWithType: DataColumnCollection.Clear
- uid: System.Data.DataColumnCollection.Contains*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Contains
  nameWithType: DataColumnCollection.Contains
- uid: System.Data.DataColumnCollection.CopyTo*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataColumnCollection.CopyTo
- uid: System.Data.DataColumnCollection.IndexOf*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataColumnCollection.IndexOf
- uid: System.Data.DataColumnCollection.Item*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item
  nameWithType: DataColumnCollection.Item
- uid: System.Data.DataColumnCollection.List*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: List
  nameWithType: DataColumnCollection.List
- uid: System.Data.DataColumnCollection.Remove*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove
  nameWithType: DataColumnCollection.Remove
- uid: System.Data.DataColumnCollection.RemoveAt*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataColumnCollection.RemoveAt
