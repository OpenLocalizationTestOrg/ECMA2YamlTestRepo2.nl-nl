### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.OSFeature
  id: OSFeature
  children:
  - System.Windows.Forms.OSFeature.#ctor
  - System.Windows.Forms.OSFeature.Feature
  - System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  - System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  - System.Windows.Forms.OSFeature.LayeredWindows
  - System.Windows.Forms.OSFeature.Themes
  langs:
  - csharp
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
  type: Class
  summary: "Bevat specifieke besturingssysteem-functie query&quot;s."
  remarks: "Gebruik de `static` exemplaar van deze klasse die is opgegeven in de <xref:System.Windows.Forms.OSFeature.Feature%2A>eigenschap query voor besturingssysteemfuncties.</xref:System.Windows.Forms.OSFeature.Feature%2A> U kunt een exemplaar van deze klasse kan niet maken.       Aanroepen om te bepalen welke versie van een functie, de <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>methode.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Aanroepen om te bepalen of een functie of een specifieke versie aanwezig is, de <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>methode en geeft u de functie om te zoeken met de functie-id&quot;s opgegeven in deze klasse.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example uses OSFeature to query the operating system to determine if the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature is installed. The example presents two different ways of checking to see whether the feature is present. In the first method, `myVersion` is checked to see if it is `null`. If the version is `null`, the feature is not installed. In the second method, the example calls the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to see if the feature is installed. The results are displayed in a text box.  \n  \n This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/t-system.windows.forms.o_0_1.cs)]\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.o_0_1.vb)]\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/t-system.windows.forms.o_0_1.cpp)]"
  syntax:
    content: 'public class OSFeature : System.Windows.Forms.FeatureSupport'
  inheritance:
  - System.Object
  - System.Windows.Forms.FeatureSupport
  implements: []
  inheritedMembers:
  - System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> klasse."
  remarks: "Deze klasse kan niet worden gemaakt. Om te vragen voor besturingssysteemfuncties, gebruiken de `static` exemplaar van de <xref:System.Windows.Forms.OSFeature>opgegeven in deze klasse.</xref:System.Windows.Forms.OSFeature>"
  syntax:
    content: protected OSFeature ();
    parameters: []
  overload: System.Windows.Forms.OSFeature.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Feature
  id: Feature
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Haalt een <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> exemplaar van de <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> klasse moet worden gebruikt voor functie-query&quot;s. Deze eigenschap is alleen-lezen."
  remarks: "Gebruik deze `static` eigenschap query voor besturingssysteemfuncties opgeven. U kunt een exemplaar van deze klasse kan niet maken.       Aanroepen om te bepalen welke versie van een functie, de <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>methode.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Aanroepen om te bepalen of een functie of een specifieke versie aanwezig is, de <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>methode en geeft u de functie om te zoeken met de functie-id&quot;s opgegeven in deze klasse.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/p-system.windows.forms.o_3_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/p-system.windows.forms.o_3_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.o_3_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.OSFeature Feature { get; }
    return:
      type: System.Windows.Forms.OSFeature
      description: "Een exemplaar van de <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> klasse."
  overload: System.Windows.Forms.OSFeature.Feature*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  id: GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee haalt u de versie van de opgegeven functie die momenteel beschikbaar op het systeem."
  remarks: "Gebruik de <xref:System.Windows.Forms.OSFeature.Feature%2A>eigenschap, de `static` exemplaar van <xref:System.Windows.Forms.OSFeature>opgegeven in deze klasse, een query voor het versienummer van een functie.</xref:System.Windows.Forms.OSFeature> </xref:System.Windows.Forms.OSFeature.Feature%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/m-system.windows.forms.o_2_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/m-system.windows.forms.o_2_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_2_1.vb)]"
  syntax:
    content: public override Version GetVersionPresent (object feature);
    parameters:
    - id: feature
      type: System.Object
      description: "De functie waarvan de versie wordt aangevraagd, ofwel <xref href=&quot;System.Windows.Forms.OSFeature.LayeredWindows&quot;> </xref> of <xref href=&quot;System.Windows.Forms.OSFeature.Themes&quot;> </xref>."
    return:
      type: System.Version
      description: "Een <xref:System.Version>die de versie van de opgegeven besturingssysteem functie die momenteel beschikbaar op het systeem; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de functie is niet gevonden.</xref:System.Version>"
  overload: System.Windows.Forms.OSFeature.GetVersionPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  id: IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Haalt een waarde die aangeeft of het besturingssysteem de opgegeven functie of de metriek ondersteunt."
  remarks: "Meestal gebruikt u de methode IsPresent om te bepalen of het besturingssysteem ondersteunt de bepaalde functie of de metrische gegevens die zijn ge√Ødentificeerd door `enumValue`. Op basis van de geretourneerde waarde van IsPresent, zou u voorwaardelijke bewerkingen uitvoeren in uw code. Bijvoorbeeld, als u deze methode aanroept met een parameterwaarde van <xref:System.Windows.Forms.SystemParameter>retourneert `true`, kunt u de eigenaar getekende menu&quot;s in uw toepassing in een platte style.</xref:System.Windows.Forms.SystemParameter>       Toegang tot sommige functies of metrische gegevens kunt uitzonderingen activeren als ze niet beschikbaar is op een specifieke besturingssysteemversie zijn. In dit geval eerst gebruiken de bijbehorende <xref:System.Windows.Forms.SystemParameter>opsommingswaarde, samen met IsPresent om te bepalen of de metriek wordt ondersteund.</xref:System.Windows.Forms.SystemParameter> Bijvoorbeeld: call IsPresent met <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>voordat u de <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName>eigenschapswaarde.</xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> </xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>"
  example:
  - "The following code example demonstrates how to use the IsPresent method with the <xref:System.Windows.Forms.SystemParameter> enumeration. The example determines if the operating system supports the `CaretWidth` metric before calling the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/cpp/m-system.windows.forms.o_0_1.cpp)]\n [!code-cs[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/csharp/m-system.windows.forms.o_0_1.cs)]\n [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_1.vb)]  \n[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/cpp/m-system.windows.forms.o_0_2.cpp)]\n[!code-cs[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/csharp/m-system.windows.forms.o_0_2.cs)]\n[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_2.vb)]"
  syntax:
    content: public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);
    parameters:
    - id: enumVal
      type: System.Windows.Forms.SystemParameter
      description: "Een <xref href=&quot;System.Windows.Forms.SystemParameter&quot;> </xref> die de functie om te zoeken naar vertegenwoordigt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de functie beschikbaar op het systeem is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.OSFeature.IsPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  id: LayeredWindows
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee geeft u de functie windows gelaagd, op het hoogste niveau. Dit veld is alleen-lezen."
  remarks: "Een gelaagd venster kan transparant of doorzichtig worden gemaakt door het besturingssysteem. Ondersteuning voor gelaagde windows is ge√Øntroduceerd in Windows 2000. Voor meer informatie raadpleegt u de &quot;gelaagde Windows: een nieuwe manier om te gebruik doorschijnendheid en transparantie gevolgen in Windows-toepassingen&quot; in de Platform SDK-documentatie op http://msdn.microsoft.com.       Om te bepalen of het gelaagde windows-onderdeel is ge√Ønstalleerd, gebruikt de <xref:System.Windows.Forms.OSFeature.Feature%2A>eigenschap de basisklasse-methode aan te roepen <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>met LayeredWindows als de functie opzoeken for.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> </xref:System.Windows.Forms.OSFeature.Feature%2A>       U kunt ook kunt u controleren of de functie is ge√Ønstalleerd door het aanroepen van de <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>methode met LayeredWindows als de functie vinden.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  example:
  - "The following example determines whether the current system supports layered windows. The base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> is called with LayeredWindows as the feature to look for. The result is displayed in a text box. This code assumes `textBox1` has been instantiated and placed on a form.  \n  \n [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/visualbasic/f-system.windows.forms.o_1.vb)]\n [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/cpp/f-system.windows.forms.o_1.cpp)]\n [!code-cs[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/csharp/f-system.windows.forms.o_1.cs)]"
  syntax:
    content: public static readonly object LayeredWindows;
    return:
      type: System.Object
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Themes
  id: Themes
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hiermee geeft u de functie besturingssysteem thema&quot;s. Dit veld is alleen-lezen."
  remarks: "Een thema is een verzameling visuele interface-instellingen die omvatten achtergrond, cursors, lettertypen, geluiden en pictogrammen voor het eerst ge√Øntroduceerd in Microsoft Plus! voor Windows 95. .NET Framework ondersteunt niet direct manipuleren thema&quot;s, hoewel deze beschikt over uitgebreide ondersteuning voor visuele stijlen in de <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName>naamruimte.</xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> Zie de onderwerpen thema&quot;s en visuele stijlen en visuele stijlen referentie in de Win32-SDK voor meer informatie over Windows-thema&quot;s.       Om te bepalen of de functie thema&quot;s is ge√Ønstalleerd, de basisklasse-methode aanroept <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>met thema&quot;s als de functie for. opzoeken</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>       U kunt ook kunt u controleren of de functie is ge√Ønstalleerd door het aanroepen van de <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>methode met thema&quot;s als de functie vinden.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  syntax:
    content: public static readonly object Themes;
    return:
      type: System.Object
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: System.Windows.Forms.FeatureSupport
- uid: System.Windows.Forms.OSFeature.#ctor
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
- uid: System.Windows.Forms.OSFeature.Feature
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
- uid: System.Windows.Forms.OSFeature
  parent: System.Windows.Forms
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.SystemParameter
  parent: System.Windows.Forms
  isExternal: false
  name: SystemParameter
  nameWithType: SystemParameter
  fullName: System.Windows.Forms.SystemParameter
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
- uid: System.Windows.Forms.OSFeature.Themes
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
- uid: System.Windows.Forms.OSFeature.#ctor*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature.OSFeature
- uid: System.Windows.Forms.OSFeature.Feature*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent
  nameWithType: OSFeature.GetVersionPresent
- uid: System.Windows.Forms.OSFeature.IsPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent
  nameWithType: OSFeature.IsPresent
