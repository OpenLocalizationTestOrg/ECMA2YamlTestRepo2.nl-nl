### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.WindowInteropHelper
  id: WindowInteropHelper
  children:
  - System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)
  - System.Windows.Interop.WindowInteropHelper.EnsureHandle
  - System.Windows.Interop.WindowInteropHelper.Handle
  - System.Windows.Interop.WindowInteropHelper.Owner
  langs:
  - csharp
  name: WindowInteropHelper
  nameWithType: WindowInteropHelper
  fullName: System.Windows.Interop.WindowInteropHelper
  type: Class
  summary: "Interoperabiliteit tussen helpt [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] en [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] code."
  remarks: "Leden van deze klasse kan de aanroeper interne toegang hebben tot de [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] HWND en de bovenliggende HWND van een [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</xref:System.Windows.Window>  De juiste beveiligingscontroles worden uitgevoerd door leden.       Deze klasse gebruiken wanneer u een meer specifieke object op basis van de HWND moet.       Een voorbeeldscenario is als u nodig hebt voor het hosten van een [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] dialoogvenster in een [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] toepassing. Initialiseren van de WindowInteropHelper met een [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] window-object voor het dialoogvenster. Krijgt u de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] van vensterkoppeling (HWND) van de <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>eigenschap en geeft u de eigenaar voor de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] -venster met de <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A>eigenschap.</xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> </xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> De volgende voorbeeldcode laat zien hoe WindowInteropHelper gebruiken bij het hosten van een [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] dialoogvenster in een [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] toepassing.       [!code-cs[CorePseudocode #WindowInteropHelper](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#windowinterophelper)][!code-vb[CorePseudocode #WindowInteropHelper](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#windowinterophelper) ] een ander scenario wordt ondersteund door deze klasse is op te halen een <xref:System.Windows.Interop.HwndSource>object uit een [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>object.</xref:System.Windows.Window> </xref:System.Windows.Interop.HwndSource>   De <xref:System.Windows.Interop.HwndSource>schakelt verwerking van directe [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] berichten via de <xref:System.Windows.Interop.HwndSource.AddHook%2A>methode.</xref:System.Windows.Interop.HwndSource.AddHook%2A> </xref:System.Windows.Interop.HwndSource> Met behulp van <xref:System.Windows.Interop.HwndSource>en <xref:System.Windows.Interop.HwndSource.AddHook%2A>in plaats van een <xref:System.Windows.Window>kunt u nog steeds berichten die u hebt geen equivalent of verwerkingstijd in verwerken [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)].</xref:System.Windows.Window> </xref:System.Windows.Interop.HwndSource.AddHook%2A> </xref:System.Windows.Interop.HwndSource> Een WindowInteropHelper maken met de <xref:System.Windows.Window>bron, vervolgens aanroepen <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>op de WindowInteropHelper van HWND tot <xref:System.Windows.Interop.HwndSource>.</xref:System.Windows.Interop.HwndSource> ophalen</xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> </xref:System.Windows.Window>"
  syntax:
    content: public sealed class WindowInteropHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)
  id: '#ctor(System.Windows.Window)'
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: WindowInteropHelper(Window)
  nameWithType: WindowInteropHelper.WindowInteropHelper(Window)
  fullName: System.Windows.Interop.WindowInteropHelper.WindowInteropHelper(Window)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Interop.WindowInteropHelper&quot;> </xref> klasse voor een opgegeven [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] venster."
  remarks: "Het venster kan bestaan uit een dialoogvenster of een venster die anders niet geschikt voor wordt gehost binnen de grenzen van een [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] toepassing."
  syntax:
    content: public WindowInteropHelper (System.Windows.Window window);
    parameters:
    - id: window
      type: System.Windows.Window
      description: "Een [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] window-object."
  overload: System.Windows.Interop.WindowInteropHelper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.EnsureHandle
  id: EnsureHandle
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: EnsureHandle()
  nameWithType: WindowInteropHelper.EnsureHandle()
  fullName: System.Windows.Interop.WindowInteropHelper.EnsureHandle()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Als de HWND is nog niet gemaakt, maakt de HWND van het venster."
  remarks: "De methode EnsureHandle gebruiken als u wilt scheiden venster ingang (HWND) gemaakt op basis van de werkelijke met vermelding van de beheerde <xref:System.Windows.Window>.</xref:System.Windows.Window> Dit is handig wanneer u een automatiseringsclient die de taken ervan zonder de noodzaak hebt voor het weergeven van een venster kunt uitvoeren.       Als het systeemeigen venster nog niet is gemaakt, deze methode maakt u het systeemeigen venster stelt de <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>eigenschap en retourneert de HWND.</xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> Als het systeemeigen venster al is gemaakt, wordt de ingang van het bestaande systeemeigen venster geretourneerd.       Als de systeemeigen venster wordt gemaakt als gevolg van deze methode aanroept, de <xref:System.Windows.Window.SourceInitialized>gebeurtenis is opgetreden.</xref:System.Windows.Window.SourceInitialized>       Opvragen van de <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>eigenschap nadat de EnsureHandle-methode is aangeroepen retourneert de bestaande vensterkoppeling.</xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> De visuele boomstructuur is niet gekoppeld aan het venster pas na de <xref:System.Windows.Window.Show%2A>methode wordt aangeroepen.</xref:System.Windows.Window.Show%2A>       Aanroepen van de methode EnsureHandle meer dan één keer maakt geen nieuwe venster verwerkt. De methode EnsureHandle wordt aangeroepen wanneer de ingang al door een aanroep naar gemaakt is de <xref:System.Windows.Window.Show%2A>methode geen maakt een nieuwe vensterkoppeling.</xref:System.Windows.Window.Show%2A> Een systeemeigen venster wordt alleen gemaakt wanneer er geen ingang bestaat wanneer de EnsureHandle-methode wordt aangeroepen.       Venster Eigenschappen die zijn ingesteld met behulp van systeemeigen venster API&quot;s via p/invoke mogelijk niet weergegeven in het venster van beheerde API&quot;s. Bijvoorbeeld, als u het venster op het hoogste niveau worden met behulp van de systeemeigen MS_EX_TOPMOST vlag nadat de EnsureHandle-methode is aangeroepen, stelt de <xref:System.Windows.Window.Topmost%2A>eigenschap kan niet worden gegarandeerd in overeenstemming met de instelling van de systeemeigen.</xref:System.Windows.Window.Topmost%2A>"
  syntax:
    content: public IntPtr EnsureHandle ();
    parameters: []
    return:
      type: System.IntPtr
      description: "Een <xref:System.IntPtr>die staat voor de HWND.</xref:System.IntPtr>"
  overload: System.Windows.Interop.WindowInteropHelper.EnsureHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.Handle
  id: Handle
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: Handle
  nameWithType: WindowInteropHelper.Handle
  fullName: System.Windows.Interop.WindowInteropHelper.Handle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Haalt de vensterkoppeling voor een [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] venster dat wordt gebruikt om dit te maken <xref href=&quot;System.Windows.Interop.WindowInteropHelper&quot;> </xref>."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "De [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] vensterkoppeling (HWND)."
  overload: System.Windows.Interop.WindowInteropHelper.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.Owner
  id: Owner
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: Owner
  nameWithType: WindowInteropHelper.Owner
  fullName: System.Windows.Interop.WindowInteropHelper.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Opgehaald of ingesteld van de ingang van de [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] eigenaarsvenster."
  remarks: "U kunt windows een nieuw bovenliggend element door het instellen van deze eigenschap. Net als is ingesteld op true voor algemene [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] programmeren, komen niet nieuw bovenliggend element windows die al in gebruik."
  syntax:
    content: public IntPtr Owner { get; set; }
    return:
      type: System.IntPtr
      description: "De eigenaar vensterkoppeling (HWND)."
  overload: System.Windows.Interop.WindowInteropHelper.Owner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: WindowInteropHelper(Window)
  nameWithType: WindowInteropHelper.WindowInteropHelper(Window)
  fullName: System.Windows.Interop.WindowInteropHelper.WindowInteropHelper(Window)
- uid: System.Windows.Window
  parent: System.Windows
  isExternal: false
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows.Interop.WindowInteropHelper.EnsureHandle
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: EnsureHandle()
  nameWithType: WindowInteropHelper.EnsureHandle()
  fullName: System.Windows.Interop.WindowInteropHelper.EnsureHandle()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Interop.WindowInteropHelper.Handle
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Handle
  nameWithType: WindowInteropHelper.Handle
  fullName: System.Windows.Interop.WindowInteropHelper.Handle
- uid: System.Windows.Interop.WindowInteropHelper.Owner
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Owner
  nameWithType: WindowInteropHelper.Owner
  fullName: System.Windows.Interop.WindowInteropHelper.Owner
- uid: System.Windows.Interop.WindowInteropHelper.#ctor*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: WindowInteropHelper
  nameWithType: WindowInteropHelper.WindowInteropHelper
- uid: System.Windows.Interop.WindowInteropHelper.EnsureHandle*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: EnsureHandle
  nameWithType: WindowInteropHelper.EnsureHandle
- uid: System.Windows.Interop.WindowInteropHelper.Handle*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Handle
  nameWithType: WindowInteropHelper.Handle
- uid: System.Windows.Interop.WindowInteropHelper.Owner*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Owner
  nameWithType: WindowInteropHelper.Owner
