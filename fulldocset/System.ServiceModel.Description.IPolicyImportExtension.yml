### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IPolicyImportExtension
  id: IPolicyImportExtension
  children:
  - System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: IPolicyImportExtension
  nameWithType: IPolicyImportExtension
  fullName: System.ServiceModel.Description.IPolicyImportExtension
  type: Interface
  summary: "Definieert een methode voor objecten die aangepaste beleidsverklaringen over bindingen importeren."
  remarks: "Implementeert de interface IPolicyImportExtension om te zoeken naar WSDL-informatie beschikbaar is gemaakt door een bepaald eindpunt voor aangepast beleid asserties over de mogelijkheden van eindpunt of vereisten. Normaal gesproken importfunctie van een beleid wordt gezocht naar een specifieke assertion en beide voegt een bindingselement, configureert u een bindingselement of wijzigt het contract voor de ondersteuning van de vereisten van de bevestiging.       In tegenstelling tot de bijbehorende equivalent <xref:System.ServiceModel.Description.IPolicyExportExtension>, IPolicyImportExtension vereist geen implementatie door een <xref:System.ServiceModel.Channels.BindingElement>object; u kunt laden met behulp van het configuratiegedeelte van de client wordt weergegeven in de voorbeelden in deze sectie of programmatisch met toe te voegen aan de <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>constructor.</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Channels.BindingElement> </xref:System.ServiceModel.Description.IPolicyExportExtension>       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]twee objecten wordt doorgegeven aan de <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>methode, een <xref:System.ServiceModel.Description.MetadataImporter>en een <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> </xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> Doorgaans de <xref:System.ServiceModel.Description.PolicyConversionContext>object bevat al de beleidsverklaringen voor elke scope binding.</xref:System.ServiceModel.Description.PolicyConversionContext>       Een implementatie IPolicyImportExtension voert de volgende stappen uit: 1.  Zoekt u de aangepaste TransportBinding waarvoor deze verantwoordelijk is door het aanroepen van de <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, of <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>methoden, afhankelijk van het bereik.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  Hiermee verwijdert u de TransportBinding uit de verzameling verklaring. De <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>methode zoekt, retourneert en verwijdert u de bevestiging in één stap.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  Wijzig de binding-stack of het contract door toe te voegen een vereiste aangepaste <xref:System.ServiceModel.Channels.BindingElement>naar de <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>eigenschap of doordat de <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>eigenschap.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       Stap 2 is belangrijk. Nadat alle beleid importers is aangeroepen, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] controleert op de aanwezigheid van een beleidsverklaringen die blijven. Als dit bestaat, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] wordt ervan uitgegaan dat het importeren van het beleid mislukt is en wordt de bijbehorende binding niet geïmporteerd.      > [!IMPORTANT] > Een leverancier schadelijke metagegevens kunt probeert te verzenden onjuist ingedeelde XML als onderdeel van de metagegevens in een poging te misbruiken importfunctie van een beleid. Het is raadzaam importers worden robuuste voor alle vormen van XML-bestand dat kan worden doorgegeven aan het aangepaste beleid.       Aangepaste <xref:System.ServiceModel.Description.MetadataImporter>implementaties moeten implementeren hun eigen <xref:System.ServiceModel.Description.PolicyConversionContext>object uitpakken van de beleidsverklaringen gekoppeld aan de aangepaste metagegevensindeling.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter>       Als u wilt exporteren en importeren van aangepaste WSDL-elementen die niet beleidsverklaringen, Zie <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>en <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>.</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> </xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>      > [!NOTE] > Kunt u aangepast beleid importers en exportprogramma&quot;s met de [ServiceModel metagegevens-hulpprogramma (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md) met behulp van dezelfde configuratie-elementen in een configuratiebestand en de `/svcutilConfig:<configFile>` optie."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public interface IPolicyImportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  id: ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  langs:
  - csharp
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Hiermee definieert u een methode die u kunt aangepaste beleidsverklaringen importeren en uitvoering bindingelementen toevoegen."
  remarks: "Implementeer de `ImportPolicy` methode beleidsverklaringen downloaden en uitvoeren van een wijziging van het geïmporteerde contract of de binding voor de ondersteuning van de bevestiging. Normaal gesproken reageert een importprogramma beleid op het zoeken van een aangepast beleid verklaring door te configureren of bindingselement in de binding wordt geïmporteerd invoegen.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]twee objecten wordt doorgegeven aan de methode ImportPolicy, een <xref:System.ServiceModel.Description.MetadataImporter>en een <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> Doorgaans de <xref:System.ServiceModel.Description.PolicyConversionContext>object bevat al de beleidsverklaringen voor elke scope binding.</xref:System.ServiceModel.Description.PolicyConversionContext>       Een <xref:System.ServiceModel.Description.IPolicyImportExtension>implementatie voert de volgende stappen uit: 1.</xref:System.ServiceModel.Description.IPolicyImportExtension>  Zoekt u de aangepaste TransportBinding waarvoor deze verantwoordelijk is door het aanroepen van de <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, of <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>methoden, afhankelijk van het bereik.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  Hiermee verwijdert u de TransportBinding uit de verzameling verklaring. De <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>methode zoekt, retourneert en verwijdert u de bevestiging in één stap.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  Hiermee wijzigt u de binding-stack of het contract door toe te voegen een vereiste aangepaste <xref:System.ServiceModel.Channels.BindingElement>naar de <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>eigenschap of doordat de <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>eigenschap.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       Stap 2 is belangrijk. Nadat alle beleid importers is aangeroepen, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] controleert op de aanwezigheid van een beleidsverklaringen die blijven. Als dit bestaat, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] wordt ervan uitgegaan dat het importeren van het beleid mislukt is en wordt de bijbehorende binding niet geïmporteerd."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: importer
      type: System.ServiceModel.Description.MetadataImporter
      description: "De <xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref> object in gebruik."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "De <xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> die bevat de beleidsverklaringen die kunnen worden geïmporteerd en de verzamelingen van bindingelementen die bindingelementen implementeren kan worden toegevoegd."
  overload: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataImporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy
  nameWithType: IPolicyImportExtension.ImportPolicy
