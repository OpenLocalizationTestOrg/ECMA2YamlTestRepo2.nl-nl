### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.ClientFormsIdentity
  id: ClientFormsIdentity
  children:
  - System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  - System.Web.ClientServices.ClientFormsIdentity.Dispose
  - System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  - System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  - System.Web.ClientServices.ClientFormsIdentity.Name
  - System.Web.ClientServices.ClientFormsIdentity.Provider
  - System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  langs:
  - csharp
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity
  fullName: System.Web.ClientServices.ClientFormsIdentity
  type: Class
  summary: "Hiermee geeft u een gebruikers-id voor de toepassingsservices client met behulp van formulierverificatie geverifieerd."
  remarks: "De functie client toepassing services maakt gebruik van deze klasse vertegenwoordigt een geverifieerde gebruiker. Wanneer u uw toepassing gebruik toepassing services en formulieren clientverificatie configureert, kunt u een gebruiker verifiëren met het aanroepen van de `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName>methode.</xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName> Na verificatie vindt u een verwijzing naar het huidige exemplaar van ClientFormsIdentity via de <xref:System.Security.Principal.IPrincipal.Identity%2A>eigenschap van de <xref:System.Security.Principal.IPrincipal>opgehaald via de `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.Identity%2A> Zie voor meer informatie [Client toepassingsservices](~/add/includes/ajax-current-ext-md.md).       U wordt gewoonlijk toegang tot een ClientFormsIdentity-object als een <xref:System.Security.Principal.IIdentity>verwijzing naar het voorkomen van een directe afhankelijkheid van deze klasse.</xref:System.Security.Principal.IIdentity> U kunt bepalen of een gebruiker wordt geverifieerd door het controleren van de <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>eigenschap van de identiteit.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> De gebruiker kan echter worden geverifieerd voor Windows, maar niet voor de toepassingsservices client. Om te bepalen of de gebruiker wordt geverifieerd voor client-toepassingsservices, u moet ook controleren of de <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>eigenschapswaarde is &quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>       U moet een verwijzing naar een expliciete ClientFormsIdentity gebruiken om aan te roepen de <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>methode die niet is gedefinieerd door de <xref:System.Security.Principal.IIdentity>interface.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>"
  example:
  - "The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n> [!NOTE]\n>  The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only. Because it does not have a return value, it cannot indicate whether revalidation has failed. Revalidation can fail, for example, if the user credentials have changed on the server. In this case, you might want to include code that explicitly validates users after a service call fails. For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: 'public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  id: '#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)'
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref> klasse."
  syntax:
    content: public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de geverifieerde gebruiker."
    - id: password
      type: System.String
      description: "Het wachtwoord van de geverifieerde gebruiker."
    - id: provider
      type: System.Web.Security.MembershipProvider
      description: "De lidmaatschapsprovider gebruikt voor het verifiëren van de gebruiker."
    - id: authenticationType
      type: System.String
      description: "Het type verificatie dat wordt gebruikt."
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebruiker is geverifieerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: authenticationCookies
      type: System.Net.CookieContainer
      description: "De cookies opgehaald uit de verificatieservice."
  overload: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  id: AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Hiermee haalt u een verzameling van de cookies die is opgehaald uit de verificatieservice."
  remarks: "Deze eigenschap is niet bedoeld voor gebruik in uw toepassingscode. U kunt nuttige cookies opgehaald via deze eigenschap niet wijzigen, en bevatten geen nuttige informatie."
  syntax:
    content: public System.Net.CookieContainer AuthenticationCookies { get; }
    return:
      type: System.Net.CookieContainer
      description: "De cookies opgehaald uit de verificatieservice."
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Hiermee wordt het type verificatie dat wordt gebruikt voor het verifiëren van de gebruiker."
  remarks: "U wordt gewoonlijk toegang tot een <xref:System.Web.ClientServices.ClientFormsIdentity>object als een <xref:System.Security.Principal.IIdentity>verwijzing naar het voorkomen van een directe afhankelijkheid van deze klasse.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> U kunt bepalen of een gebruiker wordt geverifieerd door het controleren van de <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>eigenschap van de identiteit.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> De gebruiker kan echter worden geverifieerd voor Windows, maar niet voor de toepassingsservices client. Om te bepalen of de gebruiker wordt geverifieerd voor client-toepassingsservices, u moet ook controleren of de <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>eigenschapswaarde is &quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Zie voor meer informatie de <xref:System.Web.ClientServices.ClientFormsIdentity>overzicht van de klasse.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public string AuthenticationType { get; }
    return:
      type: System.String
      description: "Het type verificatie dat wordt gebruikt voor het verifiëren van de gebruiker."
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  id: Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref>."
  remarks: "Dispose aanroepen wanneer u klaar bent met de <xref:System.Web.ClientServices.ClientFormsIdentity>.</xref:System.Web.ClientServices.ClientFormsIdentity> De methode Dispose verlaat de <xref:System.Web.ClientServices.ClientFormsIdentity>in een onbruikbare status.</xref:System.Web.ClientServices.ClientFormsIdentity> Na Dispose aanroepen, moet u alle verwijzingen naar vrijgeven de <xref:System.Web.ClientServices.ClientFormsIdentity>zodat het geheugen door de garbage collector vrijmaken kunt die de <xref:System.Web.ClientServices.ClientFormsIdentity>is bepaald dat zich bevindt.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> Zie voor meer informatie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Altijd aanroep verwijderen voordat u uw laatste verwijzing naar de <xref:System.Web.ClientServices.ClientFormsIdentity>.</xref:System.Web.ClientServices.ClientFormsIdentity> vrijgeven Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de <xref:System.Web.ClientServices.ClientFormsIdentity>van het object `Finalize` methode.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()` methode en de <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A> `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de `disposing` parameter ingesteld op `true`. <xref:System.Object.Finalize%2A>roept `Dispose` met `disposing` ingesteld op `false`.</xref:System.Object.Finalize%2A>       Wanneer de `disposing` parameter is ingesteld op true, wordt deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Web.ClientServices.ClientFormsIdentity>verwijzingen.</xref:System.Web.ClientServices.ClientFormsIdentity> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Haalt een waarde die aangeeft of de gebruiker is geverifieerd."
  remarks: "U wordt gewoonlijk toegang tot een <xref:System.Web.ClientServices.ClientFormsIdentity>object als een <xref:System.Security.Principal.IIdentity>verwijzing naar het voorkomen van een directe afhankelijkheid van deze klasse.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> U kunt bepalen of een gebruiker wordt geverifieerd door het controleren van de <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>eigenschap van de identiteit.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> De gebruiker kan echter worden geverifieerd voor Windows, maar niet voor de toepassingsservices client. Om te bepalen of de gebruiker wordt geverifieerd voor client-toepassingsservices, u moet ook controleren of de <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>eigenschapswaarde is &quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Zie voor meer informatie de <xref:System.Web.ClientServices.ClientFormsIdentity>overzicht van de klasse.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebruiker is geverifieerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  id: Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Hiermee haalt u de naam van de gebruiker."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "De naam van de gebruiker."
  overload: System.Web.ClientServices.ClientFormsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  id: Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Hiermee haalt u de lidmaatschapsprovider die wordt gebruikt voor het verifiëren van de gebruiker."
  syntax:
    content: public System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "De lidmaatschapsprovider die wordt gebruikt voor het verifiëren van de gebruiker."
  overload: System.Web.ClientServices.ClientFormsIdentity.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  id: RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Achtergrond verifieert de gebruiker met behulp van referenties in de cache."
  remarks: "Wanneer u formulierverificatie gebruiken voor het valideren van de huidige gebruiker, de <xref:System.Web.ClientServices.ClientFormsIdentity>klasse slaat de referenties van de gebruiker, zolang de toepassing wordt uitgevoerd.</xref:System.Web.ClientServices.ClientFormsIdentity> De gebruiker is echter alleen geverifieerd totdat de verificatiecookie verloopt. Nadat de cookie verloopt, moet de gebruiker opnieuw voor toegang tot de externe functies of webservices van de instellingen worden gevalideerd. U kunt de **geavanceerde instellingen voor Services** in het dialoogvenster voor het configureren van uw toepassing automatisch opnieuw valideren van de gebruiker, zoals beschreven in [hoe: Client toepassingsservices configureren](~/add/includes/ajax-current-ext-md.md). Echter, als u uw toepassing te voldoen aan de verlooptijd van cookie configureert, u kunt programmatisch opnieuw valideren de gebruiker door het aanroepen van de methode RevalidateUser. Deze methode is ook handig wanneer u overschakelt van de offline modus op de onlinemodus, omdat de toepassing is afgesloten omlaag even offline.      > [!NOTE] > De RevalidateUser methode is alleen voor uw gemak. Omdat er geen retourwaarde, kan niet het aan te geven of hervalidatie is mislukt. Hervalidatie kan bijvoorbeeld mislukken als de referenties van de gebruiker zijn gewijzigd op de server. In dit geval als u wilt opnemen code die expliciet gebruikers valideert nadat een aanroep van de service is mislukt. Zie voor meer informatie de sectie instellingen voor toegang tot Web in [Walkthrough: Client-toepassing-Services](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: public void RevalidateUser ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity.ClientFormsIdentity
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose
  nameWithType: ClientFormsIdentity.Dispose
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser
  nameWithType: ClientFormsIdentity.RevalidateUser
