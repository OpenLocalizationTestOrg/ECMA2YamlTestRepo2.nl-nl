### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityManager
  id: SecurityManager
  children:
  - System.Security.SecurityManager.CheckExecutionRights
  - System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture
  - System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  - System.Security.SecurityManager.IsGranted(System.Security.IPermission)
  - System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  - System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  - System.Security.SecurityManager.PolicyHierarchy
  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])
  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  - System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.SavePolicy
  - System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)
  - System.Security.SecurityManager.SecurityEnabled
  langs:
  - csharp
  name: SecurityManager
  nameWithType: SecurityManager
  fullName: System.Security.SecurityManager
  type: Class
  summary: "Het belangrijkste toegangspunt biedt voor interactie met het beveiligingssysteem klassen. Deze klasse kan niet worden overgenomen."
  remarks: "Beveiliging biedt methoden voor het openen en bewerken van de configuratie van het beveiligingsbeleid. U maken geen exemplaren van SecurityManager."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class SecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityManager.CheckExecutionRights
  id: CheckExecutionRights
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: CheckExecutionRights
  nameWithType: SecurityManager.CheckExecutionRights
  fullName: System.Security.SecurityManager.CheckExecutionRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de code moet hebben <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> om te kunnen uitvoeren."
  remarks: "Als deze eigenschap is `false`, zelfs als deze code zonder <xref:System.Security.Permissions.SecurityPermissionFlag>kunt uitvoeren.</xref:System.Security.Permissions.SecurityPermissionFlag> Controle van uitvoering kostbaar en de voordelen van vertraagde beleid op te lossen kunt elimineren. Deze eigenschap is opgegeven voor het uitschakelen van uitvoering controleren wanneer deze nodig is.       Een wijziging in deze eigenschap is niet persistent tot <xref:System.Security.SecurityManager.SavePolicy%2A>is aangeroepen.</xref:System.Security.SecurityManager.SavePolicy%2A> Nieuwe processen wordt niet be√Ønvloed door een wijziging, totdat deze wordt bewaard in het register."
  syntax:
    content: public static bool CheckExecutionRights { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de code moet zijn <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> om te kunnen uitvoeren; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityManager.CheckExecutionRights*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture
  id: CurrentThreadRequiresSecurityContextCapture
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: CurrentThreadRequiresSecurityContextCapture()
  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()
  fullName: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Bepaalt of de huidige thread een beveiliging context vastleggen vereist als de beveiligingsstatus opnieuw te worden gemaakt op een later tijdstip."
  remarks: "U kunt de methode CurrentThreadRequiresSecurityContextCapture voordat u gevoelige gegevens die worden verkregen na geslaagde beveiliging eisen cache.       Als de <xref:System.Security.CodeAccessPermission.Assert%2A>methode is aangeroepen hoger op de stack, de gegevens mag niet worden opgeslagen zonder het vastleggen van de bijbehorende beveiligingscontext.</xref:System.Security.CodeAccessPermission.Assert%2A> Anders, gevoelige gegevens die worden verkregen onder een <xref:System.Security.CodeAccessPermission.Assert%2A>mogelijk beschikbaar voor code die niet meer met die worden uitgevoerd <xref:System.Security.CodeAccessPermission.Assert%2A>aanwezig.</xref:System.Security.CodeAccessPermission.Assert%2A> </xref:System.Security.CodeAccessPermission.Assert%2A>      > [!IMPORTANT] > De retourwaarde betrouwbaar is, alleen wanneer het `false`, wat betekent dat de thread is gegarandeerd niet vereisen een beveiliging context vastleggen. De methode retourneert waar wanneer een beveiliging context vastleggen niet nodig is, om te voorkomen dat beveiligingsproblemen.       CurrentThreadRequiresSecurityContextCapture is risicovolle omdat de belangrijkste taak is om te voorkomen dat onnodige beveiligingscontext worden vastgelegd, waarmee wordt aangegeven dat de code met behulp van het vertrouwelijke en moet worden gecontroleerd."
  syntax:
    content: public static bool CurrentThreadRequiresSecurityContextCapture ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Als de stack geen gedeeltelijk vertrouwde toepassingsdomeinen, geen gedeeltelijk vertrouwde assembly&quot;s en er is geen bevat actieve <> </> *> of <> </> *> modificaties; <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> als de common language runtime kan niet worden gegarandeerd dat de stack geen van deze bevat."
  overload: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)
  id: GetStandardSandbox(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: GetStandardSandbox(Evidence)
  nameWithType: SecurityManager.GetStandardSandbox(Evidence)
  fullName: System.Security.SecurityManager.GetStandardSandbox(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee haalt u een machtigingenset die is veilig om toegang te verlenen aan een toepassing die de opgegeven bewijs heeft."
  remarks: "> [!NOTE]> In de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], de host in bewijsmateriaal `evidence` moet bevatten <xref:System.Security.Policy.Zone?displayProperty=fullName>bewijs.</xref:System.Security.Policy.Zone?displayProperty=fullName>   >> In de volgende tabel bevat de machtigingensets die worden geretourneerd voor elke zone.      | Zone | Machtigingenset |   |----------|--------------------|   | <xref:System.Security.SecurityZone>| `FullTrust`|   | <xref:System.Security.SecurityZone>| `LocalIntranet`|   | <xref:System.Security.SecurityZone>| `Internet`|   | <xref:System.Security.SecurityZone>| `Internet`|   | <xref:System.Security.SecurityZone>| Geen |   | <xref:System.Security.SecurityZone>| Geen |       Andere bewijsmateriaal zoals <xref:System.Security.Policy.Url>of <xref:System.Security.Policy.Site>, kunnen worden overwogen.</xref:System.Security.Policy.Site> </xref:System.Security.Policy.Url> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone>       De geretourneerde machtigingenset kan worden gebruikt door een sandbox met de toepassing uit te voeren. Houd er rekening mee dat deze methode geen beleid geeft, maar een host om te bepalen of de machtigingenset aangevraagd door een toepassing redelijke helpt. Deze methode kan worden gebruikt voor een zone worden toegewezen aan een sandbox."
  example:
  - "The following example shows how to use the GetStandardSandbox method to obtain the permission set for a sandboxed application. For more information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[sandboxingApis#1](~/add/codesnippet/visualbasic/2aad9996-0182-4c3d-a405-_1.vb)]\n [!code-cs[sandboxingApis#1](~/add/codesnippet/csharp/2aad9996-0182-4c3d-a405-_1.cs)]"
  syntax:
    content: public static System.Security.PermissionSet GetStandardSandbox (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De host bewijs worden vergeleken met een machtigingenset."
    return:
      type: System.Security.PermissionSet
      description: "Een machtigingenset die kan worden gebruikt als een machtigingenset voor de toepassing die de opgegeven bewijs heeft."
  overload: System.Security.SecurityManager.GetStandardSandbox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  id: GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: GetZoneAndOrigin(ArrayList,ArrayList)
  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
  fullName: System.Security.SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee haalt de toegekende zone identiteit en machtigingensets URL-identiteit voor de huidige assembly."
  remarks: "Het aanbevolen alternatief is voor deze methode is het gebruik van de URL en de Zone bewijs van de uitvoerende assembly om aan te roepen <xref:System.Security.SecurityManager.ResolvePolicy%2A>voor elk type bewijs.</xref:System.Security.SecurityManager.ResolvePolicy%2A> De machtigingensets geretourneerd door de <xref:System.Security.SecurityManager.ResolvePolicy%2A>aanroepen identificeren gemachtigd om de uitvoerende assembly op basis van de zone en de URL van de oorsprong.</xref:System.Security.SecurityManager.ResolvePolicy%2A>      > [!NOTE] > Dit lid maakt een verbinding is vereist voor de ECMA openbare sleutel geen geldige cryptografische sleutel maar een pseudo-sleutel is. Binnen het .NET Framework de verbinding is vereist voor de sleutel van de pseudo ECMA automatisch geconverteerd naar een verbinding is vereist voor de openbare sleutel van Microsoft. De uitzondering is gebaseerd op de Microsoft openbare sleutel, niet de ECMA pseudo-sleutel."
  syntax:
    content: public static void GetZoneAndOrigin (out System.Collections.ArrayList zone, out System.Collections.ArrayList origin);
    parameters:
    - id: zone
      type: System.Collections.ArrayList
      description: "Een output-parameter bevat een <xref href=&quot;System.Collections.ArrayList&quot;> </xref> van toegekende <xref:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone*>objecten.</xref:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone*>"
    - id: origin
      type: System.Collections.ArrayList
      description: "Een output-parameter bevat een <xref href=&quot;System.Collections.ArrayList&quot;> </xref> van toegekende <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref> objecten."
  overload: System.Security.SecurityManager.GetZoneAndOrigin*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De aanvraag voor <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> is mislukt."
  platform:
  - net462
- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)
  id: IsGranted(System.Security.IPermission)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: IsGranted(IPermission)
  nameWithType: SecurityManager.IsGranted(IPermission)
  fullName: System.Security.SecurityManager.IsGranted(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee wordt bepaald of een machtiging verleend aan de aanroeper."
  remarks: "Toewijzing van machtigingen, wordt bepaald door het beleid en verschilt van een vraag onderworpen aan onderdrukkingen, zoals een assert. Enkel tests IsGranted ook het verlenen van de aanroepende codeassembly heeft, onafhankelijk van andere aanroepfuncties op de stack."
  syntax:
    content: public static bool IsGranted (System.Security.IPermission perm);
    parameters:
    - id: perm
      type: System.Security.IPermission
      description: "De machtiging wilt vergelijken met het verlenen van de aanroepfunctie."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de machtigingen te krijgen tot de aanroeper de machtiging opnemen <code> perm </code>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityManager.IsGranted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  id: LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: LoadPolicyLevelFromFile(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Laadt een <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> uit het opgegeven bestand."
  syntax:
    content: public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromFile (string path, System.Security.PolicyLevelType type);
    parameters:
    - id: path
      type: System.String
      description: "Het fysieke pad naar een bestand met gegevens van het beveiligingsbeleid."
    - id: type
      type: System.Security.PolicyLevelType
      description: "Een van de opsommingswaarden waarmee het type van het beleidsniveau moet worden geladen."
    return:
      type: System.Security.Policy.PolicyLevel
      description: "De geladen beleidsniveau."
  overload: System.Security.SecurityManager.LoadPolicyLevelFromFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het bestand aangegeven door de <code> path </code> parameter bestaat niet."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>.       - of - de code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - de code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - of - de code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode code access security (CAS)-beleid gebruikt dat is verouderd in de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Om in te schakelen CAS-beleid voor compatibiliteit met eerdere versies van .NET Framework, gebruiken de [ &lt;legacyCasPolicy&gt; element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  id: LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: LoadPolicyLevelFromString(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Laadt een <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> van de opgegeven tekenreeks."
  syntax:
    content: public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromString (string str, System.Security.PolicyLevelType type);
    parameters:
    - id: str
      type: System.String
      description: "De XML-representatie van een beveiligingsbeleidsniveau in hetzelfde formulier waarin deze wordt weergegeven in een configuratiebestand."
    - id: type
      type: System.Security.PolicyLevelType
      description: "Een van de opsommingswaarden waarmee het type van het beleidsniveau moet worden geladen."
    return:
      type: System.Security.Policy.PolicyLevel
      description: "De geladen beleidsniveau."
  overload: System.Security.SecurityManager.LoadPolicyLevelFromString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>str</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> str </code> parameter is niet geldig."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.PolicyHierarchy
  id: PolicyHierarchy
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: PolicyHierarchy()
  nameWithType: SecurityManager.PolicyHierarchy()
  fullName: System.Security.SecurityManager.PolicyHierarchy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Biedt een enumerator voor toegang tot de hi√´rarchie van het beleid voor beveiliging door niveaus, zoals computerbeleid en gebruikersbeleid."
  remarks: "De geretourneerde enumerator biedt opeenvolgende <xref:System.Security.Policy.PolicyLevel>objecten die in het beleid van de respectieve vertegenwoordigen (machine, gebruiker, enterprise, toepassingsdomein) van de hi√´rarchie.</xref:System.Security.Policy.PolicyLevel> Deze objecten zijn de live beleidsobjecten; wijzigen van deze objecten kan onvoorspelbare resultaten hebben.       Minimale beleidshi√´rarchie bestaat uit een niveau van de machine, een enterprise-niveau en het gebruikersniveau van een. De hi√´rarchie bevatten echter extra niveaus."
  syntax:
    content: public static System.Collections.IEnumerator PolicyHierarchy ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een enumerator voor <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> objecten waaruit de hi√´rarchie security-beleid."
  overload: System.Security.SecurityManager.PolicyHierarchy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode code access security (CAS)-beleid gebruikt dat is verouderd in de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Om in te schakelen CAS-beleid voor compatibiliteit met eerdere versies van .NET Framework, gebruiken de [ &lt;legacyCasPolicy&gt; element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  id: ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence)
  nameWithType: SecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee wordt bepaald machtigingen toekennen aan de code op basis van de opgegeven gegevens."
  remarks: "Deze methode roept de beleidsengine beveiliging voorzien bewijs van identiteit van de aanroepende code. Het resultaat wordt bepaald door het beveiligingsbeleid."
  syntax:
    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De gegevens die wordt gebruikt voor het beleid wordt ge√´valueerd."
    return:
      type: System.Security.PermissionSet
      description: "De reeks machtigingen die kunnen worden verleend door het beveiligingssysteem."
  overload: System.Security.SecurityManager.ResolvePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode code access security (CAS)-beleid gebruikt dat is verouderd in de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Om in te schakelen CAS-beleid voor compatibiliteit met eerdere versies van .NET Framework, gebruiken de [ &lt;legacyCasPolicy&gt; element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])
  id: ResolvePolicy(System.Security.Policy.Evidence[])
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence[])
  nameWithType: SecurityManager.ResolvePolicy(Evidence[])
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee wordt bepaald machtigingen toekennen aan de code op basis van de opgegeven gegevens."
  remarks: "Deze methode wordt aangeroepen voor de beleidsengine beveiliging bieden een matrix van <xref:System.Security.Policy.Evidence>objecten.</xref:System.Security.Policy.Evidence> De geretourneerde machtigingenset geeft alleen de machtigingen die betrekking hebben op elke bewijs in de matrix. Deze machtigingen zijn gelijk aan of een subset van de machtigingen die beleid hebt toegewezen aan elke afzonderlijke bewijs. Deze methode gedraagt zich alsof zijn voor het uitvoeren van een snijpunt van de resultaten van het omzetten van beleid op elk van de <xref:System.Security.Policy.Evidence>objecten in de matrix.</xref:System.Security.Policy.Evidence>"
  syntax:
    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence[] evidences);
    parameters:
    - id: evidences
      type: System.Security.Policy.Evidence[]
      description: "Een matrix van bewijs objecten gebruikt voor het beleid wordt ge√´valueerd."
    return:
      type: System.Security.PermissionSet
      description: "De reeks machtigingen die geschikt is voor alle van de opgegeven gegevens."
  overload: System.Security.SecurityManager.ResolvePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode code access security (CAS)-beleid gebruikt dat is verouderd in de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Om in te schakelen CAS-beleid voor compatibiliteit met eerdere versies van .NET Framework, gebruiken de [ &lt;legacyCasPolicy&gt; element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  id: ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee wordt bepaald machtigingen toekennen aan de code op basis van de opgegeven bewijs en aanvragen."
  remarks: "Deze methode wordt aangeroepen voor de beleidsengine beveiliging, de code die met bewijs van identiteit van de aanroepende code en de set machtigingen aanvragen. Het resultaat wordt bepaald door het beveiligingsbeleid. Deze methode retourneert de set met machtigingen die worden toegewezen door het beveiligingssysteem en retourneert de set met machtigingen die anders worden geweigerd als een output-parameter. De effectieve machtigingen zijn die in de verleende set die zich niet in de geweigerde set."
  syntax:
    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence, System.Security.PermissionSet reqdPset, System.Security.PermissionSet optPset, System.Security.PermissionSet denyPset, out System.Security.PermissionSet denied);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De gegevens die wordt gebruikt voor het beleid wordt ge√´valueerd."
    - id: reqdPset
      type: System.Security.PermissionSet
      description: "De vereiste machtigingen de code moet worden uitgevoerd."
    - id: optPset
      type: System.Security.PermissionSet
      description: "De optionele machtigingen die worden gebruikt als toegekend, maar niet nodig zijn voor de code om uit te voeren."
    - id: denyPset
      type: System.Security.PermissionSet
      description: "De geweigerde machtigingen die nooit moeten worden toegekend aan de code zelfs als er beleid anders toestaat."
    - id: denied
      type: System.Security.PermissionSet
      description: "Een output-parameter die de set niet-toegekende rechten bevat."
    return:
      type: System.Security.PermissionSet
      description: "De reeks machtigingen die worden toegewezen door het beveiligingssysteem."
  overload: System.Security.SecurityManager.ResolvePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode code access security (CAS)-beleid gebruikt dat is verouderd in de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Om in te schakelen CAS-beleid voor compatibiliteit met eerdere versies van .NET Framework, gebruiken de [ &lt;legacyCasPolicy&gt; element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Beleid is mislukt voor het verlenen van de minimaal vereiste machtigingen die is opgegeven door de <code> reqdPset </code> parameter."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)
  id: ResolvePolicyGroups(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicyGroups(Evidence)
  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicyGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee wordt een verzameling die overeenkomt met de opgegeven bewijs codegroepen."
  remarks: "Deze methode is handig bij het analyseren van de werking van een opgegeven beleidsconfiguratie met bepaalde soorten bewijs.       Groepen worden geretourneerd van alle toepasselijke niveaus van de beleidshi√´rarchie die overeenkomt met de `evidence` parameter."
  syntax:
    content: public static System.Collections.IEnumerator ResolvePolicyGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Het bewijs dat is ingesteld op basis van het beleid wordt ge√´valueerd."
    return:
      type: System.Collections.IEnumerator
      description: "Een opsomming van de reeks die overeenkomt met het bewijs codegroepen."
  overload: System.Security.SecurityManager.ResolvePolicyGroups*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode code access security (CAS)-beleid gebruikt dat is verouderd in de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Om in te schakelen CAS-beleid voor compatibiliteit met eerdere versies van .NET Framework, gebruiken de [ &lt;legacyCasPolicy&gt; element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)
  id: ResolveSystemPolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolveSystemPolicy(Evidence)
  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolveSystemPolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee wordt bepaald welke machtigingen toekennen aan de code die is gebaseerd op de opgegeven gegevens, met uitzondering van het beleid voor de <xref href=&quot;System.AppDomain&quot;> </xref> niveau."
  remarks: "Deze methode roept de beleidsengine beveiliging en biedt bewijs van identiteit van de aanroepende code. Het resultaat wordt bepaald door het systeem beveiligingsbeleid voor een uitzondering van beleidsspecifieke <xref:System.AppDomain>beleid.</xref:System.AppDomain>"
  syntax:
    content: public static System.Security.PermissionSet ResolveSystemPolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De gegevens die wordt gebruikt voor het beleid wordt ge√´valueerd."
    return:
      type: System.Security.PermissionSet
      description: "De reeks machtigingen die kunnen worden verleend door het beveiligingssysteem."
  overload: System.Security.SecurityManager.ResolveSystemPolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode code access security (CAS)-beleid gebruikt dat is verouderd in de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Om in te schakelen CAS-beleid voor compatibiliteit met eerdere versies van .NET Framework, gebruiken de [ &lt;legacyCasPolicy&gt; element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.SavePolicy
  id: SavePolicy
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: SavePolicy()
  nameWithType: SecurityManager.SavePolicy()
  fullName: System.Security.SecurityManager.SavePolicy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee slaat u de status van de gewijzigde security-beleid."
  remarks: "Deze methode bespaart het beleid, zoals die worden weergegeven door <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, en andere klassen die voor configuratie van het beveiligingsbeleid.</xref:System.Security.Policy.PolicyLevel> </xref:System.Security.SecurityManager.PolicyHierarchy%2A> Tenzij u deze methode wordt aangeroepen, worden wijzigingen aangebracht in de beleidsobjecten worden niet opgeslagen en heeft geen invloed op de volgende toepassing wordt uitgevoerd."
  syntax:
    content: public static void SavePolicy ();
    parameters: []
  overload: System.Security.SecurityManager.SavePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode code access security (CAS)-beleid gebruikt dat is verouderd in de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Om in te schakelen CAS-beleid voor compatibiliteit met eerdere versies van .NET Framework, gebruiken de [ &lt;legacyCasPolicy&gt; element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)
  id: SavePolicyLevel(System.Security.Policy.PolicyLevel)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: SavePolicyLevel(PolicyLevel)
  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)
  fullName: System.Security.SecurityManager.SavePolicyLevel(PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee slaat u het gewijzigde beleid beveiligingsniveau van <xref:System.Security.SecurityManager.LoadPolicyLevelFromFile*>.</xref:System.Security.SecurityManager.LoadPolicyLevelFromFile*> geladen"
  remarks: "De <xref:System.Security.Policy.PolicyLevel>worden opgeslagen op dezelfde locatie van waaruit het geladen.</xref:System.Security.Policy.PolicyLevel>"
  syntax:
    content: public static void SavePolicyLevel (System.Security.Policy.PolicyLevel level);
    parameters:
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "Beleid voor het object voor het op te slaan."
  overload: System.Security.SecurityManager.SavePolicyLevel*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Deze methode code access security (CAS)-beleid gebruikt dat is verouderd in de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Om in te schakelen CAS-beleid voor compatibiliteit met eerdere versies van .NET Framework, gebruiken de [ &lt;legacyCasPolicy&gt; element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.SecurityEnabled
  id: SecurityEnabled
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: SecurityEnabled
  nameWithType: SecurityManager.SecurityEnabled
  fullName: System.Security.SecurityManager.SecurityEnabled
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of beveiliging is ingeschakeld."
  remarks: "Deze eigenschap wordt gebruikt door de [Caspol.exe (Code Access Security-beleid Tool)](~/add/includes/ajax-current-ext-md.md) `-security` (`-s`) optie code gebaseerde beveiliging uitschakelen.              Securityenabled moet biedt een manier voor beheerders om codetoegangsbeveiliging uitschakelen. Wanneer Codetoegangsbeveiliging is uitgeschakeld, slagen alle code toegang aanvragen. Dit houdt dit verleent alle code `FullTrust`. Het beveiligingssysteem codetoegangsbeveiliging uitschakelen omzeilt, zodat code mogelijk uitvoeren enigszins beter dan het verlenen van vergelijkbare beveiliging beleid `FullTrust` alle code. Deze eigenschap wordt niet uitschakelen voor beveiliging op basis van rollen. Daarom <xref:System.Security.Permissions.PrincipalPermission>eisen worden niet be√Ønvloed.</xref:System.Security.Permissions.PrincipalPermission>      > [!CAUTION] > Uitgeschakelde codetoegangsbeveiliging kunnen het systeem kwetsbaar voor aanvallen door schadelijke programmacode zoals virussen en wormen. Beheerde code wordt uitgevoerd op een manier worden niet automatisch geblokkeerd wanneer u code access security uitschakelen. IT alleen oorzaken beheerde code worden uitgevoerd zonder beperking door het code access security-systeem en mag alleen worden uitgevoerd met de meest uiterst voorzichtig. Het uitschakelen van beveiliging krijgen extra prestaties moet alleen worden uitgevoerd als andere beveiligingsmaatregelen zijn genomen ter bescherming van de beveiliging van het systeem. Voorbeelden van andere beveiligingsmaatregelen omvatten verbreken openbare netwerken, fysiek beveiligen van computers, enzovoort.       Een wijziging in deze eigenschap is niet permanent in het register tot <xref:System.Security.SecurityManager.SavePolicy%2A>wordt aangeroepen.</xref:System.Security.SecurityManager.SavePolicy%2A> Nieuwe processen wordt niet be√Ønvloed door een wijziging, totdat deze wordt bewaard in het register. De waarde van deze eigenschap in een actief proces verandert noodzakelijkerwijs niet de status in de verwachte wijze. Wijzigingen van kracht zijn geworden, zodat u moet aanroepen <xref:System.Security.SecurityManager.SavePolicy%2A>en een nieuw proces te starten.</xref:System.Security.SecurityManager.SavePolicy%2A>"
  syntax:
    content: public static bool SecurityEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als beveiliging is ingeschakeld; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityManager.SecurityEnabled*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De code die deze methode aanroept, heeft geen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.SecurityManager.CheckExecutionRights
  parent: System.Security.SecurityManager
  isExternal: false
  name: CheckExecutionRights
  nameWithType: SecurityManager.CheckExecutionRights
  fullName: System.Security.SecurityManager.CheckExecutionRights
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture
  parent: System.Security.SecurityManager
  isExternal: false
  name: CurrentThreadRequiresSecurityContextCapture()
  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()
  fullName: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture()
- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetStandardSandbox(Evidence)
  nameWithType: SecurityManager.GetStandardSandbox(Evidence)
  fullName: System.Security.SecurityManager.GetStandardSandbox(Evidence)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetZoneAndOrigin(ArrayList,ArrayList)
  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
  fullName: System.Security.SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)
  parent: System.Security.SecurityManager
  isExternal: false
  name: IsGranted(IPermission)
  nameWithType: SecurityManager.IsGranted(IPermission)
  fullName: System.Security.SecurityManager.IsGranted(IPermission)
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromFile(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.PolicyLevelType
  parent: System.Security
  isExternal: false
  name: PolicyLevelType
  nameWithType: PolicyLevelType
  fullName: System.Security.PolicyLevelType
- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromString(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
- uid: System.Security.SecurityManager.PolicyHierarchy
  parent: System.Security.SecurityManager
  isExternal: false
  name: PolicyHierarchy()
  nameWithType: SecurityManager.PolicyHierarchy()
  fullName: System.Security.SecurityManager.PolicyHierarchy()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence)
  nameWithType: SecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence)
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence[])
  nameWithType: SecurityManager.ResolvePolicy(Evidence[])
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence[])
- uid: System.Security.Policy.Evidence[]
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence[]
  spec.csharp:
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: Evidence[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicyGroups(Evidence)
  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicyGroups(Evidence)
- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolveSystemPolicy(Evidence)
  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolveSystemPolicy(Evidence)
- uid: System.Security.SecurityManager.SavePolicy
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicy()
  nameWithType: SecurityManager.SavePolicy()
  fullName: System.Security.SecurityManager.SavePolicy()
- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicyLevel(PolicyLevel)
  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)
  fullName: System.Security.SecurityManager.SavePolicyLevel(PolicyLevel)
- uid: System.Security.SecurityManager.SecurityEnabled
  parent: System.Security.SecurityManager
  isExternal: false
  name: SecurityEnabled
  nameWithType: SecurityManager.SecurityEnabled
  fullName: System.Security.SecurityManager.SecurityEnabled
- uid: System.Security.SecurityManager.CheckExecutionRights*
  parent: System.Security.SecurityManager
  isExternal: false
  name: CheckExecutionRights
  nameWithType: SecurityManager.CheckExecutionRights
- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture*
  parent: System.Security.SecurityManager
  isExternal: false
  name: CurrentThreadRequiresSecurityContextCapture
  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture
- uid: System.Security.SecurityManager.GetStandardSandbox*
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetStandardSandbox
  nameWithType: SecurityManager.GetStandardSandbox
- uid: System.Security.SecurityManager.GetZoneAndOrigin*
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetZoneAndOrigin
  nameWithType: SecurityManager.GetZoneAndOrigin
- uid: System.Security.SecurityManager.IsGranted*
  parent: System.Security.SecurityManager
  isExternal: false
  name: IsGranted
  nameWithType: SecurityManager.IsGranted
- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile*
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromFile
  nameWithType: SecurityManager.LoadPolicyLevelFromFile
- uid: System.Security.SecurityManager.LoadPolicyLevelFromString*
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromString
  nameWithType: SecurityManager.LoadPolicyLevelFromString
- uid: System.Security.SecurityManager.PolicyHierarchy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: PolicyHierarchy
  nameWithType: SecurityManager.PolicyHierarchy
- uid: System.Security.SecurityManager.ResolvePolicy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy
  nameWithType: SecurityManager.ResolvePolicy
- uid: System.Security.SecurityManager.ResolvePolicyGroups*
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicyGroups
  nameWithType: SecurityManager.ResolvePolicyGroups
- uid: System.Security.SecurityManager.ResolveSystemPolicy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolveSystemPolicy
  nameWithType: SecurityManager.ResolveSystemPolicy
- uid: System.Security.SecurityManager.SavePolicy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicy
  nameWithType: SecurityManager.SavePolicy
- uid: System.Security.SecurityManager.SavePolicyLevel*
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicyLevel
  nameWithType: SecurityManager.SavePolicyLevel
- uid: System.Security.SecurityManager.SecurityEnabled*
  parent: System.Security.SecurityManager
  isExternal: false
  name: SecurityEnabled
  nameWithType: SecurityManager.SecurityEnabled
