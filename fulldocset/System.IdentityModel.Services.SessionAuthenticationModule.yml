### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Services.SessionAuthenticationModule
  id: SessionAuthenticationModule
  children:
  - System.IdentityModel.Services.SessionAuthenticationModule.#ctor
  - System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  - System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  - System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  - System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  - System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  - System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie
  - System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)
  - System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration
  - System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  - System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])
  - System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  - System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  - System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  - System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  - System.IdentityModel.Services.SessionAuthenticationModule.SignOut
  - System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  - System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  - System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  langs:
  - csharp
  name: SessionAuthenticationModule
  nameWithType: SessionAuthenticationModule
  fullName: System.IdentityModel.Services.SessionAuthenticationModule
  type: Class
  summary: "Implementeert een ASP.NET-module die sessiecookies in WS-Federation-scenario&quot;s verwerkt."
  remarks: "When present in the ASP.NET pipeline, the SessionAuthenticationModule (SAM) processes session cookies in WS-Federation scenarios. It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response. It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects. The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served.  \n  \n The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the ASP.NET pipeline. This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties to the claims principal contained in the session token. It invokes several of the other methods exposed by the SAM during this process.  \n  \n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).  \n  \n The SAM exposes several events that provide access to its processing pipeline. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing. Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests. For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.  \n  \n For more complicated scenarios, you can derive from SessionAuthenticationModule to implement a custom SAM. To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.  \n  \n You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the `<system.webServer>` element for IIS version 7 and later or under the `<system.web>` element for versions prior to IIS 7. The cookie handler used by the SAM can be configured with the [\\&lt;cookieHandler\\&gt;](../Topic/%3CcookieHandler%3E.md) element."
  example:
  - "[!code-cs[WifSAM#1](~/add/codesnippet/csharp/sam/global.asax.cs#1)]  \n  \n The following XML shows how to configure the SAM in the ASP.NET pipeline. Many other elements that are present in a typical configuration are omitted here for brevity.  \n  \n```xml  \n<configuration>  \n  <system.webServer>  \n    <modules>  \n      <!--WIF 4.5 modules -->  \n      <add name=\"SessionAuthenticationModule\" type=\"System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>  \n      <add name=\"WsFederationAuthenticationModule\" type=\"System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>  \n    </modules>  \n  </system.webServer>  \n</configuration>  \n```"
  syntax:
    content: 'public class SessionAuthenticationModule : System.IdentityModel.Services.HttpModuleBase'
  inheritance:
  - System.Object
  - System.IdentityModel.Services.HttpModuleBase
  implements: []
  inheritedMembers:
  - System.IdentityModel.Services.HttpModuleBase.Dispose
  - System.IdentityModel.Services.HttpModuleBase.FederationConfiguration
  - System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SessionAuthenticationModule()
  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionAuthenticationModule()
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule&quot;> </xref> klasse."
  remarks: "De <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A>eigenschap is ingesteld op `false` en de <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>eigenschap is ge√Ønitialiseerd met een standaardexemplaar van de <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>klasse</xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A>"
  syntax:
    content: public SessionAuthenticationModule ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  id: AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "De binnenkomende aanvraag verifieert door het valideren van het binnenkomende sessietoken. Bij de validatie is geslaagd, wordt bijgewerkt de huidige HTTP-context en de thread principal met de opgegeven <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>."
  remarks: "De methode AuthenticateSessionSecurityToken wordt aangeroepen vanuit de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Roept de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A>methode voor het valideren van de binnenkomende token en werk de <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>en de <xref:System.Web.HttpContext.User%2A?displayProperty=fullName>Eigenschappen.</xref:System.Web.HttpContext.User%2A?displayProperty=fullName> </xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> Als de `writeCookie` parameter `true`, wordt de <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A>methode wordt aangeroepen voor het schrijven van het sessietoken in een cookie.</xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A>"
  syntax:
    content: public virtual void AuthenticateSessionSecurityToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool writeCookie);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Het beveiligingstoken sessie gebruiken om te verifi√´ren van de binnenkomende HTTP-aanvraag."
    - id: writeCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>schrijven van de sessiecookie; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  id: ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ContainsSessionTokenCookie(HttpCookieCollection)
  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Hiermee wordt bepaald of een sessiecookie in de opgegeven cookie-verzameling."
  syntax:
    content: public bool ContainsSessionTokenCookie (System.Web.HttpCookieCollection httpCookieCollection);
    parameters:
    - id: httpCookieCollection
      type: System.Web.HttpCookieCollection
      description: "De verzameling van cookies in waarnaar u zoekt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een sessiecookie wordt gevonden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>httpCookieCollection</code>null is"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  id: ContextSessionSecurityToken
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ContextSessionSecurityToken
  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "De actieve opgehaald <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> voor de huidige <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public virtual System.IdentityModel.Tokens.SessionSecurityToken ContextSessionSecurityToken { get; }
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Het beveiligingstoken van de actieve sessie."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  id: CookieHandler
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: CookieHandler
  nameWithType: SessionAuthenticationModule.CookieHandler
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Hiermee wordt de cookie-handler die wordt gebruikt om te lezen, schrijven en verwijderen van sessiecookies opgehaald."
  remarks: "De eigenschap CookieHandler is ge√Ønitialiseerd door de <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> Deze methode initialiseert de eigenschap op basis van de cookie-handler die is opgegeven op de <xref:System.IdentityModel.Services.Configuration.FederationConfiguration>-object dat is ingesteld op de <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName>eigenschap.</xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.Configuration.FederationConfiguration> U kunt de cookie-handler instellen in een configuratiebestand via de [ \\&lt; cookieHandler\\&gt;](../Topic/%3CcookieHandler%3E.md) element."
  syntax:
    content: public System.IdentityModel.Services.CookieHandler CookieHandler { get; set; }
    return:
      type: System.IdentityModel.Services.CookieHandler
      description: "De cookie-handler."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  id: CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Maakt een <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> van de opgegeven parameters met behulp van de geconfigureerde sessie token-handler."
  syntax:
    content: public System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, DateTime validFrom, DateTime validTo, bool isPersistent);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "De principal die kan worden vastgelegd in het token."
    - id: context
      type: System.String
      description: "Een contexttekenreeks toepassingsspecifieke."
    - id: validFrom
      type: System.DateTime
      description: "De eerste instant waarin dit token ongeldig is."
    - id: validTo
      type: System.DateTime
      description: "Het laatste moment waarin dit token ongeldig is."
    - id: isPersistent
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde moet worden vastgehouden door de gebruikersagent; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Het sessietoken."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen een geldige sessie token handler is geconfigureerd. (Er is geen <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> geconfigureerd in de <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>eigenschap.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie
  id: DeleteSessionTokenCookie
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: DeleteSessionTokenCookie()
  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Hiermee verwijdert u de sessiecookie en wordt deze verwijderd uit de cache."
  remarks: "Hiermee verwijdert u de sessiecookie met behulp van de cookie-handler die is opgegeven door de <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>eigenschap.</xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Deze methode wordt aangeroepen tijdens het afmelden is door de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>"
  syntax:
    content: public void DeleteSessionTokenCookie ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)
  id: InitializeModule(System.Web.HttpApplication)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: InitializeModule(HttpApplication)
  nameWithType: SessionAuthenticationModule.InitializeModule(HttpApplication)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(HttpApplication)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "De module wordt ge√Ønitialiseerd en wordt het voorbereid voor het verwerken van gebeurtenissen uit de module [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] application-object."
  remarks: "Voegt de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>en de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A>handlers die de <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName>en <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName>gebeurtenissen van het toepassingsobject die is opgegeven door de `context` parameter.</xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> </xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>"
  syntax:
    content: protected override void InitializeModule (System.Web.HttpApplication context);
    parameters:
    - id: context
      type: System.Web.HttpApplication
      description: "Het object van de HTTP-toepassing waarin deze module."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration
  id: InitializePropertiesFromConfiguration
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: InitializePropertiesFromConfiguration()
  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Initialiseert de eigenschappen van de module op basis van definities in het configuratiebestand."
  remarks: "Initialiseert de <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>eigenschap uit de handler is opgegeven in configuratie door de <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName>-object dat is ingesteld op de <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName>eigenschap.</xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> U kunt de cookie-handler opgeven in een configuratiebestand via de [ \\&lt; cookieHandler\\&gt;](../Topic/%3CcookieHandler%3E.md) element."
  syntax:
    content: protected override void InitializePropertiesFromConfiguration ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  id: IsReferenceMode
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: IsReferenceMode
  nameWithType: SessionAuthenticationModule.IsReferenceMode
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de sessie-informatie (claimwaarden, enzovoort) moet worden opgeslagen in de sessiecookie of dat de inhoud van de sessie moet worden opgeslagen op de server, met behulp van de cookie voor het opslaan van alleen een verwijzing."
  remarks: "In de modus verwijzing de <xref:System.IdentityModel.Tokens.SessionSecurityToken>wordt opgeslagen in een cache-serverzijde (een object dat is afgeleid van <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>).</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> </xref:System.IdentityModel.Tokens.SessionSecurityToken> De verleende cookie bevat alleen een context-id die wordt gebruikt voor het token opgehaald uit de cache.      > [!IMPORTANT] > Werken in de modus verwijzing Microsoft adviseert het bieden van een handler voor de <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>gebeurtenis in het bestand global.asax.cs en de instelling de <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName>eigenschap op het token wordt doorgegeven de <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>eigenschap.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> Dit zorgt ervoor dat het sessietoken in de modus voor elke aanvraag verwijzing werkt en favoriete via alleen de eigenschap IsReferenceMode instellen op de sessie-Module voor verificatie."
  syntax:
    content: public bool IsReferenceMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als uitgegeven cookies in de modus verwijzing zijn; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, wat aangeeft dat cookies uitgegeven zijn niet in de modus verwijzing."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)
  id: OnAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Verwerkt de <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> gebeurtenis op basis van de [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] pijplijn."
  remarks: "Deze methode doet het volgende: 1.  Roept de <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A>methode om te lezen een <xref:System.IdentityModel.Tokens.SessionSecurityToken>van de sessiecookie, indien aanwezig.</xref:System.IdentityModel.Tokens.SessionSecurityToken> </xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A>      2.  Als een sessie beveiligingstoken kan niet worden geretourneerd en lezen (waarschijnlijk omdat een sessie niet is ingesteld).      3.  Roept de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A>methode om te genereren voor de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived>gebeurtenis.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> Dit biedt de mogelijkheid voor het token dat is gelezen uit de cookie worden gewijzigd of voor de aanvraag te annuleren. De handler kunt ook opgeven dat het token moet opnieuw worden uitgegeven, door in te stellen de <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName>eigenschap.</xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName>      4.  Als het token moet opnieuw worden uitgegeven, wordt deze verwijderd uit de cache en roept de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A>methode om te genereren voor de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated>gebeurtenis.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> Dit biedt de mogelijkheid voor het token opnieuw kan worden gewijzigd. Het gedrag voor opnieuw kan ook worden gewijzigd door in te stellen de <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName>eigenschap in de gebeurtenis-handler.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName>      5.  Roept de <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>methode om de gebruiker te verifi√´ren.</xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Als geslaagd, dit is het effect van de instelling voor de <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap in op de principal die is opgenomen in de <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName>eigenschap van het binnenkomende token.</xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName> </xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>      6.  Als de sessie is verlopen, roept de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       De methode OnAuthenticateRequest wordt toegevoegd aan de handlers voor de <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName>gebeurtenis in de <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> </xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName>"
  syntax:
    content: protected virtual void OnAuthenticateRequest (object sender, EventArgs eventArgs);
    parameters:
    - id: sender
      type: System.Object
      description: "De bron voor de gebeurtenis. Dit is een <xref href=&quot;System.Web.HttpApplication&quot;> </xref> object."
    - id: eventArgs
      type: System.EventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen een geldige sessie token handler is geconfigureerd. (Er is geen <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> geconfigureerd in de <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>eigenschap.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)
  id: OnPostAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnPostAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Verwerkt de <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref> gebeurtenis op basis van de [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] pijplijn."
  remarks: "De standaardimplementatie is leeg.       De handler OnPostAuthenticateRequest wordt toegevoegd aan de handlers voor de <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName>gebeurtenis in de <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> </xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName>"
  syntax:
    content: protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "De bron voor de gebeurtenis. Dit is een <xref href=&quot;System.Web.HttpApplication&quot;> </xref> object."
    - id: e
      type: System.EventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  id: OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Geeft de <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&quot;> </xref> gebeurtenis."
  remarks: "Aangeroepen vanuit de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>"
  syntax:
    content: protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);
    parameters:
    - id: args
      type: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  id: OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Geeft de <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&quot;> </xref> gebeurtenis."
  remarks: "Aangeroepen vanuit de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>"
  syntax:
    content: protected virtual void OnSessionSecurityTokenReceived (System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs args);
    parameters:
    - id: args
      type: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)
  id: OnSignedOut(System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSignedOut(EventArgs)
  nameWithType: SessionAuthenticationModule.OnSignedOut(EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(EventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Geeft de <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&quot;> </xref> gebeurtenis."
  remarks: "Deze methode wordt opgeroepen via de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>methode na het afmelden is uitgevoerd en de sessiecookie is verwijderd.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>"
  syntax:
    content: protected virtual void OnSignedOut (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  id: OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSigningOut(SigningOutEventArgs)
  nameWithType: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Geeft de <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&quot;> </xref> gebeurtenis."
  remarks: "Deze methode wordt opgeroepen via de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>methode om uit te voeren afmelding plaatsvindt.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Deze wordt aangeroepen voordat de sessiecookie is verwijderd."
  syntax:
    content: protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs e);
    parameters:
    - id: e
      type: System.IdentityModel.Services.SigningOutEventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  id: OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSignOutError(ErrorEventArgs)
  nameWithType: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Geeft de <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&quot;> </xref> gebeurtenis."
  remarks: "Deze methode wordt opgeroepen via de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>methode als er een fout optreedt tijdens het afmelden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>"
  syntax:
    content: protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs e);
    parameters:
    - id: e
      type: System.IdentityModel.Services.ErrorEventArgs
      description: "De gegevens voor de gebeurtenis."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])
  id: ReadSessionTokenFromCookie(System.Byte[])
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ReadSessionTokenFromCookie(Byte[])
  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Leest een <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> van de opgegeven sessiecookie."
  syntax:
    content: public System.IdentityModel.Tokens.SessionSecurityToken ReadSessionTokenFromCookie (byte[] sessionCookie);
    parameters:
    - id: sessionCookie
      type: System.Byte[]
      description: "De cookie in onbewerkte formulier, dat het sessietoken bevat."
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "De sessietoken dat is gelezen uit de cookie."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen een geldige sessie token handler is geconfigureerd. (Er is geen <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> geconfigureerd in de <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>eigenschap.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  id: SessionSecurityTokenCreated
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SessionSecurityTokenCreated
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenCreated
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Deze gebeurtenis treedt op wanneer een sessie beveiligingstoken is gemaakt."
  remarks: "Deze gebeurtenis kunt u het beveiligingstoken sessie wijzigen voordat deze naar een cookie is geschreven.       De SessionSecurityTokenCreated-gebeurtenis wordt geactiveerd vanuit de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>methode na een sessietoken (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) is gemaakt.</xref:System.IdentityModel.Tokens.SessionSecurityToken> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Dit gebeurt, bijvoorbeeld als een gebeurtenis-handler voor de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived>gebeurtenis wijzigt het token.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived>       Eigenschappen van het sessietoken wijzigen voordat deze verdere langs de pijplijn wordt doorgegeven en wordt gebruikt voor verificatie van de entiteit die de aanvraag verzendt (gebruiker) kunt u deze gebeurtenis.       In een gebeurtenis-handler, opent u het token via de <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>eigenschap.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> Na het wijzigen van het token, kunt u ervoor zorgen dat deze naar de cookie door in te stellen teruggeschreven de <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName>eigenschap `true`.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> In tegenstelling tot is de gebeurtenis SessionSecurityTokenCreated, SessionSecurityTokenCreated niet een Annuleerbare gebeurtenis."
  example:
  - "The following code shows a handler for the SessionSecurityTokenCreated event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#6](~/add/codesnippet/csharp/sam/global.asax.cs#6)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs> SessionSecurityTokenCreated;
    return:
      type: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  id: SessionSecurityTokenReceived
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SessionSecurityTokenReceived
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenReceived
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Deze gebeurtenis treedt op wanneer een sessie beveiligingstoken is gelezen uit een cookie."
  remarks: "The SessionSecurityTokenReceived event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been successfully read from the session cookie.  \n  \n You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user). One of the most common scenarios involves modifying the session expiration time (accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=fullName> property) to override the session expiration time set in configuration through the `lifetime` attribute of the [\\&lt;sessionTokenRequirement\\&gt;](../Topic/%3CsessionTokenRequirement%3E.md) element. By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.  \n  \n In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=fullName> property. After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> to `true`. Finally, the SessionSecurityTokenReceived event is a cancelable event, and you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> to abort further processing of the request."
  example:
  - "The following code shows a handler for the SessionSecurityTokenReceived event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#5](~/add/codesnippet/csharp/sam/global.asax.cs#5)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> SessionSecurityTokenReceived;
    return:
      type: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  id: SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SetPrincipalFromSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "De principal ingesteld op de <xref href=&quot;System.Web.HttpContext&quot;> </xref> en <xref href=&quot;System.Threading.Thread&quot;> </xref> naar de principal die is opgenomen in het opgegeven sessietoken."
  remarks: "Roept de <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A>methode en stelt de <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>eigenschap en de <xref:System.Web.HttpContext.User%2A?displayProperty=fullName>-eigenschap op <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName>met behulp van de identiteiten die worden geretourneerd.</xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> </xref:System.Web.HttpContext.User%2A?displayProperty=fullName> </xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A>       Deze methode wordt aangeroepen vanuit de <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>"
  syntax:
    content: protected virtual void SetPrincipalFromSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);
    parameters:
    - id: sessionSecurityToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Het sessietoken van waaruit de principal instellen."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  id: SignedOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SignedOut
  nameWithType: SessionAuthenticationModule.SignedOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Deze gebeurtenis treedt op nadat de gebruiker is afgemeld."
  remarks: "Deze gebeurtenis treedt op uit de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>methode vlak na de <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>methode wordt aangeroepen.</xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       Deze gebeurtenis kan niet worden gegarandeerd moet worden aangeroepen voor elke sessie. Cookies kunnen bijvoorbeeld worden verwijderd op de client in dat geval Deze gebeurtenis wordt nooit worden geactiveerd omdat er geen gebeurtenis serverzijde voor het verwijderen van de sessie."
  example:
  - "The following code shows a handler for the SignedOut event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#3](~/add/codesnippet/csharp/sam/global.asax.cs#3)]"
  syntax:
    content: public event EventHandler SignedOut;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  id: SigningOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SigningOut
  nameWithType: SessionAuthenticationModule.SigningOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Deze gebeurtenis treedt op voordat de aanmeldingssessie wordt verwijderd."
  remarks: "Gegenereerd door de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>methode vlak voordat de <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>methode wordt aangeroepen.</xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       Deze gebeurtenis kan niet worden gegarandeerd moet worden aangeroepen voor elke sessie. Cookies kunnen bijvoorbeeld worden verwijderd op de client in dat geval Deze gebeurtenis wordt nooit worden geactiveerd omdat er geen gebeurtenis serverzijde voor het verwijderen van de sessie."
  example:
  - "The following code shows a handler for the SigningOut event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#4](~/add/codesnippet/csharp/sam/global.asax.cs#4)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.SigningOutEventArgs> SigningOut;
    return:
      type: System.EventHandler{System.IdentityModel.Services.SigningOutEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut
  id: SignOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SignOut()
  nameWithType: SessionAuthenticationModule.SignOut()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOut()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "De huidige gebruiker zich afmeldt en de bijbehorende gebeurtenissen worden gegeven."
  remarks: "Roept de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, en <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A>methoden voor het uitvoeren van afmelding plaatsvindt.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A> Als er een uitzondering optreedt, de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A>methode wordt aangeroepen om te verhogen de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError>gebeurtenis.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> U kunt instellen de <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>eigenschap van de <xref:System.IdentityModel.Services.ErrorEventArgs>object doorgegeven aan de gebeurtenis-handler voor deze gebeurtenis annuleren de afmelden en te voorkomen dat de uitzondering worden doorgevoerd in de client.</xref:System.IdentityModel.Services.ErrorEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       U kunt deze methode om toe te voegen toepassingsspecifieke gedrag negeren."
  example:
  - "The following code shows code for invoking the SignOut method from a SignOut.aspx page (SignOut.aspx.cs) in an ASP.NET web application. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#7](~/add/codesnippet/csharp/sam/global.asax.cs#7)]"
  syntax:
    content: public virtual void SignOut ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  id: SignOutError
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SignOutError
  nameWithType: SessionAuthenticationModule.SignOutError
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Deze gebeurtenis treedt op wanneer er een fout opgetreden tijdens het afmelden."
  remarks: "Deze gebeurtenis treedt op uit de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>methode wanneer er een fout optreedt tijdens het afmelden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       In een gebeurtenis-handler krijgt u de uitzondering die hebben geleid in de gebeurtenis wordt gegenereerd tot door de <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName>eigenschap.</xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName> U kunt annuleren verdere verwerking van de uitzondering die het resultaat van de uitzondering op de client niet doorgeven door in te stellen de <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>eigenschap van de <xref:System.IdentityModel.Services.ErrorEventArgs>naar `true`.</xref:System.IdentityModel.Services.ErrorEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Deze gebeurtenis kan niet worden gegarandeerd moet worden aangeroepen voor elke sessie. Cookies kunnen bijvoorbeeld worden verwijderd op de client in dat geval Deze gebeurtenis wordt nooit worden geactiveerd omdat er geen gebeurtenis serverzijde voor het verwijderen van de sessie."
  example:
  - "The following code shows a handler for the SignOutError event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#2](~/add/codesnippet/csharp/sam/global.asax.cs#2)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.ErrorEventArgs> SignOutError;
    return:
      type: System.EventHandler{System.IdentityModel.Services.ErrorEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  id: TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: TryReadSessionTokenFromCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Probeert te lezen een <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> van een sessiecookie en retourneert een waarde die aangeeft of de sessiecookie is gelezen."
  remarks: "Leest de cookie met behulp van de cookie-handler die is geconfigureerd in de <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>eigenschap en roept vervolgens de <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A>methode om te lezen van het token van de cookie.</xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>"
  syntax:
    content: public bool TryReadSessionTokenFromCookie (out System.IdentityModel.Tokens.SessionSecurityToken sessionToken);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Wanneer deze methode retourneert, bevat de sessie van een beveiligingstoken dat is gelezen uit de sessiecookie."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sessiecookie is gelezen uit de aanvraag; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  id: ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ValidateSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Evalueert de opgegeven <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> en retourneert de identiteiten."
  remarks: "Deze methode wordt aangeroepen vanuit de <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>methode.</xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Deze roept de <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName>methode van de geconfigureerde sessie token-handler voor het valideren van het token en pak de identiteiten.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName>"
  syntax:
    content: protected System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);
    parameters:
    - id: sessionSecurityToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Het token te valideren."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "De verzameling van id&quot;s die zijn opgenomen in het token."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken*
  exceptions:
  - type: System.IdentityModel.Services.FederatedSessionExpiredException
    commentId: T:System.IdentityModel.Services.FederatedSessionExpiredException
    description: "Het token is verlopen."
  - type: System.IdentityModel.Services.FederationException
    commentId: T:System.IdentityModel.Services.FederationException
    description: "De token begintijd is nog niet geldig."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen een geldige sessie token handler is geconfigureerd. (Er is geen <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> geconfigureerd in de <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>eigenschap.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  id: WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: WriteSessionTokenToCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "De opgegeven schrijft <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> naar een sessiecookie."
  remarks: "De cookie wordt geschreven met behulp van de cookie-handler die is geconfigureerd in de <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>eigenschap.</xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>"
  syntax:
    content: public void WriteSessionTokenToCookie (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Het beveiligingstoken voor de sessie te schrijven."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sessionToken</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen een geldige sessie token handler is geconfigureerd. (Er is geen <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> geconfigureerd in de <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>eigenschap.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
references:
- uid: System.IdentityModel.Services.HttpModuleBase
  isExternal: false
  name: System.IdentityModel.Services.HttpModuleBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Services.FederatedSessionExpiredException
  parent: System.IdentityModel.Services
  isExternal: false
  name: FederatedSessionExpiredException
  nameWithType: FederatedSessionExpiredException
  fullName: System.IdentityModel.Services.FederatedSessionExpiredException
- uid: System.IdentityModel.Services.FederationException
  parent: System.IdentityModel.Services
  isExternal: false
  name: FederationException
  nameWithType: FederationException
  fullName: System.IdentityModel.Services.FederationException
- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionAuthenticationModule()
  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionAuthenticationModule()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
- uid: System.IdentityModel.Tokens.SessionSecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken
  fullName: System.IdentityModel.Tokens.SessionSecurityToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContainsSessionTokenCookie(HttpCookieCollection)
  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContextSessionSecurityToken
  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CookieHandler
  nameWithType: SessionAuthenticationModule.CookieHandler
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
- uid: System.IdentityModel.Services.CookieHandler
  parent: System.IdentityModel.Services
  isExternal: false
  name: CookieHandler
  nameWithType: CookieHandler
  fullName: System.IdentityModel.Services.CookieHandler
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: DeleteSessionTokenCookie()
  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializeModule(HttpApplication)
  nameWithType: SessionAuthenticationModule.InitializeModule(HttpApplication)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializePropertiesFromConfiguration()
  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionAuthenticationModule.IsReferenceMode
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnPostAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
- uid: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: SessionSecurityTokenCreatedEventArgs
  nameWithType: SessionSecurityTokenCreatedEventArgs
  fullName: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
- uid: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: SessionSecurityTokenReceivedEventArgs
  nameWithType: SessionSecurityTokenReceivedEventArgs
  fullName: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignedOut(EventArgs)
  nameWithType: SessionAuthenticationModule.OnSignedOut(EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(EventArgs)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSigningOut(SigningOutEventArgs)
  nameWithType: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
- uid: System.IdentityModel.Services.SigningOutEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: SigningOutEventArgs
  nameWithType: SigningOutEventArgs
  fullName: System.IdentityModel.Services.SigningOutEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignOutError(ErrorEventArgs)
  nameWithType: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
- uid: System.IdentityModel.Services.ErrorEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: ErrorEventArgs
  nameWithType: ErrorEventArgs
  fullName: System.IdentityModel.Services.ErrorEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ReadSessionTokenFromCookie(Byte[])
  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionSecurityTokenCreated
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenCreated
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
- uid: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SessionSecurityTokenCreatedEventArgs>
  nameWithType: EventHandler<SessionSecurityTokenCreatedEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
    name: SessionSecurityTokenCreatedEventArgs
    nameWithType: SessionSecurityTokenCreatedEventArgs
    fullName: SessionSecurityTokenCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionSecurityTokenReceived
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenReceived
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
- uid: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SessionSecurityTokenReceivedEventArgs>
  nameWithType: EventHandler<SessionSecurityTokenReceivedEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
    name: SessionSecurityTokenReceivedEventArgs
    nameWithType: SessionSecurityTokenReceivedEventArgs
    fullName: SessionSecurityTokenReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SetPrincipalFromSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignedOut
  nameWithType: SessionAuthenticationModule.SignedOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SigningOut
  nameWithType: SessionAuthenticationModule.SigningOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
- uid: System.EventHandler{System.IdentityModel.Services.SigningOutEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SigningOutEventArgs>
  nameWithType: EventHandler<SigningOutEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.SigningOutEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.SigningOutEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.SigningOutEventArgs
    name: SigningOutEventArgs
    nameWithType: SigningOutEventArgs
    fullName: SigningOutEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignOut()
  nameWithType: SessionAuthenticationModule.SignOut()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOut()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignOutError
  nameWithType: SessionAuthenticationModule.SignOutError
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
- uid: System.EventHandler{System.IdentityModel.Services.ErrorEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ErrorEventArgs>
  nameWithType: EventHandler<ErrorEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.ErrorEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.ErrorEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.ErrorEventArgs
    name: ErrorEventArgs
    nameWithType: ErrorEventArgs
    fullName: ErrorEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: TryReadSessionTokenFromCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ValidateSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: WriteSessionTokenToCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionAuthenticationModule
  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule
- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: AuthenticateSessionSecurityToken
  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContainsSessionTokenCookie
  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContextSessionSecurityToken
  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CookieHandler
  nameWithType: SessionAuthenticationModule.CookieHandler
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CreateSessionSecurityToken
  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: DeleteSessionTokenCookie
  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializeModule
  nameWithType: SessionAuthenticationModule.InitializeModule
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializePropertiesFromConfiguration
  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration
- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionAuthenticationModule.IsReferenceMode
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnAuthenticateRequest
  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnPostAuthenticateRequest
  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenCreated
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenReceived
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignedOut
  nameWithType: SessionAuthenticationModule.OnSignedOut
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSigningOut
  nameWithType: SessionAuthenticationModule.OnSigningOut
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignOutError
  nameWithType: SessionAuthenticationModule.OnSignOutError
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ReadSessionTokenFromCookie
  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SetPrincipalFromSessionToken
  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignOut
  nameWithType: SessionAuthenticationModule.SignOut
- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: TryReadSessionTokenFromCookie
  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ValidateSessionToken
  nameWithType: SessionAuthenticationModule.ValidateSessionToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: WriteSessionTokenToCookie
  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie
