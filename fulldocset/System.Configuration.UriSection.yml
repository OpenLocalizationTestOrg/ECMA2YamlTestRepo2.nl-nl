### YamlMime:ManagedReference
items:
- uid: System.Configuration.UriSection
  id: UriSection
  children:
  - System.Configuration.UriSection.#ctor
  - System.Configuration.UriSection.Idn
  - System.Configuration.UriSection.IriParsing
  - System.Configuration.UriSection.Properties
  - System.Configuration.UriSection.SchemeSettings
  langs:
  - csharp
  name: UriSection
  nameWithType: UriSection
  fullName: System.Configuration.UriSection
  type: Class
  summary: "Hiermee geeft u de sectie Uri in een configuratiebestand."
  remarks: "De bestaande <xref:System.Uri?displayProperty=fullName>klasse is uitgebreid om te bieden ondersteuning voor internationale Resource-id&quot;s (IRI) en Internationalized Domain Names.</xref:System.Uri?displayProperty=fullName> Actieve gebruikers ziet niet elke wijziging van het gedrag voor .NET Framework 2.0, tenzij ze expliciet IRI en IDN inschakelt. Dit zorgt ervoor compatibiliteit met eerdere versies van .NET Framework.       De configuratie-instellingen voor IRI en IDN kunnen worden opgehaald met behulp van de klasse UriSection."
  syntax:
    content: 'public sealed class UriSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Configuration.UriSection.#ctor
  id: '#ctor'
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.UriSection&quot;> </xref> klasse."
  remarks: "De bestaande <xref:System.Uri?displayProperty=fullName>klasse is uitgebreid om te bieden ondersteuning voor internationale Resource-id&quot;s (IRI) en Internationalized Domain Names.</xref:System.Uri?displayProperty=fullName> Actieve gebruikers ziet niet elke wijziging van het gedrag voor .NET Framework 2.0, tenzij ze expliciet IRI en IDN inschakelt. Dit zorgt ervoor compatibiliteit met eerdere versies van .NET Framework.       De configuratie-instellingen voor IRI en IDN kunnen worden opgehaald met de <xref:System.Configuration.UriSection>klasse.</xref:System.Configuration.UriSection>       Zie voor meer informatie over de IRI ondersteuning van de sectie met opmerkingen voor de <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public UriSection ();
    parameters: []
  overload: System.Configuration.UriSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Idn
  id: Idn
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Haalt een <xref href=&quot;System.Configuration.IdnElement&quot;> </xref> object met de configuratie-instelling voor internationale domeinnaam (IDN) worden verwerkt in de &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  remarks: "De bestaande <xref:System.Uri?displayProperty=fullName>klasse is uitgebreid om te bieden ondersteuning voor internationale Resource-id&quot;s (IRI) en Internationalized Domain Names.</xref:System.Uri?displayProperty=fullName> Actieve gebruikers ziet niet elke wijziging van het gedrag voor .NET Framework 2.0, tenzij ze expliciet IRI en IDN inschakelt. Dit zorgt ervoor compatibiliteit met eerdere versies van .NET Framework.       De configuratie-instellingen voor IRI en IDN kunnen worden opgehaald met de <xref:System.Configuration.UriSection>klasse.</xref:System.Configuration.UriSection> De eigenschap Idn retourneert de configuratie-instelling voor IDN worden verwerkt in de <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>       IRI verwerking moet worden ingeschakeld voor IDN verwerken mogelijk zijn. IRI verwerking is uitgeschakeld, wordt IDN-verwerking worden ingesteld op de standaardinstelling waarin het gedrag voor .NET Framework 2.0 wordt gebruikt voor compatibiliteit en IDN-namen worden niet gebruikt.       Het kenmerk ge√Ønternationaliseerde domeinnaam (IDN) alleen besturingselementen IDN-verwerking. Alle andere IRI verwerking (bijvoorbeeld teken normalisatie) wordt standaard uitgevoerd.       De configuratie-instelling voor de <xref:System.Configuration.IdnElement>wordt eenmaal worden gelezen wanneer de eerste <xref:System.Uri?displayProperty=fullName>klasse is samengesteld.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IdnElement> Wijzigingen aan configuratie-instellingen die u later worden genegeerd.       Zie voor meer informatie over de IRI ondersteuning van de sectie met opmerkingen voor de <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IdnElement Idn { get; }
    return:
      type: System.Configuration.IdnElement
      description: "De configuratie-instelling voor internationale domeinnaam (IDN) worden verwerkt in de &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  overload: System.Configuration.UriSection.Idn*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.IriParsing
  id: IriParsing
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Haalt een <xref href=&quot;System.Configuration.IriParsingElement&quot;> </xref> object met de configuratie-instelling voor het parseren van de International Resource-id&quot;s (IRI) in de &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  remarks: "De bestaande <xref:System.Uri?displayProperty=fullName>klasse is uitgebreid om te bieden ondersteuning voor internationale Resource-id&quot;s (IRI) en Internationalized Domain Names.</xref:System.Uri?displayProperty=fullName> Actieve gebruikers ziet niet elke wijziging van het gedrag voor .NET Framework 2.0, tenzij ze expliciet IRI en IDN inschakelt. Dit zorgt ervoor compatibiliteit met eerdere versies van .NET Framework.       De configuratie-instellingen voor IRI en IDN kunnen worden opgehaald met de <xref:System.Configuration.UriSection>klasse.</xref:System.Configuration.UriSection> De eigenschap IriParsing retourneert de configuratie-instelling voor het parseren van IRI in de <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>       IRI verwerking moet worden ingeschakeld voor IDN verwerken mogelijk zijn. IRI verwerking is uitgeschakeld, wordt IDN-verwerking worden ingesteld op de standaardinstelling waarin het gedrag voor .NET Framework 2.0 wordt gebruikt voor compatibiliteit en IDN-namen worden niet gebruikt.       Het kenmerk ge√Ønternationaliseerde domeinnaam (IDN) alleen besturingselementen IDN-verwerking. Alle andere IRI verwerking (bijvoorbeeld teken normalisatie) wordt standaard uitgevoerd.       De configuratie-instelling voor de <xref:System.Configuration.IriParsingElement>wordt eenmaal worden gelezen wanneer de eerste <xref:System.Uri?displayProperty=fullName>klasse is samengesteld.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> Wijzigingen aan configuratie-instellingen die u later worden genegeerd.       Zie voor meer informatie over de IRI ondersteuning van de sectie met opmerkingen voor de <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IriParsingElement IriParsing { get; }
    return:
      type: System.Configuration.IriParsingElement
      description: "De configuratie-instelling voor het parseren van de International Resource-id&quot;s (IRI) in de &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  overload: System.Configuration.UriSection.IriParsing*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Properties
  id: Properties
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Moet worden toegevoegd."
  overload: System.Configuration.UriSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.SchemeSettings
  id: SchemeSettings
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Haalt een <xref href=&quot;System.Configuration.SchemeSettingElementCollection&quot;> </xref> object met de configuratie-instellingen voor het schema geparseerd in de &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  remarks: "De eigenschap SchemeSettings is niet algemeen. Alleen de genericUriParserOptions = &quot;DontUnescapePathDotsAndSlashes&quot; configuratie-instelling voor HTTP en HTTPS-schema&quot;s worden ondersteund. Alle andere instellingen worden genegeerd."
  syntax:
    content: public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }
    return:
      type: System.Configuration.SchemeSettingElementCollection
      description: "De configuratie-instellingen voor het schema geparseerd in de &lt;xref:System.Uri?displayProperty=fullName&gt; klasse"
  overload: System.Configuration.UriSection.SchemeSettings*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Configuration.UriSection.#ctor
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
- uid: System.Configuration.UriSection.Idn
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
- uid: System.Configuration.IdnElement
  parent: System.Configuration
  isExternal: false
  name: IdnElement
  nameWithType: IdnElement
  fullName: System.Configuration.IdnElement
- uid: System.Configuration.UriSection.IriParsing
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
- uid: System.Configuration.IriParsingElement
  parent: System.Configuration
  isExternal: false
  name: IriParsingElement
  nameWithType: IriParsingElement
  fullName: System.Configuration.IriParsingElement
- uid: System.Configuration.UriSection.Properties
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.UriSection.SchemeSettings
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
- uid: System.Configuration.SchemeSettingElementCollection
  parent: System.Configuration
  isExternal: false
  name: SchemeSettingElementCollection
  nameWithType: SchemeSettingElementCollection
  fullName: System.Configuration.SchemeSettingElementCollection
- uid: System.Configuration.UriSection.#ctor*
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection
  nameWithType: UriSection.UriSection
- uid: System.Configuration.UriSection.Idn*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
- uid: System.Configuration.UriSection.IriParsing*
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
- uid: System.Configuration.UriSection.Properties*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
- uid: System.Configuration.UriSection.SchemeSettings*
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
