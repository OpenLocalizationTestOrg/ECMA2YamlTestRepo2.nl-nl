### YamlMime:ManagedReference
items:
- uid: System.Data.IDbCommand
  id: IDbCommand
  children:
  - System.Data.IDbCommand.Cancel
  - System.Data.IDbCommand.CommandText
  - System.Data.IDbCommand.CommandTimeout
  - System.Data.IDbCommand.CommandType
  - System.Data.IDbCommand.Connection
  - System.Data.IDbCommand.CreateParameter
  - System.Data.IDbCommand.ExecuteNonQuery
  - System.Data.IDbCommand.ExecuteReader
  - System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.IDbCommand.ExecuteScalar
  - System.Data.IDbCommand.Parameters
  - System.Data.IDbCommand.Prepare
  - System.Data.IDbCommand.Transaction
  - System.Data.IDbCommand.UpdatedRowSource
  langs:
  - csharp
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
  type: Interface
  summary: "Hiermee geeft u een SQL-instructie die wordt uitgevoerd tijdens verbinding met een gegevensbron, en wordt geïmplementeerd door de .NET DataFramework dataproviders die toegang hebben tot relationele databases."
  remarks: "De IDbCommand-interface kunt een Traceringstabellen klasse voor het implementeren van een klasse opdracht, waarmee een SQL-instructie die wordt uitgevoerd op een gegevensbron wordt aangeduid. Zie voor meer informatie over opdracht klassen [uitvoeren van een opdracht](~/add/includes/ajax-current-ext-md.md).       Een toepassing, maak een instantie van de IDbCommand-interface niet rechtstreeks, maar maakt een exemplaar van een klasse die overneemt van de IDbCommand.       Klassen die overnemen van de IDbCommand moeten alle overgenomen leden te implementeren en doorgaans extra leden om toe te voegen providerspecifieke definiëren. Bijvoorbeeld, de IDbCommand-interface definieert de <xref:System.Data.IDbCommand.ExecuteNonQuery%2A>methode.</xref:System.Data.IDbCommand.ExecuteNonQuery%2A> Op zijn beurt de <xref:System.Data.SqlClient.SqlCommand>klasse neemt over van deze methode en definieert ook de <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>methode.</xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-cs[Classic WebData SqlCommand Example#1](~/add/codesnippet/csharp/t-system.data.idbcommand_1.cs)]\n [!code-vb[Classic WebData SqlCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.idbcommand_1.vb)]"
  syntax:
    content: 'public interface IDbCommand : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDbCommand.Cancel
  id: Cancel
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: IDbCommand.Cancel()
  fullName: System.Data.IDbCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee annuleert u pogingen om de uitvoering van een <xref href=&quot;System.Data.IDbCommand&quot;> </xref>."
  remarks: "Als er niets om te annuleren, gebeurt er niets. Als er een opdracht bezig is en de poging om te annuleren mislukt, wordt echter geen uitzondering gegenereerd."
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: System.Data.IDbCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.CommandText
  id: CommandText
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: IDbCommand.CommandText
  fullName: System.Data.IDbCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van de tekstopdracht om uit te voeren voor de gegevensbron."
  remarks: "Wanneer de <xref:System.Data.IDbCommand.CommandType%2A>eigenschap is ingesteld op `StoredProcedure`, stel de eigenschap CommandText op de naam van de opgeslagen procedure.</xref:System.Data.IDbCommand.CommandType%2A> De gebruiker kan zijn vereist voor het gebruik van escape-teken syntaxis als de opgeslagen procedurenaam mag speciale tekens bevat. De opdracht wordt deze opgeslagen procedure aanroepen wanneer u een van de Execute-methoden aanroept."
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.idbcommand_2_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.idbcommand_2_1.cs)]"
  syntax:
    content: public string CommandText { get; set; }
    return:
      type: System.String
      description: "De tekstopdracht om uit te voeren. De standaardwaarde is een lege tekenreeks (&quot;&quot;)."
  overload: System.Data.IDbCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: IDbCommand.CommandTimeout
  fullName: System.Data.IDbCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van de wachttijd voordat de poging een opdracht uit te voeren wordt afgebroken en een fout optreedt."
  remarks: ''
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.idbcommand_0_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/p-system.data.idbcommand_0_1.cs)]"
  syntax:
    content: public int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "De tijd (in seconden) moet worden gewacht op de opdracht wordt uitgevoerd. De standaardwaarde is 30 seconden."
  overload: System.Data.IDbCommand.CommandTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De waarde van de eigenschap die toegewezen is kleiner dan 0."
  platform:
  - net462
- uid: System.Data.IDbCommand.CommandType
  id: CommandType
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: IDbCommand.CommandType
  fullName: System.Data.IDbCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hiermee wordt aangegeven of geeft aan hoe de <xref:System.Data.IDbCommand.CommandText*>eigenschap wordt geïnterpreteerd.</xref:System.Data.IDbCommand.CommandText*>"
  remarks: "Als u de eigenschap CommandType instelt op `StoredProcedure`, moet u instellen de <xref:System.Data.IDbCommand.CommandText%2A>eigenschap in op de naam van de opgeslagen procedure.</xref:System.Data.IDbCommand.CommandText%2A> De opdracht wordt deze opgeslagen procedure uitgevoerd wanneer u een van de Execute-methoden aanroept."
  syntax:
    content: public System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "Een van de <xref href=&quot;System.Data.CommandType&quot;> </xref> waarden. De standaardwaarde is <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbCommand.CommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.Connection
  id: Connection
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Connection
  nameWithType: IDbCommand.Connection
  fullName: System.Data.IDbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Data.IDbConnection&quot;> </xref> gebruikt door dit exemplaar van de <xref href=&quot;System.Data.IDbCommand&quot;> </xref>."
  syntax:
    content: public System.Data.IDbConnection Connection { get; set; }
    return:
      type: System.Data.IDbConnection
      description: "De verbinding met de gegevensbron."
  overload: System.Data.IDbCommand.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: IDbCommand.CreateParameter()
  fullName: System.Data.IDbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Maakt een nieuw exemplaar van een <xref href=&quot;System.Data.IDbDataParameter&quot;> </xref> object."
  remarks: "Wanneer wordt overgenomen van <xref:System.Data.IDbCommand>, een .NET Framework-gegevensprovider implementeert een sterk getypeerde versie van CreateParameter.</xref:System.Data.IDbCommand>"
  syntax:
    content: public System.Data.IDbDataParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.IDbDataParameter
      description: "Een <xref uid=&quot;langword_csharp_IDbDataParameter&quot; name=&quot;IDbDataParameter&quot; href=&quot;&quot;> </xref> object."
  overload: System.Data.IDbCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: IDbCommand.ExecuteNonQuery()
  fullName: System.Data.IDbCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Voert een SQL-instructie tegen de <xref uid=&quot;langword_csharp_Connection&quot; name=&quot;Connection&quot; href=&quot;&quot;> </xref> object van een .NET Framework-gegevensprovider en retourneert het aantal rijen zijn beïnvloed."
  remarks: "U kunt de ExecuteNonQuery catalogus bewerkingen (bijvoorbeeld het opvragen van de structuur van een database of het maken van databaseobjecten zoals tabellen) uit te voeren of te wijzigen van de gegevens in een database zonder gebruik van een <xref:System.Data.DataSet>door het uitvoeren van de UPDATE, INSERT of DELETE-instructies.</xref:System.Data.DataSet>       Hoewel de ExecuteNonQuery heeft geen rijen geretourneerd, worden een output-parameters of retourwaarden toegewezen aan de parameters ingevuld met gegevens.       De geretourneerde waarde is voor de UPDATE, INSERT en DELETE-instructies, het aantal rijen zijn beïnvloed door de opdracht. Voor alle andere typen van de instructies is de geretourneerde waarde -1."
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it. To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.idbcommand_1_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.idbcommand_1_1.vb)]"
  syntax:
    content: public int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "Het aantal rijen zijn beïnvloed."
  overload: System.Data.IDbCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verbinding bestaat niet.       - of - de verbinding is niet geopend."
  platform:
  - net462
- uid: System.Data.IDbCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: IDbCommand.ExecuteReader()
  fullName: System.Data.IDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Voert de <> </> *> tegen de <> </> *> en maakt een <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
  syntax:
    content: public System.Data.IDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.IDataReader
      description: "Een <xref href=&quot;System.Data.IDataReader&quot;> </xref> object."
  overload: System.Data.IDbCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Voert de <> </> *> tegen de <> </> *>, en maakt een <xref href=&quot;System.Data.IDataReader&quot;> </xref> met een van de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarden."
  remarks: "De aanroeper moet aanroepen de <xref:System.Data.IDbConnection.Open%2A>methode van de <xref:System.Data.IDbCommand.Connection%2A>eigenschap.</xref:System.Data.IDbCommand.Connection%2A> </xref:System.Data.IDbConnection.Open%2A>       Wanneer de <xref:System.Data.IDbCommand.CommandType%2A>eigenschap is ingesteld op `StoredProcedure`, wordt de <xref:System.Data.IDbCommand.CommandText%2A>eigenschap moet worden ingesteld op de naam van de opgeslagen procedure.</xref:System.Data.IDbCommand.CommandText%2A> </xref:System.Data.IDbCommand.CommandType%2A> De opdracht deze opgeslagen procedure wordt uitgevoerd bij het aanroepen van <xref:System.Data.IDbCommand.ExecuteReader%2A>.</xref:System.Data.IDbCommand.ExecuteReader%2A>      > [!NOTE] > Gebruik <xref:System.Data.CommandBehavior>grote waarden en binaire gegevens kunnen ophalen.</xref:System.Data.CommandBehavior> Anders wordt een <xref:System.OutOfMemoryException>optreden en de verbinding wordt gesloten.</xref:System.OutOfMemoryException>       Terwijl het <xref:System.Data.IDataReader>is in gebruik en de bijbehorende <xref:System.Data.IDbConnection>is bezig de <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> behoeve</xref:System.Data.IDbConnection> </xref:System.Data.IDataReader> In deze status kunnen geen andere bewerkingen worden uitgevoerd op de <xref:System.Data.IDbConnection>andere dan deze sluiten</xref:System.Data.IDbConnection> Dit is het geval totdat de <xref:System.Data.IDataReader.Close%2A>methode van de DataReader wordt aangeroepen.</xref:System.Data.IDataReader.Close%2A> Als de DataReader is gemaakt met <xref:System.Data.CommandBehavior>ingesteld op `CloseConnection`, wordt de verbinding automatisch sluiten van de DataReader gesloten.</xref:System.Data.CommandBehavior>"
  syntax:
    content: public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Een van de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarden."
    return:
      type: System.Data.IDataReader
      description: "Een <xref href=&quot;System.Data.IDataReader&quot;> </xref> object."
  overload: System.Data.IDbCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: IDbCommand.ExecuteScalar()
  fullName: System.Data.IDbCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "De query wordt uitgevoerd en retourneert de eerste kolom van de eerste rij in de resultatenset die door de query. Extra kolommen of rijen worden genegeerd."
  remarks: "Gebruik de methode ExecuteScalar een enkele waarde (bijvoorbeeld een cumulatieve waarde) ophalen uit een database. Hiervoor moet kleiner dan het gebruik van de <xref:System.Data.IDbCommand.ExecuteReader%2A>methode, en vervolgens de bewerkingen die nodig zijn voor het genereren van de enkele waarde uit te voeren met behulp van de gegevens die zijn geretourneerd door een <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> </xref:System.Data.IDbCommand.ExecuteReader%2A> -code       Een typische ExecuteScalar query kan worden opgemaakt als in het volgende C#-voorbeeld: ```   CommandText = &quot;select count(*) as NumberOfRegions from region&quot;;   Int32 count = (int) ExecuteScalar();   ``` als de eerste kolom van de eerste rij in de resultaatset niet wordt gevonden, een null-verwijzing (`Nothing` in Visual Basic) wordt geretourneerd. Als de waarde in de database `null`, retourneert de query `DBNull.Value`."
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>. The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.idbcommand_0_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.idbcommand_0_1.vb)]"
  syntax:
    content: public object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "De eerste kolom van de eerste rij in de resultatenset."
  overload: System.Data.IDbCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.Parameters
  id: Parameters
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: IDbCommand.Parameters
  fullName: System.Data.IDbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the <xref href=&quot;System.Data.IDataParameterCollection&quot;></xref>."
  remarks: ''
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters. In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.  \n  \n [!code-cs[Classic WebData IDbCommand.Parameters Example#1](~/add/codesnippet/csharp/p-system.data.idbcommand_1_1.cs)]\n [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/add/codesnippet/visualbasic/p-system.data.idbcommand_1_1.vb)]"
  syntax:
    content: public System.Data.IDataParameterCollection Parameters { get; }
    return:
      type: System.Data.IDataParameterCollection
      description: "De parameters van de SQL-instructie of opgeslagen procedure."
  overload: System.Data.IDbCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.Prepare
  id: Prepare
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: IDbCommand.Prepare()
  fullName: System.Data.IDbCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Maakt een voorbereide (of gecompileerde) versie van de opdracht op de gegevensbron."
  remarks: "Als de <xref:System.Data.IDbCommand.CommandType%2A>eigenschap is ingesteld op `TableDirect`, voorbereiden, gebeurt er niets.</xref:System.Data.IDbCommand.CommandType%2A> Als <xref:System.Data.IDbCommand.CommandType%2A>is ingesteld op `StoredProcedure`, het aanroepen van Prepare moet slagen, hoewel dit in een niet-op. resulteren kan</xref:System.Data.IDbCommand.CommandType%2A> De server automatisch in de cache opgeslagen plannen voor hergebruik vereist; Er is daarom niet nodig deze methode niet aanroepen rechtstreeks in uw clienttoepassing."
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection. The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/visualbasic/m-system.data.idbcommand_2_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/csharp/m-system.data.idbcommand_2_1.cs)]"
  syntax:
    content: public void Prepare ();
    parameters: []
  overload: System.Data.IDbCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> is niet ingesteld.       -or-       The <>*> is not <xref:System.Data.OleDb.OleDbConnection.Open*>.</xref:System.Data.OleDb.OleDbConnection.Open*>"
  platform:
  - net462
- uid: System.Data.IDbCommand.Transaction
  id: Transaction
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: IDbCommand.Transaction
  fullName: System.Data.IDbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld van de transactie waarbinnen de <xref uid=&quot;langword_csharp_Command&quot; name=&quot;Command&quot; href=&quot;&quot;> </xref> object van een .NET Framework-gegevensprovider wordt uitgevoerd."
  syntax:
    content: public System.Data.IDbTransaction Transaction { get; set; }
    return:
      type: System.Data.IDbTransaction
      description: "de <xref uid=&quot;langword_csharp_Command&quot; name=&quot;Command&quot; href=&quot;&quot;> </xref> object van een .NET Framework-gegevensprovider wordt uitgevoerd. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: IDbCommand.UpdatedRowSource
  fullName: System.Data.IDbCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opgehaald of ingesteld hoe opdrachtresultaten worden toegepast op de <xref href=&quot;System.Data.DataRow&quot;> </xref> bij gebruik door de <xref:System.Data.IDataAdapter.Update*>methode van een <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>.</xref:System.Data.IDataAdapter.Update*>"
  syntax:
    content: public System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "Een van de <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> waarden. De standaardwaarde is <xref uid=&quot;langword_csharp_Both&quot; name=&quot;Both&quot; href=&quot;&quot;> </xref> tenzij de opdracht wordt automatisch gegenereerd. De standaardwaarde <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De ingevoerde waarde is niet een van de <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> waarden."
  platform:
  - net462
references:
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.IDbCommand.Cancel
  parent: System.Data.IDbCommand
  isExternal: false
  name: Cancel()
  nameWithType: IDbCommand.Cancel()
  fullName: System.Data.IDbCommand.Cancel()
- uid: System.Data.IDbCommand.CommandText
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandText
  nameWithType: IDbCommand.CommandText
  fullName: System.Data.IDbCommand.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDbCommand.CommandTimeout
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: IDbCommand.CommandTimeout
  fullName: System.Data.IDbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbCommand.CommandType
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandType
  nameWithType: IDbCommand.CommandType
  fullName: System.Data.IDbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.IDbCommand.Connection
  parent: System.Data.IDbCommand
  isExternal: false
  name: Connection
  nameWithType: IDbCommand.Connection
  fullName: System.Data.IDbCommand.Connection
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.Data.IDbCommand.CreateParameter
  parent: System.Data.IDbCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: IDbCommand.CreateParameter()
  fullName: System.Data.IDbCommand.CreateParameter()
- uid: System.Data.IDbDataParameter
  parent: System.Data
  isExternal: false
  name: IDbDataParameter
  nameWithType: IDbDataParameter
  fullName: System.Data.IDbDataParameter
- uid: System.Data.IDbCommand.ExecuteNonQuery
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: IDbCommand.ExecuteNonQuery()
  fullName: System.Data.IDbCommand.ExecuteNonQuery()
- uid: System.Data.IDbCommand.ExecuteReader
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: IDbCommand.ExecuteReader()
  fullName: System.Data.IDbCommand.ExecuteReader()
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.IDbCommand.ExecuteScalar
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: IDbCommand.ExecuteScalar()
  fullName: System.Data.IDbCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDbCommand.Parameters
  parent: System.Data.IDbCommand
  isExternal: false
  name: Parameters
  nameWithType: IDbCommand.Parameters
  fullName: System.Data.IDbCommand.Parameters
- uid: System.Data.IDataParameterCollection
  parent: System.Data
  isExternal: false
  name: IDataParameterCollection
  nameWithType: IDataParameterCollection
  fullName: System.Data.IDataParameterCollection
- uid: System.Data.IDbCommand.Prepare
  parent: System.Data.IDbCommand
  isExternal: false
  name: Prepare()
  nameWithType: IDbCommand.Prepare()
  fullName: System.Data.IDbCommand.Prepare()
- uid: System.Data.IDbCommand.Transaction
  parent: System.Data.IDbCommand
  isExternal: false
  name: Transaction
  nameWithType: IDbCommand.Transaction
  fullName: System.Data.IDbCommand.Transaction
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.IDbCommand.UpdatedRowSource
  parent: System.Data.IDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: IDbCommand.UpdatedRowSource
  fullName: System.Data.IDbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.IDbCommand.Cancel*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Cancel
  nameWithType: IDbCommand.Cancel
- uid: System.Data.IDbCommand.CommandText*
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandText
  nameWithType: IDbCommand.CommandText
- uid: System.Data.IDbCommand.CommandTimeout*
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: IDbCommand.CommandTimeout
- uid: System.Data.IDbCommand.CommandType*
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandType
  nameWithType: IDbCommand.CommandType
- uid: System.Data.IDbCommand.Connection*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Connection
  nameWithType: IDbCommand.Connection
- uid: System.Data.IDbCommand.CreateParameter*
  parent: System.Data.IDbCommand
  isExternal: false
  name: CreateParameter
  nameWithType: IDbCommand.CreateParameter
- uid: System.Data.IDbCommand.ExecuteNonQuery*
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: IDbCommand.ExecuteNonQuery
- uid: System.Data.IDbCommand.ExecuteReader*
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: IDbCommand.ExecuteReader
- uid: System.Data.IDbCommand.ExecuteScalar*
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: IDbCommand.ExecuteScalar
- uid: System.Data.IDbCommand.Parameters*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Parameters
  nameWithType: IDbCommand.Parameters
- uid: System.Data.IDbCommand.Prepare*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Prepare
  nameWithType: IDbCommand.Prepare
- uid: System.Data.IDbCommand.Transaction*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Transaction
  nameWithType: IDbCommand.Transaction
- uid: System.Data.IDbCommand.UpdatedRowSource*
  parent: System.Data.IDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: IDbCommand.UpdatedRowSource
