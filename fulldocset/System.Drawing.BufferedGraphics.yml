### YamlMime:ManagedReference
items:
- uid: System.Drawing.BufferedGraphics
  id: BufferedGraphics
  children:
  - System.Drawing.BufferedGraphics.Dispose
  - System.Drawing.BufferedGraphics.Finalize
  - System.Drawing.BufferedGraphics.Graphics
  - System.Drawing.BufferedGraphics.Render
  - System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  - System.Drawing.BufferedGraphics.Render(System.IntPtr)
  langs:
  - csharp
  name: BufferedGraphics
  nameWithType: BufferedGraphics
  fullName: System.Drawing.BufferedGraphics
  type: Class
  summary: "Biedt een grafische buffer voor dubbele buffers."
  remarks: "De klasse BufferedGraphics kunt u voor het implementeren van aangepaste dubbele buffers voor uw afbeeldingen. Biedt een wrapper voor een buffer afbeeldingen, samen met de methoden die u gebruiken kunt om te schrijven naar de buffer en de inhoud naar een uitvoerapparaat weer te geven.       Afbeeldingen met dubbele buffers kunt verlagen of elimineren knipperen dat wordt veroorzaakt door een weergave oppervlak opnieuw tekenen. Wanneer u dubbele buffers, bijgewerkte afbeeldingen worden eerst getekend naar een buffer in het geheugen en de inhoud van deze buffer vervolgens snel worden geschreven naar enkele of alle van het oppervlak weergegeven. Deze relatief korte overschrijven van de weergegeven afbeeldingen doorgaans of verminderd elimineert de knipperen die soms treedt op wanneer afbeeldingen worden bijgewerkt.      > [!NOTE] > De eenvoudigste manier om dubbele buffer is om in te stellen de <xref:System.Windows.Forms.ControlStyles>beheren stijl-vlag op een besturingselement met de <xref:System.Windows.Forms.Control.SetStyle%2A>methode.</xref:System.Windows.Forms.Control.SetStyle%2A> </xref:System.Windows.Forms.ControlStyles> Instellen van de <xref:System.Windows.Forms.ControlStyles>markering voor een besturingselement wordt omgeleid alle afbeelden voor het besturingselement via een standaard grafische buffer, zonder eventuele aanvullende code.</xref:System.Windows.Forms.ControlStyles> Deze vlag is ingesteld op `true` standaard.       De klasse BufferedGraphics bevat geen openbare constructor en moet worden gemaakt door de <xref:System.Drawing.BufferedGraphicsContext>voor een toepassing domein met behulp van de <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>methode.</xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> </xref:System.Drawing.BufferedGraphicsContext> U kunt ophalen de <xref:System.Drawing.BufferedGraphicsContext>voor het huidige toepassingsdomein van de statische <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>eigenschap.</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> </xref:System.Drawing.BufferedGraphicsContext>       De <xref:System.Drawing.BufferedGraphics.Graphics%2A>eigenschap kan worden gebruikt voor tekenen naar de buffer van afbeeldingen.</xref:System.Drawing.BufferedGraphics.Graphics%2A> Deze eigenschap biedt toegang tot de <xref:System.Drawing.Graphics>-object dat wordt getekend naar de buffer die is toegewezen voor dit object BufferedGraphics graphics.</xref:System.Drawing.Graphics>       De <xref:System.Drawing.BufferedGraphics.Render%2A>methode met geen argumenten Hiermee tekent het bufferen van de inhoud van de afbeeldingen aan het oppervlak opgegeven wanneer de buffer die is toegewezen.</xref:System.Drawing.BufferedGraphics.Render%2A> Andere overloads van de <xref:System.Drawing.BufferedGraphics.Render%2A>methode kunt u opgeven een <xref:System.Drawing.Graphics>object of een <xref:System.IntPtr>object die verwijst naar de apparaatcontext van een waarop de inhoud van de buffer graphics wordt getekend.</xref:System.IntPtr> </xref:System.Drawing.Graphics> </xref:System.Drawing.BufferedGraphics.Render%2A>       Zie voor meer informatie over het tekenen van afbeeldingen dubbele buffer [dubbele gebufferd afbeeldingen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using a BufferedGraphics object to draw graphics using several types of buffering implementations. Clicking the form alternately starts and stops a timer that causes draw updates. The draw updates allow you to observe the effect of double buffering. Right-clicking the form cycles through the following drawing modes:  \n  \n-   Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.  \n  \n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles> control style.  \n  \n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles> control style.  \n  \n In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.  \n  \n [!code-cpp[BufferedGraphicsExample#1](~/add/codesnippet/cpp/t-system.drawing.buffere_1_1.cpp)]\n [!code-cs[BufferedGraphicsExample#1](~/add/codesnippet/csharp/t-system.drawing.buffere_1_1.cs)]\n [!code-vb[BufferedGraphicsExample#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_1_1.vb)]"
  syntax:
    content: 'public sealed class BufferedGraphics : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Dispose
  id: Dispose
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Dispose()
  nameWithType: BufferedGraphics.Dispose()
  fullName: System.Drawing.BufferedGraphics.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> object."
  remarks: "Dispose aanroepen wanneer u klaar bent met de <xref:System.Drawing.BufferedGraphics>object.</xref:System.Drawing.BufferedGraphics> De methode Dispose verlaat de <xref:System.Drawing.BufferedGraphics>-object in een onbruikbare status.</xref:System.Drawing.BufferedGraphics> Na Dispose aanroepen, moet u alle verwijzingen naar vrijgeven de <xref:System.Drawing.BufferedGraphics>object zodat het geheugen door de garbage collector vrijmaken kunt die de <xref:System.Drawing.BufferedGraphics>object is bepaald dat zich bevindt.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphics> Zie voor meer informatie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Altijd aanroep Dispose voordat het vrijgeven van uw laatste verwijzing naar de <xref:System.Drawing.BufferedGraphics>object.</xref:System.Drawing.BufferedGraphics> Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de <xref:System.Drawing.BufferedGraphics>van het object `Finalize` methode.</xref:System.Drawing.BufferedGraphics>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Finalize
  id: Finalize
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Finalize()
  nameWithType: BufferedGraphics.Finalize()
  fullName: System.Drawing.BufferedGraphics.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hiermee kunt een object om te proberen bronnen vrij te maken en andere bewerkingen opschoning uitvoeren voordat het door de garbage collector is vrijgemaakt."
  syntax:
    content: ~BufferedGraphics ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Graphics
  id: Graphics
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
  fullName: System.Drawing.BufferedGraphics.Graphics
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Haalt een <xref href=&quot;System.Drawing.Graphics&quot;> </xref> -object dat aan de afbeeldingen buffer levert."
  remarks: "Deze eigenschap bevat een <xref:System.Drawing.Graphics>-object dat wordt getekend naar de buffer die is toegewezen voor deze afbeeldingen <xref:System.Drawing.BufferedGraphics>object.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics Graphics { get; }
    return:
      type: System.Drawing.Graphics
      description: "Een <xref href=&quot;System.Drawing.Graphics&quot;> </xref> -object dat aan de afbeeldingen buffer levert."
  overload: System.Drawing.BufferedGraphics.Graphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render
  id: Render
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render()
  nameWithType: BufferedGraphics.Render()
  fullName: System.Drawing.BufferedGraphics.Render()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "De inhoud van de buffer graphics schrijft naar het standaard-apparaat."
  remarks: "Deze methode schrijft de inhoud van de buffer afbeeldingen op het apparaat dat is opgegeven door het aanroepen van de <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>methode van de <xref:System.Drawing.BufferedGraphicsContext>gebruikt voor het maken van dit <xref:System.Drawing.BufferedGraphics>object.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>"
  syntax:
    content: public void Render ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  id: Render(System.Drawing.Graphics)
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render(Graphics)
  nameWithType: BufferedGraphics.Render(Graphics)
  fullName: System.Drawing.BufferedGraphics.Render(Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "De inhoud van de buffer graphics schrijft naar de opgegeven <xref href=&quot;System.Drawing.Graphics&quot;> </xref> object."
  remarks: "Deze methode schrijft de inhoud van de buffer afbeeldingen aan de opgegeven <xref:System.Drawing.Graphics>object.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#5](~/add/codesnippet/csharp/m-system.drawing.buffere_1_1.cs)]\n [!code-cpp[BufferingExamples#5](~/add/codesnippet/cpp/m-system.drawing.buffere_1_1.cpp)]\n [!code-vb[BufferingExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.buffere_1_1.vb)]"
  syntax:
    content: public void Render (System.Drawing.Graphics target);
    parameters:
    - id: target
      type: System.Drawing.Graphics
      description: "Een <xref href=&quot;System.Drawing.Graphics&quot;> </xref> object waarnaar u de inhoud van de buffer graphics schrijven."
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)
  id: Render(System.IntPtr)
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render(IntPtr)
  nameWithType: BufferedGraphics.Render(IntPtr)
  fullName: System.Drawing.BufferedGraphics.Render(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Schrijft de inhoud van de buffer van de afbeeldingen in de apparaatcontext is gekoppeld aan de opgegeven <xref:System.IntPtr>verwerken.</xref:System.IntPtr>"
  remarks: "Deze methode schrijft de inhoud van de buffer van de afbeeldingen in de apparaatcontext is gekoppeld aan de opgegeven <xref:System.IntPtr>verwerken.</xref:System.IntPtr>"
  example:
  - "The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#6](~/add/codesnippet/csharp/m-system.drawing.buffere_0_1.cs)]\n [!code-cpp[BufferingExamples#6](~/add/codesnippet/cpp/m-system.drawing.buffere_0_1.cpp)]\n [!code-vb[BufferingExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.buffere_0_1.vb)]"
  syntax:
    content: public void Render (IntPtr targetDC);
    parameters:
    - id: targetDC
      type: System.IntPtr
      description: "Een <xref:System.IntPtr>die verwijst naar de apparaatcontext waarnaar de inhoud van de buffer graphics schrijven.</xref:System.IntPtr>"
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.BufferedGraphics.Dispose
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Dispose()
  nameWithType: BufferedGraphics.Dispose()
  fullName: System.Drawing.BufferedGraphics.Dispose()
- uid: System.Drawing.BufferedGraphics.Finalize
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Finalize()
  nameWithType: BufferedGraphics.Finalize()
  fullName: System.Drawing.BufferedGraphics.Finalize()
- uid: System.Drawing.BufferedGraphics.Graphics
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
  fullName: System.Drawing.BufferedGraphics.Graphics
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.BufferedGraphics.Render
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render()
  nameWithType: BufferedGraphics.Render()
  fullName: System.Drawing.BufferedGraphics.Render()
- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render(Graphics)
  nameWithType: BufferedGraphics.Render(Graphics)
  fullName: System.Drawing.BufferedGraphics.Render(Graphics)
- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render(IntPtr)
  nameWithType: BufferedGraphics.Render(IntPtr)
  fullName: System.Drawing.BufferedGraphics.Render(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.BufferedGraphics.Dispose*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Dispose
  nameWithType: BufferedGraphics.Dispose
- uid: System.Drawing.BufferedGraphics.Finalize*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Finalize
  nameWithType: BufferedGraphics.Finalize
- uid: System.Drawing.BufferedGraphics.Graphics*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
- uid: System.Drawing.BufferedGraphics.Render*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render
  nameWithType: BufferedGraphics.Render
