### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32
  id: BitVector32
  children:
  - System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  - System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateMask
  - System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Data
  - System.Collections.Specialized.BitVector32.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.GetHashCode
  - System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Item(System.Int32)
  - System.Collections.Specialized.BitVector32.ToString
  - System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  langs:
  - csharp
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
  type: Struct
  summary: "Biedt een eenvoudige structuur die Booleaanse waarden en kleine gehele in de 32-bits van geheugen opslaat."
  remarks: "BitVector32 is efficiënter dan <xref:System.Collections.BitArray>voor Boole-waarden en klein gehele getallen die intern worden gebruikt.</xref:System.Collections.BitArray> Een <xref:System.Collections.BitArray>voor onbepaalde tijd zo nodig kan worden uitgebreid, maar heeft het geheugen en de prestaties overhead die een klasse-instantie vereist.</xref:System.Collections.BitArray> Daarentegen alleen 32-bits maakt gebruik van een BitVector32.       Een structuur BitVector32 kan worden ingesteld up-to-date naar secties voor kleine gehele getallen of bits-vlaggen voor Boole-waarden bevatten, maar niet allebei. Een <xref:System.Collections.Specialized.BitVector32.Section>is een venster in de BitVector32 en bestaat uit het kleinste aantal opeenvolgende bits die de maximale waarde is opgegeven in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</xref:System.Collections.Specialized.BitVector32.CreateSection%2A> kan bevatten</xref:System.Collections.Specialized.BitVector32.Section> Bijvoorbeeld een sectie met een maximale waarde van 1 bestaat uit slechts één bit, terwijl een sectie met een maximale waarde van 5 uit drie bits bestaat. Kunt u een <xref:System.Collections.Specialized.BitVector32.Section>met een maximale waarde van 1 tot en met fungeren als een Booleaanse waarde, waardoor u voor het opslaan van gehele getallen en Booleaanse waarden in de dezelfde BitVector32.</xref:System.Collections.Specialized.BitVector32.Section>       Een aantal leden kunnen worden gebruikt voor een BitVector32 die is ingesteld als secties, terwijl andere leden kunnen worden gebruikt voor een die is ingesteld als de bits-vlaggen. Bijvoorbeeld, de <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>eigenschap is de indexeerfunctie voor een BitVector32 die is ingesteld als secties en de <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>eigenschap is de indexeerfunctie voor een BitVector32 die is ingesteld als de bits-vlaggen.</xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> </xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> <xref:System.Collections.Specialized.BitVector32.CreateMask%2A>Hiermee maakt u een reeks maskers die kunnen worden gebruikt voor toegang tot afzonderlijke bits in een BitVector32 die is ingesteld als de bits-vlaggen.</xref:System.Collections.Specialized.BitVector32.CreateMask%2A>       Met behulp van een masker op een BitVector32 die is ingesteld als secties leiden onverwachte resultaten tot kunnen."
  example:
  - "The following code example uses a BitVector32 as a collection of bit flags.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/csharp/t-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_1.vb)]\n [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/cpp/t-system.collections.spe_10_1.cpp)]  \n  \n The following code example uses a BitVector32 as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/t-system.collections.spe_10_2.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/t-system.collections.spe_10_2.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_2.vb)]"
  syntax:
    content: public struct BitVector32
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  id: '#ctor(System.Collections.Specialized.BitVector32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> structuur met de gegevens weergegeven in een bestaand <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> structuur."
  remarks: "Deze constructor is een bewerking O(1)."
  syntax:
    content: public BitVector32 (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "Een <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> structuur met de gegevens te kopiëren."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> structuur met de gegevens weergegeven in een geheel getal."
  remarks: "Deze constructor is een bewerking O(1)."
  syntax:
    content: public BitVector32 (int data);
    parameters:
    - id: data
      type: System.Int32
      description: "Een geheel getal dat de gegevens van de nieuwe <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask
  id: CreateMask
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee wordt het eerste masker in een reeks maskers die kunnen worden gebruikt voor het ophalen van afzonderlijke bits in een <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> die is ingesteld als de bits-vlaggen."
  remarks: "Gebruik `CreateMask()` voor het maken van de eerste masker in een reeks en `CreateMask(int)` voor alle daaropvolgende maskers.       Meerdere maskers kunnen worden gemaakt om te verwijzen naar de vlag voor dezelfde bits.       Het resulterende masker Hiermee isoleert u slechts één bit vlag in de <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> U kunt met behulp van de Bitsgewijze OR-bewerking voor het maken van een masker dat meerdere bits vlaggen in de <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> isoleert maskers combineren       Met behulp van een masker op een <xref:System.Collections.Specialized.BitVector32>die is ingesteld als secties leiden onverwachte resultaten tot kunnen.</xref:System.Collections.Specialized.BitVector32>       Deze methode is een bewerking O(1)."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_3_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_3_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_3_1.vb)]"
  syntax:
    content: public static int CreateMask ();
    parameters: []
    return:
      type: System.Int32
      description: "Een masker dat de eerste bitvlag in isoleert de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  id: CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee maakt u een extra masker na het opgegeven masker in een reeks maskers die kunnen worden gebruikt voor het ophalen van afzonderlijke bits in een <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> die is ingesteld als de bits-vlaggen."
  remarks: "Gebruik `CreateMask()` voor het maken van de eerste masker in een reeks en `CreateMask(int)` voor alle daaropvolgende maskers.       Meerdere maskers kunnen worden gemaakt om te verwijzen naar de vlag voor dezelfde bits.       Het resulterende masker Hiermee isoleert u slechts één bit vlag in de <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> U kunt met behulp van de Bitsgewijze OR-bewerking voor het maken van een masker dat meerdere bits vlaggen in de <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> isoleert maskers combineren       Met behulp van een masker op een <xref:System.Collections.Specialized.BitVector32>die is ingesteld als secties leiden onverwachte resultaten tot kunnen.</xref:System.Collections.Specialized.BitVector32>       Deze methode is een bewerking O(1)."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_5_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_5_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_5_1.vb)]"
  syntax:
    content: public static int CreateMask (int previous);
    parameters:
    - id: previous
      type: System.Int32
      description: "Het masker dat de vorige bitvlag aangeeft."
    return:
      type: System.Int32
      description: "Een masker dat de bit isoleert vlag die na de <code> previous </code> verwijst naar in <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previous</code>Hiermee geeft u de laatste bits-vlag in de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  id: CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee maakt u de eerste <xref:System.Collections.Specialized.BitVector32.Section>in een reeks secties die kleine gehele getallen bevatten.</xref:System.Collections.Specialized.BitVector32.Section>"
  remarks: "Een <xref:System.Collections.Specialized.BitVector32.Section>is een venster in de <xref:System.Collections.Specialized.BitVector32>en bestaat uit het kleinste aantal opeenvolgende bits dat de maximale waarde is opgegeven in CreateSection kan bevatten.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section> Bijvoorbeeld een sectie met een maximale waarde van 1 bestaat uit slechts één bit, terwijl een sectie met een maximale waarde van 5 uit drie bits bestaat. U kunt maken met een <xref:System.Collections.Specialized.BitVector32.Section>maximale waarde van 1 tot en met fungeren als een Booleaanse waarde, waardoor u store gehele getallen en Booleaanse waarden in dezelfde <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section>       Als secties bestaat al in de <xref:System.Collections.Specialized.BitVector32>, deze gedeelten zijn nog steeds toegankelijk; echter overlappende secties mogelijk leiden tot onverwachte resultaten.</xref:System.Collections.Specialized.BitVector32>       Deze methode is een bewerking O(1)."
  example:
  - "The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/m-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/m-system.collections.spe_18_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/m-system.collections.spe_18_1.vb)]"
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "Een 16-bits geheel getal met teken waarmee de maximale waarde voor de nieuwe <xref:System.Collections.Specialized.BitVector32.Section>.</xref:System.Collections.Specialized.BitVector32.Section>"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "Een <xref:System.Collections.Specialized.BitVector32.Section>die een getal van nul tot kan bevatten <code> maxValue </code>.</xref:System.Collections.Specialized.BitVector32.Section>"
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>maxValue</code>is kleiner dan 1."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  id: CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "Moet worden toegevoegd."
    - id: previous
      type: System.Collections.Specialized.BitVector32.Section
      description: "Moet worden toegevoegd."
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "Moet worden toegevoegd."
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Data
  id: Data
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee wordt de waarde van de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> als een geheel getal."
  remarks: "Voor toegang tot de waarde van de afzonderlijke secties of vlaggen bit, gebruikt u de <xref:System.Collections.Specialized.BitVector32.Item%2A>eigenschap.</xref:System.Collections.Specialized.BitVector32.Item%2A>       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: public int Data { get; }
    return:
      type: System.Int32
      description: "De waarde van de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> als een geheel getal."
  overload: System.Collections.Specialized.BitVector32.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hiermee wordt bepaald of het opgegeven object gelijk zijn aan de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Het object `o` wordt beschouwd als gelijk zijn aan de <xref:System.Collections.Specialized.BitVector32>Als het type `o` is compatibel met de <xref:System.Collections.Specialized.BitVector32>type en als de waarde van `o` gelijk is aan de waarde van <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Deze methode is een bewerking O(1)."
  example:
  - "The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/cpp/m-system.collections.spe_34_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/csharp/m-system.collections.spe_34_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/visualbasic/m-system.collections.spe_34_1.vb)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Het object te vergelijken met de huidige <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het opgegeven object is gelijk aan de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Fungeert als een hash-functie voor de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "De hash-code van een <xref:System.Collections.Specialized.BitVector32>is gebaseerd op de waarde van <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> Twee exemplaren van <xref:System.Collections.Specialized.BitVector32>met dezelfde waarde voor <xref:System.Collections.Specialized.BitVector32.Data%2A>genereren ook dezelfde hashcode.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32>       Deze methode is een bewerking O(1)."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een hashcode voor de <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  id: Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }
    parameters:
    - id: section
      type: System.Collections.Specialized.BitVector32.Section
      description: "Moet worden toegevoegd."
    return:
      type: System.Int32
      description: "Moet worden toegevoegd."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Opgehaald of ingesteld van de status van de bitvlag aangegeven door het opgegeven masker."
  remarks: "De eigenschap Item [sectie] is de indexeerfunctie voor een <xref:System.Collections.Specialized.BitVector32>die is ingesteld als secties en de eigenschap Item [int] is de indexeerfunctie voor een <xref:System.Collections.Specialized.BitVector32>die is ingesteld als de bits-vlaggen.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Met deze eigenschap in op een <xref:System.Collections.Specialized.BitVector32>die is ingesteld als secties leiden onverwachte resultaten tot kunnen.</xref:System.Collections.Specialized.BitVector32>       Het trefwoord wordt gebruikt voor het definiëren van de indexeerfuncties in plaats van de implementatie van de eigenschap Item van de taal C#. Visual Basic implementeert Item als een standaardeigenschap dezelfde functionaliteit indexering bieden.       Ophalen van de waarde van deze eigenschap is een bewerking O(1); de eigenschap is ook een O(1)-bewerking."
  syntax:
    content: public bool this[int bit] { get; set; }
    parameters:
    - id: bit
      type: System.Int32
      description: "Het masker dat aangeeft van de bit ophalen of instellen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven bits-vlag is ingeschakeld (1); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retourneert een tekenreeks met de huidige <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Deze methode overschrijft <xref:System.Object.ToString%2A?displayProperty=fullName>.</xref:System.Object.ToString%2A?displayProperty=fullName>       Deze methode is een bewerking O(1)."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Een tekenreeks met de huidige <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  id: ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retourneert een tekenreeks met de opgegeven <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Deze methode is een bewerking O(1)."
  syntax:
    content: public static string ToString (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "De <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> om aan te duiden."
    return:
      type: System.String
      description: "Een tekenreeks met de opgegeven <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
- uid: System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.BitVector32.CreateMask
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
- uid: System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32+Section
  nameWithType: BitVector32+Section
  fullName: System.Collections.Specialized.BitVector32+Section
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Data
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
- uid: System.Collections.Specialized.BitVector32.ToString
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
- uid: System.Collections.Specialized.BitVector32.#ctor*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32.BitVector32
- uid: System.Collections.Specialized.BitVector32.CreateMask*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask
  nameWithType: BitVector32.CreateMask
- uid: System.Collections.Specialized.BitVector32.CreateSection*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection
  nameWithType: BitVector32.CreateSection
- uid: System.Collections.Specialized.BitVector32.Data*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals
  nameWithType: BitVector32.Equals
- uid: System.Collections.Specialized.BitVector32.GetHashCode*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode
  nameWithType: BitVector32.GetHashCode
- uid: System.Collections.Specialized.BitVector32.Item*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item
  nameWithType: BitVector32.Item
- uid: System.Collections.Specialized.BitVector32.ToString*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString
  nameWithType: BitVector32.ToString
