### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeStream
  id: PipeStream
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  summary: "Beschrijft een <xref:System.IO.Stream>object rond een pipe die ondersteuning biedt voor anonieme en named pipes.</xref:System.IO.Stream>"
  remarks: "De klasse PipeStream biedt de basisklasse voor benoemde en anonieme pipes bewerkingen in .NET Framework. Gebruik de <xref:System.IO.Pipes.NamedPipeServerStream>en <xref:System.IO.Pipes.NamedPipeClientStream>klassen voor benoemde pipe-bewerkingen.</xref:System.IO.Pipes.NamedPipeClientStream> </xref:System.IO.Pipes.NamedPipeServerStream> Gebruik de <xref:System.IO.Pipes.AnonymousPipeServerStream>en <xref:System.IO.Pipes.AnonymousPipeClientStream>klassen voor anonieme pipes bewerkingen.</xref:System.IO.Pipes.AnonymousPipeClientStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>       Zie voor meer informatie over pipes [Pipes](~/add/includes/ajax-current-ext-md.md). Zie voor een voorbeeld van anonieme pipes [hoe: anonieme Pipes gebruiken voor lokale Interprocess Communication](~/add/includes/ajax-current-ext-md.md). Zie voor een voorbeeld van named pipes [hoe: gebruik Named Pipes voor netwerkcommunicatie Interprocess](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public abstract class PipeStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> waarde en buffer grootte."
  remarks: "Een pipe Transmissiemodus van <xref:System.IO.Pipes.PipeTransmissionMode>.</xref:System.IO.Pipes.PipeTransmissionMode> maakt gebruik van deze constructor"
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Een van de <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> waarden die geeft de richting van de pipeobject."
    - id: bufferSize
      type: System.Int32
      description: "Een positief <xref:System.Int32>waarde groter dan of gelijk zijn aan 0 die aangeeft van de buffergrootte.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>is geen geldige <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> waarde.       - of - <code>bufferSize</code> is kleiner dan 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>, <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>, en buffergrootte."
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Een van de <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> waarden die geeft de richting van de pipeobject."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Een van de <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> waarden die aangeeft van de modus voor verzending van de pipeobject."
    - id: outBufferSize
      type: System.Int32
      description: "Een positief <xref:System.Int32>waarde groter dan of gelijk zijn aan 0 die aangeeft van de buffergrootte.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>is geen geldige <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> waarde.       - of - <code>transmissionMode</code> is geen geldige <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> waarde.       - of - <code>bufferSize</code> is kleiner dan 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Een asynchrone leesbewerking gestart."
  remarks: "Geef de geretourneerde <xref:System.IAsyncResult>object toe aan de <xref:System.IO.Pipes.PipeStream.EndRead%2A>methode om te bepalen hoeveel bytes zijn gelezen en vrijgeven besturingssysteembronnen gebruikt om te lezen.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IAsyncResult> <xref:System.IO.Pipes.PipeStream.EndRead%2A>moet eenmaal worden aangeroepen voor elke aanroep van BeginRead.</xref:System.IO.Pipes.PipeStream.EndRead%2A> Dit kan worden gedaan in de dezelfde code die BeginRead aangeroepen of in een callbackfunctie die wordt doorgegeven aan BeginRead.       Gebruik de <xref:System.IO.Pipes.PipeStream.CanRead%2A>eigenschap om te bepalen of de huidige <xref:System.IO.Pipes.PipeStream>object ondersteunt leesbewerkingen.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Als de pipe is gesloten of een ongeldig argument wordt doorgegeven aan BeginRead, worden onmiddellijk de juiste uitzonderingen gegenereerd. Fouten die tijdens een asynchrone leesaanvraag optreden optreden in de thread pool-thread die de aanvraag uitvoert. De uitzonderingen worden gegenereerd wanneer de code roept de <xref:System.IO.Pipes.PipeStream.EndRead%2A>methode.</xref:System.IO.Pipes.PipeStream.EndRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer te lezen van gegevens in."
    - id: offset
      type: System.Int32
      description: "De byte-offset in `buffer` waarop u wilt beginnen met lezen."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te lezen."
    - id: callback
      type: System.AsyncCallback
      description: "De methode aan te roepen wanneer de asynchrone leesbewerking is voltooid."
    - id: state
      type: System.Object
      description: "Een gebruiker gemaakte object dat deze bepaalde asynchrone leesaanvraag van andere aanvragen onderscheidt."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>-object dat verwijst naar de asynchrone lezen.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>is kleiner dan 0.       - of - <code>count</code> is kleiner dan 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>is groter dan het aantal bytes dat beschikbaar is in <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De pipe biedt geen ondersteuning voor leesbewerkingen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De pipe is verbroken, wacht om te verbinden of de ingang is niet ingesteld."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of een andere i/o-fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Een asynchrone schrijfbewerking begint."
  remarks: "<xref:System.IO.Pipes.PipeStream.EndWrite%2A>moet eenmaal worden aangeroepen voor elke aanroep van BeginWrite.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> Dit kan worden gedaan in de dezelfde code die BeginWrite aangeroepen of in een callbackfunctie die wordt doorgegeven aan BeginWrite.       Gebruik de <xref:System.IO.Pipes.PipeStream.CanWrite%2A>eigenschap om te bepalen of de huidige <xref:System.IO.Pipes.PipeStream>object ondersteunt schrijfbewerkingen.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Als de pipe is gesloten of een ongeldig argument wordt doorgegeven aan BeginWrite, worden onmiddellijk de juiste uitzonderingen gegenereerd. Fouten die tijdens een asynchrone schrijfaanvraag optreden optreden in de thread pool-thread die de aanvraag uitvoert. De uitzonderingen worden gegenereerd wanneer de code roept de <xref:System.IO.Pipes.PipeStream.EndWrite%2A>methode.</xref:System.IO.Pipes.PipeStream.EndWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer die de gegevens te schrijven naar de huidige stroom bevat."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in `buffer` waarop u wilt beginnen met het kopiëren van bytes naar de huidige stroom."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te schrijven."
    - id: callback
      type: System.AsyncCallback
      description: "De methode aan te roepen als de asynchrone schrijfbewerking is voltooid."
    - id: state
      type: System.Object
      description: "Een gebruiker gemaakte object dat deze aanvraag bepaalde asynchrone schrijfactie van andere aanvragen onderscheidt."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>-object dat verwijst naar de asynchrone schrijfbewerking.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>is kleiner dan 0.       - of - <code>count</code> is kleiner dan 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>is groter dan het aantal bytes dat beschikbaar is in <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De pipe biedt geen ondersteuning voor schrijfbewerkingen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De pipe is verbroken, wacht om te verbinden of de ingang is niet ingesteld."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of een andere i/o-fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanRead
  id: CanRead
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Hiermee wordt een waarde die aangeeft of de huidige stroom leesbewerkingen ondersteunt."
  remarks: "Als de <xref:System.IO.Pipes.PipeStream>object is gesloten, retourneert deze eigenschap `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de stroom ondersteunt leesbewerkingen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanSeek
  id: CanSeek
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Haalt een waarde die aangeeft of de huidige stroom ondersteunt zoekbewerkingen."
  remarks: "Als de <xref:System.IO.Pipes.PipeStream>object is gesloten, retourneert deze eigenschap `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>in alle gevallen."
  overload: System.IO.Pipes.PipeStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanWrite
  id: CanWrite
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Hiermee wordt een waarde die aangeeft of de huidige stroom schrijfbewerkingen ondersteunt."
  remarks: "Als de <xref:System.IO.Pipes.PipeStream>object is gesloten, retourneert deze eigenschap `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de stroom schrijfbewerkingen ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Verifieert of de pipe in een goede status voor het ophalen of instellen van eigenschappen."
  syntax:
    content: protected virtual void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  id: CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Verifieert of de pipe in een verbonden status voor leesbewerkingen."
  syntax:
    content: protected void CheckReadOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckReadOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  id: CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Verifieert of de pipe in een verbonden status voor schrijfbewerkingen."
  syntax:
    content: protected void CheckWriteOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckWriteOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> klasse en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek <xref:System.ComponentModel.Component.Dispose%2A>methode en de <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>de beveiligde methode Dispose met roept de `disposing` parameter ingesteld op `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>roept Dispose met `disposing` ingesteld op `false`.</xref:System.Object.Finalize%2A> Wanneer de parameter disposing is `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.IO.Pipes.PipeStream>verwijzingen.</xref:System.IO.Pipes.PipeStream> Deze methode roept de methode Dispose van elk object waarnaar wordt verwezen."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.IO.Pipes.PipeStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Een wachtende asynchrone leesaanvraag eindigt."
  remarks: "Deze methode retourneert het aantal bytes in de bytematrix die is opgegeven door de eerdere aanroep <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> gelezen       Geef de geretourneerde <xref:System.IAsyncResult>object aan de methode EndRead om te bepalen hoeveel bytes zijn gelezen en vrijgeven besturingssysteembronnen gebruikt om te lezen.</xref:System.IAsyncResult> EndRead moet eenmaal worden aangeroepen voor elke aanroep van <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Dit kan worden gedaan in de dezelfde code die wel <xref:System.IO.Pipes.PipeStream.BeginRead%2A>of in een retouraanroep die wordt doorgegeven aan <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>       Gebruik de <xref:System.IO.Pipes.PipeStream.CanRead%2A>eigenschap om te bepalen of de huidige <xref:System.IO.Pipes.PipeStream>object ondersteunt leesbewerkingen.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Als de pipe is gesloten of een ongeldig argument wordt doorgegeven aan <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, de juiste uitzonderingen onmiddellijk worden gegenereerd.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Fouten die tijdens een asynchrone leesaanvraag optreden optreden in de thread pool-thread die de aanvraag uitvoert. De uitzonderingen worden gegenereerd wanneer de code de EndRead-methode aanroept."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De verwijzing naar de asynchrone aanvraag in behandeling."
    return:
      type: System.Int32
      description: "Het aantal bytes dat is gelezen. Een geretourneerde waarde van 0 geeft aan het einde van de stroom (de pipe gesloten)."
  overload: System.IO.Pipes.PipeStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet afkomstig uit een <xref:System.IO.Pipes.PipeStream.BeginRead*> methode op de huidige stroom."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De stroom is gesloten of is een interne fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Een openstaande asynchrone schrijfactie-aanvraag wordt beëindigd."
  remarks: "EndWrite moet eenmaal worden aangeroepen voor elke aanroep van <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Dit kan worden gedaan in de dezelfde code die wel <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>of in een retouraanroep die wordt doorgegeven aan <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>       Gebruik de <xref:System.IO.Pipes.PipeStream.CanWrite%2A>eigenschap om te bepalen of de huidige <xref:System.IO.Pipes.PipeStream>object ondersteunt schrijfbewerkingen.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Als de pipe is gesloten of een ongeldig argument wordt doorgegeven aan <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, de juiste uitzonderingen onmiddellijk worden gegenereerd.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Fouten die tijdens een asynchrone schrijfaanvraag optreden optreden in de thread pool-thread die de aanvraag uitvoert. De uitzonderingen worden gegenereerd wanneer de code aanroepen van de EndWrite methode."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De verwijzing naar de asynchrone aanvraag in behandeling."
  overload: System.IO.Pipes.PipeStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>is niet afkomstig uit een <xref:System.IO.Pipes.PipeStream.BeginWrite*> methode op de huidige stroom."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De stroom is gesloten of is een interne fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Flush
  id: Flush
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Hiermee wist u de buffer voor de huidige stroom en zorgt ervoor dat de gegevens naar de onderliggende apparaat moeten worden geschreven."
  remarks: "De Flush-methode wordt niet ondersteund in de <xref:System.IO.Pipes.PipeStream>klasse en heeft nothing wanneer deze wordt aangeroepen.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De pipe biedt geen ondersteuning voor schrijfbewerkingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of een andere i/o-fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  id: GetAccessControl
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Haalt een <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> -object dat de toegangsbeheerlijst (ACL) vermeldingen voor toegangsbeheer voor de pipe beschreven door de huidige ingekapseld <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object."
  remarks: 'Er wordt een toegangsbeheerlijst (ACL) beschreven personen en/of groepen die zijn of beschikt niet over toegangsrechten specifieke acties uitvoeren op een opgegeven bestand. Zie voor meer informatie [hoe: toevoegen of verwijderen van de Access Control List vermeldingen](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public System.IO.Pipes.PipeSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.Pipes.PipeSecurity
      description: "Een <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> -object dat de toegangsbeheerlijst (ACL) vermeldingen voor toegangsbeheer voor de pipe beschreven door de huidige ingekapseld <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object."
  overload: System.IO.Pipes.PipeStream.GetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Het onderliggende aanroepen beveiligingsgegevens instellen is mislukt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het onderliggende aanroepen beveiligingsgegevens instellen is mislukt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Het onderliggende aanroepen beveiligingsgegevens instellen is mislukt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InBufferSize
  id: InBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Hiermee haalt de grootte in bytes van de inkomende buffer voor een pipe."
  remarks: "Als InBufferSize 0 is, wordt de buffergrootte toegewezen indien nodig."
  syntax:
    content: public virtual int InBufferSize { get; }
    return:
      type: System.Int32
      description: "Een geheel getal dat de binnenkomende buffergrootte in bytes vertegenwoordigt."
  overload: System.IO.Pipes.PipeStream.InBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom is onleesbaar."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De pipe wacht op verbinding maken."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of een andere i/o-fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  id: InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initialiseert een <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object van het opgegeven <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> object."
  remarks: "Als de pipe verbonden is, stelt deze methode ook de <xref:System.IO.Pipes.PipeStream.IsConnected%2A>eigenschap `true`.</xref:System.IO.Pipes.PipeStream.IsConnected%2A>"
  syntax:
    content: protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "De <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> object van de pijp worden geïnitialiseerd."
    - id: isExposed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>zichtbaar maken van de ingang; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om aan te geven dat de koppeling asynchroon; is geopend anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.InitializeHandle*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Een ingang kan niet worden gekoppeld aan de pipe."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsAsync
  id: IsAsync
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Haalt een waarde die aangeeft of een <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object synchroon of asynchroon is geopend."
  remarks: "Met deze eigenschap kunt u uw code te gebruiken de <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>eigenschap correct.</xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object is geopend asynchroon; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsConnected
  id: IsConnected
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of een <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object is verbonden."
  remarks: "De eigenschap IsConnected retourneert `true` alleen als de <xref:System.IO.Pipes.PipeStream>object is verbonden.</xref:System.IO.Pipes.PipeStream> Als deze eigenschap geeft `false`, de pipe kan moeten wachten om verbinding te maken of kan worden verbroken, gesloten of verbroken."
  syntax:
    content: public bool IsConnected { get; protected set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> -object is verbonden, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  id: IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Haalt een waarde die aangeeft of een ingang naar een <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object is toegankelijk."
  remarks: "De waarde van deze eigenschap is ingesteld bij het verkrijgen van een ingang naar de pipe die door de huidige ingekapseld <xref:System.IO.Pipes.PipeStream>object.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: protected bool IsHandleExposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een ingang naar de <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object wordt weergegeven, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsHandleExposed*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  id: IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Hiermee wordt een waarde die aangeeft of er meer gegevens in het bericht dat wordt geretourneerd door de meest recente leesbewerking."
  remarks: "Deze eigenschap is van belang als de pipe- <xref:System.IO.Pipes.PipeStream.ReadMode%2A>eigenschap is ingesteld op <xref:System.IO.Pipes.PipeTransmissionMode>door de meest recente aanroep <xref:System.IO.Pipes.PipeStream.Read%2A>of <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.Read%2A> </xref:System.IO.Pipes.PipeTransmissionMode> </xref:System.IO.Pipes.PipeStream.ReadMode%2A>"
  syntax:
    content: public bool IsMessageComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als er geen meer tekens te lezen in het bericht; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsMessageComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De pipe is niet verbonden.       - of - de pipe-ingang is niet ingesteld.       - of - de pipe <xref:System.IO.Pipes.PipeStream.ReadMode*>eigenschapswaarde is niet <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>.</xref:System.IO.Pipes.PipeStream.ReadMode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Length
  id: Length
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Hiermee haalt u de lengte van een stream, in bytes."
  remarks: "De <xref:System.IO.Pipes.PipeStream>klasse biedt geen ondersteuning voor de lengte-eigenschap.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "0 in alle gevallen."
  overload: System.IO.Pipes.PipeStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  id: OutBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Hiermee haalt de grootte in bytes van de uitgaande buffer voor een pipe."
  remarks: "Als OutBufferSize 0 is, wordt de buffergrootte toegewezen indien nodig."
  syntax:
    content: public virtual int OutBufferSize { get; }
    return:
      type: System.Int32
      description: "De uitgaande buffergrootte in bytes."
  overload: System.IO.Pipes.PipeStream.OutBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De stroom is niet beschrijfbaar."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De pipe wacht op verbinding maken."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of een andere i/o-fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Position
  id: Position
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Opgehaald of ingesteld van de huidige positie van de huidige stroom."
  remarks: "De <xref:System.IO.Pipes.PipeStream>klasse biedt geen ondersteuning voor de eigenschap Position.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "0 in alle gevallen."
  overload: System.IO.Pipes.PipeStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Altijd wordt gegenereerd."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Een blok van bytes uit een stroom leest en schrijft de gegevens naar een opgegeven buffer."
  remarks: "Gebruik de <xref:System.IO.Pipes.PipeStream.CanRead%2A>eigenschap om te bepalen of de huidige <xref:System.IO.Pipes.PipeStream>object ondersteunt leesbewerkingen.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Het aanroepen van de methode Read blokkeert tot `count` bytes zijn gelezen of het einde van de stroom is bereikt. Zie voor asynchrone leesbewerkingen <xref:System.IO.Pipes.PipeStream.BeginRead%2A>en <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>"
  example:
  - "The following example creates an anonymous pipe client and pipe server. The pipe server uses the Read method to read a series of bytes from the pipe client as a validation code. Both the pipe client and the pipe server are part of the same example. The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.  \n  \n [!code-cs[System.IO.Pipes.PipeStream#1](~/add/codesnippet/csharp/m-system.io.pipes.pipest_1.cs)]\n [!code-vb[System.IO.Pipes.PipeStream#1](~/add/codesnippet/visualbasic/m-system.io.pipes.pipest_1.vb)]\n [!code-cpp[System.IO.Pipes.PipeStream#1](~/add/codesnippet/cpp/m-system.io.pipes.pipest_1.cpp)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Wanneer deze methode retourneert, bevat de opgegeven byte-matrix met de waarden tussen `offset` en (`offset`  +  `count` - 1) vervangen door het aantal bytes lezen uit de huidige bron."
    - id: offset
      type: System.Int32
      description: "De byte-offset in de `buffer` matrix op waarmee de bytes die worden gelezen worden geplaatst."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes te lezen."
    return:
      type: System.Int32
      description: "Het totale aantal bytes dat wordt gelezen in <code> buffer </code>. Dit wordt mogelijk kleiner dan het aantal bytes aangevraagd als aantal bytes is momenteel niet beschikbaar, of 0 als het einde van de stroom is bereikt."
  overload: System.IO.Pipes.PipeStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>is kleiner dan 0.       - of - <code>count</code> is kleiner dan 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>is groter dan het aantal bytes dat beschikbaar is in <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De pipe biedt geen ondersteuning voor leesbewerkingen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De pipe is verbroken, wacht om te verbinden of de ingang is niet ingesteld."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Een i/o-fout is opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadByte
  id: ReadByte
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Een byte leest uit een pipe."
  remarks: "Gebruik de <xref:System.IO.Pipes.PipeStream.CanRead%2A>eigenschap om te bepalen of de huidige <xref:System.IO.Pipes.PipeStream>object ondersteunt leesbewerkingen.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "De byte geconverteerd naar <xref:System.Int32>, of -1 geeft aan het einde van de stroom (de pipe gesloten).</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.ReadByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De pipe biedt geen ondersteuning voor leesbewerkingen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De pipe is verbroken, wacht om te verbinden of de ingang is niet ingesteld."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Een i/o-fout is opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Opgehaald of ingesteld van de modus lezen voor een <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object."
  remarks: "Anonieme pipes bieden geen ondersteuning voor <xref:System.IO.Pipes.PipeTransmissionMode>modus berichtverzending.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Een van de <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> waarden waarmee wordt aangegeven hoe de <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object leest van de pijp."
  overload: System.IO.Pipes.PipeStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De opgegeven waarde is geen geldig(e) <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> waarde."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De opgegeven waarde wordt niet ondersteund <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> waarde voor deze stroom pipe."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De ingang is niet ingesteld.       - of - de pipe wacht op verbinding maken met een client met deze naam."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of er is een i/o-fout opgetreden met een client met deze naam."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  id: SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "De SafeHandle opgehaald voor de lokale einde van de pijp die de huidige <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object ingekapseld."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Een <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> -object voor de pipe dat is ingekapseld door de huidige <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object."
  overload: System.IO.Pipes.PipeStream.SafePipeHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De pipe-ingang is niet ingesteld."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Hiermee stelt u de huidige positie van de huidige stroom met de opgegeven waarde."
  remarks: "De methode Seek wordt niet ondersteund in pipes en genereert een <xref:System.NotSupportedException>wanneer deze wordt aangeroepen.</xref:System.NotSupportedException>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Het punt, ten opzichte van `origin`, om te beginnen met zoeken uit."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Hiermee geeft u het begin, het einde of de huidige positie als een referentiepunt voor `offset`, gebruikt u de waarde van het type <xref:System.IO.SeekOrigin>.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "De nieuwe positie in de stroom."
  overload: System.IO.Pipes.PipeStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  id: SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Van toepassing is de toegangsbeheerlijst (ACL) vermeldingen voor toegangsbeheer opgegeven door een <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> object naar de pipe is opgegeven door de huidige <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> object."
  remarks: 'Er wordt een toegangsbeheerlijst (ACL) beschreven personen en/of groepen die zijn of beschikt niet over toegangsrechten specifieke acties uitvoeren op een opgegeven bestand. Zie voor meer informatie [hoe: toevoegen of verwijderen van de Access Control List vermeldingen](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "Een <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> -object dat een vermelding access control toegangsbeheerlijst (ACL) moeten worden toegepast op het huidige sluisteken aangeeft."
  overload: System.IO.Pipes.PipeStream.SetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Het onderliggende aanroepen beveiligingsgegevens instellen is mislukt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het onderliggende aanroepen beveiligingsgegevens instellen is mislukt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Het onderliggende aanroepen beveiligingsgegevens instellen is mislukt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Hiermee stelt u de lengte van de huidige stroom met de opgegeven waarde."
  remarks: "De <xref:System.IO.Pipes.PipeStream>klasse biedt geen ondersteuning voor de methode SetLength.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "De nieuwe lengte van de stroom."
  overload: System.IO.Pipes.PipeStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "De pipe-Transmissiemodus ondersteund door de huidige sluisteken opgehaald."
  remarks: "Anonieme pipes bieden geen ondersteuning voor <xref:System.IO.Pipes.PipeTransmissionMode>modus berichtverzending.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Een van de <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> waarden die de Transmissiemodus ondersteund door de huidige sluisteken aangeeft."
  overload: System.IO.Pipes.PipeStream.TransmissionMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De ingang is niet ingesteld.       - of - de pipe wacht op verbinding maken in een anonieme client/server-bewerking of met een client met deze naam."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of een andere i/o-fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  id: WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Wacht tot het andere einde van de pipe lezen dat alle bytes verzonden."
  remarks: "De WaitForPipeDrain methodeblokken totdat het andere einde van de pipe alle verzonden bytes is gelezen."
  syntax:
    content: public void WaitForPipeDrain ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De pipe biedt geen ondersteuning voor schrijfbewerkingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of een andere i/o-fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Schrijft een blok van de bytes in de huidige stroom met gegevens uit een buffer."
  remarks: "Gebruik de <xref:System.IO.Pipes.PipeStream.CanWrite%2A>eigenschap om te bepalen of de huidige <xref:System.IO.Pipes.PipeStream>object ondersteunt schrijfbewerkingen.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Aanroepen van de methode schrijven blokkeert tot `count` bytes zijn gelezen of het einde van de stroom is bereikt. Zie voor asynchrone leesbewerkingen <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>en <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "De buffer die gegevens schrijven naar de pipe bevat."
    - id: offset
      type: System.Int32
      description: "De op nul gebaseerde byte-offset in `buffer` waarop u wilt beginnen met het kopiëren van bytes naar de huidige stroom."
    - id: count
      type: System.Int32
      description: "Het maximum aantal bytes schrijven naar de huidige stroom."
  overload: System.IO.Pipes.PipeStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>is kleiner dan 0.       - of - <code>count</code> is kleiner dan 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>is groter dan het aantal bytes dat beschikbaar is in <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De pipe biedt geen ondersteuning voor schrijfbewerkingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of een andere i/o-fout opgetreden."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Een byte schrijft naar de huidige stroom."
  remarks: "Gebruik de <xref:System.IO.Pipes.PipeStream.CanWrite%2A>eigenschap om te bepalen of de huidige <xref:System.IO.Pipes.PipeStream>object ondersteunt schrijfbewerkingen.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "De byte schrijven naar de stroom."
  overload: System.IO.Pipes.PipeStream.WriteByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De pipe is gesloten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De pipe biedt geen ondersteuning voor schrijfbewerkingen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De pipe is verbroken, wacht om te verbinden of de ingang is niet ingesteld."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "De pipe is verbroken of een andere i/o-fout opgetreden."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Pipes.PipeStream.#ctor*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream.PipeStream
- uid: System.IO.Pipes.PipeStream.BeginRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead
  nameWithType: PipeStream.BeginRead
- uid: System.IO.Pipes.PipeStream.BeginWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite
  nameWithType: PipeStream.BeginWrite
- uid: System.IO.Pipes.PipeStream.CanRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: PipeStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.PipeStream.CheckReadOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations
  nameWithType: PipeStream.CheckReadOperations
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations
  nameWithType: PipeStream.CheckWriteOperations
- uid: System.IO.Pipes.PipeStream.Dispose*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose
  nameWithType: PipeStream.Dispose
- uid: System.IO.Pipes.PipeStream.EndRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead
  nameWithType: PipeStream.EndRead
- uid: System.IO.Pipes.PipeStream.EndWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite
  nameWithType: PipeStream.EndWrite
- uid: System.IO.Pipes.PipeStream.Flush*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush
  nameWithType: PipeStream.Flush
- uid: System.IO.Pipes.PipeStream.GetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl
  nameWithType: PipeStream.GetAccessControl
- uid: System.IO.Pipes.PipeStream.InBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle
  nameWithType: PipeStream.InitializeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
- uid: System.IO.Pipes.PipeStream.OutBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read
  nameWithType: PipeStream.Read
- uid: System.IO.Pipes.PipeStream.ReadByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte
  nameWithType: PipeStream.ReadByte
- uid: System.IO.Pipes.PipeStream.ReadMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek
  nameWithType: PipeStream.Seek
- uid: System.IO.Pipes.PipeStream.SetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl
  nameWithType: PipeStream.SetAccessControl
- uid: System.IO.Pipes.PipeStream.SetLength*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength
  nameWithType: PipeStream.SetLength
- uid: System.IO.Pipes.PipeStream.TransmissionMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain
  nameWithType: PipeStream.WaitForPipeDrain
- uid: System.IO.Pipes.PipeStream.Write*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write
  nameWithType: PipeStream.Write
- uid: System.IO.Pipes.PipeStream.WriteByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte
  nameWithType: PipeStream.WriteByte
