### YamlMime:ManagedReference
items:
- uid: System.Windows.LocalValueEnumerator
  id: LocalValueEnumerator
  children:
  - System.Windows.LocalValueEnumerator.Count
  - System.Windows.LocalValueEnumerator.Current
  - System.Windows.LocalValueEnumerator.Equals(System.Object)
  - System.Windows.LocalValueEnumerator.GetHashCode
  - System.Windows.LocalValueEnumerator.MoveNext
  - System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  - System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  - System.Windows.LocalValueEnumerator.Reset
  - System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: LocalValueEnumerator
  nameWithType: LocalValueEnumerator
  fullName: System.Windows.LocalValueEnumerator
  type: Struct
  summary: "Opsomming ondersteuning biedt voor de lokale waarden van de eigenschappen van een afhankelijkheid die bestaan op een <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  remarks: "Een *lokale waarde* is een waarde voor de afhankelijkheidseigenschap van een die rechtstreeks op een afhankelijkheidseigenschap is ingesteld door het aanroepen van <xref:System.Windows.DependencyObject.SetValue%2A>, of meestal met behulp van de accessor voor instellen van een [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] eigenschap wrapper die aanroept <xref:System.Windows.DependencyObject.SetValue%2A>intern.</xref:System.Windows.DependencyObject.SetValue%2A> </xref:System.Windows.DependencyObject.SetValue%2A> Voorbeelden van andere eigenschap system factoren die geen lokale waarden zijn waarden die zijn ingesteld door de stijlen of afhankelijkheid eigenschap standaardwaarden. Zie voor meer informatie [afhankelijkheid eigenschap waarde prioriteit](~/add/includes/ajax-current-ext-md.md).       Een LocalValueEnumerator wordt geretourneerd door de <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>methode en implementeert de <xref:System.Collections.IEnumerator>interface.</xref:System.Collections.IEnumerator> </xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> Een openbare constructor met LocalValueEnumerator bestaat niet. u moet daarom aanroepen <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>om op te halen van een exemplaar van deze klasse.</xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>       Lokale waarden mag niet worden gewijzigd (door het aanroepen van <xref:System.Windows.DependencyObject.SetValue%2A>of <xref:System.Windows.DependencyObject.ClearValue%2A>) tijdens het inventariseren van lokale waarden.</xref:System.Windows.DependencyObject.ClearValue%2A> </xref:System.Windows.DependencyObject.SetValue%2A> Als u wijzigt of schakel de eigenschapswaarden op basis van eigenschappen die worden geretourneerd door de enumerator wijzigen of wissen operations niet ongeldig de verzameling enumerator maken doen zoals het geval is voor veel <xref:System.Collections.IEnumerator>implementaties.</xref:System.Collections.IEnumerator> De weergave van de enumerator is ook een momentopname. Een wijziging in de verzameling kan niet worden gegarandeerd thread-veilige en geen vergrendeling wordt afgedwongen. Andere threads nog wel vrije toegang tot de lokale waarden van een andere context dan de enumerator.       Gebruik dit type als er bewerkingen in uw klasse waar het is belangrijk te weten of de waarde van een eigenschap afkomstig zijn van een lokale waarde. Bijvoorbeeld: Gebruik dit type in een <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementatie, of waar u de metagegevens op alle lokaal een query-eigenschappen worden ingesteld.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>"
  syntax:
    content: 'public struct LocalValueEnumerator : System.Collections.IEnumerator'
  inheritance:
  - System.ValueType
  implements:
  - System.Collections.IEnumerator
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Count
  id: Count
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Count
  nameWithType: LocalValueEnumerator.Count
  fullName: System.Windows.LocalValueEnumerator.Count
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Hiermee haalt het aantal items die worden weergegeven in de verzameling."
  remarks: "Deze eigenschap is niet gedefinieerd lid zijn van <xref:System.Collections.IEnumerator>maar opgegeven gemakshalve.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal items in de verzameling."
  overload: System.Windows.LocalValueEnumerator.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Current
  id: Current
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: LocalValueEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.Current
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Hiermee haalt het huidige element in de verzameling."
  remarks: "Deze toegankelijk is over het algemeen versie van de eigenschap is afhankelijk van een momentopname van de verzameling die moet worden uitgevoerd bij het maken van."
  syntax:
    content: public System.Windows.LocalValueEntry Current { get; }
    return:
      type: System.Windows.LocalValueEntry
      description: "De huidige <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref> in de verzameling."
  overload: System.Windows.LocalValueEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: LocalValueEnumerator.Equals(Object)
  fullName: System.Windows.LocalValueEnumerator.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Hiermee wordt bepaald of de opgegeven <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> gelijk is aan dit <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref>."
  remarks: "Deze implementatie ondersteunt alleen verwijzingsgelijkheid."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "De <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> moeten worden vergeleken met de huidige <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> gelijk is aan de huidige <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.LocalValueEnumerator.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.GetHashCode
  id: GetHashCode
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: LocalValueEnumerator.GetHashCode()
  fullName: System.Windows.LocalValueEnumerator.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Retourneert een hashcode voor de huidige <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Het hash-code van een 32-bits geheel getal."
  overload: System.Windows.LocalValueEnumerator.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.MoveNext
  id: MoveNext
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: LocalValueEnumerator.MoveNext()
  fullName: System.Windows.LocalValueEnumerator.MoveNext()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "De enumerator verplaatst naar het volgende onderdeel van de verzameling."
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de enumerator is is voortgezet naar het volgende element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de enumerator is voorbij het einde van de verzameling."
  overload: System.Windows.LocalValueEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  id: op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Vergelijkt of twee opgegeven <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> objecten zijn hetzelfde."
  remarks: "Deze implementatie ondersteunt alleen verwijzingsgelijkheid."
  syntax:
    content: public static bool op_Equality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEnumerator
      description: "Het eerste object te vergelijken."
    - id: obj2
      type: System.Windows.LocalValueEnumerator
      description: "Het tweede object om te vergelijken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>obj1</code><xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref> is equal to the <code>obj2</code><xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.LocalValueEnumerator.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  id: op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Vergelijkt twee opgegeven <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> objecten om te bepalen of ze niet hetzelfde zijn."
  remarks: "Deze implementatie ondersteunt alleen verwijzingsgelijkheid."
  syntax:
    content: public static bool op_Inequality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEnumerator
      description: "Het eerste object te vergelijken."
    - id: obj2
      type: System.Windows.LocalValueEnumerator
      description: "Het tweede object om te vergelijken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de exemplaren niet gelijk; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.LocalValueEnumerator.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Reset
  id: Reset
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: LocalValueEnumerator.Reset()
  fullName: System.Windows.LocalValueEnumerator.Reset()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Hiermee stelt u de enumerator op de oorspronkelijke positie die vóór het eerste element in de verzameling."
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Windows.LocalValueEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Zie voor een beschrijving van deze leden <xref:System.Collections.IEnumerator.Current*>.</xref:System.Collections.IEnumerator.Current*>"
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Windows.LocalValueEnumerator>exemplaar is geconverteerd naar een <xref:System.Collections.IEnumerator>interface.</xref:System.Collections.IEnumerator> </xref:System.Windows.LocalValueEnumerator>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "Het huidige element in de verzameling."
  overload: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.LocalValueEnumerator.Count
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Count
  nameWithType: LocalValueEnumerator.Count
  fullName: System.Windows.LocalValueEnumerator.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.LocalValueEnumerator.Current
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Current
  nameWithType: LocalValueEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.Current
- uid: System.Windows.LocalValueEntry
  parent: System.Windows
  isExternal: false
  name: LocalValueEntry
  nameWithType: LocalValueEntry
  fullName: System.Windows.LocalValueEntry
- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Equals(Object)
  nameWithType: LocalValueEnumerator.Equals(Object)
  fullName: System.Windows.LocalValueEnumerator.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.LocalValueEnumerator.GetHashCode
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: GetHashCode()
  nameWithType: LocalValueEnumerator.GetHashCode()
  fullName: System.Windows.LocalValueEnumerator.GetHashCode()
- uid: System.Windows.LocalValueEnumerator.MoveNext
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: LocalValueEnumerator.MoveNext()
  fullName: System.Windows.LocalValueEnumerator.MoveNext()
- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
- uid: System.Windows.LocalValueEnumerator
  parent: System.Windows
  isExternal: false
  name: LocalValueEnumerator
  nameWithType: LocalValueEnumerator
  fullName: System.Windows.LocalValueEnumerator
- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
- uid: System.Windows.LocalValueEnumerator.Reset
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Reset()
  nameWithType: LocalValueEnumerator.Reset()
  fullName: System.Windows.LocalValueEnumerator.Reset()
- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.System.Collections.IEnumerator.Current
- uid: System.Windows.LocalValueEnumerator.Count*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Count
  nameWithType: LocalValueEnumerator.Count
- uid: System.Windows.LocalValueEnumerator.Current*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Current
  nameWithType: LocalValueEnumerator.Current
- uid: System.Windows.LocalValueEnumerator.Equals*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Equals
  nameWithType: LocalValueEnumerator.Equals
- uid: System.Windows.LocalValueEnumerator.GetHashCode*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: GetHashCode
  nameWithType: LocalValueEnumerator.GetHashCode
- uid: System.Windows.LocalValueEnumerator.MoveNext*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: LocalValueEnumerator.MoveNext
- uid: System.Windows.LocalValueEnumerator.op_Equality*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Equality
  nameWithType: LocalValueEnumerator.op_Equality
- uid: System.Windows.LocalValueEnumerator.op_Inequality*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Inequality
  nameWithType: LocalValueEnumerator.op_Inequality
- uid: System.Windows.LocalValueEnumerator.Reset*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Reset
  nameWithType: LocalValueEnumerator.Reset
- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current
