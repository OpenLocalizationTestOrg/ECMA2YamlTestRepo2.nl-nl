### YamlMime:ManagedReference
items:
- uid: System.Runtime.Hosting.ApplicationActivator
  id: ApplicationActivator
  children:
  - System.Runtime.Hosting.ApplicationActivator.#ctor
  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)
  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])
  - System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)
  langs:
  - csharp
  name: ApplicationActivator
  nameWithType: ApplicationActivator
  fullName: System.Runtime.Hosting.ApplicationActivator
  type: Class
  summary: "Biedt de basisklasse voor de activering op basis van het manifest-assembly&quot;s."
  remarks: "Er is een toegewezen exemplaar van de klasse ApplicationActivator in elk <xref:System.AppDomain>welke alle activering oproepen worden gerouteerd.</xref:System.AppDomain> De <xref:System.AppDomainManager>voor de huidige <xref:System.AppDomain>eigen aangepaste ApplicationActivator kunt opgeven voor dit doel.</xref:System.AppDomain> </xref:System.AppDomainManager> Als u een aangepaste ApplicationActivator niet is opgegeven, een exemplaar van de standaard ApplicationActivator is gemaakt.       De volgende stappen beschrijven het gedrag van de standaard <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A>methode-implementatie: 1.</xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A>  Controleert of de <xref:System.ActivationContext>van de invoegtoepassing worden geactiveerd komt overeen met de <xref:System.ActivationContext>van het huidige domein; zo niet, voortgezet met stap 2.</xref:System.ActivationContext> </xref:System.ActivationContext> Anders wordt de assembly wordt uitgevoerd en retourneert het resultaat ingepakt in een objectingang.      2.  Hiermee activeert u de invoegtoepassing in een nieuwe <xref:System.AppDomain>.</xref:System.AppDomain> De volgende stappen gaat naar het initialiseren van een nieuwe <xref:System.AppDomain>instructie <xref:System.Runtime.Hosting.ActivationArguments>voor de invoegtoepassing.</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.AppDomain>          1.  Maakt een nieuw <xref:System.AppDomainSetup>object met behulp van een <xref:System.Runtime.Hosting.ActivationArguments>object bevat de activeringscontext voor de invoegtoepassing.</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.AppDomainSetup>          2.  Aanroepen van de <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>methode voor het maken van een nieuw domein met de <xref:System.AppDomainSetup>object.</xref:System.AppDomainSetup> </xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>          3.  De <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>methode roept de <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName>methode voor het verkrijgen van een <xref:System.Security.Policy.ApplicationTrust>object voor de invoegtoepassing.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> </xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> Als de <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A>resultaat van de eigenschap `true`, de invoegtoepassing wordt uitgevoerd.</xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> Als dat niet het geval is, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>genereert een <xref:System.Security.Policy.PolicyException>die aangeeft machtiging voor uitvoering kan niet worden verkregen.</xref:System.Security.Policy.PolicyException> </xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>          4.  Als de invoegtoepassing wordt vertrouwd uitvoeren en vervolgens een nieuwe <xref:System.AppDomain>is gemaakt en geconfigureerd voor de <xref:System.ActivationContext>van de invoegtoepassing en de invoegtoepassing is geladen en uitgevoerd.</xref:System.ActivationContext> </xref:System.AppDomain>          5.  Het resultaat van de activering van de invoegtoepassing wordt geretourneerd, ingepakt in een objectingang.       Een aangepaste activator kunt aanpassen de activering van een invoegtoepassing die aan een bepaalde set omstandigheden. Bijvoorbeeld, een aangepaste activator kan een bestaande vinden <xref:System.AppDomain>voor het activeren van deze invoegtoepassing in plaats van een nieuw domein maakt telkens.</xref:System.AppDomain>       De volgende stappen beschrijven het gedrag van een aangepaste ApplicationActivator dat een invoegtoepassing in een bestaand activeert <xref:System.AppDomain>: 1.</xref:System.AppDomain>  De aangepaste activator vindt u een domein met dezelfde <xref:System.ActivationContext>Als de invoegtoepassing die wordt geactiveerd.</xref:System.ActivationContext>      2.  Als de <xref:System.ActivationContext>nooit waargenomen voordat in het proces is de aangepaste activator een nieuwe <xref:System.AppDomain>voor deze <xref:System.ActivationContext>door het aanroepen van de <xref:System.AppDomain.CreateDomain%2A>methode rechtstreeks, of het delegeren van deze activiteit moet worden de <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>in de basis-klasse maakt.</xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> </xref:System.AppDomain.CreateDomain%2A> </xref:System.ActivationContext> </xref:System.AppDomain> </xref:System.ActivationContext>      3.  Als er een bestaand domein met dezelfde <xref:System.ActivationContext>, en vervolgens de activator kunt delegeren de <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A>methodeaanroep voor de ApplicationActivator in het doeldomein.</xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> </xref:System.ActivationContext> Houd er rekening mee dat zou dit een aanroep van andere domeinen een ApplicationActivator die zich in de doel- <xref:System.AppDomain>.</xref:System.AppDomain> bevindt"
  example:
  - "The following code example shows how to obtain an ApplicationActivator object from the current <xref:System.AppDomain.DomainManager%2A> for a manifest-based application.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/visualbasic/t-system.runtime.hosting_0_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/csharp/t-system.runtime.hosting_0_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ApplicationActivator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.#ctor
  id: '#ctor'
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: ApplicationActivator()
  nameWithType: ApplicationActivator.ApplicationActivator()
  fullName: System.Runtime.Hosting.ApplicationActivator.ApplicationActivator()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Runtime.Hosting.ApplicationActivator&quot;> </xref> klasse."
  syntax:
    content: public ApplicationActivator ();
    parameters: []
  overload: System.Runtime.Hosting.ApplicationActivator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)
  id: CreateInstance(System.ActivationContext)
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: CreateInstance(ActivationContext)
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Maakt een exemplaar van de toepassing moeten worden geactiveerd met behulp van de opgegeven activeringscontext."
  remarks: "Deze methode is bedoeld voor de activering op basis van het manifest van toepassingen."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Een <xref href=&quot;System.ActivationContext&quot;> </xref> waarin de toepassing moet worden geactiveerd."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "Een <xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> die een wrapper voor de geretourneerde waarde van de uitvoering van de toepassing. De retourwaarde moet niet-ingepakte voor toegang tot het juiste object."
  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])
  id: CreateInstance(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: CreateInstance(ActivationContext,String[])
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Maakt een exemplaar van de toepassing moeten worden geactiveerd, met de opgegeven activeringscontext en aangepaste activeringsgegevens."
  remarks: "Deze methode is bedoeld voor de activering op basis van het manifest van toepassingen. De activeringsgegevens bestaat uit informatie zoals het gedeelte van de query-tekenreeks van een URL."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Een <xref href=&quot;System.ActivationContext&quot;> </xref> waarin de toepassing moet worden geactiveerd."
    - id: activationCustomData
      type: System.String[]
      description: "Aangepaste activeringsgegevens."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "Een <xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> die een wrapper voor de geretourneerde waarde van de uitvoering van de toepassing. De retourwaarde moet niet-ingepakte voor toegang tot het juiste object."
  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)
  id: CreateInstanceHelper(System.AppDomainSetup)
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: CreateInstanceHelper(AppDomainSetup)
  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Maakt een exemplaar van een toepassing met behulp van de opgegeven <xref href=&quot;System.AppDomainSetup&quot;> </xref> object."
  remarks: "Deze methode is bedoeld voor de activering op basis van het manifest van toepassingen."
  syntax:
    content: protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);
    parameters:
    - id: adSetup
      type: System.AppDomainSetup
      description: "Een <xref href=&quot;System.AppDomainSetup&quot;> </xref> object waarvan <xref:System.AppDomainSetup.ActivationArguments*>eigenschap identificeert de toepassing moet worden geactiveerd.</xref:System.AppDomainSetup.ActivationArguments*>"
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "Een <xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> die een wrapper voor de geretourneerde waarde van de uitvoering van de toepassing. De retourwaarde moet niet-ingepakte voor toegang tot het juiste object."
  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.AppDomainSetup.ActivationArguments*> property of <code>adSetup </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.AppDomainSetup.ActivationArguments*>"
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Het toepassingsexemplaar kan niet worden uitgevoerd omdat de instellingen op het huidige toepassingsdomein bieden geen machtiging voor deze toepassing uit te voeren."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Runtime.Hosting.ApplicationActivator.#ctor
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: ApplicationActivator()
  nameWithType: ApplicationActivator.ApplicationActivator()
  fullName: System.Runtime.Hosting.ApplicationActivator.ApplicationActivator()
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstance(ActivationContext)
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstance(ActivationContext,String[])
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstanceHelper(AppDomainSetup)
  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
- uid: System.AppDomainSetup
  parent: System
  isExternal: false
  name: AppDomainSetup
  nameWithType: AppDomainSetup
  fullName: System.AppDomainSetup
- uid: System.Runtime.Hosting.ApplicationActivator.#ctor*
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: ApplicationActivator
  nameWithType: ApplicationActivator.ApplicationActivator
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance*
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstance
  nameWithType: ApplicationActivator.CreateInstance
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstanceHelper
  nameWithType: ApplicationActivator.CreateInstanceHelper
