### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.IFieldTemplateFactory
  id: IFieldTemplateFactory
  children:
  - System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  langs:
  - csharp
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
  type: Interface
  summary: "Definieert een interface die is ge誰mplementeerd door de objecten die Veldsjablonen maken."
  remarks: "Deze klasse moet worden ge誰mplementeerd door de <xref:System.Web.DynamicData.FieldTemplateFactory>klasse om te kunnen maken van een veldsjabloon.</xref:System.Web.DynamicData.FieldTemplateFactory> Deze interface biedt methoden voor het initialiseren van de <xref:System.Web.DynamicData.FieldTemplateFactory>en Veldsjablonen maakt.</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public interface IFieldTemplateFactory
  implements: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Maakt een exemplaar van een veld sjabloon met de <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> klasse, de <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref> klasse en <xref:System.Web.DynamicData.MetaColumn.UIHint*>eigenschap.</xref:System.Web.DynamicData.MetaColumn.UIHint*>"
  remarks: "ASP.NET dynamische gegevens Veldsjablonen zijn gebruikersbesturingselementen voor ASP.NET dat Gegevensbesturingselementen worden toegewezen aan de gegevenstypen in een gegevensmodel. Veldsjablonen in het algemeen zijn afgeleid van <xref:System.Web.DynamicData.FieldTemplateUserControl>, de klasse waarmee toegang tot de gegevensvelden, kolommen met gegevens en metagegevens in gegevensmodellen.</xref:System.Web.DynamicData.FieldTemplateUserControl> Dynamische gegevens projecten bieden standaard Veldsjablonen, maar u kunt deze wijzigen of aangepast Veldsjablonen maken. Wanneer imlemented, deze methode maakt u een veldsjabloon op basis van de gegevenskolom, de modus van de kolom met gegevens en de <xref:System.Web.DynamicData.MetaColumn.UIHint%2A>eigenschap.</xref:System.Web.DynamicData.MetaColumn.UIHint%2A> U geeft de `uiHint` parameter als u wilt maken van gegevens met een aangepast veld-sjabloon."
  syntax:
    content: public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "Hiermee geeft u de gegevens gebruiken om de veldsjabloon weer te geven."
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "Hiermee geeft u de weergavemodus van de veldsjabloon."
    - id: uiHint
      type: System.String
      description: "Hiermee geeft u de veldsjabloon moet worden gebruikt."
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "Een exemplaar van een <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> object wanneer ge誰mplementeerd in een klasse."
  overload: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initialiseert een <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> met behulp van het opgegeven gegevensmodel."
  remarks: "Veldsjablonen ASP.NET dynamische gegevens gebruikt voor het weergeven van afzonderlijke gegevensvelden. Veldsjablonen worden doorgaans ge誰mplementeerd als gebruikersbesturingselementen dat gegevenstypen in een gegevensmodel worden toegewezen aan afzonderlijke velden in het besturingselement. Deze methode initialiseert de <xref:System.Web.DynamicData.FieldTemplateFactory>klasse, die wordt gebruikt voor het Veldsjablonen met behulp van het gegevensmodel de veldsjabloon maken wordt gebruikt.</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "Hiermee geeft u het gegevensmodel dat de veldsjabloon worden gebruikt."
  overload: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: IFieldTemplateFactory.Initialize
