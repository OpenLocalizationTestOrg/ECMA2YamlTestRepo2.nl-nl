### YamlMime:ManagedReference
items:
- uid: System.Security.NamedPermissionSet
  id: NamedPermissionSet
  children:
  - System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  - System.Security.NamedPermissionSet.#ctor(System.String)
  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  - System.Security.NamedPermissionSet.Copy
  - System.Security.NamedPermissionSet.Copy(System.String)
  - System.Security.NamedPermissionSet.Description
  - System.Security.NamedPermissionSet.Equals(System.Object)
  - System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  - System.Security.NamedPermissionSet.GetHashCode
  - System.Security.NamedPermissionSet.Name
  - System.Security.NamedPermissionSet.ToXml
  langs:
  - csharp
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet
  fullName: System.Security.NamedPermissionSet
  type: Class
  summary: "Definieert een machtigingenset met een naam en beschrijving die zijn gekoppeld. Deze klasse kan niet worden overgenomen."
  remarks: "De naam van machtiging sets worden gebruikt in beveiligingsbeheer beleid om de machtigingen om te worden toegekend aan de code die bij bepaalde codegroepen hoort te geven. Namen zijn tekenreeksen van alfanumerieke tekens. Beschrijvende tekenreeksen kunnen bestaan uit afdrukbare tekens."
  example:
  - "The following code example shows the use of members of the NamedPermissionSet class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NamedPermissionSet : System.Security.PermissionSet
  inheritance:
  - System.Object
  - System.Security.PermissionSet
  implements: []
  inheritedMembers:
  - System.Security.PermissionSet.AddPermission(System.Security.IPermission)
  - System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)
  - System.Security.PermissionSet.Assert
  - System.Security.PermissionSet.ContainsNonCodeAccessPermissions
  - System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)
  - System.Security.PermissionSet.CopyTo(System.Array,System.Int32)
  - System.Security.PermissionSet.Count
  - System.Security.PermissionSet.Demand
  - System.Security.PermissionSet.Deny
  - System.Security.PermissionSet.GetEnumerator
  - System.Security.PermissionSet.GetEnumeratorImpl
  - System.Security.PermissionSet.GetPermission(System.Type)
  - System.Security.PermissionSet.GetPermissionImpl(System.Type)
  - System.Security.PermissionSet.Intersect(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsEmpty
  - System.Security.PermissionSet.IsReadOnly
  - System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsSynchronized
  - System.Security.PermissionSet.IsUnrestricted
  - System.Security.PermissionSet.PermitOnly
  - System.Security.PermissionSet.RemovePermission(System.Type)
  - System.Security.PermissionSet.RemovePermissionImpl(System.Type)
  - System.Security.PermissionSet.RevertAssert
  - System.Security.PermissionSet.SetPermission(System.Security.IPermission)
  - System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)
  - System.Security.PermissionSet.SyncRoot
  - System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.PermissionSet.ToString
  - System.Security.PermissionSet.Union(System.Security.PermissionSet)
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  id: '#ctor(System.Security.NamedPermissionSet)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(NamedPermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> klasse vanuit een andere machtigingenset met naam."
  syntax:
    content: public NamedPermissionSet (System.Security.NamedPermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.NamedPermissionSet
      description: "De machtigingenset met naam waarin het nieuwe exemplaar te maken."
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(String)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> klasse met de opgegeven naam."
  remarks: "Met deze constructor maakt een machtigingenset met naam met geen machtigingen, maar met een <xref:System.Security.Permissions.PermissionState>machtigingsstatus.</xref:System.Security.Permissions.PermissionState> Een machtigingenset met naam in een onbeperkte status effectief bevat alle machtigingen die u implementeert de <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> De machtigingenset met naam bevat alle ingebouwde machtigingen, evenals alle aangepaste gebruiker gedefinieerde machtigingen die <xref:System.Security.Permissions.IUnrestrictedPermission>.</xref:System.Security.Permissions.IUnrestrictedPermission> implementeren Alle machtigingen heeft het equivalent van een `Unrestricted` machtigingsstatus. Machtigingen die niet wordt geïmplementeerd <xref:System.Security.Permissions.IUnrestrictedPermission>leeg exemplaren.</xref:System.Security.Permissions.IUnrestrictedPermission>"
  syntax:
    content: public NamedPermissionSet (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam voor de nieuwe machtigingenset met naam."
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> name </code> parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  id: '#ctor(System.String,System.Security.Permissions.PermissionState)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(String,PermissionState)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionState)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> klasse met de opgegeven naam in een onbeperkte of een volledig beperkte status."
  remarks: "Een machtigingenset met naam in een onbeperkte status effectief bevat alle machtigingen die u implementeert de <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> De machtigingenset met naam bevat alle ingebouwde machtigingen, evenals alle aangepaste machtigingen. Alle machtigingen hebben een `Unrestricted` <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> Machtigingen die niet wordt geïmplementeerd <xref:System.Security.Permissions.IUnrestrictedPermission>, zoals Identiteitsmachtigingen, wordt zijn leeg exemplaren.</xref:System.Security.Permissions.IUnrestrictedPermission>"
  syntax:
    content: public NamedPermissionSet (string name, System.Security.Permissions.PermissionState state);
    parameters:
    - id: name
      type: System.String
      description: "De naam voor de nieuwe machtigingenset met naam."
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Een van de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> waarden."
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> name </code> parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  id: '#ctor(System.String,System.Security.PermissionSet)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(String,PermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionSet)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionSet)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> klasse met de opgegeven naam van een machtigingenset."
  remarks: ''
  example:
  - "The following code example shows the use of the NamedPermissionSet constructor to create a new <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public NamedPermissionSet (string name, System.Security.PermissionSet permSet);
    parameters:
    - id: name
      type: System.String
      description: "De naam voor de machtigingenset met naam."
    - id: permSet
      type: System.Security.PermissionSet
      description: "De machtigingenset van waaruit de waarde van de nieuwe machtigingenset met naam."
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> name </code> parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Copy
  id: Copy
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Copy()
  nameWithType: NamedPermissionSet.Copy()
  fullName: System.Security.NamedPermissionSet.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Maakt een kopie van de set machtigingen van een machtigingenset met naam."
  remarks: ''
  example:
  - "The following code example shows the use of the Copy method to create a copy of the current <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override System.Security.PermissionSet Copy ();
    parameters: []
    return:
      type: System.Security.PermissionSet
      description: "Een machtiging instellen dat een kopie van de machtigingen in de machtigingenset met naam."
  overload: System.Security.NamedPermissionSet.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Copy(System.String)
  id: Copy(System.String)
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Copy(String)
  nameWithType: NamedPermissionSet.Copy(String)
  fullName: System.Security.NamedPermissionSet.Copy(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Maakt een kopie van de machtigingenset met naam met een andere naam, maar dezelfde machtigingen."
  syntax:
    content: public System.Security.NamedPermissionSet Copy (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam voor de nieuwe machtigingenset met naam."
    return:
      type: System.Security.NamedPermissionSet
      description: "Een kopie van de machtigingenset met naam met de nieuwe naam."
  overload: System.Security.NamedPermissionSet.Copy*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> name </code> parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Description
  id: Description
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Description
  nameWithType: NamedPermissionSet.Description
  fullName: System.Security.NamedPermissionSet.Description
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Opgehaald of ingesteld van de beschrijving van de huidige machtigingenset met naam."
  remarks: "De beschrijving kan de beheerder in woorden begrijpen welke machtigingen de set bevat en het beoogde gebruik."
  example:
  - "The following code example shows the use of the Description property to display the description of the current <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Een beschrijving van de machtigingenset met naam."
  overload: System.Security.NamedPermissionSet.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NamedPermissionSet.Equals(Object)
  fullName: System.Security.NamedPermissionSet.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee wordt bepaald of de opgegeven <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> object is gelijk aan de huidige <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>."
  remarks: "Zie voor meer informatie <xref:System.Object.Equals%2A>.</xref:System.Object.Equals%2A>"
  example:
  - "The following code example shows the use of the Equals method to compare two <xref:System.Security.NamedPermissionSet> objects. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "De <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> object moeten worden vergeleken met de huidige <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> gelijk is aan de huidige <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.NamedPermissionSet.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: NamedPermissionSet.FromXml(SecurityElement)
  fullName: System.Security.NamedPermissionSet.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee reconstrueert een machtigingenset met naam met een opgegeven status van een XML-codering."
  remarks: "Deze methode stelt de status van een machtigingenset met naam van een XML-element dat eerder is gemaakt door <xref:System.Security.NamedPermissionSet.ToXml%2A>.</xref:System.Security.NamedPermissionSet.ToXml%2A>"
  example:
  - "The following code example shows the use of the FromXml method to recreate a <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement et);
    parameters:
    - id: et
      type: System.Security.SecurityElement
      description: "Een element voor beveiliging met de XML-weergave van de machtigingenset met naam."
  overload: System.Security.NamedPermissionSet.FromXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> et </code> parameter is niet een geldig representatie van een machtigingenset met naam."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>et</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.GetHashCode
  id: GetHashCode
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NamedPermissionSet.GetHashCode()
  fullName: System.Security.NamedPermissionSet.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Haalt een hashcode voor de <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> object dat geschikt is voor gebruik in de hash-algoritmen en gegevens structuren zoals hash-tabel."
  remarks: "De hash-code voor twee exemplaren van hetzelfde type machtiging verschillen, een hash-code mag daarom niet worden gebruikt om te vergelijken twee <xref:System.Security.NamedPermissionSet>objecten.</xref:System.Security.NamedPermissionSet>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een hash-code voor de huidige <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> object."
  overload: System.Security.NamedPermissionSet.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Name
  id: Name
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Name
  nameWithType: NamedPermissionSet.Name
  fullName: System.Security.NamedPermissionSet.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Opgehaald of ingesteld van de naam van de huidige machtigingenset met naam."
  remarks: "Codegroepen Raadpleeg machtigingensets met de naam."
  example:
  - "The following code example shows the use of the Name property to display the name of a <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "De naam van de machtigingenset met naam."
  overload: System.Security.NamedPermissionSet.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De naam is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.ToXml
  id: ToXml
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: ToXml()
  nameWithType: NamedPermissionSet.ToXml()
  fullName: System.Security.NamedPermissionSet.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hiermee maakt u een beschrijving van de XML-element van de machtigingenset met naam."
  remarks: "Gebruik <xref:System.Security.NamedPermissionSet.FromXml%2A>opnieuw maken van de status die wordt vertegenwoordigd door het geretourneerde element.</xref:System.Security.NamedPermissionSet.FromXml%2A>"
  example:
  - "The following code example shows the use of the ToXml method to recreate a <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "De XML-weergave van de machtigingenset met naam."
  overload: System.Security.NamedPermissionSet.ToXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.PermissionSet
  isExternal: false
  name: System.Security.PermissionSet
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(NamedPermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
- uid: System.Security.NamedPermissionSet
  parent: System.Security
  isExternal: false
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet
  fullName: System.Security.NamedPermissionSet
- uid: System.Security.NamedPermissionSet.#ctor(System.String)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(String)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(String,PermissionState)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionState)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(String,PermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionSet)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionSet)
- uid: System.Security.NamedPermissionSet.Copy
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Copy()
  nameWithType: NamedPermissionSet.Copy()
  fullName: System.Security.NamedPermissionSet.Copy()
- uid: System.Security.NamedPermissionSet.Copy(System.String)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Copy(String)
  nameWithType: NamedPermissionSet.Copy(String)
  fullName: System.Security.NamedPermissionSet.Copy(String)
- uid: System.Security.NamedPermissionSet.Description
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Description
  nameWithType: NamedPermissionSet.Description
  fullName: System.Security.NamedPermissionSet.Description
- uid: System.Security.NamedPermissionSet.Equals(System.Object)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Equals(Object)
  nameWithType: NamedPermissionSet.Equals(Object)
  fullName: System.Security.NamedPermissionSet.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: NamedPermissionSet.FromXml(SecurityElement)
  fullName: System.Security.NamedPermissionSet.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.NamedPermissionSet.GetHashCode
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: GetHashCode()
  nameWithType: NamedPermissionSet.GetHashCode()
  fullName: System.Security.NamedPermissionSet.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.NamedPermissionSet.Name
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Name
  nameWithType: NamedPermissionSet.Name
  fullName: System.Security.NamedPermissionSet.Name
- uid: System.Security.NamedPermissionSet.ToXml
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: ToXml()
  nameWithType: NamedPermissionSet.ToXml()
  fullName: System.Security.NamedPermissionSet.ToXml()
- uid: System.Security.NamedPermissionSet.#ctor*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet.NamedPermissionSet
- uid: System.Security.NamedPermissionSet.Copy*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Copy
  nameWithType: NamedPermissionSet.Copy
- uid: System.Security.NamedPermissionSet.Description*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Description
  nameWithType: NamedPermissionSet.Description
- uid: System.Security.NamedPermissionSet.Equals*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Equals
  nameWithType: NamedPermissionSet.Equals
- uid: System.Security.NamedPermissionSet.FromXml*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: FromXml
  nameWithType: NamedPermissionSet.FromXml
- uid: System.Security.NamedPermissionSet.GetHashCode*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: GetHashCode
  nameWithType: NamedPermissionSet.GetHashCode
- uid: System.Security.NamedPermissionSet.Name*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Name
  nameWithType: NamedPermissionSet.Name
- uid: System.Security.NamedPermissionSet.ToXml*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: ToXml
  nameWithType: NamedPermissionSet.ToXml
