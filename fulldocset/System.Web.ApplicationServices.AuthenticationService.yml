### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticationService
  id: AuthenticationService
  children:
  - System.Web.ApplicationServices.AuthenticationService.#ctor
  - System.Web.ApplicationServices.AuthenticationService.Authenticating
  - System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  - System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  - System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  - System.Web.ApplicationServices.AuthenticationService.Logout
  - System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  langs:
  - csharp
  name: AuthenticationService
  nameWithType: AuthenticationService
  fullName: System.Web.ApplicationServices.AuthenticationService
  type: Class
  summary: "Geeft toegang tot de ASP.NET-formulierverificatie als een webservice."
  remarks: "Het object AuthenticationService kunt u verificatie van gebruikers via een [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] service. U kunt de WCF-service voor verificatie gebruiken wanneer u gebruikers via de ASP.NET-lidmaatschap van een toepassing die buiten de webtoepassing die wordt opgeslagen referenties van de gebruiker moet verifiÃ«ren. De toepassing moet kunnen verzenden en te verbruiken bericht in de SOAP-indeling. Via de klasse AuthenticationService kunt u gebruikers aanmelden, gebruikers afmelden referenties te valideren, Controleer de status van verificatie, verificatie aanpassen en instellen van de verificatiecookie.       De klasse AuthenticationService bevat vier methoden die u toegang alleen via een WCF-service tot moet: de <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, en <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>methoden.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> </xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> Voor het aanroepen van deze methoden die u kunt de verificatieservice op een webserver inschakelt en vervolgens verbinding maken met een WCF-compatibele client-toepassing met de webservice. Zie voor meer informatie over het configureren van de verificatieservice [hoe: inschakelen van de WCF-verificatieservice](~/add/includes/ajax-current-ext-md.md).       Gebruikers aanmelden, geeft u de gebruikersreferenties naar de <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>methode.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Als de referenties geldig zijn, maakt de klasse AuthenticationService een verificatiecookie. Als de verificatiecookie niet is verlopen, weet u dat de gebruikersreferenties zijn geverifieerd en u niet hoeft de referenties te valideren opnieuw. (Cookie minder verificatie is niet beschikbaar is via de klasse AuthenticationService.)       De AuthenticationService twee gebeurtenissen kunt verhogen: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>en <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> De <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>gebeurtenis treedt op wanneer de gebruikersreferenties worden gevalideerd.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Maken van een gebeurtenis-handler voor de <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>gebeurtenis om aan te passen hoe gebruikersreferenties worden gevalideerd.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> De <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>gebeurtenis treedt op wanneer de verificatiecookie wordt ingesteld nadat de de gebruikersreferenties zijn geverifieerd.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Maken van een gebeurtenis-handler voor de <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>gebeurtenis voor het aanpassen van de verificatiecookie.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>       De <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>methode controleert gebruikersreferenties voor authenticatie, maar geen waarde retourneert een verificatieticket.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Gebruik <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>wanneer een gebruiker zich eerder heeft aangemeld en moet u controleren of de referenties aan het begin van een nieuwe toepassingssessie nog geldig zijn.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>       Zie voor een voorbeeld van het gebruik van de WCF-verificatieservice vanuit een consoletoepassing [Walkthrough: ASP.NET-toepassingsservices](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class AuthenticationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.ApplicationServices.AuthenticationService&quot;> </xref> klasse."
  syntax:
    content: public AuthenticationService ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  id: Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Treedt op wanneer er gebruikersreferenties worden gevalideerd."
  remarks: "De Authenticating-gebeurtenis wordt geactiveerd wanneer er gebruikersreferenties worden gevalideerd. Maak een gebeurtenis-handler voor de gebeurtenis Authenticating om aan te passen hoe gebruikersreferenties worden gevalideerd."
  example:
  - "The following example shows how to bind an event handler for the Authenticating event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/csharp/e-system.web.application_0_1.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/visualbasic/e-system.web.application_0_1.asax)]  \n  \n The following example shows an event handler for the Authenticating event in the Global.asax file. The event handler reads two authentication values from the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property and passes them together with the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/e-system.web.application_0_2.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/e-system.web.application_0_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs> Authenticating;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  id: CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Treedt op wanneer de verificatiecookie wordt ingesteld."
  remarks: "De CreatingCookie-gebeurtenis wordt geactiveerd wanneer de verificatiecookie wordt ingesteld nadat de de gebruikersreferenties zijn geverifieerd. Maak een gebeurtenis-handler voor de gebeurtenis CreatingCookie voor het aanpassen van de verificatiecookie."
  example:
  - "The following example shows how to bind an event handler to the CreatingCookie event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/csharp/e-system.web.application_1_1.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.application_1_1.asax)]  \n  \n The following example shows an event handler for the CreatingCookie event in the Global.asax file. The event handler customizes the authentication cookie by adding the value in the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property to the <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> property. Store the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property in a cookie only if you know that the data in the property is not sensitive. Malicious users can access the values in the cookie.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/csharp/e-system.web.application_1_2.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/visualbasic/e-system.web.application_1_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs> CreatingCookie;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  id: IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Hiermee wordt bepaald of de huidige gebruiker is geverifieerd."
  remarks: "De methode IsLoggedIn wordt gecontroleerd of de huidige gebruiker is geverifieerd door het controleren van de <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>      > [!NOTE] > Roep de methode IsLoggedIn niet uit de code die wordt uitgevoerd op de webserver. U aanroepen de methode IsLoggedIn uitsluitend als onderdeel van een WCF-service."
  syntax:
    content: public bool IsLoggedIn ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gebruiker is geverifieerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  id: Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Controleert de gebruiker referenties en maakt u een verificatieticket (cookie) als de referenties geldig zijn."
  remarks: "De methode aanmelding valideert de referenties van de gebruiker via een lidmaatschapsprovider. U kunt de standaardlidmaatschapsprovider gebruiken of geef een aangepaste lidmaatschapsprovider tijdens runtime. De <xref:System.Web.ApplicationServices.AuthenticationService>klasse geeft `userName` en `password` naar de lidmaatschapsprovider <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>methode, maar voldoet niet aan `customCredential`.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService> Als <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>retourneert `true`, <xref:System.Web.ApplicationServices.AuthenticationService>maakt een verificatieticket als een cookie.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Stel de `isPersistent` -parameter voor `true` voor het maken van een verificatieticket die buiten de huidige sessie duurt.      > [!NOTE] > Altijd de verificatieservice samen met het secure sockets layer (SSL, met behulp van HTTPS) gebruiken om gevoelige gegevens te beveiligen.       De methode aanmelding genereert de <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>gebeurtenis en de <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>gebeurtenis.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Maken van een gebeurtenis-handler voor <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>om aan te passen van verificatie, zoals het controleren van de waarden `customCredential` of validatie van referenties via een niet-standaard lidmaatschapsprovider.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> De waarden in `customCredential` worden niet gevalideerd door de standaardlidmaatschapsprovider. Maakt een gebeurtenis-handler voor <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> voor het aanpassen van de verificatiecookie.      > [!NOTE] > Roep de methode aanmelding niet uit de code die wordt uitgevoerd op de webserver. U aanroepen de methode aanmelding uitsluitend als onderdeel van een WCF-service. Zie voor meer informatie [ASP.NET-verificatie](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool Login (string username, string password, string customCredential, bool isPersistent);
    parameters:
    - id: username
      type: System.String
      description: "De gebruikersnaam moet worden gevalideerd."
    - id: password
      type: System.String
      description: "Het wachtwoord voor de opgegeven gebruiker."
    - id: customCredential
      type: System.String
      description: "De waarde of waarden valideren naast `userName` en `password`, indien van toepassing."
    - id: isPersistent
      type: System.Boolean
      description: "Een waarde die aangeeft of het verificatieticket geldig over de sessies blijft."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u gebruikersreferenties zijn geldig. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.Login*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  id: Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Hiermee wist u de verificatieticket (cookie) in de browser."
  remarks: "De methode afmelding wist de verificatiecookie uit van de browser cookies verzameling. De gebruiker moet zich aanmelden opnieuw moet worden geverifieerd.       De <xref:System.Web.ApplicationServices.AuthenticationService>klasse slaat geen gegevens op de server over welke verificatiemethode tickets zijn gewist.</xref:System.Web.ApplicationServices.AuthenticationService>      > [!NOTE] > Roep de methode afmelding niet uit de code die wordt uitgevoerd op de webserver. U aanroepen de methode afmelding uitsluitend als onderdeel van een WCF-service. Zie voor meer informatie [ASP.NET-verificatie](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Logout ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.Logout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  id: ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "De referenties van gebruiker verifieert zonder een verificatieticket uitgeven."
  remarks: "De methode ValidateUser verifieert de referenties van de gebruiker maar wordt niet ingesteld voor een verificatiecookie. Zonder een verificatiecookie worden de gebruiker niet aangemeld zelfs als de referenties geldig zijn.       Gebruik de methode ValidateUser wanneer u controleren moet of de referenties van een gebruiker, zonder dat u ontvangt een verificatiecookie geldig zijn. U kunt dit bijvoorbeeld doen als de verificatiecookie al in een clienttoepassing opgeslagen is, maar u controleren wilt of de referenties van de gebruiker nog steeds geldig wanneer een nieuwe sessie wordt gestart.       TheValidateUser methode genereert de <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>gebeurtenis, maar geen de <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>gebeurtenis.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>      > [!NOTE] > Roep de methode ValidateUser niet uit de code die wordt uitgevoerd op de webserver. U aanroepen de methode ValidateUser uitsluitend als onderdeel van een WCF-service. Zie voor meer informatie [ASP.NET-verificatie](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidateUser (string username, string password, string customCredential);
    parameters:
    - id: username
      type: System.String
      description: "De gebruikersnaam moet worden gevalideerd."
    - id: password
      type: System.String
      description: "Het wachtwoord voor de opgegeven gebruiker."
    - id: customCredential
      type: System.String
      description: "De waarde of waarden valideren naast `userName` en `password`, indien van toepassing."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u de gebruikersreferenties zijn geldig. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
- uid: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<AuthenticatingEventArgs>
  nameWithType: EventHandler<AuthenticatingEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.AuthenticatingEventArgs
    name: AuthenticatingEventArgs
    nameWithType: AuthenticatingEventArgs
    fullName: AuthenticatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
- uid: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CreatingCookieEventArgs>
  nameWithType: EventHandler<CreatingCookieEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.CreatingCookieEventArgs
    name: CreatingCookieEventArgs
    nameWithType: CreatingCookieEventArgs
    fullName: CreatingCookieEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService
  nameWithType: AuthenticationService.AuthenticationService
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn
  nameWithType: AuthenticationService.IsLoggedIn
- uid: System.Web.ApplicationServices.AuthenticationService.Login*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login
  nameWithType: AuthenticationService.Login
- uid: System.Web.ApplicationServices.AuthenticationService.Logout*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout
  nameWithType: AuthenticationService.Logout
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser
  nameWithType: AuthenticationService.ValidateUser
