### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  id: WebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
  type: Class
  summary: "Fungeert als de centrale klasse van de webonderdelen besturingselement is ingesteld, het beheren van alle de webonderdelen besturingselementen, functionaliteit en gebeurtenissen die zich op een webpagina."
  remarks: "Het besturingselement WebPartManager fungeert als de center-hub of -besturingselement van een toepassing met webonderdelen. Moet er een-- en slechts één--WebPartManager besturingselement exemplaar op elke pagina die gebruikmaakt van besturingselementen voor webonderdelen. Net als bij de meeste aspecten van webonderdelen toepassingen werkt het besturingselement WebPartManager alleen met geverifieerde gebruikers. Bovendien wordt werkt de functionaliteit ervan vrijwel geheel met serverbesturingselementen die zich bevinden in zones met webonderdelen die van de <xref:System.Web.UI.WebControls.WebParts.WebZone>klasse overnemen.</xref:System.Web.UI.WebControls.WebParts.WebZone> Serverbesturingselementen die zich op een pagina buiten deze zones bevinden kunnen een zeer geringe webonderdelen functionaliteit of interactie met het besturingselement WebPartManager.       Het besturingselement WebPartManager verricht de soorten taken die worden beschreven in de volgende tabel als de hub voor webonderdelen functionaliteit op een pagina.      | Taakcategorie | Wat het doet |   |-------------------|---------------------------|   | Besturingselementen voor webonderdelen bijhouden | Houdt van veel verschillende soorten besturingselementen op een pagina die webonderdelen-functies bieden, zoals <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, verbindingen, zones en andere gebruikers. |   | Toevoegen en verwijderen van besturingselementen voor webonderdelen | Bevat de methoden voor het toevoegen, verwijderen en <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen op een pagina te sluiten. |   | Verbindingen beheren | Verbindingen tussen besturingselementen maakt en bewaakt de verbindingen, evenals de processen van toe te voegen en te verwijderen. |   | Besturingselementen en pagina&quot;s aanpassen | Hiermee kunnen gebruikers om besturingselementen te verplaatsen naar een andere locatie op een pagina en start de weergaven waarin gebruikers het uiterlijk, de eigenschappen en het gedrag van besturingselementen kunnen bewerken.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Gebruikersspecifieke persoonlijke voorkeursinstellingen op elke pagina onderhoudt. |   | Schakelen tussen verschillende weergaven | Een pagina tussen verschillende gespecialiseerde weergaven van de pagina verandert, zodat gebruikers bepaalde taken, zoals het wijzigen van pagina-indeling of besturingselementen voor bewerking kunnen uitvoeren. |   | Webonderdelen levenscyclus gebeurtenissen verhogen | Verhoogt en kunnen ontwikkelaars verwerken van gebeurtenissen van de levenscyclus van besturingselementen voor webonderdelen, zoals wanneer besturingselementen worden toegevoegd, verplaatst, verwijderd of verbonden gedefinieerd. |   | Importeren en exporteren van besturingselementen inschakelen | XML-stromen met de status van de eigenschappen van <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen worden geëxporteerd en kunnen gebruikers de bestanden voor het gemak personaliseren van complexe besturingselementen in andere sites of&quot;s importeren. |       De klasse WebPartManager heeft een groot aantal eigenschappen.</xref:System.Web.UI.WebControls.WebParts.WebPart> Consistent zijn met de rol WebPartManager voor het bijhouden van andere besturingselementen, heeft een aantal eigenschappen die verwijzen naar verzamelingen van besturingselementen voor webonderdelen of andere speciale webonderdelen-objecten. De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, en <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>Eigenschappen zijn alle verzamelingen die worden gebruikt door de WebPartManager-besturingselement voor het bijhouden en andere beheertaken.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>       Een andere groep met eigenschappen bevat aanpasbare waarschuwingen die in bepaalde scenario&quot;s die in een toepassing webonderdelen voorkomen van toepassing. Deze omvatten de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, wordt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>, en de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>Eigenschappen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>       De klasse WebPartManager overschrijft base overgenomen eigenschappen, die worden gebruikt door veel webserverbesturingselementen. Deze omvatten de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, en <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>Eigenschappen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>       Er is ten slotte een groep met eigenschappen handig voor toegang tot de huidige status van de toepassing. De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>eigenschap geeft de huidige weergavemodus dat zich een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>eigenschap geeft aan of een besturingselement is toegestaan voor het weergeven van clientscript, die is relevant voor situaties waarin gebruikers mogelijk browsers met verschillende mogelijkheden of Scripting is uitgeschakeld.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>eigenschap is handig voor het verwijzen naar een Hulpprogrammaklasse die de aanroepen naar een aantal belangrijke webonderdelen methoden die worden gebruikt voor uitbreidbaarheid gevallen bevat.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Door het aanroepen van deze methoden in een afzonderlijke klasse verbergen (de <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>klasse), de WebPartManager-klasse eigenaar API wordt vereenvoudigd.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>eigenschap biedt toegang tot de persoonlijke-objecten die gebruikers persoonlijke instellingen opslaan en persistent maken van die gegevens in de permanente opslag.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>eigenschap geeft aan welke <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement op een pagina is geselecteerd door de gebruiker of de toepassing.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>eigenschap geeft aan of aangepaste personalisatiegegevens op een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement is gewijzigd.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>       Het besturingselement WebPartManager bevat vijf ingebouwde weergavemodus of weergaven van een webpagina. Ontwikkelaars kunnen uitbreiden van deze functie modi van de aangepaste weergave maken door uit te breiden, zoals de <xref:System.Web.UI.WebControls.WebParts.WebZone>klasse of de <xref:System.Web.UI.WebControls.WebParts.ToolZone>klasse.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> Gebruikers kunnen een pagina in de verschillende weergavemodi van de schakelen voorwaarde dat het juiste type besturingselementen die overeenkomen met een opgegeven weergavemodus aanwezig zijn op een pagina.      > [!NOTE] > Is het mogelijk is deze functie uitbreiden zodat gebruikers op een aangepaste weergave-modus schakelen kunnen zonder een bijbehorende zone op de pagina. Het standaardgedrag is echter dat weergavemodus komen met zones overeen.       De standaardweergave modi worden aangeduid met openbare velden in de klasse WebPartManager. De volgende tabel geeft een overzicht van de velden en de weergavemodus waarnaar ze verwijzen. De huidige weergavemodus van een pagina, zoals eerder vermeld, is altijd waarnaar wordt verwezen in de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>eigenschap en de set weergavemodus die mogelijk is op een bepaalde pagina, krijgt het soort zones die aanwezig zijn op de pagina is opgenomen in de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>      | Veld | De modus details weergeven |   |-----------|--------------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>| De weergave van de normale gebruiker van een webpagina. de standaard- en meest voorkomende weergavemodus. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>| De weergave die gebruikers kunnen rangschikken of verwijderen van besturingselementen voor het wijzigen van de pagina-indeling. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>| De weergave waarin een bewerking gebruikersinterface (UI) weergegeven wordt; gebruikers kunnen het uiterlijk, de eigenschappen en het gedrag van de besturingselementen die zichtbaar in de normale bladermodus zijn bewerken. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>| De weergave waarin een catalogus UI zichtbaar; gebruikers besturingselementen kunnen toevoegen aan een pagina uit catalogi van beschikbare besturingselementen. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>| De weergave waarin een verbinding UI zichtbaar; gebruikers kunnen verbinding maken, beheren of Verbreek de verbindingen tussen besturingselementen. |       Het besturingselement WebPartManager bevat ook een aantal gebeurtenissen die essentieel in de levenscyclus van webonderdelen pagina&quot;s en besturingselementen zijn.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Deze gebeurtenissen nauwkeurig programmatische controle bieden over het gedrag van besturingselementen voor webonderdelen. De meeste methoden hebben betrekking rechtstreeks naar <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen (of andere server of de gebruiker de besturingselementen die worden geplaatst in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zones zodat zij als functioneren <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Echter enkele gebeurtenissen betrekking hebben op de status van de pagina of verbindingen op de pagina. De volgende tabel worden de gebeurtenissen beschikbaar en bevat een overzicht van hun doeleinden.      > [!NOTE] > In alle gevallen in de volgende tabel het woord &quot;beheer&quot; verwijst naar een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement of een server die zich bevindt in een zone en wordt verpakt met een <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>object tijdens runtime.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>      | Gebeurtenis | Beschrijving |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>| Deze gebeurtenis treedt op vlak voordat een besturingselement wordt toegevoegd aan een pagina om te controleren dat is gemachtigd. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>| Deze gebeurtenis treedt op nadat op een pagina alle verbindingen zijn geactiveerd. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>| Deze gebeurtenis treedt op vlak voordat het proces van het activeren van alle verbindingen op een pagina. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>| Deze gebeurtenis treedt op nadat de huidige weergavemodus van een pagina is gewijzigd. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>| Deze gebeurtenis treedt op vlak voordat het proces van het wijzigen van een pagina weergavemodus. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>| Deze gebeurtenis treedt op nadat de selectie van een besturingselement is geannuleerd. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>| Deze gebeurtenis treedt op vlak voordat het proces van het annuleren van de selectie van een besturingselement. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>| Deze gebeurtenis treedt op nadat een besturingselement is toegevoegd aan een zone. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>| Deze gebeurtenis treedt op vlak voordat het proces van het toevoegen van een besturingselement aan een zone. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>| Deze gebeurtenis treedt op nadat een besturingselement (verwijderd van een pagina) is gesloten. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>| Deze gebeurtenis treedt op vlak voordat het proces van het sluiten van een besturingselement. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>| Deze gebeurtenis treedt op nadat een exemplaar van een dynamische besturingselement (een die zijn gemaakt via een programma of toegevoegd op basis van een catalogus) is nu definitief verwijderd. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>| Deze gebeurtenis treedt op vlak voordat het proces van het verwijderen van een dynamische besturingselement. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>| Deze gebeurtenis treedt op nadat een besturingselement is verplaatst binnen de zone of in een andere zone. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>| Deze gebeurtenis treedt op vlak voordat het proces van het verplaatsen van een besturingselement. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>| Deze gebeurtenis treedt op wanneer twee besturingselementen die zijn geselecteerd voor deelname aan een verbinding hebben de verbinding tot stand worden gebracht. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>| Deze gebeurtenis treedt op vlak voordat het proces van het verbinden van twee besturingselementen. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>| Deze gebeurtenis treedt op wanneer twee verbonden besturingselementen verbinding is verbroken. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>| Deze gebeurtenis treedt op vlak voordat het proces van het verbreken van de twee besturingselementen. |       Het besturingselement WebPartManager heeft talrijke methoden voor het beheren van webonderdelen pagina&quot;s.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Een groot aantal de methoden, niet hier worden vermeld, zijn methoden waarvan de naam de indeling nemen van op*EventName*. Deze methoden doorgaans verhogen van de bijbehorende gebeurtenis en de gebeurtenis voorzien van een handler van het type <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>.</xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler> De meeste van deze methoden kan worden genegeerd door de ontwikkelaars die van de klasse WebPartManager overnemen. Pagina ontwikkelaars kunnen ook aangepaste handlers opgeven voor de gebeurtenissen die zijn gekoppeld aan deze methoden. Bijvoorbeeld, in het geval van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>gebeurtenis, een ontwikkelaar kan toevoegen een `OnWebPartAdded` kenmerk de `<asp:webpartmanager>` -element in de opmaak van een webpagina, en vervolgens toewijzen een aangepaste methode met de naam van het kenmerk voor aangepaste verwerking voor de gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Het kenmerk komt overeen met de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>methode en deze basispatroon van gebeurtenisafhandeling werkt voor de meeste webonderdelen gebeurtenissen en de bijbehorende methoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>       Daarnaast het besturingselement van WebPartManager heeft bepaalde methoden voor de taak van het beheer van <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen (en server of de gebruiker besturingselementen gebruikt als <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> These methods include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>       Een andere set van methoden is speciaal bedoeld voor verbindingen. This includes methods such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>       Ten slotte richt u enkele methoden WebPartManager op personalisatie-functionaliteit. These include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>       Voor meer informatie over de andere methoden WebPartManager die toegankelijk via de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>eigenschap, Zie de documentatie voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>klasse zijn.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>"
  example:
  - "The following code example demonstrates both declarative and programmatic use of the WebPartManager control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The user control has a drop-down list control that shows the possible display modes on a page, given the Web Parts controls that are present on the page. In the Web page for this code example, this user control is declared just below the WebPartManager element in the page's markup, and there is a `Register` directive near the top of the Web page to register the control. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_1.ascx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_1.ascx)]  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. The page also contains some inline code that handles connection-related events for the WebPartManager control; you can see the effect of this code as you connect and disconnect controls.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_2.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_2.aspx)]  \n  \n The third part of the example is the source code for the controls. Note that there is an interface named `IZipCode`, and this interface is implemented in the `ZipCodeWebPart` class. This class has a special callback method named `ProvideIZipCode` that serves as a provider. The other type, named `WeatherWebPart`, is also implemented with a special method named `GetIZipCode`, which enables the control to act as a consumer of the other control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you have compiled the source into an assembly, and the `Register` directive in the Web page references the assembly name. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_3.cs)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_3.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection UI appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and then click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. You can enter a ZIP Code, and the consumer control will be updated with the value you enter. Because the `ZipCode` property was marked with the `Personalizable` attribute in the source code, this property value will persist across browser sessions, thus saving the value entered by a user. A more sophisticated consumer control could take the ZIP code information, look up weather information based on the code, and display it to a user."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.ViewStateModeById]

      public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> klasse."
  remarks: "De constructor WebPartManager initialiseert enkele belangrijke variabelen die worden gebruikt door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Een toewijzing die rechtstreeks van invloed is op alle pagina&quot;s van webonderdelen is het feit dat de standaardmodus voor de weergave van pagina is ingesteld op de modus Bladeren (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  syntax:
    content: public WebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  id: ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Actieve alle verbindingen maakt op een webpagina die momenteel niet actief zijn."
  remarks: "De methode ActivateConnections wordt aangeroepen bij elke aanvraag naar een pagina voor het activeren van bestaande verbindingen tussen <xref:System.Web.UI.WebControls.WebParts.WebPart>en andere serverbesturingselementen die zich <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zones.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> In sommige gevallen voor exemplaar als er een conflict in de verbindingen worden geactiveerd, deze methode op zijn beurt roept de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>methode voor de problematisch verbinding wilt verbreken.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Tijdens het verbreken de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>gebeurtenis is opgetreden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Normaal gesproken ontwikkelaars deze gebeurtenis kunnen annuleren, maar in het geval wanneer dit een conflict optreedt tussen de verbindingen die deze kan niet worden geannuleerd, is omdat de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement moet het conflict oplossen om het proces van het activeren van verbindingen te voltooien.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Zie voor meer informatie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  syntax:
    content: protected virtual void ActivateConnections ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Biedt de programmatische standaardmethode voor het toevoegen van <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen naar een webpagina."
  remarks: "De methode AddWebPart gebruikt zowel voor het toevoegen van nieuwe dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart>bepaalt aan een pagina en om statische of dynamische besturingselementen die eerder zijn gesloten op een pagina opnieuw te openen.</xref:System.Web.UI.WebControls.WebParts.WebPart> Als de methode wordt aangeroepen voor een nieuw besturingselement toevoegt, maakt het daadwerkelijk een kopie van het besturingselement waarnaar wordt verwezen in de `webPart` parameter. Een nieuwe ID voor de kopie van het besturingselement wordt gegenereerd zodat ontwikkelaars moeten verwijzen naar de <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement van de methode om de nieuwe ID-waarde geretourneerd.</xref:System.Web.UI.WebControls.WebParts.WebPart> Wanneer de methode wordt aangeroepen om een eerder gesloten besturingselement opnieuw te openen, wordt een directe verwijzing naar het besturingselement waarnaar wordt verwezen door de `webPart` parameter.      > [!IMPORTANT] > U altijd de methode AddWebPart moet gebruiken in plaats van de <xref:System.Web.UI.ControlCollection.Add%2A>methode van de verzameling besturingselementen waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName>eigenschap om toe te voegen <xref:System.Web.UI.WebControls.WebParts.WebPart>programmatisch besturingselementen aan de pagina omdat de <xref:System.Web.UI.ControlCollection.Add%2A>methode er een uitzondering gegenereerd.</xref:System.Web.UI.ControlCollection.Add%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.ControlCollection.Add%2A> Toevoegen van een besturingselement dat is niet een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement (met andere woorden, een serverbesturingselement dat wordt verpakt met een <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>besturingselement tijdens runtime), moet u eerst aanroepen de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>methode voor het maken van het besturingselement en roep de methode AddWebPart als het besturingselement wilt toevoegen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Zie de sectie Voorbeeld voor een demonstratie van deze benadering."
  example:
  - "The following code example demonstrates use of the AddWebPart method to add a server control programmatically to a page. The page markup contains an empty `<asp:webpartzone>` element, and an `<asp:webpartmanager>` element. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, calling the AddWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6da004d9-95d1-4401-9d7e-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6da004d9-95d1-4401-9d7e-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "De <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (of de server of een gebruiker) moet worden toegevoegd aan een webpagina of geopend op een pagina."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "De <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> die `webPart` wordt toegevoegd aan."
    - id: zoneIndex
      type: System.Int32
      description: "Een geheel getal dat vertegenwoordigt het rangtelwoord voor de positie die `webPart` in beslag neemt in `zone`, ten opzichte van andere besturingselementen in `zone`."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement dat is toegevoegd aan de pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>zone</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>zone</code> is not registered in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control's collection of zones.  \n  \n \\- or -  \n  \n <code>webPart</code> is already in <code>zone</code>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde van <code> zoneIndex </code> is kleiner dan nul."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  id: AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op wanneer de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>methode wordt aangeroepen om te bepalen of een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselement kan worden toegevoegd aan een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>"
  remarks: "De gebeurtenis AuthorizeWebPart deze gebeurtenis treedt op wanneer een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement wordt toegevoegd aan een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> Er zijn een aantal algemene scenario&quot;s waarbij een besturingselement kan worden toegevoegd aan een pagina. Voor een volledige beschrijving van deze, Zie de sectie met opmerkingen voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Wanneer een besturingselement wordt toegevoegd, moet dit worden gecontroleerd om te zien of de <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>eigenschap is ingesteld en, als dit het geval is, of het besturingselement is gemachtigd om te worden toegevoegd aan de pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Ontwikkelaars kunnen gebeurtenis-handlers voor de gebeurtenis AuthorizeWebPart om te bieden voor het filteren van opties voor het maken. Als een besturingselement <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>eigenschapswaarde voldoet niet aan de criteria in de gebeurtenis-handler-code, het besturingselement is niet toegevoegd aan de pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the AuthorizeWebPart event, which automatically overrides the default <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method.  \n  \n The code in the `mgr1_AuthorizeWebPart` method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `user` and, if so, returns `true`, which means that they will be authorized and added to the page. This assumes the default approach is to allow users to view controls with a page in user personalization scope. Notice, however, that in the example one of the controls has its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property value set to `admin`. Developers might place this filter on a specialized control that was designed for only administrative users to see. This control will fail the authorization check during the AuthorizeWebPart event, and will not be displayed. Note that controls that do not have the property set are displayed as well; they are assumed not to be part of a filtering scenario because their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties are not set.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  id: AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee wordt een verzameling <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objecten die beschikbaar zijn voor gebruik bij het maken van webonderdelen verbindingen tussen serverbesturingselementen."
  remarks: "Deze eigenschap maakt gebruik van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>methode om de verzameling te maken.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> Standaard worden de beschikbare transformatoren gelezen uit het configuratiebestand van de toepassing."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.TransformerTypeCollection&quot;> </xref> die bestaat uit een set <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objecten."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Start het proces van het verbinden van twee <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen."
  remarks: "De methode BeginWebPartConnecting ervoor te zorgen dat het proces van de verbindingen tussen de besturingselementen die kan worden uitgevoerd in verschillende fasen, waardoor ontwikkelaars meer controle over het verbindingsproces. De methode voert een reeks initiële controles ervoor te zorgen dat `webPart` bevindt zich in een status waarin een verbinding daadwerkelijk kan worden gevormd. Als `webPart` geeft alle controles uitgevoerd, wordt deze vervolgens ingesteld als het geselecteerde besturingselement (Zie de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>eigenschap), en het maken van verbinding proces kan doorgaan.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het besturingselement waarvan de verbinding wordt gevormd."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De huidige weergavemodus op de pagina is niet <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Start het proces voor het bewerken van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement."
  remarks: "De methode BeginWebPartEditing ervoor te zorgen dat het proces voor het bewerken van besturingselementen in verschillende fasen, waardoor ontwikkelaars meer controle over het proces kan worden gedaan. De methode voert een reeks initiële controles ervoor te zorgen dat `webPart` bevindt zich in een status waarin deze kan worden bewerkt. Als `webPart` geeft alle controles wordt deze vervolgens ingesteld als het geselecteerde besturingselement (Zie de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>eigenschap), en het bewerken proces kan doorgaan.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het besturingselement kan worden bewerkt."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De huidige weergavemodus op de pagina is niet <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  id: BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee geeft u de standaardweergavemodus voor pagina&quot;s die webonderdelen besturingselementen bevatten. Dit veld is alleen-lezen."
  remarks: "Het veld BrowseDisplayMode verwijst naar een aangepaste <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>-object dat is gemaakt en is opgenomen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Omdat dit een statisch object, kunt u verwijzen naar deze rechtstreeks via de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse zonder een exemplaar van het besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Wanneer een pagina met webonderdelen eerste laadt besturingselementen, is deze standaard in BrowseDisplayMode (bladermodus). Wanneer gebruikers als op een normale webpagina gewoon bladert, wordt de pagina blijft in de bladermodus. Als gebruikers wilt maken van een pagina-indeling, besturingselementen, weergave of gedrag aanpassen, moet deze overschakelen van de pagina in een van de weergavemodi gespecialiseerde beschikbaar is via de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>"
  example:
  - "The following code example demonstrates how to work with the BrowseDisplayMode field programmatically. The code populates a drop-down list with the supported display modes, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to BrowseDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_5_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page that indicates you are in browse mode. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now hidden."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Controleert de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen die een verbinding om te bepalen deelnemen moeten of ze kunnen worden aangesloten, wanneer de consumer- en providertypen besturingselementen compatibele interfaces hebben en een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> object is niet nodig."
  remarks: "Deze methode wordt gebruikt om verbinding te `provider` en `consumer` wanneer beide besturingselementen compatibel verbindingspunt typen, zodat een <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>object is niet nodig.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> U kunt deze methode gebruikt om te controleren dat twee besturingselementen kunnen worden verbonden voordat <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>een programmatische verbinding te maken.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Deze overbelasting maakt gebruik van de dezelfde implementatie als de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>overbelasting voor methode, met de enige uitzondering hierop wordt deze overbelasting vereist geen een transformator.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>"
  example:
  - "The following code example demonstrates how to use this method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, an `<asp:webpartmanager>` element, and some event-handling code that creates a connection using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks whether the connection can be made and, if so, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. It contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, one acting as a provider, and the other as a consumer. Because they have compatible connection points (both of them recognize the `IZipCode` interface), a transformer is not needed to make the connection. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_2.cs)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_2.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method."
  syntax:
    content: public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het besturingselement dat aan `consumer` wanneer de besturingselementen zijn verbonden."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> waarmee `provider` om deel te nemen in een verbinding."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het besturingselement dat gegevens van ontvangt `provider` wanneer de besturingselementen zijn verbonden."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> die fungeert als een retouraanroepmethode dus die `consumer` kan deelnemen in een verbinding."
    return:
      type: System.Boolean
      description: "Een Boolean die aangeeft of <code> provider </code> en <code> consumer </code> kunnen worden verbonden."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Controleert de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen die moeten deelnemen een verbinding om te bepalen of ze kunnen worden aangesloten en maakt gebruik van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> object te maken van de verbinding tussen een niet-compatibele gebruikers en providers."
  remarks: "Deze methode wordt gebruikt om verbinding te `provider` en `consumer` wanneer beide besturingselementen hebben incompatibele verbindingspunt typen, zodat een <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>object is vereist.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> U kunt deze methode gebruikt om te controleren dat twee besturingselementen kunnen worden verbonden voordat <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>een programmatische verbinding te maken.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Deze overbelasting maakt gebruik van de dezelfde implementatie als de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>overbelasting voor methode, met de enige uitzondering hierop wordt dat deze overbelasting vereist een transformator.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>"
  syntax:
    content: public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het besturingselement dat aan `consumer` wanneer de besturingselementen zijn verbonden."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> die fungeert als een retouraanroepmethode dus die `provider` kan deelnemen in een verbinding."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het besturingselement dat gegevens van ontvangt `provider` wanneer de besturingselementen zijn verbonden."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> die fungeert als een retouraanroepmethode dus die `consumer` kan deelnemen in een verbinding."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> waarmee een incompatibel `provider` en `consumer` verbinding maken."
    return:
      type: System.Boolean
      description: "Een Boolean die aangeeft of <code> provider </code> en <code> consumer </code> vormen een verbinding."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  id: CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee geeft u de weergavemodus gebruikt voor het toevoegen van serverbesturingselementen uit een catalogus van besturingselementen naar een webpagina. Dit veld is alleen-lezen."
  remarks: "Het veld CatalogDisplayMode verwijst naar een aangepaste <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>-object dat is gemaakt en is opgenomen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Omdat dit een statisch object, kunt u verwijzen naar deze rechtstreeks via de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse zonder een exemplaar van het besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Wanneer gebruikers besturingselementen toevoegen aan een pagina wilt, als er een catalogus van serverbesturingselementen beschikbaar is, kunnen ze de pagina overschakelen naar CatalogDisplayMode (catalogus modus) en de catalogus-gebruikersinterface (UI) wordt weergegeven. De gebruikersinterface voor een catalogus van webonderdelen wordt geleverd door een <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>zone besturingselement.</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Ontwikkelaars deze zone toevoegen aan de pagina in de ontwerpfase en voeg serverbesturingselementen toe aan de zone, zodat gebruikers kunnen deze besturingselementen toevoegen aan de pagina&quot;s tijdens de uitvoering. Nadat de ontwikkelaar heeft deze beveiligingsmaatregelen zijn toegevoegd, wordt de modus catalogus een ondersteunde weergavemodus op de pagina omdat de benodigde besturingselementen er zijn catalogus modus in te schakelen.       Wanneer een gebruiker een pagina te catalogiseren modus, de zone en alle serverbesturingselementen die zijn toegevoegd aan deze zichtbaar overschakelt en de gebruiker kan besturingselementen selecteren uit de catalogus toevoegen aan de pagina of besturingselementen verwijderen uit de pagina. Nadat de besturingselementen zijn toegevoegd aan de pagina, ze worden weergegeven in de modus normale bladeren en de pagina wordt bijgewerkt."
  example:
  - "The following code example demonstrates how to work with the CatalogDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and catalog. The catalog mode is available because of the `<asp:CatalogZone>` element and its child elements in the Web page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to CatalogDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_3_1.aspx)]\n [!code-cs[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_3_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to catalog mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. You can select the control in the catalog and add it to either of the two zones on the page."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  id: CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Controleert de mogelijkheden van de browser die de aanvraag en de waarde van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>eigenschap om te bepalen of het weergeven van de client script.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>"
  syntax:
    content: protected virtual bool CheckRenderClientScript ();
    parameters: []
    return:
      type: System.Boolean
      description: "Een Booleaanse waarde waarmee wordt aangegeven of clientscript weergeven."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  id: CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van een waarschuwing die wordt weergegeven wanneer een gebruiker een besturingselement dat als een provider op andere besturingselementen in een verbinding fungeert wordt gesloten."
  remarks: "Wanneer een gebruiker wordt gesloten een <xref:System.Web.UI.WebControls.WebParts.WebPart>bepalen, normaal gesproken geen bericht wordt weergegeven.</xref:System.Web.UI.WebControls.WebParts.WebPart> Zie voor meer informatie over wat het betekent om te sluiten van een besturingselement de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>       Echter, wanneer een besturingselement is verbonden met een ander besturingselement en als een provider van gegevens naar het andere besturingselement fungeert, een standaardbericht waarschuwing wordt weergegeven wanneer een gebruiker probeert te sluiten van het besturingselement. Het bericht aangegeven gebruikers dat een besturingselement van de provider is gesloten, dat betekent dat bepaalt dat is verbonden met deze provider als consumenten beschikt niet langer over alle gegevens te gebruiken. De eigenschap CloseProviderWarning kan ontwikkelaars het waarschuwingsbericht aanpassen die aan de gebruiker wordt weergegeven.       Als een ontwikkelaar een tekenreekswaarde leeg of null-naar deze eigenschap wijst, geen waarschuwingsbericht worden weergegeven wanneer een gebruiker sluit een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement dat een provider.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the CloseProviderWarning property to display a custom warning to users.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to assign a custom warning message to the CloseProviderWarning property in declarative markup in the `<asp:webpartmanager>` element.  \n  \n [!code-cs[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_979_1.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_979_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Finally, click the verbs menu for the **ZIP Code** control (which is the provider control in this case) and select **Close**. The custom message you assigned to the CloseProviderWarning property is displayed."
  syntax:
    content: public virtual string CloseProviderWarning { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks met de waarschuwing. De standaardwaarde is een specifieke cultuur-bericht dat is opgegeven door het .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sluit een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement zodanig dat deze niet op een webpagina wordt weergegeven, maar kan worden geopend."
  remarks: "De methode CloseWebPart verwijdert u een <xref:System.Web.UI.WebControls.WebParts.WebPart>of andere server beheren zodat deze niet wordt weergegeven op de webpagina die deze oorspronkelijk opgenomen</xref:System.Web.UI.WebControls.WebParts.WebPart> Het gesloten besturingselement is toegevoegd aan een <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>-object, dat een verwijzing naar de gesloten besturingselement houdt en maakt het mogelijk voor het besturingselement worden teruggezet op de pagina.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Een gesloten <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement nog steeds weergegeven in de verzameling waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Sluiten van een besturingselement verschilt van het te verwijderen. Gesloten besturingselementen zijn nog steeds beschikbaar worden teruggezet op een pagina, maar een exemplaar van de verwijderde besturingselement wordt definitief verwijderd en kan niet worden hersteld. Ongeacht of een <xref:System.Web.UI.WebControls.WebParts.WebPart>of serverbesturingselement is (gedeclareerd in de opmaak van een pagina) statisch of dynamisch (toegevoegd aan de pagina via programmacode of door een gebruiker uit een catalogus webonderdelen), kan worden gesloten en heropend op een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Normaal gesproken gebruikers kunnen sluiten een <xref:System.Web.UI.WebControls.WebParts.WebPart>controle door de opdrachtmenu op en selecteert u de sluiten term.</xref:System.Web.UI.WebControls.WebParts.WebPart> Een besturingselement kan ook worden gesloten door rechtstreeks aanroepen van de methode CloseWebPart en door te geven een verwijzing naar `webPart`.       Op een pagina waar <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen hebt gesloten, als een ontwikkelaar declareert een `<asp:catalogzone>` -element en erin wordt toegevoegd een `<asp:pagecatalogpart>` element, biedt een eenvoudige gebruikersinterface (UI) voor gebruikers om te zetten gesloten besturingselementen op de pagina tijdens de uitvoering.</xref:System.Web.UI.WebControls.WebParts.WebPart> Gebruikers kunnen schakelen tussen de pagina in de catalogus weergavemodus en de gesloten besturingselementen in de Paginacatalogus weergegeven. Gebruikers kunnen gesloten besturingselementen selecteren en toe te voegen terug naar de pagina op de positie die ze willen en vervolgens wordt de geselecteerde besturingselementen worden teruggezet naar de pagina en weergegeven die normaal werken.       Als de CloseWebPart-methode wordt aangeroepen, er worden meerdere gebeurtenissen gegeven: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>(als er meerdere besturingselementen zijn) en <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>(als er besturingselementen verbonden).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Normaal gesproken ontwikkelaars deze gebeurtenissen kunnen annuleren, maar in sommige gevallen is het niet mogelijk om ze te annuleren. Zie voor meer informatie de documentatie voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, en <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>gebeurtenissen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  example:
  - "The following code example demonstrates how to use the CloseWebPart method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_1.vb)]\n [!code-cs[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_1.cs)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with an <`asp:pagecatalogpart>` element declared within it. This is what will contain the closed <xref:System.Web.UI.WebControls.WebParts.WebPart> control and enable users to add it back to the page. The `Button1_Click` method directly calls the CloseWebPart method to close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, although a user can also close the control through the verbs menu.  \n  \n [!code-cs[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_2.aspx)]  \n  \n After you load the page in a browser, close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control by clicking the verbs menu (the arrow symbol) in the header of the control, and clicking **Close**. Now change the page to catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. The page catalog appears with the closed control. Select the check box next to the closed control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. The control is restored to the page. Now close it again, this time by clicking the **Close WebPart** button."
  syntax:
    content: public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselement dat wordt gesloten in een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n \\- or -  \n  \n <code>webPart</code> is a shared control and has already been closed by another user."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  id: ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee geeft u de weergavemodus gebruikt voor het weergeven van een speciale gebruikersinterface (UI) voor gebruikers voor het beheren van de verbindingen tussen <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen. Dit veld is alleen-lezen."
  remarks: "Het veld ConnectDisplayMode verwijst naar een aangepaste <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>-object dat is gemaakt en is opgenomen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Omdat dit een statisch object, kunt u verwijzen naar deze rechtstreeks via de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse zonder een exemplaar van het besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Als gebruikers wilt beheren van de verbindingen tussen <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen op een webpagina als een <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>zone is gedeclareerd op de pagina ze kunnen de pagina schakelen in de modus ConnectDisplayMode.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Een speciale gebruikersinterface wordt de weergavemodus connect weergegeven voor het beheren van verbindingen, inclusief de mogelijkheid verbinding te maken of verbreken van de besturingselementen en om de gegevens van bestaande verbindingen te bewerken.       Als u bieden gebruikers de mogelijkheid wilt voor het beheren van verbindingen met de gebruikersinterface die wordt geleverd door de webonderdelen besturingselement set, moet u een `<asp:connectionszone>` -element in de opmaak van een pagina. In tegenstelling tot de elementen voor andere soorten <xref:System.Web.UI.WebControls.WebParts.WebZone>zones, hoeft u andere labels binnen dit element toevoegen; declareert u eenvoudig het element zelf.</xref:System.Web.UI.WebControls.WebParts.WebZone>"
  example:
  - "The following code example demonstrates the usage of the ConnectDisplayMode mode.  \n  \n The code example has three parts:  \n  \n-   A source file that contains an interface and custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection.  \n  \n-   A Web page that provides a connection UI and demonstrates working with the ConnectDisplayMode mode.  \n  \n-   An explanation of how to run the example.  \n  \n The first part of the code example is a source file that contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that are designed so they can be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compilation approach. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_1.cs)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_1.vb)]  \n  \n The second part of the example is a Web page that hosts the custom controls. Within the server `<script>` tags on the page are several methods that populate a drop-down list with the display modes available on the page. A user can select these from the drop-down list to change the page's display mode. One of the available display modes is connect display mode, because an `<asp:connectionszone>` element is declared in the page's markup. Notice that this element does not contain any other child elements; it exists only to enable the connection management UI for users.  \n  \n The ConnectDisplayMode mode appears in this example in two places. First, in the `Page_Init` method, the connect display mode is added to the drop-down list of display modes, as the code loops through the collection referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. Second, the `Page_PreRender` method checks the current display mode on the page, and if the current mode is ConnectDisplayMode, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_2.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_2.aspx)]  \n  \n After you load the page in a browser, click the drop-down list and select **Connect** to switch the page into connect display mode. Notice that a message appears, telling you that the page is in connect display mode. Now click the verbs menu (an arrow symbol) in the title bar of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and then click **Connect** in the verbs menu. After the connection UI is displayed, click the link to create a connection. Use the drop-down list within the connection UI that appears, select the other control that will participate in the connection, and click the **Connect** button. The connection is established. Click the **Close** button, and then use the drop-down list at the top of the page to return the page to browse display mode."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  id: Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee haalt een verwijzing naar de verzameling van alle actieve verbindingen op een webpagina."
  remarks: "De eigenschap Connections biedt een manier toegang krijgen tot de huidige set met verbindingen op een pagina. De verzameling zelf is alleen-lezen en ontwikkelaars die u wilt bewerken, een specifieke verbinding uit de verzameling moeten <xref:System.Web.UI.WebControls.WebParts.WebPartManager>methoden zoals <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>en <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> gebruiken"
  example:
  - "The following code example demonstrates declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to use the Connections property programmatically to get the count of current connections on a page. Note that in the `<script>` tag section, the code to handle two events for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control accesses the Connections property to obtain the count.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_34_1.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_34_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) displays, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Note that a label now displays the number of connections and the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. If you now return to connect mode and disconnect the two controls, when you return to browse mode, the label's content should be updated and there should be no connections."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> die bestaat uit een set <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> objecten."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  id: ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op nadat de huidige webonderdelen verbindingen op een pagina niet alleen zijn verbonden, maar ook begonnen met het actief delen van gegevens tussen de consumer- en providertypen besturingselementen die zijn betrokken bij elke verbinding."
  remarks: "Deze gebeurtenis plaatsvindt in de levenscyclus van verbindingen nadat een pagina het laadproces is voltooid. Dit gebeurt ook na de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>gebeurtenis betekent alleen dat dit de <xref:System.Web.UI.WebControls.WebParts.WebPart>of de verbinding van serverbesturingselementen die zijn betrokken bij een specifieke verbinding hebt gemaakt.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> In geval wanneer er meerdere verbindingen op een pagina, de methode ConnectionsActivated geeft aan dat alle geldige webonderdelen-verbindingen op een pagina nu actief en delen van gegevens. Weten dat alle verbindingen actief zijn, kunnen ontwikkelaars uitvoeren een willekeurig aantal taken, zoals het verwittigen van gebruikers van de status van alle verbindingen verwittigen consumer-besturingselementen om te verwerken en gegevens van hun providers worden weergegeven, enzovoort.       Deze gebeurtenis is gekoppeld aan de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>methode, waarmee de gebeurtenis zich voordoet en kan ontwikkelaars aangepaste voor de gebeurtenis-handlers te maken.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>       Pagina ontwikkelaars kunnen maken die een aangepaste handler voor de gebeurtenis door toe te voegen de `OnConnectionsActivated` kenmerk de `<asp:webpartmanager>` -element in de pagina en de naam van een aangepaste methode vervolgens toe te wijzen aan het kenmerk."
  syntax:
    content: public event EventHandler ConnectionsActivated;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  id: ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op tijdens het proces van het tot stand gebrachte webonderdelen verbindingen op een webpagina te activeren."
  remarks: "In de levenscyclus van verbindingen deze gebeurtenis treedt op als een pagina het laadproces vlak voordat voltooit de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>methode wordt aangeroepen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Dit wijkt af van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>gebeurtenis, waarbij een bepaalde verbinding tussen <xref:System.Web.UI.WebControls.WebParts.WebPart>of andere serverbesturingselementen.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> De ConnectionsActivating gebeurtenis treedt op wanneer alle mogelijke verbindingen op een pagina verbinding hebt gemaakt en moeten worden geactiveerd.       De gebeurtenis ConnectionsActivating is gekoppeld aan de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>methode, waarmee de gebeurtenis zich voordoet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> Controle-ontwikkelaars die u wilt uitbreiden van het type van de verbindingen die kunnen worden toegevoegd aan een pagina kunnen de beveiligde overschrijven <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>methode en andere typen verbindingen worden geactiveerd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>       Pagina ontwikkelaars kunnen maken die een aangepaste handler voor de gebeurtenis door toe te voegen de `OnConnectionsActivating` kenmerk de `<asp:webpartmanager>` -element in de pagina en de naam van een aangepaste methode vervolgens toe te wijzen aan het kenmerk."
  syntax:
    content: public event EventHandler ConnectionsActivating;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Maakt een verbinding tussen twee <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> Hiermee bepaalt u met behulp van alleen de verwijzingen naar de besturingselementen en hun opgegeven <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> objecten."
  remarks: "Deze overbelasting wordt gebruikt om te verbinden besturingselementen wanneer hun verbindingspunten voldoende compatibel ze verbinding kunnen maken zijn zonder gebruik van een <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>object.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Als deze overbelasting van de methode wordt aangeroepen, wordt gewoon de aanroep naar de andere versie van de methode overbelast is geslaagd, en wordt doorgegeven `null` voor de parameter waarvoor een <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>object.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>       Wanneer u probeert verbinding te maken van twee besturingselementen via een programma, kunt u de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>methode in een voorwaardelijke controle om te bepalen of de besturingselementen kunnen rechtstreeks worden verbonden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>"
  example:
  - "The following code example demonstrates how to use this method to create a connection programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. From that example, you will need the source code for the user control that allows you to change display modes on the page, and the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The code for the Web page that hosts the two controls follows. The page uses `Register` directives at the top to declare the user control and the custom controls. The custom controls are then referenced declaratively within an `<asp:webpartzone>` element. The code that handles the `Button1_Click` method creates a connection between the controls by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/csharp/4892fea4-8419-4966-aca7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/visualbasic/4892fea4-8419-4966-aca7-_1.aspx)]  \n  \n After you load the page in a browser, click the **Connect WebPart Controls** button to form the connection. You can then enter some data in the text box, and click the **Enter 5-digit ZIP Code** button to demonstrate that the controls are connected, and that data entered in the first control is updated in the second."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement met de rol van ontlenen gegevens naar een ander besturingselement verbonden."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Een methode die als een callback-methode voor de verbinding fungeert. Als ze zijn geïmplementeerd in de besturingselement-set van webonderdelen, dit is een openbare methode in `provider` die is gemarkeerd met een <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> metagegevenskenmerk."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement met de rol van het ontvangen van gegevens van `provider`, en verwerken van of deze wordt weergegeven."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Een methode die is verbonden met `providerConnectionPoint` voor het ontvangen van de gegevens voor de verbinding. Als ze zijn geïmplementeerd in de besturingselement-set van webonderdelen, dit is een openbare methode in `consumer` die is gemarkeerd met een <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> metagegevenskenmerk."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> bevat de verschillende informatie over de provider en de consument die nodig zijn voor een verbinding."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselementverzameling van dynamische verzamelingen is alleen-lezen."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Maakt een verbinding tussen twee <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> Hiermee bepaalt u met behulp van de verwijzingen naar de besturingselementen, hun opgegeven <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> objecten, en een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> object."
  remarks: "Deze overbelasting wordt gebruikt voor het verbinden van besturingselementen wanneer hun verbindingspunten niet compatibel zijn. De incompatibiliteit deze gebeurtenis treedt op wanneer `consumer` implementeert een andere interface dan `provider` als het verbindingspunt. De transformator geconverteerd naar een type dat kan worden geïnterpreteerd door `consumer`."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> die de rol van ontlenen gegevens naar een ander verbonden besturingselement heeft."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Openbare methode in `provider` die is gemarkeerd met een <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> metagegevenskenmerk, en fungeert als een callback-methode voor de verbinding."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> die bijvoorbeeld de functie van het ontvangen van gegevens van `provider` of `transformer`, en verwerken van of deze wordt weergegeven."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Openbare methode in `consumer` die is gemarkeerd met een <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> metagegevenskenmerk, en verbinding maakt met `providerConnectionPoint` voor het ontvangen van de gegevens voor de verbinding."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> waarmee een verbinding tussen twee besturingselementen door te converteren van de gegevens van `provider` naar een indeling die `consumer` kan verwerken."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> bevat de informatie over de provider, de consument en de transformator die nodig zijn voor een verbinding."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verbindingen al zijn geactiveerd <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee wordt de verzameling van alle <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>, server of gebruikersbesturingselementen die zijn opgenomen in <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zones op een webpagina en worden beheerd door de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  remarks: "De eigenschap Controls verwijst niet naar de andere besturingselementen waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>beheren, zoals de verschillende besturingselementen, zone <xref:System.Web.UI.WebControls.WebParts.EditorPart>of <xref:System.Web.UI.WebControls.WebParts.CatalogPart>besturingselementen en andere.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Deze eigenschap wordt gebruikt door de webonderdelen besturingselement set en in de meeste ontwikkeling situaties die is niet bedoeld om te worden aangeroepen vanuit uw code. Om deze reden, hoewel de eigenschap openbaar, is is deze verborgen in IntelliSense. Ontwikkelaars die willen toegang tot de verzameling van <xref:System.Web.UI.WebControls.WebParts.WebPart>of andere serverbesturingselementen die worden beheerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "Een <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> die bevat alle besturingselementen die worden beheerd door de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gebruikt door het besturingselement webonderdelen is ingesteld op een kopie maken van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselement omwille van het besturingselement toe te voegen aan een webpagina."
  remarks: "U kunt de CopyWebPart-methode niet aanroepen rechtstreeks vanuit uw code. Deze methode wordt aangeroepen, intern door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement als onderdeel van het proces van het toevoegen van een nieuwe dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart>of het serverbesturingselement naar een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Een dynamische besturingselement wordt toegevoegd aan een pagina via programmacode of via de webonderdelen-gebruikersinterface (UI), bijvoorbeeld door een gebruiker het toevoegen van een besturingselement van een catalogus van besturingselementen in plaats van een statische besturingselement die rechtstreeks in de opmaak van een pagina is gedeclareerd.      > [!NOTE] > De methode kan worden overschreven in een afgeleide klasse als ontwikkelaars in staat stellen de methode wilt voor het afhandelen van extra controles kopiëren scenario&quot;s. Zie de opmerkingen voor overnemers sectie voor meer informatie.       Wanneer een nieuw dynamische besturingselement wordt toegevoegd, als het een <xref:System.Web.UI.WebControls.WebParts.WebPart>beheer, de CopyWebPart-methode retourneert een nieuw exemplaar van het besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart> Als het besturingselement wordt toegevoegd een ander type besturingselement (zoals een besturingselement, een aangepast besturingselement of een ASP.NET-besturingselement) server, het besturingselement wordt al zijn verpakt met een <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>object door de webonderdelen besturingselement set.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Wanneer de methode CopyWebPart aangetroffen in een <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>dat besturingselement, wordt een nieuw exemplaar van het <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>besturingselement met een nieuw exemplaar van het onderliggende besturingselement binnen deze ingepakt</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Wanneer de methode CopyWebPart een nieuw exemplaar van een besturingselement maakt te retourneren, worden ook de waarden van de eigenschappen worden standaardwaarden hersteld. Houd er rekening mee dat als u wilt behouden van de waarden van de personalizable eigenschappen en hebben ze gekopieerd naar het nieuwe besturingselement exemplaar, moet u aanroepen de <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>methode evenals.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> De laatste stap uitgevoerd door de methode is om aan te roepen CopyWebPart de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>methode om een nieuwe-ID voor het besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>      > [!NOTE] > Omdat de methode verkrijgt een nieuwe ID voor een besturingselement gekopieerd, is niet verstandig op verwijzen naar een dynamische besturingselement die wordt toegevoegd aan een pagina op de oorspronkelijke-ID. U moet in plaats daarvan verwijzen naar het nieuwe exemplaar van het besturingselement dat wordt geretourneerd door de methode."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "De <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselement moet worden gekopieerd."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> worden toegevoegd aan een pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  id: CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Een set van transformatoren opgegeven in het configuratiebestand van een website gemaakt en toegevoegd aan de verzameling van transformatoren waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "De verzameling van transformatoren opgegeven in het configuratiebestand van de website."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retourneert de verzameling van alle besturingselementen die worden beheerd door de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement op een webpagina. Deze klasse kan niet worden overgenomen."
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Een <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> die bestaan uit alle verschillende webonderdelen besturingselementen worden beheerd door de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  id: CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "De set met alle mogelijke weergavemodus voor een toepassing webonderdelen maakt."
  remarks: "Deze methode maakt u de lijst met alle mogelijke weergavemodi, niet alleen de weergavemodus ondersteund op een bepaalde pagina. Zie voor meer informatie over de ondersteunde weergave-modi, de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Standaard worden de webonderdelen toegangsbeheer de volgende reeks maakt weergegeven modi moet worden gebruikt op pagina&quot;s met webonderdelen:- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>ontwikkelaars aangepaste weergave-modi, kunnen maken met of zonder de bijbehorende aangepaste zones die zijn afgeleid van de <xref:System.Web.UI.WebControls.WebParts.WebZone>of <xref:System.Web.UI.WebControls.WebParts.ToolZone>klassen.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Voor het maken van een aangepaste weergave-modus, u moet eigenschappen overnemen van de <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>klasse, en als u wilt uw weergavemodus toevoegen als een ondersteunde modus op een pagina, u moet eigenschappen overnemen van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse en vervang de methode CreateDisplayModes.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       Wanneer u weergavemodus toevoegt met behulp van de <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>methode, moet u deze toevoegen in de volgorde waarin u ze worden weergegeven in alle besturingselementen voor de gebruikersinterface (UI) (zoals een <xref:System.Web.UI.WebControls.ListBox>besturingselement) die beschikbaar stellen aan gebruikers de mogelijke weergavemodus op een pagina.</xref:System.Web.UI.WebControls.ListBox> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>"
  example:
  - "The following code example demonstrates how to use the CreateDisplayModes method.  \n  \n The code example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that hosts the other controls.  \n  \n-   A user control that resides in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone on the Web page, and enables you to enter and display text in a label.  \n  \n-   A source code file that contains two controls. One is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and the other is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to add to the page's default display modes.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the Web page. It contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controls, both user controls, and the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Notice the `Register` directives at the top of the page to reference the user controls and namespace for the compiled controls.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_1.aspx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_1.aspx)]  \n  \n The third part of the example is the user control for entering and displaying text. It uses a <xref:System.Web.UI.WebControls.MultiView> control to create multiple views of the UI. One view appears with the `Button1` button, the other without. Notice that in the overridden `OnPreRender` method, the code checks to see whether the page is currently in the custom display mode and, if so, displays the first view of the user control, which includes the button. If the page is not in the custom display mode, for example if the page is in browse or design mode, the button is hidden.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_2.ascx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_2.ascx)]  \n  \n The fourth part of the example is the source file for the two custom classes. Notice that the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides the CreateDisplayModes method, and that it first calls the base method to add all the default display modes, and then adds the custom display mode. The custom display mode class, `InLineEditDisplayMode`, simply inherits from <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, sets the name of the display mode in the constructor, and overrides a number of the base properties to establish the characteristics of the custom display.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_3.cs)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_3.vb)]  \n  \n To run the code example, load the page in a browser. Notice that the page is currently in browse mode, and no button is visible. Using the **Display Mode** drop-down list control, change the page to **Inline Edit Display** mode, and notice that now the `Button1` button is visible in the lower user control. Add some text, and click the button to update the control. Notice that the page display is returned to browse mode, the text you entered is now displayed, and the button is once again hidden because the page is no longer in the custom display mode."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> die bevat alle weergavemodus die worden ondersteund."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  id: CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee haalt u een unieke waarde om te fungeren als een ID voor een dynamische verbinding."
  remarks: "De methode CreateDynamicConnectionID genereert een GUID-waarde en converteert deze naar een tekenreeks als de unieke ID voor een verbinding. De methode is aangeroepen telkens wanneer die een dynamische verbinding wordt gemaakt."
  syntax:
    content: protected virtual string CreateDynamicConnectionID ();
    parameters: []
    return:
      type: System.String
      description: "Een tekenreeks met een unieke ID voor een verbinding."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  id: CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genereert een unieke ID voor een dynamische <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement."
  remarks: "Wanneer <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen zijn toegevoegd aan een webpagina, ze kunnen statisch (wat betekent dat het besturingselement is gedeclareerd in de paginamarkup) of dynamische (wat betekent dat deze programmatisch worden toegevoegd).</xref:System.Web.UI.WebControls.WebParts.WebPart> Elk scenario waarin het <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement maakt nieuwe dynamische besturingselementen toevoegen aan de pagina wordt aangeroepen met deze methode voor het genereren van een unieke ID.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       De methode is virtuele zodat ontwikkelaars deze overschrijven kunnen als ze een aangepaste implementatie willen van de id te genereren."
  syntax:
    content: protected virtual string CreateDynamicWebPartID (Type webPartType);
    parameters:
    - id: webPartType
      type: System.Type
      description: "De <xref:System.Type>van het besturingselement een ID die wordt gegenereerd.</xref:System.Type>"
    return:
      type: System.String
      description: "Een tekenreeks die de unieke ID voor een besturingselement bevat."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPartType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  id: CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee maakt u een speciale besturingselement dat is ingevoegd in een pagina en weergegeven voor eindgebruikers, bij een poging tot het laden of maken van een dynamische <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement voor een bepaalde reden mislukt."
  remarks: "De methode CreateErrorWebPart wordt aangeroepen wanneer de webonderdelen set pogingen beheren tot laden of maken van een exemplaar van een dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart>of serverbesturingselement en voor een bepaalde reden mislukt.</xref:System.Web.UI.WebControls.WebParts.WebPart> De methode maakt u een <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>object, wijst u een foutbericht weergegeven, en retourneert deze</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> De <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>besturingselement wordt ingevoegd in plaats van het besturingselement dat is mislukt en het foutbericht wordt weergegeven op de pagina.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>       U kunt de CreateErrorWebPart-methode niet aanroepen rechtstreeks vanuit uw code. U kunt echter overnemen van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse en de methode uit te breiden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Zie de opmerkingen voor overnemers sectie voor meer informatie.       Eindgebruikers kunnen werken met een <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>beheren op een pagina veel als ze een normale <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Als u wilt verwijderen van het foutbericht, ze het besturingselement kunnen sluiten door te klikken op de sluiten term, waarna het besturingselement wordt toegevoegd aan een <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>object, zoals een ander besturingselement gesloten.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Als een eindgebruiker verwijdert een <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>besturingselement van het serverbesturingselement dat kan niet worden geladen, worden ook verwijderd uit de pagina.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);
    parameters:
    - id: originalID
      type: System.String
      description: "Een tekenreeks die de id van het besturingselement mislukken. Als een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> betrokken is in de fout is de ID de ID van de server onderliggende besturingselement."
    - id: originalTypeName
      type: System.String
      description: "Een tekenreeks die de naam van de <xref:System.Type>van het besturingselement is mislukt.</xref:System.Type> Als een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> betrokken is in de fout de typenaam is het type van de server onderliggend besturingselement."
    - id: originalPath
      type: System.String
      description: "Een tekenreeks zijn met het pad naar een besturingselement, als een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> die een onderliggend element bevat gebruikersbesturingselement betrokken is bij de fout."
    - id: genericWebPartID
      type: System.String
      description: "Een tekenreeks die wordt geretourneerd van de ID van een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>, als dit type besturingselement is betrokken bij de fout te laden of maken van een besturingselement."
    - id: errorMessage
      type: System.String
      description: "Een tekenreeks zijn met het bericht dat wordt weergegeven op de pagina."
    return:
      type: System.Web.UI.WebControls.WebParts.ErrorWebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.ErrorWebPart&quot;> </xref> die wordt ingevoegd in een pagina in plaats van een besturingselement dat kan niet worden geladen of gemaakt."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  id: CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retourneert een object personalisatie personalisatiegegevens van een gebruiker voor de huidige webpagina bevatten."
  remarks: "De methode CreatePersonalization retourneert een object bevat en beheren van de gebruiker persoonlijke instellingen voor de huidige pagina. De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement beheert dit object.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> personalisatiegegevens van een gebruiker bevat."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  id: CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Verpakt een serverbesturingselement dat is niet een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> beheren met een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> object, zodat het besturingselement kunt webonderdelen-functionaliteit hebben."
  remarks: "De methode CreateWebPart is het belangrijkste mechanisme voor het inschakelen van serverbesturingselementen die niet <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen op dezelfde functionaliteit als een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement, en dus volledig deelnemen aan webonderdelen toepassingen.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Vouw het nummer van serverbesturingselementen die ze in een toepassing webonderdelen gebruiken kunnen, vrijwel elk type serverbesturingselement--ASP.NET standaardbesturingselementen gebruikersbesturingselementen en aangepaste besturingselementen--kunnen worden gebruikt omdat via deze methode gebruikt, ontwikkelaars aanzienlijk.       De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement gebruikt ook deze methode in twee andere scenario&quot;s om te laten teruglopen serverbesturingselementen met een <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>object.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Wanneer gebruikers serverbesturingselementen toevoegen aan een pagina met behulp van de <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>beheren, als het geïmporteerde besturingselement niet is een <xref:System.Web.UI.WebControls.WebParts.WebPart>beheer, de CreateWebPart-methode wordt aangeroepen.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Ook wanneer serverbesturingselementen zijn gedefinieerd in de indeling voor persistentie binnen een <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone op een webpagina, de methode wordt aangeroepen voor besturingselementen die niet zijn CreateWebPart <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Wanneer u een serverbesturingselement via een programma aan een zone toevoegt, wordt een typische aanpak is het gebruik van de methode CreateWebPart inpakken van het besturingselement met een <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>object, en vervolgens roept de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>methode voor het toevoegen van het besturingselement aan de verzameling van alle <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen op de pagina waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates use of the CreateWebPart method. In the `Button2_Click method`, the CreateWebPart method is called to wrap a <xref:System.Web.UI.WebControls.Calendar> control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object before adding it to the zone.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6552ec5d-43c0-4c29-a8a1-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6552ec5d-43c0-4c29-a8a1-_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Een serverbesturingselement dat is niet een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> die terugloopt <code> control </code> en schakelt u deze fungeert als een echte <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  id: DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van een aangepaste waarschuwingsbericht weergegeven aan eindgebruikers wanneer ze een besturingselement verwijderen."
  remarks: "Wanneer een gebruiker verwijdert een <xref:System.Web.UI.WebControls.WebParts.WebPart>beheren, wordt normaal gesproken een waarschuwingsbericht weergegeven.</xref:System.Web.UI.WebControls.WebParts.WebPart> Het waarschuwt de gebruiker dat wanneer dit exemplaar van een besturingselement wordt verwijderd, de verwijdering definitief is. De ontwikkelaar van de pagina mogelijk gebruikers voorzien van een manier om een nieuw exemplaar van het besturingselement toevoegt aan de pagina (zoals via een catalogus met <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, of via een programmatische manier), maar het huidige exemplaar van een besturingselement dat wordt verwijderd, wordt definitief verwijderd.</xref:System.Web.UI.WebControls.WebParts.WebPart> Het dialoogvenster dat de waarschuwing verschijnt bevat een knop voor de gebruiker om de verwijdering te annuleren indien gewenst.       De eigenschap DeleteWarning kan ontwikkelaars het waarschuwingsbericht staan aangegeven die wordt weergegeven voor de gebruiker instellen.       Als een ontwikkelaar een lege tekenreeks wijst (&quot;&quot;) waarde met deze eigenschap geen waarschuwingsvenster wordt weergegeven wanneer een gebruiker verwijdert een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > DeleteWarning voor de eigenschap wordt niet weergegeven in het geval van statische <xref:System.Web.UI.WebControls.WebParts.WebPart>en server controlemiddelen.</xref:System.Web.UI.WebControls.WebParts.WebPart> Statische besturingselementen zijn serverbesturingselementen die zijn gedeclareerd binnen een <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone in de opmaak van een webpagina.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Worden omdat deze besturingselementen statisch zijn, ze kunnen niet verwijderd, waardoor de waarschuwing verwijderen nooit in dat geval wordt weergegeven. Statische besturingselementen kunnen worden gesloten door een gebruiker, maar een gesloten besturingselement is toegevoegd aan de Paginacatalogus, van waaruit deze kan worden toegevoegd terug naar de pagina door een gebruiker, terwijl een verwijderde besturingselement nooit kan worden hersteld."
  example:
  - "The following code example demonstrates the use of the DeleteWarning property declaratively and programmatically.  \n  \n There are four parts to the code example:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_1.cs)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_1.vb)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control declared in the zone, so that a user can add it to the page at run time. Note that only dynamic controls (controls that are added to a page programmatically or from a catalog like this one) can be deleted from a page. Static controls (controls that are declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in the markup of a page) can be closed, but never deleted. The `<asp:webpartmanager>` element declares a custom value for the DeleteWarning property by using the `DeleteWarning` attribute. The `Button1_Click` method assigns another custom value to the DeleteWarning property.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_2.aspx)]  \n  \n After you load the page in a browser, you need to add the <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page. Using the **Display Mode** drop-down list control, select catalog mode. When the catalog appears, select the check box next to the custom control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. Now that the control is visible, you can delete it. Using the **Display Mode** control again, switch the page into design mode (you cannot delete controls while the page is in browse mode). Click the verbs menu (the arrow symbol) in the header of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and select **Delete**. The warning that you set on the `DeleteWarning` attribute appears. Click **Cancel**. Now click the button labeled **Change Delete Warning**, which changes the property value programmatically. From the verbs menu on the control, select **Delete** again, and notice that this time the other warning message appears."
  syntax:
    content: public virtual string DeleteWarning { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks met de tekst van het waarschuwingsbericht staan aangegeven. De standaardwaarde is een gelokaliseerde waarschuwingsbericht."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Verwijdert permanent een dynamische exemplaar van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement van een webpagina."
  remarks: "De methode DeleteWebPart permanent worden verwijderd van het besturingselement dat wordt vertegenwoordigd door de `webPart` parameter van een pagina. In tegenstelling tot een gesloten besturingselement die wordt toegevoegd aan de <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>te beheren en kunnen worden toegevoegd terug naar de pagina een exemplaar van de verwijderde besturingselement nooit terug naar de pagina kan worden toegevoegd.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      > [!NOTE] > Die is geïmplementeerd in het besturingselement webonderdelen is ingesteld, de mogelijkheid voor gebruikers verwijderen van een dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement is afhankelijk van de gebruiker en het bereik van de gebruikerspersonalisatie waarin het besturingselement is toegevoegd aan een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> Worden als het besturingselement wordt toegevoegd wanneer de pagina bevindt zich in gedeelde bereik (door een gebruiker met machtigingen), klikt u vervolgens het besturingselement kan niet verwijderd van afzonderlijke gebruikers als de pagina in het bereik van de gebruiker.       Alleen dynamische besturingselementen kunnen worden verwijderd. Dynamische besturingselementen zijn toegevoegd aan een pagina via programmacode of door gebruikers besturingselementen toe te voegen uit een catalogus. Statische besturingselementen zijn toegevoegd aan een pagina verklarend in de indeling met aantekeningen of persistentie. Omdat de declaratieve codes permanent aanwezig in de opmaak zijn, statische besturingselementen kunnen nooit worden verwijderd, maar ze kunnen worden gesloten en heropend."
  example:
  - "The following code example demonstrates how to use the DeleteWebPart method. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the control is added programmatically, it is a dynamic control, and therefore it can be deleted. When a user clicks the **Delete Calendar** button, the code ensures that the control exists, and then deletes it by calling the DeleteWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/116fed0f-0c12-4700-9cde-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/116fed0f-0c12-4700-9cde-_1.aspx)]"
  syntax:
    content: public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het serverbesturingselement moet worden verwijderd."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  id: DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee geeft u de weergavemodus gebruikt voor het wijzigen van de indeling van webpagina&quot;s die webonderdelen besturingselementen bevatten. Dit veld is alleen-lezen."
  remarks: "Het veld DesignDisplayMode verwijst naar een aangepaste <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>-object dat is gemaakt en is opgenomen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Omdat dit een statisch object, kunt u verwijzen naar deze rechtstreeks via de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse zonder een exemplaar van het besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Wanneer een pagina met webonderdelen eerste laadt besturingselementen, is in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(modus browse) standaard.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Wanneer gebruikers wijzigen van de indeling van de pagina wilt met het verplaatsen van besturingselementen aan verschillende zones of binnen de huidige zones, moeten ze eerst de pagina overschakelen naar DesignDisplayMode (ontwerpmodus). De gebruikersinterface (UI) voor de verschillende zones wordt weergegeven in de ontwerpmodus en gebruikers kunnen vervolgens sleept u besturingselementen als de opmaak wilt wijzigen."
  example:
  - "The following code example demonstrates how to work with the DesignDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to DesignDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_6_1.aspx)]\n [!code-cs[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_6_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee verwijdert u een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of server beheren die worden gesloten of verwijderd uit deze deel uitmaakt van verbindingen."
  remarks: "De methode DisconnectWebPart wordt intern aangeroepen door het besturingselement webonderdelen is ingesteld wanneer een besturingselement wordt op een pagina is gesloten of verwijderd van een pagina. In een dergelijk scenario de methode aangeroepen om het besturingselement verwijderen uit alle verbindingen waarbij het als een consument of de provider is betrokken. Als het besturingselement van een verbinding wordt verwijderd, wordt deze methode ook roept de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>methode om te beëindigen alle verbindingen waarbij `webPart` was betrokken.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       Als de DisconnectWebPart-methode wordt aangeroepen, wordt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Normaal gesproken deze gebeurtenis kan worden geannuleerd, maar in twee gevallen deze kan niet worden geannuleerd. Een geval treedt op tijdens aanvragen naar de pagina wanneer de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>methode wordt aangeroepen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Als er een conflict optreedt tussen de bestaande verbindingen, de DisconnectWebPart-methode wordt aangeroepen om te sluiten van een van de conflicterende verbindingen en in dit geval de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>gebeurtenis kan niet worden geannuleerd, omdat het conflict omgezet worden moet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>       Het andere geval treedt op wanneer een <xref:System.Web.UI.WebControls.WebParts.WebPart>of serverbesturingselement die momenteel de verbinding is gesloten of verwijderd.</xref:System.Web.UI.WebControls.WebParts.WebPart> In dit geval vanwege het besturingselement wordt verwijderd uit de pagina, de verbinding moet worden beëindigd, evenals daarom standaard het is niet mogelijk om te annuleren de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>gebeurtenis te onderbreken van een verbinding wilt beëindigen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Zie voor meer informatie de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  example:
  - "The following code example demonstrates how to use the DisconnectWebPart method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls. If you close one of the controls while the page is in browse mode and the controls are connected, an override of the DisconnectWebPart method disconnects the closed control, ends the connection, and displays a message.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is the file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected, and a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n In the source code, notice the inherited control `MyWebPartManager` that overrides the DisconnectWebPart method. This method checks each connection in a page to see whether the control being closed participates in the connection and, if so, calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end the connection. This is identical to the base implementation of the method in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. The overridden method then customizes the base implementation by writing a message to the page.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control, and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, while the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_2.aspx)]  \n  \n After you load the page, click the **Connect** button to connect the controls. Then click the verbs menu in one of the controls (the downward arrow in the header of the control), and select **Close** from the verbs menu. When you try to close the control, the overridden method is called, the connection is ended, and the message is written to the page. If you want to reset the page to restore the closed control and experiment with other options, click the **Reset User State** link to remove personalization data and restore the page's original state."
  syntax:
    content: protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement dat moet worden verbroken."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  id: DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Voert het proces van het verbreken van de besturingselementen die zijn aangesloten op een webpagina."
  remarks: "De methode DisconnectWebParts wordt het volledige proces voor het beëindigen van een verbinding tussen <xref:System.Web.UI.WebControls.WebParts.WebPart>of serverbesturingselementen, wanneer u gebruikmaakt van de `connection` parameter.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Deze methode wordt gebruikt om besturingselementen verbreken wanneer u een `<asp:connectionszone>` -element in een webpagina te bieden een gebruikersinterface (UI) voor het beheren van verbindingen. Als een pagina in de weergavemodus verbinding (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>), en er bestaat een huidige verbinding, gebruikers kunnen klikken op een knop waarmee de methode DisconnectWebParts om te beëindigen van de verbinding wordt aangeroepen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>       U kunt ook de methode DisconnectWebParts rechtstreeks vanuit uw code aanroepen als u wilt verbreken besturingselementen via een programma en om toe te voegen zonder een `<asp:connectionszone>` element aan een pagina."
  example:
  - "The following code example demonstrates how to use the DisconnectWebParts method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is a file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, and the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_2.aspx)]  \n  \n After you load the page, you can click the **Connect** button to connect the controls. If you enter some text in the text box control, and then click the **Enter** button, the text will be displayed in the connected control (it would not be displayed if the controls were disconnected). If you click the **Disconnect** button, the controls will be disconnected. You can verify the connection status of the controls by using the **Display Mode** drop-down list control to switch the page into **Connect** mode. After doing that, click the verbs menu (represented by an arrow) in the title bar of one of the controls, and select the **Connect** item. The connection UI is displayed; it is available because there is an `<asp:connectionszone>` element declared in the page. You can also connect and disconnect the controls from this UI."
  syntax:
    content: public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);
    parameters:
    - id: connection
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> die staat voor de verbinding tussen de serverbesturingselementen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>connection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connection</code>is niet opgenomen in een <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> of <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*>.  \n  \n \\- or -  \n  \n <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  id: DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van de actieve weergavemodus voor een webpagina waarop webonderdelen besturingselementen bevat."
  remarks: "Een pagina met webonderdelen besturingselementen is altijd in een van de verschillende modi voor weergave. Zie voor meer informatie over de weergavemodi [webonderdelen pagina weergegeven modi](~/add/includes/ajax-current-ext-md.md).       De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse maakt de weergavemodus voor webpagina&quot;s.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Met behulp van de base <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>klasse, de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement maakt verschillende objecten van de standaardweergave modus die kunnen worden gebruikt op pagina&quot;s waarop webonderdelen besturingselementen bevatten.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Deze standaard weergavemodus worden beschreven in de <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>overzicht van de klasse.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement beheert ook de weergavemodus voor pagina&quot;s die gebruikmaken van besturingselementen voor webonderdelen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Met de eigenschap DisplayMode de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controle houdt een verwijzing naar de huidige weergavemodus op een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> U kunt ook de eigenschap DisplayMode gebruiken om een pagina naar verschillende modi. Zie voor een voorbeeld van het wijzigen van de weergavemodus op een pagina die gebruikmaakt van besturingselementen voor webonderdelen [Walkthrough: weergegeven modi wijzigen op een pagina met webonderdelen](~/add/includes/ajax-current-ext-md.md).       Als onderdeel van het beheer van de weergavemodus de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement biedt ook gebeurtenissen en gebeurtenis-handlers met betrekking tot de weergavemodus, zoals de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>methode en de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Deze methoden bieden een mechanisme voor het gedrag van een pagina aanpassen en zelfs voor het toevoegen van een aangepaste weergave-modus."
  example:
  - "The following code example demonstrates programmatic use of the DisplayMode property. After loading the page in a browser, you can use the buttons near the bottom of the page to switch display modes. The page is in browse mode by default when it loads. If you switch to design mode, you can drag the server controls from one zone to another, or arrange two controls within one zone. If you switch to edit mode, you can click the verbs menu in the header of either of the server controls, select **Edit**, and edit the control using the provided editing user interface (UI).  \n  \n> [!NOTE]\n>  Switching among display modes in a Web Parts application is very common, and you might want to provide a consistent, reusable way to do this on all your pages that contain Web Parts controls. For an example of a user control that changes display modes and that can be reused on many pages, see [Walkthrough: Changing Display Modes on a Web Parts Page](../Topic/Walkthrough:%20Changing%20Display%20Modes%20on%20a%20Web%20Parts%20Page.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_632_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_632_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> die bepaalt de weergavemodus van een pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> object wordt toegewezen aan de eigenschap <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is not one of the supported display modes.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is disabled."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  id: DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op nadat de huidige modus weergegeven op een webonderdelen pagina is gewijzigd."
  remarks: "Weergavemodus zijn een integraal onderdeel van webonderdelen toepassingen. Wanneer gebruikers naar een andere weergavemodus op een webpagina overschakelen, voert de pagina vaak op een heel andere uiterlijk, afhankelijk van het doel van de nieuwe weergavemodus. Nadat een weergavemodus is gewijzigd, kunt u wilt bepaalde wijzigingen aanbrengt in de gebruikersinterface (UI), zoals verbergen of weergeven van bepaalde besturingselementen voor het wijzigen van het uiterlijk van de geselecteerde UI-elementen, enzovoort.      > [!NOTE] > Zie voor meer informatie over weergavemodus [webonderdelen pagina weergegeven modi](~/add/includes/ajax-current-ext-md.md). Zie voor meer informatie over het gebruiken van gebeurtenissen [How to: gebeurtenissen gebruiken in een webtoepassing formulieren](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  id: DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op nadat een gebruiker op een term op een webpagina die het proces van het wijzigen van een andere weergavemodus begint."
  remarks: "Weergavemodus zijn een integraal onderdeel van webonderdelen toepassingen. Wanneer gebruikers naar een andere weergavemodus op een webpagina overschakelen, voert de pagina vaak op een heel andere uiterlijk, afhankelijk van het doel van de nieuwe weergavemodus. Nadat een gebruiker het proces begint van het wijzigen van een nieuwe weergavemodus door te klikken op een term, wilt u mogelijk bepaalde wijzigingen aanbrengt in de gebruikersinterface (UI) met behulp van de <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>eigenschap om te bepalen wat de nieuwe weergavemodus zal zijn, en vervolgens dienovereenkomstig wijzigen verschillende UI-elementen.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> Een handige manier om dit te doen is voor het onderdrukken van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>methode voor het aanpassen van de gebruikersinterface.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>      > [!NOTE] > Zie voor meer informatie over weergavemodus [webonderdelen pagina weergegeven modi](~/add/includes/ajax-current-ext-md.md). Zie voor meer informatie over het gebruiken van gebeurtenissen [How to: gebeurtenissen gebruiken in een webtoepassing formulieren](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  id: DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee wordt een verzameling alleen-lezen van alle weergavemodus die zijn gekoppeld aan een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  remarks: "De DisplayModes eigenschap verwijzingen alle gekoppelde weergavemodus, in tegenstelling met de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-eigenschap die verwijst naar de weergavemodi die beschikbaar op de huidige pagina zijn (ondersteund).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Twee van de opgegeven weergavemodus, bladeren en het ontwerp, worden altijd ondersteund op een pagina. De andere drie weergavemodus, bewerken, catalogus en verbindingen, worden alleen ondersteund als een pagina het overeenkomende type zone die nodig zijn voor een bepaalde weergavemodus is werken. Bijvoorbeeld, als u pagina behoort niet tot een <xref:System.Web.UI.WebControls.WebParts.EditorZone>zone, de weergavemodus bewerken wordt weergegeven in de verzameling waarnaar wordt verwezen door de eigenschap DisplayModes, maar niet weergegeven in de verzameling waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example shows the programmatic use of the DisplayModes property. The code uses this property to populate the list with all the display modes available in the Web Parts control set, even those that are not supported on the current page. In this case, the catalog and connect display modes are not supported, because their corresponding required zones are not on the page.  \n  \n The other three display modes--browse, design, and edit--are supported on the page. Edit mode is supported because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone, while browse and design modes are always supported.  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control. Note that if you select **Catalog** or **Connect** in the drop-down list, an error page is generated.  \n  \n [!code-cs[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_572_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_572_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> die de set bevat <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objecten gekoppeld aan de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  id: DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee haalt u de verzameling van alle dynamische verbindingen die momenteel aanwezig zijn op een webpagina."
  remarks: "Dynamische verbindingen zijn verbindingen die programmatisch niet statisch zijn gemaakt. Statische verbindingen worden gemaakt door ze in de opmaak van een pagina webformulieren declareren. Dynamische verbindingen worden gevormd via programmacode, of door een gebruiker verbinding met de gebruikersinterface (UI) van de verbinding is gemaakt.       De verzameling DynamicConnections, hoewel het kenmerk alleen-lezen is en u de inhoud niet wijzigen, programmatisch toegang biedt tot elk object dynamische verbinding.      > [!NOTE] > Om uit te voeren van veelvoorkomende bewerkingen zoals verbinding maken of verbreken <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, moet u de openbare methoden op de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse, zoals <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>en <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, in plaats van het rechtstreeks wijzigen connection-objecten in de verzameling DynamicConnections.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> die bevat verwijzingen naar alle dynamische verbindingen op een pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  id: EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee geeft u de weergavemodus waarin eindgebruikers kunt bewerken en serverbesturingselementen wijzigen. Dit veld is alleen-lezen."
  remarks: "Het veld EditDisplayMode verwijst naar een aangepaste <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>-object dat is gemaakt en is opgenomen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Omdat dit een statisch object, kunt u verwijzen naar deze rechtstreeks via de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse zonder een exemplaar van het besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Wanneer een pagina met webonderdelen eerste laadt besturingselementen, is in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(modus browse) standaard.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Wanneer gebruikers wilt bewerken of een serverbesturingselement wijzigen, moeten ze eerst de pagina overschakelen naar EditDisplayMode (bewerkingsmodus). Ten tweede moet een specifieke serverbesturingselement bewerken door te klikken op de term bewerken in het menu termen in de header van het besturingselement selecteren. Nadat het besturingselement in de bewerkingsmodus is, verschijnt de bewerken gebruikersinterface (UI) voor het bewerken van het geselecteerde besturingselement.       Om in te schakelen in de bewerkingsmodus op een pagina, de pagina moet ten minste één bevatten <xref:System.Web.UI.WebControls.WebParts.EditorZone>zone die een of meer van de opgegeven bewerking bevat besturingselementen, zoals de <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>besturingselement of aangepaste besturingselementen.</xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example demonstrates how to work with the EditDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and edit. To support editing, an `<asp:EditorZone>` element is in the page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to EditDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_7_1.aspx)]\n [!code-vb[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_7_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page is hidden. Use the drop-down list control to switch the page to edit mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. Click the **Edit** verb in the verbs menu on one of the controls, to enable editing of that specific control."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van een waarde die bepaalt of clientscripts is ingeschakeld op de pagina met een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  remarks: "De eigenschap EnableClientScript biedt een manier voor ontwikkelaars clientscripts uitschakelen. U kunt client scripting om beveiligingsredenen uit te schakelen of om ervoor te zorgen dat alle gebruikers van een pagina hebben een vergelijkbare gebruikerservaring, zelfs als ze verschillende browsers gebruiken.       U kunt uitschakelen clientscripts door toe te voegen een `EnableClientScript` kenmerk de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>element op een webpagina, zoals in de volgende coderegel declaratieve: `<asp:webpartmanager id=&quot;manager&quot; runat=&quot;server&quot;` `EnableClientScript=&quot;false&quot; />` ook ontwikkelaars deze eigenschap kunnen elimineren door overgenomen van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse en het instellen van de standaardwaarde van waarde naar `false`.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>        </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       De webonderdelen besturingselement set maakt gebruik van client scripting bieden sommige van de client-gebruikersinterface (UI) en functies voor het aanpassen. Als u client uitschakelt scripts, webonderdelen besturingselementen nog steeds werken maar sommige functies zijn uitgeschakeld. De mogelijkheid om te sleept besturingselementen in verschillende zones is uitgeschakeld, samen met de mogelijkheid om bewerkingen in een menu vervolgkeuzelijst termen in de titelbalk van een besturingselement (de bewerkingen zijn in plaats daarvan worden weergegeven als koppelingen in de titelbalk van het besturingselement) weer te geven."
  syntax:
    content: public virtual bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "Een Booleaanse waarde waarmee wordt aangegeven of clientscript kan worden uitgevoerd op de pagina. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Haalt een waarde die aangeeft dat het gebruik van thema&quot;s is ingeschakeld op een webpagina."
  remarks: "De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement overschrijft de base <xref:System.Web.UI.Control.EnableTheming%2A>om ervoor te zorgen dat altijd een waarde van wordt de eigenschap `true`.</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Dit gebeurt omdat de webonderdelen besturingselement set vereist het gebruik van thema&quot;s voor het weergeven van de webonderdelen besturingselementen die onderliggende besturingselementen van zijn de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>beheer- en die de gebruikersinterface (UI) van een webpagina vormen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Bijvoorbeeld: thema&quot;s worden gebruikt voor het weergeven van de verschillende zones en besturingselementen deel uit van de besturingselementen die zich in zones bevinden, met inbegrip van de verschillende typen (besturingselementen die worden overgenomen van de <xref:System.Web.UI.WebControls.WebParts.Part>klasse), gebruikersbesturingselementen, ASP.NET-serverbesturingselementen en aangepaste besturingselementen.</xref:System.Web.UI.WebControls.WebParts.Part>       Hoewel de overschreven eigenschap EnableTheming is geïmplementeerd als een eigenschap lezen/schrijven in overeenstemming met de bijbehorende eigenschap basis, kunt u de eigenschap niet instellen omdat standaard moet er altijd een waarde van geretourneerd `true`. Als u probeert te stellen van de eigenschap een <xref:System.NotSupportedException>uitzondering.</xref:System.NotSupportedException>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "Een Boolean die aangeeft of thema&quot;s zijn ingeschakeld. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>in alle gevallen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Een poging gedaan om in te stellen van de waarde van eigenschap."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  id: EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee voltooit u de verbinding te maken met een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement naar een ander besturingselement."
  remarks: "De methode EndWebPartConnecting klaar is met het proces van het verbinden van een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement naar een ander besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart> Het is het equivalent aan de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>       De methode EndWebPartConnecting zorgt ervoor dat het personalisatie-object waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>eigenschap kan worden gewijzigd, dat is nodig omdat vormen een verbinding zelf een soort personalisatie is.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> De methode zorgt er daarna die de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>object is geen `null`, en ten slotte roept de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartConnecting ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het besturingselement waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>eigenschap is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  id: EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Het proces voor het bewerken van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement."
  remarks: "De methode EndWebPartEditing klaar is met het proces voor het bewerken van een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart> Het is het equivalent aan de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>       De methode EndWebPartEditing zorgt ervoor dat het personalisatie-object waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>eigenschap kan worden gewijzigd, die nodig is omdat een besturingselement bewerken is een proces dat moet worden gewijzigd voor personalisatie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> De methode zorgt er daarna die de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>object is geen `null`, zodat de momenteel geselecteerde <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement kunt wijzigen, en ten slotte roept de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartEditing ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het besturingselement waarnaar wordt verwezen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>eigenschap is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  id: ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van de tekst van een waarschuwingsbericht dat wordt weergegeven wanneer een gebruiker probeert te exporteren van de van gevoelige statusgegevens uit een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement."
  remarks: "Wanneer een gebruiker probeert te exporteren van de van gevoelige statusgegevens uit een <xref:System.Web.UI.WebControls.WebParts.WebPart>bepalen, als een van de geëxporteerde gegevens afkomstig zijn van een lid dat is gemarkeerd als gevoelig zijn in de broncode, een waarschuwing wordt weergegeven aan de gebruiker in het bericht om aan te geven dat gevoelige gegevens worden geëxporteerd en het geven van een kans om te annuleren van de export.</xref:System.Web.UI.WebControls.WebParts.WebPart> Ontwikkelaars kunnen een specifiek onderdeel gegevens markeren als gevoelige door in te stellen de `isSensitive` parameter van de `[Personalizable]` kenmerk `true` op het lid. Zie voor meer informatie over dit kenmerk en de parameter de <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>klasse.</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      > [!IMPORTANT] > Wanneer u de functie exporteren van webonderdelen gebruikt, kan mogelijk gevoelige gegevens voor onbevoegde gebruikers worden geëxporteerd. Zie voor meer informatie over het beveiligen tegen deze bedreiging [webpagina delen beveiligen](~/add/includes/ajax-current-ext-md.md).       Het standaardbericht wordt weergegeven wanneer gebruikers proberen om te exporteren. Een waarde aan de eigenschap ExportSensitiveDataWarning toewijst, kunt u echter een aangepaste waarschuwingsbericht opgeven."
  example:
  - "The following code example demonstrates the declarative use of the ExportSensitiveDataWarning property.  \n  \n The code for the following Web page uses a standard <xref:System.Web.UI.WebControls.BulletedList> control and places it in a zone. The control will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control at run time, which enables it to act as a true <xref:System.Web.UI.WebControls.WebParts.WebPart> control. To make the control exportable, an `ExportMode` attribute is added to the `<asp:bulletedlist>` element, and the attribute value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, which means that both sensitive and non-sensitive data can be exported. Note also that in the `<asp:webpartmanager>` element, the `ExportSensitiveDataWarning` attribute is assigned a custom value.  \n  \n Note that for the code example to work, there is a setting you must add in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n [!code-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1033_1.aspx)]\n [!code-cs[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1033_1.aspx)]  \n  \n After you load the page in a browser, click the verbs menu (represented by a downward arrow) in the title bar of the control that contains the links. In the verbs menu, select **Export**, and notice that a message box appears with the custom warning. If you want to continue with the export, click **OK**, which will allow you to save a local copy of an XML description file with all the data about the control."
  syntax:
    content: public virtual string ExportSensitiveDataWarning { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks met de waarschuwing. Het standaardbericht is een cultuur-specifieke-waarde die is opgegeven door het .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  id: ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Maakt een XML-beschrijving-bestand met de status en de eigenschap gegevens voor een serverbesturingselement."
  remarks: "De methode ExportWebPart ophaalprotocol verschillende status en de eigenschap data van `webPart` in een XML-bestand. De gegevens omvatten informatie over het besturingselement zelf, inclusief de assembly, statusgegevens en eigenschapsgegevens. De gebruiker die de export initieert slaat de XML-bestand naar de schijf op de lokale computer of het netwerk. Andere gebruikers kunnen vervolgens beschrijvingsbestand voor het importeren naar een andere pagina of de website en de status en de eigenschap data van toepassing op een ander exemplaar van `webPart`. Dit biedt een snelle en gemakkelijke mechanisme voor gebruikers om te delen en hergebruiken van hun instellingen op de serverbesturingselementen en het biedt ook ontwikkelaars een manier om te bepalen van het uiterlijk en gedrag van besturingselementen geëxporteerd en geïmporteerd.       Eigenschappen voor `webPart` worden standaard niet geëxporteerd. Als u wilt exporteren van een eigenschap inschakelen, moet u markeren met de `[Personalizable]` kenmerk in de broncode. U kunt eventueel ook een exporteerbaar eigenschap gevoelige gegevens bevat door in te stellen markeren de `isSensitive` parameter van de `[Personalizable]` kenmerk `true`. Standaard `isSensitive` is `false`. Ontwikkelaars kunnen de parameter ingesteld op `true` om aan te geven dat de gegevens vertrouwelijk zijn.       Om in te schakelen `webPart` om te worden geëxporteerd, een ontwikkelaar stelt de <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>op een waarde van de eigenschap <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>(waaronder alle personalizable en gevoelige eigenschappen), of <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, die alles behalve vertrouwelijke eigenschappen exporteert.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>      > [!IMPORTANT] > Gebruikers exporteren van gegevens van besturingselementen en gegevens te importeren in andere besturingselementen toe sommige beveiligingsrisico inhoudt. Ontwikkelaars moeten gebruikmaken van de aanpak die hierboven worden beschreven om gevoelige gegevens te beveiligen en als ze het risico gegevens helemaal te voorkomen willen, moeten deze export niet inschakelen op `webPart` helemaal. Zie voor meer informatie over de beveiliging van webonderdelen [webpagina delen beveiligen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het besturingselement waaruit gegevens worden geëxporteerd."
    - id: writer
      type: System.Xml.XmlWriter
      description: "Een <xref:System.Xml.XmlWriter>die de geëxporteerde gegevens van schrijft `webPart` beschrijving XML-bestand.</xref:System.Xml.XmlWriter>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the collection of controls referenced in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode*> property of <code>webPart</code> is set to a value of <xref href=\"System.Web.UI.WebControls.WebParts.WebPartExportMode\"></xref>, which means that export is disabled for <code>webPart</code>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Overschreven om te voorkomen dat focus ooit wordt ingesteld op de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> regelen, omdat er geen gebruikersinterface (UI)."
  remarks: "De methode Focus overschrijft de base <xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>methode, en er een uitzondering gegenereerd als een aanroeper de methode aanroept.</xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName> Omdat de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement heeft geen gebruikersinterface en is niet zichtbaar voor gebruikers, kunt nooit focus moet worden ingesteld op zichzelf.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Een aanroeper probeert de Focus-methode, dit wordt niet ondersteund in een besturingselement dat geen gebruikersinterface heeft aan te roepen."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Haalt de verzameling van <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;> </xref> objecten die als de verbindingspunten van een server optreden kunnen die fungeert als een consument binnen een verbinding met webonderdelen beheren."
  remarks: "Altijd een verbinding voor webonderdelen moet precies twee besturingselementen, een fungeert als de provider van gegevens, de andere fungeert als een consument van gegevens. Elk besturingselement moet een of meer methoden die zijn gedefinieerd als verbindingspunten hebben. In het geval van een besturingselement consument de verbindingspunten zijn <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>objecten.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Bij het ophalen van de consument verbindingspunten is een noodzakelijke stap in een verbinding webonderdelen vormen.       Een consumer moet altijd ten minste één verbindingspunt met het tot stand brengen van een verbinding hebben. De methode GetConsumerConnectionPoints controleert een besturingselement voor consumenten en een verzameling van de verbindingspunten opgehaald. Als een <xref:System.Web.UI.WebControls.WebParts.WebPart>heeft geen verbindingspunten besturingselement, de methode retourneert een lege verzameling.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the GetConsumerConnectionPoints method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> object that is retrieved by using the GetConsumerConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/02749d07-cefa-48e1-9ad7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/02749d07-cefa-48e1-9ad7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het serverbesturingselement van een die als een consument in een verbinding fungeert."
    return:
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&quot;> </xref> die alle verbindingspunten in de gebruiker bevat."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  id: GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Haalt een verwijzing naar het huidige exemplaar van de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement op een pagina."
  remarks: "De GetCurrentWebPartManager-methode is handig in situaties waar u wilt ophalen van een verwijzing naar het huidige <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Een veelvoorkomend scenario waar dit gebeurt is als u een aangepast besturingselement dat tijdens de ontwikkeling kan niet wat de ID van weet schrijft de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement op de pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > De GetCurrentWebPartManager methode is statisch, zodat u deze aanroepen kunt zonder een exemplaar van een <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Sommige besturingselementen in de webonderdelen beheren is ingesteld, zoals <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, hebben een <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>eigenschap die een verwijzing naar het huidige kunt ophalen <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> Als u werkt met dergelijke besturingselementen, moet u deze eigenschap daarom gebruiken voor het ophalen van een verwijzing.       Als u in een context waarvan u weet dat de ID van de coderen <xref:System.Web.UI.WebControls.WebParts.WebPartManager>beheren, zoals het schrijven van code inline binnen een webpagina is het eenvoudigste en meest efficiënt verwijzen rechtstreeks naar het <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement met behulp van de-ID.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the GetCurrentWebPartManager method. The example has two parts: a custom server control, and a Web page that hosts the control.  \n  \n The custom <xref:System.Web.UI.WebControls.Label> control uses the GetCurrentWebPartManager method to retrieve the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on the current page, and then displays the ID.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_1.vb)]  \n  \n The following code example provides the Web page that hosts the control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_2.aspx)]  \n  \n After you load the page in a browser, notice that the ID of the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is displayed within the custom <xref:System.Web.UI.WebControls.Label> control."
  syntax:
    content: public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "De webpagina met een exemplaar van de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> dat verwijst naar het huidige exemplaar van het besturingselement op een pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald van een tekenreeks met de waarde voor de <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>eigenschap van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  remarks: "Hiermee haalt u de berekende waarde van de <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>eigenschap voor `webPart`.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> Wanneer ontwikkelaars kunnen niet een waarde toewijzen aan de <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>eigenschap van een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement bij deze methode wordt de waarde om weer te geven als de titel.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> De berekende waarde voor naamloze besturingselementen bestaat uit een getal in een tekenreeks toegevoegd aan het getal dat aangeeft in de volgorde van een besturingselement in de huidige zone."
  syntax:
    content: protected virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het besturingselement waarvan de methode de waarde van <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*> retourneert"
    return:
      type: System.String
      description: "Een tekenreeks waarin de berekende waarde van <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>voor <code> webPart </code>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code>zich niet in de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> verzameling."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Het relatieve virtuele pad en de queryreeks die deel uitmaken van de aanvraag wanneer een gebruiker probeert te exporteren opgehaald een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement."
  remarks: "De waarde die is geretourneerd door de methode GetExportUrl is een relatief virtueel pad naar de locatie van de server van de pagina met het besturingselement, plus de waarde voor de toegevoegde queryreeks die vormt de export-aanvraag verzonden naar de server. De methode GetExportUrl codeert de tekenreeks voordat u de aanvraag wordt verzonden, te beschermen tegen aanvallen van schadelijke scripts toestaat.      > [!NOTE] > Zie voor meer informatie over het beveiligen van webonderdelen toepassingen [webpagina delen beveiligen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "De <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> die wordt geëxporteerd."
    return:
      type: System.String
      description: "Een tekenreeks die het relatieve virtuele pad en de query bevat de tekenreeks die samen vorm van de aanvraag voor het exporteren van een besturingselement."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  id: GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Wordt een verwijzing naar het exemplaar van de <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> besturingselement dat een serverbesturingselement bevat."
  remarks: "In het algemeen zijn er twee categorieën van besturingselementen die ontwikkelaars plaatsen in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zones om deel te nemen in toepassingen met webonderdelen: <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen die worden overgenomen van de <xref:System.Web.UI.WebControls.WebParts.WebPart>basisklasse en de andere serverbesturingselementen die kunnen worden standaard ASP.NET-besturingselementen, aangepaste of gebruikersbesturingselementen.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Wanneer een van deze besturingselementen wordt geplaatst in een <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone, die nodig is op de functionaliteit van een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement deze functionaliteit inherent, maar niet voor andere soorten serverbesturingselementen.</xref:System.Web.UI.WebControls.WebParts.WebPart> Inschakelen van de andere serverbesturingselementen om te fungeren als <xref:System.Web.UI.WebControls.WebParts.WebPart>bepaalt wanneer ze zijn geplaatst een <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone, ASP.NET verpakt met een <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Omdat de <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>besturingselement neemt over rechtstreeks vanuit de <xref:System.Web.UI.WebControls.WebParts.WebPart>klasse, biedt dit de onderliggende besturingselementen met true webonderdelen functies.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Vaak tijdens runtime, pagina ontwikkelaars mogelijk wilt u naar de <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>besturingselement met een van de serverbesturingselementen in een zone.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> De methode GetGenericWebPart kunnen ze voor het ophalen van een verwijzing naar de <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates the use of the GetGenericWebPart method. The code example contains a <xref:System.Web.UI.WebControls.Calendar> control declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone. The `Button1_Click` method first prints the ID of the <xref:System.Web.UI.WebControls.Calendar> control to a label, and then uses the GetGenericWebPart method to retrieve a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control that wraps the calendar. The ID of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control, and the ID of its child control (which is the <xref:System.Web.UI.WebControls.Calendar> control), are both printed to a second label.  \n  \n [!code-cs[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/csharp/d656242f-a1d2-490c-85d4-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/visualbasic/d656242f-a1d2-490c-85d4-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Een serverbesturingselement dat voorkomt in een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> en loopt als een onderliggend besturingselement van een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> tijdens runtime."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> die terugloopt <code> control </code> als onderliggend besturingselement. De methode retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als <code> control </code> niet is opgenomen in een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Haalt de verzameling van <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&quot;> </xref> objecten die als de verbindingspunten van een server optreden kunnen die fungeert als een provider binnen een verbinding met webonderdelen beheren."
  remarks: "Altijd een verbinding voor webonderdelen moet precies twee besturingselementen, een fungeert als de provider van gegevens, de andere fungeert als een consument van gegevens. Elk besturingselement moet een of meer methoden die zijn gedefinieerd als verbindingspunten hebben. In het geval van een besturingselement provider de verbindingspunten zijn <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>objecten.</xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       Een provider moet altijd ten minste één verbindingspunt met het tot stand brengen van een verbinding hebben. De methode GetProviderConnectionPoints controleert een besturingselement van de provider en een verzameling van de verbindingspunten opgehaald. Bij het ophalen van de verbindingspunten provider is een noodzakelijke stap in een verbinding webonderdelen vormen."
  example:
  - "The following code example demonstrates how to use the GetProviderConnectionPoints method.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> object that is retrieved by using the GetProviderConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/7aa405f8-9f90-4b6f-8d66-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/7aa405f8-9f90-4b6f-8d66-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Het serverbesturingselement van een die als een provider in een verbinding fungeert."
    return:
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&quot;> </xref> die bevat alle verbindingspunten in de provider."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  id: ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Een XML-beschrijving-bestand met de status en de eigenschap gegevens voor de invoer een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> te beheren en de gegevens van toepassing is op het besturingselement."
  remarks: "De methode ImportWebPart importeert u een beschrijving van XML-bestand, dat is gemaakt door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>methode voor een serverbesturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Het is niet het werkelijke serverbesturingselement dat wordt geïmporteerd, maar alleen het beschrijvingsbestand met status en de eigenschap gegevens over het besturingselement. Het besturingselement en de assembly waarnaar wordt verwezen in het beschrijvingsbestand moeten al beschikbaar zijn op de server waarbij een gebruiker probeert om de beschrijvingsbestand te importeren.       Als u wilt inschakelen voor het importeren van een besturingselement, een ontwikkelaar moet toevoegen een <xref:System.Web.UI.WebControls.WebParts.CatalogZone>besturingselement op de pagina waar importeren wordt ingeschakeld.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> Binnen de zone een <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>besturingselement moet worden toegevoegd.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Dit besturingselement biedt een bestandsdialoogvenster waarmee gebruikers kunnen bladeren en zoek het beschrijvingsbestand te importeren.       Nadat een gebruiker een beschrijvingsbestand vindt en het importeren begint, wordt het beschrijvingsbestand gelezen door de methode ImportWebPart. Als er geen fouten zijn en als de assembly en de controle worden gevonden, het serverbesturingselement is toegevoegd aan de catalogus binnen de <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>besturingselement en de verschillende eigenschap en status-gegevens die zijn opgegeven in het beschrijvingsbestand worden toegepast op het besturingselement.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> De gebruiker kan vervolgens selecteert u het besturingselement en toevoegen aan de pagina.      > [!IMPORTANT] > Zoals de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>methode, de methode ImportWebPart heeft enkele potentiële voor beveiligingsrisico&quot;s.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Omdat deze gegevens importeren in een website, kan een kwaadwillende gebruiker proberen beschadigde gegevens of zelfs scriptcode invoegen in de beschrijvingsbestand dat wordt geïmporteerd. De beschadigde gegevens kan worden weergegeven op een pagina of in een database of het ingevoegde script kan worden uitgevoerd. Zie voor een overzicht van de mogelijke risico&quot;s met het importeren van beschrijvingsbestanden en manieren om deze risico&quot;s voorkomen [webpagina delen beveiligen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>die de status en de eigenschap gegevens leest uit het XML-beschrijving-bestand dat wordt geïmporteerd.</xref:System.Xml.XmlReader>"
    - id: errorMessage
      type: System.String
      description: "Een <xref:System.String>die aan de gebruiker wordt weergegeven als een fout is opgetreden tijdens het importeren.</xref:System.String>"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (of een serverbesturingselement dat wordt verpakt met een <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> dus beschouwd als een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>) waarnaar wordt verwezen in het geïmporteerde bestand van de XML-beschrijving."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: "<code>reader</code> could not read the file.  \n  \n \\- or -  \n  \n <code>reader</code> needed to display an import error message but did not find one in the file.  \n  \n \\- or -  \n  \n <code>reader</code> reached the end of the file without finding the XML element that contains the exported data."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  id: Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Wordt een verwijzing naar de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref> klasse, die wordt gebruikt om te combineren en scheiden van een aantal methoden die daadwerkelijk zijn geïmplementeerd in de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> klasse, maar zijn vooral handig voor het besturingselement ontwikkelaars."
  remarks: "De eigenschap inwendige beschrijft de API&quot;s om aan te roepen in een set <xref:System.Web.UI.WebControls.WebParts.WebPartManager>methoden die voornamelijk in uitbreidbaarheid gevallen worden gebruikt.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       De ontworpen manier om deze interne methoden te gebruiken is toegang tot deze via de eigenschap interne werking. Omdat de eigenschap is beveiligd, kunt u alleen toegang tot deze en de methoden aanroepen in een exemplaar van de <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>klasse met overgenomen van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>      > [!NOTE] > Deze eigenschap is verborgen in IntelliSense in [!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]. Echter, in een afgeleid <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse, u nog steeds toegang tot de eigenschap en de verschillende leden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>, waarmee een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kan verwijzen naar de verschillende methoden die zijn gescheiden in de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  id: IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "De eerste stappen bij het bepalen of een besturingselement is gemachtigd om te worden toegevoegd aan een pagina uitgevoerd."
  remarks: "De IsAuthorized is de eerste methode aangeroepen door het besturingselement webonderdelen is ingesteld om te controleren van de autorisatie voor een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart> De cmdlet accepteert `webPart` als een parameter en een proces dat uiteindelijk bepaalt of het besturingselement wordt toegevoegd aan een pagina begint. Deze methode niet aanroepen vanuit uw code rechtstreeks als u bepalen wilt of een bepaald besturingselement is gemachtigd.       Deze methode wordt de initiële taken om te bepalen of het besturingselement van overneemt de <xref:System.Web.UI.WebControls.WebParts.WebPart>klasse of is een <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>beheren en zo ja, welk type onderliggende beheren bevat.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Voor het voltooien van de taak van de autorisatie, roept de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>methode van de overbelasting.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>"
  example:
  - "The following code example demonstrates how to call the IsAuthorized method from your code to determine whether a control is authorized to be added to a page.  \n  \n The code example has three parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the IsAuthorized method.  \n  \n-   A Web page that creates a filter for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   An explanation of how to run the code example.  \n  \n This code example uses a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method to provide custom handling of the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property. This control checks for a property value of `admin` and, if the value is present, authorizes the control. If a control has a different value, it is not authorized; controls without the property value are authorized as well, as they are presumed not to be part of the filtering scenario.  \n  \n For this code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_1.vb)]  \n  \n The second part of the code example creates a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer. Notice also that in the `Page_Load` method, the code calls the IsAuthorized method to determine whether each of the controls is authorized, and if so, it sets each control's <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_2.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because it is excluded by the filter. The third control is also added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. Notice that if you click the verbs menu icon in the title bar of either control, they can both be exported because their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property values were assigned."
  syntax:
    content: public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of andere server besturingselementen voor autorisatie wordt gecontroleerd."
    return:
      type: System.Boolean
      description: "Een Boolean die aangeeft of <code> webPart </code> kunnen worden toegevoegd aan een pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  id: IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "De laatste stappen om te bepalen of een besturingselement is gemachtigd om te worden toegevoegd aan een pagina uitgevoerd."
  remarks: "De IsAuthorized overload-methode wordt de laatste stappen om te bepalen of een besturingselement is gemachtigd om te worden toegevoegd aan een pagina. De methode zorgt ervoor dat `type` is een geldig type en die `path` heeft een waarde alleen als het besturingselement wordt gecontroleerd op een besturingselement. Vervolgens deze de kritieke roept <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>methode, waardoor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>"
  example:
  - "The following code example demonstrates how to override the IsAuthorized method to determine whether a control is authorized to be added to a page.  \n  \n The first step is to create a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_1.aspx)]  \n  \n The second step is to override the IsAuthorized method, and create custom handling for authorization filters. Note that the code first checks whether the property has a value, so that any control that does not assign the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property will be added automatically. If a control has a filter, the code returns `true` only if the filter value is equal to `admin`. This demonstrates a simple mechanism you can use for displaying certain controls to certain users, depending on their role. While a full example using roles is beyond the scope of this topic, you could use the same logic as the overridden method in this code example, except that you could check whether the current user is in a role that matches the authorization filter value, and then add the control only for that user. This would enable you to create pages where some users would see all the controls, and other users would see only selected controls. This is how the logic that checks the filter might look if you used roles:  \n  \n [Visual Basic]  \n  \n```  \nIf Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  \n  return True  \nElse  \n  return False  \nEnd If  \n```  \n  \n [C#]  \n  \n```  \nif(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  \n    return true;  \nelse  \n    return false;  \n```  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_2.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_2.vb)]  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because its filter value is excluded. The third control is added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. If you change the property value on the second control to match that of the first control, and then run the page again, the second control is added as well."
  syntax:
    content: public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>van het besturingselement wordt gecontroleerd voor autorisatie.</xref:System.Type>"
    - id: path
      type: System.String
      description: "Het pad van de relatieve toepassing naar het bronbestand voor het besturingselement wordt geautoriseerd, als het besturingselement een besturingselement is."
    - id: authorizationFilter
      type: System.String
      description: "Een willekeurige tekenreekswaarde toegewezen aan de <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>eigenschap van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement, dat wordt gebruikt voor het autoriseren van of een besturingselement kan worden toegevoegd aan een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>"
    - id: isShared
      type: System.Boolean
      description: "Hiermee wordt aangegeven of het besturingselement wordt gecontroleerd op autorisatie is een gedeelde, wat betekent dat deze zichtbaar is voor veel of alle gebruikers van de toepassing en de bijbehorende <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>waarde van de eigenschap is ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>"
    return:
      type: System.Boolean
      description: "Een Boolean die aangeeft of een besturingselement is gemachtigd om te worden toegevoegd aan een pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code> is a user control, and <code>path</code> is either <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").  \n  \n \\- or -  \n  \n <code>type</code> is not a user control, and <code>path</code> has a value assigned to it."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  id: IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee wordt een waarde die aangeeft of zijn personalisatiewijzigingen aangebracht die invloed hebben op paginaniveau personalisatie details beheerd door de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  remarks: "De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement wordt de eigenschap IsCustomPersonalizationStateDirty intern gebruikt om te controleren of een van de paginaniveau persoonlijke gegevens die deze beheert is gewijzigd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> De persoonlijke gegevens verandert wanneer gebruikers verschillende personalisatie acties op het paginaniveau van de, zoals het toevoegen of verwijderen uitvoeren <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, verbinding maken of verbreken van de besturingselementen voor het verplaatsen van besturingselementen en andere acties voor het wijzigen van de pagina indeling.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Gebruikers kunnen ook persoonlijke instellingen op het niveau van controle, wat betekent dat ze personalisatiewijzigingen in een bepaald besturingselement aanbrengt, uitvoeren en de wijzigingen beïnvloeden alleen dat besturingselement. Een voorbeeld zou het besturingselement bewerken en het wijzigen van de titeltekst of de achtergrondkleur. Niveau voor persoonlijke instellingen heeft geen invloed op de pagina niveau personalisatiegegevens bijgehouden door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>beheren en zodat de waarde van de eigenschap IsCustomPersonalizationStateDirty is niet gewijzigd in `true` wanneer het besturingselement niveau personalisatie plaatsvindt.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Hoewel de methode is beveiligd en kan niet worden geopend rechtstreeks door een aanroeper de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>eigenschap rechtstreeks door aanroepfuncties toegankelijk zijn en retourneert de waarde van deze eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>"
  syntax:
    content: protected virtual bool IsCustomPersonalizationStateDirty { get; }
    return:
      type: System.Boolean
      description: "Een Booleaanse waarde waarmee wordt aangegeven of personalisatie is gewijzigd. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Belasting beheren statusgegevens die is opgeslagen in een vorige pagina-aanvraag en moet worden hersteld op een volgende aanvraag."
  remarks: "De methode is handig voor het herstellen van eigenschapsgegevens die moet worden vastgehouden in terugpostacties van een pagina LoadControlState zelfs wanneer de <xref:System.Web.UI.Control.EnableViewState%2A>eigenschap is ingesteld op `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Bevat de permanente statusgegevens worden geladen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>savedState</code>is geen geldige <xref:System.Web.UI.PageStatePersister.ControlState*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Slaat de aangepaste persoonlijke gegevens die is doorgegeven aan de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controle door de objecten personalisatie later tijdens het initialisatieproces moet worden gebruikt."
  remarks: "De methode LoadCustomPersonalizationState biedt opgeslagen statusgegevens in de vorm van een <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>object.</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> Deze gegevens wordt uiteindelijk gebruikt personalisatiegegevens geladen in de besturingselementen voor webonderdelen en andere initialisatietaken uit te voeren.      > [!NOTE] > Deze methode wordt aangeroepen door een reeks van methoden die begint bij de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>methode in eerste instantie de bijbehorende aanvragen <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>object persoonlijke gegevens leveren aan de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>       U kunt deze methode niet aanroepen rechtstreeks vanuit uw code. U kunt echter rechtstreeks aanroepen de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>methode, welke zelf roept de methode LoadCustomPersonalizationState en retourneert de personalisatiegegevens.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>"
  syntax:
    content: protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> waarin de gegevens van de gebruikersstatus moet worden geladen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  id: MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Haalt een <xref href=&quot;System.Security.PermissionSet&quot;> </xref> -object waarmee alleen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> machtiging en <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> machtiging."
  remarks: "De <xref:System.Security.PermissionSet>-object dat wordt geretourneerd door deze eigenschap wordt gebruikt tijdens het importeren voor type deserialisatie.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MediumPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "Een <xref href=&quot;System.Security.PermissionSet&quot;> </xref> -object waarmee alleen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> machtiging en <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> machtiging."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  id: MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Haalt een <xref href=&quot;System.Security.PermissionSet&quot;> </xref> -object waarmee alleen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> machtiging en <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> machtiging."
  remarks: "De <xref:System.Security.PermissionSet>object geretourneerd door deze eigenschap wordt gebruikt tijdens het importeren voor van alles behalve Typ deserialisatie.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "Haalt een <xref href=&quot;System.Security.PermissionSet&quot;> </xref> -object waarmee alleen <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> machtiging en <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> machtiging."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee verplaatst u een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of het serverbesturingselement van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone naar een andere of naar de nieuwe positie binnen dezelfde zone."
  remarks: "De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement gebruikt de methode MoveWebPart verplaatsen `webPart` naar een nieuwe locatie in dezelfde regio of in een andere zone.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> U kunt deze methode niet aanroepen rechtstreeks vanuit de code en deze wordt ook aangeroepen wanneer een gebruiker een besturingselement wordt verplaatst naar de nieuwe positie voor het gebruik van verschillende opties in de gebruikersinterface (UI) van de webonderdelen.       Een aantal voorwaarden moet worden voldaan voordat `webPart` kunnen worden verplaatst, en de meeste worden aangeduid met items die worden vermeld in de sectie uitzonderingen van dit onderwerp. Als `webPart` niet is opgenomen in een <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone allereerst kan niet worden verplaatst naar een zone.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Nadat u de voorwaarden wordt voldaan, gebeurt het volgende van acties voor het verplaatsen van `webPart`: 1.  De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>methode verhoogt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>      2.  `webPart`wordt verwijderd uit de huidige zone (indien nodig), en toegevoegd aan de nieuwe zone of de nieuwe positie binnen de huidige zone.      3.  De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>methode verhoogt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>      4.  De `zoneIndex` van elke <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement in de zones van de oorsprong en de doelcomputer opnieuw wordt ingesteld om het verplaatste besturingselement weer te geven.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to call the MoveWebPart method directly from code to move a <xref:System.Web.UI.WebControls.WebParts.WebPart> control from one zone to another.  \n  \n The code example has three parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how to run the code example.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is a Web page that contains two zones, each of which contains two server controls. When a user clicks the **Move WebPart** button on the page, the code in the `Button1_Click` method moves a control from the first zone to a new position in the second zone. Notice that the code first must call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method to retrieve the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object that wraps the `list1` control. This is required because the first parameter of the MoveWebPart method requires a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, whereas `list1` is an ASP.NET server control.  \n  \n [!code-cs[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/csharp/49caf3f6-e63d-4133-bdf2-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/visualbasic/49caf3f6-e63d-4133-bdf2-_1.aspx)]  \n  \n After the page loads, click the **Move WebPart** button, and note that the control that contains the links moves into the middle position in the second zone. This movement of the control is accomplished programmatically by calling the MoveWebPart method. You can also use the **Display Mode** drop-down list control to switch the page to design mode, and in design mode, you can drag the controls to different zones or different positions within their zones. The MoveWebPart method is also called by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to handle such user-initiated moves."
  syntax:
    content: public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "De <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of andere server besturingselementen worden verplaatst."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "Het doel <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> waarnaar `webPart` wordt verplaatst."
    - id: zoneIndex
      type: System.Int32
      description: "Een geheel getal dat aangeeft van de index van `webPart` ten opzichte van andere besturingselementen binnen `zone`."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n <code>zone</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n The zone referenced by the <code>webPart</code> control's <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that <code>webPart</code> is not currently contained in a zone."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>or <code>zone</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>zoneIndex</code>is kleiner dan nul."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  id: OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&quot;> </xref> gebeurtenis en roept een handler voor de gebeurtenis, indien aanwezig."
  remarks: "De methode OnAuthorizeWebPart wordt aangeroepen door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>methode, wanneer een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement voor autorisatie moet worden toegevoegd aan een pagina wordt gecontroleerd.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Als de OnAuthorizeWebPart-methode wordt aangeroepen, wordt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>gebeurtenis, en als er een handler-methode voor de gebeurtenis, roept deze de handler.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>       Het proces waarbij gemachtigd <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen is een belangrijk onderdeel van de webonderdelen.</xref:System.Web.UI.WebControls.WebParts.WebPart> Elke <xref:System.Web.UI.WebControls.WebParts.WebPart>of serverbesturingselement dat wordt toegevoegd aan een zone voor door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement verloopt via een autorisatieproces om te bepalen of het besturingselement kan worden toegevoegd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> De webonderdelen besturingselement set biedt standaard geen eventuele filtercriteria om te voorkomen dat besturingselementen wordt toegevoegd aan een zone. Maar het besturingselement set biedt de mechanismen die nodig zijn voor ontwikkelaars kunnen hun eigen filtercriteria te maken. U kunt aangepaste filteren scenario&quot;s maken met behulp van deze mechanismen. U kunt bijvoorbeeld een filter maken zodat als een gebruiker zich in een beheerdersrol, bepaalde besturingselementen zou worden toegevoegd aan een zone wanneer de pagina wordt weergegeven, en als de gebruiker zich in een gebruikersrol, die besturingselementen niet zou worden toegevoegd.       De mechanismen voor het filteren van besturingselementen tijdens het autorisatieproces zijn de <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-eigenschap op <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>en OnAuthorizeWebPart methoden, en de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>gebeurtenis op de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Er zijn in feite twee taken voor het maken van een scenario voor filteren. Eerst het toewijzen van tekenreeksen voor de <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>eigenschap van elke <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement dat u wilt filteren.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Deze tekenreekswaarden kunnen willekeurig, maar moeten ze de criteria die u filteren wilt op bevatten. Bijvoorbeeld, als u een bepaald besturingselement worden toegevoegd aan een zone alleen als een beheerder gebruiker bekijkt de pagina en klik u string-waarde kunnen toewijzen `admin` voor de eigenschap. Vervolgens kan u de functie voor ASP.NET-functies gebruiken en alle gebruikers van uw site toevoegen aan de diverse rollen zoals beheerder, manager en gebruiker. Bij het laden van een pagina is uw code filteren wilt controleren welke rol een gebruiker in, vergelijk dit met de waarde voor het autorisatie-filter op een besturingselement wordt gecontroleerd en als (bijvoorbeeld) de gebruiker zich in een beheerdersrol en u hebt ingesteld van het besturingselement <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>van waarde naar `admin`, kan het besturingselement worden toegevoegd.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       De tweede stap bij het maken van een filteren scenario is het schrijven van code om te controleren de <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>eigenschap waarden op <xref:System.Web.UI.WebControls.WebParts.WebPart>bepaalt en bepalen of elk besturingselement voordat deze wordt toegevoegd aan de zone is gemachtigd.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Er zijn twee opties voor deze filteren code plaatsen. De eerste optie is de gewenste optie voor ontwikkelaars van de pagina. Kunt u een methode voor het afhandelen van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>gebeurtenis rechtstreeks in de code van het script webpagina of in een bestand met code scheiding.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Uw methode koppelen aan de gebeurtenis door het toevoegen van de `OnAuthorizeWebPart` kenmerk aan de tag voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>beheren op de pagina, zoals wordt weergegeven in de volgende voorbeeldcode voor opmaak.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      ```   <asp:webpartmanager id=&quot;manager1&quot; runat=&quot;server&quot;       OnAuthorizeWebPart=&quot;manager1_AuthorizeWebPart&quot; />   ```Uw aangepaste methode heeft te maken, is controle van elke <xref:System.Web.UI.WebControls.WebParts.WebPart>voor de filtercriteria beheren en klikt u vervolgens op basis van de resultaten, een Booleaanse waarde toewijzen aan de <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A>eigenschap van de <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>object om aan te geven of de <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement kan worden toegevoegd.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> De code in de sectie voorbeeld laat zien hoe u dit doet.       De tweede optie voor uw filteren code plaatsen is over te nemen van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse en een methode om te controleren van de filtercriteria te overschrijven.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> De twee methoden die u onderdrukken kunt hiervoor hiervan zijn de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>methode of de methode OnAuthorizeWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> Hoewel beide methoden werken zou, in de meeste gevallen is het raadzaam om overschrijven de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>methode, omdat u hiermee meer programmatische controle over het hele autorisatieproces terwijl de methode OnAuthorizeWebPart slechts één specifieke taak wordt, is het verhogen van de gebeurtenis en het selectievakje voor een handler.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Voor een voorbeeld van een aangepaste <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasse die de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>methode, Zie de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>overbelasting van de methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the OnAuthorizeWebPart method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. The method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `admin` and, if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/fb74240d-1119-4128-abbc-_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/fb74240d-1119-4128-abbc-_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example, which does not use roles).  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  \n  As Object, ByVal e As WebPartAuthorizationEventArgs)  \n  \n  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  \n    If Roles.IsUserInRole(Page.User.Identity.Name, _  \n      e.AuthorizationFilter) Then  \n  \n      e.IsAuthorized = True  \n    Else  \n      e.IsAuthorized = False  \n    End If  \n  End If  \n  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs&quot;> </xref> die gebeurtenisgegevens bevat."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  id: OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated&quot;> </xref> gebeurtenis om aan te geven dat een pagina en de bijbehorende besturingselementen zijn geladen en verbindingen op de pagina om te beginnen met het delen van gegevens zijn geactiveerd."
  remarks: "De methode OnConnectionsActivated genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>gebeurtenis nadat een pagina het laadproces is voltooid.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> De methode biedt een manier om een voor de gebeurtenis-handler toevoegen.       Pagina ontwikkelaars een aangepaste handler voor de gebeurtenis kunnen toevoegen door toe te voegen een `OnConnectionsActivated` kenmerk de `<asp:webpartmanager>` element in een pagina en de naam van een aangepaste methode vervolgens toe te wijzen aan het kenmerk."
  syntax:
    content: protected virtual void OnConnectionsActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Een <xref:System.EventArgs>waarin de gebeurtenisgegevens.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  id: OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating&quot;> </xref> gebeurtenis om aan te geven dat een pagina en de bijbehorende besturingselementen zijn geladen en het proces van het activeren van verbindingen kan beginnen."
  remarks: "De methode OnConnectionsActivating genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>gebeurtenis ontwikkelaars een mechanisme biedt voor het aanpassen van het proces van het activeren van verbindingen via een programma.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>       Pagina ontwikkelaars een aangepaste handler voor de gebeurtenis kunnen toevoegen door toe te voegen een `OnConnectionsActivating` kenmerk de `<asp:webpartmanager>` element in een pagina en de naam van een aangepaste methode vervolgens toe te wijzen aan het kenmerk."
  syntax:
    content: protected virtual void OnConnectionsActivating (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Een <xref:System.EventArgs>waarin de gebeurtenisgegevens.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  id: OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged&quot;> </xref> gebeurtenis aangeeft dat de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement het proces voor het overschakelen van een weergavemodus naar een andere op een webpagina is voltooid."
  remarks: "De methode OnDisplayModeChanged in de basis vormen gewoon verhoogt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>"
  syntax:
    content: protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs&quot;> </xref> die gebeurtenisgegevens die zijn gekoppeld aan een gewijzigde weergavemodus bevat."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  id: OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging&quot;> </xref> gebeurtenis aangeeft dat de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement bezig activeert van modus voor één op een webpagina is."
  remarks: "De methode OnDisplayModeChanging in de basis vormen gewoon verhoogt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>"
  syntax:
    content: protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
      description: "Een <xref:System.EventArgs>die gebeurtenisgegevens die zijn gekoppeld aan een veranderende weergavemodus bevat.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> gebeurtenis, dat de eerste gebeurtenis in de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> levenscyclus van het besturingselement."
  remarks: "De OnInit-methode roept de basismethode, genereert de <xref:System.Web.UI.Control.Init>gebeurtenis voor het besturingselement en verricht dat verschillende voorbereidende stappen uitvoeren, zoals ervoor zorgen dat er slechts één exemplaar van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>op een pagina te beheren en te laden personalisatiegegevens.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.Init>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Een <xref:System.EventArgs>waarin de gebeurtenisgegevens.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is een andere <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement op de pagina"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> gebeurtenis treedt op vlak voordat een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement op een webpagina wordt weergegeven."
  remarks: "De methode OnPreRender roept de basismethode, genereert de <xref:System.Web.UI.Control.PreRender>gebeurtenis voor het besturingselement en registers verschillende clientscripts die nodig zijn op de pagina&quot;s met webonderdelen bepaalt.</xref:System.Web.UI.Control.PreRender>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Een <xref:System.EventArgs>waarin de gebeurtenisgegevens.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged&quot;> </xref> gebeurtenis, die nadat plaatsvindt een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement ofwel zojuist is geselecteerd of de selectie heeft gewist."
  remarks: "De methode OnSelectedWebPartChanged genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>gebeurtenis, die is doorgaans een punt in de tijd waarin een ontwikkelaar mogelijk wilt wijzigen van het uiterlijk van de gebruikersinterface (UI).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Bijvoorbeeld, wanneer er een nieuwe <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement is ingeschakeld, wordt het besturingselement webonderdelen ingesteld verandert de rendering van het zojuist geselecteerde besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart> Nadat de selectie van een besturingselement is uitgeschakeld, wordt de rendering normaal geretourneerd.       Nadat een gebruiker een bepaalde selecteert <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement voor het bewerken van de OnSelectedWebPartChanged-methode wordt aangeroepen.</xref:System.Web.UI.WebControls.WebParts.WebPart> Wanneer de gebruiker klaar is met het besturingselement bewerken en wordt gesloten, met het resultaat dat de selectie van het besturingselement is uitgeschakeld, wordt de methode OnSelectedWebPartChanged opnieuw aangeroepen."
  syntax:
    content: protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging&quot;> </xref> gebeurtenis die tijdens het proces optreedt van het wijzigen van die <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement momenteel is geselecteerd."
  remarks: "De methode OnSelectedWebPartChanging genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>gebeurtenis die tijdens het proces optreedt van het wijzigen van die <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement momenteel is geselecteerd.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>       De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement gebruikt deze methode en de bijbehorende gebeurtenis voor bieden de mogelijkheid om te annuleren van een proces waarbij het geselecteerde besturingselement wordt gewijzigd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Bijvoorbeeld: de methode wordt aangeroepen binnen de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>methode, en ook binnen de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>methode biedt een manier om te annuleren van het proces.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Als een gebruiker op de bewerking annuleren op een besturingselement dat wordt bewerkt, wordt het besturingselement niet meer is geselecteerd en wijzigingen zijn niet opgeslagen omdat de methode OnSelectedWebPartChanging maakt het mogelijk om de wijzigingen van de bewerking te annuleren.      > [!NOTE] > De methode wordt ook aangeroepen tijdens de methoden die beginnen en eindigen van het proces van het verbinden van een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement naar een ander besturingselement, om in te schakelen dat proces wordt geannuleerd.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Pagina ontwikkelaars kunnen maken die een aangepaste handler voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>gebeurtenis door toe te voegen de `OnSelectedWebPartChanging` kenmerk de `<asp:webpartmanager>` element in declaratieve paginamarkup en de naam van een aangepaste methode toe te wijzen aan het kenmerk.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>"
  syntax:
    content: protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de base <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> gebeurtenis en verwijdert het <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> exemplaar van een webpagina."
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Gebeurtenisgegevens die zijn gekoppeld aan het verwijderen van het besturingselement."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded&quot;> </xref> gebeurtenis, die nadat plaatsvindt een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement is toegevoegd aan een pagina."
  remarks: "De methode OnWebPartAdded wordt aangeroepen tijdens het proces van het toevoegen van een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement (of een ander serverbesturingselement die wordt toegevoegd aan een <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone) naar een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Pagina ontwikkelaars kunnen maken die een aangepaste handler voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>gebeurtenis door toe te voegen de `OnWebPartAdded` kenmerk de `asp:webpartmanager>` -element en de naam van een aangepaste methode toewijzen aan het kenmerk.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>"
  syntax:
    content: protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  id: OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&quot;> </xref> gebeurtenis die tijdens het proces van het toevoegen van optreedt een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (of een server of gebruikersrol besturingselement) naar een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone."
  remarks: "De methode OnWebPartAdding genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>gebeurtenis geeft aan dat een besturingselement is bezig te worden toegevoegd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> De methode biedt ook de optie voor het annuleren van het proces toe te voegen. Als het besturingselement is toegevoegd, de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>gebeurtenis volgt.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Pagina-ontwikkelaars kunnen een aangepaste handler opgeven voor de bijbehorende gebeurtenis door toe te voegen de `OnWebPartAdding` kenmerk de `<asp:webpartmanager>` element op een webpagina en vervolgens de naam van een aangepaste methode toe te wijzen aan het kenmerk."
  syntax:
    content: protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed&quot;> </xref> gebeurtenis om aan te geven dat een besturingselement van een pagina is verwijderd."
  remarks: "De methode OnWebPartClosed genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>gebeurtenis aangeeft dat een <xref:System.Web.UI.WebControls.WebParts.WebPart>(of andere server of gebruikersrol besturingselement) is gesloten op een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Sluit een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement betekent dat u wilt verwijderen van een pagina, zodat deze niet wordt weergegeven, en deze in een speciale te plaatsen dat object bevat een afkorting voor een Paginacatalogus.</xref:System.Web.UI.WebControls.WebParts.WebPart> Een Paginacatalogus, wat overeenkomt met de <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>bepalen, verwijzingen naar gesloten onderhoudt <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen voor elke pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Als een <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>besturingselement is gedeclareerd voor een pagina binnen een <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zone, gebruikers kunnen de pagina schakelen naar de catalogus weergavemodus en opnieuw toevoegen aan de pagina alle besturingselementen die eerder zijn gesloten.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       De methode OnWebPartClosed biedt de mogelijkheid voor ontwikkelaars voor het maken van een aangepaste handler voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Pagina ontwikkelaars een aangepaste handler voor de gebeurtenis kunnen toevoegen door toe te voegen een `OnWebPartClosed` kenmerk de `<asp:webpartmanager>` element in een pagina en de naam van een aangepaste methode vervolgens toe te wijzen aan het kenmerk. Een handig taak die een ontwikkelaar via deze methode verrichten kan is voltooid met knopinfo die gebruikers te informeren hoe het besturingselement terug naar de pagina toevoegen om weer te geven van een tijdelijke aanduiding in plaats van het besturingselement gesloten."
  syntax:
    content: protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing&quot;> </xref> gebeurtenis die tijdens het proces van optreedt een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselement wordt verwijderd uit een pagina."
  remarks: "De methode OnWebPartClosing genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>gebeurtenis om aan te geven dat een besturingselement wordt gesloten of verwijderd uit een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> De methode biedt ook de optie voor het annuleren van het proces sluiten. Als het besturingselement is verwijderd uit de pagina de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>gebeurtenis volgt.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Pagina-ontwikkelaars kunnen een aangepaste handler opgeven voor de bijbehorende gebeurtenis door toe te voegen de `OnWebPartClosinging` kenmerk de `<asp:webpartmanager>` element op een webpagina en vervolgens de naam van een aangepaste methode toe te wijzen aan het kenmerk."
  syntax:
    content: protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted&quot;> </xref> gebeurtenis, die nadat plaatsvindt een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement is definitief verwijderd van een pagina."
  remarks: "De methode OnWebPartDeleted wordt aangeroepen tijdens het proces van het verwijderen van een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement (of een ander serverbesturingselement die wordt toegevoegd aan een <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone) van een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Pagina ontwikkelaars kunnen maken die een aangepaste handler voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>gebeurtenis door toe te voegen de `OnWebPartDeleted` kenmerk de `asp:webpartmanager>` -element en de naam van een aangepaste methode toewijzen aan het kenmerk.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>"
  syntax:
    content: protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting&quot;> </xref> gebeurtenis geeft aan dat een dynamische <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement (of het besturingselement server of de gebruiker die is opgenomen in een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone) wordt verwijderd."
  remarks: "Alleen dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen kunnen worden verwijderd en wanneer een besturingselement wordt verwijderd, het exemplaar van het besturingselement wordt permanent verwijderd uit een pagina en kan niet worden hersteld.</xref:System.Web.UI.WebControls.WebParts.WebPart> Dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen zijn die programmatisch worden toegevoegd of uit een catalogus webonderdelen in plaats van statische besturingselementen die zijn gedefinieerd in de opmaak van een webpagina.</xref:System.Web.UI.WebControls.WebParts.WebPart>       De methode OnWebPartDeleting genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>gebeurtenis om aan te geven dat een besturingselement definitief wordt verwijderd uit de zone.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> De methode biedt ook de mogelijkheid het verwijderingsproces te annuleren. Als het besturingselement is verwijderd uit de pagina de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>gebeurtenis volgt.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Pagina-ontwikkelaars kunnen een aangepaste handler opgeven voor de bijbehorende gebeurtenis door toe te voegen de `OnWebPartDeleting` kenmerk de `<asp:webpartmanager>` element op een webpagina en vervolgens de naam van een aangepaste methode toe te wijzen aan het kenmerk."
  syntax:
    content: protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved&quot;> </xref> gebeurtenis, die nadat plaatsvindt een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement is verplaatst naar een andere locatie op een pagina."
  remarks: "De methode OnWebPartMoved genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>gebeurtenis bij het einde van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>methode, die zorgt ervoor dat het proces van het verplaatsen van een besturingselement voltooid is voordat een in de gebeurtenisstroom handler wordt uitgevoerd code.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>gebeurtenis treedt op wanneer een besturingselement wordt verplaatst binnen de huidige zone of in een andere zone en het maakt niet uit of het verkeer wordt gedaan via een programma of door een gebruiker die het besturingselement te slepen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Pagina ontwikkelaars kunnen maken die een aangepaste handler voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>gebeurtenis door toe te voegen de `OnWebPartMoved` kenmerk de `asp:webpartmanager>` -element en de naam van een aangepaste methode toewijzen aan het kenmerk.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>"
  syntax:
    content: protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  id: OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving&quot;> </xref> gebeurtenis geeft aan dat een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of server of gebruikersrol besturingselement in een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone is bezig te worden verplaatst."
  remarks: "De methode OnWebPartMoving genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>gebeurtenis die optreedt wanneer een <xref:System.Web.UI.WebControls.WebParts.WebPart>of andere serverbesturingselement is verplaatst binnen de zone of in een andere zone.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> De methode biedt ook de mogelijkheid om te annuleren kopieerproces. Als de verplaatsing is voltooid, de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>gebeurtenis volgt.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Pagina-ontwikkelaars kunnen een aangepaste handler opgeven voor de bijbehorende gebeurtenis door toe te voegen de `OnWebPartMoving` kenmerk de `<asp:webpartmanager>` element op een webpagina en vervolgens de naam van een aangepaste methode toe te wijzen aan het kenmerk."
  syntax:
    content: protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected&quot;> </xref> gebeurtenis die plaatsvindt nadat een verbinding tussen <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen."
  remarks: "De methode OnWebPartsConnected leidt tot de bijbehorende gebeurtenis bij het einde van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>methode, die ervoor zorgt dat de vereiste stappen voor het verbinden van twee besturingselementen zijn voltooid voordat geen code in de gebeurtenis-handler wordt uitgevoerd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       De methode biedt programmatisch beheer over het proces van het maken van verbindingen en de bijbehorende gebeurtenis is een handige punt waarop u wilt bijwerken van de gebruikersinterface (UI) of een gebruiker waarschuwen als er een verbinding is gemaakt.       Pagina ontwikkelaars kunnen maken die een aangepaste handler voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>gebeurtenis door toe te voegen de `OnWebPartsConnected` kenmerk de `asp:webpartmanager>` -element en de naam van een aangepaste methode toewijzen aan het kenmerk.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>"
  syntax:
    content: protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting&quot;> </xref> gebeurtenis die optreedt tijdens het maken van een verbinding tussen twee <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of server of de gebruiker besturingselementen die zijn opgenomen in een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone."
  remarks: "De methode OnWebPartsConnecting genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>gebeurtenis die optreedt wanneer de twee besturingselementen proberen een verbinding tot stand brengen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> De methode biedt de mogelijkheid om te annuleren van de verbindingspoging. Als de verbinding slaagt, wordt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>gebeurtenis volgt.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Pagina-ontwikkelaars kunnen een aangepaste handler opgeven voor de bijbehorende gebeurtenis door toe te voegen de `OnWebPartsConnecting` kenmerk de `<asp:webpartmanager>` element op een webpagina en vervolgens de naam van een aangepaste methode toe te wijzen aan het kenmerk."
  syntax:
    content: protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected&quot;> </xref> gebeurtenis die nadat de verbinding tussen optreedt <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen is beëindigd."
  remarks: "De methode OnWebPartsDisconnected leidt tot de bijbehorende gebeurtenis bij het einde van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>methode, die uitgevoerd het proces wordt van een verbinding tussen twee besturingselementen wordt beëindigd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       De methode biedt programmatisch beheer via een verbinding wilt beëindigen, zodat ontwikkelaars kunnen de gebruiker informeren, wijzigingen aanbrengen in de gebruikersinterface (UI) of andere wijzigingen aanbrengen in de toepassing.       Pagina ontwikkelaars kunnen maken die een aangepaste handler voor de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>gebeurtenis door toe te voegen de `OnWebPartsDisconnected` kenmerk de `asp:webpartmanager>` -element en de naam van een aangepaste methode toewijzen aan het kenmerk.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>"
  syntax:
    content: protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting&quot;> </xref> gebeurtenis, waarmee wordt aangegeven dat twee <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of server of de gebruiker besturingselementen in een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone zijn bezig met het beëindigen van een verbinding."
  remarks: "De methode OnWebPartsDisconnecting genereert de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>gebeurtenis die optreedt wanneer de twee besturingselementen beëindigt een verbinding.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> De methode biedt de mogelijkheid om te annuleren van het proces verbreken. Als de verbinding is verwijderd, de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>gebeurtenis volgt.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Pagina-ontwikkelaars kunnen een aangepaste handler opgeven voor de bijbehorende gebeurtenis door toe te voegen de `OnWebPartsDisconnecting` kenmerk de `<asp:webpartmanager>` element op een webpagina en vervolgens de naam van een aangepaste methode toe te wijzen aan het kenmerk."
  syntax:
    content: protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  id: Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee haalt u een verwijzing naar een object dat persoonlijke gegevens van een webpagina bevat."
  remarks: "De eigenschap personalisatie biedt een manier toegang krijgen tot de <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>-object dat is gekoppeld aan een pagina via de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> Deze eigenschap kunt u de verschillende leden van het object personalisatie openen. U kunt bijvoorbeeld de <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>methode overschakelen van de pagina personalisatiebereik van gedeeld naar bereik van de gebruiker of vice versa.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> U vindt hier ook de huidige personalisatiebereik te gaan van de pagina of personalisatie is ingeschakeld op de pagina welke provider wordt gebruikt voor de persoonlijke gegevens en meer.       Houd er rekening mee dat de gegevens waarnaar wordt verwezen door de eigenschap personalisatie alleen de paginaniveau persoonlijke gegevens die worden bijgehouden is door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Controle-specifieke persoonlijke gegevens, zoals de waarden van aanpasbare eigenschappen op <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, maakt geen deel uit van de eigenschap personalisatie.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Zie voor meer informatie over personalisatie van webonderdelen [webonderdelen personalisatie overzicht](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the Personalization property programmatically.  \n  \n The following Web page allows a user to enter edit mode to edit certain aspects of the <xref:System.Web.UI.WebControls.Calendar> control. The **Toggle Scope** button switches the page to user or shared personalization scope. The **Edit Mode** and **Browse Mode** buttons each switch the page into the appropriate display mode. Notice that in the `<script>` tag section of the file, two of the methods that handle events use the Personalization property to access useful members of the underlying object. Specifically, these methods use the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> method and the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property on the object accessed through the Personalization property.  \n  \n [!code-cs[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_970_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_970_1.aspx)]  \n  \n For the code example to run, you also must enable a user or users to personalize pages in shared scope. Add an entry to the Web.config file, within the `<system.web>` section, that looks like the following markup.  \n  \n```  \n<webParts>  \n  <personalization>  \n    <authorization>  \n      <allow  \n        users=\"[Replace the text and brackets with a user name or   \n           group.]\"  \n        roles=\"admin\"   \n        verbs=\"enterSharedScope\"  />  \n    </authorization>  \n  </personalization>  \n</webParts>   \n```  \n  \n After you load the page in a browser, click the **Toggle Scope** button, and notice that the page now says the scope is shared. Click **Edit Mode** to change the display mode, click the verbs menu on the visible control, and select **Edit** from the menu. Notice that the user interface (UI) for both editing controls appears. Now click **Browse Mode** to return to normal browsing. If the page says it is in shared scope, click **Toggle Scope** again to ensure the page is in user scope. Next, follow the same steps to edit the control again, but notice that now in the editing UI, the <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> control does not appear. That is because this control only works when the page is in shared personalization scope."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> die persoonlijke gegevens bevat."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  id: RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Kan de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> beheer om de client-side-script dat wordt gebruikt voor de verschillende onderdelen van persoonlijke instellingen, zoals slepen genereren <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen in een webpagina."
  syntax:
    content: protected virtual void RegisterClientScript ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Overschreven om te voorkomen dat de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> beheer van de rendering van inhoud."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Een <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> ontvangt dat de inhoud van het besturingselement om te schrijven naar de pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Slaat gegevens voor de status de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> zodat de gegevens kan worden teruggezet op toekomstige aanvraag naar de webpagina die het besturingselement bevat."
  remarks: "De SaveControlState methode bespaart statusgegevens voor eigenschappen die moeten worden vastgehouden in pagina terugpostacties, zelfs wanneer de <xref:System.Web.UI.Control.EnableViewState%2A>eigenschap is ingesteld op `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "Een <xref:System.Object>het besturingselement bevat gegevens van de gebruikersstatus opgeslagen.</xref:System.Object>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee slaat u aangepaste status personalisatiegegevens beheerd door de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> beheren, zodat deze gegevens opnieuw kan worden geladen wanneer de pagina opnieuw wordt geladen."
  remarks: "De methode SaveCustomPersonalizationState is kritieke Bezig personalisatie, omdat deze kan persoonlijke gebruikersinstellingen voor toekomstige browsersessies worden opgeslagen en om een pagina te bezoeken. De methode bespaart aangepaste status personalisatiegegevens, waaronder items zoals het volgende: dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart>of serverbesturingselementen die zijn toegevoegd aan een pagina of verwijderd uit een pagina; besturingselementen die op een pagina; zijn verplaatst en dynamische verbindingen die zijn gemaakt of verwijderd.</xref:System.Web.UI.WebControls.WebParts.WebPart>       U kunt deze methode niet aanroepen rechtstreeks vanuit uw code. U kunt echter aanroepen de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>methode, welke zelf deze methode aanroept om op te slaan personalisatiegegevens.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>"
  syntax:
    content: protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> waarin de gegevens van de gebruikersstatus moet worden geladen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  id: SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Wordt een verwijzing naar een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of een ander serverbesturingselement die momenteel is geselecteerd voor het bewerken van of voor het maken van een verbinding met een ander besturingselement."
  remarks: "De eigenschap SelectedWebPart retourneert een verwijzing naar een <xref:System.Web.UI.WebControls.WebParts.WebPart>of een ander serverbesturingselement die momenteel is geselecteerd voor het bewerken van of voor het maken van een verbinding met een ander besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart>       De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>control biedt verschillende nuttige methoden en gebeurtenissen voor het verwerken van het proces van het selecteren van een besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>gebeurtenis treedt op nadat een besturingselement geselecteerd is, maar voordat er wijzigingen worden aangebracht.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Uit te voeren een aantal acties op het besturingselement nadat u deze optie is geselecteerd, overschrijven de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> U wilt bijvoorbeeld de weergave van een besturingselement dat is geselecteerd, maar nog niet is gewijzigd om te benadrukken visueel welke besturingselement is geselecteerd.       De <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>gebeurtenis vindt plaats nadat het geselecteerde besturingselement is gewijzigd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Uit te voeren een aantal acties op het besturingselement nadat deze is gewijzigd, overschrijven de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement dat momenteel is geselecteerd om te bewerken of vormen een verbinding."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  id: SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op nadat de selectie van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement heeft gewijzigd en verplaatst naar een ander besturingselement op een webpagina."
  remarks: "Deze gebeurtenis kan worden gebruikt in combinatie met de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>methode voor het wijzigen van de gebruikersinterface (UI) van een geselecteerde besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Bijvoorbeeld, als de gebruiker de pagina naar de ontwerpmodus verandert (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>), en selecteert vervolgens een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement met de bedoeling van deze naar de nieuwe positie te slepen, is het wijzigen van de rendering van het geselecteerde besturingselement, bijvoorbeeld door het wijzigen van de kleur van de rand of terwijl deze optie is geselecteerd op de achtergrond.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>      > [!NOTE] > Zie voor meer informatie over het gebruiken van gebeurtenissen [How to: gebeurtenissen gebruiken in een webtoepassing formulieren](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  id: SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op tijdens het proces van het wijzigen van die <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselement momenteel is geselecteerd op een webpagina."
  remarks: "Deze gebeurtenis kan worden gebruikt in combinatie met de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Pagina-ontwikkelaars kunnen een gebeurtenis-handler maken in de code door toe te voegen de `OnSelectedWebPartChanging` kenmerk de `<asp:webpartmanager>` element in een pagina en de waarde van het kenmerk instelt op de naam van een aangepaste methode met de gebeurtenis wordt afgehandeld.       Deze gebeurtenis is opgetreden tijdens het proces van het begin of eind van een verbinding tussen besturingselementen, en wanneer het begin en eind van een bewerking van een besturingselement. Zie voor meer informatie de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>       Wanneer de gebeurtenis SelectedWebPartChanging wordt gegenereerd als direct resultaat van een gebruiker actie die het geselecteerde besturingselement wordt gewijzigd, kunnen de gebeurtenis normaal kan worden geannuleerd. Er is echter een scenario waarin de gebeurtenis kan niet worden geannuleerd. Als een <xref:System.Web.UI.WebControls.WebParts.WebPartZone>besturingselement wordt verwijderd, de <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen hierin moeten alle gesloten, anders ze zouden worden zwevende.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> In dit geval de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>wordt gesloten bepalen de <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, niet de gebruiker en deze moeten bepalen welk besturingselement momenteel is geselecteerd en wanneer de selectie zonder een kans onderbreking, te wijzigen zodat deze het proces van het opschonen van alle besturingselementen kunt voltooien.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Daarom standaard de SelectedWebPartChanging dient methode kan niet worden geannuleerd in dit scenario. Zie voor een bijbehorende gebeurtenis die kan worden geannuleerd, de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee stelt u een vlag die aangeeft dat aangepaste persoonlijke gegevens van de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement is gewijzigd."
  remarks: "De methode SetPersonalizationDirty stelt een vlag die uiteindelijk zorgt ervoor de onderdelen van persoonlijke instellingen in het besturingselement webonderdelen is ingesteld dat op de bijgewerkte personalisatiegegevens opslaan. Voor meer informatie over de scenario&quot;s waardoor wijzigingen in de persoonlijke gegevens bijgehouden door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>beheren, Zie de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       De methode SetPersonalizationDirty rechtstreeks vanuit uw code kan niet worden aangeroepen en kan niet worden overschreven omdat deze intern door het besturingselement webonderdelen is ingesteld als onderdeel van de functie voor personalisatie van webonderdelen gebruikt wordt."
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Stelt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>waarde gelijk is aan de geselecteerde eigenschap <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  remarks: "De methode SetSelectedWebPart wordt aangeroepen tijdens de processen die beginnen of eindigen met het bewerken van het besturingselement opgegeven door de `webPart` parameter en die beginnen of eindigen van een verbinding met `webPart`.       Aan het begin van de processen edit- and -verbinding `webPart` is het besturingselement dat is geselecteerd om te worden bewerkt of in te voeren van een verbinding.       Aan het einde van de processen edit- and -verbinding, `null` wordt doorgegeven aan de methode SetSelectedWebPart, wat resulteert in het geselecteerde besturingselement niet meer ingeschakeld."
  syntax:
    content: protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselement dat is geselecteerd."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van een lege tekenreeks (&quot;&quot;) zodat er geen skin kan worden toegepast op de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  remarks: "De eigenschap SkinID overschrijft de overgenomen <xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName>eigenschap om te voorkomen dat de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement, dat zich een onzichtbaar besturingselement, weergaven te gebruiken.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName> De implementatie van de eigenschap wordt voorkomen dat een skin wordt toegewezen door altijd als een lege tekenreeks van de `get` accessor en altijd uitzondering als er een poging tot het instellen van een waarde de `set` accessor."
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "Een lege tekenreeks waarmee wordt voorkomen dat de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement van het hebben van een skin toegewezen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Een poging gedaan om in te stellen van de waarde van eigenschap."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Wordt een verwijzing naar de verzameling van alle <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> objecten op webpagina&quot;s die zijn gedefinieerd als statisch verbindingen."
  remarks: "De eigenschap StaticConnections wordt gebruikt door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement bijhouden en beheren van alle statische verbindingen op een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Een statische verbinding, in tegenstelling tot een dynamische verbinding hoeft niet te worden toegevoegd aan een pagina telkens wanneer de pagina wordt weergegeven.       De verzameling waarnaar wordt verwezen door deze eigenschap bevat de statische verbindingen die bestaan op de pagina wanneer ze zijn gemaakt via een programma of de opgegeven met een `<asp:webpartconnection>` -element in de opmaak van de pagina."
  example:
  - "The following code example demonstrates programmatic use of the StaticConnections property.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need to obtain the first two parts of the example--the custom user control and the source code for the custom controls and interface--from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. That topic also explains your options for compiling the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The third part of the code example is the Web page. The declarative markup for the page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the StaticConnections property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_98_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_98_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> die de statische verbindingen op de pagina bevat."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  id: SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee haalt u een alleen-lezen-verzameling van alle weergavemodus die beschikbaar op een bepaalde webpagina zijn."
  remarks: "De eigenschap SupportedDisplayModes bevat alleen de weergavemodus die daadwerkelijk beschikbaar op een pagina zijn, krijgt de soorten zone-besturingselementen die aanwezig zijn op de pagina.      > [!NOTE] > Weergavemodus kunnen worden uitgeschakeld en wanneer een weergavemodus is uitgeschakeld, wordt deze niet toegevoegd aan de verzameling SupportedDisplayModes, zelfs als het bijbehorende type zone die ondersteuning biedt voor die weergavemodus aanwezig zijn op de pagina.       De bladermodus en ontwerpmodus worden altijd ondersteund. De weergavemodus die kunnen verschillen zijn de edit-catalogus en verbinding maken met modi. Elk van deze weergavemodus is gekoppeld aan een bepaald type <xref:System.Web.UI.WebControls.WebParts.ToolZone>besturingselement.</xref:System.Web.UI.WebControls.WebParts.ToolZone> De aanwezigheid van die speciaal getypte zone op een webpagina die ervoor zorgt dat een bepaalde weergavemodus worden toegevoegd aan de verzameling waarnaar wordt verwezen door de eigenschap SupportedDisplayModes is. Bijvoorbeeld, als een webpagina bevat een <xref:System.Web.UI.WebControls.WebParts.EditorZone>zone maar niet een <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zone en vervolgens de bewerkingsmodus voor de weergave een van de ondersteunde modi op die pagina is, maar de catalogus weergavemodus wordt niet ondersteund.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.EditorZone>      > [!NOTE] > De SupportedDisplayModes eigenschap verschilt van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>-eigenschap die verwijst naar een verzameling met alle weergavemodus die beschikbaar voor de huidige zijn <xref:System.Web.UI.WebControls.WebParts.WebPartManager>beheren, zelfs wanneer die worden niet ondersteund op een bepaalde pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>"
  example:
  - "The following code example shows the programmatic use of the SupportedDisplayModes property. The code uses this property to populate the list with only the display modes available in the current Web page.  \n  \n There are three supported display modes on this page: browse, design, and edit. The first two are always available, and the edit mode is available in this code example because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. The catalog and connect display modes are not shown, because their corresponding zones are not on this page.  \n  \n [!code-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_388_1.aspx)]\n [!code-cs[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_388_1.aspx)]  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> die de set bevat <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objecten beschikbaar is op een bepaalde webpagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee wordt een waarde die aangeeft of de status van aangepaste personalisatiegegevens beheerd door de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement is gewijzigd op een webpagina."
  remarks: "De eigenschap IPersonalizable.IsDirty biedt een manier voor aanroepers om te bepalen of persoonlijke gegevens die wordt beheerd door de status de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement is gewijzigd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Wanneer gebruikers aanpassen paginaniveau details, bijvoorbeeld door het wijzigen van pagina-indeling, maken of verwijderen van verbindingen en het toevoegen of verwijderen van besturingselementen, de persoonlijke gegevens worden beheerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement verandert.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Dit is een Pass Through-methode waarmee de waarde van de beveiligde geretourneerd voor aanroepers <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>eigenschap, die niet rechtstreeks toegankelijk zijn voor aanroepers.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>      > [!NOTE] > De IPersonalizable.IsDirty-eigenschap niet wordt aangegeven of waarden personalizable-eigenschap of afzonderlijke eigenschappen die betrekking hebben op het uiterlijk van afzonderlijke <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, zijn gewijzigd.</xref:System.Web.UI.WebControls.WebParts.WebPart> Personalisatie niveau wordt bijgehouden voor elk besturingselement afzonderlijk. De eigenschap IPersonalizable.IsDirty alleen wordt aangegeven of persoonlijke gegevens die op het paginaniveau van de en wordt beheerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement is gewijzigd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       De volgende lijst bevat enkele algemene exemplaren van persoonlijke instellingen, waardoor de IPersonalizable.IsDirty-eigenschap een waarde van `true`, waarmee wordt aangegeven dat de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement heeft een aantal gewijzigde personalisatiegegevens:-sluiten van een statische <xref:System.Web.UI.WebControls.WebParts.WebPart>(of server of gebruikersrol besturingselement) op een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      -Herstellen van een gesloten statische <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement uit een Paginacatalogus terug naar een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Het verplaatsen van een besturingselement in de zone of naar een andere zone.      -Het toevoegen van een besturingselement van een catalogus met <xref:System.Web.UI.WebControls.WebParts.WebPart>serverbesturingselementen is, of via een programma een besturingselement toe te voegen.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Maken van een verbinding tussen twee <xref:System.Web.UI.WebControls.WebParts.WebPart>via programmacode of via de gebruikersinterface (UI) van de verbinding regelt.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Verwijdering van een verbinding tussen twee <xref:System.Web.UI.WebControls.WebParts.WebPart>via programmacode of via de gebruikersinterface van de verbinding regelt.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Voor toegang tot de waarde van deze eigenschap, moet u uitbrengt de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>control-exemplaar voor de <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>interface; u kunt vervolgens alleen de <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>eigenschapswaarde.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates a simple usage of the IPersonalizable.IsDirty property, to indicate some common page personalization instances that cause a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control's personalization data to change.  \n  \n The code example has four parts:  \n  \n-   A user control that allows you to change display modes on a page that contains Web Parts controls.  \n  \n-   A source file that contains the code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an interface.  \n  \n-   A Web page that hosts all the controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the source file with the custom controls and the interface. Notice that the `IZipCode` interface exposes one method, and that this method as implemented in the custom `ZipCodeWebPart` control serves as a callback method to enable `ZipCodeWebPart` to act as a provider in a connection scenario. The other control, `WeatherWebPart`, acts as the consumer control in a connection; it can consume the particular interface provided by `ZipCodeWebPart`. In a real application, `WeatherWebPart` could consume a personalized ZIP Code value from the provider, and then provide graphical weather information to users.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; therefore, notice that the `Register` directive for this component at the top of the Web page contains only `TagPrefix` and `Namespace` attributes, without an `Assembly` attribute. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that it contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zones, with the first one containing the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. There is also a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, which contains a standard <xref:System.Web.UI.WebControls.Calendar> control that users can add to the page. The `<asp:connectionszone>` element provides a connection UI for users to create connections between controls. In the `Page_PreRender` method, notice that it checks to see whether the personalization data has changed and, if so, updates the text of `Label1`.  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_2.aspx)]  \n  \n After you load the page in a browser, try to create some of the scenarios listed in the Remarks section of this topic that will change the personalization data. As you make various changes, when a change involves one of the personalization scenarios tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, the text of the `Label1` control is displayed to indicate that personalization data has changed. For example, you can:  \n  \n-   Create a connection between controls by clicking the **Connect WebPart Controls** button.  \n  \n-   Use the **Display Mode** drop-down list control to switch the page to catalog mode, and add the **My Calendar** control to the second <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n-   Change the page back to browse mode, click on the verbs menu (shown with an arrow symbol in the title bar) for the **My Calendar** control, and select **Close** to close it and add it to the page catalog.  \n  \n-   Return the page to catalog mode, and add the **My Calendar** control back to the page.  \n  \n-   Use the **Display Mode** control to switch the page to design mode, and rearrange the layout of the controls by dragging one or more of them to another zone, or to a different position in the same zone."
  syntax:
    content: bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }
    return:
      type: System.Boolean
      description: "Een Boolean die aangeeft of de personalisatiegegevens van de status is gewijzigd."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retourneert eerder opgeslagen aangepaste status personalisatiegegevens die moet worden geladen naar de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  remarks: "Deze methode is een implementatie van de <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName>methode een manier biedt voor het besturingselement webonderdelen is ingesteld op rechtstreeks toegang tot de beveiligde <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName> Als deze methode wordt aangeroepen, wordt de aangepaste persoonlijke gegevens die wordt beheerd door de opgeslagen de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement en die is opgeslagen in het permanente gegevensarchief voor gebruik verderop in het initialisatieproces.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > In de meeste gevallen pagina en beheer developer-code niet hoeft te deze methode niet aanroepen omdat deze voornamelijk door het besturingselement webonderdelen is ingesteld als het mechanisme gebruikt wordt voor het ophalen van persoonlijke gegevens."
  syntax:
    content: void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> waarin de gegevens van de gebruikersstatus moet worden geladen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee slaat u aangepaste status personalisatiegegevens die wordt beheerd door de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement."
  remarks: "De methode IPersonalizable.Save is een implementatie van de <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName>methode een manier biedt voor het besturingselement webonderdelen is ingesteld op rechtstreeks toegang tot de beveiligde <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName> Als deze methode wordt aangeroepen, wordt alle aangepaste gegevens die wordt beheerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement met de permanente gegevensopslag is geconfigureerd voor een toepassing webonderdelen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > In de meeste gevallen pagina en beheer developer-code niet hoeft te deze methode niet aanroepen omdat deze voornamelijk door het besturingselement webonderdelen is ingesteld als het mechanisme gebruikt wordt voor het opslaan van persoonlijke gegevens."
  syntax:
    content: void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> waarin de gegevens van de gebruikersstatus worden opgeslagen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Van toepassing is status personalisatiegegevens naar de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement en de base methode voor het inschakelen van bijhouden van wijzigingen in de weergavestatus gegevens voor het besturingselement aanroepen."
  remarks: "De wijzigingen in de weergavestatus gegevens worden opgeslagen in een <xref:System.Web.UI.StateBag>object en kunnen worden geopend via het besturingselement <xref:System.Web.UI.Control.ViewState%2A>eigenschap.</xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.StateBag>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hiermee wordt een waarde waarmee de onderliggende besturingselementen moet zichtbaar zijn."
  remarks: "De <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement overschrijft de base <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>altijd retourneer een waarde van eigenschap `true` voor de eigenschap Visible.</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Hoewel de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement zelf niet zichtbaar is, de eigenschap Visible moet worden ingesteld op `true` zodat de onderliggende besturingselementen standaard zichtbaar zijn.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Als u de waarde van de eigenschap Visible probeert, deze altijd wordt een fout gegenereerd omdat de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement heeft het gedrag base eigenschap genegeerd en wordt voorkomen dat een willekeurige waarde toewijzen aan de eigenschap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Deze eigenschap is geen bindbare in visual designers, maar is bindbare tijdens runtime. Zie voor meer informatie <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "Een Boolean die aangeeft of een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement en de onderliggende besturingselementen kunnen worden weergegeven. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>in alle gevallen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Een poging gedaan een waarde toewijzen aan de eigenschap."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  id: WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op nadat een dynamische <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of andere serverbesturingselement is toegevoegd aan een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone om aan te geven dat het besturingselement is toegevoegd."
  remarks: "De gebeurtenis WebPartAdded is nuttig voor die aangeeft dat een dynamische-besturingselementen (toegevoegd via een programma, in plaats van dat is gedeclareerd in de paginamarkup) is toegevoegd aan een zone. In combinatie met de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>methode, de gebeurtenis biedt ontwikkelaars een manier om te werken van de gebruikersinterface (UI) of anders Waarschuw gebruikers dat een besturingselement is toegevoegd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  id: WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op tijdens het proces van het toevoegen van een dynamische <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of een ander serverbesturingselement naar een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone."
  remarks: "De WebPartAdding-gebeurtenis wordt geactiveerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>methode nadat het proces van het toevoegen van een besturingselement aan een zone is gestart.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> Deze gebeurtenis biedt een kans om het proces annuleert voordat deze voltooid is. Als het proces toe te voegen geslaagd is, deze gebeurtenis wordt gevolgd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Pagina-ontwikkelaars kunnen aangepaste handlers opgeven voor de gebeurtenis door toe te voegen de `OnWebPartAdding` kenmerk de `<asp:webpartmanager>` element in een pagina en de naam van een aangepaste methode toewijzen aan het kenmerk."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  id: WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op wanneer een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement (of server of de gebruiker) van een pagina is verwijderd."
  remarks: "De gebeurtenis WebPartClosed geeft aan dat een besturingselement is gesloten, door een gebruiker of via een programma. Sluit een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement betekent dat u wilt verwijderen van een pagina, zodat deze niet wordt weergegeven, en deze in een speciale te plaatsen dat object bevat een afkorting voor een Paginacatalogus.</xref:System.Web.UI.WebControls.WebParts.WebPart> Een Paginacatalogus, wat overeenkomt met de <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>bepalen, verwijzingen naar gesloten onderhoudt <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen voor elke pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Als een <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>besturingselement is gedeclareerd voor een pagina binnen een <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zone, gebruikers kunnen een pagina in de catalogus weergavemodus schakelen en opnieuw toevoegen aan een pagina besturingselementen die eerder zijn gesloten.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       De gebeurtenis WebPartClosed is gekoppeld aan de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>methode, die zowel de gebeurtenis zich voordoet en biedt een handler voor.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>       Pagina ontwikkelaars een aangepaste handler voor de gebeurtenis kunnen toevoegen door toe te voegen een `OnWebPartClosed` kenmerk de `<asp:webpartmanager>` element in een pagina en de naam van een aangepaste methode vervolgens toe te wijzen aan het kenmerk."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  id: WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op tijdens het proces van het verwijderen van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (of server of gebruikersrol besturingselement) van een pagina."
  remarks: "De WebPartClosing-gebeurtenis wordt geactiveerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>methode wanneer de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement is bezig te sluiten van een besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> Als het verwijderen van het besturingselement geslaagd is, deze gebeurtenis wordt gevolgd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Pagina-ontwikkelaars kunnen een aangepaste handler opgeven voor de gebeurtenis door toe te voegen de `OnWebPartClosed` kenmerk de `asp:webpartmanager>` element in een pagina en de naam van een aangepaste methode toewijzen aan het kenmerk.       Normaal gesproken wanneer de WebPartClosing gebeurtenis treedt op als direct resultaat van het sluiten van een gebruiker een <xref:System.Web.UI.WebControls.WebParts.WebPart>beheer, de gebeurtenis kan worden geannuleerd.</xref:System.Web.UI.WebControls.WebParts.WebPart> Er is echter een scenario waarin de gebeurtenis kan niet worden geannuleerd. Als een <xref:System.Web.UI.WebControls.WebParts.WebPartZone>besturingselement wordt verwijderd, de <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen hierin moeten alle gesloten, anders ze zouden worden zwevende.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> In dit geval de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>wordt gesloten bepalen de <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, niet de gebruiker.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> En wanneer de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement bezig aanroepen is de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>methode om te sluiten die elk beheren, en de WebPartClosing-gebeurtenis wordt geactiveerd, wordt de gebeurtenis (standaard) kan niet worden geannuleerd omdat de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>nodig heeft om de taak van het opschonen van de besturingselementen van de zone te voltooien.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  id: WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op nadat een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of andere serverbesturingselement is verwijderd uit een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone."
  remarks: "De gebeurtenis WebPartDeleted is nuttig voor die aangeeft dat een dynamische-besturingselementen (toegevoegd via een programma, in plaats van dat is gedeclareerd in de paginamarkup) zijn verwijderd uit een zone. In combinatie met de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>methode, de gebeurtenis biedt ontwikkelaars een manier om te werken van de gebruikersinterface (UI) of anders Waarschuw gebruikers dat een besturingselement is verwijderd.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  id: WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op tijdens het proces van het permanent verwijderen van een exemplaar van een dynamische <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of een ander serverbesturingselement uit een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone."
  remarks: "De WebPartDeleting-gebeurtenis wordt geactiveerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>methode tijdens het proces van het verwijderen van een dynamische besturingselement (een die programmatisch of door een gebruiker via de gebruikersinterface van webonderdelen is toegevoegd).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> De gebeurtenis biedt de mogelijkheid om te annuleren voordat deze is voltooid. Als de verwijdering is voltooid, wordt deze gebeurtenis gevolgd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Pagina-ontwikkelaars kunnen aangepaste handlers opgeven voor de gebeurtenis door toe te voegen de `OnWebPartDeleting` kenmerk de `<asp:webpartmanager>` element in een pagina en de naam van een aangepaste methode toewijzen aan het kenmerk."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  id: WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op nadat een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselement is verplaatst naar een andere locatie op een webpagina."
  remarks: "Deze gebeurtenis geldt voor zowel (gedeclareerd in de opmaak van een webpagina) statische en dynamische besturingselementen. Deze is gekoppeld aan de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Omdat de gebeurtenis treedt op nadat een verplaatsing voltooid is, kunnen ontwikkelaars een gebeurtenis-handler als een melding wilt maken voor gebruikers, validatie of enige andere acties omvatten. U kunt toevoegen om een gebeurtenis-handler toevoegen, een `OnWebPartMoved` kenmerk de `<asp:webpartmanager>` -element in een pagina, en wijst u de naam van een aangepaste methode met het kenmerk."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  id: WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op tijdens het proces voor het verplaatsen van een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of een ander serverbesturingselement die is opgenomen in een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone."
  remarks: "De WebPartMoving gebeurtenis treedt op wanneer een <xref:System.Web.UI.WebControls.WebParts.WebPart>of andere serverbesturingselement is verplaatst in een eigen zone of naar een andere zone.</xref:System.Web.UI.WebControls.WebParts.WebPart> Dit kan gebeuren wanneer een gebruiker een besturingselement wordt gesleept, en wanneer er een programmatische verplaatsing.       De WebPartMoving-gebeurtenis wordt geactiveerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>methode en biedt de mogelijkheid om te annuleren kopieerproces voordat deze voltooid is.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Als de verplaatsing is voltooid en het besturingselement in de nieuwe positie geplaatst, deze gebeurtenis wordt gevolgd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Pagina ontwikkelaars kunnen maken die een aangepaste handler voor de gebeurtenis door toe te voegen de `OnWebPartMoving` kenmerk de `<asp:webpartmanager>` -element en de naam van een aangepaste methode toewijzen aan het kenmerk."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  id: WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Wordt een verwijzing naar alle <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen bijgehouden door de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> besturingselement op een webpagina."
  remarks: "De eigenschap WebParts wordt gebruikt door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement voor het bijhouden van alle <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen die deel uitmaken van <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zones op de pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Hoewel de verzameling alleen-lezen is, u kunt toegang tot afzonderlijke <xref:System.Web.UI.WebControls.WebParts.WebPart>programmatisch beheert via de collectie en maak de wijzigingen toe.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Is het mogelijk om een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement geplaatst op een pagina buiten een <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zone, wat in het besturingselement niet bijgehouden resulteert door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>beheren of waarnaar wordt verwezen in de verzameling webonderdelen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Er is echter weinig reden om te gebruiken een <xref:System.Web.UI.WebControls.WebParts.WebPart>buiten een zone beheren omdat deze vervolgens de functionaliteit van de webonderdelen verliest en als een normale serverbesturingselement fungeert.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Een type besturingselement dat kan worden geplaatst in een zone of een aangepaste <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement, een standaard-ASP.NET-besturingselementen, een besturingselement of een aangepaste serverbesturingselement kan worden behandeld als een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement tijdens runtime.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Wanneer een besturingselement dat is niet een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement wordt geplaatst een <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zone tijdens runtime ASP.NET het besturingselement met verpakt een <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>object, zodat het besturingselement als een echte functioneren kan <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Daarom met behulp van de eigenschap WebParts, het <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement kunt bijhouden elk type besturingselement van de server, ongeacht of deze is afgeleid van de <xref:System.Web.UI.WebControls.WebParts.WebPart>klasse.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the WebParts property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that in the declarative markup for the Web page, within the `<asp:webpartzone>` element there are two standard ASP.NET server controls. Although these do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, because they are in a zone they will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, and thus will be included in the collection referenced by the WebParts property. You could also add custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, user controls, or custom server controls in this zone, and they would be handled the same way.  \n  \n [!code-vb[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_992_1.aspx)]\n [!code-cs[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_992_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **WebPart Count** button, the code uses the WebParts property to return the count of controls in the collection. If you click the **Hide Calendar Title** button, the code changes the calendar so that it renders with only a border and not a title."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCollection&quot;> </xref> die verwijzingen bevat naar een reeks <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  id: WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op nadat een specifieke verbinding tot stand is gebracht tussen <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen (of server of de gebruiker)."
  remarks: "De gebeurtenis WebPartsConnected is gekoppeld aan de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> De gebeurtenis is nuttig omdat nadat u weet dat er een verbinding voltooid is, kan u informeren over de gebruiker van het feit of zelfs de gebruikersinterface (UI) van de pagina wijzigen. Bijvoorbeeld, u mogelijk wilt weergeven van een afbeelding die wordt voorgesteld een verbinding tussen twee besturingselementen of een kort bericht weergeven en wijzigt de weergavemodus pagina terug naar de modus Bladeren.       Pagina ontwikkelaars een aangepaste gebeurtenis-handler kunnen koppelen aan deze gebeurtenis door toe te voegen de `OnWebPartsConnected` kenmerk de `<asp:webpartmanager>` -element in de pagina en de naam van een aangepaste methode toewijzen aan het kenmerk."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  id: WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op tijdens het maken van een verbinding tussen <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen (of de server of de gebruiker besturingselementen geplaatst een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone)."
  remarks: "De WebPartsConnecting-gebeurtenis wordt geactiveerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>methode, en er een waarschuwing gestuurd dat het verbindingsproces is gestart (bijvoorbeeld een gebruiker is een besturingselement geselecteerd en een connect werkwoord geklikt), maar nog niet is voltooid.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> De gebeurtenis biedt de mogelijkheid om te annuleren van een verbinding voordat deze voltooid is. Als de verbinding is voltooid, wordt deze gebeurtenis gevolgd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Pagina ontwikkelaars een aangepaste handler voor de gebeurtenis kunnen toevoegen door toe te voegen de `OnWebPartsConnecting` kenmerk de `<asp:webpartmanager>` -element en de naam van een aangepaste methode toewijzen aan het kenmerk."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  id: WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op nadat de verbinding tussen twee <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselementen is beëindigd."
  remarks: "De gebeurtenis WebPartsDisconnected is gekoppeld aan de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>methode.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> De gebeurtenis is nuttig omdat nadat u weet dat er een verbinding is verbroken, kan u informeren over de gebruiker, een aantal acties opschoning uitvoeren in de code of andere wijzigingen aanbrengen in de gebruikersinterface (UI).       Pagina ontwikkelaars een aangepaste gebeurtenis-handler kunnen koppelen aan deze gebeurtenis door toe te voegen de `OnWebPartsDisConnected` kenmerk de `<asp:webpartmanager>` -element in de pagina en de naam van een aangepaste methode toewijzen aan het kenmerk."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  id: WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Deze gebeurtenis treedt op tijdens het proces van de verbinding verbreekt tussen eerder was verbonden <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> of serverbesturingselementen."
  remarks: "De WebPartsDisconnecting-gebeurtenis wordt geactiveerd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>methode en geeft u het feit dat een gebruiker op een term disconnect heeft geklikt of de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>anders methode is aangeroepen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> De gebeurtenis biedt de mogelijkheid om te annuleren van een verbinding wilt beëindigen voordat deze voltooid is. Als de verbinding is met succes voltooid, wordt deze gebeurtenis gevolgd door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Pagina ontwikkelaars een aangepaste handler voor de gebeurtenis kunnen toevoegen door toe te voegen de `OnWebPartsDisconnecting` kenmerk de `<asp:webpartmanager>` -element en de naam van een aangepaste methode toewijzen aan het kenmerk.       Wanneer de gebeurtenis WebPartsDisconnecting wordt gegenereerd als direct resultaat van een gebruiker actie die een verbinding wordt beëindigd, kunnen de gebeurtenis normaal kan worden geannuleerd. Er zijn echter enkele scenario&quot;s waarin de gebeurtenis kan niet worden geannuleerd. Het eerste scenario is, als een <xref:System.Web.UI.WebControls.WebParts.WebPartZone>besturingselement wordt verwijderd, de <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen hierin moeten alle gesloten, anders ze zouden worden zwevende.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> In dit geval de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>wordt gesloten bepalen de <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen, niet de gebruiker en deze ook moet kunnen worden beëindigd of dat de verbindingen van alle verbonden besturingselementen zonder een kans onderbreking, zodat het kan het proces van het opruimen en sluiten van alle besturingselementen worden voltooid.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Daarom standaard de WebPartsDisconnecting dient methode kan niet worden geannuleerd in dit scenario. Zie voor een bijbehorende gebeurtenis die kan worden geannuleerd, de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>       Het tweede scenario waarin de WebPartsDisconnecting-gebeurtenis kan niet worden geannuleerd is wanneer de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>methode is aangeroepen (this bijvoorbeeld aangeroepen tijdens elke aanvraag naar een pagina) en er is een type conflict in de bestaande verbindingen op een pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Bijvoorbeeld, misschien besturingselement x in een gebruiker verbinding maakt met besturingselement y, maar besturingselement x z beheren door een gedeelde gebruiker verbinding maakt en besturingselement x is nog niet toegestaan om meerdere verbindingen. In dit geval de instellingen van de afzonderlijke gebruiker voor de verbinding voorrang, en de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement het conflict is opgelost door het aanroepen van de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>methode en eind van de verbinding tussen x en z voor de desbetreffende gebruiker.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Worden omdat deze verbinding wordt verbroken essentieel is voor het oplossen van het conflict, standaard de WebPartsDisconnecting gebeurtenis kan niet geannuleerd in dit scenario.       Het derde scenario waarin de WebPartsDisconnecting-methode kan niet worden geannuleerd is wanneer een <xref:System.Web.UI.WebControls.WebParts.WebPart>of serverbesturingselement dat momenteel is verbonden is verwijderd of gesloten.</xref:System.Web.UI.WebControls.WebParts.WebPart> Omdat het besturingselement wordt definitief uit de pagina moet worden verwijderd, is het logische noodzakelijk de verbinding niet verwijderen. Daarom, wanneer de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement roept de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>methode die op hun beurt verhoogt de gebeurtenis WebPartsDisconnecting en standaard is geen mogelijkheid bestaat voor annuleren van de gebeurtenis.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  id: Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Wordt een verwijzing naar een verzameling van alle de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zones op een webpagina."
  remarks: "De eigenschap Zones wordt gebruikt door de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>besturingselement om bij te houden de <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zones op een webpagina.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Houd er rekening mee dat de eigenschap niet verwijzen naar alle typen zones; Hierin wordt verwezen naar alleen zones die zijn afgeleid van de <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>klasse, met inbegrip van <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zones.</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Hoewel de verzameling waarnaar wordt verwezen door de eigenschap alleen-lezen is, kunt u deze kunt gebruiken voor toegang tot de afzonderlijke objecten in de verzameling en programmatisch mee te werken."
  example:
  - "The following code example demonstrates how to use the Zones property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone controls. Notice that in the declarative markup for the Web page, there are two `<asp:webpartzone>` elements, each containing a server control. In the `<script>` section of the page, the code uses the Zones property to access the individual zones, listing all the zone IDs and then changing the background color on the second zone.  \n  \n [!code-cs[WebParts_WebPartManager_Zones#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_860_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Zones#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_860_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **List Zone IDs** button, the code uses the Zones property to list the IDs of all zones in the collection. If you click the **Change Zone BackColor** button, the code changes the background color of the second zone."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneCollection&quot;> </xref> die verwijst naar een reeks <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zones."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.EndOfStreamException
  isExternal: true
  name: System.IO.EndOfStreamException
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventHandler
  nameWithType: WebPartAuthorizationEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TransformerTypeCollection
  nameWithType: TransformerTypeCollection
  fullName: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPoint
  nameWithType: ProviderConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPoint
  nameWithType: ConsumerConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartTransformer
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartTransformer
  nameWithType: WebPartTransformer
  fullName: System.Web.UI.WebControls.WebParts.WebPartTransformer
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionCollection
  nameWithType: WebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnection
  nameWithType: WebPartConnection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCollection
  nameWithType: WebPartDisplayModeCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
- uid: System.Web.UI.WebControls.WebParts.ErrorWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ErrorWebPart
  nameWithType: ErrorWebPart
  fullName: System.Web.UI.WebControls.WebParts.ErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
- uid: System.Web.UI.WebControls.WebParts.WebPartPersonalization
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartPersonalization
  nameWithType: WebPartPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.GenericWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: GenericWebPart
  nameWithType: GenericWebPart
  fullName: System.Web.UI.WebControls.WebParts.GenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventHandler
  nameWithType: WebPartDisplayModeEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventHandler
  nameWithType: WebPartDisplayModeCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPointCollection
  nameWithType: ConsumerConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPointCollection
  nameWithType: ProviderConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManagerInternals
  nameWithType: WebPartManagerInternals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventArgs
  nameWithType: WebPartAuthorizationEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventArgs
  nameWithType: WebPartDisplayModeEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventArgs
  nameWithType: WebPartDisplayModeCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventArgs
  nameWithType: WebPartEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventArgs
  nameWithType: WebPartCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventArgs
  nameWithType: WebPartAddingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventArgs
  nameWithType: WebPartMovingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventArgs
  nameWithType: WebPartConnectionsEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventArgs
  nameWithType: WebPartConnectionsCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventHandler
  nameWithType: WebPartEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventHandler
  nameWithType: WebPartCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventHandler
  nameWithType: WebPartAddingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventHandler
  nameWithType: WebPartMovingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCollection
  nameWithType: WebPartCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventHandler
  nameWithType: WebPartConnectionsEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventHandler
  nameWithType: WebPartConnectionsCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneCollection
  nameWithType: WebPartZoneCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections
  nameWithType: WebPartManager.ActivateConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart
  nameWithType: WebPartManager.AddWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting
  nameWithType: WebPartManager.BeginWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing
  nameWithType: WebPartManager.BeginWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts
  nameWithType: WebPartManager.CanConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript
  nameWithType: WebPartManager.CheckRenderClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart
  nameWithType: WebPartManager.CloseWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts
  nameWithType: WebPartManager.ConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart
  nameWithType: WebPartManager.CopyWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers
  nameWithType: WebPartManager.CreateAvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: WebPartManager.CreateControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes
  nameWithType: WebPartManager.CreateDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID
  nameWithType: WebPartManager.CreateDynamicConnectionID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID
  nameWithType: WebPartManager.CreateDynamicWebPartID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart
  nameWithType: WebPartManager.CreateErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization
  nameWithType: WebPartManager.CreatePersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart
  nameWithType: WebPartManager.CreateWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart
  nameWithType: WebPartManager.DeleteWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart
  nameWithType: WebPartManager.DisconnectWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts
  nameWithType: WebPartManager.DisconnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting
  nameWithType: WebPartManager.EndWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing
  nameWithType: WebPartManager.EndWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart
  nameWithType: WebPartManager.ExportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus
  nameWithType: WebPartManager.Focus
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints
  nameWithType: WebPartManager.GetConsumerConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager
  nameWithType: WebPartManager.GetCurrentWebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle
  nameWithType: WebPartManager.GetDisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl
  nameWithType: WebPartManager.GetExportUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart
  nameWithType: WebPartManager.GetGenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints
  nameWithType: WebPartManager.GetProviderConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart
  nameWithType: WebPartManager.ImportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized
  nameWithType: WebPartManager.IsAuthorized
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState
  nameWithType: WebPartManager.LoadControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState
  nameWithType: WebPartManager.LoadCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart
  nameWithType: WebPartManager.MoveWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart
  nameWithType: WebPartManager.OnAuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated
  nameWithType: WebPartManager.OnConnectionsActivated
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating
  nameWithType: WebPartManager.OnConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged
  nameWithType: WebPartManager.OnDisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging
  nameWithType: WebPartManager.OnDisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit
  nameWithType: WebPartManager.OnInit
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender
  nameWithType: WebPartManager.OnPreRender
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged
  nameWithType: WebPartManager.OnSelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging
  nameWithType: WebPartManager.OnSelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload
  nameWithType: WebPartManager.OnUnload
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded
  nameWithType: WebPartManager.OnWebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding
  nameWithType: WebPartManager.OnWebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed
  nameWithType: WebPartManager.OnWebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing
  nameWithType: WebPartManager.OnWebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted
  nameWithType: WebPartManager.OnWebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting
  nameWithType: WebPartManager.OnWebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved
  nameWithType: WebPartManager.OnWebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving
  nameWithType: WebPartManager.OnWebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected
  nameWithType: WebPartManager.OnWebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting
  nameWithType: WebPartManager.OnWebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected
  nameWithType: WebPartManager.OnWebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting
  nameWithType: WebPartManager.OnWebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript
  nameWithType: WebPartManager.RegisterClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render
  nameWithType: WebPartManager.Render
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState
  nameWithType: WebPartManager.SaveControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState
  nameWithType: WebPartManager.SaveCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPartManager.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart
  nameWithType: WebPartManager.SetSelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState
  nameWithType: WebPartManager.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
