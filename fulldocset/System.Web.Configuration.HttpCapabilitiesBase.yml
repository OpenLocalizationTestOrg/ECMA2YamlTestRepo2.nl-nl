### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.HttpCapabilitiesBase
  id: HttpCapabilitiesBase
  children:
  - System.Web.Configuration.HttpCapabilitiesBase.#ctor
  - System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  - System.Web.Configuration.HttpCapabilitiesBase.Adapters
  - System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.AOL
  - System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  - System.Web.Configuration.HttpCapabilitiesBase.Beta
  - System.Web.Configuration.HttpCapabilitiesBase.Browser
  - System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  - System.Web.Configuration.HttpCapabilitiesBase.Browsers
  - System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  - System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  - System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  - System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  - System.Web.Configuration.HttpCapabilitiesBase.CDF
  - System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Cookies
  - System.Web.Configuration.HttpCapabilitiesBase.Crawler
  - System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  - System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  - System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Frames
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  - System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  - System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  - System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  - System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  - System.Web.Configuration.HttpCapabilitiesBase.Id
  - System.Web.Configuration.HttpCapabilitiesBase.Init
  - System.Web.Configuration.HttpCapabilitiesBase.InputType
  - System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.IsColor
  - System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  - System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  - System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  - System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  - System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  - System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  - System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  - System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  - System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  - System.Web.Configuration.HttpCapabilitiesBase.Platform
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  - System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  - System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  - System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  - System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.Tables
  - System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  - System.Web.Configuration.HttpCapabilitiesBase.Type
  - System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  - System.Web.Configuration.HttpCapabilitiesBase.VBScript
  - System.Web.Configuration.HttpCapabilitiesBase.Version
  - System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Win16
  - System.Web.Configuration.HttpCapabilitiesBase.Win32
  langs:
  - csharp
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase
  fullName: System.Web.Configuration.HttpCapabilitiesBase
  type: Class
  summary: "Biedt toegang tot de gedetailleerde informatie over de mogelijkheden van de clientbrowser."
  remarks: "HttpCapabilitiesBase is de basisklasse van waaruit de <xref:System.Web.HttpBrowserCapabilities>klasse is afgeleid.</xref:System.Web.HttpBrowserCapabilities> HttpCapabilitiesBase biedt een groot aantal alleen-lezen eigenschappen die type veilige toegang tot een browser mogelijkheden woordenlijst bieden. U hebt toegang tot de <xref:System.Web.HttpBrowserCapabilities>klasse via de <xref:System.Web.HttpRequest.Browser%2A>eigenschap die wordt blootgelegd door de ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName>eigenschap.</xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpBrowserCapabilities>"
  example:
  - "The following example shows how to access information about the browser.  \n  \n [!code-cs[HttpCapabilitiesBase#1](~/add/codesnippet/csharp/t-system.web.configurati_61_1.aspx)]\n [!code-vb[HttpCapabilitiesBase#1](~/add/codesnippet/visualbasic/t-system.web.configurati_61_1.aspx)]"
  syntax:
    content: 'public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService'
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.IFilterResolutionService
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HttpCapabilitiesBase()
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HttpCapabilitiesBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Maakt een nieuw exemplaar van de <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> klasse."
  syntax:
    content: public HttpCapabilitiesBase ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  id: ActiveXControls
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser ondersteuning biedt voor ActiveX-besturingselementen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports ActiveX controls.  \n  \n [!code-cs[HttpCapabilitiesBase.ActiveXControls#1](~/add/codesnippet/csharp/p-system.web.configurati_350_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.ActiveXControls#1](~/add/codesnippet/visualbasic/p-system.web.configurati_350_1.aspx)]"
  syntax:
    content: public bool ActiveXControls { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt het ActiveX-besturingselementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  id: Adapters
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert de verzameling adapters beschikbaar besturingselement."
  syntax:
    content: public System.Collections.IDictionary Adapters { get; }
    return:
      type: System.Collections.IDictionary
      description: "De verzameling van geregistreerde besturingselement adapters."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Adapters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  id: AddBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: AddBrowser(String)
  nameWithType: HttpCapabilitiesBase.AddBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt om een vermelding toevoegen aan de interne verzameling browsers waarvoor mogelijkheden worden herkend."
  syntax:
    content: public void AddBrowser (string browserName);
    parameters:
    - id: browserName
      type: System.String
      description: "De naam van de browser om toe te voegen."
  overload: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL
  id: AOL
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AOL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de client een browser America Online (AOL)."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is an AOL browser.  \n  \n [!code-cs[HttpCapabilitiesBase.AOL#1](~/add/codesnippet/csharp/p-system.web.configurati_269_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.AOL#1](~/add/codesnippet/visualbasic/p-system.web.configurati_269_1.aspx)]"
  syntax:
    content: public bool AOL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een browser AOL is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.AOL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  id: BackgroundSounds
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt het afspelen van achtergrondgeluiden met behulp van de <xref uid=&quot;langword_csharp_&lt;bgsounds&gt;&quot; name=&quot;&lt;bgsounds&gt;&quot; href=&quot;&quot;> </xref> HTML-element."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports playing background sounds.  \n  \n [!code-cs[HttpCapabilitiesBase.BackgroundSounds#1](~/add/codesnippet/csharp/p-system.web.configurati_72_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/add/codesnippet/visualbasic/p-system.web.configurati_72_1.aspx)]"
  syntax:
    content: public bool BackgroundSounds { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt het afspelen achtergrondgeluiden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta
  id: Beta
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Beta
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser een bètaversie."
  remarks: "Beta-versie browsers kunnen onvoorspelbaar gedrag vertonen."
  example:
  - "The following code example shows how to determine whether the browser is a beta version.  \n  \n [!code-cs[HttpCapabilitiesBase.Beta#1](~/add/codesnippet/csharp/p-system.web.configurati_76_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Beta#1](~/add/codesnippet/visualbasic/p-system.web.configurati_76_1.aspx)]"
  syntax:
    content: public bool Beta { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een bètaversie is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Beta*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser
  id: Browser
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt de browser tekenreeks (indien aanwezig) die is verzonden door de browser in de <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> aanvraag-header."
  remarks: ''
  example:
  - "The following code example shows how to determine the `User-Agent` request header sent by the browser.  \n  \n [!code-vb[HttpCapabilitiesBase.Browser#1](~/add/codesnippet/visualbasic/p-system.web.configurati_201_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Browser#1](~/add/codesnippet/csharp/p-system.web.configurati_201_1.aspx)]"
  syntax:
    content: public string Browser { get; }
    return:
      type: System.String
      description: "De inhoud van de <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> aanvraag-header verzonden door de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  id: BrowserCapabilitiesProvider
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Web.Configuration.HttpCapabilitiesProvider&quot;> </xref> object voor de huidige browser."
  syntax:
    content: public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }
    return:
      type: System.Web.Configuration.HttpCapabilitiesProvider
      description: "De <xref href=&quot;System.Web.Configuration.HttpCapabilitiesProvider&quot;> </xref> object voor de huidige browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  id: Browsers
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een <xref href=&quot;System.Collections.ArrayList&quot;> </xref> van de browsers in de <xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>woordenlijst.</xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>"
  syntax:
    content: public System.Collections.ArrayList Browsers { get; }
    return:
      type: System.Collections.ArrayList
      description: "Een <xref href=&quot;System.Collections.ArrayList&quot;> </xref> van de browsers in de <xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>woordenlijst.</xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.Browsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  id: CanCombineFormsInDeck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser ondersteunt dekken die meerdere formulieren, zoals afzonderlijke kaarten bevatten."
  remarks: "De eigenschap CanCombineFormsInDeck geldt alleen voor WML-compatibele mobiele apparaten. Indien waar, uitvoer de adapter meerdere vormen van dezelfde pagina als kaarten van een enkel dek waar mogelijk."
  example:
  - "The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.  \n  \n [!code-cs[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/add/codesnippet/csharp/p-system.web.configurati_320_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/add/codesnippet/visualbasic/p-system.web.configurati_320_1.aspx)]"
  syntax:
    content: public virtual bool CanCombineFormsInDeck { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt dekken die meerdere formulieren bevatten; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  id: CanInitiateVoiceCall
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of het apparaat browser geschikt is voor het initiëren van een telefoongesprek."
  remarks: "De eigenschap CanInitiateVoiceCall geldt alleen voor WML-compatibele mobiele apparaten."
  example:
  - "The following code example shows how to determine whether the browser device is capable of initiating a voice call.  \n  \n [!code-cs[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/add/codesnippet/csharp/p-system.web.configurati_5_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/add/codesnippet/visualbasic/p-system.web.configurati_5_1.aspx)]"
  syntax:
    content: public virtual bool CanInitiateVoiceCall { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het apparaat van de browser is geschikt voor het initiëren van een telefoongesprek; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  id: CanRenderAfterInputOrSelectElement
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser ondersteuning biedt voor pagina-inhoud volgende WML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: "De eigenschap CanRenderAfterInputOrSelectElement geldt alleen voor WML-compatibele mobiele apparaten."
  example:
  - "The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/add/codesnippet/csharp/def23b48-6df6-4cb2-be79-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/add/codesnippet/visualbasic/def23b48-6df6-4cb2-be79-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderAfterInputOrSelectElement { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteuning biedt voor pagina-inhoud na HTML <xref uid=&quot;langword_csharp_&lt;select&gt; &quot; name=&quot;&lt;select&gt; &quot; href=&quot;&quot;> </xref>of <xref uid=&quot;langword_csharp_&lt;input&gt; &quot; name=&quot;&lt;input&gt; &quot; href=&quot;&quot;> </xref>elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  id: CanRenderEmptySelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser leeg HTML ondersteunt <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/add/codesnippet/csharp/p-system.web.configurati_70_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/add/codesnippet/visualbasic/p-system.web.configurati_70_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderEmptySelects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser lege HTML ondersteunt <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  id: CanRenderInputAndSelectElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser WML ondersteunt <xref uid=&quot;langword_csharp_INPUT&quot; name=&quot;INPUT&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_SELECT&quot; name=&quot;SELECT&quot; href=&quot;&quot;> </xref> elementen samen op dezelfde kaart."
  remarks: "De eigenschap CanRenderInputAndSelectElementsTogether geldt alleen voor WML-compatibele mobiele apparaten."
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/add/codesnippet/csharp/f29696c5-098f-4bb4-bc52-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/add/codesnippet/visualbasic/f29696c5-098f-4bb4-bc52-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderInputAndSelectElementsTogether { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser WML ondersteunt <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementen samen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  id: CanRenderMixedSelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser WML ondersteunt <xref uid=&quot;langword_csharp_&lt;option&gt;&quot; name=&quot;&lt;option&gt;&quot; href=&quot;&quot;> </xref> elementen die beide opgeven <xref uid=&quot;langword_csharp_onpick&quot; name=&quot;onpick&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> kenmerken."
  remarks: "De eigenschap CanRenderMixedSelects geldt alleen voor WML-compatibele mobiele apparaten.       Als `false`, `onpick` waarden worden weergegeven als hyperlinks en `value` kenmerken vereisen een `<do>` element voor terugposten."
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/add/codesnippet/csharp/p-system.web.configurati_159_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/add/codesnippet/visualbasic/p-system.web.configurati_159_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderMixedSelects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser WML ondersteunt <xref uid=&quot;langword_csharp_&lt;option&gt;&quot; name=&quot;&lt;option&gt;&quot; href=&quot;&quot;> </xref> elementen die beide opgeven <xref uid=&quot;langword_csharp_onpick&quot; name=&quot;onpick&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> kenmerken; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  id: CanRenderOneventAndPrevElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser WML ondersteunt <xref uid=&quot;langword_csharp_&lt;onevent&gt;&quot; name=&quot;&lt;onevent&gt;&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_&lt;prev&gt;&quot; name=&quot;&lt;prev&gt;&quot; href=&quot;&quot;> </xref> elementen die naast elkaar worden gebruikt binnen dezelfde WML kaart."
  remarks: "De eigenschap CanRenderOneventAndPrevElementsTogether geldt alleen voor WML-compatibele mobiele apparaten.       Als `false`, WML `<onevent>` en `<prev>` elementen die naast elkaar worden gebruikt binnen dezelfde WML kaart wordt niet correct weergegeven."
  example:
  - "The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/add/codesnippet/csharp/3effd139-a28b-4ed4-a597-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/add/codesnippet/visualbasic/3effd139-a28b-4ed4-a597-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderOneventAndPrevElementsTogether { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser WML ondersteunt <xref uid=&quot;langword_csharp_&lt;onevent&gt;&quot; name=&quot;&lt;onevent&gt;&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_&lt;prev&gt;&quot; name=&quot;&lt;prev&gt;&quot; href=&quot;&quot;> </xref> elementen die naast elkaar worden gebruikt binnen dezelfde WML kaart; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  id: CanRenderPostBackCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser ondersteuning biedt voor WML kaarten voor terugposten."
  remarks: "De eigenschap CanRenderPostBackCards geldt alleen voor WML-compatibele mobiele apparaten browsers.       Als `false`, terugposten netwerkkaarten niet correct worden weergegeven door de browser."
  example:
  - "The following code example shows how to determine whether the browser supports WML cards for postback.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/add/codesnippet/csharp/p-system.web.configurati_38_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/add/codesnippet/visualbasic/p-system.web.configurati_38_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderPostBackCards { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser WML kaarten voor terugposten ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  id: CanRenderSetvarZeroWithMultiSelectionList
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser WML ondersteunt <xref uid=&quot;langword_csharp_&lt;setvar&gt;&quot; name=&quot;&lt;setvar&gt;&quot; href=&quot;&quot;> </xref> elementen met een <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> kenmerk 0."
  remarks: "De eigenschap CanRenderSetvarZeroWithMultiSelectionList geldt alleen voor WML-compatibele mobiele apparaten.       Als `false`, HTML `<setvar>` elementen met een `value` kenmerk van `0` niet correct weergegeven."
  example:
  - "The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/add/codesnippet/csharp/965cbaf2-04ba-434c-aba7-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/add/codesnippet/visualbasic/965cbaf2-04ba-434c-aba7-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser WML ondersteunt <xref uid=&quot;langword_csharp_&lt;setvar&gt;&quot; name=&quot;&lt;setvar&gt;&quot; href=&quot;&quot;> </xref> elementen met een <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> kenmerk van <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  id: CanSendMail
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt het verzenden van e-mail met behulp van de HTML-code <xref uid=&quot;langword_csharp_&lt;mailto&gt;&quot; name=&quot;&lt;mailto&gt;&quot; href=&quot;&quot;> </xref> element voor het weergeven van elektronische adressen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports sending e-mail by using the HTML `<mailto>` element for displaying electronic addresses.  \n  \n [!code-vb[HttpCapabilitiesBase.CanSendMail#1](~/add/codesnippet/visualbasic/p-system.web.configurati_221_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.CanSendMail#1](~/add/codesnippet/csharp/p-system.web.configurati_221_1.aspx)]"
  syntax:
    content: public virtual bool CanSendMail { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt het verzenden van e-mail met behulp van de HTML-code <xref uid=&quot;langword_csharp_&lt;mailto&gt;&quot; name=&quot;&lt;mailto&gt;&quot; href=&quot;&quot;> </xref> element voor het weergeven van elektronische adressen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  id: Capabilities
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt om op te halen van de gedefinieerde mogelijkheden van de browser."
  syntax:
    content: public System.Collections.IDictionary Capabilities { get; set; }
    return:
      type: System.Collections.IDictionary
      description: "De gedefinieerde mogelijkheden van de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Capabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF
  id: CDF
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CDF
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser Channel Definition Format (CDF) voor webcast ondersteunt opgehaald."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports CDF.  \n  \n [!code-vb[HttpCapabilitiesBase.CDF#1](~/add/codesnippet/visualbasic/p-system.web.configurati_293_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.CDF#1](~/add/codesnippet/csharp/p-system.web.configurati_293_1.aspx)]"
  syntax:
    content: public bool CDF { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser CDF ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CDF*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  id: ClrVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de versie van .NET Framework die op de client is geïnstalleerd."
  remarks: "De eigenschap ClrVersion wordt alleen ondersteund als de browser Internet Explorer versie 5.0 en hoger is.       Als .NET Framework is niet geïnstalleerd op de client, wordt de waarde van de elementen van versie geretourneerd is `0, 0,-1,-1`.       Als meer dan één versie van .NET Framework is geïnstalleerd op de client, wordt de eigenschap ClrVersion de meest recente versie."
  syntax:
    content: public Version ClrVersion { get; }
    return:
      type: System.Version
      description: "De common language runtime <xref:System.Version>.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  id: Cookies
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser cookies ondersteunt."
  remarks: "De eigenschap Cookies geeft aan of de browsertoepassing cookies ondersteunt. Als de gebruiker heeft de cookies in de toepassing in uitgeschakeld, wordt de eigenschap Cookies niet beïnvloed."
  example:
  - "The following code example shows how to determine whether the browser supports cookies.  \n  \n [!code-vb[HttpCapabilitiesBase.Cookies#1](~/add/codesnippet/visualbasic/p-system.web.configurati_7_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Cookies#1](~/add/codesnippet/csharp/p-system.web.configurati_7_1.aspx)]"
  syntax:
    content: public bool Cookies { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser cookies ondersteunt anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  id: Crawler
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser een search-engine webcrawler is opgehaald."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the client is a search engine Web crawler.  \n  \n [!code-vb[HttpCapabilitiesBase.Crawler#1](~/add/codesnippet/visualbasic/p-system.web.configurati_34_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Crawler#1](~/add/codesnippet/csharp/p-system.web.configurati_34_1.aspx)]"
  syntax:
    content: public bool Crawler { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een zoekmachine is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Crawler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Maakt een nieuw exemplaar van de <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> moet worden gebruikt."
  syntax:
    content: public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);
    parameters:
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>moet worden gemaakt.</xref:System.IO.TextWriter>"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "Een nieuw exemplaar van de <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> moet worden gebruikt."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "De methode kan geen exemplaar maken van <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  id: DefaultSubmitButtonLimit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert het maximum aantal indienen knoppen die zijn toegestaan voor een formulier."
  remarks: "De eigenschap DefaultSubmitButtonLimit vertegenwoordigt voornamelijk het aantal zachte sleutels die beschikbaar op een mobiel apparaat compatibel is met WML zijn.       Formulieren webpagina voor mobiele apparaten kunnen bevatten een <xref:System.Web.UI.MobileControls.SelectionList>object en meer dan één <xref:System.Web.UI.MobileControls.Command>besturingselement.</xref:System.Web.UI.MobileControls.Command> </xref:System.Web.UI.MobileControls.SelectionList> De DefaultSubmitButtonLimit kunt u kiezen welke van de <xref:System.Web.UI.MobileControls.Command>besturingselementen moeten worden toegewezen aan een voorlopig sleutel op apparaten die meerdere zachte sleutels hebben.</xref:System.Web.UI.MobileControls.Command>"
  syntax:
    content: public virtual int DefaultSubmitButtonLimit { get; }
    return:
      type: System.Int32
      description: "Het maximum aantal indienen knoppen die zijn toegestaan voor een formulier."
  overload: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  id: DisableOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: DisableOptimizedCacheKey()
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt om het gebruik van een geoptimaliseerde Cachesleutel uitschakelen."
  syntax:
    content: public void DisableOptimizedCacheKey ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  id: EcmaScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u het versienummer van ECMAScript die ondersteuning biedt voor de browser."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.  \n  \n [!code-cs[HttpCapabilitiesBase.EcmaScriptVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_75_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_75_1.aspx)]"
  syntax:
    content: public Version EcmaScriptVersion { get; }
    return:
      type: System.Version
      description: "Het versienummer van ECMAScript die ondersteuning biedt voor de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames
  id: Frames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Frames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser ondersteuning biedt voor HTML-frames."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML frames.  \n  \n [!code-cs[HttpCapabilitiesBase.Frames#1](~/add/codesnippet/csharp/p-system.web.configurati_188_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Frames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_188_1.aspx)]"
  syntax:
    content: public bool Frames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser frames ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Frames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  id: GatewayMajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u het primaire versienummer van de draadloze gateway gebruikt voor toegang tot de server, indien bekend."
  syntax:
    content: public virtual int GatewayMajorVersion { get; }
    return:
      type: System.Int32
      description: "Het primaire versienummer van de draadloze gateway gebruikt voor toegang tot de server, indien bekend. De standaardwaarde is <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "Het primaire versienummer van de draadloze gateway kan niet worden geparseerd."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  id: GatewayMinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u het secundaire versienummer van de draadloze gateway gebruikt voor toegang tot de server, indien bekend."
  syntax:
    content: public virtual double GatewayMinorVersion { get; }
    return:
      type: System.Double
      description: "Het secundaire versienummer van de draadloze gateway gebruikt voor toegang tot de server, indien bekend. De standaardwaarde is <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "Het secundaire versienummer van de draadloze gateway kan niet worden geparseerd."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  id: GatewayVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de versie van de draadloze gateway gebruikt voor toegang tot de server, indien bekend."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the gateway is an `UP` gateway.  \n  \n [!code-vb[HttpCapabilitiesBase.GatewayVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_11_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.GatewayVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_11_1.aspx)]"
  syntax:
    content: public virtual string GatewayVersion { get; }
    return:
      type: System.String
      description: "Het versienummer van de draadloze gateway gebruikt voor toegang tot de server, indien bekend. De standaardwaarde is <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  id: GetClrVersions
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GetClrVersions()
  nameWithType: HttpCapabilitiesBase.GetClrVersions()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert alle versies van .NET Framework common language runtime die zijn geïnstalleerd op de client."
  remarks: "De methode GetClrVersions wordt alleen ondersteund als de browser Internet Explorer versie 5.0 of hoger is. Als de common language runtime is niet geïnstalleerd op de client, de eigenschap retourneert een matrix met één <xref:System.Version>object met de waarden 0, 0, -1, -1.</xref:System.Version>"
  syntax:
    content: public Version[] GetClrVersions ();
    parameters: []
    return:
      type: System.Version[]
      description: "Een matrix van <xref:System.Version>objecten.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  id: GetConfigCapabilities(System.String,System.Web.HttpRequest)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GetConfigCapabilities(String,HttpRequest)
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt om te retourneren van een exemplaar van <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> die de browser die de opgegeven gegenereerd <xref href=&quot;System.Web.HttpRequest&quot;> </xref>."
  syntax:
    content: public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);
    parameters:
    - id: configKey
      type: System.String
      description: "De naam van de configuratiesectie die browsermogelijkheden configureert."
    - id: request
      type: System.Web.HttpRequest
      description: "De <xref href=&quot;System.Web.HttpRequest&quot;> </xref> gegenereerd door de browser voor waaruit mogelijkheden en dit is meestal de huidige <xref href=&quot;System.Web.HttpRequest&quot;> </xref>."
    return:
      type: System.Web.Configuration.HttpCapabilitiesBase
      description: "Een exemplaar van <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> die de browser die de opgegeven gegenereerd <xref href=&quot;System.Web.HttpRequest&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  id: HasBackButton
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser een speciaal is **terug** knop."
  remarks: "Als `false`, een Koppelingsbesturingselement kan het nodig zijn wanneer een **terug** knop is niet beschikbaar."
  example:
  - "The following code example shows how to determine whether the browser has a dedicated **Back** button.  \n  \n [!code-vb[HttpCapabilitiesBase.HasBackButton#1](~/add/codesnippet/visualbasic/p-system.web.configurati_229_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.HasBackButton#1](~/add/codesnippet/csharp/p-system.web.configurati_229_1.aspx)]"
  syntax:
    content: public virtual bool HasBackButton { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een speciaal is **terug** knop; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  id: HidesRightAlignedMultiselectScrollbars
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de schuifbalk van een HTML-code <xref uid=&quot;langword_csharp_&lt;select multiple&gt;&quot; name=&quot;&lt;select multiple&gt;&quot; href=&quot;&quot;> </xref> element met een <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> waarde van kenmerk <xref uid=&quot;langword_csharp_right&quot; name=&quot;right&quot; href=&quot;&quot;> </xref> uit bij de rendering wordt verborgen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.  \n  \n [!code-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/add/codesnippet/visualbasic/35e8f82c-ef59-4da6-a070-_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/add/codesnippet/csharp/35e8f82c-ef59-4da6-a070-_1.aspx)]"
  syntax:
    content: public virtual bool HidesRightAlignedMultiselectScrollbars { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de schuifbalk van een HTML-code <xref uid=&quot;langword_csharp_&lt;select multiple&gt;&quot; name=&quot;&lt;select multiple&gt;&quot; href=&quot;&quot;> </xref> element met een <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> waarde van kenmerk <xref uid=&quot;langword_csharp_right&quot; name=&quot;right&quot; href=&quot;&quot;> </xref> is verborgen bij rendering, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  id: HtmlTextWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald of ingesteld van de volledig gekwalificeerde klassenaam van de <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> te gebruiken."
  syntax:
    content: public string HtmlTextWriter { get; set; }
    return:
      type: System.String
      description: "De naam van de volledig gekwalificeerde klasse van de <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> te gebruiken."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id
  id: Id
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Id
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt de interne id van de browser zoals opgegeven in het browserdefinitiebestand."
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "Interne id van de browser zoals opgegeven in het definitiebestand voor de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init
  id: Init
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Init()
  nameWithType: HttpCapabilitiesBase.Init()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Init()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt voor het initialiseren van een interne verzameling waarden."
  syntax:
    content: protected virtual void Init ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType
  id: InputType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.InputType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert het type van de invoer wordt ondersteund door de browser."
  remarks: "Mogelijke retourwaarden bevatten:-`virtualKeyboard`      -   `telephoneKeypad`      -   `keyboard`"
  example:
  - "The following code example shows how to determine the type of input support.  \n  \n [!code-cs[HttpCapabilitiesBase.InputType#1](~/add/codesnippet/csharp/p-system.web.configurati_266_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.InputType#1](~/add/codesnippet/visualbasic/p-system.web.configurati_266_1.aspx)]"
  syntax:
    content: public virtual string InputType { get; }
    return:
      type: System.String
      description: "Het type invoer ondersteund door de browser. De standaardwaarde is `telephoneKeypad`."
  overload: System.Web.Configuration.HttpCapabilitiesBase.InputType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  id: IsBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsBrowser(String)
  nameWithType: HttpCapabilitiesBase.IsBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser van de client hetzelfde zijn als de opgegeven browser."
  remarks: "De methode IsBrowser retourneert ook `true` als de definitie van de browser van de client neemt over van de opgegeven browser."
  syntax:
    content: public bool IsBrowser (string browserName);
    parameters:
    - id: browserName
      type: System.String
      description: "De opgegeven browser."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de clientbrowser hetzelfde als de opgegeven browser is. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  id: IsColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser weergegeven in een kleur heeft."
  remarks: ''
  example:
  - "The following code example shows whether the client's browser supports color. The returned value could be used to determine the appropriate image to send to the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.IsColor#1](~/add/codesnippet/csharp/p-system.web.configurati_262_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.IsColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_262_1.aspx)]"
  syntax:
    content: public virtual bool IsColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een kleurenweergave is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  id: IsMobileDevice
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser een herkende mobiel apparaat."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is a mobile device.  \n  \n [!code-cs[HttpCapabilitiesBase.IsMobileDevice#1](~/add/codesnippet/csharp/p-system.web.configurati_270_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/add/codesnippet/visualbasic/p-system.web.configurati_270_1.aspx)]"
  syntax:
    content: public virtual bool IsMobileDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een mobiel apparaat herkend is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpCapabilitiesBase.Item(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de waarde van de mogelijkheid opgegeven browser. Deze eigenschap is in C# en de indexeerfunctie voor de klasse."
  remarks: "In JScript kunt u de geïndexeerde standaardeigenschappen die zijn gedefinieerd door een type, maar u expliciet zelf niet definiëren. Echter, geven de `expando` kenmerk voor een klasse biedt automatisch een geïndexeerde standaardeigenschap van het type `Object` en een indextype `String`."
  syntax:
    content: public virtual string this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "De naam van de browser mogelijkheid om op te halen."
    return:
      type: System.String
      description: "De browser-functie met de naam van de opgegeven sleutel."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  id: JavaApplets
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser ondersteuning biedt voor Java."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports Java.  \n  \n [!code-cs[HttpCapabilitiesBase.JavaApplets#1](~/add/codesnippet/csharp/p-system.web.configurati_397_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.JavaApplets#1](~/add/codesnippet/visualbasic/p-system.web.configurati_397_1.aspx)]"
  syntax:
    content: public bool JavaApplets { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser Java ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  id: JavaScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser JavaScript ondersteunt."
  remarks: "Als de browser JavaScript ondersteunt maar uitvoeren van scripts is uitgeschakeld via een beveiligingsinstelling voor, de JavaScript-eigenschap retourneert `true` maar script wordt niet uitgevoerd op de browser."
  example:
  - "The following code example shows how to determine whether the browser supports JavaScript.  \n  \n [!code-vb[HttpCapabilitiesBase.JavaScript#1](~/add/codesnippet/visualbasic/p-system.web.configurati_318_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.JavaScript#1](~/add/codesnippet/csharp/p-system.web.configurati_318_1.aspx)]"
  syntax:
    content: public bool JavaScript { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser JavaScript ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.JavaScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  id: JScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de JScript-versie die ondersteuning biedt voor de browser."
  syntax:
    content: public Version JScriptVersion { get; }
    return:
      type: System.Version
      description: "De <xref:System.Version>van JScript die ondersteuning biedt voor de browser.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  id: MajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Opgehaald (geheel getal) van de primaire versienummer van de browser."
  remarks: ''
  example:
  - "The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MajorVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_241_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MajorVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_241_1.aspx)]"
  syntax:
    content: public int MajorVersion { get; }
    return:
      type: System.Int32
      description: "Het primaire versienummer van de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "De waarde van de primaire versie is niet een geheel getal."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  id: MaximumHrefLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de maximale lengte in tekens voor de <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> kenmerk van een HTML-code <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (anchor)-element."
  syntax:
    content: public virtual int MaximumHrefLength { get; }
    return:
      type: System.Int32
      description: "Het maximum aantal tekens voor de <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> kenmerk van een HTML-code <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (anchor)-element."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  id: MaximumRenderedPageSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt de maximale lengte van de pagina, in bytes, wat de browser kunt weergeven."
  remarks: "Verwerking door een tussenliggende gateway kunt het aantal bytes dat bereiken van de browser wijzigen. ASP.NET heeft deze limiet op paginagrootte niet afdwingen.       MaximumRenderedPageSize is vooral handig als u werkt met mobile clientbrowsers."
  syntax:
    content: public virtual int MaximumRenderedPageSize { get; }
    return:
      type: System.Int32
      description: "De maximale lengte van de pagina, in bytes, wat de browser kunt weergeven. De standaardwaarde is `2000`."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  id: MaximumSoftkeyLabelLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert de maximale lengte van de tekst die een label soft-sleutel kan worden weergegeven."
  remarks: "De eigenschap MaximumSoftkeyLabelLength geldt alleen voor WML-compatibele mobiele apparaten."
  example:
  - "The following code example shows how to determine the maximum length of the soft-key label for the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/add/codesnippet/csharp/p-system.web.configurati_145_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/add/codesnippet/visualbasic/p-system.web.configurati_145_1.aspx)]"
  syntax:
    content: public virtual int MaximumSoftkeyLabelLength { get; }
    return:
      type: System.Int32
      description: "De maximale lengte van de tekst die een label soft-sleutel kan worden weergegeven. De standaardwaarde is <xref uid=&quot;langword_csharp_5&quot; name=&quot;5&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  id: MinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "De secundaire opgehaald (dat wil zeggen, decimaal) versienummer van de browser."
  remarks: ''
  example:
  - "The following code example returns the minor version of the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MinorVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_84_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MinorVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_84_1.aspx)]"
  syntax:
    content: public double MinorVersion { get; }
    return:
      type: System.Double
      description: "Het secundaire versienummer van de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "Het secundaire versienummer in de header is niet geldig."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  id: MinorVersionString
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u het secundaire (decimaal) versienummer van de browser als een tekenreeks."
  syntax:
    content: public string MinorVersionString { get; }
    return:
      type: System.String
      description: "Het secundaire versienummer van de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  id: MobileDeviceManufacturer
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert de naam van de fabrikant van een mobiel apparaat, indien bekend."
  syntax:
    content: public virtual string MobileDeviceManufacturer { get; }
    return:
      type: System.String
      description: "De naam van de fabrikant van een mobiel apparaat, indien bekend. De standaardwaarde is <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  id: MobileDeviceModel
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de naam van het model van een mobiel apparaat, indien bekend."
  syntax:
    content: public virtual string MobileDeviceModel { get; }
    return:
      type: System.String
      description: "De naam van een mobiel apparaat, indien bekend. De standaardwaarde is <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  id: MSDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de versie van Microsoft HTML (MSHTML) Document Object Model (DOM) die ondersteuning biedt voor de browser."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.  \n  \n [!code-vb[HttpCapabilitiesBase.MSDomVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_222_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.MSDomVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_222_1.aspx)]"
  syntax:
    content: public Version MSDomVersion { get; }
    return:
      type: System.Version
      description: "Het nummer van de MSHTML DOM-versie die ondersteuning biedt voor de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  id: NumberOfSoftkeys
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
  fullName: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert het aantal zachte sleutels op een mobiel apparaat."
  remarks: "De eigenschap NumberOfSoftkeys geldt alleen voor WML-compatibele mobiele apparaten.       Voorlopig sleutels zijn speciale sleutels die de toepassing meestal naar aangepaste taken verwijzen kunt. Soft-sleutel tekst wordt weergegeven op het scherm in de linkerbenedenhoek en rechts."
  syntax:
    content: public virtual int NumberOfSoftkeys { get; }
    return:
      type: System.Int32
      description: "Het aantal zachte sleutels die worden ondersteund op een mobiel apparaat. De standaardwaarde is <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform
  id: Platform
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Platform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt de naam van het platform dat de client gebruikt, indien bekend is."
  remarks: "Enkele van de mogelijke waarden voor de eigenschap Platform als volgt zijn:- `Unknown`       -    `Win95`       -    `Win98`       -    `Windows NT 5.0` (Windows 2000) - `Windows NT 5.1` (Windows XP) - `WinNT` (alle andere versies van Windows NT) -`Win16`      -   `WinCE`      -   `Mac68K`      -   `MacPPC`      -   `UNIX`      -   `WebTV`"
  example:
  - "The following code example shows how to determine whether the browser is running on the Windows NT platform.  \n  \n [!code-cs[HttpCapabilitiesBase.Platform#1](~/add/codesnippet/csharp/p-system.web.configurati_235_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Platform#1](~/add/codesnippet/visualbasic/p-system.web.configurati_235_1.aspx)]"
  syntax:
    content: public string Platform { get; }
    return:
      type: System.String
      description: "Het besturingssysteem dat gebruikmaakt van de client, indien bekend is, anders de waarde is ingesteld op <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Platform*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  id: PreferredImageMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert het MIME-type van het type van de inhoud van de afbeelding is meestal de voorkeur van de browser."
  remarks: ''
  example:
  - "The following code example shows how to determine the type of image typically preferred by a browser.  \n  \n [!code-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/add/codesnippet/visualbasic/p-system.web.configurati_205_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.PreferredImageMime#1](~/add/codesnippet/csharp/p-system.web.configurati_205_1.aspx)]"
  syntax:
    content: public virtual string PreferredImageMime { get; }
    return:
      type: System.String
      description: "Het MIME-type van het type van de inhoud van de afbeelding is meestal de voorkeur van de browser. De standaardwaarde is <xref uid=&quot;langword_csharp_image/gif&quot; name=&quot;image/gif&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  id: PreferredRenderingMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert het MIME-type van het type inhoud doorgaans de voorkeur van de browser."
  remarks: ''
  example:
  - "The following code example shows how to determine the MIME type typically preferred by the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.PreferredRenderingMime#1](~/add/codesnippet/csharp/p-system.web.configurati_125_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/add/codesnippet/visualbasic/p-system.web.configurati_125_1.aspx)]"
  syntax:
    content: public virtual string PreferredRenderingMime { get; }
    return:
      type: System.String
      description: "Het MIME-type van het type inhoud doorgaans de voorkeur van de browser. De standaardwaarde is <xref uid=&quot;langword_csharp_text/html&quot; name=&quot;text/html&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  id: PreferredRenderingType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de algemene naam voor het type inhoud dat de browser de voorkeur geeft."
  remarks: ''
  example:
  - "The following code example shows how to determine the type of content that the browser prefers.  \n  \n [!code-cs[HttpCapabilitiesBase.PreferredRenderingType#1](~/add/codesnippet/csharp/p-system.web.configurati_61_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/add/codesnippet/visualbasic/p-system.web.configurati_61_1.aspx)]"
  syntax:
    content: public virtual string PreferredRenderingType { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_html32&quot; name=&quot;html32&quot; href=&quot;&quot;></xref>or <xref uid=&quot;langword_csharp_chtml10&quot; name=&quot;chtml10&quot; href=&quot;&quot;></xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_html32&quot; name=&quot;html32&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  id: PreferredRequestEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de aanvraag codering voorkeur door de browser."
  syntax:
    content: public virtual string PreferredRequestEncoding { get; }
    return:
      type: System.String
      description: "De aanvraag codering voorkeur door de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  id: PreferredResponseEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de Antwoordcodering voorkeur door de browser."
  syntax:
    content: public virtual string PreferredResponseEncoding { get; }
    return:
      type: System.String
      description: "De Antwoordcodering voorkeur door de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  id: RendersBreakBeforeWmlSelectAndInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser een regeleinde renders <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: "De eigenschap RendersBreakBeforeWmlSelectAndInput geldt alleen voor WML-compatibele mobiele apparaten.       Als `true`, inhoud volgende `<select>` of `<input>` items automatisch worden geplaatst op een nieuwe regel."
  example:
  - "The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/add/codesnippet/csharp/9303e792-7cc5-4e57-92b0-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/add/codesnippet/visualbasic/9303e792-7cc5-4e57-92b0-_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een regeleinde renders <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> of <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  id: RendersBreaksAfterHtmlLists
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser een regeleinde na lijstitem elementen worden opgehaald."
  remarks: "Als `true`, inhoud na lijstitem elementen worden automatisch geplaatst op een nieuwe regel."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after list-item elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/add/codesnippet/csharp/p-system.web.configurati_162_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/add/codesnippet/visualbasic/p-system.web.configurati_162_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterHtmlLists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een regeleinde renders na lijstitem elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  id: RendersBreaksAfterWmlAnchor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser een regeleinde renders na een zelfstandige HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (anchor)-element."
  remarks: "De eigenschap RendersBreaksAfterWmlAnchor geldt alleen voor WML-compatibele mobiele apparaten.       Als `true`, inhoud na een zelfstandige HTML `<a>` (anchor)-element worden automatisch geplaatst op een nieuwe regel."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_28_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/add/codesnippet/csharp/p-system.web.configurati_28_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterWmlAnchor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een regeleinde renders na een zelfstandige HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> () ankerelement; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  id: RendersBreaksAfterWmlInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser een regeleinde renders na een HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> element."
  remarks: "De eigenschap RendersBreaksAfterWmlInput geldt alleen voor WML-compatibele mobiele apparaten.       Als `true`, na een HTML-inhoud `<input>` element automatisch geplaatst op een nieuwe regel."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/add/codesnippet/csharp/p-system.web.configurati_299_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/add/codesnippet/visualbasic/p-system.web.configurati_299_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterWmlInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een regeleinde renders na een HTML <xref uid=&quot;langword_csharp_&lt;input&gt; &quot; name=&quot;&lt;input&gt; &quot; href=&quot;&quot;> </xref>element; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  id: RendersWmlDoAcceptsInline
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser voor mobiele apparaten een WML renders <xref uid=&quot;langword_csharp_do&quot; name=&quot;do&quot; href=&quot;&quot;> </xref>-gebaseerde formulier constructie als een inline-knop en niet als een voorlopig sleutel accepteren."
  remarks: "De eigenschap RendersWmlDoAcceptsInline geldt alleen voor WML-compatibele mobiele apparaten."
  example:
  - "The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/add/codesnippet/visualbasic/p-system.web.configurati_225_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/add/codesnippet/csharp/p-system.web.configurati_225_1.aspx)]"
  syntax:
    content: public virtual bool RendersWmlDoAcceptsInline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser voor mobiele apparaten een WML renders <xref uid=&quot;langword_csharp_do&quot; name=&quot;do&quot; href=&quot;&quot;> </xref>-gebaseerd formulier accepteren constructie als een knop inline; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  id: RendersWmlSelectsAsMenuCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser WML renders <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementen als menu kaarten, in plaats van een keuzelijst met invoervak."
  remarks: "De eigenschap RendersWmlSelectsAsMenuCards geldt alleen voor WML-compatibele mobiele apparaten."
  example:
  - "The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/add/codesnippet/visualbasic/p-system.web.configurati_310_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/add/codesnippet/csharp/p-system.web.configurati_310_1.aspx)]"
  syntax:
    content: public virtual bool RendersWmlSelectsAsMenuCards { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser renders WML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementen als menu kaarten; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  id: RequiredMetaTagNameValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt voor het produceren van een metalabel vereist voor sommige browsers."
  remarks: "Bedoeld voor uitsluitend intern gebruik. Sommige browsers vereisen een meta-tag vergelijkbaar met de volgende voor de browser om correct weer te geven.      ```   <META NAME=&quot;NAME&quot; CONTENT=&quot;VALUE&quot;>   ```"
  syntax:
    content: public virtual string RequiredMetaTagNameValue { get; }
    return:
      type: System.String
      description: "Een meta--code vereist voor sommige browsers."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  id: RequiresAttributeColonSubstitution
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser vereist dat dubbele punten in waarden van het kenmerk element wilt vervangen door een ander teken."
  remarks: "Dubbele punten in waarden van het kenmerk element wordt niet herkend door sommige browsers. Als `true`, een ander teken wordt vervangen door op de rendering en vermeld in de gegevens voor terugposten."
  example:
  - "The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/add/codesnippet/csharp/75aeaef6-dcfa-4061-9538-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/add/codesnippet/visualbasic/75aeaef6-dcfa-4061-9538-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresAttributeColonSubstitution { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser dubbele punten in waarden van het kenmerk element vereist wilt vervangen door een ander teken; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  id: RequiresContentTypeMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser moet u een HTML- <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> -element waarvoor de <xref uid=&quot;langword_csharp_content-type&quot; name=&quot;content-type&quot; href=&quot;&quot;> </xref> kenmerk is opgegeven."
  remarks: "Als `true`, serverbesturingselement adapters invoegen van de volgende code in de HTML-code `<head>` element van een webpagina: ```   <META HTTP-EQUIV=&quot;CONTENT-TYPE&quot; CONTENT=&quot;&quot;; CHARSET=&quot;&quot;>   ``` In dit voorbeeld `CONTENT` is de waarde die is geretourneerd door de <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A>-eigenschap en `charset` wordt de tekencodering gebruikt.</xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A>"
  example:
  - "The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/add/codesnippet/visualbasic/p-system.web.configurati_102_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/add/codesnippet/csharp/p-system.web.configurati_102_1.aspx)]"
  syntax:
    content: public virtual bool RequiresContentTypeMetaTag { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser moet u een HTML- <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> -element waarvoor de <xref uid=&quot;langword_csharp_content-type&quot; name=&quot;content-type&quot; href=&quot;&quot;> </xref> kenmerk is opgegeven, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  id: RequiresControlStateInSession
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser vereist dat de status van het onderhouden van sessies."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires control state to be maintained in sessions.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/add/codesnippet/csharp/p-system.web.configurati_387_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/add/codesnippet/visualbasic/p-system.web.configurati_387_1.aspx)]"
  syntax:
    content: public bool RequiresControlStateInSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser vereist status worden behouden in sessies. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  id: RequiresDBCSCharacter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser is een DBCS-tekenset vereist."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires a double-byte character set.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/add/codesnippet/visualbasic/p-system.web.configurati_51_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/add/codesnippet/csharp/p-system.web.configurati_51_1.aspx)]"
  syntax:
    content: public virtual bool RequiresDBCSCharacter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser een DBCS-tekenset vereist; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  id: RequiresHtmlAdaptiveErrorReporting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser niet-standaard foutberichten vereist."
  remarks: "Als `true`, de browser HTTP-foutberichten niet correct weergegeven. Server besturingselement netwerkadapters genereren om dit te corrigeren, een aangepaste foutenpagina voor de browser."
  example:
  - "The following code example shows how to determine whether the browser requires nonstandard error messages.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/add/codesnippet/csharp/2ba3dcba-bae8-4562-b395-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/add/codesnippet/visualbasic/2ba3dcba-bae8-4562-b395-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser vereist een niet-standaard foutberichten; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  id: RequiresLeadingPageBreak
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser voor het eerste element in de hoofdtekst van een webpagina om te worden van een HTML-code vereist <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> element."
  remarks: "Als `true`, server-control adapters invoegen een extra `<br>` element onmiddellijk toe na de `<body>` tag op in een webpagina."
  example:
  - "The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/add/codesnippet/visualbasic/p-system.web.configurati_195_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/add/codesnippet/csharp/p-system.web.configurati_195_1.aspx)]"
  syntax:
    content: public virtual bool RequiresLeadingPageBreak { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser moet het eerste element in de hoofdtekst van een webpagina om te worden van een HTML <xref uid=&quot;langword_csharp_BR&quot; name=&quot;BR&quot; href=&quot;&quot;> </xref> element; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  id: RequiresNoBreakInFormatting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt geen HTML <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> elementen opmaken regeleinden."
  remarks: "Als `true`, pagina&quot;s met de HTML-code worden niet correct weergegeven door de browser `<br>` element."
  example:
  - "The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/add/codesnippet/visualbasic/p-system.web.configurati_224_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/add/codesnippet/csharp/p-system.web.configurati_224_1.aspx)]"
  syntax:
    content: public virtual bool RequiresNoBreakInFormatting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser biedt geen ondersteuning voor HTML <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  id: RequiresOutputOptimization
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser vereist dat pagina&quot;s bevatten een grootte geoptimaliseerde vorm van markup language labels opgehaald."
  remarks: "Als `true`, server besturingselement netwerkadapters minimale uitvoer wilt verkleinen van de resulterende pagina gegenereerd.      > [!NOTE] > RequiresOutputOptimization voor de eigenschap retourneert `true` voor i-modus – compatibele browsers."
  example:
  - "The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/add/codesnippet/csharp/p-system.web.configurati_64_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/add/codesnippet/visualbasic/p-system.web.configurati_64_1.aspx)]"
  syntax:
    content: public virtual bool RequiresOutputOptimization { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser vereist dat pagina&quot;s bevatten van een formulier grootte geoptimaliseerde van markup language-tags. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  id: RequiresPhoneNumbersAsPlainText
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser ondersteunt kiezen op basis van tekst zonder opmaak, of of er speciale markup vereist."
  remarks: "De eigenschap RequiresPhoneNumbersAsPlainText geldt alleen voor browsers waarvoor de <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>eigenschap is `true`.</xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/add/codesnippet/csharp/p-system.web.configurati_169_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/add/codesnippet/visualbasic/p-system.web.configurati_169_1.aspx)]"
  syntax:
    content: public virtual bool RequiresPhoneNumbersAsPlainText { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser kiezen op basis van alleen; tekst zonder opmaak ondersteunt anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  id: RequiresSpecialViewStateEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser vereist <xref uid=&quot;langword_csharp_VIEWSTATE&quot; name=&quot;VIEWSTATE&quot; href=&quot;&quot;> </xref> waarden moeten speciaal worden gecodeerd."
  remarks: "HTTP is een staatloze protocol en `VIEWSTATE` is een mechanisme om clientwijzigingen te behouden voor meerdere aanvragen. Elk besturingselement op een webpagina bevat een <xref:System.Web.UI.Control.ViewState%2A>eigenschap aanduiden, waarbij de opeenstapeling van alle wijzigingen die door de client aangeeft.</xref:System.Web.UI.Control.ViewState%2A> Deze wijzigingen zijn op een pagina webformulieren gecodeerd in terugposten gegevens als de `value` van een HTML-code `<input>` element met een `type` kenmerk van `hidden`. Bijvoorbeeld: ```   <input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;t0PH_u56?cDxleHQ7P=&quot; />   ``` als `true`, niet-alfabetische tekens in de `VIEWSTATE` waarde wordt niet correct verzonden door de browser noch door een tussenliggende gateway. Om dit te corrigeren, vervang serverbesturingselement adapters niet-alfabetische tekens in de `VIEWSTATE` waarde met waarden die geen codering in HTTP-aanvragen vereisen."
  example:
  - "The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/add/codesnippet/csharp/ded66d43-c984-472a-ab07-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/add/codesnippet/visualbasic/ded66d43-c984-472a-ab07-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresSpecialViewStateEncoding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser vereist <xref uid=&quot;langword_csharp_VIEWSTATE&quot; name=&quot;VIEWSTATE&quot; href=&quot;&quot;> </xref> waarden speciaal gecodeerde, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  id: RequiresUniqueFilePathSuffix
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser vereist dat unieke formulieractie URL&quot;s."
  remarks: "Een zichzelf verwijzende HTML `<form>` element is een waarvoor de `action` kenmerk geeft u een eigen URL. Als `true`, zichzelf verwijzende formulieren niet de juiste resultaten retourneren. Dit komt door door de browser of een tussenliggende gateway in. Om dit te corrigeren, server besturingselement netwerkadapters een queryreeks standaard toevoegen (`__ufps=``uniquefilepathsuffix`) op de waarden van de URL-actie voor het formulier zelf verwijzen formulieren."
  example:
  - "The following code example shows how to determine whether the browser requires unique form-action URLs.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/add/codesnippet/visualbasic/p-system.web.configurati_74_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/add/codesnippet/csharp/p-system.web.configurati_74_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueFilePathSuffix { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser formulieractie unieke URL&quot;s vereist; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  id: RequiresUniqueHtmlCheckboxNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser vereist unieke <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> kenmerkwaarden die meerdere HTML <xref uid=&quot;langword_csharp_&lt;input type=&quot;checkbox&quot;&gt;&quot; name=&quot;&lt;input type=&quot;checkbox&quot;&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type=\"checkbox\">` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/add/codesnippet/csharp/p-system.web.configurati_384_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_384_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueHtmlCheckboxNames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser unieke vereist <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> kenmerkwaarden die meerdere HTML <xref uid=&quot;langword_csharp_&lt;input type=&quot;checkbox&quot;&gt;&quot; name=&quot;&lt;input type=&quot;checkbox&quot;&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  id: RequiresUniqueHtmlInputNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser vereist unieke <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> kenmerkwaarden die meerdere HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/add/codesnippet/csharp/p-system.web.configurati_285_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_285_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueHtmlInputNames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser unieke vereist <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> kenmerkwaarden die meerdere HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  id: RequiresUrlEncodedPostfieldValues
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of terugposten gegevens die worden verzonden door de browser wordt <xref uid=&quot;langword_csharp_UrlEncoded&quot; name=&quot;UrlEncoded&quot; href=&quot;&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser `UrlEncodes` postback data.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/add/codesnippet/visualbasic/f29bbebb-6fc1-44b9-b9d3-_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/add/codesnippet/csharp/f29bbebb-6fc1-44b9-b9d3-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUrlEncodedPostfieldValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het terugposten gegevens die worden verzonden door de browser, <xref uid=&quot;langword_csharp_UrlEncoded&quot; name=&quot;UrlEncoded&quot; href=&quot;&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  id: ScreenBitDepth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert de diepte van de weergave in bits per pixel."
  syntax:
    content: public virtual int ScreenBitDepth { get; }
    return:
      type: System.Int32
      description: "De diepte van de weergave, in bits per pixel. De standaardwaarde is <xref uid=&quot;langword_csharp_1&quot; name=&quot;1&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  id: ScreenCharactersHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert de geschatte hoogte van de weergave in de tekens."
  remarks: "De geretourneerde waarde kan worden afgeleid van de veronderstelde tekengrootte en de grootte van het werkelijke scherm pixel. De algoritme voor het bepalen van de hoogte wordt een combinatie van de standaard tekengrootten (uit een .config-bestand), browser-grootten (opnieuw uit een .config-bestand) en expliciete headers zijn verzonden door de browser. Sommige browsers mogelijk afhankelijk van de interne standaardwaarden die alleen bij benadering de werkelijke hoogte."
  syntax:
    content: public virtual int ScreenCharactersHeight { get; }
    return:
      type: System.Int32
      description: "De geschatte hoogte van de weergave wordt in de tekens. De standaardwaarde is <xref uid=&quot;langword_csharp_6&quot; name=&quot;6&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  id: ScreenCharactersWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert de geschatte breedte van de weergave in tekens."
  remarks: "De geretourneerde waarde kan worden afgeleid van de veronderstelde tekengrootte en de grootte van het werkelijke scherm pixel. Het algoritme voor het bepalen van de breedte gebruikt een combinatie van de standaard tekengrootten (uit een .config-bestand), apparaatspecifieke formaten (opnieuw vanuit een .config-bestand) en expliciete headers zijn verzonden door de apparaten. Deze waarden zijn niet noodzakelijkerwijs exacte (met name voor variabele breedte lettertypen, deze waarden bij benadering zijn). Sommige apparaten mogelijk zijn afhankelijk van de interne standaardwaarden die alleen bij benadering de werkelijke breedte."
  syntax:
    content: public virtual int ScreenCharactersWidth { get; }
    return:
      type: System.Int32
      description: "De geschatte breedte van de weergave wordt in tekens. De standaardwaarde is <xref uid=&quot;langword_csharp_12&quot; name=&quot;12&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  id: ScreenPixelsHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert de geschatte hoogte van de weergave in pixels."
  remarks: "De geretourneerde waarde kan worden afgeleid van de veronderstelde tekengrootte en tekenhoogte. De algoritme voor het bepalen van de hoogte pixel gebruikt een combinatie van de standaard tekengrootten (uit een .config-bestand), apparaatspecifieke formaten (opnieuw vanuit een .config-bestand) en expliciete headers zijn verzonden door de apparaten. Deze waarden zijn niet noodzakelijkerwijs exacte. Sommige apparaten mogelijk zijn afhankelijk van de interne standaardwaarden die alleen bij benadering de werkelijke hoogte."
  syntax:
    content: public virtual int ScreenPixelsHeight { get; }
    return:
      type: System.Int32
      description: "De geschatte hoogte van de weergave, in pixels. De standaardwaarde is <xref uid=&quot;langword_csharp_72&quot; name=&quot;72&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  id: ScreenPixelsWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Retourneert bij benadering van de weergave wordt de breedte in pixels."
  remarks: "De geretourneerde waarde kan worden afgeleid van de veronderstelde tekengrootte en de tekenbreedte. Het algoritme voor het bepalen van de pixelbreedte gebruikt een combinatie van de standaard tekengrootten (uit een .config-bestand), apparaatspecifieke formaten (opnieuw vanuit een .config-bestand) en expliciete headers zijn verzonden door de apparaten. Deze waarden zijn niet noodzakelijkerwijs exacte (met name voor variabele breedte lettertypen, deze waarden bij benadering zijn). Sommige apparaten mogelijk zijn afhankelijk van de interne standaardwaarden die alleen bij benadering de werkelijke breedte."
  syntax:
    content: public virtual int ScreenPixelsWidth { get; }
    return:
      type: System.Int32
      description: "De geschatte breedte van de weergave, in pixels. De standaardwaarde is <xref uid=&quot;langword_csharp_96&quot; name=&quot;96&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  id: SupportsAccesskeyAttribute
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_ACCESSKEY&quot; name=&quot;ACCESSKEY&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (anker) en <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: "De `accesskey` kenmerk breidt de mogelijkheden van beheer van formulieren en koppelingen in een webpagina voor platforms voor mobiele en toegankelijk is door het toewijzen van een voorlopig sleutel of een andere domeincontroller op het apparaat om te communiceren met de HTML `<a>` (anker) en `<input>` elementen."
  example:
  - "The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/add/codesnippet/csharp/p-system.web.configurati_98_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.configurati_98_1.aspx)]"
  syntax:
    content: public virtual bool SupportsAccesskeyAttribute { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_accesskey&quot; name=&quot;accesskey&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (anker) en <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  id: SupportsBodyColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_bgcolor&quot; name=&quot;bgcolor&quot; href=&quot;&quot;> </xref> kenmerk van de HTML-code <xref uid=&quot;langword_csharp_&lt;body&gt;&quot; name=&quot;&lt;body&gt;&quot; href=&quot;&quot;> </xref> element."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_366_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsBodyColor#1](~/add/codesnippet/csharp/p-system.web.configurati_366_1.aspx)]"
  syntax:
    content: public virtual bool SupportsBodyColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_bgcolor&quot; name=&quot;bgcolor&quot; href=&quot;&quot;> </xref> kenmerk van de HTML-code <xref uid=&quot;langword_csharp_&lt;body&gt;&quot; name=&quot;&lt;body&gt;&quot; href=&quot;&quot;> </xref> element; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  id: SupportsBold
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser HTML ondersteunt <xref uid=&quot;langword_csharp_&lt;b&gt;&quot; name=&quot;&lt;b&gt;&quot; href=&quot;&quot;> </xref> elementen op de vet weergegeven tekst opmaken."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsBold#1](~/add/codesnippet/visualbasic/p-system.web.configurati_211_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsBold#1](~/add/codesnippet/csharp/p-system.web.configurati_211_1.aspx)]"
  syntax:
    content: public virtual bool SupportsBold { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser HTML ondersteunt <xref uid=&quot;langword_csharp_&lt;b&gt;&quot; name=&quot;&lt;b&gt;&quot; href=&quot;&quot;> </xref> elementen opmaken vet; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  id: SupportsCacheControlMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_cache-control&quot; name=&quot;cache-control&quot; href=&quot;&quot;> </xref> waarde voor de <xref uid=&quot;langword_csharp_http-equiv&quot; name=&quot;http-equiv&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: "De `cache-control` waarde voor de `http-equiv` kenmerk HTML `<meta>` elementen controle over de client kunt opslaan in cache van de gedownloade inhoud, waaronder webpagina&quot;s. De volgende HTML-fragment toont een voorbeeld: ```   <META HTTP-EQUIV=&quot;CACHE-CONTROL&quot; CONTENT=&quot;NO-CACHE&quot;/>   ``` als `true`, het opnemen van dit label in de `<head>` element van een webpagina moet ervoor zorgen dat de browser opnieuw laden van inhoud van de server.       Als `false`, server besturingselement netwerkadapters een queryreeks standaard toevoegen (`__ufps=``uniquefilepathsuffix`) naar URL koppelingswaarden die nog geen een. Dit zorgt ervoor dat de browser opnieuw laden van inhoud van de server.       De eigenschap SupportsCacheControlMetaTag geldt ook voor de gelijkwaardige vorm van de HTTP-header:```   CACHE-CONTROL: NO-CACHE   ```"
  example:
  - "The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/add/codesnippet/csharp/p-system.web.configurati_207_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/add/codesnippet/visualbasic/p-system.web.configurati_207_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCacheControlMetaTag { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_cache-control&quot; name=&quot;cache-control&quot; href=&quot;&quot;> </xref> waarde voor de <xref uid=&quot;langword_csharp_http-equiv&quot; name=&quot;http-equiv&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  id: SupportsCallback
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser callback scripts ondersteunt."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports callback scripts.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsCallback#1](~/add/codesnippet/visualbasic/p-system.web.configurati_321_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsCallback#1](~/add/codesnippet/csharp/p-system.web.configurati_321_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser callback scripts ondersteunt. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  id: SupportsCss
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser Cascading stylesheets (CSS ondersteunt)."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports CSS.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsCss#1](~/add/codesnippet/csharp/p-system.web.configurati_129_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsCss#1](~/add/codesnippet/visualbasic/p-system.web.configurati_129_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCss { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser CSS ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  id: SupportsDivAlign
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: "HTML `<div>` elementen worden gebruikt om meerdere HTML-elementen zodat CSS-stijlen kunnen worden toegepast op deze als geheel. De `align` kenmerk wordt de horizontale uitlijning van een `<div>` groep op een webpagina."
  example:
  - "The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsDivAlign#1](~/add/codesnippet/csharp/p-system.web.configurati_329_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/add/codesnippet/visualbasic/p-system.web.configurati_329_1.aspx)]"
  syntax:
    content: public virtual bool SupportsDivAlign { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  id: SupportsDivNoWrap
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_nowrap&quot; name=&quot;nowrap&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: "HTML `<div>` elementen worden gebruikt om meerdere HTML-elementen zodat CSS-stijlen kunnen worden toegepast op deze als geheel. De `nowrap` kenmerk geeft aan dat de elementen die zijn opgenomen de `<div>` groep naast elkaar zonder wrapping naar een nieuwe regel moet blijven."
  example:
  - "The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/add/codesnippet/csharp/p-system.web.configurati_108_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/add/codesnippet/visualbasic/p-system.web.configurati_108_1.aspx)]"
  syntax:
    content: public virtual bool SupportsDivNoWrap { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_nowrap&quot; name=&quot;nowrap&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  id: SupportsEmptyStringInCookieValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser leeg ondersteunt (<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>) tekenreeksen in cookiewaarden."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/add/codesnippet/csharp/88f116fb-05a4-493a-9e0f-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/add/codesnippet/visualbasic/88f116fb-05a4-493a-9e0f-_1.aspx)]"
  syntax:
    content: public virtual bool SupportsEmptyStringInCookieValue { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser leeg ondersteunt (<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>) tekenreeksen in cookiewaarden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  id: SupportsFontColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_color&quot; name=&quot;color&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsFontColor#1](~/add/codesnippet/csharp/p-system.web.configurati_306_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_306_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_color&quot; name=&quot;color&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;font&gt; &quot; name=&quot;&lt;font&gt; &quot; href=&quot;&quot;> </xref>elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  id: SupportsFontName
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsFontName#1](~/add/codesnippet/visualbasic/p-system.web.configurati_341_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsFontName#1](~/add/codesnippet/csharp/p-system.web.configurati_341_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  id: SupportsFontSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_size&quot; name=&quot;size&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;font&gt; &quot; name=&quot;&lt;font&gt; &quot; href=&quot;&quot;> </xref>elementen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsFontSize#1](~/add/codesnippet/csharp/p-system.web.configurati_328_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/add/codesnippet/visualbasic/p-system.web.configurati_328_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_size&quot; name=&quot;size&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  id: SupportsImageSubmit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser ondersteunt het gebruik van een aangepaste installatiekopie in plaats van een standaardformulier knop verzenden."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsImageSubmit#1](~/add/codesnippet/csharp/p-system.web.configurati_33_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/add/codesnippet/visualbasic/p-system.web.configurati_33_1.aspx)]"
  syntax:
    content: public virtual bool SupportsImageSubmit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt het gebruik van een aangepaste installatiekopie in plaats van een verzendknop standaardformulier; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  id: SupportsIModeSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser symbolen i-modus ondersteunt."
  remarks: "De <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>eigenschap geldt alleen tot i-modus – compatibele apparaten.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>       I-telefoon-specifieke afbeeldingssymbolen voor i-modus – compatibele browsers ingesteld met behulp van de <xref:System.Web.UI.WebControls.Image.ImageUrl%2A>eigenschap.</xref:System.Web.UI.WebControls.Image.ImageUrl%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports i-mode symbols.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/add/codesnippet/visualbasic/p-system.web.configurati_346_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/add/codesnippet/csharp/p-system.web.configurati_346_1.aspx)]"
  syntax:
    content: public virtual bool SupportsIModeSymbols { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser symbolen i-modus ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  id: SupportsInputIStyle
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_istyle&quot; name=&quot;istyle&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: "De <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>eigenschap geldt alleen tot i-modus – compatibele apparaten.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>       De `istyle` kenmerk wordt gebruikt voor het instellen van de invoer stijl van een veld tekstinvoer i-modus – compatibele browsers."
  example:
  - "The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsInputIStyle#1](~/add/codesnippet/csharp/p-system.web.configurati_164_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/add/codesnippet/visualbasic/p-system.web.configurati_164_1.aspx)]"
  syntax:
    content: public virtual bool SupportsInputIStyle { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_istyle&quot; name=&quot;istyle&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  id: SupportsInputMode
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: "De eigenschap SupportsInputMode geldt alleen voor i-modus – compatibele apparaten.       De `MODE` kenmerk wordt gebruikt voor het instellen van de invoermodus van een invoer tekstveld i-modus – compatibele browsers."
  example:
  - "The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsInputMode#1](~/add/codesnippet/csharp/p-system.web.configurati_141_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/add/codesnippet/visualbasic/p-system.web.configurati_141_1.aspx)]"
  syntax:
    content: public virtual bool SupportsInputMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  id: SupportsItalic
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser HTML ondersteunt <xref uid=&quot;langword_csharp_&lt;i&gt;&quot; name=&quot;&lt;i&gt;&quot; href=&quot;&quot;> </xref> elementen cursief tekst opmaken."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsItalic#1](~/add/codesnippet/csharp/p-system.web.configurati_198_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsItalic#1](~/add/codesnippet/visualbasic/p-system.web.configurati_198_1.aspx)]"
  syntax:
    content: public virtual bool SupportsItalic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser HTML ondersteunt <xref uid=&quot;langword_csharp_&lt;i&gt;&quot; name=&quot;&lt;i&gt;&quot; href=&quot;&quot;> </xref> elementen cursief tekst; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  id: SupportsJPhoneMultiMediaAttributes
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser J Phone multimedia kenmerken ondersteunt."
  remarks: "De eigenschap SupportsJPhoneMultiMediaAttributes geldt alleen voor J-Phone – compatibele mobiele apparaten.       J telefoon is een markup language specificatie, op basis van HTML-code, voor J-telefoon-compatibele browsers. Als `true`, de browser ondersteuning biedt voor extra kenmerken voor HTML `<a>` (anker) en `<select>` elementen. De extra kenmerken die worden ondersteund als volgt zijn:-`src`      -   `soundstart`      -   `loop`      -   `volume`      -   `vibration`      -   `viblength`"
  example:
  - "The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/add/codesnippet/csharp/a19a3fd7-eca4-43f9-8389-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/add/codesnippet/visualbasic/a19a3fd7-eca4-43f9-8389-_1.aspx)]"
  syntax:
    content: public virtual bool SupportsJPhoneMultiMediaAttributes { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser J Phone multimedia kenmerken zijn ondersteunt. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  id: SupportsJPhoneSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser J-telefoon-specifieke afbeeldingssymbolen ondersteunt."
  remarks: "De eigenschap SupportsJPhoneSymbols geldt alleen voor J-Phone – compatibele mobiele apparaten.       J-telefoon-specifieke afbeeldingssymbolen voor J-telefoon-compatibele browsers ingesteld met behulp van de <xref:System.Web.UI.WebControls.Image.ImageUrl%2A>eigenschap.</xref:System.Web.UI.WebControls.Image.ImageUrl%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports J-Phone–specific picture symbols.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/add/codesnippet/csharp/p-system.web.configurati_401_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/add/codesnippet/visualbasic/p-system.web.configurati_401_1.aspx)]"
  syntax:
    content: public virtual bool SupportsJPhoneSymbols { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser J-telefoon-specifieke afbeeldingssymbolen ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  id: SupportsQueryStringInFormAction
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt een queryreeks in de <xref uid=&quot;langword_csharp_action&quot; name=&quot;action&quot; href=&quot;&quot;> </xref> kenmerkwaarde HTML <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: "Als `false`, queryreeksparameters worden verzonden, terugposten gegevens, als HTML `<input>` elementen met de `type` kenmerken ingesteld op `hidden`."
  example:
  - "The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/add/codesnippet/csharp/p-system.web.configurati_376_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/add/codesnippet/visualbasic/p-system.web.configurati_376_1.aspx)]"
  syntax:
    content: public virtual bool SupportsQueryStringInFormAction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt een queryreeks in de <xref uid=&quot;langword_csharp_action&quot; name=&quot;action&quot; href=&quot;&quot;> </xref> kenmerkwaarde HTML <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  id: SupportsRedirectWithCookie
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser cookies bij omleiden ondersteunt."
  remarks: "Met omhoog. Browser 4.1 of omhoog. Browser 3.2 is de <xref:System.Web.HttpResponse.Redirect%2A>methode gedraagt zich alsof de waarde van de eigenschap SupportsRedirectWithCookie van de <xref:System.Web.HttpBrowserCapabilities>-object is `false`, tenzij de <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>eigenschap in de <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A>sectie van Web.config expliciet is ingesteld op `true`.</xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> </xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> </xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.HttpResponse.Redirect%2A>       In ASP.NET 1.1, de opties voor deze instelling zijn `true` of `false`, maar met ASP.NET 2.0, de opties zijn uitgevouwen, en <xref:System.Web.HttpCookieMode>is nu de standaardinstelling.</xref:System.Web.HttpCookieMode> Als uw webtoepassing heeft de `cookieless` kenmerk van de `<sessionState>` sectie in het bestand Web.config is ingesteld op een Booleaanse waarde <xref:System.Web.HttpResponse.Redirect%2A>moeten werken zoals verwacht voor deze browsers.</xref:System.Web.HttpResponse.Redirect%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports cookies on redirection.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/add/codesnippet/visualbasic/p-system.web.configurati_97_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/add/codesnippet/csharp/p-system.web.configurati_97_1.aspx)]"
  syntax:
    content: public virtual bool SupportsRedirectWithCookie { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser cookies op omleiding ondersteunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  id: SupportsSelectMultiple
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser ondersteunt de <xref uid=&quot;langword_csharp_multiple&quot; name=&quot;multiple&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/add/codesnippet/csharp/p-system.web.configurati_289_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/add/codesnippet/visualbasic/p-system.web.configurati_289_1.aspx)]"
  syntax:
    content: public virtual bool SupportsSelectMultiple { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt de <xref uid=&quot;langword_csharp_multiple&quot; name=&quot;multiple&quot; href=&quot;&quot;> </xref> kenmerk HTML <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  id: SupportsUncheck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of het wissen van een gecontroleerde HTML <xref uid=&quot;langword_csharp_&lt;input type=checkbox&gt;&quot; name=&quot;&lt;input type=checkbox&gt;&quot; href=&quot;&quot;> </xref> element wordt weergegeven in de gegevens voor terugposten."
  remarks: "Als `false`, de waarde van de `checked` kenmerk HTML `<input type=checkbox>` elementen wordt weggelaten uit de gegevens voor terugposten."
  example:
  - "The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/add/codesnippet/visualbasic/p-system.web.configurati_253_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsUncheck#1](~/add/codesnippet/csharp/p-system.web.configurati_253_1.aspx)]"
  syntax:
    content: public virtual bool SupportsUncheck { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het wissen van een gecontroleerde HTML <xref uid=&quot;langword_csharp_&lt;input type=checkbox&gt;&quot; name=&quot;&lt;input type=checkbox&gt;&quot; href=&quot;&quot;> </xref> -element is gereflecteerde in terugposten gegevens, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  id: SupportsXmlHttp
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser ontvangende XML via HTTP ondersteunt."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports receiving XML over HTTP.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsXmlHttp#1](~/add/codesnippet/csharp/p-system.web.configurati_261_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/add/codesnippet/visualbasic/p-system.web.configurati_261_1.aspx)]"
  syntax:
    content: public virtual bool SupportsXmlHttp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser ondersteunt het ontvangende XML via HTTP; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  id: System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  isEii: true
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt om te vergelijken filters."
  syntax:
    content: int IFilterResolutionService.CompareFilters (string filter1, string filter2);
    parameters:
    - id: filter1
      type: System.String
      description: "Het eerste filter moet worden vergeleken."
    - id: filter2
      type: System.String
      description: "Het tweede filter moet worden vergeleken."
    return:
      type: System.Int32
      description: "1 if <code>filter1</code> is a parent of <code>filter2</code>; -1 if <code>filter2</code> is a parent of <code>filter1</code>; 0 if there is no parent-child relationship between <code>filter1</code> and <code>filter2</code>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  id: System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  isEii: true
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt om een filter te evalueren."
  syntax:
    content: bool IFilterResolutionService.EvaluateFilter (string filterName);
    parameters:
    - id: filterName
      type: System.String
      description: "Het filter moet worden geëvalueerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het filter is vastgesteld dat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables
  id: Tables
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Tables
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de browser HTML ondersteunt <xref uid=&quot;langword_csharp_&lt;table&gt;&quot; name=&quot;&lt;table&gt;&quot; href=&quot;&quot;> </xref> elementen."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<table>` elements.  \n  \n [!code-vb[HttpCapabilitiesBase.Tables#1](~/add/codesnippet/visualbasic/p-system.web.configurati_259_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Tables#1](~/add/codesnippet/csharp/p-system.web.configurati_259_1.aspx)]"
  syntax:
    content: public bool Tables { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser HTML ondersteunt <xref uid=&quot;langword_csharp_&lt;table&gt;&quot; name=&quot;&lt;table&gt;&quot; href=&quot;&quot;> </xref> elementen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Tables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  id: TagWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt om op te halen van het type van het object dat wordt gebruikt voor de labels voor de browser schrijven."
  syntax:
    content: public Type TagWriter { get; }
    return:
      type: System.Type
      description: "De <xref:System.Type>van het object dat wordt gebruikt voor de labels voor de browser schrijven.</xref:System.Type>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.TagWriter*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "Er is een parserfout."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type
  id: Type
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Type
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt de naam en het primaire (geheel getal) versienummer van de browser."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is Internet Explorer version 6.  \n  \n [!code-cs[HttpCapabilitiesBase.Type#1](~/add/codesnippet/csharp/p-system.web.configurati_44_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Type#1](~/add/codesnippet/visualbasic/p-system.web.configurati_44_1.aspx)]"
  syntax:
    content: public string Type { get; }
    return:
      type: System.String
      description: "De naam en het primaire versienummer van de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  id: UseOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
  fullName: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Intern gebruikt om op te halen van een waarde die aangeeft of de cachesleutel van een geoptimaliseerde te gebruiken."
  syntax:
    content: public bool UseOptimizedCacheKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>gebruik van een geoptimaliseerde Cachesleutel; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  id: VBScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de browser Visual Basic Scripting edition (VBScript ondersteunt)."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports VBScript.  \n  \n [!code-cs[HttpCapabilitiesBase.VBScript#1](~/add/codesnippet/csharp/p-system.web.configurati_206_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.VBScript#1](~/add/codesnippet/visualbasic/p-system.web.configurati_206_1.aspx)]"
  syntax:
    content: public bool VBScript { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser VBScript ondersteunt. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.VBScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version
  id: Version
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Version
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de volledige versienummer (geheel getal en decimale) van de browser als een tekenreeks."
  remarks: "De eigenschap Version retourneert een tekenreeks. In sommige gevallen kan de eigenschap Version mogelijk lettertekens bevatten, zoals in het geval van een browser of een clientapparaat dat wordt een bètaversie zoals &quot;7.0b.&quot; Als u de versie correct als een gegevenstype dat kan worden gebruikt in een numerieke vergelijking, samenvoegen van de <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>en <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A>eigenschapswaarden.</xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> </xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>"
  example:
  - "The following code example shows how to determine the Version of the browser. The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.  \n  \n [!code-vb[HttpCapabilitiesBase.Version#1](~/add/codesnippet/visualbasic/p-system.web.configurati_244_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Version#1](~/add/codesnippet/csharp/p-system.web.configurati_244_1.aspx)]"
  syntax:
    content: public string Version { get; }
    return:
      type: System.String
      description: "Het nummer van de volledige versie van de browser als een tekenreeks."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Version*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  id: W3CDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee haalt u de versie van de World Wide Web Consortium (W3C) XML-Document Object Model (DOM) die ondersteuning biedt voor de browser."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.  \n  \n [!code-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_110_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.W3CDomVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_110_1.aspx)]"
  syntax:
    content: public Version W3CDomVersion { get; }
    return:
      type: System.Version
      description: "Het nummer van het nummer van de W3C XML DOM-versie die ondersteuning biedt voor de browser."
  overload: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16
  id: Win16
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win16
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Haalt een waarde die aangeeft of de client een Win16-computer."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is running on a Win16-based computer.  \n  \n [!code-cs[HttpCapabilitiesBase.Win16#1](~/add/codesnippet/csharp/p-system.web.configurati_210_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Win16#1](~/add/codesnippet/visualbasic/p-system.web.configurati_210_1.aspx)]"
  syntax:
    content: public bool Win16 { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de browser wordt uitgevoerd op een computer met Win16; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Win16*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32
  id: Win32
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win32
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Hiermee wordt een waarde die aangeeft of de client een Win32-computer."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the client is a Win32-based computer.  \n  \n [!code-cs[HttpCapabilitiesBase.Win32#1](~/add/codesnippet/csharp/p-system.web.configurati_30_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Win32#1](~/add/codesnippet/visualbasic/p-system.web.configurati_30_1.aspx)]"
  syntax:
    content: public bool Win32 { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de client een Win32-computer; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Win32*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.HttpUnhandledException
  parent: System.Web
  isExternal: false
  name: HttpUnhandledException
  nameWithType: HttpUnhandledException
  fullName: System.Web.HttpUnhandledException
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HttpCapabilitiesBase()
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HttpCapabilitiesBase()
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Adapters
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AddBrowser(String)
  nameWithType: HttpCapabilitiesBase.AddBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AOL
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Beta
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browser
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesProvider
  parent: System.Web.Configuration
  isExternal: false
  name: HttpCapabilitiesProvider
  nameWithType: HttpCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browsers
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CDF
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Cookies
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Crawler
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DisableOptimizedCacheKey()
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey()
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Frames
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetClrVersions()
  nameWithType: HttpCapabilitiesBase.GetClrVersions()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions()
- uid: System.Version[]
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version[]
  spec.csharp:
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: Version[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetConfigCapabilities(String,HttpRequest)
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
- uid: System.Web.Configuration.HttpCapabilitiesBase
  parent: System.Web.Configuration
  isExternal: false
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase
  fullName: System.Web.Configuration.HttpCapabilitiesBase
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Id
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Init()
  nameWithType: HttpCapabilitiesBase.Init()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Init()
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.InputType
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsBrowser(String)
  nameWithType: HttpCapabilitiesBase.IsBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Item(String)
  nameWithType: HttpCapabilitiesBase.Item(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Item(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
  fullName: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Platform
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Tables
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
  fullName: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.VBScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win16
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win32
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AddBrowser
  nameWithType: HttpCapabilitiesBase.AddBrowser
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DisableOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetClrVersions
  nameWithType: HttpCapabilitiesBase.GetClrVersions
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetConfigCapabilities
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Init
  nameWithType: HttpCapabilitiesBase.Init
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsBrowser
  nameWithType: HttpCapabilitiesBase.IsBrowser
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Item
  nameWithType: HttpCapabilitiesBase.Item
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.CompareFilters
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
