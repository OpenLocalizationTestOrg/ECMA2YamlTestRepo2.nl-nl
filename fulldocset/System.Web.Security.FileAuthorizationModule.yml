### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FileAuthorizationModule
  id: FileAuthorizationModule
  children:
  - System.Web.Security.FileAuthorizationModule.#ctor
  - System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  - System.Web.Security.FileAuthorizationModule.Dispose
  - System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule
  fullName: System.Web.Security.FileAuthorizationModule
  type: Class
  summary: "Verifieert dat de gebruiker toegang heeft tot het aangevraagde bestand. Deze klasse kan niet worden overgenomen."
  remarks: "Deze module biedt autorisatieservices tegen bestandssysteem toegang toegangsbeheerlijsten (ACL&quot;s). Wanneer de `mode` kenmerk van de [verificatie-Element (ASP.NET-instellingenschema)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) configuratie-element is ingesteld op `Windows` zodat de <xref:System.Web.Security.WindowsAuthenticationModule>wordt gebruikt voor de toepassing de FileAuthorizationModule module zorgt ervoor dat de aanvragende gebruiker mag lees- of schrijftoegang tot de resource, afhankelijk van de term aanvraag voordat de aanvraag wordt uitgevoerd.</xref:System.Web.Security.WindowsAuthenticationModule> Zie voor meer informatie de <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>methode.</xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>"
  syntax:
    content: 'public sealed class FileAuthorizationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Maakt een exemplaar van de <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> klasse."
  remarks: "Deze constructor is niet bedoeld om te worden aangeroepen vanuit de toepassingscode.       ASP.NET roept deze constructor voor het maken van een exemplaar van de <xref:System.Web.Security.FileAuthorizationModule>klasse.</xref:System.Web.Security.FileAuthorizationModule> Na het aanroepen van de constructor, roept de <xref:System.Web.Security.FileAuthorizationModule.Init%2A>methode voor het initialiseren van de nieuwe <xref:System.Web.Security.FileAuthorizationModule>object.</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule.Init%2A>"
  syntax:
    content: public FileAuthorizationModule ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  id: CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hiermee wordt bepaald of de gebruiker toegang tot het aangevraagde bestand heeft."
  remarks: "De methode CheckFileAccessForUser controleert of de huidige gebruiker, dat wordt vertegenwoordigd door een toegangstoken Windows toegang tot het aangevraagde bestand in het bestandssysteem toegang-toegangsbeheerlijsten (ACL&quot;s krijgt). Het virtuele pad is toegewezen aan het pad van het fysieke bestandssysteem voordat de controle wordt uitgevoerd.       Als de HTTP-term gebruikt voor het maken van de aanvraag is `GET`, `POST`, of `HEAD`, de methode CheckFileAccessForUser wordt gecontroleerd voor leestoegang tot het bestand. Als een andere bewerking wordt gebruikt, controleert u de methode CheckFileAccessForUser de machtiging lezen/schrijven naar het bestand.       **Opmerking over beveiliging** als de <xref:System.Web.Security.FileAuthorizationModule>module is niet gedefinieerd in de `httpModules` configuratiesectie voor de toepassing de <xref:System.Web.Security.FileAuthorizationModule>module retourneert altijd `true`.</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public static bool CheckFileAccessForUser (string virtualPath, IntPtr token, string verb);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het virtuele pad naar het bestand."
    - id: token
      type: System.IntPtr
      description: "Een Windows-toegangstoken voor de gebruiker."
    - id: verb
      type: System.String
      description: "De HTTP-term die wordt gebruikt voor het maken van de aanvraag."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de huidige Windows-gebruiker dat wordt vertegenwoordigd door <code> token </code> toegang heeft tot het bestand met de opgegeven HTTP-term of als de <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> -module is niet gedefinieerd in het configuratiebestand van de toepassing, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>token</code> is <xref:System.IntPtr.Zero>.       -or-       <code>verb</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>is niet in de mapstructuur van de toepassing van de webtoepassing."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Het bestand dat is opgegeven door <code> virtualPath </code> bestaat niet."
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  id: Dispose
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Versies van alle resources, dan geheugen, die wordt gebruikt door de <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref>."
  remarks: "Deze methode is niet bedoeld om te worden aangeroepen vanuit de toepassingscode."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Initialiseert de <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> object."
  remarks: "Deze methode is niet bedoeld om te worden aangeroepen vanuit de toepassingscode.       De Init-methode zorgt ervoor dat de <xref:System.Web.Security.FileAuthorizationModule>is opgenomen in de verwerking van de <xref:System.Web.HttpApplication.AuthorizeRequest>gebeurtenis.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "De huidige <xref href=&quot;System.Web.HttpApplication&quot;> </xref> exemplaar."
  overload: System.Web.Security.FileAuthorizationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.FileAuthorizationModule.#ctor*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule.FileAuthorizationModule
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser
- uid: System.Web.Security.FileAuthorizationModule.Dispose*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose
  nameWithType: FileAuthorizationModule.Dispose
- uid: System.Web.Security.FileAuthorizationModule.Init*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init
  nameWithType: FileAuthorizationModule.Init
