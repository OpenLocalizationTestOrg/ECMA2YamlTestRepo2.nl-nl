### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInEnvironment
  id: AddInEnvironment
  children:
  - System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  - System.AddIn.Hosting.AddInEnvironment.Process
  langs:
  - csharp
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
  type: Class
  summary: "Biedt toegang tot het toepassingsdomein en het proces van een invoegtoepassing."
  remarks: "Deze klasse gebruiken om te laden van invoegtoepassingen in een gewenste omgeving die een van de volgende opties:-een bestaand toepassingsdomein waarvoor u hebt de <xref:System.AppDomain>object.</xref:System.AppDomain>      -Een toepassingsdomein is automatisch gegenereerd voor het activeren van een invoegtoepassing.      -Een bestaand extern proces.       Voor het object AddInEnvironment voor een invoegtoepassing niet aan de AddInEnvironment klassen-constructor doorgeven van de invoegtoepassing toepassingsdomein. U kunt ook de <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>eigenschap van de <xref:System.AddIn.Hosting.AddInController>klasse om van de invoegtoepassing AddInEnvironment-object te verkrijgen.</xref:System.AddIn.Hosting.AddInController> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>       Nadat u het object AddInEnvironment verkregen, kunt u het volgende doen:-dat AddInEnvironment object doorgeven aan de juiste <xref:System.AddIn.Hosting.AddInToken.Activate%2A>methode-overload.</xref:System.AddIn.Hosting.AddInToken.Activate%2A> De invoegtoepassing wordt geactiveerd in het toepassingsdomein en het proces dat wordt vertegenwoordigd door het object AddInEnvironment.      -Gebruik de <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A>eigenschap verkrijgen van een <xref:System.AddIn.Hosting.AddInProcess>object.</xref:System.AddIn.Hosting.AddInProcess> </xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> Vervolgens moet u dat object doorgeven aan de juiste <xref:System.AddIn.Hosting.AddInToken.Activate%2A>methode-overload.</xref:System.AddIn.Hosting.AddInToken.Activate%2A> De invoegtoepassing worden geactiveerd in het proces dat wordt vertegenwoordigd door de <xref:System.AddIn.Hosting.AddInProcess>object, maar in een nieuw toepassingsdomein.</xref:System.AddIn.Hosting.AddInProcess>"
  syntax:
    content: public sealed class AddInEnvironment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  id: '#ctor(System.AppDomain)'
  parent: System.AddIn.Hosting.AddInEnvironment
  langs:
  - csharp
  name: AddInEnvironment(AppDomain)
  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)
  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Hosting.AddInEnvironment&quot;> </xref> klasse."
  remarks: "Als u toegang tot het toepassingsdomein waarin de invoegtoepassing die u nodig hebt hebt, kunt u deze constructor gebruiken om op te halen van de invoegtoepassing <xref:System.AddIn.Hosting.AddInEnvironment>object.</xref:System.AddIn.Hosting.AddInEnvironment> Anders kunt u de <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>eigenschap van de <xref:System.AddIn.Hosting.AddInController>klasse verkrijgen van de <xref:System.AddIn.Hosting.AddInEnvironment>object.</xref:System.AddIn.Hosting.AddInEnvironment> </xref:System.AddIn.Hosting.AddInController> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>"
  syntax:
    content: public AddInEnvironment (AppDomain appDomain);
    parameters:
    - id: appDomain
      type: System.AppDomain
      description: "Het toepassingsdomein waarin de invoegtoepassing bij."
  overload: System.AddIn.Hosting.AddInEnvironment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "De machtiging Volledig vertrouwen is vereist. Een aanroeper in de keten aanroep is niet gemachtigd."
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInEnvironment.Process
  id: Process
  parent: System.AddIn.Hosting.AddInEnvironment
  langs:
  - csharp
  name: Process
  nameWithType: AddInEnvironment.Process
  fullName: System.AddIn.Hosting.AddInEnvironment.Process
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Haalt de <xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref> -object met het proces waarin de invoegtoepassing wordt uitgevoerd."
  remarks: "U kunt deze eigenschap gebruiken voor het activeren van meerdere invoegtoepassingen in hetzelfde proces, maar in verschillende domeinen bevinden.       Geeft de <xref:System.AddIn.Hosting.AddInProcess>object dat is verkregen met deze eigenschap in op de juiste <xref:System.AddIn.Hosting.AddInToken.Activate%2A>methode-overload.</xref:System.AddIn.Hosting.AddInToken.Activate%2A> </xref:System.AddIn.Hosting.AddInProcess>       Als u wilt activeren in hetzelfde domein in een extern proces geeft u de <xref:System.AddIn.Hosting.AddInEnvironment>object rechtstreeks naar de <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName>methode-overload.</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> </xref:System.AddIn.Hosting.AddInEnvironment>"
  syntax:
    content: public System.AddIn.Hosting.AddInProcess Process { get; }
    return:
      type: System.AddIn.Hosting.AddInProcess
      description: "Het proces waarin de invoegtoepassing wordt uitgevoerd."
  overload: System.AddIn.Hosting.AddInEnvironment.Process*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: AddInEnvironment(AppDomain)
  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)
  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInEnvironment.Process
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: Process
  nameWithType: AddInEnvironment.Process
  fullName: System.AddIn.Hosting.AddInEnvironment.Process
- uid: System.AddIn.Hosting.AddInProcess
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInProcess
  nameWithType: AddInProcess
  fullName: System.AddIn.Hosting.AddInProcess
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor*
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment.AddInEnvironment
- uid: System.AddIn.Hosting.AddInEnvironment.Process*
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: Process
  nameWithType: AddInEnvironment.Process
