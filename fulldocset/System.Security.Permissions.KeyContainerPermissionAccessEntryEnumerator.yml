### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  id: KeyContainerPermissionAccessEntryEnumerator
  children:
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset
  - System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntryEnumerator
  nameWithType: KeyContainerPermissionAccessEntryEnumerator
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  type: Class
  summary: "Hiermee geeft u de enumerator voor <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objecten in een <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryCollection&quot;> </xref>."
  remarks: "Opsommingen toestaan dat de gegevens in de verzameling alleen-lezen. Enumerators kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.       In eerste instantie bevindt de enumerator zich v贸贸r het eerste element in de verzameling. De <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>methode brengt ook de enumerator terug naar deze positie.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> Op deze functie, het aanroepen van de <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>eigenschap er een uitzondering gegenereerd.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> Daarom moet u aanroepen de <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>methode om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van de <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>eigenschap.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>retourneert de hetzelfde object totdat de <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>of <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>wordt aangeroepen.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A></xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>Hiermee stelt u <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>naar het volgende element.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A></xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       Na het einde van de verzameling wordt doorgegeven, de enumerator is geplaatst na het laatste element in de verzameling en roepen <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>retourneert `false`.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> Als de laatste aanroep aan <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>geretourneerd `false`, aanroepende <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>er een uitzondering gegenereerd.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> Om in te stellen <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>voor het eerste element van de verzameling aanroepen <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>gevolgd door een aanroep naar <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>       Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, in de enumerator permanent ongeldig wordt gemaakt en de volgende aanroep aan <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>of <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>er een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> Als de verzameling is gewijzigd tussen aanroepen <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>en <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>retourneert vervolgens het onderdeel waarvoor deze momenteel is ingesteld, zelfs als de enumerator is al ongeldig gemaakt.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom intrinsiek geen procedure thread-safe. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAccessEntryEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  id: Current
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee haalt de huidige vermelding in de verzameling."
  remarks: "Wanneer de enumerator is gemaakt, wijst het niet naar een object, zodat de huidige eigenschap niet geldig is en een uitzondering genereert als deze is geopend. U moet eerst aanroepen de <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>methode plaats de cursor op het eerste object in de verzameling.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       Ophalen van de huidige eigenschap meerdere keren met geen Tussenkomende aanroepen <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>retourneert dezelfde <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>object telkens.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntry Current { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "De huidige <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> object in de verzameling."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De huidige eigenschap wordt aangeroepen voordat de eerste aanroepen de <> </> *> methode. De cursor bevindt zich v贸贸r het eerste object in de verzameling.       - of - eigenschap van de huidige wordt geopend na een aanroep van de <> </> *> methode retourneert <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, wat aangeeft dat de cursor zich na het laatste object in de verzameling bevindt."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee gaat u naar het volgende element in de verzameling."
  remarks: "De methode MoveNext retourneert `false` onmiddellijk als er geen objecten in de verzameling zijn.       MoveNext retourneert `true` totdat het het einde van de verzameling is bereikt. Vervolgens wordt `false` voor elke volgende aanroep. Echter eenmaal MoveNext heeft geretourneerd `false`, toegang tot de <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>eigenschap er een uitzondering gegenereerd.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>       Nadat deze is gemaakt, een enumerator bevindt zich voor de eerste <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>-object in de verzameling en de eerste aanroep MoveNext plaatst de enumerator naar het eerste object in de verzameling.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de enumerator is is voortgezet naar het volgende element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de enumerator is voorbij het einde van de verzameling."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset
  id: Reset
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee stelt de enumerator op het begin van de verzameling."
  remarks: "Een enumerator wordt verplaatst in een alleen-voorwaarts richting. Gebruik deze methode om terug te keren naar het begin van de verzameling.       De methode Reset plaatst u de cursor op de eerste object in de verzameling. Na het opnieuw instellen wordt aangeroepen, u hoeft niet aan te roepen <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>verplaatst de cursor naar het eerste object.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hiermee haalt het huidige object in de verzameling."
  remarks: "Deze methode; niet aanroepen Gebruik de <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>eigenschap in plaats daarvan.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "Het huidige object in de verzameling."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Reset()
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Current
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.MoveNext
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: Reset
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.Reset
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current
