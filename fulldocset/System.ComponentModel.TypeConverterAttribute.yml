### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeConverterAttribute
  id: TypeConverterAttribute
  children:
  - System.ComponentModel.TypeConverterAttribute.#ctor
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  - System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  - System.ComponentModel.TypeConverterAttribute.Default
  - System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  - System.ComponentModel.TypeConverterAttribute.GetHashCode
  langs:
  - csharp
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
  type: Class
  summary: "Hiermee geeft u op welk type gebruiken als een conversieprogramma voor het object dit kenmerk is gebonden aan."
  remarks: "De klasse die u voor de conversie gebruikt moet eigenschappen overnemen van <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Gebruik de <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>eigenschap in op de naam van de klasse die de gegevensconversie voor het object dit kenmerk biedt is gebonden aan.</xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>       Zie voor meer informatie over kenmerken [kenmerken](~/add/includes/ajax-current-ext-md.md). Zie voor meer informatie over de type-conversieprogramma&quot;s, de <xref:System.ComponentModel.TypeConverter>basisklasse en [hoe: implementeert een Type-conversieprogramma](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>       Om te kunnen stellen van een type-conversieprogramma voor een aangepaste klasse die zorgt voor een type conversie gedrag voor XAML, kunt u het kenmerk typeconverterattribute toe aan uw type toepassen. Het argument van het kenmerk verwijst naar de type-conversieprogramma-implementatie. De type-conversieprogramma moet worden geaccepteerd van de waarden van een tekenreeks die wordt gebruikt voor kenmerken of de initialisatie van de tekst in XAML-opmaak en die tekenreeks converteren naar de bestemming van het type. Zie voor meer informatie[TypeConverters en XAML](~/add/includes/ajax-current-ext-md.md).       In plaats van toepassen op alle waarden van een type, worden een type converter gedrag voor XAML ook ingesteld op een bepaalde eigenschap. In dit geval wordt het toepassen van typeconverterattribute toe aan de eigenschapsdefinitie (de buitenste-definitie, niet de specifieke `get` en `set` definities).       Type converter gedrag voor XAML-gebruik van een aangepaste toevoegbaar lid kan worden toegewezen door toe te passen typeconverterattribute toe aan de `get` methode accessor die ondersteuning biedt voor het gebruik van XAML. Zie voor meer informatie [gekoppeld eigenschappen overzicht](~/add/includes/ajax-current-ext-md.md).       Voor complexe XAML serialisatie gevallen waarvoor extra status van de objectruntime, kunt u een waardeserialisatiefunctie naast een type converter en kenmerken van beide klassen ondersteuning op uw aangepaste typen of aangepaste leden definiÃ«ren. Zie voor meer informatie <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer>"
  example:
  - "The following example declares `MyClass` to use the type converter called `MyClassConverter`. This example assumes that `MyClassConverter` has been implemented elsewhere. The class implementing the converter (`MyClassConverter`) must inherit from the <xref:System.ComponentModel.TypeConverter> class.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._140_1.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._140_1.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._140_1.cs)]  \n  \n The next example creates an instance of `MyClass`. Then it gets the attributes for the class, and prints the name of the type converter used by `MyClass`.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._140_2.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._140_2.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._140_2.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class TypeConverterAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> klasse met het standaard typeconversieprogramma, een lege tekenreeks (&quot;&quot;)."
  remarks: "De klasse die de gegevensconversie biedt moet eigenschappen overnemen van <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute ();
    parameters: []
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> klasse, met de naam van het opgegeven als de converter gegevens voor het object dat aan dit kenmerk is gebonden."
  remarks: "De klasse die de gegevensconversie biedt moet eigenschappen overnemen van <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "De volledig gekwalificeerde naam van de klasse moet worden gebruikt voor gegevensconversie voor het object dit kenmerk is gebonden aan."
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> klasse, met het opgegeven type als de converter gegevens voor het object dat aan dit kenmerk is gebonden."
  remarks: "De klasse die de gegevensconversie biedt moet eigenschappen overnemen van <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Een <xref:System.Type>die staat voor het type van de converter-klasse moet worden gebruikt voor gegevensconversie voor het object dat aan dit kenmerk is gebonden.</xref:System.Type>"
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  id: ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt de volledig gekwalificeerde typenaam van de <xref:System.Type>gebruiken als een conversieprogramma voor het object dat aan dit kenmerk is gebonden.</xref:System.Type>"
  syntax:
    content: public string ConverterTypeName { get; }
    return:
      type: System.String
      description: "De volledig gekwalificeerde typenaam van de <xref:System.Type>gebruiken als een conversieprogramma voor het object dit kenmerk is gekoppeld aan of een lege tekenreeks (&quot;&quot;) als er nog geen bestaat.</xref:System.Type> De standaardwaarde is een lege tekenreeks (&quot;&quot;)."
  overload: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Default
  id: Default
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Geeft het type gebruiken als een conversieprogramma voor het object dat aan dit kenmerk is gebonden."
  syntax:
    content: public static readonly System.ComponentModel.TypeConverterAttribute Default;
    return:
      type: System.ComponentModel.TypeConverterAttribute
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert of de waarde van het gegeven object gelijk aan de huidige is <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Het object voor het testen van de gelijkheid van de waarde van."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde van het gegeven object gelijk aan die van de huidige is <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverterAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert de hash-code voor dit exemplaar."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een hash-code voor de huidige <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>."
  overload: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Default
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
- uid: System.ComponentModel.TypeConverterAttribute
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.TypeConverterAttribute.#ctor*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Equals*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals
  nameWithType: TypeConverterAttribute.Equals
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: TypeConverterAttribute.GetHashCode
