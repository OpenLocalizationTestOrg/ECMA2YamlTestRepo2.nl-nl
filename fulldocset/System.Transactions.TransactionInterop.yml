### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionInterop
  id: TransactionInterop
  children:
  - System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  - System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetWhereabouts
  - System.Transactions.TransactionInterop.PromoterTypeDtc
  langs:
  - csharp
  name: TransactionInterop
  nameWithType: TransactionInterop
  fullName: System.Transactions.TransactionInterop
  type: Class
  summary: "Interactie tussen vereenvoudigt <xref href=&quot;System.Transactions&quot;> </xref> en onderdelen die eerder zijn geschreven om te communiceren met MSDTC, COM + of <xref href=&quot;System.EnterpriseServices&quot;> </xref>. Deze klasse kan niet worden overgenomen."
  remarks: "Deze klasse biedt methoden voor het doorgeven van transacties. Zie voor meer informatie over de werking van dit proces [transactie doorgeven](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp).       Met behulp van de methoden die door deze klasse, kunt u bezighouden met twee soorten transactie voorafgaande generaties, exporteren/importeren (pushmodel) en de zender/ontvanger (pull-model).       Het exporteren/importeren (pushmodel) doorgeven omvat deze stappen 1.  Op de externe computer verkrijgen van de &quot;verblijfsgegevens&quot; van de transactiebeheerder van de desbetreffende computer door het aanroepen van de <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A>methode.</xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> U kunt vervolgens deze stukje informatie op de clientcomputer voor toekomstig gebruik cache.      2.  Verzenden van de gegevens met de verblijfsgegevens naar de clientcomputer een voorkeur 3 te gebruiken.  Gebruik de verblijfsgegevens voor &quot;exporteren&quot; de transactie naar de externe computer en het genereren van een transactie &quot;cookie&quot; op de clientcomputer.  Dit wordt gedaan door het aanroepen van <xref:System.Transactions.TransactionInterop.GetExportCookie%2A>en het doorgeven van de externe computer verblijfsgegevens.</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>      4.  De gegevens met de transactie &quot;cookie&quot; naar de externe computer met behulp van een voorkeursmethode 5 verzenden.  Op de externe computer gebruiken om de transactie &quot;cookie&quot; te halen van een kloon van de clienttransactie door het aanroepen van de <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>methode.</xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>      6.  Op de externe computer, gebruikt u de transactie kloon aanmeldingspoging van de resourcemanager gebruikt <xref:System.Transactions.Transaction.EnlistVolatile%2A>of <xref:System.Transactions.Transaction.EnlistDurable%2A>methoden van de <xref:System.Transactions.Transaction>klasse.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A>       De doorgifte zender/ontvanger (pull-model) omvat deze stappen, - op de clientcomputer de transactie wordt gegenereerd wanneer u een overeenkomende &quot;doorgiftetoken&quot; door het aanroepen van <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>- verzenden de gegevens met de &quot;doorgiftetoken&quot; van de transactie naar de externe computer op de externe computer met behulp van een voorkeursmethode - &quot;doorgiftetoken&quot; gebruiken om op te halen van een kloon van de client-transactie door het aanroepen van de zender/ontvanger <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>model biedt betere prestaties in scenario&quot;s waarbij de transactie-token wordt verzonden naar een externe computer , maar de externe computer mag deze niet gebruiken om op te halen van de transactie.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> </xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>  Dit is omdat de transactie niet tot doorgegeven is <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>wordt aangeroepen.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> Een ander voordeel is dat de doorgiftetoken kan worden verzonden naar een externe computer terwijl de cookie export alleen op de computer die de verblijfsgegevens kan worden gebruikt.       Echter, vergeet niet dat de locatie van de externe transactiebeheer worden ingekapseld in alle doorgifte van tokens, zodat deze groter is dan de bijbehorende transactie cookies uit het model exporteren/importeren.       **Opmerking** maakt gebruik van dit type <xref:System.Security.Permissions.SecurityAction>te voorkomen dat het wordt aangeroepen vanuit niet-vertrouwde code; alleen de onmiddellijke aanroeper is echter vereist dat de `FullTrust` machtigingenset.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static class TransactionInterop
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  id: GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Haalt een <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> -exemplaar dat vertegenwoordigt een <xref href=&quot;System.Transactions.Transaction&quot;> </xref>."
  syntax:
    content: public static System.Transactions.IDtcTransaction GetDtcTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Een <xref href=&quot;System.Transactions.Transaction&quot;> </xref> exemplaar worden gemarshald."
    return:
      type: System.Transactions.IDtcTransaction
      description: "Een <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> -exemplaar dat vertegenwoordigt een <xref href=&quot;System.Transactions.Transaction&quot;> </xref>.  De <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> exemplaar is compatibel met de niet-beheerde vorm van [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) gebruikt door MSDTC en met de beheerde vorm van <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> die wordt gebruikt door <xref href=&quot;System.EnterpriseServices&quot;> </xref>."
  overload: System.Transactions.TransactionInterop.GetDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  id: GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee transformeert een transactieobject in een cookie export-transactie."
  remarks: "Deze methode niet aanroepen als u wilt exporteren van een transactie. De `transaction` die wordt doorgegeven samen in een cookie transactie is gemarshald. Vervolgens kunt u het transactie-cookie verzenden naar het doelproces. Dit wordt aangeduid als het doorgeven van de transactie tussen processen of systemen. De doorgifte wordt beschouwd als een pushmodel waarbij de lokale transactie wordt doorgegeven voor de bestemming.  Daarom informatie zich in de `whereabouts` moet beschrijven de transactiebeheerder bestemming.       Voor meer informatie over andere doorgifte van modellen, Zie de sectie met opmerkingen van de <xref:System.Transactions.TransactionInterop>klasse.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static byte[] GetExportCookie (System.Transactions.Transaction transaction, byte[] whereabouts);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "De <xref href=&quot;System.Transactions.Transaction&quot;> </xref> object dat moet worden gemarshald."
    - id: whereabouts
      type: System.Byte[]
      description: "Een adres dat de locatie van de transactiebeheerder bestemming beschrijft. Hierdoor kunnen twee transactiebeheer om te communiceren met elkaar en waardoor een transactie van het ene systeem naar een ander object doorgeven."
    return:
      type: System.Byte[]
      description: "Een export transactie cookie voor het opgegeven <xref href=&quot;System.Transactions.Transaction&quot;> </xref> object."
  overload: System.Transactions.TransactionInterop.GetExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  id: GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Genereert een <xref href=&quot;System.Transactions.Transaction&quot;> </xref> uit een opgegeven <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>."
  remarks: "De `transactionNative` is compatibel met de niet-beheerde vorm van [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) gebruikt door MSDTC en met de beheerde vorm <xref:System.EnterpriseServices.ITransaction>gebruikt door <xref:System.EnterpriseServices>.</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction>"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromDtcTransaction (System.Transactions.IDtcTransaction transactionNative);
    parameters:
    - id: transactionNative
      type: System.Transactions.IDtcTransaction
      description: "De <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> object dat moet worden gemarshald."
    return:
      type: System.Transactions.Transaction
      description: "Een <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -exemplaar dat staat voor de opgegeven <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>."
  overload: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  id: GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Genereert een <xref href=&quot;System.Transactions.Transaction&quot;> </xref> van het opgegeven een cookie exporteren."
  remarks: "Voor meer informatie over andere doorgifte van modellen, Zie de sectie met opmerkingen van de <xref:System.Transactions.TransactionInterop>klasse.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromExportCookie (byte[] cookie);
    parameters:
    - id: cookie
      type: System.Byte[]
      description: "Een gemarshalde vorm van het transactieobject."
    return:
      type: System.Transactions.Transaction
      description: "Een <xref href=&quot;System.Transactions.Transaction&quot;> </xref> van de cookie opgegeven exporteren."
  overload: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  id: GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Genereert een <xref href=&quot;System.Transactions.Transaction&quot;> </xref> exemplaar van de opgegeven zender doorgiftetoken."
  remarks: "Deze methode, samen met de <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>methode functionaliteit bieden voor het doorgeven van &quot;pull&quot;, waarin de transactie is &quot;opgehaald&quot; uit de externe computer wanneer deze methode wordt aangeroepen om te &quot; unmarshallen &quot; de transactie.</xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>       Voor meer informatie over andere doorgifte van modellen, Zie de sectie met opmerkingen van de <xref:System.Transactions.TransactionInterop>klasse.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken (byte[] propagationToken);
    parameters:
    - id: propagationToken
      type: System.Byte[]
      description: "Een doorgiftetoken dat vertegenwoordigt een transactie."
    return:
      type: System.Transactions.Transaction
      description: "Een <xref href=&quot;System.Transactions.Transaction&quot;> </xref> van de opgegeven zender doorgiftetoken."
  overload: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  exceptions:
  - type: System.Transactions.TransactionManagerCommunicationException
    commentId: T:System.Transactions.TransactionManagerCommunicationException
    description: "Het deserialiseren van een transactie mislukt, omdat de transactiebeheerder kan geen verbinding worden gemaakt. Dit kan worden veroorzaakt door een firewall of de netwerkinstellingen."
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  id: GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Genereert een doorgiftetoken voor het opgegeven <xref href=&quot;System.Transactions.Transaction&quot;> </xref>."
  syntax:
    content: public static byte[] GetTransmitterPropagationToken (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Een transactie in een doorgiftetoken worden gemarshald."
    return:
      type: System.Byte[]
      description: "Deze methode, samen met de <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>methode functionaliteit bieden voor het doorgeven van zender/ontvanger, waarin de transactie is &quot;opgehaald&quot; uit de externe computer wanneer deze wordt aangeroepen om te &quot; unmarshallen &quot; de transactie.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>       Voor meer informatie over andere doorgifte van modellen, Zie de sectie met opmerkingen van de <xref href=&quot;System.Transactions.TransactionInterop&quot;> </xref> klasse."
  overload: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  id: GetWhereabouts
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "De locatie van de gedistribueerde transactiebeheerder opgehaald die <xref href=&quot;System.Transactions&quot;> </xref> gebruikt."
  remarks: "De verblijfsgegevens bevat een adres dat de locatie van een transactiebeheerder beschrijft. Hierdoor kunnen twee transactiebeheer om te communiceren met elkaar en waardoor een transactie van het ene systeem naar een ander object doorgeven. De informatie die wordt geretourneerd door deze methode kan worden gebruikt voor servicelocatie-informatie voor de push-model transactie doorgeven met de <xref:System.Transactions.TransactionInterop.GetExportCookie%2A>methode.</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>       Voor meer informatie over andere doorgifte van modellen, Zie de sectie met opmerkingen van de <xref:System.Transactions.TransactionInterop>klasse.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static byte[] GetWhereabouts ();
    parameters: []
    return:
      type: System.Byte[]
      description: "De locatie van de gedistribueerde transactiebeheerder die <xref href=&quot;System.Transactions&quot;> </xref> gebruikt."
  overload: System.Transactions.TransactionInterop.GetWhereabouts*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  id: PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
  type: Field
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Het type van de processor van de gedistribueerde transactie."
  remarks: "Deze waarde wordt gebruikt voor de `Transaction.PromoterType` eigenschap als de transactie is of wordt gepromoveerd tot MSDTC en de `Transaction.GetPromotedToken` methode retourneert een MSDTC-transactie doorgiftetoken voor de `byte[]` resultaat."
  syntax:
    content: public static readonly Guid PromoterTypeDtc;
    return:
      type: System.Guid
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.TransactionManagerCommunicationException
  parent: System.Transactions
  isExternal: false
  name: TransactionManagerCommunicationException
  nameWithType: TransactionManagerCommunicationException
  fullName: System.Transactions.TransactionManagerCommunicationException
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
- uid: System.Transactions.IDtcTransaction
  parent: System.Transactions
  isExternal: false
  name: IDtcTransaction
  nameWithType: IDtcTransaction
  fullName: System.Transactions.IDtcTransaction
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.TransactionInterop.GetDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction
  nameWithType: TransactionInterop.GetDtcTransaction
- uid: System.Transactions.TransactionInterop.GetExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie
  nameWithType: TransactionInterop.GetExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie
  nameWithType: TransactionInterop.GetTransactionFromExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetWhereabouts*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts
  nameWithType: TransactionInterop.GetWhereabouts
