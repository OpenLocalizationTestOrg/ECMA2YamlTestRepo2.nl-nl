### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogTraceListener
  id: EventLogTraceListener
  children:
  - System.Diagnostics.EventLogTraceListener.#ctor
  - System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)
  - System.Diagnostics.EventLogTraceListener.#ctor(System.String)
  - System.Diagnostics.EventLogTraceListener.Close
  - System.Diagnostics.EventLogTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.EventLogTraceListener.EventLog
  - System.Diagnostics.EventLogTraceListener.Name
  - System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.EventLogTraceListener.Write(System.String)
  - System.Diagnostics.EventLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: EventLogTraceListener
  nameWithType: EventLogTraceListener
  fullName: System.Diagnostics.EventLogTraceListener
  type: Class
  summary: "Biedt een eenvoudige listener waarin wordt verwezen tracering of foutopsporing van uitvoer naar een <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref>."
  remarks: "Een exemplaar van deze EventLogTraceListener kan worden toegevoegd aan de <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>, <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>, of - <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=fullName>verzamelingen voor het verzenden van uitvoer van de tracering of foutopsporing in een <xref:System.Diagnostics.EventLog>.</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> U kunt het exemplaar in uw code toevoegen of opgeven in het toepassingsconfiguratiebestand. Als u wilt een EventLogTraceListener met een configuratiebestand voor de toepassing toevoegen, het bewerken van het bestand dat overeenkomt met de naam van uw toepassing of het bestand app.config in een [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] project. In dit bestand, moet u een element voor een type EventLogTraceListener invoegen.       Het volgende voorbeeld wordt een EventLogTraceListener-object met de naam `myListener` naar de <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>verzameling.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> De `initializeData` parameter geeft u de naam van de bron van het gebeurtenislogboek die moet worden doorgegeven aan de <xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29>constructor.</xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29>      ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;myListener&quot;             type=&quot;System.Diagnostics.EventLogTraceListener&quot;             initializeData=&quot;TraceListenerLog&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```Zie voor meer informatie over het toevoegen van traceer-listeners in het configuratiebestand van de toepassing of.      > [!NOTE] > Als de <xref:System.Diagnostics.EventLog.Source%2A>voor het gebeurtenislogboek dat is gekoppeld aan het exemplaar EventLogTraceListener niet of bestaat een nieuwe gebeurtenisbron wordt gemaakt.</xref:System.Diagnostics.EventLog.Source%2A> Voor het maken van een gebeurtenisbron in Windows Vista, Windows XP Professional of Windows Server 2003, moet u beheerdersrechten hebben.   >> De reden voor deze vereiste is dat alle gebeurtenislogboeken, met inbegrip van beveiliging, moet worden gezocht om te bepalen of de gebeurtenisbron uniek is. In Windows Vista hebben gebruikers geen toestemming voor toegang tot het beveiligingslogboek; daarom een <xref:System.Security.SecurityException>gegenereerd.</xref:System.Security.SecurityException>   >> Gebruikersaccountbeheer (UAC) bepaalt de bevoegdheden van een gebruiker op Windows Vista. Als u lid zijn van de ingebouwde groep Administrators, kunt u twee runtime-toegangstokens zijn toegewezen: een standaardgebruikerstoegang en een token voor beheerderstoegang. U bent standaard in de standaard gebruikersrol. Voor het uitvoeren van de code die toegang heeft tot het beveiligingslogboek moet u eerst uw bevoegdheden van een standaardgebruiker uitbreiden naar de beheerder. U kunt dit doen wanneer u een toepassing begint met de rechtermuisknop op het pictogram van de toepassing die aangeeft dat u wilt uitvoeren als beheerder.       De klasse biedt de <xref:System.Diagnostics.EventLogTraceListener.EventLog%2A>eigenschap ophalen of instellen van het gebeurtenislogboek dat ontvangt tracering of foutopsporing van uitvoer, en de <xref:System.Diagnostics.EventLogTraceListener.Name%2A>eigenschap die de naam van de EventLogTraceListener.</xref:System.Diagnostics.EventLogTraceListener.Name%2A> </xref:System.Diagnostics.EventLogTraceListener.EventLog%2A>       De <xref:System.Diagnostics.EventLogTraceListener.Close%2A>methode sluit het gebeurtenislogboek, zodat het niet meer ontvangt tracering of foutopsporing van uitvoer.</xref:System.Diagnostics.EventLogTraceListener.Close%2A> De <xref:System.Diagnostics.EventLogTraceListener.Write%2A>en <xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A>methoden Schrijf een bericht naar het gebeurtenislogboek.</xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A> </xref:System.Diagnostics.EventLogTraceListener.Write%2A>      > [!NOTE] > Om te voorkomen dat de mogelijkheid om grote hoeveelheden gegevens te schrijven naar het gebeurtenislogboek, de EventLogTraceListener worden niet uitgevoerd de optionele traceergegevens die is opgegeven door de <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>eigenschap.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>"
  example:
  - "The following example creates a trace listener that sends output to an event log. First, the code creates a new EventLogTraceListener that uses the source `myEventLogSource`. Next, `myTraceListener` is added to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection. Finally, the example sends a line of output to the <xref:System.Diagnostics.Trace.Listeners%2A> object.  \n  \n [!code-cs[Classic EventLogTraceListener Example#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_3_1.cs)]\n [!code-vb[Classic EventLogTraceListener Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_3_1.vb)]\n [!code-cpp[Classic EventLogTraceListener Example#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_3_1.cpp)]"
  syntax:
    content: 'public sealed class EventLogTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.Flush
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: EventLogTraceListener()
  nameWithType: EventLogTraceListener.EventLogTraceListener()
  fullName: System.Diagnostics.EventLogTraceListener.EventLogTraceListener()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.EventLogTraceListener&quot;> </xref> klasse zonder een traceringslistener."
  syntax:
    content: public EventLogTraceListener ();
    parameters: []
  overload: System.Diagnostics.EventLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)
  id: '#ctor(System.Diagnostics.EventLog)'
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: EventLogTraceListener(EventLog)
  nameWithType: EventLogTraceListener.EventLogTraceListener(EventLog)
  fullName: System.Diagnostics.EventLogTraceListener.EventLogTraceListener(EventLog)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.EventLogTraceListener&quot;> </xref> klasse met behulp van het opgegeven gebeurtenislogboek."
  syntax:
    content: public EventLogTraceListener (System.Diagnostics.EventLog eventLog);
    parameters:
    - id: eventLog
      type: System.Diagnostics.EventLog
      description: "Het gebeurtenislogboek te schrijven."
  overload: System.Diagnostics.EventLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: EventLogTraceListener(String)
  nameWithType: EventLogTraceListener.EventLogTraceListener(String)
  fullName: System.Diagnostics.EventLogTraceListener.EventLogTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.EventLogTraceListener&quot;> </xref> klasse met behulp van de opgegeven bron."
  syntax:
    content: public EventLogTraceListener (string source);
    parameters:
    - id: source
      type: System.String
      description: "De naam van de bron van een bestaande gebeurtenislogboek."
  overload: System.Diagnostics.EventLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.Close
  id: Close
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: EventLogTraceListener.Close()
  fullName: System.Diagnostics.EventLogTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee sluit u het gebeurtenislogboek zodat deze niet langer tracering of foutopsporing uitvoer ontvangt."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.EventLogTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLogTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.EventLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: System.Diagnostics.EventLogTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.EventLog
  id: EventLog
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: EventLog
  nameWithType: EventLogTraceListener.EventLog
  fullName: System.Diagnostics.EventLogTraceListener.EventLog
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van het gebeurtenislogboek te schrijven."
  syntax:
    content: public System.Diagnostics.EventLog EventLog { get; set; }
    return:
      type: System.Diagnostics.EventLog
      description: "Het gebeurtenislogboek te schrijven."
  overload: System.Diagnostics.EventLogTraceListener.EventLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.Name
  id: Name
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: Name
  nameWithType: EventLogTraceListener.Name
  fullName: System.Diagnostics.EventLogTraceListener.Name
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De naam van deze opgehaald of ingesteld <xref href=&quot;System.Diagnostics.EventLogTraceListener&quot;> </xref>."
  remarks: "Deze eigenschap wordt standaard ingesteld op de naam van de bron van het gebeurtenislogboek."
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: "De naam van deze traceringslistener."
  overload: System.Diagnostics.EventLogTraceListener.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.EventLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Traceringsinformatie schrijfbewerkingen, een gegevensobject en informatie over de gebeurtenis naar het gebeurtenislogboek."
  remarks: "> [!IMPORTANT]> De <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A>methoden zijn niet bedoeld om te worden aangeroepen door de toepassingscode.</xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> Ze worden aangeroepen door de methoden van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen gegevens uit te voeren trace.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A>methode, bijvoorbeeld de <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A>methode is bedoeld voor hulpprogramma&quot;s, maar kan ook bijkomende objecten, bijvoorbeeld een exemplaar van het uitzondering, moet de tracering verbonden.</xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> </xref:System.Diagnostics.EventLogTraceListener.TraceData%2A>       De `eventCache` en `source` parameters worden gebruikt om te bepalen of de gebeurtenis moet worden getraceerd. `id`gebruikt voor het maken een <xref:System.Diagnostics.EventInstance>object en de <xref:System.Diagnostics.TraceEventType>gelijk is aan een <xref:System.Diagnostics.EventLogEntryType>voor de <xref:System.Diagnostics.EventInstance.EntryType%2A>eigenschap.</xref:System.Diagnostics.EventInstance.EntryType%2A> </xref:System.Diagnostics.EventLogEntryType> </xref:System.Diagnostics.TraceEventType> </xref:System.Diagnostics.EventInstance> De <xref:System.Diagnostics.EventInstance>wordt geschreven naar het gebeurtenislogboek met de `data` object, opgemaakt als een tekenreeks met de <xref:System.Diagnostics.EventLog.WriteEvent%2A>methode.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance>      > [!NOTE] > De maximale waarde van de `id` parameter 65.535 is. Als de `id` opgegeven waarde groter is dan 65.535, wordt de maximale waarde gebruikt."
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer. doorgaans is dit de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: "Een van de opsommingswaarden die aangeeft welk type gebeurtenis terechtgekomen, waardoor de tracering."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis. De combinatie van `source` en `id` een gebeurtenis wordt aangeduid."
    - id: data
      type: System.Object
      description: "Een object van de gegevens te schrijven naar het uitvoerbestand of de stroom."
  overload: System.Diagnostics.EventLogTraceListener.TraceData*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code>is niet opgegeven.       - of - de tekenreeks van logboekinvoer 32.766 tekens overschrijdt."
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.EventLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijfbewerkingen trace-informatie, een matrix van gegevensobjecten en informatie over de gebeurtenis naar het gebeurtenislogboek."
  remarks: "> [!IMPORTANT]> De <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A>methoden zijn niet bedoeld om te worden aangeroepen door de toepassingscode.</xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> Ze worden aangeroepen door de methoden van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen gegevens uit te voeren trace.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A>methode, bijvoorbeeld de <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A>methode is bedoeld voor hulpprogramma&quot;s, maar kan ook bijkomende objecten, bijvoorbeeld een exemplaar van het uitzondering, moet de tracering verbonden.</xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> </xref:System.Diagnostics.EventLogTraceListener.TraceData%2A>       De `severity` en `id` parametergegevens worden gebruikt voor het maken van een <xref:System.Diagnostics.EventInstance>-object, dat is geschreven naar het gebeurtenislogboek met de gegevens van de matrix van gegevensobjecten.</xref:System.Diagnostics.EventInstance>       De `eventCache` en `source` parameters worden gebruikt om te bepalen of de gebeurtenis moet worden getraceerd. `id`gebruikt voor het maken een <xref:System.Diagnostics.EventInstance>object en de <xref:System.Diagnostics.TraceEventType>gelijk is aan een <xref:System.Diagnostics.EventLogEntryType>voor de <xref:System.Diagnostics.EventInstance.EntryType%2A>eigenschap.</xref:System.Diagnostics.EventInstance.EntryType%2A> </xref:System.Diagnostics.EventLogEntryType> </xref:System.Diagnostics.TraceEventType> </xref:System.Diagnostics.EventInstance> De <xref:System.Diagnostics.EventInstance>wordt geschreven naar het gebeurtenislogboek met de `data` objectmatrix is, opgemaakt als een tekenreeksmatrix met behulp van de <xref:System.Diagnostics.EventLog.WriteEvent%2A>methode.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance>      > [!NOTE] > De maximale waarde van de `id` parameter 65.535 is. Als de `id` opgegeven waarde groter is dan 65.535, wordt de maximale waarde gebruikt."
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer. doorgaans is dit de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: "Een van de opsommingswaarden die aangeeft welk type gebeurtenis terechtgekomen, waardoor de tracering."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis. De combinatie van `source` en `id` een gebeurtenis wordt aangeduid."
    - id: data
      type: System.Object[]
      description: "Een matrix van gegevensobjecten."
  overload: System.Diagnostics.EventLogTraceListener.TraceData*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code>is niet opgegeven.       - of - de tekenreeks van logboekinvoer 32.766 tekens overschrijdt."
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.EventLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijfbewerkingen trace-informatie, een bericht en informatie over de gebeurtenis naar het gebeurtenislogboek."
  remarks: "> [!IMPORTANT]> De <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A>methoden zijn niet bedoeld om te worden aangeroepen door de toepassingscode.</xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Deze methoden worden aangeroepen door middel van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen traceergegevens schrijven.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A>methode is bedoeld voor traceringsgebeurtenissen die automatisch kunnen worden verwerkt door de hulpprogramma&quot;s.</xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Een controleprogramma kan een beheerder bijvoorbeeld melden als een bepaalde gebeurtenis wordt getraceerd door een specifieke bron.       De `eventCache` en `source` parameters worden gebruikt om te bepalen of de gebeurtenis moet worden getraceerd. `id`gebruikt voor het maken een <xref:System.Diagnostics.EventInstance>object en de <xref:System.Diagnostics.TraceEventType>gelijk is aan een <xref:System.Diagnostics.EventLogEntryType>voor de <xref:System.Diagnostics.EventInstance.EntryType%2A>eigenschap.</xref:System.Diagnostics.EventInstance.EntryType%2A> </xref:System.Diagnostics.EventLogEntryType> </xref:System.Diagnostics.TraceEventType> </xref:System.Diagnostics.EventInstance> De <xref:System.Diagnostics.EventInstance>wordt geschreven naar het gebeurtenislogboek met de `message` gegevens met de <xref:System.Diagnostics.EventLog.WriteEvent%2A>methode.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance>      > [!NOTE] > De maximale waarde van de `id` parameter 65.535 is. Als de `id` opgegeven waarde groter is dan 65.535, wordt de maximale waarde gebruikt."
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer. doorgaans is dit de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: "Een van de opsommingswaarden die aangeeft welk type gebeurtenis terechtgekomen, waardoor de tracering."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis. De combinatie van `source` en `id` een gebeurtenis wordt aangeduid."
    - id: message
      type: System.String
      description: "Het bericht traceren."
  overload: System.Diagnostics.EventLogTraceListener.TraceEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code>is niet opgegeven.       - of - de tekenreeks van logboekinvoer 32.766 tekens overschrijdt."
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.EventLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijfbewerkingen trace-informatie, een opgemaakte matrix met objecten en informatie over de gebeurtenis naar het gebeurtenislogboek."
  remarks: "> [!IMPORTANT]> De <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A>methoden zijn niet bedoeld om te worden aangeroepen door de toepassingscode.</xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Deze methoden worden aangeroepen door middel van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen traceergegevens schrijven.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A>methode is bedoeld voor traceringsgebeurtenissen die automatisch kunnen worden verwerkt door de hulpprogramma&quot;s.</xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> Een controleprogramma kan een beheerder bijvoorbeeld melden als een bepaalde gebeurtenis wordt getraceerd door een specifieke bron.       De `eventCache` en `source` parameters worden gebruikt om te bepalen of de gebeurtenis moet worden getraceerd. `id`gebruikt voor het maken een <xref:System.Diagnostics.EventInstance>object en de <xref:System.Diagnostics.TraceEventType>gelijk is aan een <xref:System.Diagnostics.EventLogEntryType>voor de <xref:System.Diagnostics.EventInstance.EntryType%2A>eigenschap.</xref:System.Diagnostics.EventInstance.EntryType%2A> </xref:System.Diagnostics.EventLogEntryType> </xref:System.Diagnostics.TraceEventType> </xref:System.Diagnostics.EventInstance> De <xref:System.Diagnostics.EventInstance>naar het gebeurtenislogboek wordt geschreven met behulp van de <xref:System.Diagnostics.EventLog.WriteEvent%2A>methode met het bericht dat is verkregen van de `format` en `args` parameters.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance> De `args` objectmatrix wordt geconverteerd naar een tekenreeks met de <xref:System.String.Format%2A>methode, waardoor de `format` tekenreeks en `args` -matrix naar de tekenreeks voor opmaak als het bericht voor het gebeurtenissenlogboek.</xref:System.String.Format%2A>      > [!NOTE] > De maximale waarde van de `id` parameter 65.535 is. Als de `id` opgegeven waarde groter is dan 65.535, wordt de maximale waarde gebruikt."
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer. doorgaans is dit de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: "Een van de opsommingswaarden die aangeeft welk type gebeurtenis terechtgekomen, waardoor de tracering."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis. De combinatie van `source` en `id` een gebeurtenis wordt aangeduid."
    - id: format
      type: System.String
      description: "Een indelingstekenreeks die nul of meer indeling items bevat die overeenkomen met de objecten in de `args` matrix."
    - id: args
      type: System.Object[]
      description: "Een <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> matrix met nul of meer objecten om te formatteren."
  overload: System.Diagnostics.EventLogTraceListener.TraceEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code>is niet opgegeven.       - of - de tekenreeks van logboekinvoer 32.766 tekens overschrijdt."
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: EventLogTraceListener.Write(String)
  fullName: System.Diagnostics.EventLogTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Wordt een bericht naar het gebeurtenislogboek voor dit exemplaar."
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Het bericht om te schrijven."
  overload: System.Diagnostics.EventLogTraceListener.Write*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>message</code>32.766 tekens overschrijdt."
  platform:
  - net462
- uid: System.Diagnostics.EventLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: EventLogTraceListener.WriteLine(String)
  fullName: System.Diagnostics.EventLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Wordt een bericht naar het gebeurtenislogboek voor dit exemplaar."
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Het bericht om te schrijven."
  overload: System.Diagnostics.EventLogTraceListener.WriteLine*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>message</code>32.766 tekens overschrijdt."
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.EventLogTraceListener.#ctor
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLogTraceListener()
  nameWithType: EventLogTraceListener.EventLogTraceListener()
  fullName: System.Diagnostics.EventLogTraceListener.EventLogTraceListener()
- uid: System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLogTraceListener(EventLog)
  nameWithType: EventLogTraceListener.EventLogTraceListener(EventLog)
  fullName: System.Diagnostics.EventLogTraceListener.EventLogTraceListener(EventLog)
- uid: System.Diagnostics.EventLog
  parent: System.Diagnostics
  isExternal: false
  name: EventLog
  nameWithType: EventLog
  fullName: System.Diagnostics.EventLog
- uid: System.Diagnostics.EventLogTraceListener.#ctor(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLogTraceListener(String)
  nameWithType: EventLogTraceListener.EventLogTraceListener(String)
  fullName: System.Diagnostics.EventLogTraceListener.EventLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLogTraceListener.Close
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: EventLogTraceListener.Close()
  fullName: System.Diagnostics.EventLogTraceListener.Close()
- uid: System.Diagnostics.EventLogTraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLogTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.EventLogTraceListener.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLogTraceListener.EventLog
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLog
  nameWithType: EventLogTraceListener.EventLog
  fullName: System.Diagnostics.EventLogTraceListener.EventLog
- uid: System.Diagnostics.EventLogTraceListener.Name
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Name
  nameWithType: EventLogTraceListener.Name
  fullName: System.Diagnostics.EventLogTraceListener.Name
- uid: System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.EventLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.EventLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.EventLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.EventLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.EventLogTraceListener.Write(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: EventLogTraceListener.Write(String)
  fullName: System.Diagnostics.EventLogTraceListener.Write(String)
- uid: System.Diagnostics.EventLogTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: EventLogTraceListener.WriteLine(String)
  fullName: System.Diagnostics.EventLogTraceListener.WriteLine(String)
- uid: System.Diagnostics.EventLogTraceListener.#ctor*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLogTraceListener
  nameWithType: EventLogTraceListener.EventLogTraceListener
- uid: System.Diagnostics.EventLogTraceListener.Close*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Close
  nameWithType: EventLogTraceListener.Close
- uid: System.Diagnostics.EventLogTraceListener.Dispose*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: EventLogTraceListener.Dispose
- uid: System.Diagnostics.EventLogTraceListener.EventLog*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLog
  nameWithType: EventLogTraceListener.EventLog
- uid: System.Diagnostics.EventLogTraceListener.Name*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Name
  nameWithType: EventLogTraceListener.Name
- uid: System.Diagnostics.EventLogTraceListener.TraceData*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: EventLogTraceListener.TraceData
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: EventLogTraceListener.TraceEvent
- uid: System.Diagnostics.EventLogTraceListener.Write*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Write
  nameWithType: EventLogTraceListener.Write
- uid: System.Diagnostics.EventLogTraceListener.WriteLine*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: EventLogTraceListener.WriteLine
