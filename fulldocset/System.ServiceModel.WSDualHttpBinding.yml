### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WSDualHttpBinding
  id: WSDualHttpBinding
  children:
  - System.ServiceModel.WSDualHttpBinding.#ctor
  - System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)
  - System.ServiceModel.WSDualHttpBinding.#ctor(System.String)
  - System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal
  - System.ServiceModel.WSDualHttpBinding.ClientBaseAddress
  - System.ServiceModel.WSDualHttpBinding.CreateBindingElements
  - System.ServiceModel.WSDualHttpBinding.EnvelopeVersion
  - System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode
  - System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize
  - System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize
  - System.ServiceModel.WSDualHttpBinding.MessageEncoding
  - System.ServiceModel.WSDualHttpBinding.ProxyAddress
  - System.ServiceModel.WSDualHttpBinding.ReaderQuotas
  - System.ServiceModel.WSDualHttpBinding.ReliableSession
  - System.ServiceModel.WSDualHttpBinding.Scheme
  - System.ServiceModel.WSDualHttpBinding.Security
  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas
  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession
  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity
  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding
  - System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  - System.ServiceModel.WSDualHttpBinding.TextEncoding
  - System.ServiceModel.WSDualHttpBinding.TransactionFlow
  - System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy
  langs:
  - csharp
  name: WSDualHttpBinding
  nameWithType: WSDualHttpBinding
  fullName: System.ServiceModel.WSDualHttpBinding
  type: Class
  summary: "Een veilige en interoperabel binding die is ontworpen voor gebruik met duplex servicecontracten waarmee services en -clients voor berichten verzenden en ontvangen."
  remarks: "De WSDualHttpBinding dezelfde ondersteuning biedt voor webservice protocollen als de <xref:System.ServiceModel.WSHttpBinding>, maar voor gebruik met duplex contracten.</xref:System.ServiceModel.WSHttpBinding> WSDualHttpBinding SOAP-beveiliging ondersteunt alleen en betrouwbare messaging vereist. Deze binding vereist dat de client heeft een openbare URI die een callback-eindpunt voor de service biedt. Dit wordt opgegeven door de <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>.</xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> Een dubbele binding wordt het IP-adres van de client naar de service. De client moet beveiliging gebruiken om ervoor te zorgen dat deze alleen verbinding met services het vertrouwensrelaties maakt.       Standaard genereert de WSDualHttpBinding de volgende binding-element-stack:- <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>- <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>- <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>- <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>- <xref:System.ServiceModel.Channels.OneWayBindingElement>- <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>- <xref:System.ServiceModel.Channels.HttpTransportBindingElement></xref:System.ServiceModel.Channels.HttpTransportBindingElement> </xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement> </xref:System.ServiceModel.Channels.OneWayBindingElement> </xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> </xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> </xref:System.ServiceModel.Channels.ReliableSessionBindingElement> </xref:System.ServiceModel.Channels.TransactionFlowBindingElement>"
  example:
  - "The following example shows how to specify the `wsDualHttpBinding` binding in a configuration file.  \n  \n [!code-cs[S_dualhttp#134](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#134)]"
  syntax:
    content: 'public class WSDualHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'
  inheritance:
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: WSDualHttpBinding()
  nameWithType: WSDualHttpBinding.WSDualHttpBinding()
  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.WSDualHttpBinding&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following example shows how to use the default constructor for wsDualHttpBinding.  \n  \n [!code-cs[S_dualhttp#1](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#1)]\n [!code-vb[S_dualhttp#1](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#1)]"
  syntax:
    content: public WSDualHttpBinding ();
    parameters: []
  overload: System.ServiceModel.WSDualHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)
  id: '#ctor(System.ServiceModel.WSDualHttpSecurityMode)'
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: WSDualHttpBinding(WSDualHttpSecurityMode)
  nameWithType: WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)
  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.WSDualHttpBinding&quot;> </xref> klasse met een bepaald type beveiliging die wordt gebruikt door de binding."
  remarks: "Door het <xref:System.ServiceModel.WSDualHttpBinding>dus er is geen constructor die een switch in te schakelen omdat er zich op de <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29>constructor voor de <xref:System.ServiceModel.WSHttpBinding>.</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> biedt</xref:System.ServiceModel.WSDualHttpBinding> is betrouwbare berichten vereist"
  example:
  - "The following example shows how to use the `wsDualHttpBinding` constructor with a security mode.  \n  \n [!code-cs[S_dualhttp#3](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#3)]\n [!code-vb[S_dualhttp#3](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#3)]"
  syntax:
    content: public WSDualHttpBinding (System.ServiceModel.WSDualHttpSecurityMode securityMode);
    parameters:
    - id: securityMode
      type: System.ServiceModel.WSDualHttpSecurityMode
      description: "De waarde van <xref href=&quot;System.ServiceModel.WSDualHttpSecurityMode&quot;> </xref> die aangeeft welk type dat wordt gebruikt bij het SOAP-bericht en voor de client."
  overload: System.ServiceModel.WSDualHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: WSDualHttpBinding(String)
  nameWithType: WSDualHttpBinding.WSDualHttpBinding(String)
  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.WSDualHttpBinding&quot;> </xref> klasse met een binding die is opgegeven met de configuratienaam."
  syntax:
    content: public WSDualHttpBinding (string configName);
    parameters:
    - id: configName
      type: System.String
      description: "De configuratienaam van de binding voor de <xref href=&quot;System.ServiceModel.Configuration.WSHttpBindingElement&quot;> </xref>."
  overload: System.ServiceModel.WSDualHttpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "De bindingselement met de naam <code> configurationName </code> is niet gevonden."
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de proxyserver voor lokale adressen overslaan."
  remarks: "Er is een Internet-bron lokaal als dit een lokaal adres heeft. Een lokaal adres is een die zich op dezelfde computer, de lokale LAN of het intranet en wordt ge√Ødentificeerd, syntaxis, door het ontbreken van een punt (.) zoals in de URI&quot;s &quot;http://webserver/&quot; en &quot;http://localhost/&quot;.       De BypassProxyOnLocal eigenschap bepaalt u of de eindpunten geconfigureerd met de <xref:System.ServiceModel.WSDualHttpBinding>proxyserver gebruiken bij het openen van lokale bronnen.</xref:System.ServiceModel.WSDualHttpBinding>       Als BypassProxyOnLocal `true`, aanvragen voor lokale internetbronnen gebruik niet de proxyserver. Gebruik de hostnaam (plaats `localhost`) als u wilt dat clients om te gaan via een proxy wanneer praten met services op dezelfde computer als deze eigenschap is ingesteld op `true`.       Wanneer BypassProxyOnLocal is `false`, alle Internet-aanvragen worden gedaan via de proxy-server."
  example:
  - "The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example sets this property to indicate that the proxy should be bypassed for local resources.  \n  \n [!code-cs[S_dualhttp#6](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#6)]\n [!code-vb[S_dualhttp#6](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#6)]  \n  \n The value of this property can also be set in the configuration file.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het overslaan van de proxyserver voor lokale adressen; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress
  id: ClientBaseAddress
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ClientBaseAddress
  nameWithType: WSDualHttpBinding.ClientBaseAddress
  fullName: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van het basisadres van de client."
  remarks: "Deze openbare URI voor de client biedt de callback-eindpunt vereist voor de contactgegevens van de client wanneer het contract een duplex-service."
  example:
  - "The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \n  \n [!code-cs[S_dualhttp#8](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#8)]\n [!code-vb[S_dualhttp#8](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#8)]"
  syntax:
    content: public Uri ClientBaseAddress { get; set; }
    return:
      type: System.Uri
      description: "De <xref:System.Uri>die het basisadres van de client.</xref:System.Uri> De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: WSDualHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WSDualHttpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retourneert een geordende verzameling van bindingelementen die zijn opgenomen in de huidige binding."
  remarks: ''
  example:
  - "The following example shows how to get an ordered collection of binding elements contained in the current binding.  \n  \n [!code-cs[S_dualhttp#20](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#20)]\n [!code-vb[S_dualhttp#20](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#20)]"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "Een <xref:System.ServiceModel.Channels.BindingElementCollection>waarin een <xref href=&quot;System.ServiceModel.Channels.TransactionFlowBindingElement&quot;> </xref> en, omdat een betrouwbare sessie is vereist voor de <xref href=&quot;System.ServiceModel.WSDualHttpBinding&quot;> </xref>, een <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref>.</xref:System.ServiceModel.Channels.BindingElementCollection>"
  overload: System.ServiceModel.WSDualHttpBinding.CreateBindingElements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: EnvelopeVersion
  nameWithType: WSDualHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Hiermee haalt u de versie van SOAP die wordt gebruikt voor berichten die door deze binding worden verwerkt."
  remarks: ''
  example:
  - "The following example shows how to get the version of SOAP that is used for messages that are processed by this binding.  \n  \n [!code-cs[S_dualhttp#21](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#21)]\n [!code-vb[S_dualhttp#21](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#21)]"
  syntax:
    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "De waarde van de <xref:System.ServiceModel.EnvelopeVersion>die wordt gebruikt bij deze binding.</xref:System.ServiceModel.EnvelopeVersion> De waarde moet altijd SOAP 1.2."
  overload: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de hostnaam van de bereiken van de service tijdens het vergelijken van de URI wordt gebruikt."
  remarks: ''
  example:
  - "The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \n  \n [!code-cs[S_dualhttp#9](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#9)]\n [!code-vb[S_dualhttp#9](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#9)]"
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: "De <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>waarde die aangeeft of de hostnaam wordt gebruikt bij het bereiken van de service bij het overeenkomende URI.</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> De standaardwaarde is <xref href=&quot;System.ServiceModel.HostNameComparisonMode&quot;> </xref>, die in het overeenkomen met de naam van de host worden genegeerd."
  overload: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van de maximale hoeveelheid geheugen, in bytes, die kunnen worden toegewezen aan de manager van bericht buffers die berichten op de eindpunten die bij deze binding is geconfigureerd ontvangen."
  remarks: "De <xref:System.ServiceModel.Channels.BufferManager>nemen de opslagkosten van het gebruik van buffers met een buffergroep.</xref:System.ServiceModel.Channels.BufferManager> Buffers zijn vereist om berichten te verwerken door de service als ze zich buiten het kanaal. Als er niet voldoende geheugen in de buffergroep voor het verwerken van de belasting van het bericht, de <xref:System.ServiceModel.Channels.BufferManager>moet extra geheugen toewijzen van de CLR-heap, waardoor de overhead van de verzameling afval.</xref:System.ServiceModel.Channels.BufferManager> Uitgebreide toewijzing van de opslagruimte CLR-garbagecollection wordt aangegeven dat de grootte van de buffergroep is te klein en dat de prestaties kan worden verbeterd met een grotere toewijzing door de MaxBufferPoolSize limiet te verhogen.       De beperkingen met betrekking tot de hier ingestelde buffergrootte zijn voor het optimaliseren van de prestaties van berichten worden uitgewisseld. Als een bericht de maximale waarde voor de buffer die is ingesteld overschrijdt, is het niet verwijderd. In plaats daarvan meer geheugen van de CLR-heap wordt aangevraagd en dit leidt ertoe dat meer garbagecollection overhead dan het gebruik van de buffers."
  example:
  - "The following example shows how to set the `MaxBufferPoolSize`.  \n  \n [!code-cs[S_dualhttp#10](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#10)]\n [!code-vb[S_dualhttp#10](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#10)]"
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "De maximale grootte in bytes, voor de groep van buffers gebruikt door een eindpunt dat is geconfigureerd met deze binding. De standaardwaarde is 524288 bytes."
  overload: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van de maximale grootte in bytes, voor een bericht dat kan worden ontvangen van een kanaal dat is geconfigureerd met deze binding."
  remarks: "De grootte van de berichten die kunnen worden ontvangen op de kabel door services met behulp van de <xref:System.ServiceModel.WSDualHttpBinding>wordt begrensd door de hoeveelheid geheugen toegewezen voor elk bericht.</xref:System.ServiceModel.WSDualHttpBinding> Dit afhankelijk van de grootte van het bericht is bedoeld om te beperken van blootstelling aan DOS-stijl-aanvallen.       Houd er rekening mee dat de instellingen voor <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A>en <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize%2A>zijn lokale instellingen van gebruikersgedrag.</xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize%2A> </xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> Dit betekent dat ze niet worden verzonden naar de andere eindpunten in de metagegevens. Als u een proxy naar een service met een maximale grootte van 2GB van metagegevens genereert, heeft de proxy nog steeds een standaardwaarde 64 kB. Dit laat de controle van de geschikte grenzen voor bericht en de buffergrootte bericht in het bereik van de lokale groep administrators."
  example:
  - "The following example shows how to get the MaxReceivedMessageSize property.  \n  \n [!code-cs[S_dualhttp#22](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#22)]\n [!code-vb[S_dualhttp#22](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#22)]"
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "De maximale grootte in bytes, voor een bericht dat door de binding wordt verwerkt. De standaardwaarde is 65.536 bytes."
  overload: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde kleiner is dan nul."
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.MessageEncoding
  id: MessageEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: MessageEncoding
  nameWithType: WSDualHttpBinding.MessageEncoding
  fullName: System.ServiceModel.WSDualHttpBinding.MessageEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld of MTOM of Text/XML wordt gebruikt voor het coderen van SOAP-berichten."
  remarks: ''
  example:
  - "The following example shows how to set the `WSMessageEncoding` property to MTOM.  \n  \n [!code-cs[S_dualhttp#11](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#11)]\n [!code-vb[S_dualhttp#11](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#11)]"
  syntax:
    content: public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }
    return:
      type: System.ServiceModel.WSMessageEncoding
      description: "De waarde van <xref href=&quot;System.ServiceModel.WSMessageEncoding&quot;> </xref> die aangeeft dat MTOM of Text/XML wordt gebruikt voor het coderen van SOAP-berichten. De standaardwaarde is <xref href=&quot;System.ServiceModel.WSMessageEncoding&quot;> </xref>."
  overload: System.ServiceModel.WSDualHttpBinding.MessageEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WSDualHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WSDualHttpBinding.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van het URI-adres van de HTTP-proxy."
  remarks: "Als de <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A>is ingesteld op `true`, de waarde van de ProxyAddress wordt genegeerd.</xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A>"
  example:
  - "The following example shows how to specify the address of the HTTP proxy.  \n  \n [!code-cs[S_dualhttp#12](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#12)]\n [!code-vb[S_dualhttp#12](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#12)]"
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: "Een <xref:System.Uri>die fungeert als het adres van de HTTP-proxy.</xref:System.Uri> De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.WSDualHttpBinding.ProxyAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WSDualHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WSDualHttpBinding.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van de beperkingen van de complexiteit van de SOAP-berichten die kunnen worden verwerkt door eindpunten die zijn geconfigureerd met deze binding."
  remarks: "De beperkingen van de complexiteit bevatten items zoals maximale element diepte en een maximale lengte voor inhoud van de tekenreeks in het bericht. De beperkingen beschermen tegen een klasse DOS-aanvallen (DOS) die de complexiteit van bericht gebruiken voor het eindpunt verwerkingsbronnen bezighouden."
  example:
  - "The following example shows how to get the `ReaderQuotas` property.  \n  \n [!code-cs[S_dualhttp#13](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#13)]\n [!code-vb[S_dualhttp#13](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#13)]"
  syntax:
    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "De <xref:System.Xml.XmlDictionaryReaderQuotas>Hiermee worden de beperkingen van de complexiteit.</xref:System.Xml.XmlDictionaryReaderQuotas>"
  overload: System.ServiceModel.WSDualHttpBinding.ReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.ReliableSession
  id: ReliableSession
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ReliableSession
  nameWithType: WSDualHttpBinding.ReliableSession
  fullName: System.ServiceModel.WSDualHttpBinding.ReliableSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Hiermee haalt u een object dat snel toegang tot de eigenschappen van een betrouwbare sessie bindingselement die beschikbaar zijn biedt wanneer u een van de bindingen van het systeem worden geleverd."
  remarks: "De betrouwbare sessie is vereist voor de service is geconfigureerd met een <xref:System.ServiceModel.WSDualHttpBinding>.</xref:System.ServiceModel.WSDualHttpBinding>"
  example:
  - "The following example shows how to get the ReliableSession property.  \n  \n [!code-cs[S_dualhttp#14](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#14)]\n [!code-vb[S_dualhttp#14](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#14)]"
  syntax:
    content: public System.ServiceModel.ReliableSession ReliableSession { get; set; }
    return:
      type: System.ServiceModel.ReliableSession
      description: "De <xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref> die biedt snel toegang tot de eigenschappen van een betrouwbare sessie bindingselement die beschikbaar zijn wanneer u een van de bindingen van het systeem worden geleverd."
  overload: System.ServiceModel.WSDualHttpBinding.ReliableSession*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.Scheme
  id: Scheme
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: Scheme
  nameWithType: WSDualHttpBinding.Scheme
  fullName: System.ServiceModel.WSDualHttpBinding.Scheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Hiermee wordt de URI-transportschema voor de kanalen en -listeners die zijn geconfigureerd met deze binding."
  remarks: ''
  example:
  - "The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \n  \n [!code-cs[S_dualhttp#15](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#15)]\n [!code-vb[S_dualhttp#15](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#15)]"
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: 'Het transportschema: &quot;http&quot;.'
  overload: System.ServiceModel.WSDualHttpBinding.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.Security
  id: Security
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: Security
  nameWithType: WSDualHttpBinding.Security
  fullName: System.ServiceModel.WSDualHttpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Hiermee haalt u een object dat Hiermee geeft u de beveiligingsinstellingen die bij deze binding gebruikt."
  remarks: "Een dubbele binding wordt het IP-adres van de client naar de service. De client moet beveiliging gebruiken om ervoor te zorgen dat deze alleen verbinding met services het vertrouwensrelaties maakt."
  example:
  - "The following example shows how to get the type of security of the binding.  \n  \n [!code-cs[S_dualhttp#16](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#16)]\n [!code-vb[S_dualhttp#16](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#16)]"
  syntax:
    content: public System.ServiceModel.WSDualHttpSecurity Security { get; set; }
    return:
      type: System.ServiceModel.WSDualHttpSecurity
      description: "De <xref href=&quot;System.ServiceModel.WSDualHttpSecurity&quot;> </xref> die beveiligingsinstellingen die worden gebruikt met de binding bevat. De standaardwaarde van <xref href=&quot;System.ServiceModel.WSDualHttpSecurityMode&quot;> </xref> is <xref href=&quot;System.ServiceModel.WSDualHttpSecurityMode&quot;> </xref>."
  overload: System.ServiceModel.WSDualHttpBinding.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas
  id: ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ShouldSerializeReaderQuotas()
  nameWithType: WSDualHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retourneert een waarde die aangeeft of de <xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*>eigenschap van de standaardwaarde is gewijzigd en moet worden geserialiseerd.</xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*>"
  syntax:
    content: public bool ShouldSerializeReaderQuotas ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*>eigenschapswaarde moet geserialiseerde; anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WSDualHttpBinding.ReaderQuotas*>"
  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession
  id: ShouldSerializeReliableSession
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ShouldSerializeReliableSession()
  nameWithType: WSDualHttpBinding.ShouldSerializeReliableSession()
  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retourneert een waarde die aangeeft of de <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*>eigenschap van de standaardwaarde is gewijzigd en moet worden geserialiseerd.</xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*>"
  syntax:
    content: public bool ShouldSerializeReliableSession ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*>eigenschapswaarde moet geserialiseerde; anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WSDualHttpBinding.ReliableSession*>"
  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: WSDualHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retourneert een waarde die aangeeft of de <xref:System.ServiceModel.WSDualHttpBinding.Security*>eigenschap van de standaardwaarde is gewijzigd en moet worden geserialiseerd.</xref:System.ServiceModel.WSDualHttpBinding.Security*>"
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.ServiceModel.WSDualHttpBinding.Security*>eigenschapswaarde moet geserialiseerde; anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WSDualHttpBinding.Security*>"
  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding
  id: ShouldSerializeTextEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ShouldSerializeTextEncoding()
  nameWithType: WSDualHttpBinding.ShouldSerializeTextEncoding()
  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retourneert een waarde die aangeeft of de <xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*>eigenschap van de standaardwaarde is gewijzigd en moet worden geserialiseerd.</xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*>"
  syntax:
    content: public bool ShouldSerializeTextEncoding ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*>eigenschapswaarde moet geserialiseerde; anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WSDualHttpBinding.TextEncoding*>"
  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Haalt een waarde die aangeeft of de inkomende aanvragen worden verwerkt synchroon of asynchroon."
  remarks: "Deze waarde kan worden gewijzigd met behulp van een service model-gedrag."
  example:
  - "The following examples show how to get the <xref:System.ServiceModel.WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> value.  \n  \n [!code-cs[S_dualhttp#23](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#23)]\n [!code-vb[S_dualhttp#23](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#23)]  \n  \n [!code-cs[S_dualhttp#24](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#24)]\n [!code-vb[S_dualhttp#24](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#24)]"
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als aanvragen worden verwerkt, synchroon; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als asynchroon verwerkt. De waarde wordt geretourneerd is altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>voor het asynchroon verwerken van aanvragen."
  overload: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.TextEncoding
  id: TextEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: TextEncoding
  nameWithType: WSDualHttpBinding.TextEncoding
  fullName: System.ServiceModel.WSDualHttpBinding.TextEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van de codering die wordt gebruikt voor de berichttekst."
  remarks: ''
  example:
  - "The following example shows how to get the character encoding that is used for the message text.  \n  \n [!code-cs[S_dualhttp#17](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#17)]\n [!code-vb[S_dualhttp#17](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#17)]"
  syntax:
    content: public System.Text.Encoding TextEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "De <xref:System.Text.Encoding>die aangeeft dat de codering die wordt gebruikt.</xref:System.Text.Encoding> De standaardwaarde is <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: System.ServiceModel.WSDualHttpBinding.TextEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.TransactionFlow
  id: TransactionFlow
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: TransactionFlow
  nameWithType: WSDualHttpBinding.TransactionFlow
  fullName: System.ServiceModel.WSDualHttpBinding.TransactionFlow
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of deze binding stromende WS-transacties moet ondersteunen."
  remarks: "De standaardwaarde bepaalt dat clients transacties niet stromen en services berichten met een berichtkop gestroomde transactie weigeren."
  example:
  - "The following example shows how to set the `TransactionFlow` property to support the flowing of transactions.  \n  \n [!code-cs[S_dualhttp#18](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#18)]\n [!code-vb[S_dualhttp#18](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#18)]"
  syntax:
    content: public bool TransactionFlow { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het overlopen van transacties wordt ondersteund; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.WSDualHttpBinding.TransactionFlow*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de HTTP-proxy automatisch geconfigureerd van het systeem moet worden gebruikt, indien beschikbaar."
  remarks: ''
  example:
  - "The following example shows how to set the `UseDefaultWebProxy` property to use the auto-configured HTTP proxy of the system.  \n  \n [!code-cs[S_dualhttp#19](~/add/codesnippet/csharp/s_dualhttp.cs/program.cs#19)]\n [!code-vb[S_dualhttp#19](~/add/codesnippet/visualbasic/s_dualhttp.cs/module1.vb#19)]"
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de HTTP-proxy automatisch geconfigureerd van het systeem moet worden gebruikt, indien beschikbaar; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.Binding
  isExternal: false
  name: System.ServiceModel.Channels.Binding
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.WSDualHttpBinding.#ctor
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: WSDualHttpBinding()
  nameWithType: WSDualHttpBinding.WSDualHttpBinding()
  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding()
- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: WSDualHttpBinding(WSDualHttpSecurityMode)
  nameWithType: WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)
  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)
- uid: System.ServiceModel.WSDualHttpSecurityMode
  parent: System.ServiceModel
  isExternal: false
  name: WSDualHttpSecurityMode
  nameWithType: WSDualHttpSecurityMode
  fullName: System.ServiceModel.WSDualHttpSecurityMode
- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.String)
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: WSDualHttpBinding(String)
  nameWithType: WSDualHttpBinding.WSDualHttpBinding(String)
  fullName: System.ServiceModel.WSDualHttpBinding.WSDualHttpBinding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ClientBaseAddress
  nameWithType: WSDualHttpBinding.ClientBaseAddress
  fullName: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WSDualHttpBinding.CreateBindingElements
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: WSDualHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WSDualHttpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WSDualHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WSDualHttpBinding.MessageEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MessageEncoding
  nameWithType: WSDualHttpBinding.MessageEncoding
  fullName: System.ServiceModel.WSDualHttpBinding.MessageEncoding
- uid: System.ServiceModel.WSMessageEncoding
  parent: System.ServiceModel
  isExternal: false
  name: WSMessageEncoding
  nameWithType: WSMessageEncoding
  fullName: System.ServiceModel.WSMessageEncoding
- uid: System.ServiceModel.WSDualHttpBinding.ProxyAddress
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WSDualHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WSDualHttpBinding.ProxyAddress
- uid: System.ServiceModel.WSDualHttpBinding.ReaderQuotas
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSDualHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WSDualHttpBinding.ReaderQuotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.ServiceModel.WSDualHttpBinding.ReliableSession
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ReliableSession
  nameWithType: WSDualHttpBinding.ReliableSession
  fullName: System.ServiceModel.WSDualHttpBinding.ReliableSession
- uid: System.ServiceModel.ReliableSession
  parent: System.ServiceModel
  isExternal: false
  name: ReliableSession
  nameWithType: ReliableSession
  fullName: System.ServiceModel.ReliableSession
- uid: System.ServiceModel.WSDualHttpBinding.Scheme
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WSDualHttpBinding.Scheme
  fullName: System.ServiceModel.WSDualHttpBinding.Scheme
- uid: System.ServiceModel.WSDualHttpBinding.Security
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: Security
  nameWithType: WSDualHttpBinding.Security
  fullName: System.ServiceModel.WSDualHttpBinding.Security
- uid: System.ServiceModel.WSDualHttpSecurity
  parent: System.ServiceModel
  isExternal: false
  name: WSDualHttpSecurity
  nameWithType: WSDualHttpSecurity
  fullName: System.ServiceModel.WSDualHttpSecurity
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas()
  nameWithType: WSDualHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas()
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeReliableSession()
  nameWithType: WSDualHttpBinding.ShouldSerializeReliableSession()
  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession()
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: WSDualHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeTextEncoding()
  nameWithType: WSDualHttpBinding.ShouldSerializeTextEncoding()
  fullName: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding()
- uid: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WSDualHttpBinding.TextEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: TextEncoding
  nameWithType: WSDualHttpBinding.TextEncoding
  fullName: System.ServiceModel.WSDualHttpBinding.TextEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.WSDualHttpBinding.TransactionFlow
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: TransactionFlow
  nameWithType: WSDualHttpBinding.TransactionFlow
  fullName: System.ServiceModel.WSDualHttpBinding.TransactionFlow
- uid: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WSDualHttpBinding.#ctor*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: WSDualHttpBinding
  nameWithType: WSDualHttpBinding.WSDualHttpBinding
- uid: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBinding.BypassProxyOnLocal
- uid: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ClientBaseAddress
  nameWithType: WSDualHttpBinding.ClientBaseAddress
- uid: System.ServiceModel.WSDualHttpBinding.CreateBindingElements*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: WSDualHttpBinding.CreateBindingElements
- uid: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WSDualHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBinding.MaxBufferPoolSize
- uid: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WSDualHttpBinding.MessageEncoding*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MessageEncoding
  nameWithType: WSDualHttpBinding.MessageEncoding
- uid: System.ServiceModel.WSDualHttpBinding.ProxyAddress*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WSDualHttpBinding.ProxyAddress
- uid: System.ServiceModel.WSDualHttpBinding.ReaderQuotas*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSDualHttpBinding.ReaderQuotas
- uid: System.ServiceModel.WSDualHttpBinding.ReliableSession*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ReliableSession
  nameWithType: WSDualHttpBinding.ReliableSession
- uid: System.ServiceModel.WSDualHttpBinding.Scheme*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WSDualHttpBinding.Scheme
- uid: System.ServiceModel.WSDualHttpBinding.Security*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: Security
  nameWithType: WSDualHttpBinding.Security
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas
  nameWithType: WSDualHttpBinding.ShouldSerializeReaderQuotas
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeReliableSession
  nameWithType: WSDualHttpBinding.ShouldSerializeReliableSession
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: WSDualHttpBinding.ShouldSerializeSecurity
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeTextEncoding
  nameWithType: WSDualHttpBinding.ShouldSerializeTextEncoding
- uid: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WSDualHttpBinding.TextEncoding*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: TextEncoding
  nameWithType: WSDualHttpBinding.TextEncoding
- uid: System.ServiceModel.WSDualHttpBinding.TransactionFlow*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: TransactionFlow
  nameWithType: WSDualHttpBinding.TransactionFlow
- uid: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBinding.UseDefaultWebProxy
