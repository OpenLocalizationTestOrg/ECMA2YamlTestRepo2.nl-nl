### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.MD5
  id: MD5
  children:
  - System.Security.Cryptography.MD5.#ctor
  - System.Security.Cryptography.MD5.Create
  - System.Security.Cryptography.MD5.Create(System.String)
  langs:
  - csharp
  name: MD5
  nameWithType: MD5
  fullName: System.Security.Cryptography.MD5
  type: Class
  summary: "Hiermee geeft u de abstracte klasse waaruit alle implementaties van de MD5-hash-algoritme overnemen."
  remarks: "Hash-functies kaart binaire tekenreeksen van een willekeurige lengte in kleine binaire tekenreeksen met een vaste lengte. Een cryptografische hash-functie is de eigenschap is invoerreeksen twee afzonderlijke invoer vinden die hash op dezelfde waarde; hashes van twee sets van gegevens moeten overeenkomen dat wil zeggen, met als de bijbehorende gegevens ook overeenkomt. Kleine wijzigingen in de gegevens leiden tot grote, onvoorspelbare wijzigingen in de hash.       De grootte van de hash voor de MD5-algoritme is 128 bits.       De <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>methoden van de MD5-klasse de hash retourneren als een matrix van 16 bytes.</xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>  Houd er rekening mee dat sommige implementaties MD5 produceren van een hash van 32 tekens, hexadecimaal-indeling.  Als u wilt samenwerken met dergelijke implementaties, formatteer de retourwaarde van de <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>methoden als een hexadecimale waarde.</xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>      > [!NOTE] > Nieuwere hash-functies, zoals de Secure Hash-algoritmen SHA-256 en SHA-512 beschikbaar zijn. Overweeg het gebruik van de <xref:System.Security.Cryptography.SHA256>klasse of de <xref:System.Security.Cryptography.SHA512>klasse in plaats van de MD5-klasse.</xref:System.Security.Cryptography.SHA512> </xref:System.Security.Cryptography.SHA256> MD5 alleen gebruiken voor compatibiliteit met oudere toepassingen en gegevens."
  example:
  - "The following code example computes the MD5 hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.  The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.  \n  \n [!code-vb[Security.Cryptography.MD5#1](~/add/codesnippet/visualbasic/t-system.security.crypto_105_1.vb)]\n [!code-cs[Security.Cryptography.MD5#1](~/add/codesnippet/csharp/t-system.security.crypto_105_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MD5 : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: MD5()
  nameWithType: MD5.MD5()
  fullName: System.Security.Cryptography.MD5.MD5()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref>."
  remarks: "Maken van een exemplaar van de <xref:System.Security.Cryptography.MD5>klasse, gebruikt u de <xref:System.Security.Cryptography.MD5.Create%2A>methode.</xref:System.Security.Cryptography.MD5.Create%2A> </xref:System.Security.Cryptography.MD5>"
  syntax:
    content: protected MD5 ();
    parameters: []
  overload: System.Security.Cryptography.MD5.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.Create
  id: Create
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: Create()
  nameWithType: MD5.Create()
  fullName: System.Security.Cryptography.MD5.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Maakt een exemplaar van de standaardimplementatie van de <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> hash-algoritme."
  syntax:
    content: public static System.Security.Cryptography.MD5 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.MD5
      description: "Een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> hash-algoritme."
  overload: System.Security.Cryptography.MD5.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "De algoritme die is gebruikt met de modus van de Federal Information Processing Standards (FIPS) is ingeschakeld, maar is niet FIPS-compatibel."
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: Create(String)
  nameWithType: MD5.Create(String)
  fullName: System.Security.Cryptography.MD5.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Maakt een exemplaar van de opgegeven implementatie van de <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> hash-algoritme."
  remarks: 'Mogelijke waarden voor `algName` zijn: `System.Security.Cryptography.MD5`, `MD5`, `System.Security.Cryptography.MD5CryptoServiceProvider`, en `System.Security.Cryptography.MD5Managed`.'
  syntax:
    content: public static System.Security.Cryptography.MD5 Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "De naam van de specifieke implementatie van <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> te gebruiken."
    return:
      type: System.Security.Cryptography.MD5
      description: "Een nieuw exemplaar van de opgegeven implementatie van <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref>."
  overload: System.Security.Cryptography.MD5.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "De algoritme die is beschreven door de <code> algName </code> parameter is gebruikt met de modus van de Federal Information Processing Standards (FIPS) is ingeschakeld, maar is niet FIPS-compatibel."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.Security.Cryptography.MD5.#ctor
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: MD5()
  nameWithType: MD5.MD5()
  fullName: System.Security.Cryptography.MD5.MD5()
- uid: System.Security.Cryptography.MD5.Create
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create()
  nameWithType: MD5.Create()
  fullName: System.Security.Cryptography.MD5.Create()
- uid: System.Security.Cryptography.MD5
  parent: System.Security.Cryptography
  isExternal: false
  name: MD5
  nameWithType: MD5
  fullName: System.Security.Cryptography.MD5
- uid: System.Security.Cryptography.MD5.Create(System.String)
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create(String)
  nameWithType: MD5.Create(String)
  fullName: System.Security.Cryptography.MD5.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.MD5.#ctor*
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: MD5
  nameWithType: MD5.MD5
- uid: System.Security.Cryptography.MD5.Create*
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create
  nameWithType: MD5.Create
