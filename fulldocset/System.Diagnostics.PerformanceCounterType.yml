### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceCounterType
  id: PerformanceCounterType
  children:
  - System.Diagnostics.PerformanceCounterType.AverageBase
  - System.Diagnostics.PerformanceCounterType.AverageCount64
  - System.Diagnostics.PerformanceCounterType.AverageTimer32
  - System.Diagnostics.PerformanceCounterType.CounterDelta32
  - System.Diagnostics.PerformanceCounterType.CounterDelta64
  - System.Diagnostics.PerformanceCounterType.CounterMultiBase
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  - System.Diagnostics.PerformanceCounterType.CounterTimer
  - System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  - System.Diagnostics.PerformanceCounterType.ElapsedTime
  - System.Diagnostics.PerformanceCounterType.NumberOfItems32
  - System.Diagnostics.PerformanceCounterType.NumberOfItems64
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  - System.Diagnostics.PerformanceCounterType.RawBase
  - System.Diagnostics.PerformanceCounterType.RawFraction
  - System.Diagnostics.PerformanceCounterType.SampleBase
  - System.Diagnostics.PerformanceCounterType.SampleCounter
  - System.Diagnostics.PerformanceCounterType.SampleFraction
  - System.Diagnostics.PerformanceCounterType.Timer100Ns
  - System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  langs:
  - csharp
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
  type: Enum
  summary: "Hiermee geeft u de formule die wordt gebruikt voor het berekenen van de <xref:System.Diagnostics.PerformanceCounter.NextValue*>methode voor een <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> exemplaar.</xref:System.Diagnostics.PerformanceCounter.NextValue*>"
  remarks: "Sommige typen teller vertegenwoordigen onbewerkte gegevens, terwijl anderen berekende waarden die zijn gebaseerd op een of meer voorbeelden van teller vertegenwoordigen. De volgende categorieÃ«n classificeren de soorten items die beschikbaar zijn.      -Gemiddelde: een waarde meten na verloop van tijd en het gemiddelde van de laatste twee metingen weergeven. Die zijn gekoppeld aan elk prestatiemeteritem gemiddelde is een Basisteller het aantal steekproeven dat betrokken houdt.      -Verschil: de laatste waarde uit het vorige voorbeeld afgetrokken en het verschil weergegeven als het positieve; een negatief ze een nul weergegeven.      -Momentopname: de meest recente meting worden weergegeven.      -Percentage: berekende waarden weergeven als een percentage.      -Snelheid: voorbeeld van een toenemend aantal gebeurtenissen gedurende een bepaalde periode en delen van de wijziging in het aantal waarden door een wijziging in de tijd om een snelheid van de activiteit weer te geven.       Als steekproef nemen prestatiemetergegevens, kan met behulp van een prestatiemeteritem-type dat een gemiddelde vertegenwoordigt maken onbewerkte gegevenswaarden relevant zijn voor het gebruik. Bijvoorbeeld, de teller onbewerkte gegevens `NumberOfItems64` gegevens die is redelijk willekeurige steekproef voorbeeld kan worden weergegeven. De formule voor de berekening van een gemiddelde van de waarden die de teller geretourneerd (X 0 + X 1 +... + X n) / n, waarbij elke X i is een voorbeeld van een onbewerkte prestatiemeteritems.       Frequentie waarmee items zijn vergelijkbaar met het gemiddelde van tellers, maar meer nuttig voor situaties waarin het tarief neemt toe naarmate een bron wordt gebruikt. Een formule waarvan de snel het gemiddelde berekent is ((X n -X 0) / T n -T (0)) / frequentie, waarbij elke X i is een voorbeeld van een prestatiemeteritem en elke T i is de tijd die de bijbehorende steekproef is genomen. Het resultaat is het gemiddelde gebruik per seconde.      > [!NOTE] > Tenzij anders vermeld, is de tijd base seconden.       Bij het implementeren van toepassingen (maken en te maken van aangepaste prestatiemeteritems) werkt u met het typen van de prestatie-teller die afhankelijk zijn van een bijbehorende Basisteller die wordt gebruikt in de berekeningen. De Basisteller moet direct na het bijbehorende item in de <xref:System.Diagnostics.CounterCreationDataCollection>verzameling maakt gebruik van uw toepassing.</xref:System.Diagnostics.CounterCreationDataCollection> De volgende tabel bevat de typen Basisteller met de overeenkomende prestaties teller typen.      | Teller basistype | Prestaties itemtypen |   |-----------------------|-------------------------------|   |`AverageBase`|`AverageTimer32`<br /><br /> `AverageCount64`|   |`CounterMultiBase`|`CounterMultiTimer`<br /><br /> `CounterMultiTimerInverse`<br /><br /> `CounterMultiTimer100Ns`<br /><br /> `CounterMultiTimer100NsInverse`|   |`RawBase`|`RawFraction`|   |`SampleBase`|`SampleFraction`|"
  example:
  - "The following examples demonstrate several of the counter types in the PerformanceCounterType enumeration.  \n  \n `AverageCount64`  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_1.vb)]  \n  \n `AverageTimer32`  \n  \n [!code-vb[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_2.vb)]\n [!code-cpp[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_2.cpp)]\n [!code-cs[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_2.cs)]  \n  \n `ElapsedTime`  \n  \n [!code-cs[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_3.cs)]\n [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_3.cpp)]\n [!code-vb[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_3.vb)]  \n  \n `NumberOfItems32`  \n  \n [!code-cs[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_4.cs)]\n [!code-cpp[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_4.cpp)]\n [!code-vb[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_4.vb)]  \n  \n `NumberOfItems64`  \n  \n [!code-cpp[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_5.cpp)]\n [!code-cs[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_5.cs)]\n [!code-vb[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_5.vb)]  \n  \n `SampleFraction`  \n  \n [!code-vb[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_6.vb)]\n [!code-cs[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_6.cs)]  \n  \n `RateOfCountsPerSecond32`  \n  \n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_7.cs)]\n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_7.vb)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_7.cpp)]  \n  \n `RateOfCountsPerSecond64`  \n  \n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_8.vb)]\n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_8.cs)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_8.cpp)]  \n  \n `RawFraction`  \n  \n [!code-cs[PerformanceCounterType.RawFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_9.cs)]\n [!code-cpp[PerformanceCounterType.RawFraction#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_9.cpp)]\n [!code-vb[PerformanceCounterType.RawFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_9.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Diagnostics.AlphabeticalEnumConverter))]

      public enum PerformanceCounterType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  id: AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een Basisteller die wordt gebruikt bij het berekenen van gemiddelden tijd of count, zoals <xref uid=&quot;langword_csharp_AverageTimer32&quot; name=&quot;AverageTimer32&quot; href=&quot;&quot;> </xref> en <xref uid=&quot;langword_csharp_AverageCount64&quot; name=&quot;AverageCount64&quot; href=&quot;&quot;> </xref>. Slaat de noemer voor het berekenen van prestatiemeteritem aanwezig &quot;tijd per bewerking&quot; of &quot;aantal per bewerking&quot;."
  syntax:
    content: AverageBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  id: AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een gemiddelde teller die laat hoeveel items worden verwerkt zien, gemiddeld tijdens een bewerking. Prestatiemeteritems van dit type weer een ratio van de items die zijn verwerkt voor het aantal bewerkingen voltooid. De verhouding wordt berekend door het aantal items dat is verwerkt tijdens de laatste interval om het aantal bewerkingen voltooid tijdens de laatste interval te vergelijken."
  remarks: "Formula: (N 1 -N 0)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, and the B 1 and B 0 are their corresponding `AverageBase` values. Thus, the numerator represents the numbers of items processed during the sample interval, and the denominator represents the number of operations completed during the sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk Bytes/Transfer."
  syntax:
    content: AverageCount64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  id: AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een gemiddelde teller die de tijd die nodig is meet, Gemiddeld, een proces of de bewerking te voltooien. Prestatiemeteritems van dit type weergegeven een ratio van de totale verstreken tijd van het controle-interval voor het aantal processen of operations gedurende die tijd voltooid. Dit tellertype meet tijd in tikken van de systeemklok."
  remarks: "Formula: ((N 1 -N 0)/F)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, B 1 and B 0 are their corresponding `AverageBase` values, and F is the number of ticks per second. The value of F is factored into the equation so that the result can be displayed in seconds. Thus, the numerator represents the numbers of ticks counted during the last sample interval, F represents the frequency of the ticks, and the denominator represents the number of operations completed during the last sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk sec/Transfer."
  syntax:
    content: AverageTimer32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  id: CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een verschil-teller die de wijziging in het aangepaste kenmerk tussen de twee meest recente voorbeeld intervallen wordt."
  remarks: 'Formule: N 1 -N 0, waarbij N 1 en N 0 resultaten van de prestatie-items zijn.'
  syntax:
    content: CounterDelta32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  id: CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een verschil-teller die de wijziging in het aangepaste kenmerk tussen de twee meest recente voorbeeld intervallen wordt. Dit is hetzelfde als de <xref uid=&quot;langword_csharp_CounterDelta32&quot; name=&quot;CounterDelta32&quot; href=&quot;&quot;> </xref> tellertype, behalve dat is groter velden voor hogere waarden worden gebruikt."
  remarks: 'Formule: N 1 -N 0, waarbij N 1 en N 0 resultaten van de prestatie-items zijn.'
  syntax:
    content: CounterDelta64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  id: CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een Basisteller die het aantal items dat aangeeft. Wordt gebruikt als de noemer voor de berekeningen voor het ophalen van een gemiddelde tussen de items die bij het nemen van de tijdsinstellingen van meerdere, door actieve maar vergelijkbare objecten. Used with <xref uid=&quot;langword_csharp_CounterMultiTimer&quot; name=&quot;CounterMultiTimer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimerInverse&quot; name=&quot;CounterMultiTimerInverse&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer100Ns&quot; name=&quot;CounterMultiTimer100Ns&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_CounterMultiTimer100NsInverse&quot; name=&quot;CounterMultiTimer100NsInverse&quot; href=&quot;&quot;></xref>."
  syntax:
    content: CounterMultiBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  id: CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een percentage-teller die de actieve tijd van een of meer onderdelen als een percentage van de totale tijd van het controle-interval weergegeven. Omdat de teller de actieve tijd van onderdelen die tegelijkertijd worden uitgevoerd registreert, kan het resulterende percentage groter zijn dan 100 procent."
  remarks: "Deze teller is een multitimer. Multitimers verzamelt gegevens van meer dan Ã©Ã©n exemplaar van een onderdeel, zoals een processor of de schijf. Dit tellertype verschilt van `CounterMultiTimer100Ns` in die tijd in eenheden van de maatstreepjes van de timer van de prestaties system, in plaats van 100 nanoseconden eenheden gemeten.       Formule: ((1 N - N 0) / (1 D - D 0)) x 100 / B, waar N 1 en N 0 zijn prestaties teller metingen D 1 en 0 D zijn hun bijbehorende tijd metingen tikken van de timer van de prestaties van systeem en de variabele B geeft aan dat de basis telling voor de bewaakte onderdelen (met behulp van een Basisteller van het type `CounterMultiBase`). Dus vertegenwoordigt de teller voor het delen van het controle-interval gedurende welke de bewaakte onderdelen actief waren en de noemer vertegenwoordigt de totale verstreken tijd van het controle-interval."
  syntax:
    content: CounterMultiTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  id: CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een item van het percentage dat de actieve tijd van een of meer onderdelen als een percentage van de totale tijd van het controle-interval. Tijd in eenheden van 100 nanoseconden (ns) gemeten."
  remarks: "Dit tellertype is een multitimer. Multitimers zijn ontworpen voor het bewaken van meer dan Ã©Ã©n exemplaar van een onderdeel, zoals een processor of de schijf.       Formule: ((1 N - N 0) / (1 D - D 0)) x 100 / B, waarbij N 1 en N 0 zijn prestaties teller metingen D 1 en 0 D hun bijbehorende tijd metingen in eenheden van 100 nanoseconden zijn en de variabele B geeft het aantal basis voor de bewaakte onderdelen (met behulp van een Basisteller van het type `CounterMultiBase`). Dus vertegenwoordigt de teller voor het delen van het controle-interval gedurende welke de bewaakte onderdelen actief waren en de noemer vertegenwoordigt de totale verstreken tijd van het controle-interval."
  syntax:
    content: CounterMultiTimer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  id: CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een item van het percentage dat de actieve tijd van een of meer onderdelen als een percentage van de totale tijd van het controle-interval. Prestatiemeteritems van dit type meten van de tijd in eenheden van 100 nanoseconden (ns). Ze de actieve tijd worden afgeleid door het meten van de tijd die de onderdelen niet actief zijn en af te trekken van het resultaat van 100 procent vermenigvuldigen met het aantal objecten die worden bewaakt."
  remarks: "Dit tellertype is een inverse multitimer. Multitimers zijn ontworpen voor het bewaken van meer dan Ã©Ã©n exemplaar van een onderdeel, zoals een processor of de schijf. Inverse tellers voor het meten van de tijd die een onderdeel niet actief is en afgeleid van de actieve tijd van de meting van de inactieve tijd formule: (B - ((1 N - N 0) / (1 D - D 0))) x 100, waarbij de noemer de totale verstreken tijd van het controle-interval vertegenwoordigt, de teller geeft de tijd tijdens het interval waarop bewaakte onderdelen niet actief zijn en B geeft het aantal onderdelen die worden bewaakt , met behulp van een Basisteller van het type `CounterMultiBase`."
  syntax:
    content: CounterMultiTimer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  id: CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een item van het percentage dat de actieve tijd van een of meer onderdelen als een percentage van de totale tijd van het controle-interval. Dit is de actieve tijd afgeleid door het meten van de tijd die de onderdelen niet actief zijn en af te trekken van het resultaat van 100 procent door het aantal objecten die worden bewaakt."
  remarks: "Dit tellertype is een inverse multitimer. Multitimers bewaken meer dan Ã©Ã©n exemplaar van een onderdeel, zoals een processor of de schijf. Inverse tellers meet de tijd die een onderdeel niet actief is en afgeleid van de actieve tijd van de meting.       Deze teller verschilt van `CounterMultiTimer100NsInverse` in die tijd in eenheden van de maatstreepjes van de timer van de prestaties system, in plaats van 100 nanoseconden eenheden gemeten.       Formule: (B - ((1 N - N 0) / (1 D - D 0))) x 100, waarbij de noemer de totale verstreken tijd van het controle-interval vertegenwoordigt, de teller geeft de tijd tijdens het interval waarop bewaakte onderdelen niet actief zijn en B het aantal onderdelen geeft wordt bewaakt, met behulp van een Basisteller van het type `CounterMultiBase`."
  syntax:
    content: CounterMultiTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  id: CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Percentage item de gemiddelde tijd toont dat een onderdeel als een percentage van de totale tijd actief is."
  remarks: 'Formule: (1 N - N 0) / (D 1 - D 0), waarbij N 1 en N 0 resultaten van de prestatie-items zijn en D 1 en 0 D hun bijbehorende tijd metingen. Dus vertegenwoordigt de teller voor het delen van het controle-interval gedurende welke de bewaakte onderdelen actief waren en de noemer vertegenwoordigt de totale verstreken tijd van het controle-interval.'
  syntax:
    content: CounterTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  id: CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Percentage item het gemiddelde percentage van actieve tijd waargenomen tijdens de controle-interval geeft. De waarde van deze prestatiemeteritems wordt berekend door het percentage tijd dat de service niet actief was bewaking en af te trekken dat de waarde van 100 procent."
  remarks: "Dit is een tellertype inverse. Inverse tellers meting de tijd die een onderdeel is Noteer active en afgeleid van de actieve tijd van de meting. Dit tellertype is hetzelfde als `CounterTimer100NsInv` , behalve dat de tijd in eenheden van de maatstreepjes van de timer van de prestaties van systeem in plaats van in eenheden van 100 nanoseconden gemeten.       Formule: (1 - ((1 N - N 0) / (1 D - D 0))) x 100, waarbij de teller de tijd tijdens het interval geeft wanneer de bewaakte onderdelen niet actief zijn en de noemer de totale verstreken tijd van het controle-interval vertegenwoordigt."
  syntax:
    content: CounterTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  id: CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een gemiddelde teller die is ontworpen voor het bewaken van de gemiddelde lengte van een wachtrij op een bron gedurende een bepaalde periode. Het verschil tussen de lengte van de wachtrij waargenomen tijdens de laatste twee voorbeeld intervallen gedeeld door de duur van het interval weergeven Dit type item wordt doorgaans gebruikt voor het bijhouden van het aantal items in de wachtrij of wachten."
  remarks: 'Formule: (1 N - N 0) / (D 1 - D 0), waarbij de teller geeft het aantal items in de wachtrij en geeft de tijd van de noemer tijdens de laatste controle-interval is verstreken.'
  syntax:
    content: CountPerTimeInterval32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  id: CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een gemiddelde teller die de gemiddelde lengte van een wachtrij op een resource gedurende een bepaalde periode bewaakt. Items van dit type is weergegeven het verschil tussen de lengte van de wachtrij waargenomen tijdens de laatste twee controle-intervallen worden gedeeld door de duur van het interval. Dit tellertype is hetzelfde als <xref uid=&quot;langword_csharp_CountPerTimeInterval32&quot; name=&quot;CountPerTimeInterval32&quot; href=&quot;&quot;> </xref> , behalve dat gebruikmaakt van grotere velden voor hogere waarden. Dit type van de teller is meestal gebruikt voor het bijhouden van een hoog volume of een zeer groot aantal items in de wachtrij of wachten."
  remarks: 'Formule: (1 N - N 0) / (D 1 - D 0), waarbij de teller geeft het aantal items in een wachtrij en de noemer geeft de tijd is verstreken tijdens het steekproefinterval.'
  syntax:
    content: CountPerTimeInterval64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  id: ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een verschil timer waarin de totale tijd tussen wanneer de component of het proces wordt gestart en de tijd wanneer deze waarde wordt berekend."
  remarks: "Formula: (D 0 - N 0) / F, where D 0 represents the current time, N 0 represents the time the object was started, and F represents the number of time units that elapse in one second. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ System Up Time."
  syntax:
    content: ElapsedTime
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  id: NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een onmiddellijk teller waarin de meest recent waargenomen waarde. Gebruikt, bijvoorbeeld onderhouden van een eenvoudige aantal items of bewerkingen."
  remarks: "Formula: None. Does not display an average, but shows the raw data as it is collected.  \n  \n Counters of this type include Memory\\Available Bytes."
  syntax:
    content: NumberOfItems32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  id: NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een onmiddellijk teller waarin de meest recent waargenomen waarde. Gebruikt, bijvoorbeeld een eenvoudige telling van een zeer groot aantal items of bewerkingen onderhouden. Dit is hetzelfde als <xref uid=&quot;langword_csharp_NumberOfItems32&quot; name=&quot;NumberOfItems32&quot; href=&quot;&quot;> </xref> , behalve dat gebruikmaakt van grotere velden voor hogere waarden."
  remarks: 'De formule: geen. Een gemiddelde niet wordt weergegeven, maar de onbewerkte gegevens bevat omdat deze is verzameld.'
  syntax:
    content: NumberOfItems64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  id: NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een item van het onmiddellijk weergegeven met de meest recent waargenomen waarde in hexadecimalen. Gebruikt, bijvoorbeeld onderhouden van een eenvoudige aantal items of bewerkingen."
  remarks: 'De formule: geen. Een gemiddelde niet wordt weergegeven, maar de onbewerkte gegevens bevat omdat deze is verzameld.'
  syntax:
    content: NumberOfItemsHEX32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  id: NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een onmiddellijk teller waarin de meest recent waargenomen waarde. Gebruikt, bijvoorbeeld een eenvoudige telling van een zeer groot aantal items of bewerkingen onderhouden. Dit is hetzelfde als <xref uid=&quot;langword_csharp_NumberOfItemsHEX32&quot; name=&quot;NumberOfItemsHEX32&quot; href=&quot;&quot;> </xref> , behalve dat gebruikmaakt van grotere velden voor hogere waarden."
  remarks: 'De formule: geen. Een gemiddelde niet wordt weergegeven, maar de onbewerkte gegevens bevat omdat deze is verzameld'
  syntax:
    content: NumberOfItemsHEX64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  id: RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een verschil-teller die het gemiddeld aantal bewerkingen voltooid tijdens elke seconde van het controle-interval toont. Prestatiemeteritems van dit type meten van de tijd in tikken van de systeemklok."
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Operations/sec."
  syntax:
    content: RateOfCountsPerSecond32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  id: RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een verschil-teller die het gemiddeld aantal bewerkingen voltooid tijdens elke seconde van het controle-interval toont. Prestatiemeteritems van dit type meten van de tijd in tikken van de systeemklok. Dit tellertype is hetzelfde als de <xref uid=&quot;langword_csharp_RateOfCountsPerSecond32&quot; name=&quot;RateOfCountsPerSecond32&quot; href=&quot;&quot;> </xref> type, maar grotere velden voor hogere waarden voor het bijhouden van een groot aantal items of bewerkingen per seconde, zoals de frequentie waarmee een byte-overdracht gebruikt."
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Bytes/sec."
  syntax:
    content: RateOfCountsPerSecond64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  id: RawBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een Basisteller waarmee de noemer van een prestatiemeteritem met een algemene rekenkundige fractie daarin worden opgeslagen. Controleer of deze waarde groter dan nul is voordat u deze als een <xref uid=&quot;langword_csharp_RawFraction&quot; name=&quot;RawFraction&quot; href=&quot;&quot;> </xref> berekening waarde."
  syntax:
    content: RawBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  id: RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Onmiddellijk percentage-item de verhouding tussen een subset aan de set als een percentage wordt. Bijvoorbeeld: het vergelijken van het aantal bytes in gebruik is op een schijf met het totale aantal bytes op de schijf. Items van dit type wordt het huidige percentage alleen, niet een gemiddelde gedurende een bepaalde periode."
  remarks: "Formula: (N 0 / D 0) x 100, where D 0 represents a measured attribute (using a base counter of type `RawBase`) and N 0 represents one component of that attribute.  \n  \n Counters of this type include Paging File\\\\% Usage Peak."
  syntax:
    content: RawFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  id: SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een Basisteller slaat het aantal steekproeven genomen wordt onderbroken en wordt gebruikt als een noemer in het gedeelte steekproeven. De noemer steekproeven is het aantal steekproeven dat 1 zijn (of <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>) voor een voorbeeld-interrupts. Controleer of deze waarde groter dan nul is voordat u deze als de noemer in een berekening van <xref uid=&quot;langword_csharp_SampleFraction&quot; name=&quot;SampleFraction&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: SampleBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  id: SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een gemiddelde item het gemiddeld aantal bewerkingen in Ã©Ã©n seconde worden voltooid toont. Wanneer een item van dit type voorbeelden de gegevens, onderbroken elke steekproeven retourneert Ã©Ã©n of nul. De gegevens van prestatiemeteritems is het aantal die werden door actieve. Tijd in eenheden van de maatstreepjes van de timer van de prestaties system gemeten."
  remarks: 'Formule: (1 N â N 0) / ((1 D: 0 D) / F), waarbij (N) van de teller het aantal bewerkingen is voltooid geeft, de noemer (D) verstreken tijd in eenheden van de maatstreepjes van de timer van de prestaties system en F geeft het aantal maatstreepjes dat moet in Ã©Ã©n seconde verstrijken. F wordt rekening gehouden bij de vergelijking, waardoor het resultaat kan worden weergegeven in seconden.'
  syntax:
    content: SampleCounter
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  id: SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Percentage item de gemiddelde verhouding tussen treffers voor alle bewerkingen tijdens de laatste twee controle-intervallen toont."
  remarks: "Formula: ((N 1 - N 0) / (D 1 - D 0)) x 100, where the numerator represents the number of successful operations during the last sample interval, and the denominator represents the change in the number of all operations (of the type measured) completed during the sample interval, using counters of type `SampleBase`.  \n  \n Counters of this type include Cache\\Pin Read Hits %."
  syntax:
    content: SampleFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  id: Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een item van het percentage dat de actieve tijd van een onderdeel als een percentage van de totale verstreken tijd van het controle-interval. Tijd in eenheden van 100 nanoseconden (ns) gemeten. Items van dit type zijn ontworpen voor het meten van de activiteit van een onderdeel op een tijdstip."
  remarks: "Formula: (N 1 - N 0) / (D 1 - D 0) x 100, where the numerator represents the portions of the sample interval during which the monitored components were active, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % User Time."
  syntax:
    content: Timer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  id: Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een teller percentage waarin het gemiddelde percentage van actieve tijd waargenomen tijdens het steekproefinterval wordt weergegeven."
  remarks: "This is an inverse counter. Counters of this type calculate active time by measuring the time that the service was inactive and then subtracting the percentage of active time from 100 percent.  \n  \n Formula: (1- ((N 1 - N 0) / (D 1 - D 0))) x 100, where the numerator represents the time during the interval when the monitored components were inactive, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % Processor Time."
  syntax:
    content: Timer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
