### YamlMime:ManagedReference
items:
- uid: System.Reflection.ExceptionHandlingClauseOptions
  id: ExceptionHandlingClauseOptions
  children:
  - System.Reflection.ExceptionHandlingClauseOptions.Clause
  - System.Reflection.ExceptionHandlingClauseOptions.Fault
  - System.Reflection.ExceptionHandlingClauseOptions.Filter
  - System.Reflection.ExceptionHandlingClauseOptions.Finally
  langs:
  - csharp
  name: ExceptionHandlingClauseOptions
  nameWithType: ExceptionHandlingClauseOptions
  fullName: System.Reflection.ExceptionHandlingClauseOptions
  type: Enum
  summary: "Identificeert soorten uitzonderingsverwerking componenten."
  remarks: "Om te controleren van de componenten afhandeling van uitzonderingen in een methode, krijgen een <xref:System.Reflection.MethodInfo>object en de aanroep van de <xref:System.Reflection.MethodBase.GetMethodBody%2A>methode om op te halen van de hoofdtekst van de methode.</xref:System.Reflection.MethodBase.GetMethodBody%2A> </xref:System.Reflection.MethodInfo> Gebruik de <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>eigenschap verkrijgen van een lijst met <xref:System.Reflection.ExceptionHandlingClause>objecten.</xref:System.Reflection.ExceptionHandlingClause> </xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>      > [!NOTE] > Werken met afhandeling van uitzonderingen componenten vereist een grondig begrip van metagegevens en Microsoft tussentaal (MSIL) instructie indelingen. Informatie vindt in de documentatie van de Common Language Infrastructure (CLI), met name &quot; partitie II: metagegevens definitie en semantiek&quot; en &quot;Partitie III: CIL instructie instellen&quot;. De documentatie is beschikbaar online; Zie [ECMA C# en algemene Language Infrastructure standaarden](http://go.microsoft.com/fwlink/?LinkID=99212) op MSDN en [standaard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) op de website van Ecma International."
  example:
  - "The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses. The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=fullName> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method. The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.  \n  \n> [!NOTE]\n>  Not all computer languages can generate Filter clauses. The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.  \n  \n This code is part of a larger example provided for the <xref:System.Reflection.MethodBody> class.  \n  \n [!code-cpp[MethodBody#2](~/add/codesnippet/cpp/t-system.reflection.exce_1_1.cpp)]\n [!code-vb[MethodBody#2](~/add/codesnippet/visualbasic/t-system.reflection.exce_1_1.vb)]\n [!code-cs[MethodBody#2](~/add/codesnippet/csharp/t-system.reflection.exce_1_1.cs)]  \n[!code-cpp[MethodBody#4](~/add/codesnippet/cpp/t-system.reflection.exce_1_2.cpp)]\n[!code-vb[MethodBody#4](~/add/codesnippet/visualbasic/t-system.reflection.exce_1_2.vb)]\n[!code-cs[MethodBody#4](~/add/codesnippet/csharp/t-system.reflection.exce_1_2.cs)]  \n[!code-cpp[MethodBody#5](~/add/codesnippet/cpp/t-system.reflection.exce_1_3.cpp)]\n[!code-vb[MethodBody#5](~/add/codesnippet/visualbasic/t-system.reflection.exce_1_3.vb)]\n[!code-cs[MethodBody#5](~/add/codesnippet/csharp/t-system.reflection.exce_1_3.cs)]  \n[!code-cpp[MethodBody#7](~/add/codesnippet/cpp/t-system.reflection.exce_1_4.cpp)]\n[!code-vb[MethodBody#7](~/add/codesnippet/visualbasic/t-system.reflection.exce_1_4.vb)]\n[!code-cs[MethodBody#7](~/add/codesnippet/csharp/t-system.reflection.exce_1_4.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ExceptionHandlingClauseOptions
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Reflection.ExceptionHandlingClauseOptions.Clause
  id: Clause
  parent: System.Reflection.ExceptionHandlingClauseOptions
  langs:
  - csharp
  name: Clause
  nameWithType: ExceptionHandlingClauseOptions.Clause
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Clause
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "De component accepteert alle uitzonderingen die zijn afgeleid van een bepaald type."
  syntax:
    content: Clause
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.ExceptionHandlingClauseOptions.Fault
  id: Fault
  parent: System.Reflection.ExceptionHandlingClauseOptions
  langs:
  - csharp
  name: Fault
  nameWithType: ExceptionHandlingClauseOptions.Fault
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Fault
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "De component wordt uitgevoerd als er een uitzondering optreedt, maar niet op de voltooiing van de normale Controlestroom."
  syntax:
    content: Fault
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.ExceptionHandlingClauseOptions.Filter
  id: Filter
  parent: System.Reflection.ExceptionHandlingClauseOptions
  langs:
  - csharp
  name: Filter
  nameWithType: ExceptionHandlingClauseOptions.Filter
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Filter
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "De component bevat gebruiker opgegeven instructies om te bepalen of de uitzondering moet worden genegeerd (dat wil zeggen dat de normale uitvoering moet hervat), worden verwerkt door de handler gekoppeld of worden doorgegeven aan de volgende component."
  syntax:
    content: Filter
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.ExceptionHandlingClauseOptions.Finally
  id: Finally
  parent: System.Reflection.ExceptionHandlingClauseOptions
  langs:
  - csharp
  name: Finally
  nameWithType: ExceptionHandlingClauseOptions.Finally
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Finally
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "De component wordt uitgevoerd wanneer de try-blok wordt afgesloten, of u via de normale Controlestroom of vanwege een onverwerkte uitzondering."
  syntax:
    content: Finally
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Reflection.ExceptionHandlingClauseOptions.Clause
  parent: System.Reflection.ExceptionHandlingClauseOptions
  isExternal: false
  name: Clause
  nameWithType: ExceptionHandlingClauseOptions.Clause
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Clause
- uid: System.Reflection.ExceptionHandlingClauseOptions
  parent: System.Reflection
  isExternal: false
  name: ExceptionHandlingClauseOptions
  nameWithType: ExceptionHandlingClauseOptions
  fullName: System.Reflection.ExceptionHandlingClauseOptions
- uid: System.Reflection.ExceptionHandlingClauseOptions.Fault
  parent: System.Reflection.ExceptionHandlingClauseOptions
  isExternal: false
  name: Fault
  nameWithType: ExceptionHandlingClauseOptions.Fault
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Fault
- uid: System.Reflection.ExceptionHandlingClauseOptions.Filter
  parent: System.Reflection.ExceptionHandlingClauseOptions
  isExternal: false
  name: Filter
  nameWithType: ExceptionHandlingClauseOptions.Filter
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Filter
- uid: System.Reflection.ExceptionHandlingClauseOptions.Finally
  parent: System.Reflection.ExceptionHandlingClauseOptions
  isExternal: false
  name: Finally
  nameWithType: ExceptionHandlingClauseOptions.Finally
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Finally
