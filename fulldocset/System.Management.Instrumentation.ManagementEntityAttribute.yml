### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.ManagementEntityAttribute
  id: ManagementEntityAttribute
  children:
  - System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  - System.Management.Instrumentation.ManagementEntityAttribute.External
  - System.Management.Instrumentation.ManagementEntityAttribute.Name
  - System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  langs:
  - csharp
  name: ManagementEntityAttribute
  nameWithType: ManagementEntityAttribute
  fullName: System.Management.Instrumentation.ManagementEntityAttribute
  type: Class
  summary: "Het kenmerk ManagementEntity geeft aan dat een klasse beheergegevens toegankelijk zijn via een WMI-provider biedt.       Opmerking: de WMI-.NET-bibliotheken worden nu meegenomen in eindstatus, en er is geen verdere ontwikkeling, verbeteringen of updates zijn beschikbaar voor niet-gerelateerde beveiligingsproblemen die invloed hebben op deze bibliotheken. De [MI API&quot;s](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) moet worden gebruikt voor ontwikkeling van alle nieuwe."
  remarks: "De klasse die is gemarkeerd met dit kenmerk moet openbaar zijn."
  example:
  - "The following example shows how to use the ManagementEntity attribute to mark a class.  \n  \n```  \n// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  \n// provider.  \n  \n    [ManagementEntity(Name = \"MortgageCalc\")]  \n    public class MortgageCalcWMIProvider  \n    {  \n    }  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]

      public sealed class ManagementEntityAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  id: '#ctor'
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: ManagementEntityAttribute()
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.ManagementEntityAttribute()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Initialiseert een nieuw exemplaar van de <xref:System.Management.ManagementEntityAttribute>klasse.</xref:System.Management.ManagementEntityAttribute> Dit is de standaard-constructor."
  remarks: "Deze constructor neemt niet een name-parameter. Als u een naam niet via opgeeft de [naam](~/add/includes/ajax-current-ext-md.md) parameter, de naam van de bijbehorende WMI-klasse wordt teruggezet op de naam van de attributed klasse."
  syntax:
    content: public ManagementEntityAttribute ();
    parameters: []
  overload: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External
  id: External
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: External
  nameWithType: ManagementEntityAttribute.External
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.External
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Opgehaald of ingesteld dat een waarde die aangeeft of de klasse een WMI-klasse in een provider die is geïmplementeerd vertegenwoordigt extern is aan de huidige assembly."
  remarks: "Dit wordt gebruikt bij het implementeren van providers die klassen die bestaande abstracte WMI-klassen uitbreiden implementeren."
  syntax:
    content: public bool External { get; set; }
    return:
      type: System.Boolean
      description: "Een Booleaanse waarde die is ingesteld op true als de klasse vertegenwoordigt een externe WMI-klasse als onwaar anders."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.External*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name
  id: Name
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ManagementEntityAttribute.Name
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Name
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Opgehaald of ingesteld van de naam van de WMI-klasse."
  remarks: "Als u de naam van de WMI-klasse niet door deze eigenschap opgeeft, wordt de WMI-klasse de naam van de klasse attributed standaard."
  example:
  - "In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class. It sets the name to MortgageCalculator. If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.  \n  \n```  \n[ManagementEntity(Name = \"MortgageCalculator\")]  \npublic class MortgageCalcWMIProvider  \n{  \n}  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks met de naam van de WMI-klasse."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  id: Singleton
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Hiermee geeft u op of de gekoppelde klasse een singleton WMI-klasse vertegenwoordigt."
  remarks: "Een singleton WMI-klasse is een waarvoor er alleen ooit mag slechts één exemplaar. Hoewel u kan de code van de logica om ervoor te zorgen dat slechts één exemplaar van een WMI-klasse wordt gemaakt, wordt dit parameterkenmerk beschikbaar om de taak te eenvoudig en consistent.       Als u werkt met singleton WMI-klassen, moeten de clienttoepassingen speciale syntaxis gebruiken. Zie voor meer informatie de Describing een onderwerp objectpad exemplaar in de onlinebibliotheek van MSDN op [http://www.msdn.com](http://www.msdn.com/)."
  example:
  - "The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.  \n  \n```  \n[ManagementEntity(Singleton=true)]  \npublic class SingletonSample  \n```  \n  \n For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](http://msdn.microsoft.com/en-us/1dabd442-c1ff-40a1-bb0e-d7b3566c2300)."
  syntax:
    content: public bool Singleton { get; set; }
    return:
      type: System.Boolean
      description: "Een Booleaanse waarde die is ingesteld op true als de klasse vertegenwoordigt een singleton WMI-klasse en false anders."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: ManagementEntityAttribute()
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.ManagementEntityAttribute()
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: External
  nameWithType: ManagementEntityAttribute.External
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.External
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Name
  nameWithType: ManagementEntityAttribute.Name
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: ManagementEntityAttribute
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: External
  nameWithType: ManagementEntityAttribute.External
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Name
  nameWithType: ManagementEntityAttribute.Name
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
