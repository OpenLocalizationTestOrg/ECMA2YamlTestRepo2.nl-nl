### YamlMime:ManagedReference
items:
- uid: System.Net.Security.AuthenticatedStream
  id: AuthenticatedStream
  children:
  - System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.IsAuthenticated
  - System.Net.Security.AuthenticatedStream.IsEncrypted
  - System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  - System.Net.Security.AuthenticatedStream.IsServer
  - System.Net.Security.AuthenticatedStream.IsSigned
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  langs:
  - csharp
  name: AuthenticatedStream
  nameWithType: AuthenticatedStream
  fullName: System.Net.Security.AuthenticatedStream
  type: Class
  summary: "Biedt methoden voor het doorgeven van referenties in een stroom en aanvragen of verificatie uitvoeren voor client / server-toepassingen."
  remarks: "Deze abstracte klasse biedt methoden en eigenschappen die gemeenschappelijk voor geverifieerde stromen zijn.       Geverifieerde streams krijgt u verificatie, ondertekening van gegevens en versleuteling services waarmee de integriteit en vertrouwelijkheid van gegevens die worden overgedragen met behulp van de <xref:System.Net.Security.AuthenticatedStream.InnerStream%2A>.</xref:System.Net.Security.AuthenticatedStream.InnerStream%2A> onderhouden       Het beveiligingsprotocol dat wordt ge√Ømplementeerd door een klasse die is afgeleid van AuthenticatedStream samen met de beveiligingsprotocollen die worden ondersteund op de client en server bepaalt de beveiligingsfuncties die beschikbaar voor een toepassing zijn. De <xref:System.Net.Security.NegotiateStream>en <xref:System.Net.Security.SslStream>klassen overnemen van AuthenticatedStream en implementeren van de Negotiate en Secure Sockets Layer security-protocollen, respectievelijk.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.NegotiateStream>"
  example:
  - "The following code example demonstrates displaying the properties of an authenticated stream.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/t-system.net.security.au_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/t-system.net.security.au_1.cs)]"
  syntax:
    content: 'public abstract class AuthenticatedStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: AuthenticatedStream(Stream,Boolean)
  nameWithType: AuthenticatedStream.AuthenticatedStream(Stream,Boolean)
  fullName: System.Net.Security.AuthenticatedStream.AuthenticatedStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> klasse."
  remarks: "Wanneer u opgeeft `true` voor de `leaveStreamOpen` parameter, sluit de <xref:System.Net.Security.AuthenticatedStream>heeft geen effect op de `innerStream` stream.</xref:System.Net.Security.AuthenticatedStream>       Deze constructor is opgegeven voor implementeerders van geverifieerde stromen en kan alleen worden aangeroepen door klassen die zijn afgeleid van <xref:System.Net.Security.AuthenticatedStream>.</xref:System.Net.Security.AuthenticatedStream>"
  syntax:
    content: protected AuthenticatedStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object dat wordt gebruikt door de <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> voor het verzenden en ontvangen van gegevens.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Een <xref:System.Boolean>die aangeeft of dit sluiten <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> object automatisch gesloten `innerStream`.</xref:System.Boolean>"
  overload: System.Net.Security.AuthenticatedStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>innerStream</code> gelijk is aan <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AuthenticatedStream.Dispose(Boolean)
  fullName: System.Net.Security.AuthenticatedStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()`methode en de <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A> `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de `disposing` parameter ingesteld op `true`. <xref:System.Object.Finalize%2A>roept `Dispose` met `disposing` ingesteld op `false`.</xref:System.Object.Finalize%2A>       Wanneer de `disposing` parameter is ingesteld op true, wordt deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Net.Security.AuthenticatedStream>verwijzingen.</xref:System.Net.Security.AuthenticatedStream> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Net.Security.AuthenticatedStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.InnerStream
  id: InnerStream
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: InnerStream
  nameWithType: AuthenticatedStream.InnerStream
  fullName: System.Net.Security.AuthenticatedStream.InnerStream
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "De stroom die wordt gebruikt door dit opgehaald <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> voor het verzenden en ontvangen van gegevens."
  remarks: "Klassen die van <xref:System.Net.Security.AuthenticatedStream>Deze eigenschap voor toegang tot de stroom die wordt doorgegeven aan de <xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>.</xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> overnemen</xref:System.Net.Security.AuthenticatedStream>"
  syntax:
    content: protected System.IO.Stream InnerStream { get; }
    return:
      type: System.IO.Stream
      description: "Een <xref:System.IO.Stream>object.</xref:System.IO.Stream>"
  overload: System.Net.Security.AuthenticatedStream.InnerStream*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: AuthenticatedStream.IsAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of verificatie gelukt is.</xref:System.Boolean>"
  remarks: "De methoden die worden aangeroepen om uit te voeren verificatie zijn gedefinieerd in de klassen die van <xref:System.Net.Security.AuthenticatedStream>.</xref:System.Net.Security.AuthenticatedStream> overnemen"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_3_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_3_1.cs)]"
  syntax:
    content: public abstract bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als er geen geslaagde verificatie uitgevoerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: AuthenticatedStream.IsEncrypted
  fullName: System.Net.Security.AuthenticatedStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de gegevens verzonden met behulp van dit <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> is versleuteld.</xref:System.Boolean>"
  remarks: "Versleuteling helpt bij de bescherming van de privacy van de gegevens. dat wil zeggen nuttig het om ervoor te zorgen dat wanneer gegevens verzonden, deze kan niet worden ontcijferd door derden."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_0_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_0_1.cs)]"
  syntax:
    content: public abstract bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als gegevens worden versleuteld voordat het wordt verzonden via het netwerk en ontsleuteld wanneer deze bereikt het externe eindpunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: AuthenticatedStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of server en de client zijn geverifieerd.</xref:System.Boolean>"
  remarks: "Niet alle beveiligings-protocollen ondersteunen wederzijdse verificatie. Om te bepalen of er wederzijdse verificatie wordt ondersteund door het beveiligingsprotocol dat wordt ge√Ømplementeerd in een klasse die eigenschappen van overneemt <xref:System.Net.Security.AuthenticatedStream>, Raadpleeg de documentatie van de klasse.</xref:System.Net.Security.AuthenticatedStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_4_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_4_1.cs)]"
  syntax:
    content: public abstract bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de client en server zijn geverifieerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsServer
  id: IsServer
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsServer
  nameWithType: AuthenticatedStream.IsServer
  fullName: System.Net.Security.AuthenticatedStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de lokale kant van de verbinding als de server is geverifieerd.</xref:System.Boolean>"
  remarks: "De meeste-protocollen gebruikt voor client-/ serververificatie defini√´ren specifiek gedrag en de vereisten voor het verstrekken van referenties voor verificatie op basis van of u de client of de server."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_2_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_2_1.cs)]"
  syntax:
    content: public abstract bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het lokale eindpunt is geverifieerd als het servergedeelte van een geverifieerde client / server-verbinding. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als het lokale eindpunt is geverifieerd als de client."
  overload: System.Net.Security.AuthenticatedStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: AuthenticatedStream.IsSigned
  fullName: System.Net.Security.AuthenticatedStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Haalt een <xref:System.Boolean>waarde die aangeeft of de gegevens die worden verzonden met behulp van deze stroom is ondertekend.</xref:System.Boolean>"
  remarks: "Gegevensondertekening helpt bij de bescherming van de integriteit van de gegevens. dat wil zeggen kunt zo u de ontvanger kan zien of de gegevens onderweg is geknoeid."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_1_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_1_1.cs)]"
  syntax:
    content: public abstract bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de gegevens is ondertekend voordat het wordt verzonden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  id: LeaveInnerStreamOpen
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: LeaveInnerStreamOpen
  nameWithType: AuthenticatedStream.LeaveInnerStreamOpen
  fullName: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hiermee wordt opgehaald of de stroom die wordt gebruikt door dit <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> voor het verzenden en ontvangen van gegevens is nog actief."
  remarks: "Als de waarde `true`, wordt de stroom die wordt doorgegeven aan de constructor van deze klasse niet gesloten nadat de instantie van deze klasse is gesloten. Als de waarde `false`, sluiten van het exemplaar van deze klasse de onderstreepte transportstroom ook wordt gesloten. De standaardwaarde van deze eigenschap is `false`."
  syntax:
    content: public bool LeaveInnerStreamOpen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de interne stream is nog actief; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: AuthenticatedStream(Stream,Boolean)
  nameWithType: AuthenticatedStream.AuthenticatedStream(Stream,Boolean)
  fullName: System.Net.Security.AuthenticatedStream.AuthenticatedStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AuthenticatedStream.Dispose(Boolean)
  fullName: System.Net.Security.AuthenticatedStream.Dispose(Boolean)
- uid: System.Net.Security.AuthenticatedStream.InnerStream
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: InnerStream
  nameWithType: AuthenticatedStream.InnerStream
  fullName: System.Net.Security.AuthenticatedStream.InnerStream
- uid: System.Net.Security.AuthenticatedStream.IsAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: AuthenticatedStream.IsAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsAuthenticated
- uid: System.Net.Security.AuthenticatedStream.IsEncrypted
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsEncrypted
  nameWithType: AuthenticatedStream.IsEncrypted
  fullName: System.Net.Security.AuthenticatedStream.IsEncrypted
- uid: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: AuthenticatedStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
- uid: System.Net.Security.AuthenticatedStream.IsServer
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsServer
  nameWithType: AuthenticatedStream.IsServer
  fullName: System.Net.Security.AuthenticatedStream.IsServer
- uid: System.Net.Security.AuthenticatedStream.IsSigned
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsSigned
  nameWithType: AuthenticatedStream.IsSigned
  fullName: System.Net.Security.AuthenticatedStream.IsSigned
- uid: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: LeaveInnerStreamOpen
  nameWithType: AuthenticatedStream.LeaveInnerStreamOpen
  fullName: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
- uid: System.Net.Security.AuthenticatedStream.#ctor*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: AuthenticatedStream
  nameWithType: AuthenticatedStream.AuthenticatedStream
- uid: System.Net.Security.AuthenticatedStream.Dispose*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: Dispose
  nameWithType: AuthenticatedStream.Dispose
- uid: System.Net.Security.AuthenticatedStream.InnerStream*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: InnerStream
  nameWithType: AuthenticatedStream.InnerStream
- uid: System.Net.Security.AuthenticatedStream.IsAuthenticated*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: AuthenticatedStream.IsAuthenticated
- uid: System.Net.Security.AuthenticatedStream.IsEncrypted*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsEncrypted
  nameWithType: AuthenticatedStream.IsEncrypted
- uid: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: AuthenticatedStream.IsMutuallyAuthenticated
- uid: System.Net.Security.AuthenticatedStream.IsServer*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsServer
  nameWithType: AuthenticatedStream.IsServer
- uid: System.Net.Security.AuthenticatedStream.IsSigned*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsSigned
  nameWithType: AuthenticatedStream.IsSigned
- uid: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: LeaveInnerStreamOpen
  nameWithType: AuthenticatedStream.LeaveInnerStreamOpen
