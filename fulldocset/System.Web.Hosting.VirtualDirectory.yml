### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.VirtualDirectory
  id: VirtualDirectory
  children:
  - System.Web.Hosting.VirtualDirectory.#ctor(System.String)
  - System.Web.Hosting.VirtualDirectory.Children
  - System.Web.Hosting.VirtualDirectory.Directories
  - System.Web.Hosting.VirtualDirectory.Files
  - System.Web.Hosting.VirtualDirectory.IsDirectory
  langs:
  - csharp
  name: VirtualDirectory
  nameWithType: VirtualDirectory
  fullName: System.Web.Hosting.VirtualDirectory
  type: Class
  summary: "Hiermee geeft u een Active directory-object in een virtuele ruimte bestand of bron."
  remarks: "De klasse VirtualDirectory is de basisklasse voor objecten die de mappen in een virtuele bestandssysteem vertegenwoordigen. Normaal gesproken u zou implementeert een afstammeling van de klasse VirtualDirectory voor elk <xref:System.Web.Hosting.VirtualPathProvider>klasse onderliggende in uw webtoepassing.</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is a VirtualDirectory class implementation that returns virtual directory information stored in a <xref:System.Data.DataSet> object. This code works with the code examples for the <xref:System.Web.Hosting.VirtualPathProvider> and <xref:System.Web.Hosting.VirtualFile> classes to provide virtual resources from a data store that is loaded into a <xref:System.Data.DataSet> object. For the complete instructions for compiling and running the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview.  \n  \n This example has two parts, the VirtualDirectory class implementation and the XML data file used to populate the <xref:System.Data.DataSet> object.  \n  \n The first code example is an implementation of the VirtualDirectory class. In the constructor it uses a method on a custom <xref:System.Web.Hosting.VirtualPathProvider> object to return a <xref:System.Data.DataSet> object. It then searches the <xref:System.Data.DataSet> object to retrieve the directory information associated with the virtual path provided.  \n  \n [!code-vb[System.Web.Hosting.VirtualPathProvider#30](~/add/codesnippet/visualbasic/t-system.web.hosting.vir_0_1.vb)]\n [!code-cs[System.Web.Hosting.VirtualPathProvider#30](~/add/codesnippet/csharp/t-system.web.hosting.vir_0_1.cs)]  \n  \n The second example is the XML data file used to populate the <xref:System.Data.DataSet> object returned by the custom <xref:System.Web.Hosting.VirtualPathProvider> object. This XML data is used to demonstrate using the <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualFile>, and VirtualDirectory classes to retrieve data from external data, and is not intended to represent a production-quality data store.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n  <resource type=\"dir\"   \n    path=\"/vrDir\"   \n    parentPath=\"\"   \n    content=\"\">  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level1FileA.vrf\"  \n      parentPath=\"/vrDir\"   \n      content=\"This is the content of file Level1FileA.\" >  \n    </resource>  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level1FileB.vrf\"  \n      parentPath=\"/vrDir\"   \n      content=\"This is the content of file Level1FileB.\">  \n    </resource>  \n    <resource type=\"dir\"   \n      path=\"/vrDir/Level2DirA\"   \n      parentPath=\"/vrDir\"   \n      content=\"\">  \n        <resource type=\"file\"   \n          path=\"/vrDir/Level2DirA/Level2FileA.vrf\"   \n          parentPath=\"/vrDir/Level2DirA\"   \n          content=\"This is the content of file Level2FileA.\" >  \n        </resource>  \n        <resource type=\"file\"   \n          path=\"/vrDir/Level2DirA/Level2FileB.vrf\"  \n          parentPath=\"/vrDir/Level2DirA\"   \n          content=\"This is the content of file Level2FileB.\">  \n        </resource>  \n    </resource>  \n    <resource type=\"dir\"   \n      path=\"/vrDir/Level2DirB\"   \n      parentPath=\"/vrDir\"   \n      content=\"\">  \n      <resource type=\"file\"   \n        path=\"/vrDir/Level2DirB/Level2FileA.vrf\"   \n        parentPath=\"/vrDir/Level2DirB\"   \n        content=\"This is the content of file Level2FileA.\" >  \n      </resource>  \n      <resource type=\"file\"   \n        path=\"/vrDir/Level2DirB/Level2FileB.vrf\"  \n        parentPath=\"/vrDir/Level2DirB\"   \n        content=\"This is the content of file Level2FileB.\">  \n       </resource>  \n    </resource>  \n  </resource>  \n```"
  syntax:
    content: 'public abstract class VirtualDirectory : System.Web.Hosting.VirtualFileBase'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Web.Hosting.VirtualFileBase
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  - System.Web.Hosting.VirtualFileBase.Name
  - System.Web.Hosting.VirtualFileBase.VirtualPath
  platform:
  - net462
- uid: System.Web.Hosting.VirtualDirectory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: VirtualDirectory(String)
  nameWithType: VirtualDirectory.VirtualDirectory(String)
  fullName: System.Web.Hosting.VirtualDirectory.VirtualDirectory(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Hosting.VirtualDirectory&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following code example is an implementation of the VirtualDirectory constructor that retrieves virtual file information from a <xref:System.Data.DataSet> object provided by a custom <xref:System.Web.Hosting.VirtualPathProvider> object. It includes the `GetData` method used to populate the <xref:System.Web.Hosting.VirtualDirectory> instance. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualDirectory> class overview.  \n  \n [!code-vb[System.Web.Hosting.VirtualPathProvider#31](~/add/codesnippet/visualbasic/m-system.web.hosting.vir_1_1.vb)]\n [!code-cs[System.Web.Hosting.VirtualPathProvider#31](~/add/codesnippet/csharp/m-system.web.hosting.vir_1_1.cs)]"
  syntax:
    content: protected VirtualDirectory (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Het virtuele pad naar de bron die wordt vertegenwoordigd door dit exemplaar."
  overload: System.Web.Hosting.VirtualDirectory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualDirectory.Children
  id: Children
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: Children
  nameWithType: VirtualDirectory.Children
  fullName: System.Web.Hosting.VirtualDirectory.Children
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee haalt u een lijst van de bestanden en submappen in deze virtuele map."
  remarks: "De eigenschap Children bevat zowel <xref:System.Web.Hosting.VirtualFile>en <xref:System.Web.Hosting.VirtualDirectory>-objecten met daarin de bestanden en mappen in deze virtuele map.</xref:System.Web.Hosting.VirtualDirectory> </xref:System.Web.Hosting.VirtualFile> Om terug te keren alleen de <xref:System.Web.Hosting.VirtualFile>objecten, gebruiken de <xref:System.Web.Hosting.VirtualDirectory.Files%2A>eigenschap.</xref:System.Web.Hosting.VirtualDirectory.Files%2A> </xref:System.Web.Hosting.VirtualFile> Om terug te keren alleen de <xref:System.Web.Hosting.VirtualDirectory>objecten, gebruiken de <xref:System.Web.Hosting.VirtualDirectory.Directories%2A>eigenschap.</xref:System.Web.Hosting.VirtualDirectory.Directories%2A> </xref:System.Web.Hosting.VirtualDirectory>"
  syntax:
    content: public abstract System.Collections.IEnumerable Children { get; }
    return:
      type: System.Collections.IEnumerable
      description: "De implementatie van een object de <xref:System.Collections.IEnumerable>interface die <xref href=&quot;System.Web.Hosting.VirtualFile&quot;> </xref> en <xref href=&quot;System.Web.Hosting.VirtualDirectory&quot;> </xref> objecten.</xref:System.Collections.IEnumerable>"
  overload: System.Web.Hosting.VirtualDirectory.Children*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualDirectory.Directories
  id: Directories
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: Directories
  nameWithType: VirtualDirectory.Directories
  fullName: System.Web.Hosting.VirtualDirectory.Directories
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee haalt u een lijst van alle submappen in deze map."
  remarks: "De eigenschap mappen bevat <xref:System.Web.Hosting.VirtualDirectory>objecten die de mappen in deze virtuele map vertegenwoordigen.</xref:System.Web.Hosting.VirtualDirectory> Om terug te keren de <xref:System.Web.Hosting.VirtualFile>objecten, gebruiken de <xref:System.Web.Hosting.VirtualDirectory.Files%2A>eigenschap.</xref:System.Web.Hosting.VirtualDirectory.Files%2A> </xref:System.Web.Hosting.VirtualFile> Om terug te keren beide <xref:System.Web.Hosting.VirtualFile>en <xref:System.Web.Hosting.VirtualDirectory>objecten, gebruiken de <xref:System.Web.Hosting.VirtualDirectory.Children%2A>eigenschap.</xref:System.Web.Hosting.VirtualDirectory.Children%2A> </xref:System.Web.Hosting.VirtualDirectory> </xref:System.Web.Hosting.VirtualFile>"
  syntax:
    content: public abstract System.Collections.IEnumerable Directories { get; }
    return:
      type: System.Collections.IEnumerable
      description: "De implementatie van een object de <xref:System.Collections.IEnumerable>interface die <xref href=&quot;System.Web.Hosting.VirtualDirectory&quot;> </xref> objecten.</xref:System.Collections.IEnumerable>"
  overload: System.Web.Hosting.VirtualDirectory.Directories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualDirectory.Files
  id: Files
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: Files
  nameWithType: VirtualDirectory.Files
  fullName: System.Web.Hosting.VirtualDirectory.Files
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee haalt u een lijst van alle bestanden in deze map."
  remarks: "De eigenschap bestanden bevat <xref:System.Web.Hosting.VirtualFile>objecten die de bestanden in deze virtuele map vertegenwoordigen.</xref:System.Web.Hosting.VirtualFile> Om terug te keren de <xref:System.Web.Hosting.VirtualDirectory>objecten, gebruiken de <xref:System.Web.Hosting.VirtualDirectory.Directories%2A>eigenschap.</xref:System.Web.Hosting.VirtualDirectory.Directories%2A> </xref:System.Web.Hosting.VirtualDirectory> Om terug te keren beide <xref:System.Web.Hosting.VirtualFile>en <xref:System.Web.Hosting.VirtualDirectory>objecten, gebruiken de <xref:System.Web.Hosting.VirtualDirectory.Children%2A>eigenschap.</xref:System.Web.Hosting.VirtualDirectory.Children%2A> </xref:System.Web.Hosting.VirtualDirectory> </xref:System.Web.Hosting.VirtualFile>"
  syntax:
    content: public abstract System.Collections.IEnumerable Files { get; }
    return:
      type: System.Collections.IEnumerable
      description: "De implementatie van een object de <xref:System.Collections.IEnumerable>interface die <xref href=&quot;System.Web.Hosting.VirtualFile&quot;> </xref> objecten.</xref:System.Collections.IEnumerable>"
  overload: System.Web.Hosting.VirtualDirectory.Files*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualDirectory.IsDirectory
  id: IsDirectory
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: IsDirectory
  nameWithType: VirtualDirectory.IsDirectory
  fullName: System.Web.Hosting.VirtualDirectory.IsDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Haalt een waarde die aangeeft dat dit is een virtuele bron die moet worden behandeld als een map."
  syntax:
    content: public override bool IsDirectory { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.VirtualDirectory.IsDirectory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: System.Web.Hosting.VirtualFileBase
- uid: System.Web.Hosting.VirtualDirectory.#ctor(System.String)
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: VirtualDirectory(String)
  nameWithType: VirtualDirectory.VirtualDirectory(String)
  fullName: System.Web.Hosting.VirtualDirectory.VirtualDirectory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.VirtualDirectory.Children
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Children
  nameWithType: VirtualDirectory.Children
  fullName: System.Web.Hosting.VirtualDirectory.Children
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.Hosting.VirtualDirectory.Directories
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Directories
  nameWithType: VirtualDirectory.Directories
  fullName: System.Web.Hosting.VirtualDirectory.Directories
- uid: System.Web.Hosting.VirtualDirectory.Files
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Files
  nameWithType: VirtualDirectory.Files
  fullName: System.Web.Hosting.VirtualDirectory.Files
- uid: System.Web.Hosting.VirtualDirectory.IsDirectory
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualDirectory.IsDirectory
  fullName: System.Web.Hosting.VirtualDirectory.IsDirectory
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.VirtualDirectory.#ctor*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: VirtualDirectory
  nameWithType: VirtualDirectory.VirtualDirectory
- uid: System.Web.Hosting.VirtualDirectory.Children*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Children
  nameWithType: VirtualDirectory.Children
- uid: System.Web.Hosting.VirtualDirectory.Directories*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Directories
  nameWithType: VirtualDirectory.Directories
- uid: System.Web.Hosting.VirtualDirectory.Files*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Files
  nameWithType: VirtualDirectory.Files
- uid: System.Web.Hosting.VirtualDirectory.IsDirectory*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualDirectory.IsDirectory
