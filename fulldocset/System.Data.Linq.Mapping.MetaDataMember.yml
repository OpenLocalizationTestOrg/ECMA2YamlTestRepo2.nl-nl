### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MetaDataMember
  id: MetaDataMember
  children:
  - System.Data.Linq.Mapping.MetaDataMember.#ctor
  - System.Data.Linq.Mapping.MetaDataMember.Association
  - System.Data.Linq.Mapping.MetaDataMember.AutoSync
  - System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  - System.Data.Linq.Mapping.MetaDataMember.DbType
  - System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  - System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  - System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  - System.Data.Linq.Mapping.MetaDataMember.Expression
  - System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  - System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  - System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  - System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  - System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  - System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  - System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  - System.Data.Linq.Mapping.MetaDataMember.IsVersion
  - System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  - System.Data.Linq.Mapping.MetaDataMember.MappedName
  - System.Data.Linq.Mapping.MetaDataMember.Member
  - System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  - System.Data.Linq.Mapping.MetaDataMember.Name
  - System.Data.Linq.Mapping.MetaDataMember.Ordinal
  - System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  - System.Data.Linq.Mapping.MetaDataMember.StorageMember
  - System.Data.Linq.Mapping.MetaDataMember.Type
  - System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  langs:
  - csharp
  name: MetaDataMember
  nameWithType: MetaDataMember
  fullName: System.Data.Linq.Mapping.MetaDataMember
  type: Class
  summary: "Hiermee geeft u de toewijzing tussen een veld of een eigenschap van een domeinobject in een kolom van een database."
  syntax:
    content: public abstract class MetaDataMember
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MetaDataMember()
  nameWithType: MetaDataMember.MetaDataMember()
  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.Linq.Mapping.MetaDataMember&quot;> </xref> klasse."
  syntax:
    content: protected MetaDataMember ();
    parameters: []
  overload: System.Data.Linq.Mapping.MetaDataMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Association
  id: Association
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Association
  nameWithType: MetaDataMember.Association
  fullName: System.Data.Linq.Mapping.MetaDataMember.Association
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Haalt de <xref href=&quot;System.Data.Linq.Mapping.MetaAssociation&quot;> </xref> die overeenkomt met dit lid."
  remarks: "Deze eigenschap geeft de databasekoppeling van een zoals een refererende sleutel naar primaire sleutel relatie."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAssociation
      description: "De bijbehorende <xref href=&quot;System.Data.Linq.Mapping.MetaAssociation&quot;> </xref> als er een bestaat; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.Association*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  id: AutoSync
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Het lezen-back-gedrag voor dit lid voor invoegen opgehaald en updatebewerkingen."
  syntax:
    content: public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }
    return:
      type: System.Data.Linq.Mapping.AutoSync
      description: "Een <xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref> opsomming."
  overload: System.Data.Linq.Mapping.MetaDataMember.AutoSync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  id: CanBeNull
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt opgehaald of de waarde van dit lid kan worden toegewezen. de <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> waarde."
  remarks: "Deze eigenschap is afhankelijk van de <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>-eigenschap en is voor uw gemak geleverd.</xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>"
  syntax:
    content: public abstract bool CanBeNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u dit lid kan worden toegewezen aan de <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> waarde; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType
  id: DbType
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DbType
  nameWithType: MetaDataMember.DbType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt het type van de bijbehorende databasekolom."
  remarks: "Dit is de exacte tekst gebruikt voor het definiÃ«ren van de kolom in een Transact-SQL-opdracht voor tabel-declaratie. Als er niet is gedefinieerd, wordt het kolomtype database afgeleid van het lidtype."
  syntax:
    content: public abstract string DbType { get; }
    return:
      type: System.String
      description: "Het type van de databasekolom als een tekenreeks."
  overload: System.Data.Linq.Mapping.MetaDataMember.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  id: DeclaringType
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Haalt de <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> die dit gegevenslid bevat."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "Het meta-type dat het huidige lid bevat."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  id: DeferredSourceAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee haalt u de accessor voor ophalen en instellen van de uitgestelde bron van dit lid wordt gebruikt."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "De accessor gebruikt voor toegang tot de uitgestelde bron voor dit lid."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  id: DeferredValueAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee haalt u de accessor voor ophalen en instellen van de uitgestelde waarde van dit lid (zonder waardoor ophalen) wordt gebruikt."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "De accessor gebruikt voor toegang tot de uitgestelde waarde voor dit lid."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression
  id: Expression
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Expression
  nameWithType: MetaDataMember.Expression
  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee haalt u de expressie waarmee een berekende kolom worden gedefinieerd."
  syntax:
    content: public abstract string Expression { get; }
    return:
      type: System.String
      description: "De expressie voor de berekende kolom als een tekenreeks."
  overload: System.Data.Linq.Mapping.MetaDataMember.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  id: IsAssociation
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt opgehaald of een koppeling-relatie wordt gedefinieerd voor dit lid."
  syntax:
    content: public abstract bool IsAssociation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u dit lid definieert een relatie koppeling; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  id: IsDbGenerated
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt opgehaald of dit lid wordt automatisch gegenereerd door de database."
  remarks: "Automatisch gegenereerde leden zijn gesynchroniseerd onmiddellijk nadat de bijbehorende gegevensrij wordt ingevoegd. Invoegen trigger gegenereerde sleutel waarden worden niet ondersteund."
  syntax:
    content: public abstract bool IsDbGenerated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit lid wordt automatisch gegenereerd door de database. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  id: IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDeclaredBy(MetaType)
  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee geeft u op of deze lid wordt gedeclareerd door het opgegeven type."
  syntax:
    content: public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);
    parameters:
    - id: type
      type: System.Data.Linq.Mapping.MetaType
      description: "Het type om te controleren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u dit lid wordt gedeclareerd door het opgegeven type; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  id: IsDeferred
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt opgehaald of het standaardgedrag is dit lid op basis van de uitgestelde laden."
  syntax:
    content: public abstract bool IsDeferred { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit lid op basis van de uitgestelde standaard; geladen. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  id: IsDiscriminator
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt opgehaald of dit lid de overname-discriminator vertegenwoordigt."
  remarks: "Deze eigenschap kan worden `true` voor maximaal Ã©Ã©n lid van het hoogste niveau toegewezen klasse in een hiÃ«rarchie."
  syntax:
    content: public abstract bool IsDiscriminator { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit lid de overname-discriminator vertegenwoordigt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  id: IsPersistent
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt opgehaald of dit lid is toegewezen aan een kolom (of beperking)."
  remarks: "Een klasse kan een combinatie van permanente en niet-permanente leden hebben. Permanente leden worden toegewezen terwijl niet-permanente leden zijn niet toegewezen. Een toegewezen klasse moet ten minste Ã©Ã©n permanente lid hebben."
  syntax:
    content: public abstract bool IsPersistent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit lid is toegewezen aan een kolom (of beperking); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  id: IsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt opgehaald of dit lid deel van het type identiteit uitmaakt."
  remarks: "Als deze eigenschap is `true`, het klasselid vertegenwoordigt een kolom die deel uitmaakt van een unieke sleutel voor de tabel. Meer dan Ã©Ã©n lid van de klasse kan deze eigenschap is ingesteld op hebben `true` voor een sleutel die is een samenstelling van de bijbehorende kolommen. Voor een entiteitsklasse moet ten minste Ã©Ã©n lid dit kenmerk en moet worden toegewezen aan de primaire sleutel of een unieke sleutel in de bijbehorende tabel of weergave. Anders beschouwt LINQ to SQL instanties van de klasse als alleen-lezen voor het verzenden van wijzigingen naar de database.       De set kolommen die zijn geÃ¯dentificeerd met IsPrimaryKey zijn niet vereist voor de primaire sleutel. Ze geven gewoon een verzameling die een unieke identificatie van de entiteit. Algemene alternatieven zijn clustering kolommen in de index of andere unieke sleutelkolommen."
  syntax:
    content: public abstract bool IsPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit lid deel van het type identiteit uitmaakt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  id: IsVersion
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt opgehaald of dit lid de rijversie- of timestamp vertegenwoordigt."
  remarks: "Versienummers worden verhoogd en de timestamp-kolommen worden bijgewerkt wanneer de bijbehorende rij wordt bijgewerkt."
  syntax:
    content: public abstract bool IsVersion { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit lid de rijversie- of timestamp vertegenwoordigt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  id: LoadMethod
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Haalt de <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> methode die wordt gebruikt voor de load-bewerkingen uitvoeren."
  syntax:
    content: public abstract System.Reflection.MethodInfo LoadMethod { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "De load-methode als <xref:System.Reflection.MethodInfo>.</xref:System.Reflection.MethodInfo>"
  overload: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName
  id: MappedName
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MappedName
  nameWithType: MetaDataMember.MappedName
  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee haalt de naam van de kolom (of beperking) in de database."
  syntax:
    content: public abstract string MappedName { get; }
    return:
      type: System.String
      description: "De naam van de kolom (of beperking) als een tekenreeks."
  overload: System.Data.Linq.Mapping.MetaDataMember.MappedName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Member
  id: Member
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Member
  nameWithType: MetaDataMember.Member
  fullName: System.Data.Linq.Mapping.MetaDataMember.Member
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "De onderliggende <xref:System.Reflection.MemberInfo>.</xref:System.Reflection.MemberInfo> opgehaald"
  syntax:
    content: public abstract System.Reflection.MemberInfo Member { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "Lid-kenmerk en metagegevens informatie."
  overload: System.Data.Linq.Mapping.MetaDataMember.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  id: MemberAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee haalt u de accessor voor ophalen of instellen van de waarde van dit lid wordt gebruikt."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "De accessor."
  overload: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Name
  id: Name
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Name
  nameWithType: MetaDataMember.Name
  fullName: System.Data.Linq.Mapping.MetaDataMember.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt de naam van het lid, dezelfde zijn als de <xref:System.Reflection.MemberInfo>naam.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "De naam, dezelfde zijn als de <xref:System.Reflection.MemberInfo>naam.</xref:System.Reflection.MemberInfo>"
  overload: System.Data.Linq.Mapping.MetaDataMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  id: Ordinal
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee haalt u het volgnummer van dit lid in de standaardindeling van queryresultaten."
  syntax:
    content: public abstract int Ordinal { get; }
    return:
      type: System.Int32
      description: "De positie."
  overload: System.Data.Linq.Mapping.MetaDataMember.Ordinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  id: StorageAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee haalt u de accessor voor ophalen of instellen van de waarde voor de opslag van dit lid wordt gebruikt."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "De accessor voor de opslag-waarde van dit lid."
  overload: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  id: StorageMember
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee haalt u het lid dat de gegevens voor dit lid bevat."
  syntax:
    content: public abstract System.Reflection.MemberInfo StorageMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "Het lid in de opslag."
  overload: System.Data.Linq.Mapping.MetaDataMember.StorageMember*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Type
  id: Type
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Type
  nameWithType: MetaDataMember.Type
  fullName: System.Data.Linq.Mapping.MetaDataMember.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee wordt het type van dit lid."
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: "Het type van het huidige lid."
  overload: System.Data.Linq.Mapping.MetaDataMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  id: UpdateCheck
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hiermee haalt het selectievakje optimistische gelijktijdigheid beleid voor dit lid."
  remarks: "Als de klasse geen lid is versie heeft (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> ingesteld op `true`), detectie wordt uitgevoerd door de oorspronkelijke lidwaarden met de huidige databasestatus te vergelijken.</xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A>       De eigenschap UpdateCheck bepaalt hoe LINQ to SQL conflictdetectie onder optimistische gelijktijdigheid implementeert. Alleen leden met deze eigenschap ingesteld op <xref:System.Data.Linq.Mapping.UpdateCheck>of <xref:System.Data.Linq.Mapping.UpdateCheck>worden beschouwd als tijdens de conflictdetectie.</xref:System.Data.Linq.Mapping.UpdateCheck> </xref:System.Data.Linq.Mapping.UpdateCheck>"
  syntax:
    content: public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }
    return:
      type: System.Data.Linq.Mapping.UpdateCheck
      description: "An <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;></xref> enum."
  overload: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MetaDataMember()
  nameWithType: MetaDataMember.MetaDataMember()
  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()
- uid: System.Data.Linq.Mapping.MetaDataMember.Association
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Association
  nameWithType: MetaDataMember.Association
  fullName: System.Data.Linq.Mapping.MetaDataMember.Association
- uid: System.Data.Linq.Mapping.MetaAssociation
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaAssociation
  nameWithType: MetaAssociation
  fullName: System.Data.Linq.Mapping.MetaAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync
- uid: System.Data.Linq.Mapping.AutoSync
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: AutoSync
  nameWithType: AutoSync
  fullName: System.Data.Linq.Mapping.AutoSync
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DbType
  nameWithType: MetaDataMember.DbType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
- uid: System.Data.Linq.Mapping.MetaType
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaType
  nameWithType: MetaType
  fullName: System.Data.Linq.Mapping.MetaType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
- uid: System.Data.Linq.Mapping.MetaAccessor
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaAccessor
  nameWithType: MetaAccessor
  fullName: System.Data.Linq.Mapping.MetaAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Expression
  nameWithType: MetaDataMember.Expression
  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeclaredBy(MetaType)
  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MappedName
  nameWithType: MetaDataMember.MappedName
  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName
- uid: System.Data.Linq.Mapping.MetaDataMember.Member
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Member
  nameWithType: MetaDataMember.Member
  fullName: System.Data.Linq.Mapping.MetaDataMember.Member
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Name
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Name
  nameWithType: MetaDataMember.Name
  fullName: System.Data.Linq.Mapping.MetaDataMember.Name
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Type
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Type
  nameWithType: MetaDataMember.Type
  fullName: System.Data.Linq.Mapping.MetaDataMember.Type
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
- uid: System.Data.Linq.Mapping.UpdateCheck
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: UpdateCheck
  nameWithType: UpdateCheck
  fullName: System.Data.Linq.Mapping.UpdateCheck
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MetaDataMember
  nameWithType: MetaDataMember.MetaDataMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Association*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Association
  nameWithType: MetaDataMember.Association
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DbType
  nameWithType: MetaDataMember.DbType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Expression
  nameWithType: MetaDataMember.Expression
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeclaredBy
  nameWithType: MetaDataMember.IsDeclaredBy
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MappedName
  nameWithType: MetaDataMember.MappedName
- uid: System.Data.Linq.Mapping.MetaDataMember.Member*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Member
  nameWithType: MetaDataMember.Member
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Name*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Name
  nameWithType: MetaDataMember.Name
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Type*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Type
  nameWithType: MetaDataMember.Type
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
