### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueueException
  id: MessageQueueException
  children:
  - System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.Message
  - System.Messaging.MessageQueueException.MessageQueueErrorCode
  langs:
  - csharp
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
  type: Class
  summary: "De uitzondering die wordt gegenereerd als er een interne Microsoft Message Queuing-fout optreedt."
  remarks: "Uitzonderingen die zijn gekoppeld aan de klasse MessageQueueException worden gegenereerd door interne fouten binnen de Message Queuing die moet worden afgehandeld door uw code.       Elke uitzondering bestaat uit een foutcode en een tekenreeks die de bron van de fout wordt beschreven. Zie de <xref:System.Messaging.MessageQueueErrorCode>klasse voor een lijst van deze foutcodes en de bijbehorende beschrijvingen.</xref:System.Messaging.MessageQueueErrorCode>       Als een <xref:System.Messaging.MessageQueue>Hiermee opent u een wachtrij met de `sharedModeDenyReceive` parameter ingesteld op true, wordt een <xref:System.Messaging.MessageQueue>dat vervolgens probeert te lezen uit de wachtrij genereert een uitzondering MessageQueueException vanwege een fout bij het delen.</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue> Dezelfde uitzondering gegenereerd als een <xref:System.Messaging.MessageQueue>probeert te krijgen tot de wachtrij in de exclusieve modus bij een andere <xref:System.Messaging.MessageQueue>heeft al een niet-exclusieve toegang tot de wachtrij.</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue>      > **waarschuwing tag wordt niet ondersteund.**   > <xref:System.Messaging.MessageQueueTransaction>threading-apartment-bewust.</xref:System.Messaging.MessageQueueTransaction> In Visual Basic wordt de status van de belangrijkste thread `STA`, dus u moet toepassen de <xref:System.MTAThreadAttribute>in de `Main` subroutine.</xref:System.MTAThreadAttribute> Anders verzenden van een transactioneel bericht met een andere thread genereert een uitzondering MessageQueueException."
  example:
  - >-
    [!code-vb[MessageQueue.ExistsDelete#1](~/add/codesnippet/visualbasic/t-system.messaging.messa_3_1.vb)]
     [!code-cs[MessageQueue.ExistsDelete#1](~/add/codesnippet/csharp/t-system.messaging.messa_3_1.cs)]
     [!code-cpp[MessageQueue.ExistsDelete#1](~/add/codesnippet/cpp/t-system.messaging.messa_3_1.cpp)]
  syntax:
    content: 'public class MessageQueueException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref> klasse met de geserialiseerde gegevens."
  syntax:
    content: protected MessageQueueException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Een <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> waarin zich de geserialiseerde gegevens die zijn gekoppeld aan de <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Een <xref:System.Runtime.Serialization.StreamingContext>die bevat de bron en bestemming van de geserialiseerde stroom die zijn gekoppeld aan de <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Messaging.MessageQueueException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Een object met gegevens van serialisatie gevuld met de gegevens die nodig zijn voor het serialiseren van de <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Een <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> waarin zich de geserialiseerde gegevens die zijn gekoppeld aan de <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Een <xref:System.Runtime.Serialization.StreamingContext>die bevat de bron en bestemming van de geserialiseerde stroom die zijn gekoppeld aan de <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Messaging.MessageQueueException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.Message
  id: Message
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hiermee wordt een waarde die de Message Queuing-fout beschrijft."
  remarks: "Als u deze eigenschap krijgt, de methode probeert op te halen van de tekenreeks die is gekoppeld aan de <xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A>eigenschap.</xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A> Als de methode niet kan interpreteren van de foutcode die Message Queuing gegenereerd, wordt de bericht-eigenschap de waarde `UnknownError`."
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "De beschrijving van de Message Queuing-interne fout gegenereerd dit <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>."
  overload: System.Messaging.MessageQueueException.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  id: MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Haalt een waarde die aangeeft van de foutcode die is gekoppeld aan deze uitzondering."
  remarks: "De <xref:System.Messaging.MessageQueueException.Message%2A>eigenschap bevat een tekenreeks die is gekoppeld aan dit: MessageQueueErrorCode die meer volledig de bron van de fout beschrijft.</xref:System.Messaging.MessageQueueException.Message%2A>"
  syntax:
    content: public System.Messaging.MessageQueueErrorCode MessageQueueErrorCode { get; }
    return:
      type: System.Messaging.MessageQueueErrorCode
      description: "Een <xref href=&quot;System.Messaging.MessageQueueErrorCode&quot;> </xref> die identificeert het type fout Message Queuing gegenereerd."
  overload: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: System.Runtime.InteropServices.ExternalException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Messaging.MessageQueueException.Message
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueErrorCode
  parent: System.Messaging
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueException.#ctor*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException.MessageQueueException
- uid: System.Messaging.MessageQueueException.GetObjectData*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData
  nameWithType: MessageQueueException.GetObjectData
- uid: System.Messaging.MessageQueueException.Message*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
