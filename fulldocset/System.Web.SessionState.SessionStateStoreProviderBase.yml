### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateStoreProviderBase
  id: SessionStateStoreProviderBase
  children:
  - System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  - System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  - System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  - System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  langs:
  - csharp
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase
  fullName: System.Web.SessionState.SessionStateStoreProviderBase
  type: Class
  summary: "Hiermee definieert u de vereiste onderdelen van een sessiestatus provider voor een gegevensarchief."
  remarks: "ASP.NET-sessiestatus leest en schrijft sessiegegevens van en naar een gegevensopslag met behulp van een sessiestatus-provider opslaan. Een sessiestatus opslagprovider is een klasse die eigenschappen overneemt van de abstracte klasse SessionStateStoreProviderBase en overschrijft leden met implementaties die specifiek zijn voor de gegevensopslag. De sessiestatus store-provider wordt aangeroepen door de <xref:System.Web.SessionState.SessionStateModule>klasse tijdens de verwerking van een ASP.NET-pagina om te communiceren met de gegevensopslag voor het opslaan en ophalen van de sessievariabelen en de bijbehorende sessie-informatie zoals de time-outwaarde.</xref:System.Web.SessionState.SessionStateModule>       Sessiegegevens binnen elke ASP.NET-toepassing worden afzonderlijk opgeslagen voor elk <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>eigenschap.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> ASP.NET-toepassingen delen sessiegegevens niet.       U kunt een aangepaste SessionStateStoreProviderBase-implementatie voor een ASP.NET-toepassing opgeven door de `mode` kenmerk van de `sessionState` configuratie-element op de <xref:System.Web.SessionState.SessionStateMode>en de `customProvider` kenmerk op de naam van de aangepaste provider, zoals wordt weergegeven in het voorbeeld voor dit onderwerp.</xref:System.Web.SessionState.SessionStateMode>      ## Vergrendelingsfout sessie Store gegevens omdat de ASP.NET-toepassingen zijn meerdere threads voor de ondersteuning van op gelijktijdige aanvragen reageert, is het mogelijk dat gelijktijdige aanvragen probeert te krijgen tot de dezelfde sessie-informatie. Neem bijvoorbeeld een scenario waar meerdere frames in een frameset alle toegang hebben tot dezelfde toepassing. De afzonderlijke aanvragen voor elk frame in de frameset kunnen worden uitgevoerd op de webserver gelijktijdig in verschillende threads. Als de ASP.NET-pagina&quot;s voor elke framebron toegang krijgen tot de variabelen voor de sessiestatus, kunt u meerdere threads tegelijk toegang krijgen tot de store sessie kunnen hebben.       Om te voorkomen dat gegevensconflicten op de sessie store en onverwacht gedrag van de sessiestatus, de <xref:System.Web.SessionState.SessionStateModule>en SessionStateStoreProviderBase klassen lock-functionaliteit die uitsluitend Hiermee vergrendelt u de sessie store-item voor een bepaalde sessie voor de duur van de uitvoering van een ASP.NET-pagina bevatten.</xref:System.Web.SessionState.SessionStateModule> Houd er rekening mee dat zelfs als de <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>kenmerk is gemarkeerd als `ReadOnly`, andere ASP.NET-pagina&quot;s in dezelfde toepassing mogelijk om te schrijven naar het archief van de sessie, zodat een aanvraag voor sessie alleen-lezen gegevens uit de store mogelijk nog steeds uiteindelijk wachten op gegevens die worden vrijgemaakt zodra vergrendeld.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Een vergrendeling is ingesteld op sessie store gegevens aan het begin van de aanvraag kan in de aanroep naar de <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>methode.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Wanneer de aanvraag is voltooid, de vergrendeling wordt vrijgegeven tijdens het aanroepen van de <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>methode.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>       Als de <xref:System.Web.SessionState.SessionStateModule>object vergrendelde sessiegegevens tegenkomt tijdens de aanroep van de <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>of de <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>methode, wordt automatisch opnieuw aangevraagd de sessiegegevens halve seconde tussenpozen totdat de vergrendeling wordt vrijgegeven of de hoeveelheid tijd die de sessiegegevens is vergrendeld is groter dan de waarde van de <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>eigenschap.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> Als de time-out voor de uitvoering wordt overschreden, de <xref:System.Web.SessionState.SessionStateModule>object roept de <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>methode sessie-gegevens in de vrije en de sessie-gegevens in de aanvraag op dat moment.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       Sessie-store geblokkeerd gegevens is mogelijk vrijgemaakt door een aanroep naar de <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>methode op een afzonderlijke thread voordat de aanroep van de <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>methode voor het huidige antwoord, een poging kan worden gemaakt met het instellen en de vrijgave van de sessiestatus store-gegevens die al is vrijgegeven en gewijzigd door een andere sessie.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Om deze situatie te voorkomen dat de <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>en <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>methoden retourneren een ID vergrendelen.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Deze id vergrendeling moet worden toegevoegd aan elke aanvraag om gegevens van de vergrendelde sessie-store te wijzigen. Sessie-store gegevens alleen als de id van de vergrendeling in het gegevensarchief overeenkomt met de opgegeven door de <xref:System.Web.SessionState.SessionStateModule>.</xref:System.Web.SessionState.SessionStateModule> lock-id is gewijzigd      ## Verwijderen van verlopen sessie opgeslagen gegevens wanneer de <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>methode wordt aangeroepen voor een bepaalde sessie, de gegevens voor die sessie wordt verwijderd uit het data-archief met de <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>methode; anders blijven de gegevens in het gegevensarchief van de sessie op server toekomstige aanvragen voor de sessie.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Het is tot de implementatie SessionStateStoreProviderBase om verlopen sessie-gegevens te verwijderen."
  example:
  - "For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"OdbcSessionServices\" connectionString=\"DSN=SessionState;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <sessionState   \n      mode=\"Custom\"  \n      customProvider=\"OdbcSessionProvider\">  \n      <providers>  \n        <add name=\"OdbcSessionProvider\"  \n             type=\"Samples.AspNet.Session.OdbcSessionStateStore\"  \n             connectionStringName=\"OdbcSessionServices\" />  \n      </providers>  \n    </sessionState>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> klasse."
  remarks: "U zijn niet nodig voor het implementeren van een constructor voor een klasse die eigenschappen overneemt van de <xref:System.Web.SessionState.SessionStateStoreProviderBase>abstracte klasse.</xref:System.Web.SessionState.SessionStateStoreProviderBase> Initialisatie van de waarden voor een <xref:System.Web.SessionState.SessionStateStoreProviderBase>implementatie worden doorgegeven aan de <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>methode-implementatie.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: protected SessionStateStoreProviderBase ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  id: CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Maakt een nieuw <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> object moet worden gebruikt voor de huidige aanvraag."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode CreateNewStoreData aan het begin van een aanvraag voor een ASP.NET-pagina tijdens de <xref:System.Web.HttpApplication.AcquireRequestState>gebeurtenis.</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> De methode CreateNewStoreData wordt aangeroepen als: - de binnenkomende aanvraag heeft geen sessie-ID of - de binnenkomende aanvraag heeft een sessie-ID, maar de sessie is niet gevonden in het gegevensarchief.       De methode CreateNewStoreData maakt u een nieuwe <xref:System.Web.SessionState.SessionStateStoreData>object met een lege <xref:System.Web.SessionState.ISessionStateItemCollection>object, een <xref:System.Web.HttpStaticObjectsCollection>verzameling en de opgegeven `timeout` waarde.</xref:System.Web.HttpStaticObjectsCollection> </xref:System.Web.SessionState.ISessionStateItemCollection> </xref:System.Web.SessionState.SessionStateStoreData> De <xref:System.Web.HttpStaticObjectsCollection>verzameling voor de ASP.NET-toepassing kan worden opgehaald met de <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>methode.</xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> </xref:System.Web.HttpStaticObjectsCollection>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
    - id: timeout
      type: System.Int32
      description: "De sessiestatus <xref:System.Web.SessionState.HttpSessionState.Timeout*>waarde voor de nieuwe <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Een nieuwe <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> voor de huidige aanvraag."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  id: CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Een nieuwe sessiestatus item wordt toegevoegd aan de gegevensopslag."
  remarks: "De methode CreateUninitializedItem met sessies wordt gebruikt wanneer de `cookieless` en `regenerateExpiredSessionId` kenmerken zijn beide `true`. Met de `regenerateExpiredSessionId attribute` ingesteld op `true` zorgt ervoor dat de <xref:System.Web.SessionState.SessionStateModule>object voor het genereren van een nieuwe <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>waarde wanneer een verlopen <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>waarde is aangetroffen.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       Het proces voor het genereren van een nieuwe <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>-waarde moet de browser omleiden naar een URL met het zojuist gegenereerde <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>waarde.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> De methode CreateUninitializedItem wordt aangeroepen tijdens de eerste aanvraag met een verlopen <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>waarde.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Na de <xref:System.Web.SessionState.SessionStateModule>object verkrijgt een nieuwe <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>waarde ter vervanging van de waarde voor verlopen, ontvangt de methode CreateUninitializedItem voor een niet-geïnitialiseerde vermelding toevoegen aan het archief sessiestatusgegevens.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule> De browser wordt vervolgens omgeleid naar de URL die het zojuist gegenereerde <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>waarde.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Het bestaan van de niet-geïnitialiseerde vermelding in het gegevensarchief sessie zorgt ervoor dat de omgeleide aanvraag die zojuist gegenereerde bevat <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>waarde is niet het verkeerd hebben voor een aanvraag voor een verlopen sessie en, in plaats daarvan beschouwd als een nieuwe sessie.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       De niet-geïnitialiseerde vermelding in het gegevensarchief van de sessie is gekoppeld aan het zojuist gegenereerde <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>waarde en alleen standaardwaarden bevat, zoals een vervaldatum en -tijd en een waarde die overeenkomt met de `actionFlags` parameter van de <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>en <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>methoden.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> De niet-geïnitialiseerde vermelding in het archief van de sessiestatus bevatten een `actionFlags` waarde gelijk is aan de <xref:System.Web.SessionState.SessionStateActions>opsommingswaarde.</xref:System.Web.SessionState.SessionStateActions> Deze waarde wordt doorgegeven aan de <xref:System.Web.SessionState.SessionStateModule>object door de <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>en <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>methoden en informeert de <xref:System.Web.SessionState.SessionStateModule>-object dat de huidige sessie een nieuwe maar is niet-geïnitialiseerde sessie.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> De <xref:System.Web.SessionState.SessionStateModule>object vervolgens initialiseren van de nieuwe sessie en verhoogt de `Session_OnStart` gebeurtenis.</xref:System.Web.SessionState.SessionStateModule>       Zie voor meer informatie over de sessies zonder cookies, de <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>eigenschap.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
    - id: id
      type: System.String
      description: "De <xref:System.Web.SessionState.HttpSessionState.SessionID*>voor de huidige aanvraag.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: timeout
      type: System.Int32
      description: "De sessie <xref:System.Web.SessionState.HttpSessionState.Timeout*>voor de huidige aanvraag.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> implementatie."
  remarks: "De methode Dispose wordt aangeroepen wanneer de <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName>methode wordt uitgevoerd op het afsluiten van het toepassingsdomein.</xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> Klassen die overnemen de <xref:System.Web.SessionState.SessionStateStoreProviderBase>klasse kunt deze methode gebruiken om vrij te maken van bronnen niet langer in gebruik.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  id: EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Aangeroepen door de <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> object aan het einde van een aanvraag."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode EndRequest aan het einde van een aanvraag voor een ASP.NET-pagina tijdens de <xref:System.Web.HttpApplication.EndRequest>gebeurtenis.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.SessionState.SessionStateModule> U kunt de methode EndRequest opschoontaken per aanvraag vereist zijn voor uw archief van de sessiestatus provider uitvoeren."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void EndRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Alleen-lezen sessiestatusgegevens retourneert uit de gegevensopslag van de sessie."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode GetItem aan het begin van een aanvraag tijdens de <xref:System.Web.HttpApplication.AcquireRequestState>gebeurtenis, wanneer de <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>kenmerk is ingesteld op `ReadOnly`.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Als de <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>kenmerk is ingesteld op `true`, wordt de <xref:System.Web.SessionState.SessionStateModule>aanroepen-object in plaats daarvan de <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>methode.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       De methode GetItem retourneert een <xref:System.Web.SessionState.SessionStateStoreData>object gevuld met de sessie-informatie uit de gegevensopslag en updates van de vervaldatum van de sessiegegevens.</xref:System.Web.SessionState.SessionStateStoreData> Als geen item voor sessie-gegevens zijn gevonden bij de gegevensopslag, stelt de methode GetItem de `locked``out` -parameter voor `false` en retourneert `null`. Dit zorgt ervoor dat de <xref:System.Web.SessionState.SessionStateModule>object aan te roepen de <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>methode een nieuwe sessie maken in het gegevensarchief.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule>       Als item voor sessie gegevens bij de gegevensopslag is gevonden, maar de gegevens is vergrendeld, de methode GetItem sets de `locked``out` -parameter voor `true`, stelt de `lockAge``out` parameter op de huidige datum en tijd minus de datum en tijd wanneer het item is vergrendeld (die is opgehaald uit de gegevensopslag), stelt de `lockId``out` parameter aan de lock-id opgehaald uit de gegevensopslag en het rendement `null`. Dit zorgt ervoor dat de <xref:System.Web.SessionState.SessionStateModule>object aan te roepen van de methode GetItem opnieuw na een halve seconde interval proberen de item voor sessie-informatie op te halen.</xref:System.Web.SessionState.SessionStateModule>       Als de waarde die de `lockAge``out` parameter is ingesteld op meer dan de <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>waarde, wordt de <xref:System.Web.SessionState.SessionStateModule>object aanroepen de <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>methode om te wissen van de vergrendeling van het item voor sessie-gegevens, en roept vervolgens opnieuw de methode GetItem.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       De `actionFlags` parameter wordt gebruikt als zowel de `cookieless` en `regenerateExpiredSessionId` kenmerken zijn ingesteld op `true`. Een `actionFlags` waarde ingesteld op <xref:System.Web.SessionState.SessionStateActions>geeft aan dat de vermelding in het gegevensarchief van de sessie is een nieuwe sessie die is vereist initialisatie.</xref:System.Web.SessionState.SessionStateActions> Niet-geïnitialiseerde vermeldingen in het gegevensarchief sessie zijn gemaakt door een aanroep naar de <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>methode.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Als het item uit de gegevensopslag van de sessie niet een niet-geïnitialiseerd item is, de `actionFlags` parameter wordt ingesteld op nul.       Aangepast archief van de sessiestatus implementeerders die ondersteuning bieden voor sessies zonder cookies moeten ingesteld de `actionFlags` `out` -parameter voor de waarde uit de gegevensopslag van de sessie voor het huidige item geretourneerd. Als de `actionFlags` parameterwaarde voor de aangevraagde sessie-store item gelijk is aan de <xref:System.Web.SessionState.SessionStateActions>opsommingswaarde en vervolgens de methode GetItem moet de waarde ingesteld in het gegevensarchief op nul nadat u de `actionFlags` `out` parameter.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
    - id: id
      type: System.String
      description: "De <xref:System.Web.SessionState.HttpSessionState.SessionID*>voor de huidige aanvraag.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "Wanneer deze methode retourneert, bevat een Booleaanse waarde die is ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> als het aangevraagde sessie-item vergrendeld op het gegevensarchief sessie, anders wordt is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "Wanneer deze methode retourneert, bevat een <xref:System.TimeSpan>-object dat is ingesteld op de hoeveelheid tijd die een item in de gegevensopslag van de sessie is vergrendeld.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "Wanneer deze methode retourneert, bevat een object dat is ingesteld op de id van de vergrendeling voor de huidige aanvraag. Zie voor meer informatie over de lock-id, &quot;Vergrendelingsfout sessie Store gegevens&quot; in de <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> klasse samenvatting."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "Wanneer deze methode retourneert, bevat een van de <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> waarden, die aangeeft of de huidige sessie een niet-geïnitialiseerd, cookieless-sessie."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Een <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> gevuld met de sessiewaarden en informatie uit de gegevensopslag van de sessie."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Alleen-lezen sessiestatusgegevens retourneert uit de gegevensopslag van de sessie."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode GetItemExclusive aan het begin van een aanvraag tijdens de <xref:System.Web.HttpApplication.AcquireRequestState>gebeurtenis, wanneer de <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>kenmerk is ingesteld op `true`, dit is de standaardoptie.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Als de <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>kenmerk is ingesteld op `ReadOnly`, wordt de <xref:System.Web.SessionState.SessionStateModule>aanroepen-object in plaats daarvan de <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>methode.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       De methode GetItemExclusive retourneert een <xref:System.Web.SessionState.SessionStateStoreData>object gevuld met de sessie-informatie uit de gegevensopslag van de vervaldatum van de opgeslagen gegevens bijgewerkt en Hiermee vergrendelt u de gegevens van het item voor sessie op de gegevensopslag voor de duur van de aanvraag.</xref:System.Web.SessionState.SessionStateStoreData> Als geen item voor sessie-gegevens zijn gevonden bij de gegevensopslag, stelt de methode GetItemExclusive de `locked` `out` -parameter voor `false` en retourneert `null`. Dit zorgt ervoor dat de <xref:System.Web.SessionState.SessionStateModule>object aan te roepen de <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>methode een nieuwe sessie maken in het gegevensarchief.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule> Als item voor sessie gegevens bij de gegevensopslag is gevonden, maar de gegevens is vergrendeld, de methode GetItemExclusive sets de `locked` `out` -parameter voor `true`, stelt de `lockAge` `out` parameter op de huidige datum en tijd minus de datum en tijd wanneer het item is vergrendeld (die is opgehaald uit de gegevensopslag), stelt de `lockId` `out` parameter aan de lock-id opgehaald uit de gegevensopslag en het rendement `null`. Dit zorgt ervoor dat de <xref:System.Web.SessionState.SessionStateModule>object de GetItemExclusive-methode niet aanroepen na een halve seconde interval proberen de item voor sessie-informatie ophalen en vergrendeling krijgen op de gegevens opnieuw.</xref:System.Web.SessionState.SessionStateModule> Als de waarde die de `lockAge` `out` parameter is ingesteld op overschrijdt de <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>waarde, wordt de <xref:System.Web.SessionState.SessionStateModule>aanroepen de <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>methode om te wissen van de vergrendeling van het item voor sessie-gegevens, en roept de methode GetItemExclusive vervolgens opnieuw.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       De `actionFlags` parameter wordt gebruikt wanneer de `cookieless` en `regenerateExpiredSessionId` kenmerken beide zijn ingesteld op `true`. Een `actionFlags` waarde ingesteld op <xref:System.Web.SessionState.SessionStateActions>geeft aan dat de vermelding in het gegevensarchief van de sessie is een nieuwe sessie die is vereist initialisatie.</xref:System.Web.SessionState.SessionStateActions> Niet-geïnitialiseerde vermeldingen in het gegevensarchief sessie zijn gemaakt door een aanroep naar de <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>methode.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Als het item uit de gegevensopslag van de sessie niet een niet-geïnitialiseerd item is, de `actionFlags` parameter wordt ingesteld op nul.       Aangepast archief van de sessiestatus implementeerders die ondersteuning bieden voor sessies zonder cookies moeten ingesteld de `actionFlags` `out` -parameter voor de waarde uit de gegevensopslag van de sessie voor het huidige item geretourneerd. Als de `actionFlags` parameterwaarde voor de aangevraagde sessie-store item gelijk is aan de <xref:System.Web.SessionState.SessionStateActions>opsommingswaarde en vervolgens de methode GetItemExclusive moet de waarde ingesteld in het gegevensarchief op nul nadat u de `actionFlags` `out` parameter.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
    - id: id
      type: System.String
      description: "De <xref:System.Web.SessionState.HttpSessionState.SessionID*>voor de huidige aanvraag.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "Wanneer deze methode retourneert, bevat een Booleaanse waarde die is ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> als een vergrendeling is verkregen, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "Wanneer deze methode retourneert, bevat een <xref:System.TimeSpan>-object dat is ingesteld op de hoeveelheid tijd die een item in de gegevensopslag van de sessie is vergrendeld.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "Wanneer deze methode retourneert, bevat een object dat is ingesteld op de id van de vergrendeling voor de huidige aanvraag. Zie voor meer informatie over de lock-id, &quot;Vergrendelingsfout sessie Store gegevens&quot; in de <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> klasse samenvatting."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "Wanneer deze methode retourneert, bevat een van de <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> waarden, die aangeeft of de huidige sessie een niet-geïnitialiseerd, cookieless-sessie."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Een <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> gevuld met de sessiewaarden en informatie uit de gegevensopslag van de sessie."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  id: InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Aangeroepen door de <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> object voor de per aanvraag initialisatie."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode InitializeRequest voordat u een andere <xref:System.Web.SessionState.SessionStateStoreProviderBase>methode.</xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule> De methode InitializeRequest kunt u elke per aanvraag initialisatie vereist voor uw archief van de sessiestatus provider uitvoeren."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void InitializeRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  id: ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Releases een vergrendeling op een item in de sessiegegevens worden opgeslagen."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode ReleaseItemExclusive om te werken de vervaldatum en een vergrendeling op een item in de gegevensopslag van de sessie.</xref:System.Web.SessionState.SessionStateModule> Deze aan het einde van een aanvraag wordt aangeroepen tijdens de <xref:System.Web.HttpApplication.ReleaseRequestState>gebeurtenis, als de sessiewaarden zijn niet gewijzigd.</xref:System.Web.HttpApplication.ReleaseRequestState> Als de sessiewaarden zijn gewijzigd, de <xref:System.Web.SessionState.SessionStateModule>aanroepen-object in plaats daarvan de <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>methode.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       De <xref:System.Web.SessionState.SessionStateModule>object ook de methode aanroept ReleaseItemExclusive wanneer een vergrendeling op een item in de gegevensopslag van de sessie is groter dan de <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>waarde.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateModule> Zie voor meer informatie over het vergrendelen en meer informatie over de lock-id &quot;Vergrendelen sessie-gegevens opslaan&quot; in de <xref:System.Web.SessionState.SessionStateStoreProviderBase>overzicht van de klasse.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       De methode ReleaseItemExclusive verwijdert alleen de vergrendeling van een item in de gegevensopslag van de sessie voor de huidige toepassing die overeenkomt met de opgegeven sessie `id` en `lockId` waarden. Als de `lockId` komt niet overeen met die in de gegevensopslag, de methode ReleaseItemExclusive, gebeurt er niets."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
    - id: id
      type: System.String
      description: "De sessie-id voor de huidige aanvraag."
    - id: lockId
      type: System.Object
      description: "De id van de vergrendeling voor de huidige aanvraag."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  id: RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee verwijdert u item gegevens uit de gegevensopslag van de sessie."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode RemoveItem aan het einde van een aanvraag tijdens de <xref:System.Web.HttpApplication.ReleaseRequestState>gebeurtenis, de gegevens voor een item voor sessie verwijderen uit de gegevensopslag sessie als de <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>methode is aangeroepen.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Alleen sessiegegevens voor de huidige toepassing die overeenkomt met de opgegeven sessie `id` en `lockId` waarden wordt verwijderd. Zie voor meer informatie over het vergrendelen en meer informatie over de lock-id &quot;Vergrendelen sessie-gegevens opslaan&quot; in de <xref:System.Web.SessionState.SessionStateStoreProviderBase>overzicht van de klasse.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
    - id: id
      type: System.String
      description: "De sessie-id voor de huidige aanvraag."
    - id: lockId
      type: System.Object
      description: "De id van de vergrendeling voor de huidige aanvraag."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "De <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> die staat voor het item te verwijderen uit de gegevensopslag."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  id: ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "De datum en tijd van een item in het gegevensarchief van sessie-updates."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode ResetItemTimeout voor het bijwerken van de datum en tijd voor een sessie tot de huidige datum en tijd plus de sessie <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>waarde wanneer beide: - de <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>kenmerk `true`, of - de aanvraag is niet afkomstig van de <xref:System.Web.HttpApplication.AcquireRequestState>en <xref:System.Web.HttpApplication.ReleaseRequestState>gebeurtenissen vanwege een fout.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.SessionState.HttpSessionState.Timeout%2A> </xref:System.Web.SessionState.SessionStateModule>       Als u een ASP.NET-pagina is aangevraagd en de <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>kenmerk is ingesteld op `false`, de methode ResetItemTimeout is nog steeds worden aangeroepen voor het bijwerken van de datum en tijd van de gegevens in het gegevensarchief van de sessie.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
    - id: id
      type: System.String
      description: "De sessie-id voor de huidige aanvraag."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  id: SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "De item voor sessie-informatie in het archief sessiestatusgegevens bijgewerkt met waarden uit de huidige aanvraag en de vergrendeling van de gegevens worden gewist."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode SetAndReleaseItemExclusive aan het einde van een aanvraag tijdens de <xref:System.Web.HttpApplication.ReleaseRequestState>gebeurtenis huidige-item voor sessie-informatie in het gegevensarchief invoegen of bijwerken van bestaande item voor sessie-informatie in het gegevensarchief op de huidige waarden, voor het bijwerken van de verlooptijd van het item en de vergrendeling op de gegevens.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Alleen sessiegegevens voor de huidige toepassing die overeenkomt met de opgegeven sessie `id` en `lockId` waarden wordt bijgewerkt. Zie voor meer informatie over het vergrendelen van &quot;Vergrendelen Store sessiegegevens&quot; in de <xref:System.Web.SessionState.SessionStateStoreProviderBase>overzicht van de klasse.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Als de sessiewaarden voor de huidige aanvraag niet zijn gewijzigd, wordt de methode SetAndReleaseItemExclusive niet aangeroepen. In plaats daarvan de <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>methode wordt aangeroepen.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>       Als de <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>methode is aangeroepen, wordt de methode SetAndReleaseItemExclusive niet wordt aangeroepen.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> In plaats daarvan de <xref:System.Web.SessionState.SessionStateModule>aanroepen object de <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>methode item voor sessie om gegevens te verwijderen uit de gegevensbron.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "De <xref href=&quot;System.Web.HttpContext&quot;> </xref> voor de huidige aanvraag."
    - id: id
      type: System.String
      description: "De sessie-id voor de huidige aanvraag."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "De <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> object met de huidige sessiewaarden worden opgeslagen."
    - id: lockId
      type: System.Object
      description: "De id van de vergrendeling voor de huidige aanvraag."
    - id: newItem
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>het item voor sessie identificeren als een nieuw item; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om de sessie-item als een bestaand item te identificeren."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  id: SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hiermee stelt u een verwijzing naar de <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> delegeren voor de <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> gebeurtenis gedefinieerd in het bestand Global.asax."
  remarks: "De <xref:System.Web.SessionState.SessionStateModule>object roept de methode SetItemExpireCallback wanneer de module wordt geïnitialiseerd om te bepalen of aanroepen naar de `Session_OnEnd` gebeurtenis worden ondersteund door de <xref:System.Web.SessionState.SessionStateStoreProviderBase>uitvoering en om te koppelen de <xref:System.Web.SessionState.SessionStateItemExpireCallback>delegeren met de `Session_OnEnd` gebeurtenis.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule>       Aangepast archief van de sessiestatus provider uitvoerders de methode SetItemExpireCallback moeten gebruiken om te informeren over de <xref:System.Web.SessionState.SessionStateModule>object of aanroepen naar de `Session_OnEnd` gebeurtenis worden ondersteund en bij het instellen van een lokale verwijzing naar de <xref:System.Web.SessionState.SessionStateItemExpireCallback>gemachtigde geleverd door de `expireCallback` parameter.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateModule> De aangepaste implementatie moet bepalen wanneer de lokale <xref:System.Web.SessionState.SessionStateItemExpireCallback>gemachtigde moet worden aangeroepen.</xref:System.Web.SessionState.SessionStateItemExpireCallback> De gemachtigde kan bijvoorbeeld worden aangeroepen tijdens het aanroepen van de <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>methode die wordt aangeroepen wanneer een sessie wordt afgesloten.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);
    parameters:
    - id: expireCallback
      type: System.Web.SessionState.SessionStateItemExpireCallback
      description: "De <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> delegeren voor de <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> gebeurtenis gedefinieerd in het bestand Global.asax."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opslagprovider sessiestatus aanroepen ondersteunt de <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> gebeurtenis; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
- uid: System.Web.SessionState.SessionStateStoreData
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateStoreData
  nameWithType: SessionStateStoreData
  fullName: System.Web.SessionState.SessionStateStoreData
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.SessionStateActions
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateActions
  nameWithType: SessionStateActions
  fullName: System.Web.SessionState.SessionStateActions
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
- uid: System.Web.SessionState.SessionStateItemExpireCallback
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateItemExpireCallback
  nameWithType: SessionStateItemExpireCallback
  fullName: System.Web.SessionState.SessionStateItemExpireCallback
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose
  nameWithType: SessionStateStoreProviderBase.Dispose
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest
  nameWithType: SessionStateStoreProviderBase.EndRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem
  nameWithType: SessionStateStoreProviderBase.GetItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionStateStoreProviderBase.InitializeRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem
  nameWithType: SessionStateStoreProviderBase.RemoveItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback
