### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.ApplicationManager
  id: ApplicationManager
  children:
  - System.Web.Hosting.ApplicationManager.Close
  - System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  - System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  - System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  - System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)
  - System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)
  - System.Web.Hosting.ApplicationManager.GetApplicationManager
  - System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)
  - System.Web.Hosting.ApplicationManager.GetRunningApplications
  - System.Web.Hosting.ApplicationManager.InitializeLifetimeService
  - System.Web.Hosting.ApplicationManager.IsIdle
  - System.Web.Hosting.ApplicationManager.Open
  - System.Web.Hosting.ApplicationManager.ShutdownAll
  - System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)
  - System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)
  langs:
  - csharp
  name: ApplicationManager
  nameWithType: ApplicationManager
  fullName: System.Web.Hosting.ApplicationManager
  type: Class
  summary: "ASP.NET-toepassing-domeinen beheert voor een ASP.NET-toepassing te hosten."
  remarks: "Het object ApplicationManager biedt beheer van de levensduur van objecten in de hosting-omgeving voor een ASP.NET-toepassing. Is verantwoordelijk voor: - activeren en tijdens de initialisatie van ASP.NET-toepassingen.      -Het beheren van de levensduur van de toepassing en de levensduur van objecten in de toepassing worden geregistreerd.      -Objecten die door de hosting-omgeving wordt gebruikt voor het verwerken van aanvragen voor ASP.NET-toepassing weergeeft.      -Het bieden van een lijst met toepassingen die in het hostproces op elk gewenst moment worden uitgevoerd."
  syntax:
    content: 'public sealed class ApplicationManager : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.Close
  id: Close
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: Close()
  nameWithType: ApplicationManager.Close()
  fullName: System.Web.Hosting.ApplicationManager.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee sluit u alle toepassingsdomeinen."
  remarks: "Als een aanroep van de methode Close wordt beperkt door het aantal van toepassingen met behulp van de manager van toepassing op 0, de methode Close roept de <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>methode.</xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Web.Hosting.ApplicationManager.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  id: CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: CreateObject(IApplicationHost,Type)
  nameWithType: ApplicationManager.CreateObject(IApplicationHost,Type)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(IApplicationHost,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Maakt een object voor het domein opgegeven toepassing, op basis van het type."
  remarks: "CreateObject is opgenomen in de .NET Framework versie 3.5.  Zie voor meer informatie [versies en afhankelijkheden](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);
    parameters:
    - id: appHost
      type: System.Web.Hosting.IApplicationHost
      description: "Een <xref href=&quot;System.Web.Hosting.IApplicationHost&quot;> </xref> object."
    - id: type
      type: System.Type
      description: "Het type van het object te maken."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "Een nieuw object van het opgegeven type in <code> type </code>."
  overload: System.Web.Hosting.ApplicationManager.CreateObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een fysiek pad voor de toepassing bestaat niet."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appHost</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  id: CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: CreateObject(String,Type,String,String,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Maakt een object voor de opgegeven toepassingsdomein op basis van het type virtuele en fysieke paden en een Boolean die aangeeft fout gedrag wanneer een object van het opgegeven type al bestaat."
  remarks: "De methode CreateObject wordt gebruikt voor het maken en registreren van objecten in de toepassing. Slechts één object van elk type kan worden gemaakt. Als u meerdere objecten van hetzelfde type maken wilt, moet u de fabrieksinstellingen van een object te implementeren. Zie het voorbeeld in dit onderwerp voor meer informatie.       Elke toepassing, geïdentificeerd door een unieke toepassings-id in het eigen toepassingsdomein wordt uitgevoerd. De functie CreateObject-methode maakt u een object van het opgegeven type in het toepassingsdomein van de toepassing die is opgegeven in de `appID` parameter. Als een toepassingsdomein voor de opgegeven toepassing niet bestaat, wordt een gemaakt voordat het object is gemaakt.       De `failIfExists` parameter bepaalt het gedrag van de methode CreateObject wanneer een object van het opgegeven type al in de toepassing bestaat. Wanneer `failIfExists` is `true`, genereert de methode CreateObject een <xref:System.InvalidOperationException>uitzondering.</xref:System.InvalidOperationException>       Wanneer `failIfExists` is `false`, de functie CreateObject-methode retourneert het bestaande geregistreerde object van het opgegeven type.       De methode CreateObject roept de overbelasting waarvoor een extra `throwOnError` parameter met `throwOnError` ingesteld op `false`."
  example:
  - "The following code example is an implementation of the object-factory design pattern for registered objects. Using the factory pattern enables you to register multiple instances of an object. The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.  \n  \n [!code-cs[System.Web.Hosting.ApplicationManager#1](~/add/codesnippet/csharp/37d6d853-1462-44e9-b1c3-_1.cs)]\n [!code-vb[System.Web.Hosting.ApplicationManager#1](~/add/codesnippet/visualbasic/37d6d853-1462-44e9-b1c3-_1.vb)]"
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);
    parameters:
    - id: appId
      type: System.String
      description: "De unieke id voor de toepassing die eigenaar is van het object."
    - id: type
      type: System.Type
      description: "Het type van het object te maken."
    - id: virtualPath
      type: System.String
      description: "Het virtuele pad naar de toepassing."
    - id: physicalPath
      type: System.String
      description: "Het fysieke pad naar de toepassing."
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt een uitzondering als een object van het opgegeven type is momenteel geregistreerd; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om de bestaande geregistreerde object van het opgegeven type te retourneren."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "Een nieuw object van het opgegeven <code> type </code>."
  overload: System.Web.Hosting.ApplicationManager.CreateObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>physicalPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>  \n  \n \\- or -  \n  \n <code>physicalPath</code> is not a valid application path.  \n  \n \\- or -  \n  \n <code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appID</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>failIfExists</code>is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> en een object van het opgegeven type is al geregistreerd."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  id: CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: CreateObject(String,Type,String,String,Boolean,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Maakt een object voor de opgegeven toepassingsdomein op basis van het type, virtuele en fysieke paden, een Boolean die aangeeft fout gedrag wanneer een object van het opgegeven type bestaat al en een Boolean die aangeeft of hosting initialisatie fout uitzonderingen worden veroorzaakt."
  remarks: "Deze overbelasting van de <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>methode biedt de `throwOnError` parameter u bepalen kunt of hosting initialisatie-uitzonderingen worden veroorzaakt.</xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> De overbelasting van de <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>methode die geen biedt `throwOnError` deze overbelasting aanroepen met de parameter die is ingesteld op `false`.</xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>"
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);
    parameters:
    - id: appId
      type: System.String
      description: "De unieke id voor de toepassing die eigenaar is van het object."
    - id: type
      type: System.Type
      description: "Het type van het object te maken."
    - id: virtualPath
      type: System.String
      description: "Het virtuele pad naar de toepassing."
    - id: physicalPath
      type: System.String
      description: "Het fysieke pad naar de toepassing."
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt een uitzondering als een object van het opgegeven type is momenteel geregistreerd; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om de bestaande geregistreerde object van het opgegeven type te retourneren."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uitzonderingen voor het hosten van de initialisatie van de fouten; genereert <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> naar niet throw die als host fungeert voor initialisatie van de uitzonderingen."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "Een nieuw object van het opgegeven <code> type </code>."
  overload: System.Web.Hosting.ApplicationManager.CreateObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>physicalPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>  \n  \n \\- or -  \n  \n <code>physicalPath</code> is not a valid application path.  \n  \n \\- or -  \n  \n <code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appID</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>failIfExists</code>is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> en een object van het opgegeven type is al geregistreerd."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)
  id: GetAppDomain(System.String)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetAppDomain(String)
  nameWithType: ApplicationManager.GetAppDomain(String)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee haalt u het toepassingsdomein van de opgegeven toepassing."
  syntax:
    content: public AppDomain GetAppDomain (string appId);
    parameters:
    - id: appId
      type: System.String
      description: "De unieke id voor de toepassing."
    return:
      type: System.AppDomain
      description: "Het toepassingsdomein van de toepassing."
  overload: System.Web.Hosting.ApplicationManager.GetAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)
  id: GetAppDomain(System.Web.Hosting.IApplicationHost)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetAppDomain(IApplicationHost)
  nameWithType: ApplicationManager.GetAppDomain(IApplicationHost)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(IApplicationHost)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee haalt u het toepassingsdomein van een toepassing met de opgegeven host."
  syntax:
    content: public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);
    parameters:
    - id: appHost
      type: System.Web.Hosting.IApplicationHost
      description: "De host om op te halen van het toepassingsdomein voor."
    return:
      type: System.AppDomain
      description: "Het toepassingsdomein van de toepassing."
  overload: System.Web.Hosting.ApplicationManager.GetAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager
  id: GetApplicationManager
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetApplicationManager()
  nameWithType: ApplicationManager.GetApplicationManager()
  fullName: System.Web.Hosting.ApplicationManager.GetApplicationManager()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retourneert het enkele exemplaar van de <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> object dat is gekoppeld met dit proces ASP.NET-host."
  remarks: "Slechts één exemplaar van de <xref:System.Web.Hosting.ApplicationManager>object is gemaakt door een proces van de ASP.NET-host in het standaardtoepassingsdomein.</xref:System.Web.Hosting.ApplicationManager> Als u een exemplaar van de <xref:System.Web.Hosting.ApplicationManager>klasse is niet beschikbaar, de methode GetApplicationManager maakt eerst een exemplaar van de <xref:System.Web.Hosting.ApplicationManager>klasse en retourneert vervolgens het gemaakte object.</xref:System.Web.Hosting.ApplicationManager> </xref:System.Web.Hosting.ApplicationManager> Als u een exemplaar van de <xref:System.Web.Hosting.ApplicationManager>klasse eerder is gemaakt, de methode GetApplicationManager retourneert het bestaande object.</xref:System.Web.Hosting.ApplicationManager>"
  example:
  - "The following code example uses the GetApplicationManager method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.  \n  \n [!code-vb[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/visualbasic/m-system.web.hosting.app_0_1.aspx)]\n [!code-cs[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/csharp/m-system.web.hosting.app_0_1.aspx)]"
  syntax:
    content: public static System.Web.Hosting.ApplicationManager GetApplicationManager ();
    parameters: []
    return:
      type: System.Web.Hosting.ApplicationManager
      description: "Het exemplaar van de <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> object dat is gekoppeld met het hostproces van ASP.NET die wordt uitgevoerd."
  overload: System.Web.Hosting.ApplicationManager.GetApplicationManager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)
  id: GetObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetObject(String,Type)
  nameWithType: ApplicationManager.GetObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.GetObject(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retourneert het geregistreerde object van het opgegeven type van de opgegeven toepassing."
  syntax:
    content: public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);
    parameters:
    - id: appId
      type: System.String
      description: "De unieke id voor de toepassing die eigenaar is van het object."
    - id: type
      type: System.Type
      description: "Het type van het object te retourneren."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "Het geregistreerde object van het opgegeven type; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het type is niet geregistreerd via een aanroep van de <xref:System.Web.Hosting.ApplicationManager.CreateObject*>methode.</xref:System.Web.Hosting.ApplicationManager.CreateObject*>"
  overload: System.Web.Hosting.ApplicationManager.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       —or—       <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications
  id: GetRunningApplications
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetRunningApplications()
  nameWithType: ApplicationManager.GetRunningApplications()
  fullName: System.Web.Hosting.ApplicationManager.GetRunningApplications()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retourneert een momentopname van het uitvoeren van toepassingen."
  remarks: ''
  example:
  - "The following code example uses the GetRunningApplications method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.  \n  \n [!code-vb[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/visualbasic/m-system.web.hosting.app_1_1.aspx)]\n [!code-cs[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/csharp/m-system.web.hosting.app_1_1.aspx)]"
  syntax:
    content: public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();
    parameters: []
    return:
      type: System.Web.Hosting.ApplicationInfo[]
      description: "Een matrix van <xref href=&quot;System.Web.Hosting.ApplicationInfo&quot;> </xref> objecten die informatie over de toepassingen die worden beheerd door dit bevatten <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> exemplaar."
  overload: System.Web.Hosting.ApplicationManager.GetRunningApplications*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: ApplicationManager.InitializeLifetimeService()
  fullName: System.Web.Hosting.ApplicationManager.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Geeft het toepassingsdomein een oneindig levensduur door te voorkomen dat een lease wordt gemaakt."
  remarks: "Deze methode overschrijft de <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>methode in de basis-klasse.</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Retourneert altijd `null` en waardoor wordt voorkomen dat een lease van wordt gemaakt die de levensduur van het toepassingsdomein wilt beperken."
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.ApplicationManager.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.IsIdle
  id: IsIdle
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: IsIdle()
  nameWithType: ApplicationManager.IsIdle()
  fullName: System.Web.Hosting.ApplicationManager.IsIdle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retourneert een waarde die aangeeft of alle toepassingen die worden gehost door het proces niet actief zijn en geen aanvragen verwerkt."
  remarks: "De methode IsIdle retourneert `true` als alle toepassingen die worden gehost door het proces niet actief zijn."
  syntax:
    content: public bool IsIdle ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als alle toepassingen in het proces niet-actieve; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.ApplicationManager.IsIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.Open
  id: Open
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: Open()
  nameWithType: ApplicationManager.Open()
  fullName: System.Web.Hosting.ApplicationManager.Open()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Maakt een thread-veilige verhoging voor het aantal gebruikers verwijzing van het toepassingsexemplaar manager."
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.Web.Hosting.ApplicationManager.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.ShutdownAll
  id: ShutdownAll
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: ShutdownAll()
  nameWithType: ApplicationManager.ShutdownAll()
  fullName: System.Web.Hosting.ApplicationManager.ShutdownAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Alle toepassingsresources wordt verwijderd."
  remarks: "Aanroepen van de methode ShutdownAll is gelijk aan het aanroepen van de <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>methode in alle toepassingsdomeinen beheerd door dit <xref:System.Web.Hosting.ApplicationManager>exemplaar; echter, de methode ShutdownAll kan worden aangeroepen buiten de domeinen van beheerde toepassingsservices.</xref:System.Web.Hosting.ApplicationManager> </xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>"
  syntax:
    content: public void ShutdownAll ();
    parameters: []
  overload: System.Web.Hosting.ApplicationManager.ShutdownAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)
  id: ShutdownApplication(System.String)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: ShutdownApplication(String)
  nameWithType: ApplicationManager.ShutdownApplication(String)
  fullName: System.Web.Hosting.ApplicationManager.ShutdownApplication(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee wordt de opgegeven toepassing."
  remarks: "Aanroepen van de methode ShutdownApplication is gelijk aan het aanroepen van de <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>methode voor een specifieke toepassingsdomein; echter de methode ShutdownApplication kan worden aangeroepen vanuit externe beheerde toepassingsdomeinen.</xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>"
  syntax:
    content: public void ShutdownApplication (string appId);
    parameters:
    - id: appId
      type: System.String
      description: "De unieke id van de toepassing verwijderen (Unload)."
  overload: System.Web.Hosting.ApplicationManager.ShutdownApplication*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)
  id: StopObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: StopObject(String,Type)
  nameWithType: ApplicationManager.StopObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.StopObject(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Hiermee verwijdert u het opgegeven object in de lijst met geregistreerde objecten in een toepassing. Als het object dat moet worden verwijderd, het laatste resterende object in de lijst met geregistreerde objecten in een toepassing is, is de toepassing is verwijderd."
  syntax:
    content: public void StopObject (string appId, Type type);
    parameters:
    - id: appId
      type: System.String
      description: "De unieke id voor de toepassing die eigenaar is van het object."
    - id: type
      type: System.Type
      description: "Het type van het object verwijderen (Unload)."
  overload: System.Web.Hosting.ApplicationManager.StopObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appId</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Hosting.ApplicationManager.Close
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Close()
  nameWithType: ApplicationManager.Close()
  fullName: System.Web.Hosting.ApplicationManager.Close()
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject(IApplicationHost,Type)
  nameWithType: ApplicationManager.CreateObject(IApplicationHost,Type)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(IApplicationHost,Type)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Web.Hosting.IApplicationHost
  parent: System.Web.Hosting
  isExternal: false
  name: IApplicationHost
  nameWithType: IApplicationHost
  fullName: System.Web.Hosting.IApplicationHost
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject(String,Type,String,String,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject(String,Type,String,String,Boolean,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetAppDomain(String)
  nameWithType: ApplicationManager.GetAppDomain(String)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(String)
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetAppDomain(IApplicationHost)
  nameWithType: ApplicationManager.GetAppDomain(IApplicationHost)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(IApplicationHost)
- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetApplicationManager()
  nameWithType: ApplicationManager.GetApplicationManager()
  fullName: System.Web.Hosting.ApplicationManager.GetApplicationManager()
- uid: System.Web.Hosting.ApplicationManager
  parent: System.Web.Hosting
  isExternal: false
  name: ApplicationManager
  nameWithType: ApplicationManager
  fullName: System.Web.Hosting.ApplicationManager
- uid: System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetObject(String,Type)
  nameWithType: ApplicationManager.GetObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.GetObject(String,Type)
- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetRunningApplications()
  nameWithType: ApplicationManager.GetRunningApplications()
  fullName: System.Web.Hosting.ApplicationManager.GetRunningApplications()
- uid: System.Web.Hosting.ApplicationInfo[]
  parent: System.Web.Hosting
  isExternal: false
  name: ApplicationInfo
  nameWithType: ApplicationInfo
  fullName: System.Web.Hosting.ApplicationInfo[]
  spec.csharp:
  - uid: System.Web.Hosting.ApplicationInfo
    name: ApplicationInfo
    nameWithType: ApplicationInfo
    fullName: ApplicationInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: ApplicationManager.InitializeLifetimeService()
  fullName: System.Web.Hosting.ApplicationManager.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.ApplicationManager.IsIdle
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: IsIdle()
  nameWithType: ApplicationManager.IsIdle()
  fullName: System.Web.Hosting.ApplicationManager.IsIdle()
- uid: System.Web.Hosting.ApplicationManager.Open
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Open()
  nameWithType: ApplicationManager.Open()
  fullName: System.Web.Hosting.ApplicationManager.Open()
- uid: System.Web.Hosting.ApplicationManager.ShutdownAll
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownAll()
  nameWithType: ApplicationManager.ShutdownAll()
  fullName: System.Web.Hosting.ApplicationManager.ShutdownAll()
- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownApplication(String)
  nameWithType: ApplicationManager.ShutdownApplication(String)
  fullName: System.Web.Hosting.ApplicationManager.ShutdownApplication(String)
- uid: System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: StopObject(String,Type)
  nameWithType: ApplicationManager.StopObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.StopObject(String,Type)
- uid: System.Web.Hosting.ApplicationManager.Close*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Close
  nameWithType: ApplicationManager.Close
- uid: System.Web.Hosting.ApplicationManager.CreateObject*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject
  nameWithType: ApplicationManager.CreateObject
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetAppDomain
  nameWithType: ApplicationManager.GetAppDomain
- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetApplicationManager
  nameWithType: ApplicationManager.GetApplicationManager
- uid: System.Web.Hosting.ApplicationManager.GetObject*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetObject
  nameWithType: ApplicationManager.GetObject
- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetRunningApplications
  nameWithType: ApplicationManager.GetRunningApplications
- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: ApplicationManager.InitializeLifetimeService
- uid: System.Web.Hosting.ApplicationManager.IsIdle*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: IsIdle
  nameWithType: ApplicationManager.IsIdle
- uid: System.Web.Hosting.ApplicationManager.Open*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Open
  nameWithType: ApplicationManager.Open
- uid: System.Web.Hosting.ApplicationManager.ShutdownAll*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownAll
  nameWithType: ApplicationManager.ShutdownAll
- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownApplication
  nameWithType: ApplicationManager.ShutdownApplication
- uid: System.Web.Hosting.ApplicationManager.StopObject*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: StopObject
  nameWithType: ApplicationManager.StopObject
