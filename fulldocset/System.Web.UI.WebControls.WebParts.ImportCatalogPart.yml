### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  id: ImportCatalogPart
  children:
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText
  - System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText
  langs:
  - csharp
  name: ImportCatalogPart
  nameWithType: ImportCatalogPart
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  type: Class
  summary: "Beschrijvingsbestand met een voor de invoer een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement (of andere serverbesturingselement ASP.NET gebruikt als een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement), zodat gebruikers het besturingselement aan een webpagina met vooraf gedefinieerde instellingen toevoegen kunnen. Deze klasse kan niet worden overgenomen."
  remarks: "Het besturingselement ImportCatalogPart kan gebruikers een beschrijvingsbestand importeert dat instellingen worden op een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement of server die een gebruiker wil toevoegen aan een <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Nadat een gebruiker een beschrijvingsbestand importeert de <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement waarnaar wordt verwezen in het bestand wordt weergegeven in het besturingselement ImportCatalogPart en een gebruiker het besturingselement kunt toevoegen aan de pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Het beschrijvingsbestand is niet hetzelfde zijn als het besturingselement zelf. Dit is een XML-bestand dat eindigt op een. Webonderdeel extensie en naam/waarde-paren--voornamelijk eigenschapswaarden--die de status van het besturingselement beschrijven bevat. De beschrijvingsbestand wordt gemaakt volgens een opgegeven XML-indeling, zoals beschreven in het onderwerp [webonderdelen besturingsbestanden beschrijving](~/add/includes/ajax-current-ext-md.md).       Als voor het besturingselement dat het beschrijvingsbestand naar verwijst, kunnen ofwel worden gecompileerd naar een assembly of het kan een besturingselement gedefinieerd in een ASCX-bestand zijn. In beide gevallen moet het besturingselement waarnaar wordt verwezen in een van het geïmporteerde beschrijvingsbestand bestaan op de webserver die als host fungeert voor de pagina die u probeert te importeren van het besturingselement. De beschrijvingsbestand verwijst naar het besturingselement naam en de assembly (of het bestand) dat het besturingselement bevat en het beschrijvingsbestand bevat instellingen die invloed hebben op de eigenschapswaarden, uiterlijk en gedrag van het besturingselement.       Het besturingselement ImportCatalogPart kan gebruikers share-instellingen voor besturingselementen. Een complex besturingselement kan hebben veel eigenschappen en instellingen. Bijvoorbeeld in een typische intranetsite binnen een grote onderneming, een aangepaste <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement mogelijk een aantal eigenschappen die waarden bevatten die specifiek zijn voor de gebruikers-omgeving, zoals hun databaseverbindingen, afdelingen informatie, enzovoort bevatten.</xref:System.Web.UI.WebControls.WebParts.WebPart> Het besturingselement bevat mogelijk ook een aantal eigenschappen die betrekking hebben op de weergave. Één gebruiker kan aanpassen van het besturingselement in een bepaalde site en deze correct werkt, exporteren van een beschrijvingsbestand voor het besturingselement en de beschrijvingsbestand delen met andere gebruikers, die op het bestand importeren kunnen voor het toevoegen van het volledig geconfigureerde besturingselement aan andere websites op het intranet die ze kunnen aanpassen. Zolang de gecompileerde assembly of een gebruikersbestand waarin het besturingselement op de webserver die als host fungeert voor de site bestaat, kunnen gebruikers het besturingselement kunnen toevoegen aan andere websites.       Het mechanisme waarmee gebruikers een importbestand voor een beschrijving (en dus de bijbehorende server beheren) in een webpagina is het besturingselement ImportCatalogPart, dat een ontwikkelaar aan een webpagina toevoegen moet. Wanneer een gebruiker de pagina naar de weergavemodus van de catalogus overschakelt, het ImportCatalogPart-besturingselement wordt weergegeven en de gebruiker kan de gebruiker dit besturingselement om te bladeren naar de. Webonderdeel beschrijvingsbestand overeenkomt met het serverbesturingselement waarmee ze wilt importeren. De gebruikersinterface en de instructies te volgen geleverd door het besturingselement ImportCatalogPart een gebruiker kan het gewenste serverbesturingselement toevoegen aan de webpagina met het uiterlijk en de eigenschappen volledig geconfigureerd zoals opgegeven in de van de geïmporteerde beschrijvingsbestand.       Voordat een <xref:System.Web.UI.WebControls.WebParts.WebPart>beschrijvingsbestand van het besturingselement kan worden geïmporteerd, een gebruiker moet eerst (exporteren) maken op basis van de bestanden op een bestaande <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Een beschrijvingsbestand voor een besturingselement kan worden geëxporteerd als de volgende voorwaarden wordt voldaan:-het besturingselement heeft eigenschappen die zijn gemarkeerd met de `Personalizable` kenmerk.      -Het Web.config-bestand heeft de `enableExport` kenmerkwaarde ingesteld op `true` op de `<webParts>` element.      -Een ontwikkelaar stelt u de waarde van de <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>eigenschap op het besturingselement op een andere waarde dan de standaardwaarde van <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, die voorkomt dat exporteren.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Als de <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>waarde van de eigenschap is ingesteld op <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, een eigenschap met een <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A>parameter met een `Personalizable` kenmerk is niet geëxporteerd wanneer een gebruiker een beschrijvingsbestand exporteert.</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Hierdoor kunnen ontwikkelaars besturingselement om te voorkomen dat gevoelige gegevens, zoals verbindingsreeksen in bepaalde situaties worden geëxporteerd.       Een gebruiker kan een besturingselement dat is ingeschakeld voor het exporteren van door te klikken op de export-term die wordt weergegeven in het opdrachtmenu van het besturingselement en de instructies om op te slaan exporteren een. Webonderdeel beschrijvingsbestand voor het besturingselement. Andere gebruikers kunnen vervolgens importeren van dit bestand voor het configureren van hun eigen exemplaren van het besturingselement.       De klasse ImportCatalogPart bevat verschillende eigenschappen. De <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>eigenschap bevat tekst met instructies voor gebruikers wanneer ze zoeken naar het beschrijvingsbestand.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> De <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>eigenschap bevat de tekst die als een label voor de geïmporteerde besturingselement fungeert zoals deze wordt weergegeven in het besturingselement ImportCatalogPart.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> De <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>bevat tekst die wordt weergegeven als een fout optreedt wanneer er een beschrijving van het besturingselement worden geïmporteerd.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> De <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>eigenschap overschrijft de base eigenschap voor het toewijzen van een standaardtitel voor een besturingselement ImportCatalogPart als een titel niet wordt toegewezen door de ontwikkelaar.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> De <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>eigenschap bevat de tekst voor de knop waarmee de gebruiker om de beschrijvingsbestand te uploaden en de <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>eigenschap bevat de instructies voor het uploadproces.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>       De klasse ImportCatalogPart bevat ook unieke op verschillende manieren. De <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>methode haalt een <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>object voor elk <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement in de catalogus, waardoor een besturingselement ImportCatalogPart om weer te geven informatie over elk serverbesturingselement zonder te hoeven maken van een exemplaar van de alinea.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> De <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>methode haalt u een exemplaar van een bepaalde <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement, op basis van de beschrijving die wordt doorgegeven aan de methode.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>       Er zijn enkele intrinsieke risico&quot;s met behulp van het besturingselement ImportCatalogPart. Een voorbeeld hiervan is de kans bestaat dat schadelijke gegevens importeren in uw webtoepassing in de beschrijvingsbestanden gebruikt voor het importeren. Als iemand anders schadelijke scriptcode als de waarde van de tekenreekseigenschap van een in het beschrijvingsbestand geplaatst heeft, kan klikt u vervolgens script mogelijk worden uitgevoerd wanneer een gebruiker het beschrijvingsbestand wordt geïmporteerd en voegt het serverbesturingselement waarnaar wordt verwezen naar een webpagina. Om te voorkomen dat beschrijvingsbestanden met schadelijke gegevens te importeren, moeten serverbesturingselementen tekenreeks getypeerde-eigenschappen zijn de eigenschapsgegevens altijd coderen. Een ander risico omvat het importeren van typen via beschrijvingsbestanden (Zie [webonderdelen besturingsbestanden beschrijving](../Topic/Web%20Parts%20Control%20Description%20Files.md)). Een kwaadwillende gebruiker kan aanvragen indienen om te laden van veel assembly&quot;s in de <xref:System.AppDomain>, wat resulteert in een uitzonderlijk groot aantal geheugen wordt gebruikt.</xref:System.AppDomain>       Om te voorkomen de risico&quot;s met importeren, kunt u de functie helemaal uitschakelen door de functie importeren of het besturingselement ImportCatalogPart niet gebruikt. Of u kunt beperken welke gebruikers toegang hebben tot het besturingselement. U kan doen dit programmatisch met rollen beheren (Zie [autorisatie beheren met behulp van functies](~/add/includes/ajax-current-ext-md.md)). Wanneer de pagina wordt geladen, kunt u kan bijvoorbeeld voor testen om te zien of een gebruiker zich in een bepaalde rol, zoals de beheerdersrol. Als de gebruiker zich in de rol, kunt u het besturingselement ImportCatalogPart kunnen programmatisch naar de pagina voor die gebruiker toevoegen. U kunt ook een benadering van declaratieve te beperken van de set met gebruikers die het besturingselement ImportCatalogPart kunt gebruiken.  Binnen uw webpagina&quot;s met een catalogus, kan u plaats twee <xref:System.Web.UI.WebControls.WebParts.CatalogZone>besturingselementen: één voor gebruikers die u kunnen importeren en één voor gebruikers die niet kan.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> De zone voor gebruikers die u kunt importeren, zou het besturingselement ImportCatalogPart bevatten. De zone zelf kan worden geplaatst in een <xref:System.Web.UI.WebControls.LoginView>besturingselement, waarmee u gebruik van het besturingselement in de zone te beperken, alleen de geverifieerde gebruikers of rollen die u opgeeft.</xref:System.Web.UI.WebControls.LoginView>"
  example:
  - "The following code example demonstrates how to use the ImportCatalogPart control declaratively and programmatically on a Web page. The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control and an ImportCatalogPart control.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   An explanation of how the example works when you load the page in a browser.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. You should place the following source code in a file and name it Displaymodemenucs.ascx or Displaymodemenuvb.ascx (depending on which language you are using). For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_227_1.ascx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_227_1.ascx)]  \n  \n The second part of the code example is the Web page. At the top of the page are two `register` directives, one for the user control and one for the compiled component that contains the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that the page has a declarative reference to the ImportCatalogPart control, nested within the proper hierarchy of declarative elements. Notice also that several property values are assigned declaratively on the `<asp:importcatalogpart>` element. Also, the `Button1_Click` method updates a number of property values on the ImportCatalogPart control.  \n  \n In the page's <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls are declared. The `<aspSample:userinfowebpart>` control has an `exportmode=\"all\"` attribute on it. This attribute is required to enable users to export a description file for the control, which can then be imported by other users who wish to import the control using the description file.  \n  \n> [!NOTE]\n>  To enable users of a Web Parts application to export a description file for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, you must also enable the export feature in the Web application by adding an `enableExport=\"true\"` attribute to the `<webParts>` element (which is a child of the `<system.web>` element) in the Web.config file. Export is disabled by default, so if you have not yet enabled export for your application, edit the Web.config file and do it now.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_227_2.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_227_2.aspx)]  \n  \n The third part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that some properties on these controls are marked with the `WebBrowsable` attribute. This enables the <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> control to dynamically generate the user interface (UI) for a user to edit those properties when the controls are in edit mode. The properties are also marked with a `WebDisplayName` attribute, to specify the text of the label that appears next to each control in the editing UI. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n The custom control called `TextDisplayWebPart` is referenced on the Web page with an `<aspSample:TextDisplayWebPart>` element. The other control, called `UserInfoWebPart`, is also declared on the Web page initially, though you will remove it later to demonstrate the ability to import a description file for a control.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_227_3.cs)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_227_3.vb)]  \n  \n Now run the code example. Load the Web page in a browser. The first step is to edit the `UserInfoWebPart` control. Use the **Display Mode** drop-down list control and select **Edit** to switch the page to edit mode. Click the verbs menu of the `UserInfoWebPart` control (the downward arrow in the title bar), and then click **Edit**. When the editing UI appears, several editing controls appear below the `UserInfoWebPart` control that you can use to edit its field values. Edit some fields, click **OK**, and then use the **Display Mode** drop-down to return the page to browse mode.  \n  \n The second step is to export a .WebPart description file for the `UserInfoWebPart` control. Click the verbs menu on the custom control (represented by the downward arrow in the title bar), and click **Export**. Follow the instructions to save a .WebPart description file for the control. Now close the Web page, and edit the page source in an editor. Delete the `<aspSample:userinfowebpart>` control declaration element, then save and close the file. (You are doing this step to simulate a user who does not yet have the `UserInfoWebPart` control, so you can import the control to the page).  \n  \n Load the Web page again in a browser. The `UserInfoWebPart` control should not appear, because you removed it. Use the **Display Mode** drop-down list control and select **Catalog** to switch the page to catalog mode. In the ImportCatalogPart control, click the **Browse** button, and browse to the .WebPart file you created, then click the **Upload** button. A reference to the control should appear with a check box next to it. Select the check box, then click **Add** to add the control to the page.  \n  \n While you are in this view of the page, click the **Update ImportCatalogPart** button near the bottom of the page to see the effect of programmatically updating a number of property values on the ImportCatalogPart control. After clicking the button, observe how the various properties are changed in the UI.  \n  \n Finally, click **Close** to exit catalog mode and return the page to browse mode. The `UserInfoWebPart` control should now appear in the page, containing the values that it had when you exported it earlier."
  syntax:
    content: 'public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart'
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Panel
  - System.Web.UI.WebControls.WebParts.Part
  - System.Web.UI.WebControls.WebParts.CatalogPart
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.Panel.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.BackImageUrl
  - System.Web.UI.WebControls.Panel.CreateControlStyle
  - System.Web.UI.WebControls.Panel.Direction
  - System.Web.UI.WebControls.Panel.GroupingText
  - System.Web.UI.WebControls.Panel.HorizontalAlign
  - System.Web.UI.WebControls.Panel.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.ScrollBars
  - System.Web.UI.WebControls.Panel.SupportsDisabledAttribute
  - System.Web.UI.WebControls.Panel.Wrap
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  - System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle
  - System.Web.UI.WebControls.WebParts.CatalogPart.GetDesignModeState
  - System.Web.UI.WebControls.WebParts.CatalogPart.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.CatalogPart.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.WebControls.WebParts.CatalogPart.WebPartManager
  - System.Web.UI.WebControls.WebParts.CatalogPart.Zone
  - System.Web.UI.WebControls.WebParts.Part.ChromeState
  - System.Web.UI.WebControls.WebParts.Part.ChromeType
  - System.Web.UI.WebControls.WebParts.Part.Controls
  - System.Web.UI.WebControls.WebParts.Part.DataBind
  - System.Web.UI.WebControls.WebParts.Part.Description
  - System.Web.UI.WebControls.WebParts.Part.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: ImportCatalogPart()
  nameWithType: ImportCatalogPart.ImportCatalogPart()
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportCatalogPart()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.WebParts.ImportCatalogPart&quot;> </xref> klasse."
  remarks: "De constructor ImportCatalogPart is een standaard; Er is geen constructor is gedeclareerd in de <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>klasse en daarom geen speciale taken worden uitgevoerd wanneer een nieuw exemplaar van de klasse wordt gemaakt.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> .NET Framework wordt de constructor intern gebruikt om een exemplaar van de klasse te maken.       U moet normaal gesproken niet aan de constructor ImportCatalogPart programmatisch gebruiken in uw eigen code. Het beoogde gebruik van het besturingselement is voor ontwikkelaars pagina toe te voegen aan een pagina verklarend tijdens de ontwerpfase."
  syntax:
    content: public ImportCatalogPart ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText
  id: BrowseHelpText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: BrowseHelpText
  nameWithType: ImportCatalogPart.BrowseHelpText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van een SMS-bericht, zodat gebruikers om te bladeren naar de locatie van een beschrijvingsbestand."
  remarks: 'De eigenschap BrowseHelpText biedt gebruikers een eenvoudig overzicht van het eerste wat ze moeten doen momenteel een geïmporteerde besturingselement toe te voegen: Geef de locatie van een beschrijvingsbestand typen in een pad of bladeren naar het bestand. Een typische reden op te geven van een aangepaste waarde voor deze eigenschap is als u speciale instructies voor gebruikers, zoals een specifieke netwerkshare waarop deze bladeren moeten om een beschrijvingsbestand te zoeken.'
  example:
  - "The following code example demonstrates how to use the BrowseHelpText property declaratively and programmatically. For the full code and instructions required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> class overview.  \n  \n In the following section of code, notice that the BrowseHelpText property value is set declaratively for the control.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_847_1.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_847_1.aspx)]  \n  \n In this section of code, the BrowseHelpText property value is assigned programmatically.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_847_2.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_847_2.aspx)]  \n  \n When you load the page in a browser, you can use the **Display Mode** drop-down list control to select **Catalog Mode** and switch the page to catalog mode. With the page in catalog mode and the description file uploaded, note the various text strings displayed in the user interface (UI) for the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. If you click the **Upload Description File** button, the text for several of the properties in the UI is changed, including the text for the BrowseHelpText property."
  syntax:
    content: public string BrowseHelpText { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks die de tekst van het bericht bevat. De standaardwaarde is een specifieke cultuur-bericht dat is opgegeven door het .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: ImportCatalogPart.CreateChildControls()
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton
  id: DefaultButton
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: DefaultButton
  nameWithType: ImportCatalogPart.DefaultButton
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld welke knop in de gebruikersinterface (UI) wordt beschouwd als de standaardknop die de focus krijgt als formulier met de knop wordt weergegeven. Deze eigenschap is niet bedoeld om te worden aangeroepen vanuit de code van de ontwikkelaar van de pagina."
  remarks: "De code voor deze eigenschap heeft voorrang op de grondtal eigenschap is overgenomen van de <xref:System.Web.UI.WebControls.Panel>klasse verbergen van de eigenschap van ontwerpers en voorkomen dat wordt beïnvloed door thema&quot;s.</xref:System.Web.UI.WebControls.Panel> Hoewel openbaar is, wordt deze eigenschap wordt intern gebruikt door het besturingselement webonderdelen is ingesteld voor de standaardweergave van dit besturingselement en is niet bedoeld voor gebruik door ontwikkelaars pagina.       Deze eigenschap kan niet worden ingesteld door thema&quot;s of stijl blad thema&quot;s. Zie voor meer informatie <xref:System.Web.UI.ThemeableAttribute>en [ASP.NET thema&quot;s en weergaven](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public override string DefaultButton { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks met de ID van de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> die de focus wordt standaard in een <xref href=&quot;System.Web.UI.WebControls.Panel&quot;> </xref> besturingselement."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions
  id: GetAvailableWebPartDescriptions
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: GetAvailableWebPartDescriptions()
  nameWithType: ImportCatalogPart.GetAvailableWebPartDescriptions()
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retourneert een verzameling van beschrijvingen van de beschikbare <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselementen in een catalogus."
  remarks: "De methode GetAvailableWebPartDescriptions biedt een implementatie voor de abstracte base methode die is gedeclareerd in de <xref:System.Web.UI.WebControls.WebParts.CatalogPart>klasse.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> De methode GetAvailableWebPartDescriptions retourneert beschrijving informatie voor elk besturingselement in een catalogus. Houd er rekening mee dat in het geval van een <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>beheren, mag er slechts één serverbesturingselement in de catalogus op een tijdstip, zelfs als de methode zou worden gebruikt als er meerdere besturingselementen.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>       Een <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>object is een object dat essentiële informatie over een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement, met inbegrip van de ID, een objectverwijzing naar het besturingselement en de waarden van verschillende belangrijke eigenschappen die zijn overgenomen van de <xref:System.Web.UI.WebControls.WebParts.Part>klasse, zoals <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>en <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>.</xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> bevat</xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> </xref:System.Web.UI.WebControls.WebParts.Part> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription>       De methode GetAvailableWebPartDescriptions verbetert de prestaties. Wanneer een catalogus is gemaakt, moet deze informatie over elk besturingselement bevat, met inbegrip van een titel, een beschrijving, een pictogram (indien aanwezig) en een ID. In plaats van het maken van een exemplaar van elk besturingselement voor deze informatie een <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>zone die u een catalogus maakt roept de methode GetAvailableWebPartDescriptions en de aanroep retourneert alleen de beschrijving informatie voor het besturingselement in plaats van een exemplaar van het besturingselement.</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>"
  example:
  - "The following code example demonstrates how to use the GetAvailableWebPartDescriptions method on a Web page. The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control and an <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, along with code that uses the GetAvailableWebPartDescriptions method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   An explanation of how the example works when you load the page in a browser.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. You should place the following source code in a file and name it Displaymodemenucs.ascx or Displaymodemenuvb.ascx (depending on which language you are using). For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ImportCatalogPart_Get#7](~/add/codesnippet/csharp/cf979e6e-7b4d-460f-b044-_1.ascx)]\n [!code-vb[WebParts_ImportCatalogPart_Get#7](~/add/codesnippet/visualbasic/cf979e6e-7b4d-460f-b044-_1.ascx)]  \n  \n The second part of the code example is the Web page. At the top of the page are two `register` directives, one for the user control and one for the compiled component that contains the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Both of these controls are referenced declaratively in the markup of the page. On the declarative references to the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (both begin with an `aspSample` prefix), note that each has an `exportMode=\"all\"` attribute added to it. This attribute enables you to export a .WebPart description file for the control, which you will use in a later to step to import the control to a page.  \n  \n> [!NOTE]\n>  To enable users of a Web Parts application to export a description file for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, you must also enable the export feature in the Web application by adding an `enableExport=\"true\"` attribute to the `<webParts>` element (which is a child of the `<system.web>` element) in the Web.config file. Export is disabled by default, so if you have not yet enabled export for your application, edit the Web.config file and do it now.  \n  \n The Web page also has a declarative reference to the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, nested within the proper hierarchy of declarative elements. The GetAvailableWebPartDescriptions method is called within the code for the `Button1_Click` method.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Get#1](~/add/codesnippet/csharp/cf979e6e-7b4d-460f-b044-_2.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Get#1](~/add/codesnippet/visualbasic/cf979e6e-7b4d-460f-b044-_2.aspx)]  \n  \n The third part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ImportCatalogPart_Get#6](~/add/codesnippet/csharp/cf979e6e-7b4d-460f-b044-_3.cs)]\n [!code-vb[WebParts_ImportCatalogPart_Get#6](~/add/codesnippet/visualbasic/cf979e6e-7b4d-460f-b044-_3.vb)]  \n  \n Now run the code example. Load the Web page in a browser. The first step is export a .WebPart description file for each <xref:System.Web.UI.WebControls.WebParts.WebPart> control (for the `TextDisplayWebPart` and for the `UserInfoWebPart` control). For each control, click the verbs menu on the control (represented by the downward arrow in the title bar), and click **Export**. Follow the instructions to save a .WebPart description file for the control. After you have exported a description file for each control, close the Web page, and edit the page source in an editor. Delete the `<aspSample:userinfowebpart>` and the `<aspSample:textdisplaywebpart>` control declaration elements, then save and close the file. (You are doing this step to simulate a user who does not yet have these controls, so you can import the controls to the page).  \n  \n Load the Web page again in a browser. Use the **Display Mode** drop-down list control and select **Catalog** to switch the page to catalog mode. In the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, click the **Browse** button, browse to the .WebPart files you created, select one, then click the **Upload** button. A reference to the control should appear with a check box next to it. Select the check box, then click **Add** to add the control to the page. Repeat this process for the other control.  \n  \n While you are in this view of the page, click the **Get WebPart Description** button near the bottom of the page to see the effect of programmatically accessing the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> object for the control description currently loaded in the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. The method used to access the description details, found in the `Button1_Click` method of the page source, is the GetAvailableWebPartDescriptions method. A label below the button displays basic details about the control.  \n  \n After adding the first control, repeat the process to add the second control to the page. Finally, click **Close** to exit catalog mode and return the page to browse mode. Both custom controls should now appear in the page, containing the values they had when you exported description files earlier."
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection&quot;> </xref> die bevat een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;> </xref> voor elk besturingselement in een catalogus."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)
  id: GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: GetWebPart(WebPartDescription)
  nameWithType: ImportCatalogPart.GetWebPart(WebPartDescription)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(WebPartDescription)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retourneert een verwijzing naar een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> beheer op basis van de waarden in de beschrijving die wordt doorgegeven aan de methode."
  remarks: "De methode GetWebPart retourneert een verwijzing naar een <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselement waarvan details beschrijving overeenkomen met de waarden van de <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>-object doorgegeven aan de methode.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart> Deze methode wordt meestal gebruikt samen met de <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>methode die wordt gebruikt voor het ophalen van de beschrijvingen van besturingselementen in de catalogus.</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> Afzonderlijke <xref:System.Web.UI.WebControls.WebParts.WebPart>besturingselementen kunnen vervolgens worden opgehaald of gemanipuleerd als nodig is voor het doorgeven van afzonderlijke <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>objecten aan de methode GetWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the GetWebPart method on a Web page. The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control and an <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, along with code that uses the GetWebPart method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   An explanation of how the example works when you load the page in a browser.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. You should place the following source code in a file and name it Displaymodemenucs.ascx or Displaymodemenuvb.ascx (depending on which language you are using). For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ImportCatalogPart_Get#7](~/add/codesnippet/csharp/27bca851-c00e-4ece-b88f-_1.ascx)]\n [!code-vb[WebParts_ImportCatalogPart_Get#7](~/add/codesnippet/visualbasic/27bca851-c00e-4ece-b88f-_1.ascx)]  \n  \n The second part of the code example is the Web page. At the top of the page are two `register` directives, one for the user control and one for the compiled component that contains the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Both of these controls are referenced declaratively in the markup of the page. On the declarative references to the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (both begin with an `aspSample` prefix), note that each has an `exportMode=\"all\"` attribute added to it. This attribute enables you to export a .WebPart description file for the control, which you will use in a later to step to import the control to a page.  \n  \n> [!NOTE]\n>  To enable users of a Web Parts application to export a description file for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, you must also enable the export feature in the Web application by adding an `enableExport=\"true\"` attribute to the `<webParts>` element (which is a child of the `<system.web>` element) in the Web.config file. Export is disabled by default, so if you have not yet enabled export for your application, edit the Web.config file and do it now.  \n  \n The Web page also has a declarative reference to the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, nested within the proper hierarchy of declarative elements. The GetWebPart method is called within the code for the `Button2_Click` method.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Get#1](~/add/codesnippet/csharp/27bca851-c00e-4ece-b88f-_2.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Get#1](~/add/codesnippet/visualbasic/27bca851-c00e-4ece-b88f-_2.aspx)]  \n  \n The third part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ImportCatalogPart_Get#6](~/add/codesnippet/csharp/27bca851-c00e-4ece-b88f-_3.cs)]\n [!code-vb[WebParts_ImportCatalogPart_Get#6](~/add/codesnippet/visualbasic/27bca851-c00e-4ece-b88f-_3.vb)]  \n  \n Now run the code example. Load the Web page in a browser. The first step is export a .WebPart description file for each <xref:System.Web.UI.WebControls.WebParts.WebPart> control (for the `TextDisplayWebPart` and for the `UserInfoWebPart` control). For each control, click the verbs menu on the control (represented by the downward arrow in the title bar), and click **Export**. Follow the instructions to save a .WebPart description file for the control. After you have exported a description file for each control, close the Web page, and edit the page source in an editor. Delete the `<aspSample:userinfowebpart>` and the `<aspSample:textdisplaywebpart>` control declaration elements, then save and close the file. (You are doing this step to simulate a user who does not yet have these controls, so you can import the controls to the page).  \n  \n Load the Web page again in a browser. Use the **Display Mode** drop-down list control and select **Catalog** to switch the page to catalog mode. In the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, click the **Browse** button, browse to the .WebPart files you created, select one, then click the **Upload** button. A reference to the control should appear with a check box next to it. Now that the control description is uploaded to the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, click the **Use GetWebPart** button near the bottom of the page. This will demonstrate the effect of calling the GetWebPart method and passing to it the control description currently loaded in the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Note that the associated server control is added immediately to the Web page, without the user having to click the **Add** button. The GetWebPart method, which is called in the `Button2_Click` method of the page source, returns the <xref:System.Web.UI.WebControls.WebParts.WebPart> control associated with the current description that is loaded in the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Next the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> method is called, and the <xref:System.Web.UI.WebControls.WebParts.WebPart> control is directly added to the page. This demonstrates how to add a control programmatically from the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control without user intervention.  \n  \n After adding the first control, repeat the process to add the second control to the page. Finally, click **Close** to exit catalog mode and return the page to browse mode. Both custom controls should now appear in the page, containing the values they had when you exported description files earlier."
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);
    parameters:
    - id: description
      type: System.Web.UI.WebControls.WebParts.WebPartDescription
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;> </xref> die meer informatie over het besturingselement bevat."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Een <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> besturingselement waarvan u de beschrijving overeenkomt met de waarden in <code> description </code>."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>description</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>description</code>is niet een beschikbaar <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;> </xref> waarde."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText
  id: ImportedPartLabelText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: ImportedPartLabelText
  nameWithType: ImportCatalogPart.ImportedPartLabelText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van de tekst die wordt weergegeven nadat een gebruiker een te geven of de geïmporteerde besturingselement in de catalogus met geïmporteerde besturingselementen beschrijven beschrijvingsbestand importeert."
  remarks: "De eigenschap ImportedPartLabelText wordt meestal gebruikt voor het bevatten van een korte, algemene label die worden beschreven van het besturingselement dat is opgenomen in de <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>besturingselement.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>"
  example:
  - "The following code example demonstrates how to use the ImportedPartLabelText property declaratively and programmatically. For the full code and instructions required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> class overview.  \n  \n In the following section of code, notice that the ImportedPartLabelText property value is set declaratively for the control.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_718_1.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_718_1.aspx)]  \n  \n In this section of code, the ImportedPartLabelText property value is assigned programmatically.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_718_2.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_718_2.aspx)]  \n  \n When you load the page in a browser, you can use the **Display Mode** drop-down list control to select **Catalog Mode** and switch the page to catalog mode. With the page in catalog mode and the description file uploaded, note the various text strings displayed in the user interface (UI) for the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. If you click the **Upload Description File** button, the text for several of the properties in the UI is changed, including the text for the ImportedPartLabelText property."
  syntax:
    content: public string ImportedPartLabelText { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks met de tekst van het label. De standaardwaarde is een specifieke cultuur-bericht dat is opgegeven door het .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: ImportCatalogPart.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Moet worden toegevoegd."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ImportCatalogPart.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Moet worden toegevoegd."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText
  id: PartImportErrorLabelText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: PartImportErrorLabelText
  nameWithType: ImportCatalogPart.PartImportErrorLabelText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van een foutbericht dat wordt weergegeven als een fout tijdens het importeren optreedt."
  remarks: "De eigenschap PartImportErrorLabelText is nuttig voor het verwittigen van een gebruiker als een probleem of fout treedt op wanneer de pagina probeert een beschrijvingsbestand importeren."
  example:
  - "The following code example demonstrates how to use the PartImportErrorLabelText property declaratively and programmatically. For the full code and instructions required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> class overview.  \n  \n In the following section of code, notice that the PartImportErrorLabelText property value is set declaratively for the control.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1241_1.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1241_1.aspx)]  \n  \n In this section of code, the PartImportErrorLabelText property value is assigned programmatically.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1241_2.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1241_2.aspx)]  \n  \n When you load the page in a browser, you can use the **Display Mode** drop-down list control to select **Catalog Mode** and switch the page to catalog mode. With the page in catalog mode and the description file uploaded, note the various text strings displayed in the user interface (UI) for the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. If you click the **Upload Description File** button, the text for several of the properties in the UI is changed, including the text for the PartImportErrorLabelText property."
  syntax:
    content: public string PartImportErrorLabelText { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks met de tekst van het label. De standaardwaarde is een specifieke cultuur-bericht dat is opgegeven door het .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: ImportCatalogPart.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Moet worden toegevoegd."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: ImportCatalogPart.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Moet worden toegevoegd."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: ImportCatalogPart.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "Moet worden toegevoegd."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: Title
  nameWithType: ImportCatalogPart.Title
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van de titel die wordt weergegeven in de titelbalk van een <xref href=&quot;System.Web.UI.WebControls.WebParts.ImportCatalogPart&quot;> </xref> besturingselement."
  remarks: "De waarde van de eigenschap titel wordt weergegeven in de titelbalk van een <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>bepalen wanneer het besturingselement zichtbaar is in de modus van de catalogus is.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Wanneer het besturingselement is gedefinieerd in een pagina, kunt u een waarde voor de eigenschap instellen met behulp van de `Title` kenmerk. Als u een waarde voor de titel niet opgeeft, wordt een standaardwaarde cultuur-specifieke gebruikt om te beschrijven van het soort eigenschappen die dit besturingselement kunnen gebruikers om te bewerken."
  example:
  - "The following code example demonstrates how to use the Title property declaratively and programmatically. For the full code and instructions required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> class overview.  \n  \n In the following section of code, notice that the Title property value is set declaratively for the control.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_135_1.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_135_1.aspx)]  \n  \n In this section of code, the Title property value is assigned programmatically.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_135_2.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_135_2.aspx)]  \n  \n When you load the page in a browser, you can use the **Display Mode** drop-down list control to select **Catalog Mode** and switch the page to catalog mode. With the page in catalog mode and the description file uploaded, note the various text strings displayed in the user interface (UI) for the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. If you click the **Upload Description File** button, the text for several of the properties in the UI is changed, including the text for the Title property."
  syntax:
    content: public override string Title { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks die wordt gebruikt als de titel van het besturingselement. De standaardwaarde is de naam van een berekende besturingselement geleverd door de verzameling webonderdelen-besturingselement."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText
  id: UploadButtonText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: UploadButtonText
  nameWithType: ImportCatalogPart.UploadButtonText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van de tekst voor de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement dat het uploaden van een beschrijvingsbestand initieert."
  remarks: "De eigenschap UploadButtonText bevat de tekst voor de <xref:System.Web.UI.WebControls.Button>besturingselement dat het uploadproces initieert.</xref:System.Web.UI.WebControls.Button> Als u aangepaste tekst toewijzen aan deze eigenschap of aan de <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>eigenschap, de tekst moet maken duidelijk dat de gebruiker is worden gebruikt voor het uploaden van een beschrijvingsbestand.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> De tekst moet niet zeggen of impliceren dat het uploadproces daadwerkelijk van het besturingselement zelf uploaden is."
  example:
  - "The following code example demonstrates how to use the UploadButtonText property declaratively and programmatically. For the full code and instructions required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> class overview.  \n  \n In the following section of code, notice that the UploadButtonText property value is set declaratively for the control.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_939_1.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_939_1.aspx)]  \n  \n In this section of code, the UploadButtonText property value is assigned programmatically.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_939_2.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_939_2.aspx)]  \n  \n When you load the page in a browser, you can use the **Display Mode** drop-down list control to select **Catalog Mode** and switch the page to catalog mode. With the page in catalog mode and the description file uploaded, note the various text strings displayed in the user interface (UI) for the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. If you click the **Upload Description File** button, the text for several of the properties in the UI is changed, including the text for the UploadButtonText property."
  syntax:
    content: public string UploadButtonText { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks die wordt gebruikt als de tekst voor een <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref>. De standaardwaarde is een specifieke cultuur-tekenreeks opgegeven door de webonderdelen besturingselement set."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText
  id: UploadHelpText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  langs:
  - csharp
  name: UploadHelpText
  nameWithType: ImportCatalogPart.UploadHelpText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opgehaald of ingesteld van de tekst van het bericht dat de gebruiker kan zien hoe u een beschrijvingsbestand te uploaden."
  remarks: "De eigenschap UploadHelpText bevat een korte zin of woordgroep instructies voor gebruikers, waarin ze op een knop om de beschrijvingsbestand te uploaden. Als u aangepaste tekst toewijzen aan deze eigenschap of aan de <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>eigenschap, de tekst moet maken duidelijk dat de gebruiker is worden gebruikt voor het uploaden van een beschrijvingsbestand.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> De tekst moet niet zeggen of impliceren dat het uploadproces daadwerkelijk van het besturingselement zelf uploaden is."
  example:
  - "The following code example demonstrates how to use the UploadHelpText property declaratively and programmatically. For the full code and instructions required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> class overview.  \n  \n In the following section of code, notice that the UploadHelpText property value is set declaratively for the control.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1_1.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1_1.aspx)]  \n  \n In this section of code, the UploadHelpText property value is assigned programmatically.  \n  \n [!code-cs[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1_2.aspx)]\n [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1_2.aspx)]  \n  \n When you load the page in a browser, you can use the **Display Mode** drop-down list control to select **Catalog Mode** and switch the page to catalog mode. With the page in catalog mode and the description file uploaded, note the various text strings displayed in the user interface (UI) for the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. If you click the **Upload Description File** button, the text for several of the properties in the UI is changed, including the text for the UploadHelpText property."
  syntax:
    content: public string UploadHelpText { get; set; }
    return:
      type: System.String
      description: "Een tekenreeks die wordt gebruikt als de instructies voor de gebruiker een beschrijvingsbestand te uploaden. De standaardwaarde is een specifieke cultuur-tekenreeks opgegeven door de webonderdelen besturingselement set."
  overload: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.CatalogPart
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.CatalogPart
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: ImportCatalogPart()
  nameWithType: ImportCatalogPart.ImportCatalogPart()
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportCatalogPart()
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: BrowseHelpText
  nameWithType: ImportCatalogPart.BrowseHelpText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: CreateChildControls()
  nameWithType: ImportCatalogPart.CreateChildControls()
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls()
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: DefaultButton
  nameWithType: ImportCatalogPart.DefaultButton
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: GetAvailableWebPartDescriptions()
  nameWithType: ImportCatalogPart.GetAvailableWebPartDescriptions()
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions()
- uid: System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDescriptionCollection
  nameWithType: WebPartDescriptionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: GetWebPart(WebPartDescription)
  nameWithType: ImportCatalogPart.GetWebPart(WebPartDescription)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(WebPartDescription)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDescription
  nameWithType: WebPartDescription
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: ImportedPartLabelText
  nameWithType: ImportCatalogPart.ImportedPartLabelText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: ImportCatalogPart.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ImportCatalogPart.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: PartImportErrorLabelText
  nameWithType: ImportCatalogPart.PartImportErrorLabelText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: ImportCatalogPart.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: ImportCatalogPart.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: SaveControlState()
  nameWithType: ImportCatalogPart.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: Title
  nameWithType: ImportCatalogPart.Title
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: UploadButtonText
  nameWithType: ImportCatalogPart.UploadButtonText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: UploadHelpText
  nameWithType: ImportCatalogPart.UploadHelpText
  fullName: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: ImportCatalogPart
  nameWithType: ImportCatalogPart.ImportCatalogPart
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: BrowseHelpText
  nameWithType: ImportCatalogPart.BrowseHelpText
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: CreateChildControls
  nameWithType: ImportCatalogPart.CreateChildControls
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: DefaultButton
  nameWithType: ImportCatalogPart.DefaultButton
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: GetAvailableWebPartDescriptions
  nameWithType: ImportCatalogPart.GetAvailableWebPartDescriptions
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: GetWebPart
  nameWithType: ImportCatalogPart.GetWebPart
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: ImportedPartLabelText
  nameWithType: ImportCatalogPart.ImportedPartLabelText
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: LoadControlState
  nameWithType: ImportCatalogPart.LoadControlState
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: OnInit
  nameWithType: ImportCatalogPart.OnInit
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: PartImportErrorLabelText
  nameWithType: ImportCatalogPart.PartImportErrorLabelText
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: Render
  nameWithType: ImportCatalogPart.Render
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: RenderContents
  nameWithType: ImportCatalogPart.RenderContents
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: SaveControlState
  nameWithType: ImportCatalogPart.SaveControlState
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: Title
  nameWithType: ImportCatalogPart.Title
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: UploadButtonText
  nameWithType: ImportCatalogPart.UploadButtonText
- uid: System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText*
  parent: System.Web.UI.WebControls.WebParts.ImportCatalogPart
  isExternal: false
  name: UploadHelpText
  nameWithType: ImportCatalogPart.UploadHelpText
