### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionScope
  id: TransactionScope
  children:
  - System.Transactions.TransactionScope.#ctor
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.Complete
  - System.Transactions.TransactionScope.Dispose
  langs:
  - csharp
  name: TransactionScope
  nameWithType: TransactionScope
  fullName: System.Transactions.TransactionScope
  type: Class
  summary: "Maakt een codeblok transactionele. Deze klasse kan niet worden overgenomen."
  remarks: "De <xref:System.Transactions>infrastructuur biedt zowel een expliciete programmeermodel op basis van de <xref:System.Transactions.Transaction>klasse, evenals een impliciete programmeermodel met behulp van de TransactionScope-klasse, waarin transacties automatisch worden beheerd door de infrastructuur.</xref:System.Transactions.Transaction> </xref:System.Transactions>      > [!IMPORTANT] > Het wordt aanbevolen impliciete transacties met behulp van de klasse TransactionScope te maken, zodat de context van de ambient transactie automatisch voor u wordt beheerd. Ook moet u de TransactionScope gebruiken en <xref:System.Transactions.DependentTransaction>klasse voor toepassingen waarvoor het gebruik van dezelfde transactie tussen meerdere functieaanroepen of meerdere thread aanroepen.</xref:System.Transactions.DependentTransaction> Zie voor meer informatie over dit model, de [uitvoering van een impliciete transactie met behulp van transactiebereik](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) onderwerp. Zie voor meer informatie over het schrijven van een transactionele toepassing [transactionele toepassing schrijven](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       Bij het instantiëren van een TransactionScope door de `new` -instructie, de transactiebeheerder bepaalt welke transactie deelnemen. Zodra bepaald, wordt het bereik altijd deel uitmaakt van die transactie. De beslissing is gebaseerd op twee factoren: Hiermee wordt aangegeven of een ambient transactie aanwezig is en de waarde van de `TransactionScopeOption` parameter in de constructor.  De ambient transactie is de transactie die in uw code wordt uitgevoerd. U kunt een verwijzing naar de ambient transactie verkrijgen door het aanroepen van de statische <xref:System.Transactions.Transaction.Current%2A>eigenschap van de <xref:System.Transactions.Transaction>klasse.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.Current%2A> Voor meer informatie over hoe deze parameter wordt gebruikt, Zie de sectie &quot;Transactie stromen Management&quot; van de [uitvoering van een impliciete transactie met behulp van transactiebereik](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) onderwerp.       Als er geen uitzondering optreedt binnen het transactiebereik (dat wil zeggen, tussen de initialisatie van de TransactionScope object en de aanroep van de <xref:System.Transactions.TransactionScope.Dispose%2A>methode), en vervolgens de transactie waarin het bereik deelneemt is toegestaan om door te gaan.</xref:System.Transactions.TransactionScope.Dispose%2A> Als een uitzondering binnen het transactiebereik wordt uitgevoerd, wordt de deelneemt transactie teruggedraaid.       Wanneer uw toepassing al het werk is voltooid wil in een transactie uitvoeren, moet u aanroepen de <xref:System.Transactions.TransactionScope.Complete%2A>methode om te informeren dat transactiebeheerder aanvaardbaar is voor het doorvoeren van de transactie is slechts één keer.</xref:System.Transactions.TransactionScope.Complete%2A> Deze methode niet aanroepen niet afbreken van de transactie.       Een aanroep van de <xref:System.Transactions.TransactionScope.Dispose%2A>methode markeert het einde van het transactiebereik.</xref:System.Transactions.TransactionScope.Dispose%2A> Uitzonderingen die optreden na het aanroepen van deze methode kunnen niet van invloed op de transactie.       Als u de waarde van wijzigt <xref:System.Transactions.Transaction.Current%2A>binnen een bereik, een uitzondering gegenereerd wanneer <xref:System.Transactions.TransactionScope.Dispose%2A>wordt aangeroepen.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.Transactions.Transaction.Current%2A> Echter, aan het einde van het bereik, moet de vorige waarde wordt teruggezet. Als u bovendien <xref:System.Transactions.TransactionScope.Dispose%2A>op <xref:System.Transactions.Transaction.Current%2A>binnen een transactiebereik dat de transactie is gemaakt, wordt de transactie afgebroken aan het einde van het bereik.</xref:System.Transactions.Transaction.Current%2A> </xref:System.Transactions.TransactionScope.Dispose%2A>"
  example:
  - "The following example demonstrates how to use the TransactionScope class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/t-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/t-system.transactions.tr_0_1.cs)]"
  syntax:
    content: 'public sealed class TransactionScope : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor
  id: '#ctor'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse."
  remarks: "Deze constructor maakt een nieuwe transactie-scope met de transactie scope-optie gelijk zijn aan <xref:System.Transactions.TransactionScopeOption>.</xref:System.Transactions.TransactionScopeOption> Dit betekent dat een transactie is vereist voor de nieuwe scope en de ambient transactie wordt gebruikt als er al een bestaat. Anders maakt het een nieuwe transactie voordat het in het bereik."
  syntax:
    content: public TransactionScope ();
    parameters: []
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  id: '#ctor(System.Transactions.Transaction)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse en de opgegeven transactie als de ambient transactie wordt zo ingesteld dat deze transactie maakt gebruik van transactionele werk dat binnen het bereik."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "De transactie die moet worden ingesteld als de ambient transactie zodat transactionele werk dat binnen het bereik maakt gebruik van deze transactie."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Ondersteund in de .NET Framework 4.5.1 en latere versies]       Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de optie opgegeven asynchrone stroom."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> -opsomming die wordt beschreven of de ambient transactie die is gekoppeld aan het transactiebereik worden overgebracht via thread voortzettingen bij gebruik van de taak of async/await .NET asynchrone programmering patronen."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  id: '#ctor(System.Transactions.TransactionScopeOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de opgegeven vereisten."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> -opsomming die de vereisten van de transactie die is gekoppeld aan dit transactiebereik beschrijft."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de opgegeven time-outwaarde en de opgegeven transactie als de ambient transactie wordt zo ingesteld dat deze transactie maakt gebruik van transactionele werk dat binnen het bereik."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "De transactie die moet worden ingesteld als de ambient transactie zodat transactionele werk dat binnen het bereik maakt gebruik van deze transactie."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>waarna het transactiebereik time-out en de transactie afgebroken.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Ondersteund in de .NET Framework 4.5.1 en latere versies]       Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse en de opgegeven transactie als de ambient transactie wordt zo ingesteld dat deze transactie maakt gebruik van transactionele werk dat binnen het bereik."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "De transactie die moet worden ingesteld als de ambient transactie zodat transactionele werk dat binnen het bereik maakt gebruik van deze transactie."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> -opsomming die wordt beschreven of de ambient transactie die is gekoppeld aan het transactiebereik worden overgebracht via thread voortzettingen bij gebruik van de taak of async/await .NET asynchrone programmering patronen."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de opgegeven time-outwaarde en vereisten."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> -opsomming die de vereisten van de transactie die is gekoppeld aan dit transactiebereik beschrijft."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>waarna het transactiebereik time-out en de transactie afgebroken.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de opgegeven vereisten."
  remarks: "Wanneer u gebruikt de `transactionOptions` parameter om een <xref:System.Transactions.IsolationLevel>, en het bereik wordt gemaakt van een transactie later, de nieuwe transactie is gekoppeld aan het opgegeven isolatieniveau.</xref:System.Transactions.IsolationLevel> Als een isolatieniveau wordt doorgegeven combinatie met een transactie, moet de transactie een identieke isolatieniveau, of er een uitzondering gegenereerd."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> -opsomming die de vereisten van de transactie die is gekoppeld aan dit transactiebereik beschrijft."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "Een <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> -structuur die de transactieopties moet worden gebruikt beschrijft als een nieuwe transactie is gemaakt. Als een bestaande transactie wordt gebruikt, wordt de time-outwaarde in deze parameter is van toepassing op het transactiebereik. Als dat tijdstip is verstreken voordat de scope wordt verwijderd, wordt de transactie is afgebroken."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Ondersteund in de .NET Framework 4.5.1 en latere versies]       Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de opgegeven vereisten en de optie asynchrone stroom."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> -opsomming die de vereisten van de transactie die is gekoppeld aan dit transactiebereik beschrijft."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> -opsomming die wordt beschreven of de ambient transactie die is gekoppeld aan het transactiebereik worden overgebracht via thread voortzettingen bij gebruik van de taak of async/await .NET asynchrone programmering patronen."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de opgegeven time-outwaarde en COM + interoperabiliteitsvereisten, en de opgegeven transactie als de ambient transactie wordt zo ingesteld dat deze transactie maakt gebruik van transactionele werk dat binnen het bereik."
  remarks: '**Opmerking** maakt gebruik van deze methode <xref:System.Security.Permissions.SecurityAction>om te voorkomen dat deze wordt aangeroepen vanuit niet-vertrouwde code; alleen de onmiddellijke aanroeper is echter vereist dat de `FullTrust` machtigingenset.</xref:System.Security.Permissions.SecurityAction>'
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "De transactie die moet worden ingesteld als de ambient transactie zodat transactionele werk dat binnen het bereik maakt gebruik van deze transactie."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>waarna het transactiebereik time-out en de transactie afgebroken.</xref:System.TimeSpan>"
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> -opsomming die wordt beschreven hoe de gekoppelde transactie samenwerkt met COM +-transacties."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Ondersteund in de .NET Framework 4.5.1 en latere versies]       Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de opgegeven time-outwaarde en de opgegeven transactie als de ambient transactie wordt zo ingesteld dat deze transactie maakt gebruik van transactionele werk dat binnen het bereik."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "De transactie die moet worden ingesteld als de ambient transactie zodat transactionele werk dat binnen het bereik maakt gebruik van deze transactie."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>waarna het transactiebereik time-out en de transactie afgebroken.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> -opsomming die wordt beschreven of de ambient transactie die is gekoppeld aan het transactiebereik worden overgebracht via thread voortzettingen bij gebruik van de taak of async/await .NET asynchrone programmering patronen."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Ondersteund in de .NET Framework 4.5.1 en latere versies]       Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de opgegeven time-outwaarde, vereisten en asynchrone stroom optie."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> -opsomming die de vereisten van de transactie die is gekoppeld aan dit transactiebereik beschrijft."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "De <xref:System.TimeSpan>waarna het transactiebereik time-out en de transactie afgebroken.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> -opsomming die wordt beschreven of de ambient transactie die is gekoppeld aan het transactiebereik worden overgebracht via thread voortzettingen bij gebruik van de taak of async/await .NET asynchrone programmering patronen."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met het opgegeven bereik- en interoperabiliteitsvereisten COM +- en transactie-opties."
  remarks: "Wanneer u gebruikt de `transactionOptions` parameter om een <xref:System.Transactions.IsolationLevel>, en het bereik wordt gemaakt van een transactie later, de nieuwe transactie is gekoppeld aan het opgegeven isolatieniveau.</xref:System.Transactions.IsolationLevel> Als een isolatieniveau wordt doorgegeven combinatie met een transactie, moet de transactie een identieke isolatieniveau, of er een uitzondering gegenereerd.       **Opmerking** maakt gebruik van deze methode <xref:System.Security.Permissions.SecurityAction>om te voorkomen dat deze wordt aangeroepen vanuit niet-vertrouwde code; alleen de onmiddellijke aanroeper is echter vereist dat de `FullTrust` machtigingenset.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> -opsomming die de vereisten van de transactie die is gekoppeld aan dit transactiebereik beschrijft."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "Een <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> -structuur die de transactieopties moet worden gebruikt beschrijft als een nieuwe transactie is gemaakt. Als een bestaande transactie wordt gebruikt, wordt de time-outwaarde in deze parameter is van toepassing op het transactiebereik. Als dat tijdstip is verstreken voordat de scope wordt verwijderd, wordt de transactie is afgebroken."
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> -opsomming die wordt beschreven hoe de gekoppelde transactie samenwerkt met COM +-transacties."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Ondersteund in de .NET Framework 4.5.1 en latere versies]       Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse met de opgegeven vereisten en de optie asynchrone stroom."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> -opsomming die de vereisten van de transactie die is gekoppeld aan dit transactiebereik beschrijft."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "Een <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> -structuur die de transactieopties moet worden gebruikt beschrijft als een nieuwe transactie is gemaakt. Als een bestaande transactie wordt gebruikt, wordt de time-outwaarde in deze parameter is van toepassing op het transactiebereik. Als dat tijdstip is verstreken voordat de scope wordt verwijderd, wordt de transactie is afgebroken."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Een exemplaar van de <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> -opsomming die wordt beschreven of de ambient transactie die is gekoppeld aan het transactiebereik worden overgebracht via thread voortzettingen bij gebruik van de taak of async/await .NET asynchrone programmering patronen."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Complete
  id: Complete
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee wordt aangegeven dat alle bewerkingen binnen het bereik zijn voltooid."
  remarks: "Wanneer u tevreden bent dat alle bewerkingen binnen het bereik zijn voltooid, moet u deze methode slechts eenmaal aanroepen om te informeren over die transactiebeheerder dat de status voor alle resources consistent is en de transactie doorgevoerd worden kan. Het is zeer goed idee om de aanroep als de laatste instructie in de `using` blok.       Zie voor meer informatie over hoe deze methode wordt gebruikt, de [uitvoering van een impliciete transactie met behulp van transactiebereik](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) onderwerp.       Deze methode niet aanroepen niet afbreken van de transactie omdat de transactiebeheerder wordt dit geïnterpreteerd als een systeemfout is opgetreden of uitzonderingen binnen het bereik van de transactie. U moet echter ook vermelden dat u deze methode aanroept wordt niet gegarandeerd dat een doorvoer van de transactie. Dit is slechts een manier van de transactiebeheerder van de status van uw wordt geïnformeerd. Nadat u deze methode aanroept, u kunt geen toegang meer tot de ambient transactie via de <xref:System.Transactions.Transaction.Current%2A>eigenschap en probeert te doen in dat geval resulteert in een uitzondering.</xref:System.Transactions.Transaction.Current%2A>       Het echte werk van het doorvoeren tussen de bronnen manager vindt plaats op de `End Using` instructie als de <xref:System.Transactions.TransactionScope>object de transactie is gemaakt.</xref:System.Transactions.TransactionScope> Als deze de transactie niet hebt gemaakt, het doorvoeren deze gebeurtenis treedt op wanneer <xref:System.Transactions.CommittableTransaction.Commit%2A>wordt aangeroepen door de eigenaar van de <xref:System.Transactions.CommittableTransaction>object.</xref:System.Transactions.CommittableTransaction> </xref:System.Transactions.CommittableTransaction.Commit%2A> Op dat moment de transactiebeheerder roept de resource managers en ze worden geïnformeerd commit of rollback, op basis van of deze methode is aangeroepen in de <xref:System.Transactions.TransactionScope>object.</xref:System.Transactions.TransactionScope>"
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_1_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_1_1.cs)]"
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Transactions.TransactionScope.Complete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Deze methode is al één keer aangeroepen."
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Dispose
  id: Dispose
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Het transactiebereik wordt beëindigd."
  remarks: "Deze methode aanroept, markeert het einde van het transactiebereik. Als de <xref:System.Transactions.TransactionScope>object de transactie is gemaakt en <xref:System.Transactions.TransactionScope.Complete%2A>is aangeroepen in het bereik, de <xref:System.Transactions.TransactionScope>object probeert de transactie doorvoeren wanneer deze methode wordt aangeroepen.</xref:System.Transactions.TransactionScope> </xref:System.Transactions.TransactionScope.Complete%2A> </xref:System.Transactions.TransactionScope>       Het gebruik van de C# `using` bouw zorgt ervoor dat deze methode wordt aangeroepen, zelfs als er een uitzondering optreedt. Uitzonderingen die optreden na het aanroepen van deze methode kunnen niet van invloed op de transactie. Deze methode ook worden teruggezet in de ambient transactie het oorspronkelijke staat. Een <xref:System.Transactions.TransactionAbortedException>gegenereerd als de transactie niet daadwerkelijk doorgevoerd is.</xref:System.Transactions.TransactionAbortedException>       Deze methode is synchroon en blokkeert totdat de transactie is doorgevoerd of afgebroken. Wees uiterst voorzichtig wanneer u deze methode in een Windows-formulier (WinForm)-toepassing of een impasse kan optreden als gevolg hiervan. Als u deze methode binnen één WinForm-besturingselement gebeurtenis (bijvoorbeeld klikken op een knop) aanroepen en de synchrone gebruikt <xref:System.Windows.Forms.Control.Invoke%2A>methode om te leiden van het besturingselement voor sommige UI-taken (bijvoorbeeld veranderende kleuren) in het midden van de transactie verwerkt een impasse gebeurt.</xref:System.Windows.Forms.Control.Invoke%2A> Dit komt doordat de <xref:System.Windows.Forms.Control.Invoke%2A>methode synchroon is en de werkthread wordt geblokkeerd tot de UI-thread de taak is voltooid.</xref:System.Windows.Forms.Control.Invoke%2A> Echter, in ons scenario de UI-thread ook wacht tot de werkthread doorvoeren van de transactie. Het resultaat is dat geen verder is te gaan en het bereik voor onbepaalde tijd wordt gewacht op de gegevens zijn doorgevoerd. U moet gebruiken <xref:System.Windows.Forms.Control.BeginInvoke%2A>plaats <xref:System.Windows.Forms.Control.Invoke%2A>waar mogelijk, omdat deze is asynchroon en derhalve minder gevoelig zijn voor de impasse.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A>       Zie voor meer informatie over hoe deze methode wordt gebruikt, de [uitvoering van een impliciete transactie met behulp van transactiebereik](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) onderwerp."
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_0_1.cs)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.TransactionScope.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Transactions.TransactionScope.#ctor
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScopeAsyncFlowOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeAsyncFlowOption
  nameWithType: TransactionScopeAsyncFlowOption
  fullName: System.Transactions.TransactionScopeAsyncFlowOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
- uid: System.Transactions.TransactionScopeOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeOption
  nameWithType: TransactionScopeOption
  fullName: System.Transactions.TransactionScopeOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
- uid: System.Transactions.TransactionOptions
  parent: System.Transactions
  isExternal: false
  name: TransactionOptions
  nameWithType: TransactionOptions
  fullName: System.Transactions.TransactionOptions
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
- uid: System.Transactions.EnterpriseServicesInteropOption
  parent: System.Transactions
  isExternal: false
  name: EnterpriseServicesInteropOption
  nameWithType: EnterpriseServicesInteropOption
  fullName: System.Transactions.EnterpriseServicesInteropOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.Complete
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
- uid: System.Transactions.TransactionScope.Dispose
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
- uid: System.Transactions.TransactionScope.#ctor*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope
  nameWithType: TransactionScope.TransactionScope
- uid: System.Transactions.TransactionScope.Complete*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete
  nameWithType: TransactionScope.Complete
- uid: System.Transactions.TransactionScope.Dispose*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose
  nameWithType: TransactionScope.Dispose
