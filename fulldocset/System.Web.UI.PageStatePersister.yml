### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageStatePersister
  id: PageStatePersister
  children:
  - System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  - System.Web.UI.PageStatePersister.ControlState
  - System.Web.UI.PageStatePersister.Load
  - System.Web.UI.PageStatePersister.Page
  - System.Web.UI.PageStatePersister.Save
  - System.Web.UI.PageStatePersister.StateFormatter
  - System.Web.UI.PageStatePersister.ViewState
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
  type: Class
  summary: "Biedt de basisfunctionaliteit voor ASP.NET weergave status persistentie mechanismen."
  remarks: "De HTTP-aanvragen en antwoorden zijn inherent staatloze. Om te blijven statusgegevens tussen HTTP-aanvragen, ASP.NET-pagina&quot;s voor server opslaan <xref:System.Web.UI.Page>staat.</xref:System.Web.UI.Page> Deze toestand is, aangeroepen weergavestatus, bestaat uit de pagina en controle-instellingen en gegevens die u de pagina en de besturingselementen die worden weergegeven alsof ze dezelfde zijn als die de gebruiker hebt gezien en daarbij op hun laatste retouren naar de server zijn. Er bestaan verschillende mechanismen voor het opslaan van de weergavestatus tussen opeenvolgende aanvragen op dezelfde pagina. De abstracte PageStatePersister klasse vertegenwoordigt de basisklasse van deze mechanismen staat informatie opslag.       De weergave status persistentie standaardmechanisme in ASP.NET is bij het beschermen van de informatie over de status als een Base64-gecodeerde tekenreeks in een verborgen HTML-element (een element met de `type` -kenmerk ingesteld op `&quot;hidden&quot;`) op de pagina. Maakt gebruik van een ASP.NET-pagina een <xref:System.Web.UI.HiddenFieldPageStatePersister>object voor deze werkt, met behulp van een <xref:System.Web.UI.IStateFormatter>exemplaar voor het serialiseren en deserialiseren van informatie over de status van object.</xref:System.Web.UI.IStateFormatter> </xref:System.Web.UI.HiddenFieldPageStatePersister> U kunt ook de weergavestatus opslaan voor uw pagina&quot;s in de <xref:System.Web.HttpContext.Session%2A>object op de server met de <xref:System.Web.UI.SessionPageStatePersister>klasse voor mobiele clients met beperkte bandbreedte en resources.</xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.HttpContext.Session%2A> In sommige gevallen kunt u weergave status persistentie helemaal uitschakelen. Als u dit doet, wordt het resultaat is dat soms pagina&quot;s en besturingselementen die afhankelijk van de persistente zijn gedragen zich niet correct. Zie voor meer informatie over de pagina beheer en de weergave status [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).       Als u besturingselementen schrijft, kunt u informatie over de status van de besturingselementen in opslaan de <xref:System.Web.UI.Control.ViewState%2A>woordenlijst die een <xref:System.Web.UI.StateBag>object.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Een ontwikkelaar ophalen van de besturingselementstatus via de <xref:System.Web.UI.PageStatePersister.ControlState%2A>eigenschap.</xref:System.Web.UI.PageStatePersister.ControlState%2A> U toewijzen sleutels en waarden voor de <xref:System.Web.UI.Control.ViewState%2A>eigenschap, en de <xref:System.Web.UI.Page>object serialiseert de statusgegevens tussen aanvragen.</xref:System.Web.UI.Page> </xref:System.Web.UI.Control.ViewState%2A> Als u aangepaste status verwerken in het besturingselement, overschrijven de <xref:System.Web.UI.Control.LoadViewState%2A>en <xref:System.Web.UI.Control.SaveViewState%2A>methoden.</xref:System.Web.UI.Control.SaveViewState%2A> </xref:System.Web.UI.Control.LoadViewState%2A> Alle informatie over de status die is opgeslagen in deze woordenlijst gaat verloren wanneer de weergavestatus is uitgeschakeld door een ontwikkelaar. Om te beperken, in ASP.NET versie 2.0 kunt u informatie over de kritieke status opslaan in een afzonderlijk object, de status van het aangeroepen. Het statusobject besturingselement wordt niet beïnvloed wanneer de weergavestatus is uitgeschakeld door een ontwikkelaar van de pagina. Informatie over de status opslaan in het besturingselement statusobject vereist dat het besturingselement overschreven door de <xref:System.Web.UI.Control.LoadControlState%2A>en <xref:System.Web.UI.Control.SaveControlState%2A>methoden en dat het besturingselement worden geregistreerd voor het opslaan van informatie over de status in status beheren telkens wanneer het besturingselement is geïnitialiseerd.</xref:System.Web.UI.Control.SaveControlState%2A> </xref:System.Web.UI.Control.LoadControlState%2A> U kunt een besturingselement voor het gebruik van de status van het overschrijft registreren de <xref:System.Web.UI.Control.OnInit%2A>methode en het aanroepen van de <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>methode.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> </xref:System.Web.UI.Control.OnInit%2A> Voor meer informatie over het gebruik van de <xref:System.Web.UI.Control.ViewState%2A>en besturingselement status bij het ontwikkelen van besturingselementen, Zie [ontwikkelen van aangepaste ASP.NET-serverbesturingselementen](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>       U behoudt weergavestatus op clients die de bestaande weergave status persistentie mechanismen niet ondersteunt, kunt u de klasse PageStatePersister introduceren van uw eigen weergave status persistentie methoden uitbreiden en kunt u netwerkadapters van de pagina voor het configureren van uw ASP.NET-toepassing te gebruiken van andere weergave status persistentie mechanismen op basis van het type client waarop een pagina die wordt geleverd. Klassen die zijn afgeleid van de klasse PageStatePersister moeten de abstracte <xref:System.Web.UI.PageStatePersister.Save%2A>methode weergavestatus opslaan en beheren van de status in het medium persistentie en negeer de <xref:System.Web.UI.PageStatePersister.Load%2A>methode voor het uitpakken van deze</xref:System.Web.UI.PageStatePersister.Load%2A> </xref:System.Web.UI.PageStatePersister.Save%2A> overschrijven Als u serialiseren weergavestatus en status naar een tekenreeks wilt, kunt u de <xref:System.Web.UI.IStateFormatter>-object dat wordt geopend met behulp van de <xref:System.Web.UI.PageStatePersister.StateFormatter%2A>eigenschap.</xref:System.Web.UI.PageStatePersister.StateFormatter%2A> </xref:System.Web.UI.IStateFormatter> Efficiënt serialiseert en deserializes object statusgegevens naar een Base64-gecodeerde tekenreeks. U kunt ook negeren de <xref:System.Web.UI.PageStatePersister.StateFormatter%2A>eigenschap op te geven van uw eigen mechanisme voor serialisatie van object staat.</xref:System.Web.UI.PageStatePersister.StateFormatter%2A>"
  example:
  - "The following code example demonstrates how to create a PageStatePersister object that saves view and control state on the Web server. The `StreamPageStatePersister` demonstrates how to override the <xref:System.Web.UI.PageStatePersister.Load%2A> and <xref:System.Web.UI.PageStatePersister.Save%2A> methods to extract and save view state information. Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the `MyPageAdapter` class is provided to activate the `StreamPageStatePersister` for an ASP.NET application. Finally, a browser capabilities (.browser) file is provided to enable the `MyPageAdapter` adapter for a specific class of clients (in this case, the default Web browser).  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/csharp/t-system.web.ui.pagestat_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_1.vb)]  \n  \n The following code example demonstrates how to create a <xref:System.Web.UI.Adapters.PageAdapter> class that returns an instance of `StreamPageStatePersister`, which is used to persist view and control state for an ASP.NET Web page.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_2.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/csharp/t-system.web.ui.pagestat_2.cs)]  \n  \n Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line. Ensure that the compiled assembly is in the \\Bin directory underneath the ASP.NET application root.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_3.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/csharp/t-system.web.ui.pagestat_3.cs)]  \n  \n Finally, to enable the `MyPageAdapter` adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information. The `<refid>` element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file. In this example, `MyPageAdapter` is used for ASP.NET Web pages (where normally no adapter is used).  \n  \n```  \n<browsers>  \n    <browser refid=\"Default\" >  \n        <controlAdapters>  \n            <adapter   \n                controlType=\"System.Web.UI.Page\"                              \n                adapterType=\"Samples.AspNet.CS.MyPageAdapter\" />  \n        </controlAdapters>  \n    </browser>  \n</browsers>  \n```"
  syntax:
    content: public abstract class PageStatePersister
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  id: '#ctor(System.Web.UI.Page)'
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> klasse."
  syntax:
    content: protected PageStatePersister (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "De <xref href=&quot;System.Web.UI.Page&quot;> </xref> waarvoor de weergave status mechanisme is gemaakt."
  overload: System.Web.UI.PageStatePersister.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>page</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ControlState
  id: ControlState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Opgehaald of ingesteld van een object dat de gegevens die Hiermee wordt bepaald door de huidige staat <xref href=&quot;System.Web.UI.Page&quot;> </xref> object gebruiken om vast te leggen over HTTP-aanvragen naar de webserver."
  remarks: "De status van het is een object dat bestaat uit een kritieke status weergavegegevens die Web server besturingselementen moeten functie en deel uitmaakt van een afzonderlijke object op basis van informatie over de status van de normale weergave. Statusgegevens voor Control wordt niet beïnvloed wanneer de weergavestatus is uitgeschakeld op de <xref:System.Web.UI.Page>niveau, maar u moet extra implementatiestappen te gebruiken.</xref:System.Web.UI.Page> Voor meer informatie over het gebruik van de <xref:System.Web.UI.Control.ViewState%2A>en besturingselement status bij het ontwikkelen van besturingselementen, Zie [ontwikkelen van aangepaste ASP.NET-serverbesturingselementen](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ControlState property. In this example, the ControlState property has been assigned to the <xref:System.Web.UI.Pair.Second> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> class. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> class is used to deserialize view state and control state information, and the ControlState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.Second> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public object ControlState { get; set; }
    return:
      type: System.Object
      description: "Een object dat gegevens van de status bevat."
  overload: System.Web.UI.PageStatePersister.ControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Load
  id: Load
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Overschreven door de afgeleide klassen te deserialiseren en laden van gegevens van de permanente status wanneer een <xref href=&quot;System.Web.UI.Page&quot;> </xref> object initialiseert de besturingselementhiërarchie."
  remarks: "Klassen die zijn afgeleid van de <xref:System.Web.UI.PageStatePersister>klasse implementeert de Load-methode voor het initialiseren van de <xref:System.Web.UI.PageStatePersister.ViewState%2A>en <xref:System.Web.UI.PageStatePersister.ControlState%2A>Eigenschappen van een permanente indeling.</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Load method to load view state from a persistence medium. The `StreamPageStatePersister` attempts to read data from a stream. It uses an <xref:System.Web.UI.IStateFormatter> object to deserialize view state data and initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property, which a page uses to initialize controls. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/m-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public abstract void Load ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Page
  id: Page
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Web.UI.Page&quot;> </xref> object waarvoor de weergave status mechanisme is gemaakt."
  remarks: "U kunt de eigenschap Page gebruiken voor toegang tot de huidige <xref:System.Web.HttpContext>object.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.UI.Page Page { get; set; }
    return:
      type: System.Web.UI.Page
      description: "De <xref href=&quot;System.Web.UI.Page&quot;> </xref> die de <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> is gekoppeld."
  overload: System.Web.UI.PageStatePersister.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Save
  id: Save
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Overschreven door de afgeleide klassen voor het serialiseren van informatie van de permanente status wanneer een <xref href=&quot;System.Web.UI.Page&quot;> </xref> -object is uit het geheugen verwijderd."
  remarks: "Klassen die zijn afgeleid van de <xref:System.Web.UI.PageStatePersister>klasse implementeert u de methode opslaan om vast te leggen van de inhoud van de <xref:System.Web.UI.PageStatePersister.ViewState%2A>en <xref:System.Web.UI.PageStatePersister.ControlState%2A>Eigenschappen naar een medium voor persistentie.</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Save method to persist view state to a persistence medium. The `StreamPageStatePersister` uses an <xref:System.Web.UI.IStateFormatter> object to serialize the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/m-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public abstract void Save ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.StateFormatter
  id: StateFormatter
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Haalt een <xref href=&quot;System.Web.UI.IStateFormatter&quot;> </xref> object dat wordt gebruikt voor het serialiseren en deserialiseren van de van statusgegevens in de <> </> *> en <> </> *> eigenschappen tijdens het aanroepen van de <> </> *> en <> </> *> methoden."
  remarks: "U kunt de eigenschap StateFormatter om uw eigen weergave status formatter overschrijven."
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class accesses the StateFormatter property to retrieve an <xref:System.Web.UI.ObjectStateFormatter> object, which is the default implementation of the <xref:System.Web.UI.IStateFormatter> interface, to serialize view state and control state to a stream. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/p-system.web.ui.pagestat_2_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_2_1.vb)]"
  syntax:
    content: protected System.Web.UI.IStateFormatter StateFormatter { get; }
    return:
      type: System.Web.UI.IStateFormatter
      description: "Een exemplaar van <xref href=&quot;System.Web.UI.IStateFormatter&quot;> </xref> die wordt gebruikt voor het serialiseren en deserialiseren van Objectstatus."
  overload: System.Web.UI.PageStatePersister.StateFormatter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ViewState
  id: ViewState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Opgehaald of ingesteld van een object dat de gegevens die Hiermee wordt bepaald door de huidige staat <xref href=&quot;System.Web.UI.Page&quot;> </xref> object gebruiken om vast te leggen over HTTP-aanvragen naar de webserver."
  remarks: "De weergavestatus is een dictionary van gegevens van de gebruikersstatus die webserverbesturingselementen moeten werken en zelf weer te geven. Besturingselement ontwikkelaars doorgaans toegang krijgen tot de weergave status object met behulp van de <xref:System.Web.UI.Control.ViewState%2A>eigenschap.</xref:System.Web.UI.Control.ViewState%2A> Weergavestatus worden beïnvloed wanneer de weergavestatus is uitgeschakeld op de <xref:System.Web.UI.Page>niveau en als gevolg hiervan besturingselementen mogelijk niet het juiste gedrag in deze scenario&quot;s.</xref:System.Web.UI.Page> Voor meer informatie over het gebruik van <xref:System.Web.UI.Control.ViewState%2A>en status te bepalen bij het ontwikkelen van besturingselementen, Zie [ontwikkelen van aangepaste ASP.NET-serverbesturingselementen](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ViewState property. In this example, the ViewState property has been assigned to the <xref:System.Web.UI.Pair.First> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> object, which is an instance of the <xref:System.Web.UI.IStateFormatter> interface. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> interface is used to deserialize view state information, and the ViewState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.First> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public object ViewState { get; set; }
    return:
      type: System.Object
      description: "Een object dat gegevens van de status bevat."
  overload: System.Web.UI.PageStatePersister.ViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.PageStatePersister.ControlState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
- uid: System.Web.UI.PageStatePersister.Page
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
- uid: System.Web.UI.PageStatePersister.StateFormatter
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
- uid: System.Web.UI.IStateFormatter
  parent: System.Web.UI
  isExternal: false
  name: IStateFormatter
  nameWithType: IStateFormatter
  fullName: System.Web.UI.IStateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
- uid: System.Web.UI.PageStatePersister.#ctor*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister.PageStatePersister
- uid: System.Web.UI.PageStatePersister.ControlState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load
  nameWithType: PageStatePersister.Load
- uid: System.Web.UI.PageStatePersister.Page*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save
  nameWithType: PageStatePersister.Save
- uid: System.Web.UI.PageStatePersister.StateFormatter*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
