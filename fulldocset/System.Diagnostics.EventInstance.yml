### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventInstance
  id: EventInstance
  children:
  - System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)
  - System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)
  - System.Diagnostics.EventInstance.CategoryId
  - System.Diagnostics.EventInstance.EntryType
  - System.Diagnostics.EventInstance.InstanceId
  langs:
  - csharp
  name: EventInstance
  nameWithType: EventInstance
  fullName: System.Diagnostics.EventInstance
  type: Class
  summary: "Hiermee geeft u taalonafhankelijke informatie voor een logboekvermelding."
  remarks: "Gebruik EventInstance schrijven van een logboekvermelding met een resource-id in plaats van een string-waarde. Voor het schrijven van een logboekvermelding, initialiseren het <xref:System.Diagnostics.EventInstance.InstanceId%2A>eigenschap en geef het exemplaar voor de <xref:System.Diagnostics.EventLog.WriteEvent%2A>methode.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance.InstanceId%2A> De Event Viewer maakt gebruik van de instantie-id om te zoeken en weergeven van de opgegeven tekenreeks van het gelokaliseerde bronbestand op basis van huidige taalinstellingen. Voordat u gebeurtenissen resource-id&quot;s schrijven, moet u de gebeurtenisbron registreren met het bijbehorende bronbestand.       Bij het schrijven van gebeurtenissen, kunt u instellen de <xref:System.Diagnostics.EventInstance.EntryType%2A>eigenschap opgeven welk pictogram die door de Event Viewer voor de vermelding weergegeven.</xref:System.Diagnostics.EventInstance.EntryType%2A> U kunt ook opgeven een <xref:System.Diagnostics.EventInstance.CategoryId%2A>eigenschap om de categorie die de logboeken worden weergegeven voor de vermelding.</xref:System.Diagnostics.EventInstance.CategoryId%2A>       De Event Viewer maakt gebruik van de categorie gebeurtenissen filteren door de bron van een gebeurtenis geschreven. De Event Viewer kan de categorie weergeven als een numerieke waarde, of kunt gebruiken de categorie als een resource-id om een tekenreeks gelokaliseerde categorie weer te geven.       Om weer te geven tekenreeksen voor gelokaliseerde categorie in de logboeken, moet u een gebeurtenisbron geconfigureerd met een bronbestand categorie en stel de <xref:System.Diagnostics.EventInstance.CategoryId%2A>aan een resource-id in het bronbestand voor de categorie.</xref:System.Diagnostics.EventInstance.CategoryId%2A> Als de gebeurtenisbron beschikt niet over een bronbestand geconfigureerde categorie of de opgegeven <xref:System.Diagnostics.EventInstance.CategoryId%2A>heeft niet de index een tekenreeks in het bronbestand voor de categorie en de Event Viewer numerieke geeft de categoriewaarde weer voor deze vermelding.</xref:System.Diagnostics.EventInstance.CategoryId%2A> Configureren van het bronbestand categorie, samen met het aantal tekenreeksen van de categorie in het bronbestand gebruikt <xref:System.Diagnostics.EventLogInstaller>of de <xref:System.Diagnostics.EventSourceCreationData>klasse.</xref:System.Diagnostics.EventSourceCreationData> </xref:System.Diagnostics.EventLogInstaller>       U moet een bron voor een gebeurtenislogboek registreren voordat u met EventInstance schrijven van een gebeurtenis met de <xref:System.Diagnostics.EventLog.WriteEvent%2A>methode.</xref:System.Diagnostics.EventLog.WriteEvent%2A> De bron moet worden geconfigureerd voor het schrijven van gelokaliseerde vermeldingen in het logboek en de bron moet ten minste een bronbestand bericht definiëren.       Maak de nieuwe gebeurtenisbron tijdens de installatie van uw toepassing. Hierdoor kan de tijd voor het besturingssysteem naar het vernieuwen van de lijst met bronnen van geregistreerde gebeurtenissen en de bijbehorende configuraties. Als het besturingssysteem is niet vernieuwd voor de lijst met bronnen van gebeurtenissen en u probeert te schrijven van een gebeurtenis met de nieuwe bron, mislukt de bewerking schrijven. U kunt een nieuwe bron met een <xref:System.Diagnostics.EventLogInstaller>, of met behulp van de <xref:System.Diagnostics.EventLog.CreateEventSource%2A>methode.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> U moet beheerdersrechten hebben op de computer voor het maken van een nieuwe gebeurtenisbron.       Zie voor meer informatie over het definiëren van de event-berichten en bouwen van de bronbestanden van het gebeurtenislogboek, het onderwerp &quot;Bericht Compiler&quot; in de Platform-SDK-documentatie op [http://msdn.microsoft.com](http://msdn.microsoft.com)."
  example:
  - "The following code example writes an informational event entry, and then reuses the EventInstance to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/t-system.diagnostics.eve_2_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_2_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/t-system.diagnostics.eve_2_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public class EventInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)
  id: '#ctor(System.Int64,System.Int32)'
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: EventInstance(Int64,Int32)
  nameWithType: EventInstance.EventInstance(Int64,Int32)
  fullName: System.Diagnostics.EventInstance.EventInstance(Int64,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.EventInstance&quot;> </xref> klasse met behulp van de opgegeven resource-id&quot;s van het gelokaliseerde bericht en categorie tekst van de gebeurtenis."
  remarks: "Voor het schrijven van een informatieve post naar een gebeurtenislogboek, initialiseren een <xref:System.Diagnostics.EventInstance>en doorgegeven aan de <xref:System.Diagnostics.EventLog.WriteEvent%2A>methode.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance> Stel de `instanceId` op de resource-id van het bericht met de gebeurtenis in het bijbehorende <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>eigenschap voor de bron.</xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> Instellen de `categoryId` een numerieke waarde of de resource-id van de categorie in de <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>eigenschap voor de bron; Stel de `categoryId` aan nul voor geen gebeurteniscategorie.</xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> De <xref:System.Diagnostics.EventInstance.EntryType%2A>eigenschap voor het nieuwe exemplaar is ingesteld op <xref:System.Diagnostics.EventLogEntryType>standaard.</xref:System.Diagnostics.EventLogEntryType> </xref:System.Diagnostics.EventInstance.EntryType%2A>       De Event Viewer wordt de resource-id gebruikt om de bijbehorende tekenreeksen van de gelokaliseerde bronbestanden voor de bron weer te geven. Voordat u gebeurtenissen resource-id&quot;s kunt schrijven, moet u de bron met de bijbehorende bronbestanden registreren."
  example:
  - "The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/m-system.diagnostics.eve_5_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_5_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/m-system.diagnostics.eve_5_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public EventInstance (long instanceId, int categoryId);
    parameters:
    - id: instanceId
      type: System.Int64
      description: "Een resource-id die overeenkomt met een tekenreeks die is gedefinieerd in het bronbestand bericht van de gebeurtenisbron."
    - id: categoryId
      type: System.Int32
      description: "Een resource-id die overeenkomt met een tekenreeks die is gedefinieerd in het bronbestand voor de categorie van de gegevensbron, of nul om op te geven, er zijn geen categorieën voor de gebeurtenis."
  overload: System.Diagnostics.EventInstance.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> instanceId </code> parameter is een negatieve waarde of een waarde groter dan &lt;xref:System.UInt32.MaxValue?displayProperty=fullName&gt;.       - of - de <code> categoryId </code> parameter is een negatieve waarde of een waarde groter dan &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)
  id: '#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)'
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: EventInstance(Int64,Int32,EventLogEntryType)
  nameWithType: EventInstance.EventInstance(Int64,Int32,EventLogEntryType)
  fullName: System.Diagnostics.EventInstance.EventInstance(Int64,Int32,EventLogEntryType)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.EventInstance&quot;> </xref> klasse met de opgegeven resource-id&quot;s voor de gelokaliseerde bericht en categorie tekst van de gebeurtenis post en het invoertype opgegeven gebeurtenislogboek."
  remarks: "Als u wilt een vermelding in het schrijven naar een gebeurtenislogboek, initialiseren een <xref:System.Diagnostics.EventInstance>en doorgegeven aan de <xref:System.Diagnostics.EventLog.WriteEvent%2A>methode.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance> Stel de `instanceId` op de resource-id van het bericht met de gebeurtenis in het bijbehorende <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>eigenschap voor de bron.</xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> Instellen de `categoryId` een numerieke waarde of de resource-id van de categorie in de <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>eigenschap voor de bron; Stel de `categoryId` aan nul voor geen gebeurteniscategorie.</xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>       De Event Viewer wordt de resource-id gebruikt om de bijbehorende tekenreeksen van de gelokaliseerde bronbestanden voor de bron weer te geven. Voordat u gebeurtenissen resource-id&quot;s kunt schrijven, moet u de bron met de bijbehorende bronbestanden registreren.       Stel de `entryType` op een van de vooraf gedefinieerde invoertypen. De Event Viewer maakt gebruik van het gebeurtenistype om te bepalen welk pictogram moet worden weergegeven in de lijstweergave van het gebeurtenislogboek."
  example:
  - "The following code example writes two audit event entries to the event log `myNewLog`. The code example creates a new event source and a new event log if they do not exist on the local computer. The event message text is specified using a resource identifier in a resource file.  \n  \n [!code-cpp[EventLog_WriteEvent#7](~/add/codesnippet/cpp/fc333350-d8a8-40ee-b15e-_1.cpp)]\n [!code-vb[EventLog_WriteEvent#7](~/add/codesnippet/visualbasic/fc333350-d8a8-40ee-b15e-_1.vb)]\n [!code-cs[EventLog_WriteEvent#7](~/add/codesnippet/csharp/fc333350-d8a8-40ee-b15e-_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public EventInstance (long instanceId, int categoryId, System.Diagnostics.EventLogEntryType entryType);
    parameters:
    - id: instanceId
      type: System.Int64
      description: "Een resource-id die overeenkomt met een tekenreeks die is gedefinieerd in het bronbestand bericht van de gebeurtenisbron."
    - id: categoryId
      type: System.Int32
      description: "Een resource-id die overeenkomt met een tekenreeks die is gedefinieerd in het bronbestand voor de categorie van de gegevensbron, of nul om op te geven, er zijn geen categorieën voor de gebeurtenis."
    - id: entryType
      type: System.Diagnostics.EventLogEntryType
      description: "Een <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> waarde die welk gebeurtenistype aangeeft."
  overload: System.Diagnostics.EventInstance.#ctor*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>entryType</code>is geen geldige <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> waarde."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>instanceId</code>een negatieve waarde of een waarde groter is dan &lt;xref:System.UInt32.MaxValue?displayProperty=fullName&gt;.       - of - <code>categoryId</code> een negatieve waarde of een waarde groter is dan &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.CategoryId
  id: CategoryId
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: CategoryId
  nameWithType: EventInstance.CategoryId
  fullName: System.Diagnostics.EventInstance.CategoryId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van de resource-id waarmee de toepassing gedefinieerde categorie van de gebeurtenisvermelding."
  remarks: "Gebeurtenislogboek-categorieën zijn toepassingsspecifieke waarden die helpen Filtergebeurtenissen of nadere informatie over de gebeurtenis. Uw toepassing kan bijvoorbeeld verschillende categorieën voor verschillende onderdelen of verschillende bewerkingen definiëren.       Stel de eigenschap CategoryId om op te geven van de categorie die de logboeken worden weergegeven voor de vermelding. De Event Viewer kan de categorie weergeven als een numerieke waarde, of kunt gebruiken de categorie-id als een resource-id om een gelokaliseerde categorie-tekenreeks op basis van de huidige taalinstellingen weer te geven.       Bron geconfigureerd met een bronbestand categorie en de categorie-id ingesteld op een resource-id in het bronbestand categorie om weer te geven tekenreeksen voor gelokaliseerde categorie in de Event Viewer, moet u een gebeurtenis. Als de bron van de gebeurtenis geen heeft een bronbestand geconfigureerde categorie of de opgegeven categorie-id worden niet geïndexeerd een tekenreeks in het bronbestand voor de categorie en de Event Viewer wordt vervolgens de numerieke categoriewaarde voor deze vermelding.       Voordat u de gebeurteniscategorieën resource-id&quot;s schrijven, moet u de bron registreren met het bijbehorende bronbestand. Configureren van het bronbestand categorie, samen met het aantal tekenreeksen van de categorie in het bronbestand gebruikt <xref:System.Diagnostics.EventLogInstaller>of de <xref:System.Diagnostics.EventSourceCreationData>klasse.</xref:System.Diagnostics.EventSourceCreationData> </xref:System.Diagnostics.EventLogInstaller> Bij het definiëren van categorie tekenreeksen in een bronbestand, de categorie resource-id moeten zijn genummerd opeenvolgend beginnen bij 1, tot de geconfigureerde <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>eigenschapswaarde.</xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>       Gebeurteniscategorieën zijn optioneel. Als uw toepassing geen categorieën gebruikt, stel de categorie-id voor de vermelding in gebeurtenislogboek niet.       Zie voor meer informatie over het definiëren van de event-berichten en bouwen van de bronbestanden van de gebeurtenis, het onderwerp &quot;Bericht Compiler&quot; in de Platform SDK-documentatie op [http://msdn.microsoft.com](http://msdn.microsoft.com/). Zie het onderwerp &quot;gebeurteniscategorieën&quot; in de SDK Platform voor meer informatie over het definiëren van gebeurteniscategorieën in de bronbestanden."
  example:
  - "The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/p-system.diagnostics.eve_24_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_24_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/p-system.diagnostics.eve_24_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public int CategoryId { get; set; }
    return:
      type: System.Int32
      description: "Een categorie numerieke waarde of resource-id die overeenkomt met een tekenreeks die is gedefinieerd in het bronbestand voor de categorie van de gebeurtenisbron. De standaardwaarde is nul, wat betekent dat er zijn geen categorieën voor de gebeurtenisvermelding worden weergegeven."
  overload: System.Diagnostics.EventInstance.CategoryId*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De eigenschap is ingesteld op een negatieve waarde of op een waarde groter is dan &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.EntryType
  id: EntryType
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: EntryType
  nameWithType: EventInstance.EntryType
  fullName: System.Diagnostics.EventInstance.EntryType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van het gebeurtenistype van de vermelding in gebeurtenislogboek."
  remarks: "Elke gebeurtenis is van één type, waarmee de toepassing wordt aangegeven wanneer de gebeurtenis rapporteert. De Event Viewer maakt gebruik van het gebeurtenistype om te bepalen welk pictogram moet worden weergegeven in de lijstweergave van het gebeurtenislogboek."
  example:
  - "The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/p-system.diagnostics.eve_11_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_11_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/p-system.diagnostics.eve_11_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public System.Diagnostics.EventLogEntryType EntryType { get; set; }
    return:
      type: System.Diagnostics.EventLogEntryType
      description: "Een <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> waarde die aangeeft van het type gebeurtenis vermelding. De standaardwaarde is <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  overload: System.Diagnostics.EventInstance.EntryType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "De eigenschap is niet ingesteld op een geldige <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> waarde."
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.InstanceId
  id: InstanceId
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: InstanceId
  nameWithType: EventInstance.InstanceId
  fullName: System.Diagnostics.EventInstance.InstanceId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van de resource-id waarmee wordt aangegeven van de berichttekst van de gebeurtenisvermelding."
  remarks: "De eigenschap InstanceId is een unieke identificatie voor een gebeurtenisvermelding voor een geconfigureerde gebeurtenisbron. Gebeurtenissen die zijn gedefinieerd in de resource berichtbestanden, is de InstanceId komt overeen met de bron-id van de velden van de definitie bericht in het bericht tekstbestand wordt gecompileerd. Uw toepassing kunt gelokaliseerde logboekvermeldingen schrijven door de exemplaar-id in te stellen op een bron-id. De resource-id voor InstanceId Logboeken gebruikt om te zoeken en weergeven van de opgegeven tekenreeks van het gelokaliseerde bronbestand op basis van huidige taalinstellingen. Voordat u gebeurtenissen resource-id&quot;s schrijven, moet u de bron registreren met het bijbehorende bronbestand.       Zie voor meer informatie over het definiëren van de event-berichten en bouwen van de bronbestanden van het gebeurtenislogboek, het onderwerp &quot;Bericht Compiler&quot; in de Platform-SDK-documentatie op [http://msdn.microsoft.com](http://msdn.microsoft.com/). Zie het onderwerp &quot;Gebeurtenis-id&quot;s &quot; in de SDK Platform voor meer informatie over gebeurtenislogboek-id."
  example:
  - "The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/p-system.diagnostics.eve_16_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_16_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/p-system.diagnostics.eve_16_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public long InstanceId { get; set; }
    return:
      type: System.Int64
      description: "Een resource-id die overeenkomt met een tekenreeks die is gedefinieerd in het bronbestand bericht van de gebeurtenisbron."
  overload: System.Diagnostics.EventInstance.InstanceId*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De eigenschap is ingesteld op een negatieve waarde of op een waarde groter is dan &lt;xref:System.UInt32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EventInstance(Int64,Int32)
  nameWithType: EventInstance.EventInstance(Int64,Int32)
  fullName: System.Diagnostics.EventInstance.EventInstance(Int64,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EventInstance(Int64,Int32,EventLogEntryType)
  nameWithType: EventInstance.EventInstance(Int64,Int32,EventLogEntryType)
  fullName: System.Diagnostics.EventInstance.EventInstance(Int64,Int32,EventLogEntryType)
- uid: System.Diagnostics.EventLogEntryType
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntryType
  nameWithType: EventLogEntryType
  fullName: System.Diagnostics.EventLogEntryType
- uid: System.Diagnostics.EventInstance.CategoryId
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: CategoryId
  nameWithType: EventInstance.CategoryId
  fullName: System.Diagnostics.EventInstance.CategoryId
- uid: System.Diagnostics.EventInstance.EntryType
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EntryType
  nameWithType: EventInstance.EntryType
  fullName: System.Diagnostics.EventInstance.EntryType
- uid: System.Diagnostics.EventInstance.InstanceId
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: InstanceId
  nameWithType: EventInstance.InstanceId
  fullName: System.Diagnostics.EventInstance.InstanceId
- uid: System.Diagnostics.EventInstance.#ctor*
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EventInstance
  nameWithType: EventInstance.EventInstance
- uid: System.Diagnostics.EventInstance.CategoryId*
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: CategoryId
  nameWithType: EventInstance.CategoryId
- uid: System.Diagnostics.EventInstance.EntryType*
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EntryType
  nameWithType: EventInstance.EntryType
- uid: System.Diagnostics.EventInstance.InstanceId*
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: InstanceId
  nameWithType: EventInstance.InstanceId
