### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameRegistration
  id: PeerNameRegistration
  children:
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameRegistration.Cloud
  - System.Net.PeerToPeer.PeerNameRegistration.Comment
  - System.Net.PeerToPeer.PeerNameRegistration.Data
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  - System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  - System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  - System.Net.PeerToPeer.PeerNameRegistration.PeerName
  - System.Net.PeerToPeer.PeerNameRegistration.Port
  - System.Net.PeerToPeer.PeerNameRegistration.Start
  - System.Net.PeerToPeer.PeerNameRegistration.Stop
  - System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.Update
  - System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  langs:
  - csharp
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration
  fullName: System.Net.PeerToPeer.PeerNameRegistration
  type: Class
  summary: "Registreert een <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>in een <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> of reeks clouds.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "De informatie die is gekoppeld aan door de registratie is gemaakt (of bijgewerkt) een <xref:System.Net.PeerToPeer.PeerName>in een peer-cloud of clouds.</xref:System.Net.PeerToPeer.PeerName>       Het is mogelijk om meerdere PeerNameRegistration objecten voor de naam van de dezelfde peer. Als de naam van de peer is beveiligd, vertegenwoordigt elk exemplaar in dat geval PeerNameRegistration in een andere cloud. Echter als naam van de peer is niet beveiligd, kunnen worden geregistreerd in dezelfde cloud meerdere keren bieden dat elke registratie afkomstig van een ander proces is."
  syntax:
    content: 'public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initialiseert een nieuw exemplaar van de standaardwaarde van de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> klasse."
  remarks: "Retourneert een nieuwe standaardexemplaar van het type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</xref:System.Net.PeerToPeer.PeerNameRegistration> Deze geen peer-naamregistratie uitgevoerd tijdens de constructiefase.       Na het instantiëren van een object met deze constructor moet de aanroeper de juiste velden in het exemplaar voordat aanroepen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>of <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> vullen."
  syntax:
    content: public PeerNameRegistration ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> klasse met de opgegeven naam en het poortnummer."
  remarks: "Het aanroepen van deze constructor maakt u een exemplaar dat wordt gebruikt voor het registreren van alle bronadressen (zowel IPv4 IPv6and) en de opgegeven poort voor alle clouds waarin de peer is deelnemer.  Als het object is gemaakt, is de opgegeven <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>en <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>worden ingevuld.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>       Als de naam van de peer is beveiligd en eerder is geregistreerd in een <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>de peer momenteel deel uitmaakt, een <xref:System.Net.PeerToPeer.PeerToPeerException>gegenereerd.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Deze constructor maakt alleen een <xref:System.Net.PeerToPeer.PeerNameRegistration>exemplaar; komt niet uitvoeren van de registratie.</xref:System.Net.PeerToPeer.PeerNameRegistration> Na het registratie-object met deze constructor instantiëren en de velden te vullen, de toepassing moet worden aangeroepen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>om uit te voeren van de registratie van de werkelijke.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "De <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> object om te registreren."
    - id: port
      type: System.Int32
      description: "Geheel getal dat het poortnummer te registreren."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> name </code> parameter mag niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Het opgegeven poortnummer is kleiner dan nul.  Poortnummers moet groter zijn dan of gelijk zijn aan nul en kleiner zijn dan 65.535 (0xFFFF)."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-De <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> opgegeven is al geregistreerd via deze host.      -De externe peer is geen eigenaar van de <xref:System.Net.PeerToPeer.PeerName.Authority*>voor de opgegeven <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> object.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initialiseert een nieuw serialiseerbaar <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> object."
  syntax:
    content: protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Verwijzing naar het object dat de gegevens die nodig zijn voor het deserialiseren van dit exemplaar bevat."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "De context die, de mogelijkheid biedt voor het deserialiseren van de gegevens. Ook aangeduid als de bron van de geserialiseerde gegevens."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> klasse met de naam van de opgegeven peer, poortnummer en <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  remarks: "Het aanroepen van deze constructor maakt u een exemplaar dat wordt gebruikt voor alle bronadressen (IPv6 als zowel IPv4), de opgegeven poort en de opgegeven <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> registreren  Als het object met succes is gemaakt, zijn de eigenschappen gevuld met de opgegeven <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>en <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>       Als de parameter cloud `null`, de naam wordt geregistreerd met de <xref:System.Net.PeerToPeer.Cloud.Available>sneltoets initialiseert de standaardwaarden voor de <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, en <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available>       Na instantiëring, de <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>methode moet worden aangeroepen voor het registreren van de <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "De <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> object om te registreren."
    - id: port
      type: System.Int32
      description: "Geheel getal dat het poortnummer te registreren."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;></xref>waarin de peernaam te registreren."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <code> name </code> parameter mag niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Het opgegeven poortnummer is kleiner dan nul.  Poortnummers moet groter zijn dan of gelijk zijn aan nul en kleiner zijn dan 65.535 (0xFFFF)."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-De <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> opgegeven is al geregistreerd via deze host.      -De externe peer is geen eigenaar van de <xref:System.Net.PeerToPeer.PeerName.Authority*>voor de opgegeven <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> object.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  id: Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Opgehaald of ingesteld van informatie in een Cloud in waarvoor deze <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>object wordt geregistreerd.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  syntax:
    content: public System.Net.PeerToPeer.Cloud Cloud { get; set; }
    return:
      type: System.Net.PeerToPeer.Cloud
      description: "Een object van type <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> Hiermee worden de peer cloud waarvoor deze registratie is gedefinieerd. Deze eigenschap is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> standaard."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  id: Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Opgehaald of ingesteld als u meer informatie over de <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> -object dat wordt geregistreerd met de <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  syntax:
    content: public string Comment { get; set; }
    return:
      type: System.String
      description: "De opmerking die extra informatie bevat over de <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> om te koppelen aan de <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Deze eigenschap is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> standaard."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "De opgegeven tekenreekswaarde is groter dan 39 Unicode-tekens."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  id: Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Opgehaald of ingesteld van de toepassing gedefinieerde binaire gegevens voor de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> object."
  remarks: "De maximale hoeveelheid gegevens die kunnen worden geleverd is 4096 bytes."
  syntax:
    content: public byte[] Data { get; set; }
    return:
      type: System.Byte[]
      description: "Een bytematrix die de binaire gegevens die zijn gekoppeld aan de vermelding bevat. Deze eigenschap is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> standaard."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Data*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De opgegeven gegevens is groter dan 4096 bytes."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> object."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "De niet-beheerde bronnen vrijgegeven en worden eventueel versies van de beheerde bronnen die worden gebruikt door de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  id: EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Hiermee haalt u de verzameling van netwerkeindpunten waarvan de naam van de bijbehorende peer is geregistreerd."
  remarks: "In de <xref:System.Net>naamruimte, een <xref:System.Net.IPEndPoint>vertegenwoordigt een netwerkeindpunt als een IP-adres en een poortnummer.</xref:System.Net.IPEndPoint> </xref:System.Net>  Een IP-adres en poort van de waarde moet worden opgegeven voor elk eindpunt voor PNRP.  Het maximum aantal eindpunten die kan worden opgegeven is tien. Automatische selectie wordt gebruikt als deze parameter is `null`.       Als een registratiemethode wordt gebruikt die u automatisch de adressen selecteert te registreren, is er geen methode om te bepalen theaddresses waarvan de naam van de peer is geregistreerd.  Dat wil zeggen, de eigenschap EndPointCollection niet bijgewerkt naar aanleiding van de adressen die zijn geselecteerd.       Als de naam van een peer is geregistreerd voor meer dan één knooppunt elke <xref:System.Net.PeerToPeer.PeerNameRegistration>uniek is en de eigenschap EndPointCollection is gedefinieerd voor elk exemplaar van de registratie worden verschillende.</xref:System.Net.PeerToPeer.PeerNameRegistration> Ook als een <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>is geregistreerd in meer dan één <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>en elke registratie is niet hetzelfde als de verzameling van eindpunten meestal zijn verschillend voor elk exemplaar.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>"
  syntax:
    content: public System.Net.IPEndPointCollection EndPointCollection { get; }
    return:
      type: System.Net.IPEndPointCollection
      description: "Een <xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*>object met de netwerkeindpunten waarvan de naam van de bijbehorende peer is geregistreerd.</xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*> Tenzij expliciet wordt vermeld, de standaardwaarde voor alle eigenschappen is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> voor verwijzingstypen."
  overload: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Een object met gegevens van serialisatie gevuld met de gegevens die nodig zijn voor het serialiseren van de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> exemplaar."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Bevat de geserialiseerde gegevens die zijn gekoppeld aan de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> object."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Bevat de bestemming voor de geserialiseerde stroom die zijn gekoppeld aan de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> object."
  overload: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  id: IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Opgehaald of ingesteld of de naam van de peer die is opgegeven de <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>eigenschap is geregistreerd met een specifieke <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> op een host.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  syntax:
    content: public bool IsRegistered ();
    parameters: []
    return:
      type: System.Boolean
      description: "Als <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, de naam van de peer is geregistreerd bij een <> </> *> voor de peer-host. Als <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, en vervolgens het registratieproces kan worden gestart met <> </> *>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Een object dat al is verwijderd, kan niet worden geregistreerd."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  id: PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Opgehaald of ingesteld van de naam van de peer registreren bij een peer-cloud."
  remarks: "Naam van een peer kan worden geregistreerd voor meer dan één knooppunt. elke <xref:System.Net.PeerToPeer.PeerNameRegistration>exemplaar is niet hetzelfde.</xref:System.Net.PeerToPeer.PeerNameRegistration> De <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>eigenschap die is gekoppeld aan elk overeenkomstig <xref:System.Net.PeerToPeer.PeerName>exemplaar verschilt.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Het is ook mogelijk om te registreren voor meer dan een cloud die het knooppunt is verbonden met; de naam van een peer elk van deze registraties is niet hetzelfde. Van de naam van de peer <xref:System.Net.IPEndPointCollection>zijn verschillend voor elk van deze exemplaren.</xref:System.Net.IPEndPointCollection>"
  syntax:
    content: public System.Net.PeerToPeer.PeerName PeerName { get; set; }
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "Een object van type <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> die bevat waarden die zijn gekoppeld aan dit <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> object. Tenzij expliciet wordt vermeld, de standaardwaarde voor alle eigenschappen is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> voor verwijzingstypen."
  overload: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  id: Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Opgehaald of ingesteld de [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) poortnummer wordt gebruikt door de peer wordt geregistreerd in de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> object."
  remarks: "De standaardpoort wordt gebruikt door de <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>methode alleen wanneer er zijn geen eindpunten zijn opgegeven.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "Een geheel getal dat aangeeft van de TCP-poortnummer van de <xref:System.Net.IPEndPoint>.</xref:System.Net.IPEndPoint> Tenzij expliciet is opgegeven, is de standaardwaarde voor deze eigenschap nul (0)."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Port*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Waarde van de opgegeven poort is kleiner dan nul.  Poortnummers moet groter zijn dan of gelijk zijn aan nul en kleiner zijn dan 65.535 (0xFFFF)."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  id: Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Registreert de <> </> *> in de <> </> *>. Als er geen <> </> *> is opgegeven, wordt de selectie automatisch adres wordt gebruikt met de waarde van de poort opgegeven door de <> </> *> eigenschap."
  remarks: "De methode registreert u de naam van de peer opgegeven in de <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>eigenschap met alle bronadressen en de <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>opgegeven in de constructor.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> De standaardpoort wordt gebruikt door deze methode alleen wanneer er zijn geen eindpunten zijn opgegeven.       Als de <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>eigenschap is `null`, deze methode wordt geregistreerd dat de naam van de peer opgegeven in de <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>eigenschap met behulp van de <xref:System.Net.PeerToPeer.Cloud.Available>veld initialiseert de standaardwaarden voor de <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, en <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Na een <xref:System.Net.PeerToPeer.PeerNameRegistration>object is gestart, de <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>methode wordt gebruikt voor het stoppen van deze</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration>       Bijwerken van een inschrijving, het <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>methode moet worden gebruikt.</xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>"
  example:
  - "The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.  \n  \n [!code-cs[NCLPNRPRegisterPeerName#1](~/add/codesnippet/csharp/m-system.net.peertopeer._1_1.cs)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>eigenschap is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object had Dispose() eerder aangeroepen."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-De <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> opgegeven is al geregistreerd. De <> </> *> methode moet worden gebruikt om een registratie bijwerken.      -De externe peer is geen eigenaar van de <> </> *> voor de <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> opgegeven.      -Ofwel de <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> of de <> </> *> is niet opgegeven; moet ten minste één worden opgegeven.      -De elementen bericht of gegevens zijn ongeldig. Of, <> </> *> niet is ingesteld en er zijn geen gegevens blob of <xref:System.Net.IPEndPoint>is opgegeven.</xref:System.Net.IPEndPoint>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  id: Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Heft de registratie van de naam van de peer opgegeven in de <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>eigenschap uit alle clouds waarvoor deze is geregistreerd.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Nadat het registratieproces is gestopt, is status van het registratie-object is gelijk aan de status direct na wordt samengesteld door de standaardconstructor. In deze toestand is, worden alle eigenschappen van aangenomen dat geen waarde. De <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>methode kan worden gebruikt om te starten.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>       Het is mogelijk om meerdere objecten voor de naam van de dezelfde peer.  In dat geval als de naam van de peer is beveiligd, vertegenwoordigt elk exemplaar een registratie in een andere PNRP-cloud.  Echter als naam van de peer is niet beveiligd, kunnen worden geregistreerd in dezelfde cloud meerdere keren.       Als dit exemplaar al gestopt is, heeft aanroepen van deze methode geen effect."
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap nog niet is geregistreerd. Dit gebeurt wanneer een <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> -object is gemaakt met behulp van de lege constructor. De <> </> *> eigenschap moet worden ingevuld in dit exemplaar voordat het aanroepen van <xref:System.Net.PeerToPeer.PeerNameRegistration.Start*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dit object had Dispose() eerder aangeroepen."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Implementeert de <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interface en retourneert de gegevens die nodig zijn voor het serialiseren van de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> exemplaar."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Bevat de geserialiseerde gegevens die zijn gekoppeld aan de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> exemplaar."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Bevat de bestemming voor de geserialiseerde stroom die zijn gekoppeld aan de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> exemplaar."
  overload: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  id: Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Updates de <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> voor een geregistreerd met een specifiek knooppunt <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Update wordt uitgevoerd met behulp van de informatie die is opgegeven in de eigenschappen."
  remarks: "Alle informatie die is geregistreerd in Clouds voor deze <xref:System.Net.PeerToPeer.PeerName>voorafgaand aan de aanroep wordt volledig verwijderd.</xref:System.Net.PeerToPeer.PeerName>  De nieuwe gegevens is niet gecombineerd met de bestaande registratie.  Bijwerken van een <xref:System.Net.PeerToPeer.PeerNameRegistration>, eerst de eigenschappen voor dit exemplaar bijwerken en vervolgens deze methode niet aanroepen.</xref:System.Net.PeerToPeer.PeerNameRegistration>       Na een <xref:System.Net.PeerToPeer.PeerNameRecord>is geregistreerd, de <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>eigenschap kan niet worden bijgewerkt.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord>  Alle andere velden in de record kunnen worden bijgewerkt."
  syntax:
    content: public void Update ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>eigenschap is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "-De <> </> *> eigenschap nog niet is geregistreerd. De methode Update kan niet worden aangeroepen totdat de naam van de peer die is opgegeven de <> </> *> eigenschap is geregistreerd in een of meer clouds.      -De naam van de peer opgegeven in de <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>eigenschap is gewijzigd sinds de bijbehorende <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> is geregistreerd.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Een object dat is verwijderd, kan niet worden geregistreerd."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Een <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> eigenschap is ingesteld op <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  id: UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Een waarde die of u automatische eindpunt selectie gebruiken aangeeft wanneer een peer mesh of <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*> passeert opgehaald of ingesteld"
  remarks: "Wanneer automatische eindpunt selectie wordt gebruikt (deze eigenschap is ingesteld op `true`) zonder vóór het begin van het opgegeven eindpunt-gegevens een <xref:System.Net.PeerToPeer.PeerNameRegistration>, het systeem kiest afzonderlijke eindpunten en deze met de naam van de bijbehorende peer in alle beschikbare clouds publiceert.</xref:System.Net.PeerToPeer.PeerNameRegistration>  Als de poort niet is opgegeven, kiest automatische selectie nul als de <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>       Als de waarde `false`, automatische selectie zoals hierboven wordt beschreven, wordt niet uitgevoerd.  Hierdoor is het registratieproces voor het publiceren van de naam van een peer samen met een blob-gegevens (zoals opgegeven door de <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A>eigenschap).</xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> Er zijn geen eindpunten gekoppeld met de naam.       Als een registratiemethode wordt gebruikt die u automatisch de adressen selecteert te registreren, er is geen methode om te bepalen wat adressen waarvoor de <xref:System.Net.PeerToPeer.PeerName>-object is geregistreerd.</xref:System.Net.PeerToPeer.PeerName>  Dat wil zeggen, de <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>eigenschap wordt niet bijgewerkt naar aanleiding van de adressen die zijn geselecteerd.</xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>       Bijwerken van deze eigenschap nadat naamregistratie peer is gestart, heeft geen effect."
  syntax:
    content: public bool UseAutoEndPointSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Als automatische eindpunt selectie moet worden gebruikt; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als een andere methode die wordt gebruikt om te bepalen van een eindpunt. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
- uid: System.Net.IPEndPointCollection
  parent: System.Net
  isExternal: false
  name: IPEndPointCollection
  nameWithType: IPEndPointCollection
  fullName: System.Net.IPEndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration.PeerNameRegistration
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose
  nameWithType: PeerNameRegistration.Dispose
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData
  nameWithType: PeerNameRegistration.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered
  nameWithType: PeerNameRegistration.IsRegistered
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start
  nameWithType: PeerNameRegistration.Start
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop
  nameWithType: PeerNameRegistration.Stop
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update
  nameWithType: PeerNameRegistration.Update
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
