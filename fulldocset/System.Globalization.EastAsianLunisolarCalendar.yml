### YamlMime:ManagedReference
items:
- uid: System.Globalization.EastAsianLunisolarCalendar
  id: EastAsianLunisolarCalendar
  children:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: EastAsianLunisolarCalendar
  nameWithType: EastAsianLunisolarCalendar
  fullName: System.Globalization.EastAsianLunisolarCalendar
  type: Class
  summary: "Hiermee geeft u een agenda die tijd verdeelt in maanden, dagen, jaar en weergegeven in tijdperken en datums die zijn gebaseerd op cycli van de sun en de maan heeft."
  remarks: "De klasse EastAsianLunisolarCalendar ondersteunt de sexagenary cyclus van jaar (die wordt herhaald om de 60 jaar) naast solar jaar en maan maanden. Elk jaar solar in de kalender is gekoppeld aan een Sexagenary jaar (Zie <xref:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear%2A>), een Celestial stam (Zie <xref:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem%2A>), en een terrestrische vertakking (Zie <xref:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch%2A>).</xref:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch%2A> </xref:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem%2A> </xref:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear%2A>      > [!NOTE] > Voor informatie over het gebruik van de <xref:System.Globalization.HebrewCalendar>klasse en de andere klassen in .NET Framework agenda, raadpleegt u [werken met agenda&quot;s](~/add/includes/ajax-current-ext-md.md).</xref:System.Globalization.HebrewCalendar>       Een jaar kan een maand leap na elke maand van het jaar, en een maand per dag leap kan hebben. Bijvoorbeeld, de <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>methode retourneert een positief geheel getal dat de maand die zijn gekoppeld aan een opgegeven datum aangeeft.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Als er een maand leap tussen de achtste en achtste maand van het jaar, de <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>methode retourneert 8 voor de achtste maand 9 voor de leap achtste maand en 10 voor de achtste maand.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       Elke <xref:System.Globalization.CultureInfo>ondersteunt een set van agenda&quot;s.</xref:System.Globalization.CultureInfo> Geen van de lunisolair agenda-klassen die zijn afgeleid van EastAsianLunisolarCalendar wordt momenteel gebruikt door een van de culturen ondersteund door de <xref:System.Globalization.CultureInfo>klasse.</xref:System.Globalization.CultureInfo> Daarom kunnen deze klasse en toepassingen die zijn afgeleid van deze worden gebruikt alleen voor het berekenen van datums in de Aziatische lunisolair agenda&quot;s. Deze klasse ondersteunt verschillende &quot;ophalen&quot; methoden om te beschrijven een <xref:System.DateTime>in de context van lunisolair agenda&quot;s en de <xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A>methode te converteren van kalendergegevens naar een <xref:System.DateTime>.</xref:System.DateTime> lunisolair</xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A> </xref:System.DateTime>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EastAsianLunisolarCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent de datum die het opgegeven aantal maanden weg van de opgegeven datum."
  remarks: "Het daggedeelte van de resulterende <xref:System.DateTime>is van invloed op als de resulterende dag geen geldig in de resulterende maand van het resulterende jaar is.</xref:System.DateTime> In dit geval wordt wordt het daggedeelte gewijzigd naar de laatste geldige dag in de resulterende maand van het resulterende jaar. Het jaargedeelte van de resulterende dat <xref:System.DateTime>is beïnvloed als de resulterende maand buiten het jaar van de opgegeven <xref:System.DateTime>.</xref:System.DateTime> valt</xref:System.DateTime> Deze implementatie ondersteunt alleen het huidige Era-waarde. Daarom <xref:System.ArgumentException>wordt gegenereerd als het resulterende jaar buiten de vormgeving van de opgegeven <xref:System.DateTime>.</xref:System.DateTime> valt</xref:System.ArgumentException> Het deel van de dag van de resulterende <xref:System.DateTime>blijft hetzelfde als de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Bijvoorbeeld, als de opgegeven maand oktober die 31 dagen heeft, is de opgegeven dag is de dertig eerste dag van deze maand en de waarde van de `months` parameter 6 is en het resulterende jaar is één meer dan het opgegeven jaar, de resulterende maand April, en de resulterende dag is de dertigste dag, de laatste dag in April is.       Als de waarde van de `months` parameter negatief, is de resulterende die <xref:System.DateTime>ouder is dan de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       De<xref:System.DateTime.Kind%2A> eigenschap van de geretourneerde <xref:System.DateTime>waarde altijd gelijk is aan <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> U kunt behouden de <xref:System.DateTime.Kind%2A>eigenschap van de `time` parameter door het aanroepen van de <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>methode, zoals het volgende voorbeeld.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/d86a04c2-1ef4-4a8d-ab7c-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/d86a04c2-1ef4-4a8d-ab7c-_1.cs)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>waaraan moet worden toegevoegd `months`.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Het aantal maanden om toe te voegen."
    return:
      type: System.DateTime
      description: "Een nieuwe <xref:System.DateTime>die het resultaat zijn van het toevoegen van het opgegeven aantal maanden aan de <code> time </code> parameter.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het resultaat is buiten het ondersteunde bereik van een <xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>is kleiner dan-120000 of groter zijn dan 120000 liggen.       - of - <code>time</code> is minder dan <xref:System.Globalization.Calendar.MinSupportedDateTime*> of groter dan <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent de datum die het opgegeven aantal jaren weg van de opgegeven datum."
  remarks: "Het daggedeelte van de resulterende <xref:System.DateTime>is van invloed op als de resulterende dag geen geldig in de resulterende maand van het resulterende jaar is.</xref:System.DateTime> In dit geval wordt wordt het daggedeelte gewijzigd naar de laatste geldige dag in de resulterende maand van het resulterende jaar. Het deel van de maand van de resulterende <xref:System.DateTime>blijft hetzelfde als de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Deze implementatie ondersteunt alleen het huidige Era-waarde. Daarom <xref:System.ArgumentException>wordt gegenereerd als het resulterende jaar buiten de vormgeving van de opgegeven <xref:System.DateTime>.</xref:System.DateTime> valt</xref:System.ArgumentException> Het deel van de dag van de resulterende <xref:System.DateTime>blijft hetzelfde als de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Februari heeft bijvoorbeeld 28 dagen, behalve tijdens leap jaar wanneer 29 dagen heeft. Als de opgegeven datum de dag Negenentwintigste van februari in een schrikkeljaar en de waarde van is de `years` parameter is 1, is de resulterende datum de twintig achtste dag van februari in het volgende jaar.       Als `years` negatief, is de resulterende die <xref:System.DateTime>ouder is dan de opgegeven <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       De<xref:System.DateTime.Kind%2A> eigenschap van de geretourneerde <xref:System.DateTime>waarde altijd gelijk is aan <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> U kunt behouden de <xref:System.DateTime.Kind%2A>eigenschap van de `time` parameter door het aanroepen van de <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>methode, zoals het volgende voorbeeld.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/6f9d0244-83a4-4a86-acea-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/6f9d0244-83a4-4a86-acea-_1.cs)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>waaraan moet worden toegevoegd `years`.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Het aantal jaren om toe te voegen."
    return:
      type: System.DateTime
      description: "Een nieuwe <xref:System.DateTime>die het resultaat zijn van het toevoegen van het opgegeven aantal jaren aan de <code> time </code> parameter.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het resultaat is buiten het ondersteunde bereik van een <xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>is kleiner dan <xref:System.Globalization.Calendar.MinSupportedDateTime*> of groter dan <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
  fullName: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Haalt een waarde die aangeeft of de huidige kalender zonne gebaseerde, maan gebaseerde, of een combinatie van beide."
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Retourneert altijd <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  id: GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetCelestialStem(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent de celestial stam van het opgegeven jaar in de cyclus van een sexagenary (60 jaar)."
  syntax:
    content: public int GetCelestialStem (int sexagenaryYear);
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: "Een geheel getal tussen 1 en 60 die een jaar in de sexagenary cyclus vertegenwoordigt."
    return:
      type: System.Int32
      description: "Een getal van 1 t/m 10."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sexagenaryYear</code>is kleiner dan 1 of groter zijn dan 60."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent de dag van de maand van de opgegeven datum."
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een geheel getal tussen 1 en 31 dat de dag van de maand die is opgegeven in vertegenwoordigt de <code> time </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent de dag van de week van de opgegeven datum."
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Een van de <xref:System.DayOfWeek>waarden op die de dag van de week is opgegeven in de <code> time </code> parameter.</xref:System.DayOfWeek>"
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>is kleiner dan <xref:System.Globalization.Calendar.MinSupportedDateTime*> of groter dan <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent de dag van het jaar in de opgegeven datum."
  remarks: "De dag van het jaar wordt gedefinieerd als het aantal dagen vanaf de eerste dag van het jaar. Bijvoorbeeld GetDayOfYear voor de eerste dag van de eerste maand retourneert 1 en GetDayOfYear voor de laatste dag van de laatste maand retourneert het totale aantal dagen in dat jaar dezelfde waarde is geretourneerd door <xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A>.</xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A>"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een geheel getal van 1 tot en met 354 in een algemene jaar of 1 tot en met 384 in een schrikkeljaar die staat voor de dag van het jaar dat is opgegeven in de <code> time </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent het aantal dagen in de opgegeven maand van het opgegeven jaar en Era-waarde."
  remarks: "Ifthe `month` parameter is de tweede maand en de methode GetDaysInMonth retourneert 28 of 29, afhankelijk van of de `year` parameter een schrikkeljaar is."
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: month
      type: System.Int32
      description: "Een geheel getal tussen 1 en 12 in een algemene jaar of 1 tot en met 13 in een schrikkeljaar, die staat voor de maand."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Int32
      description: "Het aantal dagen in de opgegeven maand van het opgegeven jaar en Era-waarde."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, of <code>era</code> valt buiten het bereik dat wordt ondersteund door deze kalender."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent het aantal dagen in het opgegeven jaar en Era-waarde."
  remarks: "De methode GetDaysInYear retourneert 365 of 366, afhankelijk van of de `year` parameter een schrikkeljaar is."
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Int32
      description: "Het aantal dagen in het opgegeven jaar en Era-waarde."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>of <code>era</code> valt buiten het bereik dat wordt ondersteund door deze kalender."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent de maand leap voor het opgegeven jaar en Era-waarde."
  remarks: "In een agenda die ondersteuning biedt voor een leap maand, optreden de maand leap na een bepaalde maand of na elke maand in een jaar. Bijvoorbeeld, de <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>methode retourneert een getal van 1 tot en met 13 de maand die zijn gekoppeld aan een opgegeven datum geeft.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Als er een maand leap tussen de achtste en achtste maand van het jaar, de <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>methode retourneert 8 voor de achtste maand 9 voor de leap achtste maand en 10 voor de achtste maand.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Int32
      description: "Een positief geheel getal van 1 tot en met 13 de leap maand in het opgegeven jaar en Era-waarde geeft.       - of - nul als deze kalender biedt geen ondersteuning voor een maand leap, of als de <code> year </code> en <code> era </code> parameters een schrikkeljaar niet opgeeft."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert de maand van de opgegeven datum."
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een geheel getal van 1 tot en met 13 dat staat voor de maand die is opgegeven in de <code> time </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent het aantal maanden in het opgegeven jaar en Era-waarde."
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Int32
      description: "Het aantal maanden in het opgegeven jaar in de opgegeven Era-waarde. De retourwaarde is 12 maanden in een algemene jaar of 13 maanden in een schrikkeljaar."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>of <code>era</code> valt buiten het bereik dat wordt ondersteund door deze kalender."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  id: GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetSexagenaryYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent het jaar in de cyclus van sexagenary (60 jaar) die overeenkomt met de opgegeven datum."
  syntax:
    content: public virtual int GetSexagenaryYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Een <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een getal tussen 1 en 60 in de sexagenary cyclus die overeenkomt met de <code> date </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  id: GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetTerrestrialBranch(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Berekent de terrestrische vertakking van het opgegeven jaar in de cyclus van een sexagenary (60 jaar)."
  syntax:
    content: public int GetTerrestrialBranch (int sexagenaryYear);
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: "Een geheel getal tussen 1 en 60 die een jaar in de sexagenary cyclus vertegenwoordigt."
    return:
      type: System.Int32
      description: "Een geheel getal tussen 1 en 12."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sexagenaryYear</code>is kleiner dan 1 of groter zijn dan 60."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert het jaar in de opgegeven datum."
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "De <xref:System.DateTime>te lezen.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Een geheel getal dat staat voor het jaar in de opgegeven <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee wordt bepaald of de opgegeven datum in de opgegeven era per dag leap."
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: month
      type: System.Int32
      description: "Een geheel getal van 1 tot en met 13 dat de maand aangeeft."
    - id: day
      type: System.Int32
      description: "Een geheel getal tussen 1 en 31 dat de dag aangeeft."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven dag een dag leap; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, of <code>era</code> valt buiten het bereik dat wordt ondersteund door deze kalender."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee wordt bepaald of de opgegeven maand in het opgegeven jaar en era een maand leap."
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: month
      type: System.Int32
      description: "Een geheel getal van 1 tot en met 13 dat de maand aangeeft."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <code> month </code> parameter is een maand leap; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, of <code>era</code> valt buiten het bereik dat wordt ondersteund door deze kalender."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hiermee wordt bepaald of het opgegeven jaar in de opgegeven era een schrikkeljaar is."
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het opgegeven jaar een schrikkeljaar; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>of <code>era</code> valt buiten het bereik dat wordt ondersteund door deze kalender."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retourneert een <xref:System.DateTime>die is ingesteld op de opgegeven datum en tijd era.</xref:System.DateTime>"
  remarks: "De methode ToDateTime kunt een datum in de huidige kalender converteren naar een datum Gregoriaanse kalender. De Gregoriaanse datum kan vervolgens worden gebruikt, bijvoorbeeld datums in verschillende agenda&quot;s vergelijken of een equivalente datum in een bepaalde kalender maken."
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Een geheel getal dat het jaar voorstelt."
    - id: month
      type: System.Int32
      description: "Een geheel getal van 1 tot en met 13 dat de maand aangeeft."
    - id: day
      type: System.Int32
      description: "Een geheel getal tussen 1 en 31 dat de dag aangeeft."
    - id: hour
      type: System.Int32
      description: "Een geheel getal tussen 0 en 23 dat het uur voorstelt."
    - id: minute
      type: System.Int32
      description: "Een geheel getal tussen 0 en 59 dat de minuut voorstelt."
    - id: second
      type: System.Int32
      description: "Een geheel getal tussen 0 en 59 dat de seconde voorstelt."
    - id: millisecond
      type: System.Int32
      description: "Een geheel getal tussen 0 en 999 die aangeeft welke milliseconde."
    - id: era
      type: System.Int32
      description: "Een geheel getal dat de Era-waarde vertegenwoordigt."
    return:
      type: System.DateTime
      description: "Een <xref:System.DateTime>die is ingesteld op de opgegeven datum en tijd era.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, <code>millisecond</code>, of <code>era</code> valt buiten het bereik dat wordt ondersteund door deze kalender."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Het opgegeven jaar wordt omgezet in een jaar met vier cijfers."
  remarks: "De methode ToFourDigitYear gebruikt de <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>eigenschap om te bepalen van de juiste honderd jaar.</xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>       ToFourDigitYear ondersteunt jaartallen met twee of een jaar met vier cijfers. Het doorgeven van een waarde met twee cijfers (minder dan 100) zorgt ervoor dat de methode de waarde niet converteren naar een waarde van vier cijfers volgens de <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>-waarde voor de juiste honderd jaar.</xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A> Als de toepassing een met vier cijfers-jaarwaarde die binnen het bereik van de ondersteunde kalender tot ToFourDigitYear levert, wordt de methode de werkelijke waarde van de invoer retourneert. Als de toepassing levert een waarde van vier cijfers die buiten het bereik van de ondersteunde agenda, of als dit een negatieve waarde levert, genereert de methode een uitzondering."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Een jaartallen met twee of vier cijfers geheel getal dat staat voor het jaar in om te converteren."
    return:
      type: System.Int32
      description: "Een geheel getal dat de weergave van vier cijfers van bevat de <code> year </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>valt buiten het bereik dat wordt ondersteund door deze kalender."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Opgehaald of ingesteld van het afgelopen jaar van een bereik van 100 jaar die kan worden gerepresenteerd door jaartallen met 2."
  remarks: "Deze eigenschap kunt een jaar 2 cijfers correct worden omgezet in een jaar in 4 cijfers. In de Gregoriaanse als deze eigenschap is ingesteld op 2029, is het bereik van 100 jaar bijvoorbeeld van 1930 naar 2029. Daarom is een waarde van 2 cijfers van 30 geïnterpreteerd als 1930, terwijl een waarde van 2 cijfers van 29 wordt geïnterpreteerd als 2029.       De eerste waarde van deze eigenschap wordt afgeleid van de instellingen in het gedeelte van de opties land- en taalinstellingen van het Configuratiescherm. Deze informatie kunt echter wijzigen tijdens de levensduur van de <xref:System.AppDomain>.</xref:System.AppDomain> De <xref:System.Globalization.EastAsianLunisolarCalendar>klasse detecteert geen wijzigingen in de instellingen van het automatisch.</xref:System.Globalization.EastAsianLunisolarCalendar>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Het afgelopen jaar van een bereik van 100 jaar die kan worden gerepresenteerd door jaartallen met 2."
  overload: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De huidige <xref href=&quot;System.Globalization.EastAsianLunisolarCalendar&quot;> </xref> is alleen-lezen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De waarde in een set-bewerking is minder dan 99 of groter dan het maximum aantal ondersteunde jaar in de huidige kalender."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
  fullName: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetCelestialStem(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetSexagenaryYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetTerrestrialBranch(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddMonths
  nameWithType: EastAsianLunisolarCalendar.AddMonths
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddYears
  nameWithType: EastAsianLunisolarCalendar.AddYears
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetCelestialStem
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonth
  nameWithType: EastAsianLunisolarCalendar.GetMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetSexagenaryYear
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetTerrestrialBranch
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetYear
  nameWithType: EastAsianLunisolarCalendar.GetYear
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: EastAsianLunisolarCalendar.ToDateTime
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
