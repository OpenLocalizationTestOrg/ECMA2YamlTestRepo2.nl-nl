### YamlMime:ManagedReference
items:
- uid: System.ConsoleCancelEventArgs
  id: ConsoleCancelEventArgs
  children:
  - System.ConsoleCancelEventArgs.Cancel
  - System.ConsoleCancelEventArgs.SpecialKey
  langs:
  - csharp
  name: ConsoleCancelEventArgs
  nameWithType: ConsoleCancelEventArgs
  fullName: System.ConsoleCancelEventArgs
  type: Class
  summary: "Biedt gegevens voor de <xref href=&quot;System.Console.CancelKeyPress&quot;> </xref> gebeurtenis. Deze klasse kan niet worden overgenomen."
  remarks: "Een gebruiker kan een toepassing consoleproces worden onderbroken door tegelijkertijd op de <xref:System.ConsoleModifiers>toets en de <xref:System.ConsoleKey>console sleutel (Ctrl + C) of de <xref:System.ConsoleModifiers>aanpassingsfunctie sleutel en de toets Break-console (Ctrl + Break).</xref:System.ConsoleModifiers> </xref:System.ConsoleKey> </xref:System.ConsoleModifiers> .NET Framework als gevolg daarvan bevat een ConsoleCancelEventArgs-object op voor de gebeurtenis-handler voor de <xref:System.Console.CancelKeyPress?displayProperty=fullName>gebeurtenis om op te geven of het proces moet worden geannuleerd.</xref:System.Console.CancelKeyPress?displayProperty=fullName>       Als de <xref:System.ConsoleCancelEventArgs.Cancel%2A>eigenschap is ingesteld op `true` in de gebeurtenis-handler het proces wordt hervat; anders wordt het proces wordt beëindigd.</xref:System.ConsoleCancelEventArgs.Cancel%2A> De waarde van de eigenschap ConsoleCancelEventArgs is standaard `false`, en het proces wordt beëindigd."
  example:
  - "The following example demonstrates how to use the ConsoleCancelEventArgs class to handle an event.  \n  \n [!code-cs[console.cancelkeypress#1](~/add/codesnippet/csharp/t-system.consolecancelev_1_1.cs)]\n [!code-cpp[console.cancelkeypress#1](~/add/codesnippet/cpp/t-system.consolecancelev_1_1.cpp)]\n [!code-vb[console.cancelkeypress#1](~/add/codesnippet/visualbasic/t-system.consolecancelev_1_1.vb)]"
  syntax:
    content: 'public sealed class ConsoleCancelEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ConsoleCancelEventArgs.Cancel
  id: Cancel
  parent: System.ConsoleCancelEventArgs
  langs:
  - csharp
  name: Cancel
  nameWithType: ConsoleCancelEventArgs.Cancel
  fullName: System.ConsoleCancelEventArgs.Cancel
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of tegelijkertijd op de <xref href=&quot;System.ConsoleModifiers&quot;> </xref> toets en de <xref href=&quot;System.ConsoleKey&quot;> </xref> console sleutel (Ctrl + C) of de toetsen Ctrl + Break beëindigt het huidige proces. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, waarvan het huidige proces wordt beëindigd."
  remarks: "De eigenschap annuleren automatisch wordt geïnitialiseerd op `false` wanneer de handler voor de <xref:System.Console.CancelKeyPress>gebeurtenis wordt aangeroepen.</xref:System.Console.CancelKeyPress> De waarde van de eigenschap annuleren wanneer de gebeurtenis-handler is voltooid bepaalt of het huidige proces wordt hervat of beëindigd.       In een set-bewerking nadat Ctrl + C drukt, opgeven `true` om aan te geven dat het huidige proces hervatten moet wanneer de gebeurtenis-handler concludeert de domeincontroller, of `false` om aan te geven dat het huidige proces moet worden beëindigd."
  example:
  - "The following example demonstrates how to use the Cancel property to handle an event.  \n  \n [!code-cs[console.cancelkeypress#1](~/add/codesnippet/csharp/p-system.consolecancelev_0_1.cs)]\n [!code-cpp[console.cancelkeypress#1](~/add/codesnippet/cpp/p-system.consolecancelev_0_1.cpp)]\n [!code-vb[console.cancelkeypress#1](~/add/codesnippet/visualbasic/p-system.consolecancelev_0_1.vb)]"
  syntax:
    content: public bool Cancel { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het huidige proces moet hervatten wanneer de gebeurtenis-handler concludeert de domeincontroller; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als het huidige proces moet worden beëindigd. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>; het huidige proces beëindigd wanneer de gebeurtenis-handler retourneert. Als <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, het huidige proces wordt voortgezet."
  overload: System.ConsoleCancelEventArgs.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleCancelEventArgs.SpecialKey
  id: SpecialKey
  parent: System.ConsoleCancelEventArgs
  langs:
  - csharp
  name: SpecialKey
  nameWithType: ConsoleCancelEventArgs.SpecialKey
  fullName: System.ConsoleCancelEventArgs.SpecialKey
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hiermee haalt u de combinatie van de aanpassingsfunctie en console sleutels die het huidige proces wordt onderbroken."
  remarks: ''
  example:
  - "The following example demonstrates how to use the SpecialKey property to handle an event.  \n  \n [!code-cs[console.cancelkeypress#1](~/add/codesnippet/csharp/p-system.consolecancelev_1_1.cs)]\n [!code-cpp[console.cancelkeypress#1](~/add/codesnippet/cpp/p-system.consolecancelev_1_1.cpp)]\n [!code-vb[console.cancelkeypress#1](~/add/codesnippet/visualbasic/p-system.consolecancelev_1_1.vb)]"
  syntax:
    content: public ConsoleSpecialKey SpecialKey { get; }
    return:
      type: System.ConsoleSpecialKey
      description: "Een van de opsommingswaarden die Hiermee geeft u de toetscombinatie die het huidige proces wordt onderbroken. Er is geen standaardwaarde."
  overload: System.ConsoleCancelEventArgs.SpecialKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.ConsoleCancelEventArgs.Cancel
  parent: System.ConsoleCancelEventArgs
  isExternal: false
  name: Cancel
  nameWithType: ConsoleCancelEventArgs.Cancel
  fullName: System.ConsoleCancelEventArgs.Cancel
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleCancelEventArgs.SpecialKey
  parent: System.ConsoleCancelEventArgs
  isExternal: false
  name: SpecialKey
  nameWithType: ConsoleCancelEventArgs.SpecialKey
  fullName: System.ConsoleCancelEventArgs.SpecialKey
- uid: System.ConsoleSpecialKey
  parent: System
  isExternal: false
  name: ConsoleSpecialKey
  nameWithType: ConsoleSpecialKey
  fullName: System.ConsoleSpecialKey
- uid: System.ConsoleCancelEventArgs.Cancel*
  parent: System.ConsoleCancelEventArgs
  isExternal: false
  name: Cancel
  nameWithType: ConsoleCancelEventArgs.Cancel
- uid: System.ConsoleCancelEventArgs.SpecialKey*
  parent: System.ConsoleCancelEventArgs
  isExternal: false
  name: SpecialKey
  nameWithType: ConsoleCancelEventArgs.SpecialKey
