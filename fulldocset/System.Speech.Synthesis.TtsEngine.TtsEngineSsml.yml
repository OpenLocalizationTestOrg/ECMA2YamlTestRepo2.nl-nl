### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  id: TtsEngineSsml
  children:
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  langs:
  - csharp
  name: TtsEngineSsml
  nameWithType: TtsEngineSsml
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  type: Class
  summary: "Abstracte basisklasse door alle tekst-naar-spraak synthese engines moeten worden uitgevoerd."
  remarks: "Kan een aangepaste tekst-naar-spraak-engine, moet een klasse die is afgeleid van de abstracte basisklasse TtsEngineSsml altijd implementeren door een toepassing.       Een correct geregistreerde implementatie van TtsEngineSsml kan vervolgens worden gebruikt als een `Synthesizer``Voice` door <xref:System.Speech.Synthesis>naamruimte op basis van toepassingen.</xref:System.Speech.Synthesis>       Objecten overgenomen van TtsEngineSsml, moet de volgende leden overschrijven: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A>en <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>       Het belangrijkste lid van de klasse TtsEngineSsml worden geïmplementeerd de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>methode.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>       De <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>methode wordt aangeroepen door de infrastructuur tekst parser ontvangen: 1.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  Een verwijzing naar de <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>interface, waardoor toegang tot de systeemservices biedt zoals zelfs queuing en audio-uitvoer schrijven.</xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>      2.  Een matrix van <xref:System.Speech.Synthesis.TtsEngine.TextFragment>exemplaar gemaakt van spraak synthese Markup Language (SSML)-invoer.</xref:System.Speech.Synthesis.TtsEngine.TextFragment> Naast de tekst die moet worden gerenderd als spraak, informatie over de aangevraagde kenmerken van de spraak in het parseren van de SSML slaat een <xref:System.Speech.Synthesis.TtsEngine.FragmentState>exemplaar die zijn gekoppeld aan elke binnenkomende <xref:System.Speech.Synthesis.TtsEngine.TextFragment>object.</xref:System.Speech.Synthesis.TtsEngine.TextFragment> </xref:System.Speech.Synthesis.TtsEngine.FragmentState>       Een toepassing van de synthesizer spraak eventueel aanvragen voor de indeling van een opgegeven uitvoer kunt maken door het implementeren van <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A>moet worden aangeroepen door het platform als er wordt geprobeerd om de juiste audio-uitvoer.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A>       Een implementeerder biedt ook ondersteuning voor het beheren van externe definities van de uitspraak of lexicons, door de implementatie van <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>en <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> </xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>"
  syntax:
    content: public abstract class TtsEngineSsml
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: TtsEngineSsml(String)
  nameWithType: TtsEngineSsml.TtsEngineSsml(String)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.TtsEngineSsml(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Hiermee wordt een nieuw exemplaar van <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEngineSsml&quot;> </xref> op basis van een Token inspreken registersleutel."
  remarks: "Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a `Synthesizer``Voice` to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.  \n  \n A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens."
  syntax:
    content: protected TtsEngineSsml (string registryKey);
    parameters:
    - id: registryKey
      type: System.String
      description: "Volledige naam van de registersleutel voor de Voice-Token is gekoppeld aan de <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEngineSsml&quot;> </xref> implementatie. -Engine."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  id: AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: AddLexicon(Uri,String,ITtsEngineSite)
  nameWithType: TtsEngineSsml.AddLexicon(Uri,String,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(Uri,String,ITtsEngineSite)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Voegt een lexicon naar de <xref uid=&quot;langword_csharp_Synthesizer&quot; name=&quot;Synthesizer&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Voice&quot; name=&quot;Voice&quot; href=&quot;&quot;> </xref> geïmplementeerd door de huidige <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEngineSsml&quot;> </xref> exemplaar."
  remarks: "Een lexicon uitspraak is een verzameling van woorden of zinnen samen met hun uitspraak opgegeven met een juiste uitspraak alfabet.       Deze methode wordt doorgaans aangeroepen door het infrastructuurplatform in reactie op een <xref:System.Speech.Synthesis>gebaseerde toepassingen AddLexicon aanroepen en het gebruik van de `Synthesizer``Voice` geïmplementeerd door de huidige <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>exemplaar.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> </xref:System.Speech.Synthesis>       De waarde van `mediaType` is meestal een MIME-specificatie, zoals de SSML-specificatie MIME voor mediaspecificaties gebruikt."
  example:
  - "The implementation of AddLexicon uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource. It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.  \n  \n```  \npublic static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  \n  \n public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  \n    Stream stream = site.LoadResource(uri, mediaType);  \n    _aLexicons.Add(uri, stream);  \n}  \n  \n public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  \n     Stream stream;  \n     if (_aLexicons.TryGetValue(uri, out stream)) {  \n         stream.Close();  \n         _aLexicons.Remove(uri);  \n     }  \n}  \n  \n```"
  syntax:
    content: public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);
    parameters:
    - id: uri
      type: System.Uri
      description: "Een geldig exemplaar van <xref uid=&quot;langword_csharp_System.Uri&quot; name=&quot;System.Uri&quot; href=&quot;&quot;> </xref> die wijzen op de locatie van de gegevens van het lexicon."
    - id: mediaType
      type: System.String
      description: "Een tekenreeks met het mediumtype van het lexicon. Typen media zijn niet hoofdlettergevoelig."
    - id: site
      type: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
      description: "Een verwijzing naar een <xref href=&quot;System.Speech.Synthesis.TtsEngine.ITtsEngineSite&quot;> </xref> interface die wordt gebruikt om te communiceren met de platforminfrastructuur."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)
  id: GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: GetOutputFormat(SpeakOutputFormat,IntPtr)
  nameWithType: TtsEngineSsml.GetOutputFormat(SpeakOutputFormat,IntPtr)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(SpeakOutputFormat,IntPtr)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Retourneert de best overeenkomende audio-uitvoer wordt ondersteund door een opgegeven synthesize-engine-reactie op een aanvraag voor de synthesizer-engine voor de ondersteuning van een bepaalde uitvoerindeling."
  remarks: "De structuur die wordt gebruikt als `targetWaveFormat` en geretourneerd door de methode moet compatibel zijn met de `WAVEFORMATEX` onder SAPI, en de geretourneerde waarde moet worden toegewezen met behulp van `CoTaskMemAlloc`.       De `struct` moet gelijk zijn aan functionaliteit bieden:```   internal struct WaveFormat   {       public Int16 FormatTag;       public Int16 Channels;       public int SamplesPerSec;       public int AvgBytesPerSec;       public Int16 BlockAlign;       public Int16 BitsPerSample;       public Int16 Size;   }   ```"
  example:
  - "The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.  \n  \n```  \npublic IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  \n    WaveFormat waveFormat = new WaveFormat();  \n    WaveFormat rq=new WaveFormat();  \n    Marshal.PtrToStructure(targetWaveFormat,rq);  \n  \n    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  \n    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  \n    waveFormat.BlockAlign = 2;  \n    waveFormat.Channels = 1;  \n    waveFormat.FormatTag = 1;  \n    waveFormat.SamplesPerSec = 16000;  \n    waveFormat.Size = 0;  \n  \n    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  \n    Marshal.StructureToPtr(waveFormat, wfx, false);  \n  \n    //Console.WriteLine (\"GetOutputFormat called\");  \n    return wfx;  \n}  \ninternal struct WaveFormat {  \n    public Int16 FormatTag;  \n    public Int16 Channels;  \n    public int SamplesPerSec;  \n    public int AvgBytesPerSec;  \n    public Int16 BlockAlign;  \n    public Int16 BitsPerSample;  \n    public Int16 Size;  \n}  \n```"
  syntax:
    content: public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);
    parameters:
    - id: speakOutputFormat
      type: System.Speech.Synthesis.TtsEngine.SpeakOutputFormat
      description: "Geldig lid van de <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeakOutputFormat&quot;> </xref> inventarisatie het type van de indeling van de aangevraagde audio-uitvoer."
    - id: targetWaveFormat
      type: System.IntPtr
      description: "Een verwijzing naar een <xref uid=&quot;langword_csharp_struct&quot; name=&quot;struct&quot; href=&quot;&quot;> </xref> met details-instelling voor het type audio-indeling is aangevraagd door de `speakOutputFormat` argument."
    return:
      type: System.IntPtr
      description: "Retourneert een geldige <xref uid=&quot;langword_csharp_IntPtr&quot; name=&quot;IntPtr&quot; href=&quot;&quot;> </xref> exemplaar verwijst naar een <xref uid=&quot;langword_csharp_struct&quot; name=&quot;struct&quot; href=&quot;&quot;> </xref> met gedetailleerde informatie over de indeling van de uitvoer."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  id: RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: RemoveLexicon(Uri,ITtsEngineSite)
  nameWithType: TtsEngineSsml.RemoveLexicon(Uri,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(Uri,ITtsEngineSite)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Hiermee verwijdert u een lexicon die momenteel zijn geladen door de <xref uid=&quot;langword_csharp_Synthesizer&quot; name=&quot;Synthesizer&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Voice&quot; name=&quot;Voice&quot; href=&quot;&quot;> </xref> geïmplementeerd door de huidige <xref href=&quot;System.Speech.Synthesis.TtsEngine.TtsEngineSsml&quot;> </xref> exemplaar."
  remarks: "Een lexicon uitspraak is een verzameling van woorden of zinnen samen met hun uitspraak opgegeven met een juiste uitspraak alfabet.       Deze methode wordt doorgaans aangeroepen in reactie op een <xref:System.Speech.Synthesis>op basis van toepassingen die aanroepen <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A>en het gebruik van de `Synthesizer``Voice` geïmplementeerd door de huidige <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>exemplaar.</xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> </xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> </xref:System.Speech.Synthesis>"
  example:
  - "The implementation of RemoveLexicon uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.  \n  \n```  \npublic static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  \n  \n public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  \n    Stream stream = site.LoadResource(uri, mediaType);  \n    _aLexicons.Add(uri, stream);  \n}  \n  \n public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  \n     Stream stream;  \n     if (_aLexicons.TryGetValue(uri, out stream)) {  \n         stream.Close();  \n         _aLexicons.Remove(uri);  \n     }  \n}  \n```"
  syntax:
    content: public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);
    parameters:
    - id: uri
      type: System.Uri
      description: "Een geldig exemplaar van <xref uid=&quot;langword_csharp_System.Uri&quot; name=&quot;System.Uri&quot; href=&quot;&quot;> </xref> die wijzen op de locatie van de gegevens van het lexicon."
    - id: site
      type: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
      description: "Een verwijzing naar een <xref href=&quot;System.Speech.Synthesis.TtsEngine.ITtsEngineSite&quot;> </xref> interface doorgegeven door de platforminfrastructuur voor het toestaan van toegang tot de infrastructuurresources."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  id: Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  langs:
  - csharp
  name: Speak(TextFragment[],IntPtr,ITtsEngineSite)
  nameWithType: TtsEngineSsml.Speak(TextFragment[],IntPtr,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(TextFragment[],IntPtr,ITtsEngineSite)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Opgegeven uitgevoerd <xref href=&quot;System.Speech.Synthesis.TtsEngine.TextFragment&quot;> </xref> matrix in de indeling van de opgegeven uitvoer."
  remarks: "De structuur die wordt gebruikt als `waveHeader` en geretourneerd door de methode moet compatibel zijn met de `WAVEFORMATEX` onder SAPI beschikbaar.       De `struct` moet gelijk zijn aan functionaliteit bieden:```   internal struct WaveFormat   {       public Int16 FormatTag;       public Int16 Channels;       public int SamplesPerSec;       public int AvgBytesPerSec;       public Int16 BlockAlign;       public Int16 BitsPerSample;       public Int16 Size;   }   ```"
  example:
  - "The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \n  \n The implementation of Speak  \n  \n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \n  \n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \n  \n    -   Translates Americanism to Britishisms in the text to be spoken.  \n  \n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \n  \n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \n  \n```  \nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { ' ', '\\t', '\\r', '\\n' };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n  \noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n  \n  for (int i=0;i<frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n  \n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n        offset += s.Length;  \n        if (s.Trim().Length > 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n    _baseSynthesize.Speak(newFrags, wfx, site);  \n  \n}  \n```"
  syntax:
    content: public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);
    parameters:
    - id: fragment
      type: System.Speech.Synthesis.TtsEngine.TextFragment[]
      description: "Een matrix van <xref href=&quot;System.Speech.Synthesis.TtsEngine.TextFragment&quot;> </xref> exemplaren met de tekst die moet worden gerenderd in spraak."
    - id: waveHeader
      type: System.IntPtr
      description: "Een <xref uid=&quot;langword_csharp_IntPtr&quot; name=&quot;IntPtr&quot; href=&quot;&quot;> </xref> die verwijst naar een structuur met audio-uitvoer-indeling."
    - id: site
      type: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
      description: "Een verwijzing naar een <xref href=&quot;System.Speech.Synthesis.TtsEngine.ITtsEngineSite&quot;> </xref> interface doorgegeven door de platforminfrastructuur voor het toestaan van toegang tot de infrastructuurresources."
  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: TtsEngineSsml(String)
  nameWithType: TtsEngineSsml.TtsEngineSsml(String)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.TtsEngineSsml(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: AddLexicon(Uri,String,ITtsEngineSite)
  nameWithType: TtsEngineSsml.AddLexicon(Uri,String,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(Uri,String,ITtsEngineSite)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: ITtsEngineSite
  nameWithType: ITtsEngineSite
  fullName: System.Speech.Synthesis.TtsEngine.ITtsEngineSite
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: GetOutputFormat(SpeakOutputFormat,IntPtr)
  nameWithType: TtsEngineSsml.GetOutputFormat(SpeakOutputFormat,IntPtr)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(SpeakOutputFormat,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Speech.Synthesis.TtsEngine.SpeakOutputFormat
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: SpeakOutputFormat
  nameWithType: SpeakOutputFormat
  fullName: System.Speech.Synthesis.TtsEngine.SpeakOutputFormat
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: RemoveLexicon(Uri,ITtsEngineSite)
  nameWithType: TtsEngineSsml.RemoveLexicon(Uri,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(Uri,ITtsEngineSite)
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: Speak(TextFragment[],IntPtr,ITtsEngineSite)
  nameWithType: TtsEngineSsml.Speak(TextFragment[],IntPtr,ITtsEngineSite)
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(TextFragment[],IntPtr,ITtsEngineSite)
- uid: System.Speech.Synthesis.TtsEngine.TextFragment[]
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: TextFragment
  nameWithType: TextFragment
  fullName: System.Speech.Synthesis.TtsEngine.TextFragment[]
  spec.csharp:
  - uid: System.Speech.Synthesis.TtsEngine.TextFragment
    name: TextFragment
    nameWithType: TextFragment
    fullName: TextFragment[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: TtsEngineSsml
  nameWithType: TtsEngineSsml.TtsEngineSsml
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: AddLexicon
  nameWithType: TtsEngineSsml.AddLexicon
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: GetOutputFormat
  nameWithType: TtsEngineSsml.GetOutputFormat
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: RemoveLexicon
  nameWithType: TtsEngineSsml.RemoveLexicon
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak*
  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml
  isExternal: false
  name: Speak
  nameWithType: TtsEngineSsml.Speak
