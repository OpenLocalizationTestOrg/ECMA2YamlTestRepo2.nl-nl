### YamlMime:ManagedReference
items:
- uid: System.Windows.EventManager
  id: EventManager
  children:
  - System.Windows.EventManager.GetRoutedEvents
  - System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  - System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  langs:
  - csharp
  name: EventManager
  nameWithType: EventManager
  fullName: System.Windows.EventManager
  type: Class
  summary: "Biedt gebeurtenissen gerelateerde hulpprogrammamethoden die gerouteerde gebeurtenissen registreren voor eigenaren van de klasse en klasse-handlers toevoegen."
  remarks: "Deze klasse wordt meestal gebruikt voor het registreren van een nieuwe gerouteerde gebeurtenis met <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>       De tweede meest voorkomende [!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)] gebruik <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A> is Deze methode kunt u de verwerking van de klasse van een gerouteerde gebeurtenis voor de klasse of een gekoppelde gebeurtenis inschakelen. Zie voor meer informatie [gerouteerd gebeurtenissen markeren als Handled en verwerken van klasse](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example show how to use this class to register a new routed event as a class member, along with the routed event \"wrapper\" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event.  \n  \n [!code-cs[DPCustom#EventManagerClass](~/add/codesnippet/csharp/DPCustom/default.xaml.cs#eventmanagerclass)]\n [!code-vb[DPCustom#EventManagerClass](~/add/codesnippet/visualbasic/dpcustom/default.xaml.vb#eventmanagerclass)]"
  syntax:
    content: public static class EventManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.EventManager.GetRoutedEvents
  id: GetRoutedEvents
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: GetRoutedEvents()
  nameWithType: EventManager.GetRoutedEvents()
  fullName: System.Windows.EventManager.GetRoutedEvents()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Retourneert de id&quot;s voor gerouteerde gebeurtenissen die zijn geregistreerd bij het gebeurtenissysteem."
  remarks: "Meer <xref:System.Windows.RoutedEvent>objecten kunnen later worden geregistreerd.</xref:System.Windows.RoutedEvent> Deze methode een momentopname opgehaald en de verzameling van gerouteerde gebeurtenissen beschrijfbare tijdens de levensduur van een toepassing is. De verzameling geretourneerd kan behoorlijk groot zijn. Zelfs tellen van de gebeurtenissen die deel van uitmaken de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)], het aantal verzamelingen is in hoge honderden."
  syntax:
    content: public static System.Windows.RoutedEvent[] GetRoutedEvents ();
    parameters: []
    return:
      type: System.Windows.RoutedEvent[]
      description: "Een matrix van het type <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> die de geregistreerde objecten bevat."
  overload: System.Windows.EventManager.GetRoutedEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  id: GetRoutedEventsForOwner(System.Type)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: GetRoutedEventsForOwner(Type)
  nameWithType: EventManager.GetRoutedEventsForOwner(Type)
  fullName: System.Windows.EventManager.GetRoutedEventsForOwner(Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Zoeken naar alle gerouteerde gebeurtenis-id&quot;s voor gebeurtenissen die zijn geregistreerd met het eigenaarstype van de opgegeven."
  syntax:
    content: public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);
    parameters:
    - id: ownerType
      type: System.Type
      description: "Het type wilt beginnen met zoeken met. Basisklassen opgenomen in de zoekopdracht."
    return:
      type: System.Windows.RoutedEvent[]
      description: "Een matrix van gerouteerde gebeurtenis-id&quot;s overeenkomen, als een overeenkomst wordt gevonden; anders <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.EventManager.GetRoutedEventsForOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  id: RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterClassHandler(Type,RoutedEvent,Delegate)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Een klasse-handler voor een bepaalde gerouteerde gebeurtenis registreert."
  remarks: "Verwerking van de klasse is een functie die beschikbaar is voor gerouteerde gebeurtenissen, met inbegrip van gekoppelde gebeurtenissen die worden geïmplementeerd met gerouteerde gebeurtenis back-ups maken. Een klasse-handler is vergelijkbaar met een statische handler die voor alle exemplaren van de klasse bestaat. Omdat de handler statisch is, u kunt eigenschappen van objectexemplaar rechtstreeks met een klasse-handler niet wijzigen, maar u toegang hebt tot exemplaren via de `sender` parameter en/of de gebeurtenisgegevens worden opgeslagen.       Klasse-handlers worden aangeroepen vóór exemplaar handlers. U kunt een klasse-handler die het gedrag van de gebeurtenis is gemarkeerd als verwerkt implementeren. Handlers voor een gebeurtenis verwerkt klasse exemplaar zijn daarom niet aangeroepen, tenzij de exemplaar-handlers specifiek voor verwerkte gebeurtenissen registreren.       Veel van de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] basiselement gebeurtenissen geven klasse afhandeling van virtuele methoden. Deze methoden in klassen die overnemen van de basisklassen overschrijft, kunt u een klasse verwerken zonder RegisterClassHandler aanroepen in de statische constructors implementeren. Deze klasse verwerking methoden bestaan voor invoervelden doorgaans en hebben namen die beginnen met &quot;Op&quot; en eindigen met de naam van de gebeurtenis wordt verwerkt klasse.       Zie voor meer informatie over het afhandelen van de klasse [gerouteerd gebeurtenissen markeren als Handled en verwerken van klasse](~/add/includes/ajax-current-ext-md.md).       Met deze handtekening, klasse-handlers geregistreerd om aan te roepen in reactie op niet-verwerkte gebeurtenissen. U kunt ook registreren klasse-handlers om aan te roepen, zelfs als de gebeurtenisargumenten verwerkt, zijn gemarkeerd met behulp van de <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>handtekening met `handledEventsToo` ingesteld op `true`.</xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>"
  example:
  - "The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling RegisterClassHandler.  \n  \n [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#staticandregisterclasshandler)]\n [!code-cs[ClassHandling#StaticAndRegisterClassHandler](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]"
  syntax:
    content: public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: classType
      type: System.Type
      description: "Het type van de klasse die de verwerking van de klasse is het declareren."
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "De gerouteerde gebeurtenis-id van de gebeurtenis te verwerken."
    - id: handler
      type: System.Delegate
      description: "Een verwijzing naar de implementatie van de klasse-handler."
  overload: System.Windows.EventManager.RegisterClassHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  id: RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Een klasse-handler voor een bepaalde gerouteerde gebeurtenis registreert met de optie voor het verwerken van gebeurtenissen waarbij gebeurtenisgegevens is al gemarkeerd als verwerkt."
  remarks: "Verwerking van de klasse is een functie die beschikbaar is voor gerouteerde gebeurtenissen, met inbegrip van gekoppelde gebeurtenissen die worden geïmplementeerd met gerouteerde gebeurtenis back-ups maken. Een klasse-handler is vergelijkbaar met een statische handler die voor alle exemplaren van de klasse bestaat. Omdat de handler statisch is, u kunt eigenschappen van objectexemplaar rechtstreeks met een klasse-handler niet wijzigen, maar u toegang hebt tot exemplaren via de `sender` parameter en/of de gebeurtenisgegevens worden opgeslagen.       Klasse-handlers worden aangeroepen vóór exemplaar handlers. U kunt een klasse-handler die het gedrag van de gebeurtenis is gemarkeerd als verwerkt implementeren. Handlers voor een gebeurtenis verwerkt klasse exemplaar zijn daarom niet aangeroepen, tenzij de exemplaar-handlers specifiek voor verwerkte gebeurtenissen registreren.       Veel van de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] basiselement gebeurtenissen geven klasse afhandeling van virtuele methoden. Deze methoden in klassen die overnemen van de basisklassen overschrijft, kunt u een klasse verwerken zonder aanroepen implementeren <xref:System.Windows.EventManager.RegisterClassHandler%2A>in statische constructors.</xref:System.Windows.EventManager.RegisterClassHandler%2A> Deze klasse verwerking methoden bestaan voor invoervelden doorgaans en hebben namen die beginnen met &quot;Op&quot; en eindigen met de naam van de gebeurtenis wordt verwerkt klasse.       Zie voor meer informatie over het afhandelen van de klasse [gerouteerd gebeurtenissen markeren als Handled en verwerken van klasse](~/add/includes/ajax-current-ext-md.md).       Met deze handtekening, klasse-handlers kunnen worden geregistreerd om aan te roepen bij verwerkte gebeurtenissen door in te stellen `handledEventsToo` ingesteld op `true`. In het algemeen Doe dit alleen als er een probleem met de verwerking van bekende die u probeert te omzeilen, zoals invoer systeem verwerken van gebeurtenissen muis en toetsenbord."
  syntax:
    content: public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);
    parameters:
    - id: classType
      type: System.Type
      description: "Het type van de klasse die de verwerking van de klasse is het declareren."
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "De gerouteerde gebeurtenis-id van de gebeurtenis te verwerken."
    - id: handler
      type: System.Delegate
      description: "Een verwijzing naar de implementatie van de klasse-handler."
    - id: handledEventsToo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt aanroepen van deze klasse-handler, zelfs als argumenten van de gerouteerde gebeurtenis zijn gemarkeerd als verwerkt; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> moet worden bewaard van het standaardgedrag van de handler op een gebeurtenis gemarkeerd als verwerkt niet wordt aangeroepen."
  overload: System.Windows.EventManager.RegisterClassHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  id: RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  nameWithType: EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  fullName: System.Windows.EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Registreert een nieuw gerouteerde gebeurtenis met de [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] systeem van gebeurtenissen."
  remarks: "De geretourneerde waarde van deze methode gebruiken om te maken van het statische-declaratie voor een unieke <xref:System.Windows.RoutedEvent>id-veld.</xref:System.Windows.RoutedEvent> Dit veld moet worden opgeslagen in het eigenaarstype.       Er zijn een aanzienlijk aantal overeenkomsten en aanbevolen procedures die zijn gekoppeld aan hoe gerouteerde gebeurtenissen moeten worden met de naam, geregistreerd en worden weergegeven in een klasse. Zie voor meer informatie [gerouteerd gebeurtenissen overzicht](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de gerouteerde gebeurtenis. De naam moet uniek zijn binnen het eigenaarstype en mag geen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of een lege tekenreeks."
    - id: routingStrategy
      type: System.Windows.RoutingStrategy
      description: "De routing-strategie van de gebeurtenis als een waarde van de inventarisatie."
    - id: handlerType
      type: System.Type
      description: "Het type van de gebeurtenis-handler. Dit moet een type gemachtigde zijn en mag niet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: ownerType
      type: System.Type
      description: "Het type van de klasse eigenaar van de gerouteerde gebeurtenis. Dit kan niet worden <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.RoutedEvent
      description: "De id voor de zojuist geregistreerde gerouteerde gebeurtenis. Deze id-object kan worden opgeslagen als een statisch veld in een klasse en vervolgens worden gebruikt als parameter voor methoden die handlers aan de gebeurtenis koppelen. De gerouteerde gebeurtenis-id wordt ook gebruikt voor andere system gebeurtenis [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]."
  overload: System.Windows.EventManager.RegisterRoutedEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.EventManager.GetRoutedEvents
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEvents()
  nameWithType: EventManager.GetRoutedEvents()
  fullName: System.Windows.EventManager.GetRoutedEvents()
- uid: System.Windows.RoutedEvent[]
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent[]
  spec.csharp:
  - uid: System.Windows.RoutedEvent
    name: RoutedEvent
    nameWithType: RoutedEvent
    fullName: RoutedEvent[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEventsForOwner(Type)
  nameWithType: EventManager.GetRoutedEventsForOwner(Type)
  fullName: System.Windows.EventManager.GetRoutedEventsForOwner(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler(Type,RoutedEvent,Delegate)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  nameWithType: EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  fullName: System.Windows.EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.RoutingStrategy
  parent: System.Windows
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutingStrategy
  fullName: System.Windows.RoutingStrategy
- uid: System.Windows.EventManager.GetRoutedEvents*
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEvents
  nameWithType: EventManager.GetRoutedEvents
- uid: System.Windows.EventManager.GetRoutedEventsForOwner*
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEventsForOwner
  nameWithType: EventManager.GetRoutedEventsForOwner
- uid: System.Windows.EventManager.RegisterClassHandler*
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler
  nameWithType: EventManager.RegisterClassHandler
- uid: System.Windows.EventManager.RegisterRoutedEvent*
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterRoutedEvent
  nameWithType: EventManager.RegisterRoutedEvent
