### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.RegistryAuditRule
  id: RegistryAuditRule
  children:
  - System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.RegistryAuditRule.RegistryRights
  langs:
  - csharp
  name: RegistryAuditRule
  nameWithType: RegistryAuditRule
  fullName: System.Security.AccessControl.RegistryAuditRule
  type: Class
  summary: "Hiermee geeft u een set rechten moeten worden gecontroleerd voor een gebruiker of groep. Deze klasse kan niet worden overgenomen."
  remarks: "De klasse RegistryAuditRule is een van de klassen die het .NET Framework biedt voor het beheren van Windows-toegangsbeveiliging voor registersleutels. Zie voor een overzicht van deze klassen en hun relatie tot de onderliggende Windows access control-structuren, <xref:System.Security.AccessControl.RegistrySecurity>.</xref:System.Security.AccessControl.RegistrySecurity>      > [!NOTE] > Toegangsbeveiliging van Windows kan alleen worden toegepast op de registersleutels. Deze kan niet worden toegepast op afzonderlijke sleutel/waarde-paren die zijn opgeslagen in een sleutel.       Als u een lijst van de audit-regels die momenteel wordt toegepast op een registersleutel, gebruikt de <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>methode om op te halen een <xref:System.Security.AccessControl.RegistrySecurity>object en gebruik vervolgens de <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>methode voor het verkrijgen van een verzameling objecten RegistryAuditRule.</xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> </xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>       RegistryAuditRule objecten niet zijn toegewezen-op-een met vermeldingen voor toegangsbeheer in de onderliggende discretionary access control list (DACL&quot;s). Als u krijgt de set controleren van alle regels voor een registersleutel, de set bevat het minimum aantal regels momenteel moeten alle de vermeldingen voor toegangsbeheer express.      > [!NOTE] > De onderliggende vermeldingen voor toegangsbeheer wijzigen bij het toepassen en regels te verwijderen. De informatie in de regels samengevoegd, indien mogelijk, zodat het kleinste aantal vermeldingen voor toegangsbeheer. Dus bij het lezen van de huidige lijst met regels deze mogelijk niet precies hetzelfde uitzien als de lijst met alle regels die u hebt toegevoegd.       RegistryAuditRule objecten gebruiken om op te geven van rechten moeten worden gecontroleerd voor een gebruiker of groep. Een regel in een registersleutel toepassen, gebruikt u de <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>methode voor het ophalen van de <xref:System.Security.AccessControl.RegistrySecurity>object.</xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName> Wijzig de <xref:System.Security.AccessControl.RegistrySecurity>object met behulp van de bijbehorende methoden toevoegen van de regel en gebruik vervolgens de <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName>methode voor opnieuw koppelen van het object.</xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.RegistrySecurity>      > [!IMPORTANT] > Wijzigingen die u aanbrengt in een <xref:System.Security.AccessControl.RegistrySecurity>object hebben geen invloed op de toegangsniveaus van de registersleutel totdat u de <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName>methode het gewijzigde object toewijzen aan de registersleutel.</xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.RegistrySecurity>       RegistryAuditRule objecten zijn niet-wijzigbaar. Beveiliging voor een registersleutel worden gewijzigd met behulp van de methoden van de <xref:System.Security.AccessControl.RegistrySecurity>klasse toevoegen of verwijderen van regels; als u dit doet, de onderliggende vermeldingen voor toegangsbeheer zijn gewijzigd.</xref:System.Security.AccessControl.RegistrySecurity>"
  syntax:
    content: 'public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.AccessControl.RegistryAuditRule&quot;> </xref> klasse, geven de gebruiker of groep die u wilt controleren, de rechten voor het controleren of overname in aanmerking en of u wilt controleren geslaagd of mislukt."
  remarks: "All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  \n  \n|Propagation flags|S|CS|GS|  \n|-----------------------|-------|--------|--------|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X||  \n|<xref:System.Security.AccessControl.PropagationFlags>||X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>||X||  \n  \n The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  \n  \n For example, if the <xref:System.Security.AccessControl.InheritanceFlags> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  \n  \n> [!NOTE]\n>  Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag for `inheritanceFlags`, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags> flag. Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules."
  syntax:
    content: public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "De gebruiker of groep die de regel van toepassing op. Moet van het type <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> of een type zoals <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> die kunnen worden omgezet naar het type <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: "Een bitsgewijze combinatie van <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> waarden opgeven van de soorten toegang om te controleren."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Een bitsgewijze combinatie van <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> waarden opgeven of de controleregel betrekking op subsleutels van de huidige sleutel heeft."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Een bitsgewijze combinatie van <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> waarden die invloed hebben op de manier waarop een overgenomen controleregel is doorgegeven aan subsleutels van de huidige sleutel."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Een bitsgewijze combinatie van <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> waarden die aangeeft of audit geslaagd of mislukt."
  overload: System.Security.AccessControl.RegistryAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Hiermee geeft u een ongeldige waarde.       - of - <code>flags</code> bevat een ongeldige waarde.       - of - <code>inheritanceFlags</code> bevat een ongeldige waarde.       - of - <code>propagationFlags</code> bevat een ongeldige waarde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>registryRights</code> gelijk is aan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>is geen van beide van het type <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> of van een type zoals <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> die kunnen worden omgezet naar het type <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.AccessControl.RegistryAuditRule&quot;> </xref> klasse, de naam van de gebruiker of groep wilt controleren, de rechten heeft om te controleren, of overname rekening en of moet worden gecontroleerd geslaagd, mislukt of beide opgeven."
  remarks: "All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  \n  \n|Propagation flags|S|CS|GS|  \n|-----------------------|-------|--------|--------|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X||  \n|<xref:System.Security.AccessControl.PropagationFlags>||X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>||X||  \n  \n The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  \n  \n For example, if the <xref:System.Security.AccessControl.InheritanceFlags> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  \n  \n> [!NOTE]\n>  Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag for `inheritanceFlags`, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags> flag. Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.  \n  \n This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructor."
  syntax:
    content: public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "De naam van de gebruiker of groep die de regel van toepassing op."
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: "Een bitsgewijze combinatie van <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> waarden opgeven van de soorten toegang om te controleren."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Een combinatie van <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> vlaggen die aangeeft of de controleregel betrekking heeft op subsleutels van de huidige sleutel."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Een combinatie van <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> vlaggen die invloed hebben op de manier waarop een overgenomen controleregel is doorgegeven aan subsleutels van de huidige sleutel."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Een bitsgewijze combinatie van <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> waarden die aangeeft of audit geslaagd of mislukt."
  overload: System.Security.AccessControl.RegistryAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Hiermee geeft u een ongeldige waarde.       - of - <code>flags</code> bevat een ongeldige waarde.       - of - <code>inheritanceFlags</code> bevat een ongeldige waarde.       - of - <code>propagationFlags</code> bevat een ongeldige waarde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>registryRights</code>is gelijk aan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - of - <code>identity</code> is een tekenreeks met lengte nul.       - of - <code>identity</code> is langer dan 512 tekens."
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  id: RegistryRights
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hiermee wordt de toegangsrechten die van invloed op een door de controleregel opgehaald."
  remarks: "<xref:System.Security.AccessControl.RegistryAuditRule>objecten zijn niet-wijzigbaar.</xref:System.Security.AccessControl.RegistryAuditRule> Kunt u een nieuwe audit-regel voor een andere gebruiker, verschillende rechten of een andere combinatie van <xref:System.Security.AccessControl.AuditFlags>vlaggen, maar u een bestaande audit-regel niet wijzigen.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public System.Security.AccessControl.RegistryRights RegistryRights { get; }
    return:
      type: System.Security.AccessControl.RegistryRights
      description: "Een bitsgewijze combinatie van <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> waarden die de rechten die van invloed op een door de controleregel worden aangegeven."
  overload: System.Security.AccessControl.RegistryAuditRule.RegistryRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryRights
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor*
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule
  nameWithType: RegistryAuditRule.RegistryAuditRule
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights*
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
