### YamlMime:ManagedReference
items:
- uid: System.Configuration.IPersistComponentSettings
  id: IPersistComponentSettings
  children:
  - System.Configuration.IPersistComponentSettings.LoadComponentSettings
  - System.Configuration.IPersistComponentSettings.ResetComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveSettings
  - System.Configuration.IPersistComponentSettings.SettingsKey
  langs:
  - csharp
  name: IPersistComponentSettings
  nameWithType: IPersistComponentSettings
  fullName: System.Configuration.IPersistComponentSettings
  type: Interface
  summary: "Standaardfuncties voor besturingselementen of bibliotheken die opslaan en ophalen van toepassingsinstellingen definieert."
  remarks: "U kunt instellingen toepassingsondersteuning doorgaans toevoegen aan een toepassing door het maken van een wrapper-klasse, die is afgeleid van <xref:System.Configuration.ApplicationSettingsBase>, en vervolgens speciale eigenschappen toevoegen aan deze klasse.</xref:System.Configuration.ApplicationSettingsBase> Echter heeft deze benadering niet voldoende inkapselen toepassingsinstellingen voor een besturingselement dat de container is afgeschermd van de details. De interface IPersistComponentSettings biedt een toepassing met een standaardinterface voor het verzenden van aanvragen van toepassingen instellingen status wijzigen naar een besturingselement of onderdeel bibliotheek-module. Ontwerptijd extra is ook afhankelijk zijn van deze interface voor een goed beheer van besturingselementen en onderdelen."
  syntax:
    content: public interface IPersistComponentSettings
  implements: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  id: LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Toepassingsinstellingen van het besturingselement in de bijbehorende eigenschappen leest en updates van de status van het besturingselement."
  remarks: "In het algemeen de methode LoadComponentSettings twee essentiÃ«le bewerkingen uitvoert:-het ervoor zorgt dat elk exemplaar van de toepassing deel uitmaken van het besturingselement de waarden van eigenschappen voor de toepassing, meestal vernieuwen door het aanroepen van hun <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>methoden.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>      -Als vereist, wordt de algemene eigenschappen die afhankelijk van deze instellingen opnieuw geladen eigenschappen zijn bijgewerkt. Als de klasse instellingen bevat bijvoorbeeld een `location` eigenschap voor instellingen, LoadComponentSettings moet ervoor zorgen dat het besturingselement <xref:System.Windows.Forms.Control.Location%2A>eigenschap wordt bijgewerkt met deze instelling opnieuw geladen.</xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: public void LoadComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  id: ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hiermee stelt de toepassingseigenschappen instellingen van het besturingselement op hun standaardwaarden."
  remarks: "De implementatie van de methode ResetComponentSettings roept meestal de <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>methode voor elk exemplaar van een toepassing instellingen klasse bevat.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public void ResetComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  id: SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Persistente toepassingseigenschappen voor instellingen van het besturingselement."
  remarks: "De methode SaveComponentSettings schrijft de waarden van eigenschappen van het besturingselement voor toepassing naar de gekoppelde gegevensopslag. De gegevens opslaan en serialisatie techniek die maakt gebruik van de methode wordt bepaald door de provider van de instellingen die zijn gekoppeld aan elke klasse instellingen via de <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> U kunt de keuze van de provider van instellingen overschrijven met behulp van de <xref:System.Configuration.ISettingsProviderService>interface.</xref:System.Configuration.ISettingsProviderService>      > [!NOTE] > Als de <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>eigenschap is `true`, het besturingselement moet aanroepen SaveComponentSettings in een eigen <xref:System.Windows.Forms.Control.Dispose%2A>methode zodat de gegevens van de configuratie van het besturingselement wordt automatisch opgeslagen voordat de toepassing is afgelopen.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>"
  syntax:
    content: public void SaveComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  id: SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of het besturingselement automatisch de eigenschappen van de instellingen van toepassing moet handhaven."
  remarks: "Als een besturingselement configuratiegegevens bevat, wordt het doorgaans deze gegevens in reactie op een expliciete aanroep behouden de <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>methode of soms impliciet wanneer het besturingselement <xref:System.Windows.Forms.Control.Dispose%2A>methode wordt aangeroepen.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> De eigenschap SaveSettings bepaalt of een besturingselement automatisch blijft gehandhaafd in de configuratiegegevens wanneer deze is verwijderd.       De standaardwaarde van SaveSettings is afhankelijk van de implementatie van het besturingselement. De documentatie voor het besturingselement moet aangeven die gebruikmaakt van toepassingsinstellingen, welke gegevens worden bewaard en wat de standaardwaarde van de eigenschap SaveSettings is."
  example:
  - "The following code example shows the proper way for a control to check the value of the SaveSettings property before it attempts to automatically persist its configuration data.  \n  \n `protected override void Dispose( bool disposing ) {`  \n  \n `if(disposing) {`  \n  \n `try {`  \n  \n `if (SaveSettings) {`  \n  \n `SaveComponentSettings();`  \n  \n `}`  \n  \n `}`  \n  \n `finally {`  \n  \n `//...`  \n  \n `}`  \n  \n `}`"
  syntax:
    content: public bool SaveSettings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het besturingselement automatisch de status; handhaven moet. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.IPersistComponentSettings.SaveSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  id: SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Opgehaald of ingesteld van de waarde van de sleutel van de instellingen van toepassing voor het huidige exemplaar van het besturingselement."
  remarks: "Gebruik de eigenschap SettingsKey te onderscheiden van groepen van instellingen toepassingseigenschappen wanneer er meerdere exemplaren van dezelfde wrapperklasse. Bijvoorbeeld, als een besturingselement een bijbehorende wrapperklasse bevat, leidt meerdere exemplaren van hetzelfde besturingselement op te slaan in dezelfde toepassing doorgaans tot meerdere exemplaren van de wrapperklasse. Een sleutel-instellingen is alleen vereist als de configuratiegegevens per exemplaar worden ingeschakeld verschilt. de locatie van besturingselementen dynamisch geplaatst.       De volgende algemene regels toepassen op het gebruik van SettingsKey:-een besturingselement, zoals een klasse kan nul of meer toepassingen instellingsklassen, bevatten afgeleid van <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Elke klasse instellingen bevat een eigen <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>eigenschap waarmee heffen meerdere exemplaren van die klasse.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>      -Een besturingselement moet de gegevens per exemplaar en de gedeelde gegevens verdelen in verschillende instellingsklassen.      -Voor een besturingselement met alle configuratiegegevens per exemplaar de `get` accessor van de eigenschap SettingsKey standaard moet worden ingesteld voor de <xref:System.Windows.Forms.Control.Name%2A>van het besturingselement.</xref:System.Windows.Forms.Control.Name%2A> In de meeste gevallen wordt de naam van het besturingselement niet uniek zijn binnen een toepassing. Als het besturingselement bevat alleen configuratiegegevens, gedeelde `get` standaard moet worden ingesteld op `null`.      -De `set` accessor voor deze eigenschap moet worden geÃ¯mplementeerd om te onderscheiden instellingsklassen die per exemplaar en gedeelde configuratiegegevens bevat. Voor elke klasse die de gegevens per exemplaar, `set` moet alleen Pass Through-query voor de <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>eigenschap van de klasse instellingen.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName> Voor instellingsklassen met gedeelde gegevens `set` geen actie voor die klasse instellingen moet uitvoeren."
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "Een <xref:System.String>dat de instellingensleutel voor het huidige exemplaar van het besturingselement bevat.</xref:System.String>"
  overload: System.Configuration.IPersistComponentSettings.SettingsKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings
  nameWithType: IPersistComponentSettings.LoadComponentSettings
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings
  nameWithType: IPersistComponentSettings.ResetComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings
  nameWithType: IPersistComponentSettings.SaveComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
- uid: System.Configuration.IPersistComponentSettings.SettingsKey*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
