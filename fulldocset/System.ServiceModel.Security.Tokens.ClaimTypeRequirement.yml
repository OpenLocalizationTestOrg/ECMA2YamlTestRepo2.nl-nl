### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  id: ClaimTypeRequirement
  children:
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  langs:
  - csharp
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  type: Class
  summary: "Hiermee geeft u de typen van vereiste en optionele claims in de federatieve referentie verwacht."
  remarks: "In een federatieve scenario-services de vereisten van binnenkomende referenties staat. Bijvoorbeeld, de binnenkomende referenties moeten beschikken over een bepaalde set claimtypen. Deze vereiste wordt overgenomen in een beveiligingsbeleid. Wanneer een client een beveiligingstoken aanvraagt van een service voor beveiligingstokens (bijvoorbeeld [!INCLUDE[infocard](~/add/includes/infocard-md.md)]), wordt de vereisten in een tokenaanvraag geplaatst zodat de service voor beveiligingstokens kan het beveiligingstoken dat voldoet aan de eisen dienovereenkomstig uitgeven."
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/t-system.servicemodel.se_14_1.cs)]  \n  \n The following config file is used with the preceding code.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public class ClaimTypeRequirement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimTypeRequirement(String)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;> </xref> klasse voor een vereiste claim van het opgegeven type."
  remarks: "De vooraf gedefinieerde claimtypen kunnen worden gevonden op <xref:System.IdentityModel.Claims.ClaimTypes>.</xref:System.IdentityModel.Claims.ClaimTypes>"
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/82f0f677-aea6-40fd-b2fa-_1.cs)]"
  syntax:
    content: public ClaimTypeRequirement (string claimType);
    parameters:
    - id: claimType
      type: System.String
      description: "Het claimtype."
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimTypeRequirement(String,Boolean)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;> </xref> klasse voor een claim van het opgegeven type."
  remarks: ''
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/5f45f1b5-1008-4244-927f-_1.cs)]"
  syntax:
    content: public ClaimTypeRequirement (string claimType, bool isOptional);
    parameters:
    - id: claimType
      type: System.String
      description: "Het claimtype."
    - id: isOptional
      type: System.Boolean
      description: "Als <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, de claim is vereist, anders, dit is optioneel."
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  id: ClaimType
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Het claimtype die is opgegeven in de constructor opgehaald."
  remarks: "Deze eigenschap is een URI die het type van een claim definieert.  Bijvoorbeeld, als u wilt aanschaffen van een product van een website, moet de gebruiker opleveren een geldige creditcard voldoende limiet. Het claimtype zou de creditcard URI zijn."
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UEClaimTypeRequirement#2](~/add/codesnippet/csharp/p-system.servicemodel.se_5_1.cs)]"
  syntax:
    content: public string ClaimType { get; }
    return:
      type: System.String
      description: "Het claimtype."
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  id: IsOptional
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Haalt een waarde die aangeeft of de claim optioneel is."
  remarks: "Een voorbeeld van het gebruik van deze eigenschap is het scenario waarin de service vraagt om bepaalde informatie, maar geen vereist. Bijvoorbeeld: u moet uw voornaam, de achternaam en het adres invoeren, maar uw telefoonnummer is optioneel."
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UEClaimTypeRequirement#2](~/add/codesnippet/csharp/p-system.servicemodel.se_17_1.cs)]"
  syntax:
    content: public bool IsOptional { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als dit exemplaar van de klasse een optionele claim is; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als een vereiste claim is opgegeven."
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement(String)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement(String,Boolean)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
