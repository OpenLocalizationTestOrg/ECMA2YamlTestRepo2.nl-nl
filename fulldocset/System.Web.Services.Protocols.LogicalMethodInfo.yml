### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  id: LogicalMethodInfo
  children:
  - System.Web.Services.Protocols.LogicalMethodInfo.#ctor(System.Reflection.MethodInfo)
  - System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter
  - System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter
  - System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter
  - System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)
  - System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo
  - System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[])
  - System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)
  - System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider
  - System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType
  - System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)
  - System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo
  - System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(System.Type)
  - System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(System.Type)
  - System.Web.Services.Protocols.LogicalMethodInfo.InParameters
  - System.Web.Services.Protocols.LogicalMethodInfo.Invoke(System.Object,System.Object[])
  - System.Web.Services.Protocols.LogicalMethodInfo.IsAsync
  - System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(System.Reflection.MethodInfo)
  - System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(System.Reflection.MethodInfo)
  - System.Web.Services.Protocols.LogicalMethodInfo.IsVoid
  - System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo
  - System.Web.Services.Protocols.LogicalMethodInfo.Name
  - System.Web.Services.Protocols.LogicalMethodInfo.OutParameters
  - System.Web.Services.Protocols.LogicalMethodInfo.Parameters
  - System.Web.Services.Protocols.LogicalMethodInfo.ReturnType
  - System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider
  - System.Web.Services.Protocols.LogicalMethodInfo.ToString
  langs:
  - csharp
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
  type: Class
  summary: "Hiermee geeft u de kenmerken en de metagegevens voor een methode voor de XML-webservice. Deze klasse kan niet worden overgenomen."
  remarks: "LogicalMethodInfo is used primarily by a SOAP extension to interrogate the details of the XML Web service method with which the SOAP extension is configured to run. Depending on how the SOAP extension is configured, it can find out details about the XML Web service method in the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method of <xref:System.Web.Services.Protocols.SoapExtension> that takes a LogicalMethodInfo. The LogicalMethodInfo provides details such as the XML Web service method's parameters by accessing the <xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> property and any custom attributes applied to the XML Web service method using the <xref:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes%2A> property.  \n  \n For more details on SOAP extensions see the <xref:System.Web.Services.Protocols.SoapExtension> class or [&#91;\\<topic://cpconAlteringSOAPMessageUsingSOAPExtensions>&#93;](http://msdn.microsoft.com/en-us/97d81ace-95e7-4acc-ae39-9692a0021e95)."
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public sealed class LogicalMethodInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.#ctor(System.Reflection.MethodInfo)
  id: '#ctor(System.Reflection.MethodInfo)'
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: LogicalMethodInfo(MethodInfo)
  nameWithType: LogicalMethodInfo.LogicalMethodInfo(MethodInfo)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.LogicalMethodInfo(MethodInfo)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> klasse met de <xref:System.Reflection.MethodInfo>doorgegeven in.</xref:System.Reflection.MethodInfo>"
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Constructor#1](~/add/codesnippet/csharp/33539594-3d11-433f-bfe7-_1.cs)]
     [!code-cpp[LogicalMethodInfo_Constructor#1](~/add/codesnippet/cpp/33539594-3d11-433f-bfe7-_1.cpp)]
     [!code-vb[LogicalMethodInfo_Constructor#1](~/add/codesnippet/visualbasic/33539594-3d11-433f-bfe7-_1.vb)]
  syntax:
    content: public LogicalMethodInfo (System.Reflection.MethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: "Een <xref:System.Reflection.MethodInfo>initialiseren van de eigenschappen van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> gemeenschappelijk zijn voor de <xref:System.Reflection.MethodInfo>.</xref:System.Reflection.MethodInfo> </xref:System.Reflection.MethodInfo>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De &lt;xref:System.Reflection.MethodBase.IsStatic%2A?displayProperty=fullName&gt; eigenschap van de <code> methodInfo </code> parameter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       - of - de &lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt; methode van de <code> methodInfo </code> parameter bevat niet alle parameters vereist zijn voor de methode die wordt vertegenwoordigd door het exemplaar van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter
  id: AsyncCallbackParameter
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: AsyncCallbackParameter
  nameWithType: LogicalMethodInfo.AsyncCallbackParameter
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee haalt u de parameterinformatie voor de <code> AsyncCallback </code> parameter van een Begin-methode in een asynchrone aanroep."
  remarks: "The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation. The `Begin` method takes two additional parameters besides the parameters defined by the synchronous version of the method: one to store a delegate and one to store any state information that needs to be passed on to the delegate. This property represents the parameter for the delegate with a parameter name of `AsyncCallback`.  \n  \n For more information on invoking XML Web services asynchronously, see [&#91;\\<topic://cpconInvokingWebServicesAsynchronously>&#93;](http://msdn.microsoft.com/en-us/f9e26a43-063a-440a-8c73-a02f2ccf3ea0)."
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create2#1](~/add/codesnippet/csharp/p-system.web.services.pr_64_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create2#1](~/add/codesnippet/cpp/p-system.web.services.pr_64_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create2#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_64_1.vb)]
  syntax:
    content: public System.Reflection.ParameterInfo AsyncCallbackParameter { get; }
    return:
      type: System.Reflection.ParameterInfo
      description: "Een <xref:System.Reflection.ParameterInfo>die vertegenwoordigt de <code> AsyncCallback </code> parameter van een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> aanroepen van de asynchrone methode.</xref:System.Reflection.ParameterInfo>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter
  id: AsyncResultParameter
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: AsyncResultParameter
  nameWithType: LogicalMethodInfo.AsyncResultParameter
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Haalt de geretourneerde waarde van een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> aanroepen van de asynchrone methode."
  remarks: "The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation. The `Begin` method typically returns immediately with an object implementing the <xref:System.IAsyncResult> interface, which can then be passed to the `End` method at a later time to complete the asynchronous method invocation. The returned object implementing the <xref:System.IAsyncResult> interface is represented by this property.  \n  \n For more information on invoking XML Web services asynchronously, see [&#91;\\<topic://cpconInvokingWebServicesAsynchronously>&#93;](http://msdn.microsoft.com/en-us/f9e26a43-063a-440a-8c73-a02f2ccf3ea0)."
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create2#1](~/add/codesnippet/csharp/p-system.web.services.pr_38_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create2#1](~/add/codesnippet/cpp/p-system.web.services.pr_38_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create2#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_38_1.vb)]
  syntax:
    content: public System.Reflection.ParameterInfo AsyncResultParameter { get; }
    return:
      type: System.Reflection.ParameterInfo
      description: "Een <xref:System.Reflection.ParameterInfo>die vertegenwoordigt de <xref:System.IAsyncResult>geretourneerd van een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> aanroepen van de asynchrone methode.</xref:System.IAsyncResult> </xref:System.Reflection.ParameterInfo>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter
  id: AsyncStateParameter
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: AsyncStateParameter
  nameWithType: LogicalMethodInfo.AsyncStateParameter
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee haalt u de parameterinformatie voor de <code> AsyncState </code> parameter van een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> methode in een asynchrone aanroep."
  remarks: "The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation. The `Begin` method takes two additional parameters besides the parameters defined by the synchronous version of the method: one to store a delegate and one to store any state information that needs to be passed on to the delegate. This property represents the state information that needs to be passed into the delegate.  \n  \n For more information on invoking XML Web services asynchronously, see [&#91;\\<topic://cpconInvokingWebServicesAsynchronously>&#93;](http://msdn.microsoft.com/en-us/f9e26a43-063a-440a-8c73-a02f2ccf3ea0)."
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create2#1](~/add/codesnippet/csharp/p-system.web.services.pr_25_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create2#1](~/add/codesnippet/cpp/p-system.web.services.pr_25_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create2#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_25_1.vb)]
  syntax:
    content: public System.Reflection.ParameterInfo AsyncStateParameter { get; }
    return:
      type: System.Reflection.ParameterInfo
      description: "Een <xref:System.Reflection.ParameterInfo>die vertegenwoordigt de <code> AsyncState </code> parameter van een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> methode in een asynchrone aanroep.</xref:System.Reflection.ParameterInfo>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)
  id: BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: BeginInvoke(Object,Object[],AsyncCallback,Object)
  nameWithType: LogicalMethodInfo.BeginInvoke(Object,Object[],AsyncCallback,Object)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(Object,Object[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Een asynchrone aanroep van de methode die wordt vertegenwoordigd door dit begint <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_BeginInvoke#1](~/add/codesnippet/csharp/4cf5df3f-128a-4f09-9f34-_1.cs)]
     [!code-vb[LogicalMethodInfo_BeginInvoke#1](~/add/codesnippet/visualbasic/4cf5df3f-128a-4f09-9f34-_1.vb)]
     [!code-cpp[LogicalMethodInfo_BeginInvoke#1](~/add/codesnippet/cpp/4cf5df3f-128a-4f09-9f34-_1.cpp)]
  syntax:
    content: public IAsyncResult BeginInvoke (object target, object[] values, AsyncCallback callback, object asyncState);
    parameters:
    - id: target
      type: System.Object
      description: "Het exemplaar van de <xref:System.Object>waarop u de methode op aanroepen.</xref:System.Object>"
    - id: values
      type: System.Object[]
      description: "Een lijst met argumenten voor de aangeroepen methode. Dit is een matrix met objecten met dezelfde nummer, volgorde en type als de parameters van de methode. Als de methode geen parameters vereist, `values` moet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "De gemachtigde aan te roepen wanneer de asynchrone invoke voltooid is. Als `callback` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, de gemachtigde is niet aangeroepen."
    - id: asyncState
      type: System.Object
      description: "Statusgegevens die wordt doorgegeven aan de gemachtigde."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die wordt doorgegeven aan <xref:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke*>om op te halen van de retourwaarden van de methode voor externe aanroep.</xref:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke*> </xref:System.IAsyncResult>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke*
  exceptions:
  - type: System.Reflection.TargetException
    commentId: T:System.Reflection.TargetException
    description: "The <code>target</code> parameteris <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het aantal, het type en de volgorde van parameters in <code> values </code> komen niet overeen met de handtekening van de aangeroepen methode."
  - type: System.MemberAccessException
    commentId: T:System.MemberAccessException
    description: "De aanroeper is niet gemachtigd de methode aan te roepen."
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo
  id: BeginMethodInfo
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: BeginMethodInfo
  nameWithType: LogicalMethodInfo.BeginMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Haalt de kenmerken en de metagegevens voor een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> methode in een asynchrone aanroep."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create2#1](~/add/codesnippet/csharp/p-system.web.services.pr_4_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create2#1](~/add/codesnippet/cpp/p-system.web.services.pr_4_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create2#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_4_1.vb)]
  syntax:
    content: public System.Reflection.MethodInfo BeginMethodInfo { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "Een <xref:System.Reflection.MethodInfo>die de kenmerken en de metagegevens voor een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> aanroepen van de asynchrone methode.</xref:System.Reflection.MethodInfo>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[])
  id: Create(System.Reflection.MethodInfo[])
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: Create(MethodInfo[])
  nameWithType: LogicalMethodInfo.Create(MethodInfo[])
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Create(MethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Een matrix van gegeven <xref:System.Reflection.MethodInfo>die informatie over zowel asynchrone als synchrone methoden kunnen bevatten, maakt u een matrix van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create1#1](~/add/codesnippet/csharp/c29165ab-1342-4efc-b959-_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create1#1](~/add/codesnippet/cpp/c29165ab-1342-4efc-b959-_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create1#1](~/add/codesnippet/visualbasic/c29165ab-1342-4efc-b959-_1.vb)]
  syntax:
    content: public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Reflection.MethodInfo[]
      description: "Een matrix van <xref:System.Reflection.MethodInfo>de asynchrone als synchrone methoden waarvoor wilt maken die <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> objecten.</xref:System.Reflection.MethodInfo>"
    return:
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Een matrix van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>, die de methoden die in <code> methodInfos </code>."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.Create*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> asynchrone methode is opgenomen in <code> methodInfos </code> zonder een bijbehorende <xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;> </xref> methode."
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)
  id: Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: Create(MethodInfo[],LogicalMethodTypes)
  nameWithType: LogicalMethodInfo.Create(MethodInfo[],LogicalMethodTypes)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Create(MethodInfo[],LogicalMethodTypes)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Een matrix van gegeven <xref:System.Reflection.MethodInfo>, waarbij de geretourneerde matrix van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> kunnen worden beperkt tot alleen asynchrone en synchrone methoden, maakt u een matrix van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create2#1](~/add/codesnippet/csharp/dac222c9-9fa0-4192-889b-_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create2#1](~/add/codesnippet/cpp/dac222c9-9fa0-4192-889b-_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create2#1](~/add/codesnippet/visualbasic/dac222c9-9fa0-4192-889b-_1.vb)]
  syntax:
    content: public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] methodInfos, System.Web.Services.Protocols.LogicalMethodTypes types);
    parameters:
    - id: methodInfos
      type: System.Reflection.MethodInfo[]
      description: "Een matrix van <xref:System.Reflection.MethodInfo>de asynchrone als synchrone methoden waarvoor wilt maken die <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> objecten.</xref:System.Reflection.MethodInfo>"
    - id: types
      type: System.Web.Services.Protocols.LogicalMethodTypes
      description: "Een bitsgewijze combinatie van de <xref href=&quot;System.Web.Services.Protocols.LogicalMethodTypes&quot;> </xref> waarden. Bepaalt of synchrone of asynchrone methoden of beide zijn opgenomen in de geretourneerde matrix van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
    return:
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Een matrix van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>, die de methoden die in <code> methodInfos </code>, gefilterd door de waarde van <code> types </code>."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.Create*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> asynchrone methode is opgenomen in <code> methodInfos </code> zonder een bijbehorende <xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;> </xref> methode."
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider
  id: CustomAttributeProvider
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: CustomAttributeProvider
  nameWithType: LogicalMethodInfo.CustomAttributeProvider
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee haalt u de aangepaste kenmerken die aan de methode wordt toegepast."
  remarks: ''
  example:
  - >-
    [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/cpp/p-system.web.services.pr_8_1.cpp)]
     [!code-cs[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/csharp/p-system.web.services.pr_8_1.cs)]
     [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/visualbasic/p-system.web.services.pr_8_1.vb)]
  syntax:
    content: public System.Reflection.ICustomAttributeProvider CustomAttributeProvider { get; }
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "Een <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> die de aangepaste kenmerken voor de methode vertegenwoordigt."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType
  id: DeclaringType
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: LogicalMethodInfo.DeclaringType
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "De klasse die de methode die wordt vertegenwoordigd door de huidige declareert opgehaald <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
  remarks: "De eigenschap DeclaringType haalt een verwijzing naar een <xref:System.Type>voor het type dat dit lid declareert.</xref:System.Type> Een lid van een klasse (of interface) is gedeclareerd of overgenomen van een basisklasse (of interface). De geretourneerde <xref:System.Type>mogelijk niet hetzelfde zijn als de <xref:System.Type>van de klasse die de XML-webservice implementeren (als die klasse is afgeleid van een basisklasse en de methode die wordt vertegenwoordigd door deze klasse is gedeclareerd in die basisklasse wordt de <xref:System.Type>geretourneerd, is de basisklasse).</xref:System.Type> </xref:System.Type> </xref:System.Type>"
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Constructor#1](~/add/codesnippet/csharp/p-system.web.services.pr_39_1.cs)]
     [!code-cpp[LogicalMethodInfo_Constructor#1](~/add/codesnippet/cpp/p-system.web.services.pr_39_1.cpp)]
     [!code-vb[LogicalMethodInfo_Constructor#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_39_1.vb)]
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "De <xref:System.Type>voor de klasse declareren van de methode die wordt vertegenwoordigd door de <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>.</xref:System.Type>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)
  id: EndInvoke(System.Object,System.IAsyncResult)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: EndInvoke(Object,IAsyncResult)
  nameWithType: LogicalMethodInfo.EndInvoke(Object,IAsyncResult)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(Object,IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Een asynchrone aanroep van de methode die wordt vertegenwoordigd door de huidige eindigt <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_BeginInvoke#2](~/add/codesnippet/csharp/70bfcc96-3c47-4d4f-af27-_1.cs)]
     [!code-vb[LogicalMethodInfo_BeginInvoke#2](~/add/codesnippet/visualbasic/70bfcc96-3c47-4d4f-af27-_1.vb)]
     [!code-cpp[LogicalMethodInfo_BeginInvoke#2](~/add/codesnippet/cpp/70bfcc96-3c47-4d4f-af27-_1.cpp)]
  syntax:
    content: public object[] EndInvoke (object target, IAsyncResult asyncResult);
    parameters:
    - id: target
      type: System.Object
      description: "Het exemplaar van de <xref:System.Object>waarop u de methode aan te roepen.</xref:System.Object>"
    - id: asyncResult
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd vanuit <xref:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke*>.</xref:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke*> </xref:System.IAsyncResult>"
    return:
      type: System.Object[]
      description: "Een matrix met objecten met de retourwaarde en eventuele door verwijzing of out-parameters van de afgeleide klasse-methode."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke*
  exceptions:
  - type: System.Reflection.TargetException
    commentId: T:System.Reflection.TargetException
    description: "The <code>target</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.MemberAccessException
    commentId: T:System.MemberAccessException
    description: "De aanroeper is niet gemachtigd de methode aan te roepen."
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "De aangeroepen methode er een uitzondering gegenereerd."
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo
  id: EndMethodInfo
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: EndMethodInfo
  nameWithType: LogicalMethodInfo.EndMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Haalt de kenmerken en de metagegevens voor een <xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;> </xref> methode van een asynchrone aanroep naar een methode."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create2#1](~/add/codesnippet/csharp/p-system.web.services.pr_80_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create2#1](~/add/codesnippet/cpp/p-system.web.services.pr_80_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create2#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_80_1.vb)]
  syntax:
    content: public System.Reflection.MethodInfo EndMethodInfo { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "Een <xref:System.Reflection.MethodInfo>die de kenmerken en de metagegevens voor een <xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;> </xref> aanroepen van de asynchrone methode.</xref:System.Reflection.MethodInfo>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(System.Type)
  id: GetCustomAttribute(System.Type)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: GetCustomAttribute(Type)
  nameWithType: LogicalMethodInfo.GetCustomAttribute(Type)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(Type)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retourneert de eerste aangepaste kenmerk toegepast op het type als eventuele aangepaste kenmerken worden toegepast op het type."
  remarks: ''
  example:
  - >-
    [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/cpp/639f3695-7f4e-41fe-bc5d-_1.cpp)]
     [!code-cs[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/csharp/639f3695-7f4e-41fe-bc5d-_1.cs)]
     [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/visualbasic/639f3695-7f4e-41fe-bc5d-_1.vb)]
  syntax:
    content: public object GetCustomAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>waarop de aangepaste kenmerken zijn toegepast.</xref:System.Type>"
    return:
      type: System.Object
      description: "Een <xref:System.Object>met het eerste aangepaste kenmerk toegepast op de <code> type </code> parameter.</xref:System.Object>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute*
  exceptions:
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: "Het type aangepast kenmerk kan niet worden geladen."
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(System.Type)
  id: GetCustomAttributes(System.Type)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type)
  nameWithType: LogicalMethodInfo.GetCustomAttributes(Type)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(Type)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retourneert de aangepaste kenmerken die zijn toegepast op het opgegeven type."
  remarks: ''
  example:
  - >-
    [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/cpp/c01360a6-e025-410b-ab18-_1.cpp)]
     [!code-cs[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/csharp/c01360a6-e025-410b-ab18-_1.cs)]
     [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/visualbasic/c01360a6-e025-410b-ab18-_1.vb)]
  syntax:
    content: public object[] GetCustomAttributes (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "De <xref:System.Type>waarop de aangepaste kenmerken zijn toegepast.</xref:System.Type>"
    return:
      type: System.Object[]
      description: "Een matrix van <xref:System.Object>met de aangepaste kenmerken die zijn toegepast op <code> type </code>.</xref:System.Object>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes*
  exceptions:
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: "Het type aangepast kenmerk kan niet worden geladen."
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.InParameters
  id: InParameters
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: InParameters
  nameWithType: LogicalMethodInfo.InParameters
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.InParameters
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "De parameters doorgegeven aan de methode die wordt vertegenwoordigd door het exemplaar van opgehaald <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
  remarks: "Een exemplaar van <xref:System.Reflection.ParameterInfo>voor informatie over de parameter-gegevenstype, standaardwaarde, enzovoort.</xref:System.Reflection.ParameterInfo>       InParameters retourneert een matrix van <xref:System.Reflection.ParameterInfo>objecten voor de parameters doorgegeven aan een methode, in volgorde.</xref:System.Reflection.ParameterInfo>"
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create1#1](~/add/codesnippet/csharp/p-system.web.services.pr_55_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create1#1](~/add/codesnippet/cpp/p-system.web.services.pr_55_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create1#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_55_1.vb)]
  syntax:
    content: public System.Reflection.ParameterInfo[] InParameters { get; }
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Een matrix van het type <xref:System.Reflection.ParameterInfo>waarin de parameters doorgegeven aan de methode die wordt vertegenwoordigd door het exemplaar van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>.</xref:System.Reflection.ParameterInfo>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.InParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: Invoke(Object,Object[])
  nameWithType: LogicalMethodInfo.Invoke(Object,Object[])
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Invoke(Object,Object[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Roept de methode die wordt vertegenwoordigd door de huidige <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Constructor#1](~/add/codesnippet/csharp/5ef48647-93c7-4c46-8d10-_1.cs)]
     [!code-cpp[LogicalMethodInfo_Constructor#1](~/add/codesnippet/cpp/5ef48647-93c7-4c46-8d10-_1.cpp)]
     [!code-vb[LogicalMethodInfo_Constructor#1](~/add/codesnippet/visualbasic/5ef48647-93c7-4c46-8d10-_1.vb)]
  syntax:
    content: public object[] Invoke (object target, object[] values);
    parameters:
    - id: target
      type: System.Object
      description: "Het exemplaar van de <xref:System.Object>de methode aan te roepen.</xref:System.Object>"
    - id: values
      type: System.Object[]
      description: "Een lijst met argumenten voor de aangeroepen methode. Dit is een matrix met objecten met dezelfde nummer, volgorde en type als de parameters van de methode. Als de methode geen parameters vereist, de `values` parameter moet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object[]
      description: "Een matrix van het type <xref:System.Object>dat de retourwaarde vertegenwoordigt en out-parameters van de aangeroepen methode.</xref:System.Object>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.Invoke*
  exceptions:
  - type: System.Reflection.TargetException
    commentId: T:System.Reflection.TargetException
    description: "The <code>target</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het aantal, het type en de volgorde van parameters in de <code> values </code> parameter komen niet overeen met de handtekening van de aangeroepen methode."
  - type: System.MemberAccessException
    commentId: T:System.MemberAccessException
    description: "De aanroeper is niet gemachtigd de methode aan te roepen."
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "De aangeroepen methode er een uitzondering gegenereerd."
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsAsync
  id: IsAsync
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: IsAsync
  nameWithType: LogicalMethodInfo.IsAsync
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.IsAsync
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee wordt een waarde die aangeeft of de methode wordt vertegenwoordigd door het exemplaar van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> is asynchroon aangeroepen."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create2#1](~/add/codesnippet/csharp/p-system.web.services.pr_31_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create2#1](~/add/codesnippet/cpp/p-system.web.services.pr_31_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create2#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_31_1.vb)]
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de methode wordt aangeroepen, asynchroon; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(System.Reflection.MethodInfo)
  id: IsBeginMethod(System.Reflection.MethodInfo)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: IsBeginMethod(MethodInfo)
  nameWithType: LogicalMethodInfo.IsBeginMethod(MethodInfo)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(MethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retourneert een waarde die aangeeft of de methode vertegenwoordigt doorgegeven een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> methode van een asynchrone aanroep."
  remarks: ''
  example:
  - >-
    [!code-cpp[LogicalMethodInfo_IsBeginMethod#1](~/add/codesnippet/cpp/16aef9c9-6974-4ce7-8b1a-_1.cpp)]
     [!code-cs[LogicalMethodInfo_IsBeginMethod#1](~/add/codesnippet/csharp/16aef9c9-6974-4ce7-8b1a-_1.cs)]
     [!code-vb[LogicalMethodInfo_IsBeginMethod#1](~/add/codesnippet/visualbasic/16aef9c9-6974-4ce7-8b1a-_1.vb)]
  syntax:
    content: public static bool IsBeginMethod (System.Reflection.MethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: "De <xref:System.Reflection.MethodInfo>die mogelijk een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> methode van een asynchrone aanroep.</xref:System.Reflection.MethodInfo>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <code> methodInfo </code> -parameter is een <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> methode van een asynchrone aanroep; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(System.Reflection.MethodInfo)
  id: IsEndMethod(System.Reflection.MethodInfo)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: IsEndMethod(MethodInfo)
  nameWithType: LogicalMethodInfo.IsEndMethod(MethodInfo)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(MethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retourneert een waarde die aangeeft of de methode vertegenwoordigt doorgegeven een <xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;> </xref> methode van een asynchrone aanroep."
  remarks: ''
  example:
  - >-
    [!code-cpp[LogicalMethodInfo_IsBeginMethod#2](~/add/codesnippet/cpp/0b6247ff-723e-4877-83bb-_1.cpp)]
     [!code-cs[LogicalMethodInfo_IsBeginMethod#2](~/add/codesnippet/csharp/0b6247ff-723e-4877-83bb-_1.cs)]
     [!code-vb[LogicalMethodInfo_IsBeginMethod#2](~/add/codesnippet/visualbasic/0b6247ff-723e-4877-83bb-_1.vb)]
  syntax:
    content: public static bool IsEndMethod (System.Reflection.MethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: "De <xref:System.Reflection.MethodInfo>die mogelijk een <xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;> </xref> methode van een asynchrone aanroep.</xref:System.Reflection.MethodInfo>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <code> methodInfo </code> -parameter is een <xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;> </xref> methode van een asynchrone aanroep; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsVoid
  id: IsVoid
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: IsVoid
  nameWithType: LogicalMethodInfo.IsVoid
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.IsVoid
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee wordt een waarde die aangeeft of het retourtype voor de methode wordt vertegenwoordigd door het exemplaar van <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> is <xref uid=&quot;langword_csharp_void&quot; name=&quot;void&quot; href=&quot;&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create1#1](~/add/codesnippet/csharp/p-system.web.services.pr_46_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create1#1](~/add/codesnippet/cpp/p-system.web.services.pr_46_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create1#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_46_1.vb)]
  syntax:
    content: public bool IsVoid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het retourtype void; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.IsVoid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo
  id: MethodInfo
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: MethodInfo
  nameWithType: LogicalMethodInfo.MethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee haalt de kenmerken en de metagegevens voor een synchrone methode."
  remarks: ''
  example:
  - >-
    [!code-cpp[LogicalMethodInfo_GetCustomAttribute#3](~/add/codesnippet/cpp/p-system.web.services.pr_13_1.cpp)]
     [!code-cs[LogicalMethodInfo_GetCustomAttribute#3](~/add/codesnippet/csharp/p-system.web.services.pr_13_1.cs)]
     [!code-vb[LogicalMethodInfo_GetCustomAttribute#3](~/add/codesnippet/visualbasic/p-system.web.services.pr_13_1.vb)]
  syntax:
    content: public System.Reflection.MethodInfo MethodInfo { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "Een <xref:System.Reflection.MethodInfo>die de kenmerken en de metagegevens voor een methode.</xref:System.Reflection.MethodInfo> Als <xref:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync*>is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, dan is de waarde van deze eigenschap <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync*>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Name
  id: Name
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: Name
  nameWithType: LogicalMethodInfo.Name
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Name
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee wordt de naam van de methode die wordt vertegenwoordigd door dit <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create1#1](~/add/codesnippet/csharp/p-system.web.services.pr_63_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create1#1](~/add/codesnippet/cpp/p-system.web.services.pr_63_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create1#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_63_1.vb)]
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "De naam van de methode die wordt vertegenwoordigd door dit <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.OutParameters
  id: OutParameters
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: OutParameters
  nameWithType: LogicalMethodInfo.OutParameters
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.OutParameters
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee wordt de out-parameters voor de methode."
  remarks: "Gebruik een <xref:System.Reflection.ParameterInfo>voor informatie over de parameter-gegevenstype, standaardwaarde, enzovoort.</xref:System.Reflection.ParameterInfo>"
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Create1#1](~/add/codesnippet/csharp/p-system.web.services.pr_70_1.cs)]
     [!code-cpp[LogicalMethodInfo_Create1#1](~/add/codesnippet/cpp/p-system.web.services.pr_70_1.cpp)]
     [!code-vb[LogicalMethodInfo_Create1#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_70_1.vb)]
  syntax:
    content: public System.Reflection.ParameterInfo[] OutParameters { get; }
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Een matrix van <xref:System.Reflection.ParameterInfo>die de uitvoerparameters voor de methode, in volgorde vertegenwoordigt.</xref:System.Reflection.ParameterInfo>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.OutParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Parameters
  id: Parameters
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: Parameters
  nameWithType: LogicalMethodInfo.Parameters
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Parameters
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee haalt de parameters voor de methode."
  remarks: "Gebruik een <xref:System.Reflection.ParameterInfo>voor informatie over de parameter-gegevenstype, standaardwaarde, enzovoort.</xref:System.Reflection.ParameterInfo>       Parameters retourneert een matrix van <xref:System.Reflection.ParameterInfo>objecten voor de parameters doorgegeven aan een methode, in volgorde.</xref:System.Reflection.ParameterInfo>"
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Constructor#1](~/add/codesnippet/csharp/p-system.web.services.pr_7_1.cs)]
     [!code-cpp[LogicalMethodInfo_Constructor#1](~/add/codesnippet/cpp/p-system.web.services.pr_7_1.cpp)]
     [!code-vb[LogicalMethodInfo_Constructor#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_7_1.vb)]
  syntax:
    content: public System.Reflection.ParameterInfo[] Parameters { get; }
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Een matrix van <xref:System.Reflection.ParameterInfo>dat de parameters voor de methode vertegenwoordigt.</xref:System.Reflection.ParameterInfo>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.ReturnType
  id: ReturnType
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: ReturnType
  nameWithType: LogicalMethodInfo.ReturnType
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.ReturnType
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee haalt u het retourtype van deze methode."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Constructor#1](~/add/codesnippet/csharp/p-system.web.services.pr_21_1.cs)]
     [!code-cpp[LogicalMethodInfo_Constructor#1](~/add/codesnippet/cpp/p-system.web.services.pr_21_1.cpp)]
     [!code-vb[LogicalMethodInfo_Constructor#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_21_1.vb)]
  syntax:
    content: public Type ReturnType { get; }
    return:
      type: System.Type
      description: "De <xref:System.Type>geretourneerd door deze methode.</xref:System.Type>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.ReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider
  id: ReturnTypeCustomAttributeProvider
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: ReturnTypeCustomAttributeProvider
  nameWithType: LogicalMethodInfo.ReturnTypeCustomAttributeProvider
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hiermee wordt de aangepaste kenmerken voor het retourtype."
  remarks: ''
  example:
  - >-
    [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/cpp/8b875f48-e18d-4d82-9d82-_1.cpp)]
     [!code-cs[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/csharp/8b875f48-e18d-4d82-9d82-_1.cs)]
     [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/add/codesnippet/visualbasic/8b875f48-e18d-4d82-9d82-_1.vb)]
  syntax:
    content: public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributeProvider { get; }
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "Een <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> die de aangepaste kenmerken voor het retourtype vertegenwoordigt."
  overload: System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.LogicalMethodInfo.ToString
  id: ToString
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: LogicalMethodInfo.ToString()
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.ToString()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retourneert een tekenreeks met de huidige <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-cs[LogicalMethodInfo_Constructor#1](~/add/codesnippet/csharp/m-system.web.services.pr_5_1.cs)]
     [!code-cpp[LogicalMethodInfo_Constructor#1](~/add/codesnippet/cpp/m-system.web.services.pr_5_1.cpp)]
     [!code-vb[LogicalMethodInfo_Constructor#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_5_1.vb)]
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Een <xref:System.String>die staat voor de huidige <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>.</xref:System.String>"
  overload: System.Web.Services.Protocols.LogicalMethodInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Reflection.TargetException
  parent: System.Reflection
  isExternal: false
  name: TargetException
  nameWithType: TargetException
  fullName: System.Reflection.TargetException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.MemberAccessException
  isExternal: true
  name: System.MemberAccessException
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.TypeLoadException
  isExternal: true
  name: System.TypeLoadException
- uid: System.Web.Services.Protocols.LogicalMethodInfo.#ctor(System.Reflection.MethodInfo)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: LogicalMethodInfo(MethodInfo)
  nameWithType: LogicalMethodInfo.LogicalMethodInfo(MethodInfo)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.LogicalMethodInfo(MethodInfo)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: AsyncCallbackParameter
  nameWithType: LogicalMethodInfo.AsyncCallbackParameter
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: AsyncResultParameter
  nameWithType: LogicalMethodInfo.AsyncResultParameter
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter
- uid: System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: AsyncStateParameter
  nameWithType: LogicalMethodInfo.AsyncStateParameter
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter
- uid: System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: BeginInvoke(Object,Object[],AsyncCallback,Object)
  nameWithType: LogicalMethodInfo.BeginInvoke(Object,Object[],AsyncCallback,Object)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(Object,Object[],AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: BeginMethodInfo
  nameWithType: LogicalMethodInfo.BeginMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[])
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: Create(MethodInfo[])
  nameWithType: LogicalMethodInfo.Create(MethodInfo[])
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Create(MethodInfo[])
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: Create(MethodInfo[],LogicalMethodTypes)
  nameWithType: LogicalMethodInfo.Create(MethodInfo[],LogicalMethodTypes)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Create(MethodInfo[],LogicalMethodTypes)
- uid: System.Web.Services.Protocols.LogicalMethodTypes
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodTypes
  nameWithType: LogicalMethodTypes
  fullName: System.Web.Services.Protocols.LogicalMethodTypes
- uid: System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: CustomAttributeProvider
  nameWithType: LogicalMethodInfo.CustomAttributeProvider
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: DeclaringType
  nameWithType: LogicalMethodInfo.DeclaringType
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: EndInvoke(Object,IAsyncResult)
  nameWithType: LogicalMethodInfo.EndInvoke(Object,IAsyncResult)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(Object,IAsyncResult)
- uid: System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: EndMethodInfo
  nameWithType: LogicalMethodInfo.EndMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(System.Type)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: GetCustomAttribute(Type)
  nameWithType: LogicalMethodInfo.GetCustomAttribute(Type)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(Type)
- uid: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(System.Type)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: GetCustomAttributes(Type)
  nameWithType: LogicalMethodInfo.GetCustomAttributes(Type)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(Type)
- uid: System.Web.Services.Protocols.LogicalMethodInfo.InParameters
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: InParameters
  nameWithType: LogicalMethodInfo.InParameters
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.InParameters
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Invoke(System.Object,System.Object[])
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: Invoke(Object,Object[])
  nameWithType: LogicalMethodInfo.Invoke(Object,Object[])
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Invoke(Object,Object[])
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsAsync
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: IsAsync
  nameWithType: LogicalMethodInfo.IsAsync
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.IsAsync
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(System.Reflection.MethodInfo)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: IsBeginMethod(MethodInfo)
  nameWithType: LogicalMethodInfo.IsBeginMethod(MethodInfo)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(MethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(System.Reflection.MethodInfo)
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: IsEndMethod(MethodInfo)
  nameWithType: LogicalMethodInfo.IsEndMethod(MethodInfo)
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(MethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsVoid
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: IsVoid
  nameWithType: LogicalMethodInfo.IsVoid
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.IsVoid
- uid: System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: MethodInfo
  nameWithType: LogicalMethodInfo.MethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Name
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: Name
  nameWithType: LogicalMethodInfo.Name
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.LogicalMethodInfo.OutParameters
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: OutParameters
  nameWithType: LogicalMethodInfo.OutParameters
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.OutParameters
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Parameters
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: Parameters
  nameWithType: LogicalMethodInfo.Parameters
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.Parameters
- uid: System.Web.Services.Protocols.LogicalMethodInfo.ReturnType
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: ReturnType
  nameWithType: LogicalMethodInfo.ReturnType
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.ReturnType
- uid: System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: ReturnTypeCustomAttributeProvider
  nameWithType: LogicalMethodInfo.ReturnTypeCustomAttributeProvider
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider
- uid: System.Web.Services.Protocols.LogicalMethodInfo.ToString
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: ToString()
  nameWithType: LogicalMethodInfo.ToString()
  fullName: System.Web.Services.Protocols.LogicalMethodInfo.ToString()
- uid: System.Web.Services.Protocols.LogicalMethodInfo.#ctor*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo.LogicalMethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: AsyncCallbackParameter
  nameWithType: LogicalMethodInfo.AsyncCallbackParameter
- uid: System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: AsyncResultParameter
  nameWithType: LogicalMethodInfo.AsyncResultParameter
- uid: System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: AsyncStateParameter
  nameWithType: LogicalMethodInfo.AsyncStateParameter
- uid: System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: BeginInvoke
  nameWithType: LogicalMethodInfo.BeginInvoke
- uid: System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: BeginMethodInfo
  nameWithType: LogicalMethodInfo.BeginMethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Create*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: Create
  nameWithType: LogicalMethodInfo.Create
- uid: System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: CustomAttributeProvider
  nameWithType: LogicalMethodInfo.CustomAttributeProvider
- uid: System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: DeclaringType
  nameWithType: LogicalMethodInfo.DeclaringType
- uid: System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: EndInvoke
  nameWithType: LogicalMethodInfo.EndInvoke
- uid: System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: EndMethodInfo
  nameWithType: LogicalMethodInfo.EndMethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: GetCustomAttribute
  nameWithType: LogicalMethodInfo.GetCustomAttribute
- uid: System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: LogicalMethodInfo.GetCustomAttributes
- uid: System.Web.Services.Protocols.LogicalMethodInfo.InParameters*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: InParameters
  nameWithType: LogicalMethodInfo.InParameters
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Invoke*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: Invoke
  nameWithType: LogicalMethodInfo.Invoke
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsAsync*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: IsAsync
  nameWithType: LogicalMethodInfo.IsAsync
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: IsBeginMethod
  nameWithType: LogicalMethodInfo.IsBeginMethod
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: IsEndMethod
  nameWithType: LogicalMethodInfo.IsEndMethod
- uid: System.Web.Services.Protocols.LogicalMethodInfo.IsVoid*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: IsVoid
  nameWithType: LogicalMethodInfo.IsVoid
- uid: System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: MethodInfo
  nameWithType: LogicalMethodInfo.MethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Name*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: Name
  nameWithType: LogicalMethodInfo.Name
- uid: System.Web.Services.Protocols.LogicalMethodInfo.OutParameters*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: OutParameters
  nameWithType: LogicalMethodInfo.OutParameters
- uid: System.Web.Services.Protocols.LogicalMethodInfo.Parameters*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: Parameters
  nameWithType: LogicalMethodInfo.Parameters
- uid: System.Web.Services.Protocols.LogicalMethodInfo.ReturnType*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: ReturnType
  nameWithType: LogicalMethodInfo.ReturnType
- uid: System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: ReturnTypeCustomAttributeProvider
  nameWithType: LogicalMethodInfo.ReturnTypeCustomAttributeProvider
- uid: System.Web.Services.Protocols.LogicalMethodInfo.ToString*
  parent: System.Web.Services.Protocols.LogicalMethodInfo
  isExternal: false
  name: ToString
  nameWithType: LogicalMethodInfo.ToString
