### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.NumberPrototype
  id: NumberPrototype
  children:
  - Microsoft.JScript.NumberPrototype.constructor
  - Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)
  - Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)
  - Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)
  - Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)
  - Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)
  - Microsoft.JScript.NumberPrototype.valueOf(System.Object)
  langs:
  - csharp
  name: NumberPrototype
  nameWithType: NumberPrototype
  fullName: Microsoft.JScript.NumberPrototype
  type: Class
  summary: "Biedt statische methoden en eigenschappen voor <xref href=&quot;Microsoft.JScript.NumberObject&quot;> </xref> objecten. Alle methoden van deze klasse worden aangeroepen door door te geven in een verwijzing naar het object dat toegang tot de methode vraagt. Deze klasse behoort tot de categorie van het ingebouwde objectmodel."
  syntax:
    content: 'public class NumberPrototype : Microsoft.JScript.NumberObject'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  - Microsoft.JScript.NumberObject
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.JSObject.ToString
  - Microsoft.JScript.NumberObject.GetType
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.NumberPrototype.constructor
  id: constructor
  parent: Microsoft.JScript.NumberPrototype
  langs:
  - csharp
  name: constructor
  nameWithType: NumberPrototype.constructor
  fullName: Microsoft.JScript.NumberPrototype.constructor
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Hiermee haalt u een verwijzing naar een object op basis van een prototype die door deze prototype wordt gebruikt."
  syntax:
    content: public static Microsoft.JScript.NumberConstructor constructor { get; }
    return:
      type: Microsoft.JScript.NumberConstructor
      description: "Een verwijzing naar een object op basis van een prototype."
  overload: Microsoft.JScript.NumberPrototype.constructor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)
  id: toExponential(System.Object,System.Object)
  parent: Microsoft.JScript.NumberPrototype
  langs:
  - csharp
  name: toExponential(Object,Object)
  nameWithType: NumberPrototype.toExponential(Object,Object)
  fullName: Microsoft.JScript.NumberPrototype.toExponential(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Maakt een tekenreeksrepresentatie van de opgegeven <xref href=&quot;Microsoft.JScript.NumberObject&quot;> </xref> die gebruikmaakt van wetenschappelijke notatie hebben (E)."
  syntax:
    content: public static string toExponential (object thisob, object fractionDigits);
    parameters:
    - id: thisob
      type: System.Object
      description: "Het object dat bij deze methode fungeert."
    - id: fractionDigits
      type: System.Object
      description: "Een getal tussen 0 en 20 waarmee het aantal decimalen weergegeven. De standaardwaarde is 16."
    return:
      type: System.String
      description: "Een tekenreeksrepresentatie van <code> thisob </code>."
  overload: Microsoft.JScript.NumberPrototype.toExponential*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)
  id: toFixed(System.Object,System.Double)
  parent: Microsoft.JScript.NumberPrototype
  langs:
  - csharp
  name: toFixed(Object,Double)
  nameWithType: NumberPrototype.toFixed(Object,Double)
  fullName: Microsoft.JScript.NumberPrototype.toFixed(Object,Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Maakt een tekenreeksrepresentatie van de opgegeven <xref href=&quot;Microsoft.JScript.NumberObject&quot;> </xref> die het opgegeven aantal decimalen weergegeven."
  syntax:
    content: public static string toFixed (object thisob, double fractionDigits);
    parameters:
    - id: thisob
      type: System.Object
      description: "Het object dat bij deze methode fungeert."
    - id: fractionDigits
      type: System.Double
      description: "Een getal tussen 0 en 20 waarmee het aantal decimalen weergegeven. De standaardwaarde is 0."
    return:
      type: System.String
      description: "Een tekenreeksrepresentatie van <code> thisob </code>."
  overload: Microsoft.JScript.NumberPrototype.toFixed*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)
  id: toLocaleString(System.Object)
  parent: Microsoft.JScript.NumberPrototype
  langs:
  - csharp
  name: toLocaleString(Object)
  nameWithType: NumberPrototype.toLocaleString(Object)
  fullName: Microsoft.JScript.NumberPrototype.toLocaleString(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Maakt een tekenreeksrepresentatie van het opgegeven object dat is gebaseerd op <xref:System.Globalization.NumberFormatInfo.CurrentInfo*>en <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> </xref:System.Globalization.NumberFormatInfo.CurrentInfo*>"
  syntax:
    content: public static string toLocaleString (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "Het object dat bij deze methode fungeert."
    return:
      type: System.String
      description: "Een tekenreeksrepresentatie van <code> thisob </code>."
  overload: Microsoft.JScript.NumberPrototype.toLocaleString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)
  id: toPrecision(System.Object,System.Object)
  parent: Microsoft.JScript.NumberPrototype
  langs:
  - csharp
  name: toPrecision(Object,Object)
  nameWithType: NumberPrototype.toPrecision(Object,Object)
  fullName: Microsoft.JScript.NumberPrototype.toPrecision(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Maakt een tekenreeksrepresentatie van de opgegeven <xref href=&quot;Microsoft.JScript.NumberObject&quot;> </xref> waarmee het opgegeven aantal precisie cijfers worden weergegeven."
  syntax:
    content: public static string toPrecision (object thisob, object precision);
    parameters:
    - id: thisob
      type: System.Object
      description: "Het object dat bij deze methode fungeert."
    - id: precision
      type: System.Object
      description: "Een getal tussen 0 en 21 waarmee het aantal cijfers precisie om weer te geven. `Precision digits`de cijfers van het decimaalteken en de exponent gecombineerd."
    return:
      type: System.String
      description: "Een tekenreeksrepresentatie van <code> thisob </code>."
  overload: Microsoft.JScript.NumberPrototype.toPrecision*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)
  id: toString(System.Object,System.Object)
  parent: Microsoft.JScript.NumberPrototype
  langs:
  - csharp
  name: toString(Object,Object)
  nameWithType: NumberPrototype.toString(Object,Object)
  fullName: Microsoft.JScript.NumberPrototype.toString(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Maakt een tekenreeksrepresentatie van het opgegeven object."
  syntax:
    content: public static string toString (object thisob, object radix);
    parameters:
    - id: thisob
      type: System.Object
      description: "Het object dat bij deze methode fungeert."
    - id: radix
      type: System.Object
      description: "Een getal tussen 2 en 36 voor de basis van het systeem nummer die `thisob` wordt uitgedrukt in. De standaardwaarde is 10."
    return:
      type: System.String
      description: "Een tekenreeksrepresentatie van <code> thisob </code>."
  overload: Microsoft.JScript.NumberPrototype.toString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberPrototype.valueOf(System.Object)
  id: valueOf(System.Object)
  parent: Microsoft.JScript.NumberPrototype
  langs:
  - csharp
  name: valueOf(Object)
  nameWithType: NumberPrototype.valueOf(Object)
  fullName: Microsoft.JScript.NumberPrototype.valueOf(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Retourneert de waarde van de opgegeven <xref href=&quot;Microsoft.JScript.NumberObject&quot;> </xref>."
  syntax:
    content: public static object valueOf (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "Het object dat bij deze methode fungeert."
    return:
      type: System.Object
      description: "The value of <code>thisob</code>."
  overload: Microsoft.JScript.NumberPrototype.valueOf*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.NumberObject
  isExternal: false
  name: Microsoft.JScript.NumberObject
- uid: Microsoft.JScript.NumberPrototype.constructor
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: constructor
  nameWithType: NumberPrototype.constructor
  fullName: Microsoft.JScript.NumberPrototype.constructor
- uid: Microsoft.JScript.NumberConstructor
  parent: Microsoft.JScript
  isExternal: false
  name: NumberConstructor
  nameWithType: NumberConstructor
  fullName: Microsoft.JScript.NumberConstructor
- uid: Microsoft.JScript.NumberPrototype.toExponential(System.Object,System.Object)
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toExponential(Object,Object)
  nameWithType: NumberPrototype.toExponential(Object,Object)
  fullName: Microsoft.JScript.NumberPrototype.toExponential(Object,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.NumberPrototype.toFixed(System.Object,System.Double)
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toFixed(Object,Double)
  nameWithType: NumberPrototype.toFixed(Object,Double)
  fullName: Microsoft.JScript.NumberPrototype.toFixed(Object,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.JScript.NumberPrototype.toLocaleString(System.Object)
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toLocaleString(Object)
  nameWithType: NumberPrototype.toLocaleString(Object)
  fullName: Microsoft.JScript.NumberPrototype.toLocaleString(Object)
- uid: Microsoft.JScript.NumberPrototype.toPrecision(System.Object,System.Object)
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toPrecision(Object,Object)
  nameWithType: NumberPrototype.toPrecision(Object,Object)
  fullName: Microsoft.JScript.NumberPrototype.toPrecision(Object,Object)
- uid: Microsoft.JScript.NumberPrototype.toString(System.Object,System.Object)
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toString(Object,Object)
  nameWithType: NumberPrototype.toString(Object,Object)
  fullName: Microsoft.JScript.NumberPrototype.toString(Object,Object)
- uid: Microsoft.JScript.NumberPrototype.valueOf(System.Object)
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: valueOf(Object)
  nameWithType: NumberPrototype.valueOf(Object)
  fullName: Microsoft.JScript.NumberPrototype.valueOf(Object)
- uid: Microsoft.JScript.NumberPrototype.constructor*
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: constructor
  nameWithType: NumberPrototype.constructor
- uid: Microsoft.JScript.NumberPrototype.toExponential*
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toExponential
  nameWithType: NumberPrototype.toExponential
- uid: Microsoft.JScript.NumberPrototype.toFixed*
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toFixed
  nameWithType: NumberPrototype.toFixed
- uid: Microsoft.JScript.NumberPrototype.toLocaleString*
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toLocaleString
  nameWithType: NumberPrototype.toLocaleString
- uid: Microsoft.JScript.NumberPrototype.toPrecision*
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toPrecision
  nameWithType: NumberPrototype.toPrecision
- uid: Microsoft.JScript.NumberPrototype.toString*
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: toString
  nameWithType: NumberPrototype.toString
- uid: Microsoft.JScript.NumberPrototype.valueOf*
  parent: Microsoft.JScript.NumberPrototype
  isExternal: false
  name: valueOf
  nameWithType: NumberPrototype.valueOf
