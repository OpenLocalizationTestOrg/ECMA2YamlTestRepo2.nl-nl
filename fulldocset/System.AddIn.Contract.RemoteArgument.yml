### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.RemoteArgument
  id: RemoteArgument
  children:
  - System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Array)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Char)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Double)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Single)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.String)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.ArrayValue
  - System.AddIn.Contract.RemoteArgument.BooleanValue
  - System.AddIn.Contract.RemoteArgument.ByteValue
  - System.AddIn.Contract.RemoteArgument.CharValue
  - System.AddIn.Contract.RemoteArgument.ContractValue
  - System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)
  - System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)
  - System.AddIn.Contract.RemoteArgument.DateTimeValue
  - System.AddIn.Contract.RemoteArgument.DBNullValue
  - System.AddIn.Contract.RemoteArgument.DecimalValue
  - System.AddIn.Contract.RemoteArgument.DoubleValue
  - System.AddIn.Contract.RemoteArgument.Int16Value
  - System.AddIn.Contract.RemoteArgument.Int32Value
  - System.AddIn.Contract.RemoteArgument.Int64Value
  - System.AddIn.Contract.RemoteArgument.IsByRef
  - System.AddIn.Contract.RemoteArgument.MissingValue
  - System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
  - System.AddIn.Contract.RemoteArgument.SByteValue
  - System.AddIn.Contract.RemoteArgument.SingleValue
  - System.AddIn.Contract.RemoteArgument.StringValue
  - System.AddIn.Contract.RemoteArgument.TypeCode
  - System.AddIn.Contract.RemoteArgument.UInt16Value
  - System.AddIn.Contract.RemoteArgument.UInt32Value
  - System.AddIn.Contract.RemoteArgument.UInt64Value
  langs:
  - csharp
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
  type: Struct
  summary: "Hiermee geeft u een exemplaar van een type dat kan worden doorgegeven via proces en domein toepassingsgrenzen."
  remarks: "De structuur RemoteArgument gebruiken om door te geven van de argumenten van typen die niet worden vastgesteld tot uitvoering plaatsvindt via een proces en domein toepassingsgrenzen. Het doel van RemoteArgument is vergelijkbaar met die van de `VARIANT` type in COM.       U kunt RemoteArgument gebruiken voor het doorgeven van de volgende typen en waarden als externe argumenten:- <xref:System.Type.Missing?displayProperty=fullName>.</xref:System.Type.Missing?displayProperty=fullName>      -   <xref:System.AddIn.Contract.IContract>.</xref:System.AddIn.Contract.IContract>      -Intrinsieke gegevenstypen.      -Matrices die elementen van de ingebouwde gegevenstypen bevatten.       Een ingebouwde gegevenstype is een primitief gegevenstype (dat wil zeggen, de <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>eigenschap van het type is `true`) of een <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, of <xref:System.DBNull>.</xref:System.DBNull> </xref:System.DateTime> </xref:System.Decimal> </xref:System.String> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName>       RemoteArgument biedt een constructors voor elk van de typen die wordt ondersteund. U kunt ook de <xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A>methoden RemoteArgument objecten te maken.</xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A> De <xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A>methoden automatisch de juiste aanroepen <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A>constructor voor uw argumenttype.</xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> </xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A>       Als u een RemoteArgument met behulp van de standaardconstructor zonder parameters, de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap is ingesteld op de waarde <xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=fullName>en de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap is ingesteld op de waarde <xref:System.TypeCode?displayProperty=fullName>.</xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> maken"
  syntax:
    content: public struct RemoteArgument
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)
  id: '#ctor(System.AddIn.Contract.IContract)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(IContract)
  nameWithType: RemoteArgument.RemoteArgument(IContract)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(IContract)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> argument."
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (System.AddIn.Contract.IContract value);
    parameters:
    - id: value
      type: System.AddIn.Contract.IContract
      description: "Een <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> argument die kan worden doorgegeven via een proces of toepassingsgrenzen domein."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Array)
  id: '#ctor(System.Array)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Array)
  nameWithType: RemoteArgument.RemoteArgument(Array)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Array)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Array>argument.</xref:System.Array>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap aan de typecode van het elementtype van matrix en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (Array array);
    parameters:
    - id: array
      type: System.Array
      description: "Een <xref:System.Array>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Array>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het elementtype van matrix is geen basistype (dat wil zeggen, de <xref:System.Type.GetTypeCode*>methode voor het elementtype van matrix retourneert &lt;xref:System.TypeCode?displayProperty=fullName&gt;).</xref:System.Type.GetTypeCode*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Boolean>argument.</xref:System.Boolean>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Een <xref:System.Boolean>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Boolean>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)
  id: '#ctor(System.Byte)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Byte)
  nameWithType: RemoteArgument.RemoteArgument(Byte)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Byte)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Byte>argument.</xref:System.Byte>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Een <xref:System.Byte>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Byte>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Char)
  nameWithType: RemoteArgument.RemoteArgument(Char)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Char)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Char>argument.</xref:System.Char>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Een <xref:System.Char>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Char>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(DateTime)
  nameWithType: RemoteArgument.RemoteArgument(DateTime)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DateTime)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.DateTime>argument.</xref:System.DateTime>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "Een <xref:System.DateTime>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.DateTime>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)
  id: '#ctor(System.DBNull)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(DBNull)
  nameWithType: RemoteArgument.RemoteArgument(DBNull)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DBNull)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref href=&quot;System.DBNull&quot;> </xref> argument."
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (DBNull value);
    parameters:
    - id: value
      type: System.DBNull
      description: "Een <xref href=&quot;System.DBNull&quot;> </xref> argument die kan worden doorgegeven via een proces of toepassingsgrenzen domein."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)
  id: '#ctor(System.Decimal)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Decimal)
  nameWithType: RemoteArgument.RemoteArgument(Decimal)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Decimal)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Decimal>argument.</xref:System.Decimal>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "Een <xref:System.Decimal>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Decimal>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Double)
  nameWithType: RemoteArgument.RemoteArgument(Double)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Double)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Double>argument.</xref:System.Double>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Een <xref:System.Double>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Double>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)
  id: '#ctor(System.Int16)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int16)
  nameWithType: RemoteArgument.RemoteArgument(Int16)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int16)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Int16>argument.</xref:System.Int16>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (short value);
    parameters:
    - id: value
      type: System.Int16
      description: "Een <xref:System.Int16>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Int16>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int32)
  nameWithType: RemoteArgument.RemoteArgument(Int32)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int32)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Int32>argument.</xref:System.Int32>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Een <xref:System.Int32>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Int32>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int64)
  nameWithType: RemoteArgument.RemoteArgument(Int64)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int64)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Int64>argument.</xref:System.Int64>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Een <xref:System.Int64>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Int64>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)
  id: '#ctor(System.SByte)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(SByte)
  nameWithType: RemoteArgument.RemoteArgument(SByte)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(SByte)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.SByte>argument.</xref:System.SByte>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (sbyte value);
    parameters:
    - id: value
      type: System.SByte
      description: "Een <xref:System.SByte>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.SByte>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Single)
  nameWithType: RemoteArgument.RemoteArgument(Single)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Single)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Single>argument.</xref:System.Single>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Een <xref:System.Single>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Single>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(String)
  nameWithType: RemoteArgument.RemoteArgument(String)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(String)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.String>argument.</xref:System.String>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (string value);
    parameters:
    - id: value
      type: System.String
      description: "Een <xref:System.String>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.String>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)
  id: '#ctor(System.UInt16)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt16)
  nameWithType: RemoteArgument.RemoteArgument(UInt16)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt16)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.UInt16>argument.</xref:System.UInt16>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (ushort value);
    parameters:
    - id: value
      type: System.UInt16
      description: "Een <xref:System.UInt16>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.UInt16>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt32)
  nameWithType: RemoteArgument.RemoteArgument(UInt32)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt32)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.UInt32>argument.</xref:System.UInt32>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "Een <xref:System.UInt32>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.UInt32>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)
  id: '#ctor(System.UInt64)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt64)
  nameWithType: RemoteArgument.RemoteArgument(UInt64)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt64)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.UInt64>argument.</xref:System.UInt64>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap `false`.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "Een <xref:System.UInt64>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.UInt64>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)
  id: '#ctor(System.AddIn.Contract.IContract,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(IContract,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(IContract,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(IContract,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> argument die kan worden doorgegeven door middel van verwijzing."
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (System.AddIn.Contract.IContract value, bool isByRef);
    parameters:
    - id: value
      type: System.AddIn.Contract.IContract
      description: "Een <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> argument die kan worden doorgegeven via een proces of toepassingsgrenzen domein."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)
  id: '#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(RemoteArgumentKind,TypeCode)
  nameWithType: RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> en <xref:System.TypeCode>voor een argument dat niet door middel van verwijzing is doorgegeven.</xref:System.TypeCode>"
  remarks: "Deze constructor wijst de standaardwaarde van het gegevenstype dat is opgegeven door de `typeCode` -parameter voor de <xref:System.AddIn.Contract.RemoteArgument>.</xref:System.AddIn.Contract.RemoteArgument>       Een ingebouwde gegevenstype is een primitief gegevenstype (dat wil zeggen, de <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>eigenschap van het type is `true`) of een <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, of <xref:System.DBNull>.</xref:System.DBNull> </xref:System.DateTime> </xref:System.Decimal> </xref:System.String> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName>"
  syntax:
    content: public RemoteArgument (System.AddIn.Contract.RemoteArgumentKind remoteArgKind, TypeCode typeCode);
    parameters:
    - id: remoteArgKind
      type: System.AddIn.Contract.RemoteArgumentKind
      description: "Een van de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarden die aangeeft of de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> een ingebouwd type, een matrix van ingebouwde typen vertegenwoordigt een <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>, of de &lt;xref:System.Type.Missing?displayProperty=fullName&gt; waarde."
    - id: typeCode
      type: System.TypeCode
      description: "Een <xref:System.TypeCode>die aangeeft dat het basistype van het externe argument.</xref:System.TypeCode>"
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>remoteArgKind</code>is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> of <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref>, en <code>typeCode</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; of &lt;xref:System.TypeCode?displayProperty=fullName&gt;.       - of - <code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> en <code>typeCode</code> is niet &lt;xref:System.TypeCode?displayProperty=fullName&gt;.       - of - <code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> en <code>typeCode</code> is niet &lt;xref:System.TypeCode?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)
  id: '#ctor(System.Array,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Array,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Array,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Array,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Array>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Array>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap aan de typecode van het elementtype van matrix en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (Array array, bool isByRef);
    parameters:
    - id: array
      type: System.Array
      description: "Een <xref:System.Array>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Array>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `array` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het elementtype van matrix is geen basistype (dat wil zeggen, de <xref:System.Type.GetTypeCode*>methode retourneert &lt;xref:System.TypeCode?displayProperty=fullName&gt; voor het elementtype van matrix).</xref:System.Type.GetTypeCode*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Boolean,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Boolean,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Boolean>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Boolean>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (bool value, bool isByRef);
    parameters:
    - id: value
      type: System.Boolean
      description: "Een <xref:System.Boolean>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Boolean>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)
  id: '#ctor(System.Byte,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Byte,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Byte,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Byte,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Byte>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Byte>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (byte value, bool isByRef);
    parameters:
    - id: value
      type: System.Byte
      description: "Een <xref:System.Byte>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Byte>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)
  id: '#ctor(System.Char,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Char,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Char,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Char,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Char>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Char>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (char value, bool isByRef);
    parameters:
    - id: value
      type: System.Char
      description: "Een <xref:System.Char>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Char>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)
  id: '#ctor(System.DateTime,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(DateTime,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(DateTime,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DateTime,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.DateTime>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.DateTime>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (DateTime value, bool isByRef);
    parameters:
    - id: value
      type: System.DateTime
      description: "Een <xref:System.DateTime>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.DateTime>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)
  id: '#ctor(System.DBNull,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(DBNull,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(DBNull,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DBNull,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref href=&quot;System.DBNull&quot;> </xref> argument die kan worden doorgegeven door middel van verwijzing."
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (DBNull value, bool isByRef);
    parameters:
    - id: value
      type: System.DBNull
      description: "Een <xref href=&quot;System.DBNull&quot;> </xref> argument die kan worden doorgegeven via een proces of toepassingsgrenzen domein."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)
  id: '#ctor(System.Decimal,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Decimal,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Decimal,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Decimal,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Decimal>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Decimal>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (decimal value, bool isByRef);
    parameters:
    - id: value
      type: System.Decimal
      description: "Een <xref:System.Decimal>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Decimal>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)
  id: '#ctor(System.Double,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Double,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Double,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Double,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Double>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Double>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (double value, bool isByRef);
    parameters:
    - id: value
      type: System.Double
      description: "Een <xref:System.Double>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Double>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)
  id: '#ctor(System.Int16,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int16,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int16,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int16,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Int16>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Int16>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (short value, bool isByRef);
    parameters:
    - id: value
      type: System.Int16
      description: "Een <xref:System.Int16>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Int16>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int32,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int32,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int32,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Int32>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Int32>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (int value, bool isByRef);
    parameters:
    - id: value
      type: System.Int32
      description: "Een <xref:System.Int32>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Int32>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)
  id: '#ctor(System.Int64,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int64,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int64,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int64,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Int64>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Int64>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (long value, bool isByRef);
    parameters:
    - id: value
      type: System.Int64
      description: "Een <xref:System.Int64>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Int64>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)
  id: '#ctor(System.SByte,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(SByte,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(SByte,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(SByte,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.SByte>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.SByte>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (sbyte value, bool isByRef);
    parameters:
    - id: value
      type: System.SByte
      description: "Een <xref:System.SByte>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.SByte>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)
  id: '#ctor(System.Single,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Single,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Single,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Single,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.Single>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.Single>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (float value, bool isByRef);
    parameters:
    - id: value
      type: System.Single
      description: "Een <xref:System.Single>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.Single>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(String,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(String,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(String,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.String>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.String>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (string value, bool isByRef);
    parameters:
    - id: value
      type: System.String
      description: "Een <xref:System.String>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.String>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)
  id: '#ctor(System.UInt16,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt16,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt16,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt16,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.UInt16>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.UInt16>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (ushort value, bool isByRef);
    parameters:
    - id: value
      type: System.UInt16
      description: "Een <xref:System.UInt16>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.UInt16>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)
  id: '#ctor(System.UInt32,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt32,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt32,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt32,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.UInt32>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.UInt32>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (uint value, bool isByRef);
    parameters:
    - id: value
      type: System.UInt32
      description: "Een <xref:System.UInt32>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.UInt32>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)
  id: '#ctor(System.UInt64,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt64,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt64,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt64,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> klasse die vertegenwoordigt een <xref:System.UInt64>argument die kan worden doorgegeven door middel van verwijzing.</xref:System.UInt64>"
  remarks: "Hiermee stelt u deze constructor de <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>eigenschap <xref:System.AddIn.Contract.RemoteArgumentKind>, wordt de <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A>eigenschap <xref:System.TypeCode?displayProperty=fullName>, en de <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A>eigenschap met de waarde van de `isByRef` parameter.</xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> </xref:System.AddIn.Contract.RemoteArgumentKind> </xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A>"
  syntax:
    content: public RemoteArgument (ulong value, bool isByRef);
    parameters:
    - id: value
      type: System.UInt64
      description: "Een <xref:System.UInt64>argument die kan worden doorgegeven via een proces of domein toepassingsgrenzen.</xref:System.UInt64>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als `value` is een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)
  id: '#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> met behulp van de opgegeven klasse <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> en <xref:System.TypeCode>voor een argument op dat door middel van verwijzing kan worden doorgegeven.</xref:System.TypeCode>"
  remarks: "Deze constructor wijst de standaardwaarde van het gegevenstype dat is opgegeven door de `typeCode` -parameter voor de <xref:System.AddIn.Contract.RemoteArgument>.</xref:System.AddIn.Contract.RemoteArgument>       Een ingebouwde gegevenstype is een primitief gegevenstype (dat wil zeggen, de <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>eigenschap van het type is `true`) of een <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, of <xref:System.DBNull>.</xref:System.DBNull> </xref:System.DateTime> </xref:System.Decimal> </xref:System.String> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName>"
  syntax:
    content: public RemoteArgument (System.AddIn.Contract.RemoteArgumentKind remoteArgKind, TypeCode typeCode, bool isByRef);
    parameters:
    - id: remoteArgKind
      type: System.AddIn.Contract.RemoteArgumentKind
      description: "Een van de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarden die aangeeft of de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> een ingebouwd type, een matrix van ingebouwde typen vertegenwoordigt een <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>, of de &lt;xref:System.Type.Missing?displayProperty=fullName&gt; waarde."
    - id: typeCode
      type: System.TypeCode
      description: "Een <xref:System.TypeCode>die aangeeft dat het basistype van het externe argument.</xref:System.TypeCode>"
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het externe argument wordt doorgegeven als verwijzing. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>remoteArgKind</code>is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> of <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref>, en <code>typeCode</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; of &lt;xref:System.TypeCode?displayProperty=fullName&gt;.       - of - <code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> en <code>typeCode</code> is niet &lt;xref:System.TypeCode?displayProperty=fullName&gt;.       - of - <code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> en <code>typeCode</code> is niet &lt;xref:System.TypeCode?displayProperty=fullName&gt;."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>remoteArgKind</code>is geen geldige <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.ArrayValue
  id: ArrayValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: ArrayValue
  nameWithType: RemoteArgument.ArrayValue
  fullName: System.AddIn.Contract.RemoteArgument.ArrayValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Array>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Array>"
  syntax:
    content: public Array ArrayValue { get; set; }
    return:
      type: System.Array
      description: "De <xref:System.Array>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Array>"
  overload: System.AddIn.Contract.RemoteArgument.ArrayValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.BooleanValue
  id: BooleanValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: BooleanValue
  nameWithType: RemoteArgument.BooleanValue
  fullName: System.AddIn.Contract.RemoteArgument.BooleanValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Boolean>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Boolean>"
  syntax:
    content: public bool BooleanValue { get; set; }
    return:
      type: System.Boolean
      description: "De <xref:System.Boolean>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Boolean>"
  overload: System.AddIn.Contract.RemoteArgument.BooleanValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.ByteValue
  id: ByteValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: ByteValue
  nameWithType: RemoteArgument.ByteValue
  fullName: System.AddIn.Contract.RemoteArgument.ByteValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Byte>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Byte>"
  syntax:
    content: public byte ByteValue { get; set; }
    return:
      type: System.Byte
      description: "De <xref:System.Byte>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0 (nul) als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Byte>"
  overload: System.AddIn.Contract.RemoteArgument.ByteValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.CharValue
  id: CharValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: CharValue
  nameWithType: RemoteArgument.CharValue
  fullName: System.AddIn.Contract.RemoteArgument.CharValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Char>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Char>"
  syntax:
    content: public char CharValue { get; set; }
    return:
      type: System.Char
      description: "De <xref:System.Char>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; <xref:System.Char.MinValue>Als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Char.MinValue> </xref:System.Char>"
  overload: System.AddIn.Contract.RemoteArgument.CharValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.ContractValue
  id: ContractValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: ContractValue
  nameWithType: RemoteArgument.ContractValue
  fullName: System.AddIn.Contract.RemoteArgument.ContractValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt."
  syntax:
    content: public System.AddIn.Contract.IContract ContractValue { get; set; }
    return:
      type: System.AddIn.Contract.IContract
      description: "De <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven."
  overload: System.AddIn.Contract.RemoteArgument.ContractValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)
  id: CreateRemoteArgument(System.Object)
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: CreateRemoteArgument(Object)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Maakt een <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> voor een argument dat niet door middel van verwijzing is doorgegeven."
  remarks: "Deze methode roept de <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A>constructor die van toepassing op het type van de `value` parameter.</xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A>"
  syntax:
    content: public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Het argument dat wordt doorgegeven via een proces of toepassingsgrenzen domein."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "Een <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> die staat voor het opgegeven argument."
  overload: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <xref:System.TypeCode>van <code> value </code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; en <code> value </code> is niet een <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>.</xref:System.TypeCode>       - of - de <xref:System.TypeCode>van <code> value </code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; en <code> value </code> niet is ingesteld op &lt;xref:System.Reflection.Missing.Value?displayProperty=fullName&gt;.</xref:System.TypeCode>       - of - <code> value </code> implementeert niet de <xref:System.IConvertible>interface en <code> value </code> is niet een <xref:System.Array>.</xref:System.Array> </xref:System.IConvertible>       - of - <code> value </code> is een <xref:System.Array>die elementen met bevat een <xref:System.TypeCode>waarde van &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</xref:System.TypeCode> </xref:System.Array>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)
  id: CreateRemoteArgument(System.Object,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: CreateRemoteArgument(Object,Boolean)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object,Boolean)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Maakt een <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> voor een argument op dat door middel van verwijzing kan worden doorgegeven."
  remarks: "Deze methode roept de <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A>constructor die van toepassing op het type van de `value` parameter.</xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A>"
  syntax:
    content: public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value, bool isByRef);
    parameters:
    - id: value
      type: System.Object
      description: "Het argument dat wordt doorgegeven via een proces of toepassingsgrenzen domein."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om door te geven de `value` argument door middel van verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "Een <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> die staat voor het opgegeven argument."
  overload: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <xref:System.TypeCode>van <code> value </code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; en <code> value </code> is niet een <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>.</xref:System.TypeCode>       - of - de <xref:System.TypeCode>van <code> value </code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; en <code> value </code> niet is ingesteld op &lt;xref:System.Reflection.Missing.Value?displayProperty=fullName&gt;.</xref:System.TypeCode>       - of - <code> value </code> implementeert niet de <xref:System.IConvertible>interface en <code> value </code> is niet een <xref:System.Array>.</xref:System.Array> </xref:System.IConvertible>       - of - <code> value </code> is een <xref:System.Array>die elementen met bevat een <xref:System.TypeCode>waarde van &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</xref:System.TypeCode> </xref:System.Array>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)
  id: CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: CreateRemoteArgument(Object,Boolean,TypeCode)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object,Boolean,TypeCode)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object,Boolean,TypeCode)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Maakt een <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> voor een argument met de code van de opgegeven en die kunnen worden doorgegeven door middel van verwijzing."
  remarks: "Deze methode roept de <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A>constructor die van toepassing op het type van de `value` parameter.</xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A>       U kunt deze methode niet gebruiken voor het maken een <xref:System.AddIn.Contract.RemoteArgument>die staat voor een `null` matrix met elementen van de ingebouwde gegevenstypen.</xref:System.AddIn.Contract.RemoteArgument> Een ingebouwde gegevenstype is een primitief gegevenstype (dat wil zeggen, de <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>eigenschap van het type is `true`) of een <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, of <xref:System.DBNull>.</xref:System.DBNull> </xref:System.DateTime> </xref:System.Decimal> </xref:System.String> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName>"
  syntax:
    content: public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value, bool isByRef, TypeCode typeCodeToUse);
    parameters:
    - id: value
      type: System.Object
      description: "Het argument dat wordt doorgegeven via een proces of toepassingsgrenzen domein."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>het argument doorgegeven als verwijzing. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: typeCodeToUse
      type: System.TypeCode
      description: "Een <xref:System.TypeCode>die aangeeft dat de typecode van `value`als `value` is niet een <xref:System.Array>.</xref:System.Array> </xref:System.TypeCode> Anders wordt een <xref:System.TypeCode>die aangeeft dat de typecode van de elementen in `value`.</xref:System.TypeCode>"
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "Een <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> die staat voor het opgegeven argument."
  overload: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.TypeCode> of <code>value</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt;, <code>value</code> is not an <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>, and <code>value</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.TypeCode>       - of - de <xref:System.TypeCode>van <code> value </code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; en <code> value </code> is niet &lt;xref:System.Reflection.Missing.Value?displayProperty=fullName&gt;.</xref:System.TypeCode>       -or-       <code>value</code> does not implement the <xref:System.IConvertible> interface, <code>value</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, and <code>value</code> is not an <xref:System.Array>.</xref:System.Array></xref:System.IConvertible>       - of - <code> value </code> is een <xref:System.Array>die elementen met bevat een <xref:System.TypeCode>waarde van &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</xref:System.TypeCode> </xref:System.Array>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De <xref:System.TypeCode>van <code> value </code> is niet &lt;xref:System.TypeCode?displayProperty=fullName&gt; en <code> typeCodeToUse </code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt;.</xref:System.TypeCode>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>typeCodeToUse</code>geeft geen geldige <xref:System.TypeCode> waarde."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.DateTimeValue
  id: DateTimeValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: DateTimeValue
  nameWithType: RemoteArgument.DateTimeValue
  fullName: System.AddIn.Contract.RemoteArgument.DateTimeValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.DateTime>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.DateTime>"
  syntax:
    content: public DateTime DateTimeValue { get; set; }
    return:
      type: System.DateTime
      description: "De <xref:System.DateTime>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; <xref:System.DateTime.MinValue>Als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.DateTime.MinValue> </xref:System.DateTime>"
  overload: System.AddIn.Contract.RemoteArgument.DateTimeValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.DBNullValue
  id: DBNullValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: DBNullValue
  nameWithType: RemoteArgument.DBNullValue
  fullName: System.AddIn.Contract.RemoteArgument.DBNullValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.DBNull&quot;> </xref> die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt."
  syntax:
    content: public DBNull DBNullValue { get; set; }
    return:
      type: System.DBNull
      description: "De <xref href=&quot;System.DBNull&quot;> </xref> die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven."
  overload: System.AddIn.Contract.RemoteArgument.DBNullValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.DecimalValue
  id: DecimalValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: DecimalValue
  nameWithType: RemoteArgument.DecimalValue
  fullName: System.AddIn.Contract.RemoteArgument.DecimalValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Decimal>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Decimal>"
  syntax:
    content: public decimal DecimalValue { get; set; }
    return:
      type: System.Decimal
      description: "De <xref:System.Decimal>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0 (nul) als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Decimal>"
  overload: System.AddIn.Contract.RemoteArgument.DecimalValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.DoubleValue
  id: DoubleValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: DoubleValue
  nameWithType: RemoteArgument.DoubleValue
  fullName: System.AddIn.Contract.RemoteArgument.DoubleValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Double>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Double>"
  syntax:
    content: public double DoubleValue { get; set; }
    return:
      type: System.Double
      description: "De <xref:System.Double>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0,0 als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Double>"
  overload: System.AddIn.Contract.RemoteArgument.DoubleValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.Int16Value
  id: Int16Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: Int16Value
  nameWithType: RemoteArgument.Int16Value
  fullName: System.AddIn.Contract.RemoteArgument.Int16Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Int16>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Int16>"
  syntax:
    content: public short Int16Value { get; set; }
    return:
      type: System.Int16
      description: "De <xref:System.Int16>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0 (nul) als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Int16>"
  overload: System.AddIn.Contract.RemoteArgument.Int16Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.Int32Value
  id: Int32Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: Int32Value
  nameWithType: RemoteArgument.Int32Value
  fullName: System.AddIn.Contract.RemoteArgument.Int32Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Int32>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Int32>"
  syntax:
    content: public int Int32Value { get; set; }
    return:
      type: System.Int32
      description: "De <xref:System.Int32>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0 (nul) als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Int32>"
  overload: System.AddIn.Contract.RemoteArgument.Int32Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.Int64Value
  id: Int64Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: Int64Value
  nameWithType: RemoteArgument.Int64Value
  fullName: System.AddIn.Contract.RemoteArgument.Int64Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Int64>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Int64>"
  syntax:
    content: public long Int64Value { get; set; }
    return:
      type: System.Int64
      description: "De <xref:System.Int64>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0 (nul) als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Int64>"
  overload: System.AddIn.Contract.RemoteArgument.Int64Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.IsByRef
  id: IsByRef
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: IsByRef
  nameWithType: RemoteArgument.IsByRef
  fullName: System.AddIn.Contract.RemoteArgument.IsByRef
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt een argument dat wordt doorgegeven als verwijzing."
  syntax:
    content: public bool IsByRef { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt een argument dat wordt doorgegeven als verwijzing; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.RemoteArgument.IsByRef*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.MissingValue
  id: MissingValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: MissingValue
  nameWithType: RemoteArgument.MissingValue
  fullName: System.AddIn.Contract.RemoteArgument.MissingValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Haalt de <xref:System.Type.Missing>waarde.</xref:System.Type.Missing>"
  syntax:
    content: public System.Reflection.Missing MissingValue { get; }
    return:
      type: System.Reflection.Missing
      description: "De <xref:System.Type.Missing>waarde.</xref:System.Type.Missing>"
  overload: System.AddIn.Contract.RemoteArgument.MissingValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - waarde van deze eigenschap wordt opgehaald terwijl de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
  id: RemoteArgumentKind
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgumentKind
  nameWithType: RemoteArgument.RemoteArgumentKind
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Haalt een <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> die aangeeft dat het type van argument die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt."
  remarks: "Een ingebouwde gegevenstype is een primitief gegevenstype (dat wil zeggen, de <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>eigenschap van het type is `true`) of een <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, of <xref:System.DBNull>.</xref:System.DBNull> </xref:System.DateTime> </xref:System.Decimal> </xref:System.String> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName>"
  syntax:
    content: public System.AddIn.Contract.RemoteArgumentKind RemoteArgumentKind { get; }
    return:
      type: System.AddIn.Contract.RemoteArgumentKind
      description: "Een van de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarden die aangeeft of de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> een ingebouwd type, een matrix van ingebouwde typen vertegenwoordigt een <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref>, of de &lt;xref:System.Type.Missing?displayProperty=fullName&gt; waarde."
  overload: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.SByteValue
  id: SByteValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: SByteValue
  nameWithType: RemoteArgument.SByteValue
  fullName: System.AddIn.Contract.RemoteArgument.SByteValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.SByte>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.SByte>"
  syntax:
    content: public sbyte SByteValue { get; set; }
    return:
      type: System.SByte
      description: "De <xref:System.SByte>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0 (nul) als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.SByte>"
  overload: System.AddIn.Contract.RemoteArgument.SByteValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.SingleValue
  id: SingleValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: SingleValue
  nameWithType: RemoteArgument.SingleValue
  fullName: System.AddIn.Contract.RemoteArgument.SingleValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.Single>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.Single>"
  syntax:
    content: public float SingleValue { get; set; }
    return:
      type: System.Single
      description: "De <xref:System.Single>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0,0 als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.Single>"
  overload: System.AddIn.Contract.RemoteArgument.SingleValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.StringValue
  id: StringValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: StringValue
  nameWithType: RemoteArgument.StringValue
  fullName: System.AddIn.Contract.RemoteArgument.StringValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.String>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.String>"
  syntax:
    content: public string StringValue { get; set; }
    return:
      type: System.String
      description: "De <xref:System.String>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.String>"
  overload: System.AddIn.Contract.RemoteArgument.StringValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.TypeCode
  id: TypeCode
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: TypeCode
  nameWithType: RemoteArgument.TypeCode
  fullName: System.AddIn.Contract.RemoteArgument.TypeCode
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Haalt een <xref:System.TypeCode>die aangeeft dat het basistype van het argument dat de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.TypeCode>"
  syntax:
    content: public TypeCode TypeCode { get; }
    return:
      type: System.TypeCode
      description: "Een <xref:System.TypeCode>die aangeeft dat het basistype van het argument dat de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.TypeCode>"
  overload: System.AddIn.Contract.RemoteArgument.TypeCode*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.UInt16Value
  id: UInt16Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: UInt16Value
  nameWithType: RemoteArgument.UInt16Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt16Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.UInt16>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.UInt16>"
  syntax:
    content: public ushort UInt16Value { get; set; }
    return:
      type: System.UInt16
      description: "De <xref:System.UInt16>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0 (nul) als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.UInt16>"
  overload: System.AddIn.Contract.RemoteArgument.UInt16Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.UInt32Value
  id: UInt32Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: UInt32Value
  nameWithType: RemoteArgument.UInt32Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt32Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.UInt32>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.UInt32>"
  syntax:
    content: public uint UInt32Value { get; set; }
    return:
      type: System.UInt32
      description: "De <xref:System.UInt32>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0 (nul) als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.UInt32>"
  overload: System.AddIn.Contract.RemoteArgument.UInt32Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.UInt64Value
  id: UInt64Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: UInt64Value
  nameWithType: RemoteArgument.UInt64Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt64Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Opgehaald of ingesteld de <xref:System.UInt64>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt.</xref:System.UInt64>"
  syntax:
    content: public ulong UInt64Value { get; set; }
    return:
      type: System.UInt64
      description: "De <xref:System.UInt64>die de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> vertegenwoordigt; 0 (nul) als de waarde van de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nog niet is opgegeven.</xref:System.UInt64>"
  overload: System.AddIn.Contract.RemoteArgument.UInt64Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <> </> *> eigenschap niet is ingesteld op de <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;> </xref> waarde.       - of - de <> </> *> eigenschap niet is ingesteld op de &lt;xref:System.TypeCode?displayProperty=fullName&gt; waarde.       - of - deze eigenschap wordt ingesteld terwijl de <xref:System.AddIn.Contract.RemoteArgument.IsByRef*>eigenschap is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.AddIn.Contract.RemoteArgument.IsByRef*>"
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(IContract)
  nameWithType: RemoteArgument.RemoteArgument(IContract)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(IContract)
- uid: System.AddIn.Contract.IContract
  parent: System.AddIn.Contract
  isExternal: false
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Array)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Array)
  nameWithType: RemoteArgument.RemoteArgument(Array)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Array)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Byte)
  nameWithType: RemoteArgument.RemoteArgument(Byte)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Char)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Char)
  nameWithType: RemoteArgument.RemoteArgument(Char)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(DateTime)
  nameWithType: RemoteArgument.RemoteArgument(DateTime)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(DBNull)
  nameWithType: RemoteArgument.RemoteArgument(DBNull)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DBNull)
- uid: System.DBNull
  parent: System
  isExternal: false
  name: DBNull
  nameWithType: DBNull
  fullName: System.DBNull
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Decimal)
  nameWithType: RemoteArgument.RemoteArgument(Decimal)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Double)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Double)
  nameWithType: RemoteArgument.RemoteArgument(Double)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int16)
  nameWithType: RemoteArgument.RemoteArgument(Int16)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int32)
  nameWithType: RemoteArgument.RemoteArgument(Int32)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int64)
  nameWithType: RemoteArgument.RemoteArgument(Int64)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(SByte)
  nameWithType: RemoteArgument.RemoteArgument(SByte)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(SByte)
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Single)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Single)
  nameWithType: RemoteArgument.RemoteArgument(Single)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.String)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(String)
  nameWithType: RemoteArgument.RemoteArgument(String)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt16)
  nameWithType: RemoteArgument.RemoteArgument(UInt16)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt16)
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt32)
  nameWithType: RemoteArgument.RemoteArgument(UInt32)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt64)
  nameWithType: RemoteArgument.RemoteArgument(UInt64)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(IContract,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(IContract,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(IContract,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(RemoteArgumentKind,TypeCode)
  nameWithType: RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode)
- uid: System.AddIn.Contract.RemoteArgumentKind
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgumentKind
  nameWithType: RemoteArgumentKind
  fullName: System.AddIn.Contract.RemoteArgumentKind
- uid: System.TypeCode
  parent: System
  isExternal: true
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Array,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Array,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Array,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Boolean,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Boolean,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Boolean,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Byte,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Byte,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Byte,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Char,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Char,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Char,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(DateTime,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(DateTime,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DateTime,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(DBNull,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(DBNull,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DBNull,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Decimal,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Decimal,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Decimal,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Double,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Double,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Double,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int16,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int16,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int16,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int32,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int32,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int32,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int64,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int64,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int64,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(SByte,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(SByte,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(SByte,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Single,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Single,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Single,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(String,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(String,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(String,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt16,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt16,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt16,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt32,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt32,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt32,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt64,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt64,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt64,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.ArrayValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ArrayValue
  nameWithType: RemoteArgument.ArrayValue
  fullName: System.AddIn.Contract.RemoteArgument.ArrayValue
- uid: System.AddIn.Contract.RemoteArgument.BooleanValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: BooleanValue
  nameWithType: RemoteArgument.BooleanValue
  fullName: System.AddIn.Contract.RemoteArgument.BooleanValue
- uid: System.AddIn.Contract.RemoteArgument.ByteValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ByteValue
  nameWithType: RemoteArgument.ByteValue
  fullName: System.AddIn.Contract.RemoteArgument.ByteValue
- uid: System.AddIn.Contract.RemoteArgument.CharValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CharValue
  nameWithType: RemoteArgument.CharValue
  fullName: System.AddIn.Contract.RemoteArgument.CharValue
- uid: System.AddIn.Contract.RemoteArgument.ContractValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ContractValue
  nameWithType: RemoteArgument.ContractValue
  fullName: System.AddIn.Contract.RemoteArgument.ContractValue
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CreateRemoteArgument(Object)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CreateRemoteArgument(Object,Boolean)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CreateRemoteArgument(Object,Boolean,TypeCode)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object,Boolean,TypeCode)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object,Boolean,TypeCode)
- uid: System.AddIn.Contract.RemoteArgument.DateTimeValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DateTimeValue
  nameWithType: RemoteArgument.DateTimeValue
  fullName: System.AddIn.Contract.RemoteArgument.DateTimeValue
- uid: System.AddIn.Contract.RemoteArgument.DBNullValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DBNullValue
  nameWithType: RemoteArgument.DBNullValue
  fullName: System.AddIn.Contract.RemoteArgument.DBNullValue
- uid: System.AddIn.Contract.RemoteArgument.DecimalValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DecimalValue
  nameWithType: RemoteArgument.DecimalValue
  fullName: System.AddIn.Contract.RemoteArgument.DecimalValue
- uid: System.AddIn.Contract.RemoteArgument.DoubleValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DoubleValue
  nameWithType: RemoteArgument.DoubleValue
  fullName: System.AddIn.Contract.RemoteArgument.DoubleValue
- uid: System.AddIn.Contract.RemoteArgument.Int16Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int16Value
  nameWithType: RemoteArgument.Int16Value
  fullName: System.AddIn.Contract.RemoteArgument.Int16Value
- uid: System.AddIn.Contract.RemoteArgument.Int32Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int32Value
  nameWithType: RemoteArgument.Int32Value
  fullName: System.AddIn.Contract.RemoteArgument.Int32Value
- uid: System.AddIn.Contract.RemoteArgument.Int64Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int64Value
  nameWithType: RemoteArgument.Int64Value
  fullName: System.AddIn.Contract.RemoteArgument.Int64Value
- uid: System.AddIn.Contract.RemoteArgument.IsByRef
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: IsByRef
  nameWithType: RemoteArgument.IsByRef
  fullName: System.AddIn.Contract.RemoteArgument.IsByRef
- uid: System.AddIn.Contract.RemoteArgument.MissingValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: MissingValue
  nameWithType: RemoteArgument.MissingValue
  fullName: System.AddIn.Contract.RemoteArgument.MissingValue
- uid: System.Reflection.Missing
  parent: System.Reflection
  isExternal: true
  name: Missing
  nameWithType: Missing
  fullName: System.Reflection.Missing
- uid: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgumentKind
  nameWithType: RemoteArgument.RemoteArgumentKind
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
- uid: System.AddIn.Contract.RemoteArgument.SByteValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: SByteValue
  nameWithType: RemoteArgument.SByteValue
  fullName: System.AddIn.Contract.RemoteArgument.SByteValue
- uid: System.AddIn.Contract.RemoteArgument.SingleValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: SingleValue
  nameWithType: RemoteArgument.SingleValue
  fullName: System.AddIn.Contract.RemoteArgument.SingleValue
- uid: System.AddIn.Contract.RemoteArgument.StringValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: StringValue
  nameWithType: RemoteArgument.StringValue
  fullName: System.AddIn.Contract.RemoteArgument.StringValue
- uid: System.AddIn.Contract.RemoteArgument.TypeCode
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: TypeCode
  nameWithType: RemoteArgument.TypeCode
  fullName: System.AddIn.Contract.RemoteArgument.TypeCode
- uid: System.AddIn.Contract.RemoteArgument.UInt16Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt16Value
  nameWithType: RemoteArgument.UInt16Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt16Value
- uid: System.AddIn.Contract.RemoteArgument.UInt32Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt32Value
  nameWithType: RemoteArgument.UInt32Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt32Value
- uid: System.AddIn.Contract.RemoteArgument.UInt64Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt64Value
  nameWithType: RemoteArgument.UInt64Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt64Value
- uid: System.AddIn.Contract.RemoteArgument.#ctor*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument.RemoteArgument
- uid: System.AddIn.Contract.RemoteArgument.ArrayValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ArrayValue
  nameWithType: RemoteArgument.ArrayValue
- uid: System.AddIn.Contract.RemoteArgument.BooleanValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: BooleanValue
  nameWithType: RemoteArgument.BooleanValue
- uid: System.AddIn.Contract.RemoteArgument.ByteValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ByteValue
  nameWithType: RemoteArgument.ByteValue
- uid: System.AddIn.Contract.RemoteArgument.CharValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CharValue
  nameWithType: RemoteArgument.CharValue
- uid: System.AddIn.Contract.RemoteArgument.ContractValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ContractValue
  nameWithType: RemoteArgument.ContractValue
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CreateRemoteArgument
  nameWithType: RemoteArgument.CreateRemoteArgument
- uid: System.AddIn.Contract.RemoteArgument.DateTimeValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DateTimeValue
  nameWithType: RemoteArgument.DateTimeValue
- uid: System.AddIn.Contract.RemoteArgument.DBNullValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DBNullValue
  nameWithType: RemoteArgument.DBNullValue
- uid: System.AddIn.Contract.RemoteArgument.DecimalValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DecimalValue
  nameWithType: RemoteArgument.DecimalValue
- uid: System.AddIn.Contract.RemoteArgument.DoubleValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DoubleValue
  nameWithType: RemoteArgument.DoubleValue
- uid: System.AddIn.Contract.RemoteArgument.Int16Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int16Value
  nameWithType: RemoteArgument.Int16Value
- uid: System.AddIn.Contract.RemoteArgument.Int32Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int32Value
  nameWithType: RemoteArgument.Int32Value
- uid: System.AddIn.Contract.RemoteArgument.Int64Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int64Value
  nameWithType: RemoteArgument.Int64Value
- uid: System.AddIn.Contract.RemoteArgument.IsByRef*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: IsByRef
  nameWithType: RemoteArgument.IsByRef
- uid: System.AddIn.Contract.RemoteArgument.MissingValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: MissingValue
  nameWithType: RemoteArgument.MissingValue
- uid: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgumentKind
  nameWithType: RemoteArgument.RemoteArgumentKind
- uid: System.AddIn.Contract.RemoteArgument.SByteValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: SByteValue
  nameWithType: RemoteArgument.SByteValue
- uid: System.AddIn.Contract.RemoteArgument.SingleValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: SingleValue
  nameWithType: RemoteArgument.SingleValue
- uid: System.AddIn.Contract.RemoteArgument.StringValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: StringValue
  nameWithType: RemoteArgument.StringValue
- uid: System.AddIn.Contract.RemoteArgument.TypeCode*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: TypeCode
  nameWithType: RemoteArgument.TypeCode
- uid: System.AddIn.Contract.RemoteArgument.UInt16Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt16Value
  nameWithType: RemoteArgument.UInt16Value
- uid: System.AddIn.Contract.RemoteArgument.UInt32Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt32Value
  nameWithType: RemoteArgument.UInt32Value
- uid: System.AddIn.Contract.RemoteArgument.UInt64Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt64Value
  nameWithType: RemoteArgument.UInt64Value
