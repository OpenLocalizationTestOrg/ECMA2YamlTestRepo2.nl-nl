### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Button
  id: Button
  children:
  - System.Web.UI.WebControls.Button.#ctor
  - System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.CausesValidation
  - System.Web.UI.WebControls.Button.Click
  - System.Web.UI.WebControls.Button.Command
  - System.Web.UI.WebControls.Button.CommandArgument
  - System.Web.UI.WebControls.Button.CommandName
  - System.Web.UI.WebControls.Button.GetPostBackOptions
  - System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.Button.OnClientClick
  - System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Button.PostBackUrl
  - System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.Text
  - System.Web.UI.WebControls.Button.UseSubmitBehavior
  - System.Web.UI.WebControls.Button.ValidationGroup
  langs:
  - csharp
  name: Button
  nameWithType: Button
  fullName: System.Web.UI.WebControls.Button
  type: Class
  summary: "Een knop-besturingselement op de webpagina wordt weergegeven."
  remarks: "In dit onderwerp:- [inleiding](#Introduction)      -   [knop terugposten gedrag en gebeurtenissen van de Server](#ButtonPostbackBehaviorandServerEvents)      -   [knopgebeurtenissen verwerken in clientscript](#HandlingButtonEventsinClientScript)      -   [besturingselementen en validatie](#ButtonControlsAndValidation)      -   [knoppen in Gegevensbesturingselementen](#ButtonsInDataControls)      -   [binden van gegevens naar de besturingselementen](#BindingDataToTheControls)      -   [knoppen met behulp van UpdatePanel controlemechanismen](#UsingButtonsWithUpdatePanelControls)      -   [declaratieve syntaxis](#DeclarativeSyntax) <a name=&quot;Introduction&quot;> </a> ## inleiding het knopbesturingselement gebruiken voor het maken van een opdrachtknop op de webpagina waarmee gebruikers als een pagina met de server wilt plaatsen.       Het besturingselement gebeurtenis een in de servercode dat u om te reageren op het terugposten kan verwerken. Het kan ook een gebeurtenis in clientscript dat kan worden verwerkt voordat de pagina wordt teruggepost of die kunnen worden uitgevoerd en verzenden van de pagina vervolgens te annuleren oproepen.      > [!NOTE] > ASP.NET bevat diverse soorten besturingselementen, die elk een andere manier op webpagina&quot;s weergegeven. Ze zijn het knopbesturingselement die als een knop; de <xref:System.Web.UI.WebControls.LinkButton>besturingselement, die als een koppeling; en de <xref:System.Web.UI.WebControls.ImageButton>besturingselement, die als een afbeelding; en de <xref:System.Web.UI.WebControls.ImageMap>besturingselement, waarmee u bij het maken van een afbeelding met hotspots waarop gebruikers kunnen klikken.</xref:System.Web.UI.WebControls.ImageMap> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.LinkButton> Alle besturingselementen indienen standaard de pagina wanneer geklikt. U kunt ook de <xref:System.Web.UI.HtmlControls.HtmlButton>en <xref:System.Web.UI.HtmlControls.HtmlInputButton>besturingselementen voor het maken van de knoppen op de pagina die programmeerbaar in de servercode zijn.</xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> Zie voor meer informatie over de verschillen tussen de HTML- en Web server-besturingselementen [overzicht van ASP.NET Web Server besturingselementen](~/add/includes/ajax-current-ext-md.md).       Een knopbesturingselement is standaard een verzendknop. Een verzendknop heeft geen naam van een opdracht (opgegeven door de <xref:System.Web.UI.WebControls.Button.CommandName%2A>eigenschap) die zijn gekoppeld aan de knop en eenvoudig berichten de webpagina terug naar de server.</xref:System.Web.UI.WebControls.Button.CommandName%2A> U kunt opgeven dat een gebeurtenis-handler voor de <xref:System.Web.UI.WebControls.Button.Click>gebeurtenis voor programmatisch beheer de acties uitgevoerd wanneer de verzendknop wordt geklikt.</xref:System.Web.UI.WebControls.Button.Click>       Een opdrachtknop heeft de naam van een opdracht die is gekoppeld aan de knop zoals `Sort`, door in te stellen de <xref:System.Web.UI.WebControls.Button.CommandName%2A>eigenschap.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Hiermee kunt u meerdere knop besturingselementen op een webpagina maken en via een programma bepalen welke knopbesturingselement wordt geklikt. U kunt ook de <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>eigenschap met een opdrachtknop met extra informatie over de opdracht om uit te voeren, zoals `Ascending`.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> U kunt opgeven dat een gebeurtenis-handler voor de <xref:System.Web.UI.WebControls.Button.Command>gebeurtenis voor programmatisch beheer de acties uitgevoerd wanneer de knop wordt geklikt.</xref:System.Web.UI.WebControls.Button.Command>      <a name=&quot;ButtonPostbackBehaviorandServerEvents&quot;></a>## Knop terugposten gedrag en Server gebeurtenissen wanneer een gebruiker klikt op een knop Web server, wordt de pagina verzonden naar de server. Dit zorgt ervoor dat de webpagina worden verwerkt en alle in behandeling gebeurtenissen worden gegenereerd in de code op de server. Wanneer alle pagina en de verwerking van het besturingselement is voltooid, geeft de pagina zelf in de browser opnieuw.       De knoppen kunt verhogen hun eigen <xref:System.Web.UI.WebControls.Button.Click>gebeurtenissen of <xref:System.Web.UI.WebControls.Button.Command>gebeurtenis, die u met behulp van code op de server kan verwerken.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> Dit is anders dan gebeurtenissen in traditionele HTML-pagina&quot;s of webtoepassingen op basis van een client, waarbij een knop `onclick` gebeurtenis wordt verwerkt door het gebruik van JavaScript die in de client wordt uitgevoerd. Zie voor meer informatie [ASP.NET Web Forms besturingselement gebeurtenis servermodel](~/add/includes/ajax-current-ext-md.md).       Wanneer gebruikers op een knopbesturingselement klikt, wordt de pagina teruggepost naar de server. Standaard de pagina wordt teruggepost naar zichzelf, kunt u knoppen als de huidige pagina naar een andere pagina wilt plaatsen. Dit kan handig zijn voor het maken van formulieren met meerdere pagina&quot;s zijn. Zie voor meer informatie [tussen pagina boeken in ASP.NET-webformulieren](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;HandlingButtonEventsinClientScript&quot;></a>## Gebeurtenisafhandeling knop in met de knop Script Client besturingselementen kunt verhogen servergebeurtenissen en -gebeurtenissen voor clientapparaten. Gebeurtenissen van de server na het terugposten optreden en ze worden verwerkt in de servercode die u voor de pagina schrijft. Gebeurtenissen voor clientapparaten in clientscript, doorgaans ECMAScript (JavaScript) worden verwerkt en worden gegenereerd voordat de pagina wordt verzonden. Door client-side &quot;-gebeurtenissen naar ASP.NET knop besturingselementen toe te voegen kunt u taken uitvoert zoals het dialoogvensters bevestiging vóór het verzenden van de pagina en mogelijk annuleert u het verzenden. Zie voor meer informatie [clientscript in ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md) en [hoe: reageren op de knop Web Server Beheergebeurtenissen in clientscript](~/add/includes/ajax-current-ext-md.md).       U kunt ook het knopbesturingselement clientscript ook gebruiken bij het terugposten (in plaats van gewoon uitvoeren van een HTTP POST-bewerking). Dit is handig als u bewerken programmatisch het terugposten wilt, zoals het image koppelt aan andere elementen op de pagina. U kunt instellen dat het knopbesturingselement <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>eigenschap `true` op basis van het knopbesturingselement client-script gebruiken dat terugposten.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>      <a name=&quot;ButtonControlsAndValidation&quot;></a>## Besturingselementen en validatie als een pagina ASP.NET validator besturingselementen bevat, door standaard, klikken op een knopbesturingselement zorgt ervoor dat het besturingselement validatie uit te voeren van de controle. Als validatie van de clientzijde is ingeschakeld voor een besturingselement validator, wordt de pagina wordt niet verzonden als een selectievakje validatie is mislukt.       De volgende tabel beschrijft de eigenschappen die worden ondersteund door de besturingselementen waarmee u kunt het validatieproces preciezer beheren.      | Eigenschap | Beschrijving |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>| Hiermee geeft u op of de knop ook voert een validatie uit.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Deze eigenschap instellen op `false` om te voorkomen dat een validatiecontrole. |   | <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>| Hiermee kunt u opgeven welke validators op de pagina worden aangeroepen wanneer de knop wordt geklikt.</xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> Als geen validatiegroepen zijn gemaakt, klik op een knop aanroepen alle van de validators die zich op de pagina. |       Zie voor meer informatie [gebruikersinvoer valideren in ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;ButtonsInDataControls&quot;></a>## Knoppen in gegevens besturingselementen knop-webserverbesturingselementen worden vaak gebruikt in Gegevensbesturingselementen, zoals in de <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, en <xref:System.Web.UI.WebControls.Repeater>lijst besturingselementen.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> In deze gevallen u doorgaans niet reageren rechtstreeks op de knop klikt u op de gebeurtenis. In plaats daarvan veroorzaakt een knop in een besturingselement van een gebeurtenis die specifiek is voor het gegevensbesturingselement. Bijvoorbeeld, in de <xref:System.Web.UI.WebControls.DataList>beheer, een knop mogelijk verhogen de <xref:System.Web.UI.WebControls.DataList>van het besturingselement <xref:System.Web.UI.WebControls.DataList.ItemCommand>gebeurtenis in plaats van het knopbesturingselement verhogen <xref:System.Web.UI.WebControls.Button.Click>gebeurtenis.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.DataList.ItemCommand> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList>       Omdat gegevensgebonden besturingselementen veel knoppen bevatten kunnen, kunt u de knop instellen <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>eigenschap een waarde om door te geven als onderdeel van de gebeurtenis op te geven.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> U kunt vervolgens testen voor dit argument om te zien welke geklikt.      <a name=&quot;BindingDataToTheControls&quot;></a>## Gegevens binden aan de besturingselementen u kunt de knop Web serverbesturingselementen binden aan een gegevensbron om te bepalen van de bijbehorende instellingen dynamisch. U kunt bijvoorbeeld een knop instellen <xref:System.Web.UI.WebControls.Button.Text%2A>eigenschap met behulp van de gegevensbinding.</xref:System.Web.UI.WebControls.Button.Text%2A>      <a name=&quot;UsingButtonsWithUpdatePanelControls&quot;></a>## Met knoppen met de rendering van besturingselementen UpdatePanel gedeeltelijke pagina, maakt het mogelijk om te delen van een pagina zonder een terugpostactie vernieuwen. <xref:System.Web.UI.UpdatePanel>besturingselementen kunnen u onderdelen van de pagina die deel uitmaken van gedeeltelijke pagina rendering markeren.</xref:System.Web.UI.UpdatePanel> Standaard wordt het gedrag van besturingselementen in een <xref:System.Web.UI.UpdatePanel>besturingselement, met inbegrip van besturingselementen, is het uitvoeren van een asynchrone terugpostactie in plaats van een terugpostactie.</xref:System.Web.UI.UpdatePanel> Dit wordt vernieuwd met alleen de inhoud van de <xref:System.Web.UI.UpdatePanel>beheren vanuit het terugposten afkomstig is.</xref:System.Web.UI.UpdatePanel>       Naast het scenario van een opdrachtknop die zich binnen een <xref:System.Web.UI.UpdatePanel>beheer, kunt u de besturingselementen voor knoppen met <xref:System.Web.UI.UpdatePanel>besturingselementen in de volgende scenario&quot;s:-het definiëren van een knopbesturingselement die buiten een <xref:System.Web.UI.UpdatePanel>beheren als een <xref:System.Web.UI.AsyncPostBackTrigger>besturingselement voor dat venster.</xref:System.Web.UI.AsyncPostBackTrigger> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Wanneer de knop wordt geklikt, wordt een asynchrone terugpostactie uitgevoerd en vernieuwt u de inhoud van het paneel.      -Definiëren van een besturingselement in een <xref:System.Web.UI.UpdatePanel>beheren als een <xref:System.Web.UI.PostBackTrigger>voor het paneel.</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.UpdatePanel> Wanneer de knop wordt geklikt, voert deze zelfs als het binnen een terugpostactie een <xref:System.Web.UI.UpdatePanel>besturingselement.</xref:System.Web.UI.UpdatePanel>       Voor meer informatie over gedeeltelijke pagina&quot;s weergeven en gebruiken van <xref:System.Web.UI.UpdatePanel>besturingselementen, Zie [UpdatePanel Beheeroverzicht](~/add/includes/ajax-current-ext-md.md) en [gedeeltelijke pagina Rendering overzicht](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.UpdatePanel>      <a name=&quot;DeclarativeSyntax&quot;></a>## Declaratieve syntaxis```   <asp:Button       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       UseSubmitBehavior=&quot;True|False&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "The following code example demonstrates how to create a Submit Button control that posts the Web page content back to the server.  \n  \n [!code-cs[Classic Button Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_1.aspx)]\n [!code-vb[Classic Button Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_1.aspx)]  \n  \n The following code example demonstrates how to create a Command Button control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_2.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:Button runat="server" Text="Button"></{0}:Button>")]

      public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> klasse."
  remarks: "Deze constructor gebruik te maken en initialiseren van een nieuw exemplaar van de <xref:System.Web.UI.WebControls.Button>klasse.</xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.  \n  \n [!code-cs[ButtonCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_106_1.aspx)]\n [!code-vb[ButtonCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_106_1.aspx)]"
  syntax:
    content: public Button ();
    parameters: []
  overload: System.Web.UI.WebControls.Button.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Voegt de kenmerken van de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement naar de uitvoerstroom voor rendering op de client."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.  \n  \n [!code-cs[CustomButtonAddAttributesToRender#1](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_1.aspx)]\n [!code-vb[CustomButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_1.aspx)]  \n[!code-cs[CustomButtonAddAttributesToRender#2](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_2.cs)]\n[!code-vb[CustomButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Een <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> die de uitvoerstroom om weer te geven op de client bevat."
  overload: System.Web.UI.WebControls.Button.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of validatie wordt uitgevoerd wanneer de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement wordt geklikt."
  remarks: "Standaard paginavalidatie wordt uitgevoerd wanneer een <xref:System.Web.UI.WebControls.Button>besturingselement wordt geklikt.</xref:System.Web.UI.WebControls.Button> Validatie van de pagina bepaalt of de besturingselementen voor de invoer is gekoppeld aan een besturingselement validatie op de pagina die alle de validatieregels die is opgegeven door het besturingselement validatie doorgeven.       U kunt opgeven of bepalen of validatie wordt uitgevoerd op zowel de client en de server als een <xref:System.Web.UI.WebControls.Button>besturingselement wordt geklikt met behulp van de eigenschap CausesValidation.</xref:System.Web.UI.WebControls.Button> Om te voorkomen dat validatie wordt uitgevoerd, stelt u de eigenschap CausesValidation op `false`.      > [!NOTE] > Moet u de eigenschap CausesValidation instellen op `false` wanneer u gebruikt de <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>eigenschap te posten naar een andere pagina.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> U moet expliciet validatie controleren wanneer boeken terug naar een andere pagina. Voor een voorbeeld, Zie de sectie met opmerkingen van de <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>eigenschap.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>       Deze eigenschap wordt meestal ingesteld op `false` voor een `reset` of `clear` knop om te voorkomen dat validatie wordt uitgevoerd wanneer de knop wordt geklikt.       Wanneer de waarde van de eigenschap CausesValidation is ingesteld op `true`, u kunt ook de <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>eigenschap om de naam van de validatiegroep waarvoor de <xref:System.Web.UI.WebControls.Button>besturingselement zorgt ervoor dat de validatie.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>       Deze eigenschap kan niet worden ingesteld door thema&quot;s of stijl blad thema&quot;s. Zie voor meer informatie <xref:System.Web.UI.ThemeableAttribute>en [ASP.NET thema&quot;s en weergaven](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ButtonControlCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_269_1.aspx)]\n [!code-cs[ButtonControlCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_269_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de validatie wordt uitgevoerd wanneer de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement wordt geklikt, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Click
  id: Click
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Deze gebeurtenis treedt op wanneer de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement wordt geklikt."
  remarks: "De gebeurtenis treedt op wanneer de <xref:System.Web.UI.WebControls.Button>besturingselement wordt geklikt.</xref:System.Web.UI.WebControls.Button> Deze gebeurtenis wordt doorgaans gebruikt wanneer er geen opdrachtnaam is gekoppeld aan de <xref:System.Web.UI.WebControls.Button>besturingselement (bijvoorbeeld met een verzendknop).</xref:System.Web.UI.WebControls.Button>       Zie voor meer informatie over het verwerken van gebeurtenissen [KROONTJESPEN: gebeurtenissen verbruikt](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Click event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_21_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_21_1.aspx)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Command
  id: Command
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Deze gebeurtenis treedt op wanneer de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement wordt geklikt."
  remarks: "De opdracht gebeurtenis treedt op wanneer de <xref:System.Web.UI.WebControls.Button>besturingselement wordt geklikt.</xref:System.Web.UI.WebControls.Button> Deze gebeurtenis wordt doorgaans gebruikt om de naam van een opdracht zoals `Sort`, is gekoppeld aan de <xref:System.Web.UI.WebControls.Button>besturingselement.</xref:System.Web.UI.WebControls.Button> Hiermee kunt u meerdere maken <xref:System.Web.UI.WebControls.Button>besturingselementen op een webpagina pagina en via een programma bepalen welke <xref:System.Web.UI.WebControls.Button>besturingselement wordt geklikt.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > De opdracht gebeurtenis wordt geactiveerd via de besturingselementhiërarchie in de vorm van de `BubbleEvent`.       Zie voor meer informatie over het verwerken van gebeurtenissen [KROONTJESPEN: gebeurtenissen verbruikt](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Command event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van een optionele parameter doorgegeven aan de <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> gebeurtenis samen met de bijbehorende <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*>"
  remarks: "De eigenschap CommandArgument gebruiken om op te geven van een parameter die vult de <xref:System.Web.UI.WebControls.Button.CommandName%2A>eigenschap.</xref:System.Web.UI.WebControls.Button.CommandName%2A>      > [!NOTE] > Hoewel u de eigenschap CommandArgument door zelf instellen kunt, is het normaal gesproken alleen gebruikt wanneer de <xref:System.Web.UI.WebControls.Button.CommandName%2A>eigenschap ook is ingesteld.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       De eigenschap CommandArgument aanvullingen de <xref:System.Web.UI.WebControls.Button.CommandName%2A>eigenschap doordat u extra informatie over de opdracht om uit te voeren.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Als u bijvoorbeeld de <xref:System.Web.UI.WebControls.Button.CommandName%2A>eigenschap `Sort` en de eigenschap CommandArgument op `Ascending`, u een opdracht uit om te sorteren in oplopende volgorde opgeven.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       Deze eigenschap kan niet worden ingesteld door thema&quot;s of stijl blad thema&quot;s. Zie voor meer informatie <xref:System.Web.UI.ThemeableAttribute>en [ASP.NET thema&quot;s en weergaven](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandArgument property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_977_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_977_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "Een optionele parameter doorgegeven aan de <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> gebeurtenis samen met de bijbehorende <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> De standaardwaarde is &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van de naam van de opdracht die is gekoppeld aan de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement dat is doorgegeven aan de <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> gebeurtenis."
  remarks: "Wanneer er meerdere <xref:System.Web.UI.WebControls.Button>besturingselementen op een webpagina met de eigenschap CommandName kunt opgeven of de naam van de opdracht die is gekoppeld aan elk bepalen <xref:System.Web.UI.WebControls.Button>besturingselement.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button> U kunt instellen dat de eigenschap CommandName met een willekeurige tekenreeks waarmee de opdracht om uit te voeren. Vervolgens kunt u via een programma bepalen de opdrachtnaam van de <xref:System.Web.UI.WebControls.Button>te beheren en de nodige acties uitvoeren.</xref:System.Web.UI.WebControls.Button>       Meer informatie over de opdracht, zoals `Ascending`, kan worden opgegeven via de <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>eigenschap.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       Deze eigenschap kan niet worden ingesteld door thema&quot;s of stijl blad thema&quot;s. Zie voor meer informatie <xref:System.Web.UI.ThemeableAttribute>en [ASP.NET thema&quot;s en weergaven](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandName property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_955_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_955_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "De naam van de opdracht van de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement. De standaardwaarde is &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Maakt een <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> -object met de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> terugposten gedrag van het besturingselement."
  remarks: "De methode GetPostBackOptions maakt u een <xref:System.Web.UI.PostBackOptions>-object met de <xref:System.Web.UI.WebControls.Button>terugposten gedrag van het besturingselement.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.PostBackOptions> De <xref:System.Web.UI.PostBackOptions>object wordt doorgaans vervolgens doorgegeven aan de <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName>methode, die wordt gebruikt om een verwijzing naar een functie clientscript verkrijgen dat, als deze wordt aangeroepen, zorgt ervoor dat de server posten terug naar de pagina.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> </xref:System.Web.UI.PostBackOptions>       Deze methode wordt hoofdzakelijk gebruikt door besturingselement ontwikkelaars bij het uitbreiden van de <xref:System.Web.UI.WebControls.Button>klasse.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "Een <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> die staat voor de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> terugposten gedrag van het besturingselement."
  overload: System.Web.UI.WebControls.Button.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> gebeurtenis van de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement."
  remarks: "De <xref:System.Web.UI.WebControls.Button.Click>gebeurtenis treedt op wanneer de <xref:System.Web.UI.WebControls.Button>besturingselement wordt geklikt.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Click> Deze gebeurtenis wordt doorgaans gebruikt wanneer er geen opdrachtnaam is gekoppeld aan de <xref:System.Web.UI.WebControls.Button>besturingselement (bijvoorbeeld met een verzendknop).</xref:System.Web.UI.WebControls.Button>       Een gebeurtenis te verhogen, roept de gebeurtenis-handler via een gemachtigde. Zie voor meer informatie [KROONTJESPEN: verhogen van een gebeurtenis](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       De methode OnClick kan afgeleide klassen de gebeurtenis te verwerken zonder te koppelen van een gemachtigde. Dit is de voorkeur voor het afhandelen van de gebeurtenis in een afgeleide klasse."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_232_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_232_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "De gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.Button.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van het client-side &quot;-script dat wordt uitgevoerd wanneer een <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> van het besturingselement <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> gebeurtenis is opgetreden."
  remarks: "Gebruik de eigenschap OnClientClick Geef aanvullende clientscript die wordt uitgevoerd wanneer een <xref:System.Web.UI.WebControls.Button>van het besturingselement <xref:System.Web.UI.WebControls.Button.Click>gebeurtenis is opgetreden.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> Het script die u opgeeft voor deze eigenschap wordt weergegeven in de <xref:System.Web.UI.WebControls.Button>van het besturingselement `OnClick` attribuut, alsook van het besturingselement aan de clientzijde script. vooraf gedefinieerde</xref:System.Web.UI.WebControls.Button>       Deze eigenschap kan niet worden ingesteld door thema&quot;s of stijl blad thema&quot;s. Zie voor meer informatie <xref:System.Web.UI.ThemeableAttribute>en [ASP.NET thema&quot;s en weergaven](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).  \n  \n The following code example demonstrates how to use the OnClientClick property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-cs[Button.OnClientClick#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1351_1.aspx)]\n [!code-vb[Button.OnClientClick#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1351_1.aspx)]"
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "De client-side &quot;-script dat wordt uitgevoerd wanneer een <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> van het besturingselement <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> gebeurtenis is opgetreden."
  overload: System.Web.UI.WebControls.Button.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Geeft de <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> gebeurtenis van de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement."
  remarks: "De <xref:System.Web.UI.WebControls.Button.Command>gebeurtenis treedt op wanneer de <xref:System.Web.UI.WebControls.Button>besturingselement wordt geklikt.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Command> Deze gebeurtenis wordt doorgaans gebruikt om de naam van een opdracht zoals `Sort`, is gekoppeld aan de <xref:System.Web.UI.WebControls.Button>besturingselement.</xref:System.Web.UI.WebControls.Button> Hiermee kunt u meerdere maken <xref:System.Web.UI.WebControls.Button>besturingselementen op een webpagina pagina en via een programma bepalen welke <xref:System.Web.UI.WebControls.Button>besturingselement wordt geklikt.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > De <xref:System.Web.UI.WebControls.Button.Command>gebeurtenis wordt geactiveerd via de besturingselementhiërarchie in de vorm van de `BubbleEvent`.</xref:System.Web.UI.WebControls.Button.Command>       Een gebeurtenis te verhogen, roept de gebeurtenis-handler via een gemachtigde. Zie voor meer informatie [KROONTJESPEN: verhogen van een gebeurtenis](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       De methode OnCommand kan afgeleide klassen de gebeurtenis te verwerken zonder te koppelen van een gemachtigde. Dit is de voorkeur voor het afhandelen van de gebeurtenis in een afgeleide klasse."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_2.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "De gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.Button.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee wordt bepaald of de knop voordat de rendering van op de client is geklikt."
  remarks: "De methode OnPreRender wordt hoofdzakelijk gebruikt door ontwikkelaars beheer als deze is afgeleid van een aangepaste klasse vanuit de <xref:System.Web.UI.WebControls.Button>besturingselement.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "De gebeurtenisgegevens worden opgeslagen."
  overload: System.Web.UI.WebControls.Button.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van de URL van de pagina waarnaar u vanuit de huidige pagina wanneer de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement wordt geklikt."
  remarks: "The PostBackUrl property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.  \n  \n> [!NOTE]\n>  Only correctly specified paths work with this property. For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\\Test\\default.aspx) work correctly. Incorrectly formed paths such as \"/Test/default.aspx\" or \"\\Test\\default.aspx\" do not work. See [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md) for a discussion on creating correct paths.  \n  \n Set the PostBackUrl property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`. If you do not specify a value for the PostBackUrl property, the page posts back to itself.  \n  \n> [!IMPORTANT]\n>  When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>. The following VB code shows how this is done:  \n  \n```  \nSub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  \n        If Page.PreviousPage.IsValid Then  \n            ' Handle the post back  \n        Else  \n            Response.Write(\"Invalid\")  \n        End If  \nEnd Sub  \n```  \n  \n For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for target page is provided in the next example.  \n  \n [!code-vb[Button.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_1.aspx)]\n [!code-cs[Button.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the PostBackUrl property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the PostBackUrl property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_2.aspx)]\n [!code-vb[Button.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "De URL van de webpagina boeken uit de huidige pagina wanneer de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement wordt geklikt. De standaardwaarde is een lege tekenreeks (&quot;&quot;), waardoor de pagina te posten naar zichzelf."
  overload: System.Web.UI.WebControls.Button.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gebeurtenissen voor verhoogt de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> beheren wanneer deze teruggepost naar de server."
  remarks: "Deze gebeurtenis wordt gebruikt, intern door de <xref:System.Web.UI.WebControls.Button>besturingselement, wanneer deze wordt geklikt, om te genereren voor een <xref:System.Web.UI.WebControls.Button.Click>gebeurtenis, en als gedefinieerd, een <xref:System.Web.UI.WebControls.Button.Command>gebeurtenis.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Het argument voor de gebeurtenis."
  overload: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Geeft de inhoud van het besturingselement in de opgegeven schrijver."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.  \n  \n [!code-cs[CustomButtonRenderContents#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_1.aspx)]\n [!code-vb[CustomButtonRenderContents#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_1.aspx)]  \n[!code-cs[CustomButtonRenderContents#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_2.cs)]\n[!code-vb[CustomButtonRenderContents#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Een <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> -object met de uitvoerstroom HTML-inhoud op de client weergeven."
  overload: System.Web.UI.WebControls.Button.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gebeurtenissen voor verhoogt de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> beheren wanneer deze teruggepost naar de server."
  remarks: "Deze gebeurtenis wordt gebruikt, intern door de <xref:System.Web.UI.WebControls.Button>besturingselement, wanneer deze wordt geklikt, om te genereren voor een <xref:System.Web.UI.WebControls.Button.Click>gebeurtenis, en als gedefinieerd, een <xref:System.Web.UI.WebControls.Button.Command>gebeurtenis.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to override the IPostBackEventHandler.RaisePostBackEvent method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/visualbasic/78761a3c-3126-47e7-b48e-_1.vb)]\n [!code-cs[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/csharp/78761a3c-3126-47e7-b48e-_1.cs)]"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Het argument voor de gebeurtenis."
  overload: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Text
  id: Text
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van het Tekstbijschrift wordt weergegeven de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement."
  remarks: "Gebruik de eigenschap Text opgeven of het bijschrift bepalen de <xref:System.Web.UI.WebControls.Button>besturingselement.</xref:System.Web.UI.WebControls.Button>       De waarde van deze eigenschap, als de waarde, kunnen worden opgeslagen automatisch naar een resource-bestand met een ontwerpfunctie hulpprogramma. Zie voor meer informatie <xref:System.ComponentModel.LocalizableAttribute>en [globalisatie en lokalisatie](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1294_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1294_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Het Tekstbijschrift wordt weergegeven de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement. De standaardwaarde is &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  id: UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement gebruikt de client verzenden van een van de browser mechanisme of het terugposten mechanisme voor ASP.NET."
  remarks: "De eigenschap UseSubmitBehavior gebruiken om op te geven of een <xref:System.Web.UI.WebControls.Button>besturingselement gebruikt de client verzenden van een van de browser mechanisme of het ASP.NET-mechanisme voor terugposten.</xref:System.Web.UI.WebControls.Button> De waarde van deze eigenschap is standaard `true`, waardoor de <xref:System.Web.UI.WebControls.Button>besturingselement moet worden gebruikt van de browser verzenden mechanisme.</xref:System.Web.UI.WebControls.Button> Als u opgeeft `false`, het ASP.NET-pagina-framework clientscript wordt op de pagina waarnaar u het formulier naar de server.       Als de eigenschap UseSubmitBehavior is `false`, beheer-ontwikkelaars kunnen gebruikmaken van de <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>methode om te retourneren van de client teruggestuurd gebeurtenis voor de <xref:System.Web.UI.WebControls.Button>.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> De tekenreeks die door de <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>methode met de tekst van de client-side functie-aanroep en kunnen worden ingevoegd in een client-side &quot;-gebeurtenis-handler.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Deze eigenschap kan niet worden ingesteld door thema&quot;s of stijl blad thema&quot;s. Zie voor meer informatie <xref:System.Web.UI.ThemeableAttribute>en [ASP.NET thema&quot;s en weergaven](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the UseSubmitBehavior property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server. The UseSubmitBehavior property is set to `false`, causing the button to use the ASP.NET postback mechanism. If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.  \n  \n [!code-vb[Button.UseSubmitBehavior#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_854_1.aspx)]\n [!code-cs[Button.UseSubmitBehavior#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_854_1.aspx)]"
  syntax:
    content: public virtual bool UseSubmitBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het besturingselement wordt gebruikt voor de clientbrowser indienen mechanisme; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van de groep van besturingselementen waarvoor de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement validatie zorgt ervoor dat wanneer het teruggepost naar de server."
  remarks: "Van validatiegroepen kunnen u validatiebesturingselementen op een pagina toewijzen aan een specifieke categorie. Elke validatiegroep kan onafhankelijk van andere validatiegroepen op de pagina worden gevalideerd. Gebruik de eigenschap ValidationGroup Geef de naam van de validatiegroep waarvoor de <xref:System.Web.UI.WebControls.Button>besturingselement validatie zorgt ervoor dat wanneer het teruggepost naar de server.</xref:System.Web.UI.WebControls.Button>       Deze eigenschap heeft een invloed alleen wanneer de waarde van de <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>eigenschap is ingesteld op `true`.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Wanneer u een waarde voor de eigenschap ValidationGroup opgeeft alleen de validatie van besturingselementen die deel uitmaken van de opgegeven groep worden gevalideerd wanneer de <xref:System.Web.UI.WebControls.Button>besturingselement teruggepost naar de server.</xref:System.Web.UI.WebControls.Button> Als u geen waarde voor deze eigenschap opgeeft en de <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>eigenschap is ingesteld op `true`, alle validatiebesturingselementen op de pagina die niet zijn toegewezen aan een validatiegroep worden gevalideerd wanneer het besturingselement naar de server teruggepost.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A>       Deze eigenschap kan niet worden ingesteld door thema&quot;s of stijl blad thema&quot;s. Zie voor meer informatie <xref:System.Web.UI.ThemeableAttribute>en [ASP.NET thema&quot;s en weergaven](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1224_1.aspx)]\n [!code-vb[Button.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1224_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "De groep van besturingselementen waarvoor de <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> besturingselement validatie zorgt ervoor dat wanneer het teruggepost naar de server. De standaardwaarde is een lege tekenreeks (&quot;&quot;)."
  overload: System.Web.UI.WebControls.Button.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.Button.#ctor
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Button.CausesValidation
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Button.Click
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.Button.Command
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.Button.CommandArgument
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Button.CommandName
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Button.OnClientClick
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.Text
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
- uid: System.Web.UI.WebControls.Button.#ctor*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button
  nameWithType: Button.Button
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Button.AddAttributesToRender
- uid: System.Web.UI.WebControls.Button.CausesValidation*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
- uid: System.Web.UI.WebControls.Button.CommandArgument*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
- uid: System.Web.UI.WebControls.Button.CommandName*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions
  nameWithType: Button.GetPostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick
  nameWithType: Button.OnClick
- uid: System.Web.UI.WebControls.Button.OnClientClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand
  nameWithType: Button.OnCommand
- uid: System.Web.UI.WebControls.Button.OnPreRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender
  nameWithType: Button.OnPreRender
- uid: System.Web.UI.WebControls.Button.PostBackUrl*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Button.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.RenderContents*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents
  nameWithType: Button.RenderContents
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.Text*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
