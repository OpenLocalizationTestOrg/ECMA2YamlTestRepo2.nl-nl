### YamlMime:ManagedReference
items:
- uid: System.Configuration.InfiniteIntConverter
  id: InfiniteIntConverter
  children:
  - System.Configuration.InfiniteIntConverter.#ctor
  - System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: InfiniteIntConverter
  nameWithType: InfiniteIntConverter
  fullName: System.Configuration.InfiniteIntConverter
  type: Class
  summary: "Converteert tussen een tekenreeks en de standaard oneindige of integer-waarde."
  remarks: "Dit type is, net als alle andere configuratie converter typen, converteert tekenreeksen gevonden in het configuratiebestand naar en van de bijbehorende eigenschappen sterk getypeerde.       In het bijzonder converteert de klasse InfiniteIntConverter tekenreekswaarden, toegewezen aan een configuratie-eigenschap aan integerwaarden en vice versa. Als de configuratie-eigenschap heeft een string-waarde van &quot;oneindig&quot;, wordt deze waarde wordt geconverteerd <xref:System.Int32>en vice versa.</xref:System.Int32>       Deze converter wordt gebruikt met de typen integer. De oneindige waarde wordt bewaard als <xref:System.Int32>.</xref:System.Int32>"
  example:
  - "The following code example shows how to use the InfiniteIntConverter when applied to a custom section property.  \n  \n [!code-cs[System.Configuration.ConfigurationConvertersCustomSection#5](~/add/codesnippet/csharp/t-system.configuration.i_7_1.cs)]\n [!code-vb[System.Configuration.ConfigurationConvertersCustomSection#5](~/add/codesnippet/visualbasic/t-system.configuration.i_7_1.vb)]"
  syntax:
    content: 'public sealed class InfiniteIntConverter : System.Configuration.ConfigurationConverterBase'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.Configuration.ConfigurationConverterBase
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  - System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  platform:
  - net462
- uid: System.Configuration.InfiniteIntConverter.#ctor
  id: '#ctor'
  parent: System.Configuration.InfiniteIntConverter
  langs:
  - csharp
  name: InfiniteIntConverter()
  nameWithType: InfiniteIntConverter.InfiniteIntConverter()
  fullName: System.Configuration.InfiniteIntConverter.InfiniteIntConverter()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.InfiniteIntConverter&quot;> </xref> klasse."
  remarks: "Normaal gesproken gebruikt u de typen van de converter geleverd door het systeem. De enige keer dat u wilt gebruiken, de constructor InfiniteIntConverter is bij het maken van uw eigen conversietype."
  syntax:
    content: public InfiniteIntConverter ();
    parameters: []
  overload: System.Configuration.InfiniteIntConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Configuration.InfiniteIntConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Configuration.InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Converteert een <xref:System.String>op een <xref:System.Int32>.</xref:System.Int32> </xref:System.String>"
  remarks: "Het systeem wordt de methode ConverterenVan gebruikt bij het lezen van een configuratiebestand om een <xref:System.String>waarde die u wilt <xref:System.Int32>.</xref:System.Int32> </xref:System.String> te converteren"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "De <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> object dat wordt gebruikt voor conversie."
    - id: ci
      type: System.Globalization.CultureInfo
      description: "De <xref:System.Globalization.CultureInfo>object dat wordt gebruikt tijdens de conversie.</xref:System.Globalization.CultureInfo>"
    - id: data
      type: System.Object
      description: "De <xref:System.String>object converteren.</xref:System.String>"
    return:
      type: System.Object
      description: "De <xref:System.Int32.MaxValue>Als de <code> data </code> -parameter is de <xref:System.String>&quot;oneindig&quot;, anders wordt de <xref:System.Int32>die vertegenwoordigt de <code> data </code> parameter geheel getal.</xref:System.Int32> </xref:System.String> </xref:System.Int32.MaxValue>"
  overload: System.Configuration.InfiniteIntConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Configuration.InfiniteIntConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: InfiniteIntConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Configuration.InfiniteIntConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Converteert een <xref:System.Int32>.om een <xref:System.String>.</xref:System.String> </xref:System.Int32>"
  remarks: "Het systeem wordt de methode ConvertTo gebruikt bij het schrijven naar een configuratiebestand een om te zetten <xref:System.Int32>naar een <xref:System.String>.</xref:System.String> </xref:System.Int32>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "De <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> object dat wordt gebruikt voor conversie."
    - id: ci
      type: System.Globalization.CultureInfo
      description: "De <xref:System.Globalization.CultureInfo>object dat wordt gebruikt tijdens de conversie.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "De waarde te converteren."
    - id: type
      type: System.Type
      description: "Het type converteren naar."
    return:
      type: System.Object
      description: "De <xref:System.String>&quot;oneindig&quot; als de <code> value </code> is <xref:System.Int32.MaxValue>; anders wordt de <xref:System.String>die vertegenwoordigt de <code> value </code> parameter.</xref:System.String> </xref:System.Int32.MaxValue> </xref:System.String>"
  overload: System.Configuration.InfiniteIntConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: System.Configuration.ConfigurationConverterBase
- uid: System.Configuration.InfiniteIntConverter.#ctor
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: InfiniteIntConverter()
  nameWithType: InfiniteIntConverter.InfiniteIntConverter()
  fullName: System.Configuration.InfiniteIntConverter.InfiniteIntConverter()
- uid: System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Configuration.InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: InfiniteIntConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Configuration.InfiniteIntConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.InfiniteIntConverter.#ctor*
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: InfiniteIntConverter
  nameWithType: InfiniteIntConverter.InfiniteIntConverter
- uid: System.Configuration.InfiniteIntConverter.ConvertFrom*
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: InfiniteIntConverter.ConvertFrom
- uid: System.Configuration.InfiniteIntConverter.ConvertTo*
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: ConvertTo
  nameWithType: InfiniteIntConverter.ConvertTo
