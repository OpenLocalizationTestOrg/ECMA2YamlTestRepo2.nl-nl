### YamlMime:ManagedReference
items:
- uid: System.Net.Http.StreamContent
  id: StreamContent
  children:
  - System.Net.Http.StreamContent.#ctor(System.IO.Stream)
  - System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)
  - System.Net.Http.StreamContent.CreateContentReadStreamAsync
  - System.Net.Http.StreamContent.Dispose(System.Boolean)
  - System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.StreamContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: StreamContent
  nameWithType: StreamContent
  fullName: System.Net.Http.StreamContent
  type: Class
  summary: "HTTP-inhoud op basis van een stream bevat."
  syntax:
    content: 'public class StreamContent : System.Net.Http.HttpContent'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: StreamContent(Stream)
  nameWithType: StreamContent.StreamContent(Stream)
  fullName: System.Net.Http.StreamContent.StreamContent(Stream)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Maakt een nieuw exemplaar van de <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref> klasse."
  syntax:
    content: public StreamContent (System.IO.Stream content);
    parameters:
    - id: content
      type: System.IO.Stream
      description: "De inhoud voor het initialiseren van de <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref>."
  overload: System.Net.Http.StreamContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32)'
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: StreamContent(Stream,Int32)
  nameWithType: StreamContent.StreamContent(Stream,Int32)
  fullName: System.Net.Http.StreamContent.StreamContent(Stream,Int32)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Maakt een nieuw exemplaar van de <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref> klasse."
  syntax:
    content: public StreamContent (System.IO.Stream content, int bufferSize);
    parameters:
    - id: content
      type: System.IO.Stream
      description: "De inhoud voor het initialiseren van de <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref>."
    - id: bufferSize
      type: System.Int32
      description: "De grootte, in bytes van de buffer voor de <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref>."
  overload: System.Net.Http.StreamContent.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De <code> bufferSize </code> is kleiner dan of gelijk zijn aan nul."
  platform:
  - net462
- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync
  id: CreateContentReadStreamAsync
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: CreateContentReadStreamAsync()
  nameWithType: StreamContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.StreamContent.CreateContentReadStreamAsync()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "De stroom HTTP-inhoud naar een geheugenstream schrijven als een asynchrone bewerking."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task%601>object voltooid nadat alle inhoud is geschreven naar de geheugenstroom.</xref:System.Threading.Tasks.Task%601>       De methode CreateContentReadStreamAsync buffert de inhoud naar een geheugenstream. Afgeleide klassen kunnen dit gedrag negeren als er een betere manier voor het ophalen van de inhoud als stream. For example, een bytematrix of een tekenreeks een efficiÃ«ntere manier methode zoals wrapping een alleen-lezen kan gebruiken <xref:System.IO.MemoryStream>rond de bytes of de tekenreeks.)</xref:System.IO.MemoryStream>"
  syntax:
    content: protected override System.Threading.Tasks.Task<System.IO.Stream> CreateContentReadStreamAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.Http.StreamContent.CreateContentReadStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.StreamContent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: StreamContent.Dispose(Boolean)
  fullName: System.Net.Http.StreamContent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref> en eventueel verwijdert de beheerde bronnen."
  remarks: "Deze methode wordt aangeroepen door het publiek `Dispose()` methode en de <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A> `Dispose()`Hiermee wordt de beveiligde `Dispose(Boolean)` methode met de `disposing` parameter ingesteld op `true`. <xref:System.Object.Finalize%2A>roept `Dispose` met `disposing` ingesteld op `false`. Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Net.Http.StreamContent>verwijzingen.</xref:System.Net.Http.StreamContent></xref:System.Object.Finalize%2A> Deze methode roept de `Dispose()` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> zonder begeleiding resources op alleen-versies."
  overload: System.Net.Http.StreamContent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: StreamContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.StreamContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "De HTTP-inhoud naar een stream worden geserialiseerd als een asynchrone bewerking."
  remarks: "Deze bewerking wordt niet geblokkeerd. De geretourneerde <xref:System.Threading.Tasks.Task>object voltooid nadat alle inhoud naar de doel-stroom heeft is geserialiseerd.</xref:System.Threading.Tasks.Task>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "De doel-stroom."
    - id: context
      type: System.Net.TransportContext
      description: "Informatie over het transport (kanaalbindingstoken, bijvoorbeeld). Deze parameter mogelijk <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Het taakobject dat de asynchrone bewerking vertegenwoordigt."
  overload: System.Net.Http.StreamContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.StreamContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: StreamContent.TryComputeLength(Int64)
  fullName: System.Net.Http.StreamContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Hiermee wordt bepaald of de stroominhoud een geldige lengte in bytes."
  remarks: "De methode TryComputeLength biedt HTTP-stroominhoud de mogelijkheid voor het berekenen van de lengte van de inhoud. Dit is handig voor inhoudstypen die kunnen eenvoudig de lengte van de inhoud te berekenen. Als de lengte van de inhoud is niet mogelijk of dure (vereist het systeem voor het bufferen van de volledige inhoud waarbij de serialisatie zou duur of dat het systeem een grote hoeveelheid geheugen toewijzen) computing, deze methode kunt terugkeren `false`. Als deze methode retourneert `false`, betekent dit dat gesegmenteerde overdracht nodig is of de inhoud moet ophalen gebufferd voordat ze worden verzonden naar de server."
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "De lengte in bytes van de stroominhoud."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> length </code> is een geldige lengte; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.StreamContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: StreamContent(Stream)
  nameWithType: StreamContent.StreamContent(Stream)
  fullName: System.Net.Http.StreamContent.StreamContent(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: StreamContent(Stream,Int32)
  nameWithType: StreamContent.StreamContent(Stream,Int32)
  fullName: System.Net.Http.StreamContent.StreamContent(Stream,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: CreateContentReadStreamAsync()
  nameWithType: StreamContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.StreamContent.CreateContentReadStreamAsync()
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.IO.Stream>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.StreamContent.Dispose(System.Boolean)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: StreamContent.Dispose(Boolean)
  fullName: System.Net.Http.StreamContent.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: StreamContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.StreamContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.StreamContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: StreamContent.TryComputeLength(Int64)
  fullName: System.Net.Http.StreamContent.TryComputeLength(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.StreamContent.#ctor*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: StreamContent
  nameWithType: StreamContent.StreamContent
- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: CreateContentReadStreamAsync
  nameWithType: StreamContent.CreateContentReadStreamAsync
- uid: System.Net.Http.StreamContent.Dispose*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: Dispose
  nameWithType: StreamContent.Dispose
- uid: System.Net.Http.StreamContent.SerializeToStreamAsync*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: StreamContent.SerializeToStreamAsync
- uid: System.Net.Http.StreamContent.TryComputeLength*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: TryComputeLength
  nameWithType: StreamContent.TryComputeLength
