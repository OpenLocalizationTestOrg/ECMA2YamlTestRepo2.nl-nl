### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HMACMD5
  id: HMACMD5
  children:
  - System.Security.Cryptography.HMACMD5.#ctor
  - System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])
  langs:
  - csharp
  name: HMACMD5
  nameWithType: HMACMD5
  fullName: System.Security.Cryptography.HMACMD5
  type: Class
  summary: "Berekent een Hash-based Message Authentication Code (HMAC) met behulp van de <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> hash-functie."
  remarks: "HMACMD5 is een soort sleutelhash-algoritme dat is gemaakt op basis van de hash-functie van het Message Digest-algoritme 5 (MD5) en gebruikt als een Hash-based Message Authentication Code (HMAC). Het HMAC-proces combineert een geheime sleutel met de berichtgegevens, bewerkt het resultaat met de hashfunctie, combineert van de hashwaarde opnieuw met de geheime sleutel en past de hashfunctie vervolgens een tweede keer. De uitvoerhash is 128 bits lang.       Een HMAC kan worden gebruikt om te bepalen of een bericht wordt verzonden via een onbeveiligde kanaal is geknoeid, mits de verzender en ontvanger een geheime sleutel delen. De afzender wordt de hash-waarde voor de oorspronkelijke gegevens berekend en worden de oorspronkelijke gegevens en de hash-waarde als een enkel bericht verzonden. De ontvanger de hash-waarde voor het ontvangen bericht berekend en controleert of de berekende HMAC overeenkomt met de HMAC verzonden.       Elke wijziging van de gegevens of de hash-waarde resulteert in een niet-overeenkomende, omdat de geheime sleutel is vereist voor het wijzigen van het bericht en de juiste hash-waarde reproduceren. Als de oorspronkelijke en berekende hash-waarden overeenkomen, wordt daarom het bericht geverifieerd.       MD5 is een cryptografische hash-algoritme die zijn ontwikkeld door RSA Laboratories. HMACMD5 accepteert sleutels van elke grootte, en genereert een hash-volgorde die is 128 bits lang."
  example:
  - "The following example shows how to sign a file by using the HMACMD5 object and then how to verify the file.  \n  \n [!code-cs[HMACMD5#1](~/add/codesnippet/csharp/t-system.security.crypto_58_1.cs)]\n [!code-cpp[HMACMD5#1](~/add/codesnippet/cpp/t-system.security.crypto_58_1.cpp)]\n [!code-vb[HMACMD5#1](~/add/codesnippet/visualbasic/t-system.security.crypto_58_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HMACMD5 : System.Security.Cryptography.HMAC
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  - System.Security.Cryptography.HMAC
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.BlockSizeValue
  - System.Security.Cryptography.HMAC.Create
  - System.Security.Cryptography.HMAC.Create(System.String)
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.HMACMD5.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMACMD5
  langs:
  - csharp
  name: HMACMD5()
  nameWithType: HMACMD5.HMACMD5()
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.HMACMD5&quot;> </xref> klasse met behulp van een willekeurig gegenereerde sleutel."
  remarks: "<xref:System.Security.Cryptography.HMACMD5>is een soort sleutelhash-algoritme dat is gemaakt op basis van de MD5-hash-functie en gebruikt als een Hash-based Message Authentication Code (HMAC).</xref:System.Security.Cryptography.HMACMD5> Het HMAC-proces combineert een geheime sleutel met de berichtgegevens, bewerkt het resultaat met de hashfunctie, combineert van de hashwaarde opnieuw met de geheime sleutel en past de hashfunctie vervolgens een tweede keer. De uitvoerhash is 128 bits lang.       Deze constructor maakt gebruik van een 64-byte, willekeurig gegenereerde sleutel."
  syntax:
    content: public HMACMD5 ();
    parameters: []
  overload: System.Security.Cryptography.HMACMD5.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.HMACMD5
  langs:
  - csharp
  name: HMACMD5(Byte[])
  nameWithType: HMACMD5.HMACMD5(Byte[])
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Cryptography.HMACMD5&quot;> </xref> klasse met behulp van de opgegeven sleutel."
  remarks: "<xref:System.Security.Cryptography.HMACMD5>is een soort sleutelhash-algoritme dat is gemaakt op basis van de MD5-hash-functie en gebruikt als een Hash-based Message Authentication Code (HMAC).</xref:System.Security.Cryptography.HMACMD5> Het HMAC-proces combineert een geheime sleutel met de berichtgegevens, bewerkt het resultaat met de hashfunctie, combineert van de hashwaarde opnieuw met de geheime sleutel en past de hashfunctie vervolgens een tweede keer. De uitvoerhash is 128 bits lang.       Deze constructor maakt gebruik van een sleutel die u opgeeft voor het maken van de <xref:System.Security.Cryptography.HMACMD5>object.</xref:System.Security.Cryptography.HMACMD5>"
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACMD5> class.
  syntax:
    content: public HMACMD5 (byte[] key);
    parameters:
    - id: key
      type: System.Byte[]
      description: "De geheime sleutel voor <xref href=&quot;System.Security.Cryptography.HMACMD5&quot;> </xref> versleuteling. De sleutel kan een willekeurige lengte, maar als deze meer dan 64 bytes lang deze (met behulp van SHA-1) zal worden opgedeeld worden afgeleid van een 64-byte-sleutel. Daarom is de aanbevolen grootte van de geheime sleutel 64 bytes."
  overload: System.Security.Cryptography.HMACMD5.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HMAC
  isExternal: false
  name: System.Security.Cryptography.HMAC
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.HMACMD5.#ctor
  parent: System.Security.Cryptography.HMACMD5
  isExternal: false
  name: HMACMD5()
  nameWithType: HMACMD5.HMACMD5()
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5()
- uid: System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])
  parent: System.Security.Cryptography.HMACMD5
  isExternal: false
  name: HMACMD5(Byte[])
  nameWithType: HMACMD5.HMACMD5(Byte[])
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HMACMD5.#ctor*
  parent: System.Security.Cryptography.HMACMD5
  isExternal: false
  name: HMACMD5
  nameWithType: HMACMD5.HMACMD5
