### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ITypedList
  id: ITypedList
  children:
  - System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  langs:
  - csharp
  name: ITypedList
  nameWithType: ITypedList
  fullName: System.ComponentModel.ITypedList
  type: Interface
  summary: "Biedt functionaliteit voor het detecteren van het schema voor een bindbare lijst, waarbij de eigenschappen die beschikbaar zijn voor de binding afwijken van de openbare eigenschappen van het object moet worden gebonden."
  remarks: "Deze interface gebruiken als u van bijvoorbeeld gebruikmaakt een <xref:System.Data.DataView>-object met een `customer` tabel, die u wilt koppelen aan de eigenschappen op de `customer` object dat de <xref:System.Data.DataView>vertegenwoordigt, niet de eigenschappen van de <xref:System.Data.DataView>.</xref:System.Data.DataView> </xref:System.Data.DataView> </xref:System.Data.DataView>       Deze interface is niet vereist voor ondersteuning van een bindbare lijst.       Binding met de gegevens kan optreden tijdens runtime of in een designer, maar er zijn regels voor beide. Tijdens runtime, kunt u binden aan gegevens in een van de volgende opties:- <xref:System.Array>-implementeerder van <xref:System.Collections.IList>, mits de implementeerder een sterk getypeerde heeft <xref:System.Collections.IList.Item%2A>eigenschap (dat wil zeggen, de <xref:System.Type>Alles behalve <xref:System.Object>).</xref:System.Object> </xref:System.Type> </xref:System.Collections.IList.Item%2A> </xref:System.Collections.IList> </xref:System.Array> U kunt dit doen door het maken van de standaardimplementatie van <xref:System.Collections.IList.Item%2A>persoonlijke.</xref:System.Collections.IList.Item%2A> Als u maken van een wilt <xref:System.Collections.IList>die de regels van een sterk getypeerde verzameling volgt, moet worden afgeleid van <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> </xref:System.Collections.IList>      -Implementeerder van ITypedList.       In een ontwerpfunctie, kunt u binding initialiseren <xref:System.ComponentModel.Component>objecten door dezelfde regels te volgen.</xref:System.ComponentModel.Component>       Zie voor meer informatie over de binding met een gegevensbron, de <xref:System.Windows.Forms.Binding?displayProperty=fullName>klasse.</xref:System.Windows.Forms.Binding?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to implement the ITypedList interface. A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the ITypedList interface. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#1](~/add/codesnippet/csharp/t-system.componentmodel._167_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#1](~/add/codesnippet/visualbasic/t-system.componentmodel._167_1.vb)]"
  syntax:
    content: public interface ITypedList
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert de <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> die staat voor de eigenschappen van elk item dat wordt gebruikt voor het binden van gegevens."
  remarks: "Als de `listAccessors` parameter is niet `null`, bevat meestal een eigenschapsdescriptor waarmee een lijst van containers voor het object dat wordt ge√Ømplementeerd <xref:System.ComponentModel.ITypedList>.</xref:System.ComponentModel.ITypedList> ophalen Bijvoorbeeld, een <xref:System.Data.DataSet>met twee tabellen `myCustomers` en `myOrders`, met een relatie tussen deze twee aangeroepen `myCustOrders`.</xref:System.Data.DataSet> Als u maakt een <xref:System.Data.DataView>-object voor `myCustomers`, klikt u vervolgens het aanroepen van de methode GetItemProperties met `null` retourneert de eigenschap descriptors voor de kolommen in de `myCustomers`.</xref:System.Data.DataView> Als gevolg hiervan een van de geretourneerde eigenschap descriptor is een eigenschapsdescriptor voor `myCustOrders`, net als de methode GetItemProperties aanroepen met een lijst-accessor-matrix met de eigenschap descriptors voor `myCustOrders` retourneert de eigenschap descriptors voor `myOrders`."
  example:
  - "The following code example demonstrates how to implement the GetItemProperties method. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#3](~/add/codesnippet/csharp/3b46cd55-3314-419e-a8e7-_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#3](~/add/codesnippet/visualbasic/3b46cd55-3314-419e-a8e7-_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "Een matrix van <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten vinden in de verzameling als bindbare. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "De <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> die staat voor de eigenschappen van elk item dat wordt gebruikt voor het binden van gegevens."
  overload: System.ComponentModel.ITypedList.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Retourneert de naam van de lijst."
  remarks: "Deze methode wordt gebruikt, alleen in het kader van het moment van ontwerp en door de verouderde <xref:System.Windows.Forms.DataGrid>besturingselement.</xref:System.Windows.Forms.DataGrid>"
  example:
  - "The following code example demonstrates how to implement the GetListName method. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#4](~/add/codesnippet/csharp/a1408425-c386-40d6-a339-_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#4](~/add/codesnippet/visualbasic/a1408425-c386-40d6-a339-_1.vb)]"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "Een matrix van <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objecten, waarvan de naam van de lijst wordt geretourneerd. Dit kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "De naam van de lijst."
  overload: System.ComponentModel.ITypedList.GetListName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ITypedList.GetItemProperties*
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetItemProperties
  nameWithType: ITypedList.GetItemProperties
- uid: System.ComponentModel.ITypedList.GetListName*
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetListName
  nameWithType: ITypedList.GetListName
