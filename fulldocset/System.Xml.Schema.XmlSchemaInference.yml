### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaInference
  id: XmlSchemaInference
  children:
  - System.Xml.Schema.XmlSchemaInference.#ctor
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaInference.Occurrence
  - System.Xml.Schema.XmlSchemaInference.TypeInference
  langs:
  - csharp
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference
  fullName: System.Xml.Schema.XmlSchemaInference
  type: Class
  summary: "Een XML-Schema Definition Language (XSD) schema afleidt uit een XML-document. De klasse XmlSchemaInference kan niet worden overgenomen."
  remarks: "> [!IMPORTANT]>-Schema&quot;s van onbekende of niet-vertrouwde bronnen of locaties niet gebruiken. In dat geval wordt de beveiliging van uw code in gevaar brengen.   >-XML-schema&quot;s (inclusief in line schema&quot;s) zijn per definitie kwetsbaar voor aanvallen; ze niet accepteert in niet-vertrouwde scenario&quot;s.   >-Schema validatiefoutberichten en uitzonderingen gevoelige informatie over het inhoudsmodel of URI paden naar het schemabestand kunnen blootstellen. Zorg ervoor dat u niet weergeven van deze gegevens niet-vertrouwde code.       De klasse XmlSchemaInference in de <xref:System.Xml.Schema?displayProperty=fullName>naamruimte kunt u een XML-Schema Definition Language (XSD) van de structuur van een XML-document schemadeductie.</xref:System.Xml.Schema?displayProperty=fullName> De klasse XmlSchemaInference levert een XML-schema dat u kunt controleren of het XML-document.       De klasse XmlSchemaInference ondersteunt de normen W3C XML en XML-schema&quot;s. Worden kan gebruikt voor het afleiden van een nieuw schema of voor het verfijnen van een bestaand schema."
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_24_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_24_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_24_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaInference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Xml.Schema.XmlSchemaInference&quot;> </xref> klasse."
  syntax:
    content: public XmlSchemaInference ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaInference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  id: InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Een XML-Schema Definition Language (XSD) schema afleidt uit het XML-document in de <xref:System.Xml.XmlReader>object dat is opgegeven.</xref:System.Xml.XmlReader>"
  remarks: "De methode InferSchema infereert een of meer W3C XML-Schema Definition Language (XSD)-schema&quot;s van de XML-exemplaar document dat zich bevindt de <xref:System.Xml.XmlReader>object dat is opgegeven.</xref:System.Xml.XmlReader> Als het XML-document bevat de elementen en kenmerken van meerdere naamruimten, wordt meerdere schema&quot;s worden gegenereerd: één voor elke naamruimte die wordt gebruikt in het document. Het primaire schema is het schema dat de hele XML-document kunt valideren en bijbehorende doelnaamruimte is hetzelfde als de naamruimte van het document-element van het XML-document.       Hieronder vindt u belangrijke opmerkingen bij de methode InferSchema gebruikt.      -De methode InferSchema genegeerd `xsi:type`, `xsi:schemaLocation`, of `xsi:noNamespaceSchemaLocation` kenmerken in het XML-document.      -Als de <xref:System.Xml.XmlReader>object is opgegeven, wordt de type-informatie bevat genegeerd.</xref:System.Xml.XmlReader>      -Als de <xref:System.Xml.XmlReader>object wordt geplaatst voor een element dat niet het hoofdelement van het XML-document, een schema voor alleen dat element is afgeleid.</xref:System.Xml.XmlReader> Als de <xref:System.Xml.XmlReader>object is niet gepositioneerd op een element, het <xref:System.Xml.XmlReader.Read%2A>methode wordt aangeroepen voor de <xref:System.Xml.XmlReader>parameter totdat een element wordt aangetroffen (bijvoorbeeld wanneer <xref:System.Xml.XmlReader.NodeType%2A>is <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> Op dit moment start het proces Deductie van dat element. Als er geen element wordt aangetroffen tot het einde van het document een <xref:System.ArgumentException>gegenereerd.</xref:System.ArgumentException>"
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_6_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_6_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_6_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_3.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>object met de XML-document voor schemadeductie vanuit.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "Een <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> -object dat de afgeleide schema&quot;s bevat."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Het XML-document is niet grammaticaal correct."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "De <xref:System.Xml.XmlReader>object is niet gepositioneerd op het hoofdknooppunt of op een element.</xref:System.Xml.XmlReader> Er treedt een fout tijdens het Deductie schema."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  id: InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Een XML-Schema Definition Language (XSD) schema afleidt uit het XML-document in de <xref:System.Xml.XmlReader>object opgegeven en het afgeleide schema met behulp van een bestaand schema in een verfijning de <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> object dat is opgegeven met de dezelfde doelnaamruimte.</xref:System.Xml.XmlReader>"
  remarks: "De methode InferSchema infereert een of meer W3C XML-Schema Definition Language (XSD)-schema&quot;s van de XML-exemplaar document dat zich bevindt de <xref:System.Xml.XmlReader>object dat is opgegeven.</xref:System.Xml.XmlReader> Als het XML-document bevat de elementen en kenmerken van meerdere naamruimten, meerdere schema&quot;s worden gegenereerd: één voor elke naamruimte die wordt gebruikt in het document. Het primaire schema is het schema dat de hele XML-document kunt valideren en bijbehorende doelnaamruimte is hetzelfde als de naamruimte van het document-element van het XML-document.       Hieronder vindt u belangrijke opmerkingen bij de methode InferSchema gebruikt.      -De methode InferSchema genegeerd `xsi:type`, `xsi:schemaLocation`, of `xsi:noNamespaceSchemaLocation` kenmerken in het XML-document.      -Als de <xref:System.Xml.XmlReader>object is opgegeven, wordt de type-informatie bevat genegeerd.</xref:System.Xml.XmlReader>      -Als de <xref:System.Xml.XmlReader>object wordt geplaatst voor een element dat niet het hoofdelement van het XML-document, een schema voor alleen dat element is afgeleid.</xref:System.Xml.XmlReader> Als de <xref:System.Xml.XmlReader>object is niet gepositioneerd op een element, het <xref:System.Xml.XmlReader.Read%2A>methode wordt aangeroepen voor de <xref:System.Xml.XmlReader>parameter totdat een element wordt aangetroffen (bijvoorbeeld wanneer <xref:System.Xml.XmlReader.NodeType%2A>is <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> Op dit moment start het proces Deductie van dat element. Als er geen element wordt aangetroffen tot het einde van het document een <xref:System.ArgumentException>gegenereerd.</xref:System.ArgumentException>      -Als een <xref:System.Xml.Schema.XmlSchemaSet>-object doorgegeven als een parameter en het element waarvan de <xref:System.Xml.XmlReader>-object wordt geplaatst is gedefinieerd in een van de schema&quot;s in de <xref:System.Xml.Schema.XmlSchemaSet>, afgeleid schema wordt gebruikt om te verfijnen van een bestaand schema in de <xref:System.Xml.Schema.XmlSchemaSet>parameter met de dezelfde doelnaamruimte; anders wordt een nieuw schema voor de naamruimte is afgeleid.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1. The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.  \n  \n The following is XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#13](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_1.xml)]  \n  \n The following is XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#14](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_2.xml)]  \n  \n The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`. The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded InferSchema method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.  \n  \n [!code-cs[XmlSchemaInferenceExamples#4](~/add/codesnippet/csharp/0c36415c-5ade-4e0e-8494-_3.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#4](~/add/codesnippet/cpp/0c36415c-5ade-4e0e-8494-_3.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#4](~/add/codesnippet/visualbasic/0c36415c-5ade-4e0e-8494-_3.vb)]  \n  \n The following schema is the schema inferred from XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#15](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_4.xml)]  \n  \n The following schema is the refined version of the schema above, based on XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#16](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_5.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>object met de XML-document voor schemadeductie vanuit.</xref:System.Xml.XmlReader>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "Een <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> -object met een bestaand schema gebruikt voor het verfijnen van de afgeleid schema."
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "Een <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> -object dat de afgeleide schema&quot;s bevat."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Het XML-document is niet grammaticaal correct."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "De <xref:System.Xml.XmlReader>object is niet gepositioneerd op het hoofdknooppunt of op een element.</xref:System.Xml.XmlReader> Er treedt een fout tijdens het Deductie schema."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  id: Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Opgehaald of ingesteld de <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>waarde die van invloed is op het exemplaar schemadeclaraties afgeleid van het XML-document.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Als de instantie-eigenschap is ingesteld op <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, de eerste keer-elementen zijn aangetroffen in het XML-document, de schemadeclaratie is afgeleid als `minOccurs=&quot;1&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Als er kenmerken worden aangetroffen, de schemadeclaratie is afgeleid als `use=&quot;required&quot;`.       Als de instantie-eigenschap is ingesteld op <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, schemadeclaraties element zijn afgeleid als `minOccurs=&quot;0&quot;`, en schemadeclaraties kenmerk zijn afgeleid als `use=&quot;optional&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       De standaardwaarde van de eigenschap exemplaar is <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how occurrence is affected by the Occurrence property. The example code infers occurrence from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#7](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.  \n  \n [!code-cs[XmlSchemaInferenceExamples#2](~/add/codesnippet/csharp/p-system.xml.schema.xmls_3_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#2](~/add/codesnippet/cpp/p-system.xml.schema.xmls_3_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#2](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_3_2.vb)]  \n  \n Because the Occurrence property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#8](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_3.xml)]  \n  \n In the example code above, if the Occurrence property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#9](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Een <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>object.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.Occurrence*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  id: TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Opgehaald of ingesteld de <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>waarde die van invloed is op typen die zijn afgeleid van het XML-document.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Als de eigenschap TypeInference is ingesteld op <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, het afgeleide type elementen en kenmerken in het XML-document met eenvoudige inhoud is altijd `xs:string`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Als de eigenschap TypeInference is ingesteld op <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, meer specifieke typen zijn afgeleid, zoals `xs:date`, `xs:decimal`, `xs:unsignedByte`, enzovoort.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       De standaardwaarde van de eigenschap TypeInference is <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how type inference is affected by the TypeInference property. The example code infers types from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#10](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.  \n  \n [!code-cs[XmlSchemaInferenceExamples#3](~/add/codesnippet/csharp/p-system.xml.schema.xmls_0_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#3](~/add/codesnippet/cpp/p-system.xml.schema.xmls_0_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#3](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_0_2.vb)]  \n  \n Because the TypeInference property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#11](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_3.xml)]  \n  \n In the example code above, if the TypeInference property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#12](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Een <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>object.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.TypeInference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Schema.XmlSchemaInferenceException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInferenceException
  nameWithType: XmlSchemaInferenceException
  fullName: System.Xml.Schema.XmlSchemaInferenceException
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.InferenceOption
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInference+InferenceOption
  nameWithType: XmlSchemaInference+InferenceOption
  fullName: System.Xml.Schema.XmlSchemaInference+InferenceOption
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
- uid: System.Xml.Schema.XmlSchemaInference.#ctor*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference.XmlSchemaInference
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema
  nameWithType: XmlSchemaInference.InferSchema
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
