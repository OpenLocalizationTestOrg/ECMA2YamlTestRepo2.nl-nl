### YamlMime:ManagedReference
items:
- uid: System.Configuration.Provider.ProviderBase
  id: ProviderBase
  children:
  - System.Configuration.Provider.ProviderBase.#ctor
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  langs:
  - csharp
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
  type: Class
  summary: "Biedt een basisimplementatie voor het providermodel extensible."
  remarks: "Het providermodel is bedoeld om inkapselen of een deel van de functionaliteit van meerdere ASP.NET-functies, zoals lidmaatschap, profielen en beveiligde configuratie. Hierdoor kan de ontwikkelaar ondersteunende klassen maken die meerdere implementaties van de ingekapselde functionaliteit bieden. Ontwikkelaars kunnen bovendien, nieuwe functies die gebruikmaken van de providermodel schrijven. Dit is een effectieve manier ter ondersteuning van meerdere implementaties van een functie functionaliteit zonder de code van de functie dupliceren of de toepassingslaag coderen als de implementatie-methode moet worden gewijzigd.       De klasse ProviderBase is eenvoudig, met slechts enkele eenvoudige methoden en eigenschappen die gemeenschappelijk voor alle providers zijn. Functiespecifieke providers (zoals <xref:System.Web.Security.MembershipProvider>) overnemen van ProviderBase en verbinding maken met de benodigde methoden en eigenschappen die de implementatie-providers voor deze functie moeten ondersteunen.</xref:System.Web.Security.MembershipProvider> Implementatie-providers (zoals <xref:System.Web.Security.SqlMembershipProvider>) op zijn beurt overnemen van een provider onderdeelspecifieke (in dit geval <xref:System.Web.Security.MembershipProvider>).</xref:System.Web.Security.MembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>       De belangrijkste aspecten van het providermodel is dat de implementatie (bijvoorbeeld, of gegevens worden bewaard als een tekstbestand of in een database) is gescheiden van de toepassingscode. Het type van de implementatie-provider voor de opgegeven functie is aangewezen in een configuratiebestand. De provider functieniveau vervolgens in het type van het configuratiebestand leest en fungeert als een fabriek aan de functie-code. Vervolgens kunt ontwikkelaar van de toepassing de functie klassen gebruiken in de toepassingscode. Het implementatietype kan worden gewisseld in het configuratiebestand, hoeft u de code voor de andere implementatie-methode te herschrijven.       De opgenomen met ASP.NET-providers zijn voornamelijk abstracties van gegevens persistentie implementaties voor functies zoals of lidmaatschap van profielen. Dit model kan echter worden toegepast op een ander soort functionaliteit die kan worden gescheiden en geïmplementeerd op verschillende manieren."
  example:
  - For an example of how to use the ProviderBase class, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract class ProviderBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.#ctor
  id: '#ctor'
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.Provider.ProviderBase&quot;> </xref> klasse."
  syntax:
    content: protected ProviderBase ();
    parameters: []
  overload: System.Configuration.Provider.ProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Description
  id: Description
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Hiermee haalt een korte, beschrijvende beschrijving geschikt is voor weergave in de beheerprogramma&quot;s of andere gebruikersinterface (UI)."
  remarks: "Als een geconfigureerde provider verschaft geen een beschrijving, de waarde van de <xref:System.Configuration.Provider.ProviderBase.Name%2A>eigenschap wordt geretourneerd als standaardwaarde.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "Een korte, beschrijvende beschrijving geschikt is voor weergave in de beheerprogramma&quot;s of andere UI."
  overload: System.Configuration.Provider.ProviderBase.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Initialiseert de provider."
  remarks: "De implementatie van de basisklasse intern houdt het aantal keren van de provider `Initialize` methode is aangeroepen. Als een provider is geïnitialiseerd, meer dan één keer een `InvalidOperationException` gegenereerd met de mededeling dat de provider is al geïnitialiseerd.       Omdat de meeste aanroep voor functie-providers initialiseren voordat u de initialisatie van de provider-specifieke uitvoert, is deze methode een centrale locatie voor het verhinderen van dubbele initialisatie."
  example:
  - For an example of how to use Initialize, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "De beschrijvende naam van de provider."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Een verzameling van de naam/waarde-paren die de provider-specifieke kenmerken opgegeven in de configuratie voor deze provider vertegenwoordigt."
  overload: System.Configuration.Provider.ProviderBase.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De naam van de provider is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De naam van de provider heeft een lengte van nul."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een poging is gedaan Initialize is aangeroepen voor een provider nadat de provider is al geïnitialiseerd."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Name
  id: Name
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Hiermee haalt u de beschrijvende naam die wordt gebruikt om te verwijzen naar de provider tijdens de configuratie."
  remarks: 'Het aanbevolen patroon voor deze tekenreeks is: [*Provider Maker*] [*implementatietype*] [*functie*] Provider. Hoewel de <xref:System.Configuration.Provider.ProviderBase.Description%2A>eigenschap biedt ook een beschrijving, de eigenschap Name wordt gebruikt als een id voor de provider.</xref:System.Configuration.Provider.ProviderBase.Description%2A>'
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "De beschrijvende naam die wordt gebruikt om te verwijzen naar de provider tijdens de configuratie."
  overload: System.Configuration.Provider.ProviderBase.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Configuration.Provider.ProviderBase.#ctor
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
- uid: System.Configuration.Provider.ProviderBase.Description
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.Provider.ProviderBase.Name
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
- uid: System.Configuration.Provider.ProviderBase.#ctor*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase.ProviderBase
- uid: System.Configuration.Provider.ProviderBase.Description*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
- uid: System.Configuration.Provider.ProviderBase.Initialize*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize
  nameWithType: ProviderBase.Initialize
- uid: System.Configuration.Provider.ProviderBase.Name*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
