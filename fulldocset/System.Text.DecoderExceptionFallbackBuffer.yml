### YamlMime:ManagedReference
items:
- uid: System.Text.DecoderExceptionFallbackBuffer
  id: DecoderExceptionFallbackBuffer
  children:
  - System.Text.DecoderExceptionFallbackBuffer.#ctor
  - System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)
  - System.Text.DecoderExceptionFallbackBuffer.GetNextChar
  - System.Text.DecoderExceptionFallbackBuffer.MovePrevious
  - System.Text.DecoderExceptionFallbackBuffer.Remaining
  langs:
  - csharp
  name: DecoderExceptionFallbackBuffer
  nameWithType: DecoderExceptionFallbackBuffer
  fullName: System.Text.DecoderExceptionFallbackBuffer
  type: Class
  summary: "Genereert <xref:System.Text.DecoderFallbackException>wanneer een reeks gecodeerde invoer bytes kan niet worden geconverteerd naar een character gedecodeerde uitvoer.</xref:System.Text.DecoderFallbackException> Deze klasse kan niet worden overgenomen."
  remarks: "A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. If the input byte sequence cannot be converted to an output character, the decoding operation calls the [Fallback(Byte\\[\\], Int32)](assetId:///M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)?qualifyHint=False&autoUpgrade=True) method, which throws <xref:System.Text.DecoderFallbackException>.  \n  \n The <xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName> class, which represents a data buffer used in a decoding operation, is the base class for the DecoderExceptionFallbackBuffer class. However, instead of a data buffer, the DecoderExceptionFallbackBuffer class represents a standard behavior in which an exception is thrown if a decoding operation fails. No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work."
  syntax:
    content: 'public sealed class DecoderExceptionFallbackBuffer : System.Text.DecoderFallbackBuffer'
  inheritance:
  - System.Text.DecoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: DecoderExceptionFallbackBuffer()
  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
  fullName: System.Text.DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Text.DecoderExceptionFallbackBuffer&quot;> </xref> klasse."
  syntax:
    content: public DecoderExceptionFallbackBuffer ();
    parameters: []
  overload: System.Text.DecoderExceptionFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)
  id: Fallback(System.Byte[],System.Int32)
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Byte[],Int32)
  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
  fullName: System.Text.DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Genereert <xref:System.Text.DecoderFallbackException>wanneer de reeks invoer bytes kan niet worden gedecodeerd.</xref:System.Text.DecoderFallbackException> De nominaal retourwaarde wordt niet gebruikt."
  remarks: "De <xref:System.Text.Encoding.GetBytes%2A>en <xref:System.Text.Decoder.Convert%2A>methoden aanroepen terugval als ze een onbekende byte in de invoer optreden.</xref:System.Text.Decoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> In het antwoord, genereert de alternatieve methode altijd <xref:System.Text.DecoderFallbackException>en toont de invoergegevens.</xref:System.Text.DecoderFallbackException> De alternatieve methode nominaal geeft aan of er een uitzondering gegenereerd als een reeks invoer bytes kan niet worden gedecodeerd."
  syntax:
    content: public override bool Fallback (byte[] bytesUnknown, int index);
    parameters:
    - id: bytesUnknown
      type: System.Byte[]
      description: "Een invoer matrix met bytes."
    - id: index
      type: System.Int32
      description: "De indexpositie van een byte in de invoer."
    return:
      type: System.Boolean
      description: "Geen. Er is geen waarde wordt geretourneerd omdat de alternatieve methode er altijd een uitzondering gegenereerd.       De nominaal retourwaarde <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Een retourwaarde is gedefinieerd, hoewel het onveranderlijke, omdat deze methode wordt geïmplementeerd voor een abstracte methode."
  overload: System.Text.DecoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: "Deze methode er altijd een uitzondering gegenereerd die de waarde en index positie van de invoer-byte kan niet worden gedecodeerd rapporteert."
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.DecoderExceptionFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Hiermee haalt u het volgende teken in de gegevensbuffer uitzondering."
  remarks: "Omdat <xref:System.Text.DecoderExceptionFallbackBuffer>geen gegevensbuffer werkelijke uitzondering heeft de methode GetNextChar retourneert altijd het NULL Unicode-teken.</xref:System.Text.DecoderExceptionFallbackBuffer>"
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "De geretourneerde waarde is altijd het Unicode-teken NULL (U +&0000;).       Een retourwaarde is gedefinieerd, hoewel het onveranderlijke, omdat deze methode wordt geïmplementeerd voor een abstracte methode."
  overload: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.DecoderExceptionFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Hiermee wordt de volgende aanroep <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*>voor toegang tot de uitzondering buffer tekenpositie dat ouder is dan de huidige positie.</xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*>"
  remarks: "Omdat <xref:System.Text.DecoderExceptionFallbackBuffer>geen gegevensbuffer werkelijke uitzondering heeft de methode MovePrevious retourneert altijd `false`.</xref:System.Text.DecoderExceptionFallbackBuffer>"
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "De geretourneerde waarde is altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Een retourwaarde is gedefinieerd, hoewel het onveranderlijke, omdat deze methode wordt geïmplementeerd voor een abstracte methode."
  overload: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: DecoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.DecoderExceptionFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Hiermee wordt het aantal tekens in de huidige <xref href=&quot;System.Text.DecoderExceptionFallbackBuffer&quot;> </xref> object die nog moeten worden verwerkt."
  remarks: "Omdat <xref:System.Text.DecoderExceptionFallbackBuffer>geen gegevensbuffer werkelijke uitzondering heeft de eigenschap resterend retourneert altijd nul.</xref:System.Text.DecoderExceptionFallbackBuffer>"
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "De geretourneerde waarde is altijd nul.       Een retourwaarde is gedefinieerd, hoewel het onveranderlijke, omdat deze methode wordt geïmplementeerd voor een abstracte methode."
  overload: System.Text.DecoderExceptionFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.DecoderFallbackBuffer
  isExternal: false
  name: System.Text.DecoderFallbackBuffer
- uid: System.Text.DecoderFallbackException
  isExternal: true
  name: System.Text.DecoderFallbackException
- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: DecoderExceptionFallbackBuffer()
  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
  fullName: System.Text.DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Byte[],Int32)
  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
  fullName: System.Text.DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.DecoderExceptionFallbackBuffer.GetNextChar()
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.DecoderExceptionFallbackBuffer.MovePrevious()
- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: DecoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.DecoderExceptionFallbackBuffer.Remaining
- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: DecoderExceptionFallbackBuffer
  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer
- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: DecoderExceptionFallbackBuffer.Fallback
- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar
- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious
- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: DecoderExceptionFallbackBuffer.Remaining
