### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsSerializeAsAttribute
  id: SettingsSerializeAsAttribute
  children:
  - System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  - System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  langs:
  - csharp
  name: SettingsSerializeAsAttribute
  nameWithType: SettingsSerializeAsAttribute
  fullName: System.Configuration.SettingsSerializeAsAttribute
  type: Class
  summary: "Hiermee geeft u het serialisatiemechanisme voor die moet worden gebruikt door de provider van instellingen. Deze klasse kan niet worden overgenomen."
  remarks: "Een provider instellingen ondersteunt vaak meer dan één van de .NET Framework standaard serialisatie schema&quot;s. Deze schema&quot;s worden beschreven door de <xref:System.Configuration.SettingsSerializeAs>opsomming, en zijn tekst zonder opmaak, XML en binaire serialisatie.</xref:System.Configuration.SettingsSerializeAs> Bovendien kan een provider eventueel een schema voor aangepaste serialisatie ondersteunen.       Met de SettingsSerializeAsAttribute kunt u opgeven welke mechanisme voor serialisatie moet worden gebruikt voor een bepaalde toepassing instellingen klasse of de eigenschap. Dit kenmerk wordt beschouwd als een aanvraag voor de provider van instellingen. Het kan worden genegeerd of een fout veroorzaakt als de provider of de afzonderlijke eigenschapstype biedt geen ondersteuning voor het opgegeven serialisatie-schema. Als dit kenmerk niet aanwezig is, is de provider biedt meestal een mechanisme voor serialisatie standaard, meestal als tekst zonder opmaak.       Hoewel de provider van de instellingen een manier bieden kan om het serialisatiemechanisme voor tijdens runtime dynamisch te wijzigen, maar dit is niet een typische mogelijkheid."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]

      public sealed class SettingsSerializeAsAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  id: '#ctor(System.Configuration.SettingsSerializeAs)'
  parent: System.Configuration.SettingsSerializeAsAttribute
  langs:
  - csharp
  name: SettingsSerializeAsAttribute(SettingsSerializeAs)
  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
  fullName: System.Configuration.SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiseert een exemplaar van de <xref href=&quot;System.Configuration.SettingsSerializeAsAttribute&quot;> </xref> klasse."
  remarks: "Als de provider van instellingen of het type van de eigenschap moet worden geconverteerd biedt geen ondersteuning voor de serialisatie-schema dat is opgegeven door de `serializeAs` parameter, kan de bewerking één van de volgende resultaten hebben:-de provider van instellingen mag het kenmerk negeren en het standaardschema voor serialisatie gebruiken.      -De serialisatie-proces mislukken zonder reactie. De eigenschap voor instellingen van toepassing zal niet worden vastgehouden.      -Tijdens de serialisatie worden er is een uitzondering verhoogd."
  syntax:
    content: public SettingsSerializeAsAttribute (System.Configuration.SettingsSerializeAs serializeAs);
    parameters:
    - id: serializeAs
      type: System.Configuration.SettingsSerializeAs
      description: "Een <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> opgesomd waarde waarmee de serialisatie-schema."
  overload: System.Configuration.SettingsSerializeAsAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  id: SerializeAs
  parent: System.Configuration.SettingsSerializeAsAttribute
  langs:
  - csharp
  name: SerializeAs
  nameWithType: SettingsSerializeAsAttribute.SerializeAs
  fullName: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Haalt de <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> inventarisatiewaarde die Hiermee geeft u het schema voor serialisatie."
  remarks: "Deze eigenschap is ingesteld de <xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A>constructor.</xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A>"
  syntax:
    content: public System.Configuration.SettingsSerializeAs SerializeAs { get; }
    return:
      type: System.Configuration.SettingsSerializeAs
      description: "Een <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> opgesomd waarde waarmee de serialisatie-schema."
  overload: System.Configuration.SettingsSerializeAsAttribute.SerializeAs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SettingsSerializeAsAttribute(SettingsSerializeAs)
  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
  fullName: System.Configuration.SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
- uid: System.Configuration.SettingsSerializeAs
  parent: System.Configuration
  isExternal: false
  name: SettingsSerializeAs
  nameWithType: SettingsSerializeAs
  fullName: System.Configuration.SettingsSerializeAs
- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SerializeAs
  nameWithType: SettingsSerializeAsAttribute.SerializeAs
  fullName: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor*
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SettingsSerializeAsAttribute
  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute
- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs*
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SerializeAs
  nameWithType: SettingsSerializeAsAttribute.SerializeAs
