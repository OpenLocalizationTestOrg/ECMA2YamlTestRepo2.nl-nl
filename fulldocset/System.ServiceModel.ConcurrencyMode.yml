### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ConcurrencyMode
  id: ConcurrencyMode
  children:
  - System.ServiceModel.ConcurrencyMode.Multiple
  - System.ServiceModel.ConcurrencyMode.Reentrant
  - System.ServiceModel.ConcurrencyMode.Single
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
  type: Enum
  summary: "Geeft aan of een serviceklasse één thread of met meerdere threads bewerkingsmodi ondersteunt."
  remarks: "ConcurrencyMode wordt gebruikt in combinatie met de <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>eigenschap om op te geven of een serviceklasse één thread of met meerdere threads bewerkingsmodi ondersteunt.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> Een bewerking met één thread mag reentrant of niet wordt herhaald.       De volgende tabel ziet u wanneer [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] een bewerking kan worden aangeroepen tijdens een andere verwerkt wordt, al naar gelang de ConcurrencyMode is toegestaan.      | Waarde van de ConcurrencyMode | Kan een nieuwe bewerking worden aangeroepen? |   |---------------------------|-------------------------------------|   | Één | Nooit. |   | Inspringende | Alleen tijdens het aanroepen van een andere service of een retouraanroep. |   | Meerdere | Altijd. |"
  example:
  - "The following code example demonstrates the different between using Single, Reentrant, and Multiple. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public enum ConcurrencyMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  id: Multiple
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Het service-exemplaar is met meerdere threads. Er zijn geen garanties synchronisatie zijn aangebracht. Omdat andere threads uw service-object op elk gewenst moment wijzigen kunnen, moet u synchronisatie uitvoeren en consistentie van de status te allen tijde."
  syntax:
    content: Multiple
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  id: Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Het service-exemplaar is één thread en inspringende aanroepen accepteert. De inspringende service accepteert aanroepen bij het aanroepen van een andere service; het is daarom uw verantwoordelijkheid om de status van het object consistent voordat toelichtingen laat en moet u bevestigen dat de bewerking lokale gegevens geldig na toelichtingen is. Houd er rekening mee dat het service-exemplaar wordt ontgrendeld alleen door een andere service aanroepen via een [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] kanaal. In dit geval de opgeroepen-service opnieuw in de eerste service via een retouraanroep. Als de eerste service niet inspringende is, wordt de volgorde van de aanroepen resulteert in een impasse. Zie voor meer informatie <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>"
  syntax:
    content: Reentrant
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Single
  id: Single
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Het service-exemplaar is één thread en accepteert geen inspringende aanroepen. Als de <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>eigenschap is <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>, en aanvullende berichten binnenkomen terwijl het exemplaar een aanroep van services, dat deze berichten moeten wachten totdat de service beschikbaar is of totdat de time-out van berichten.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>"
  syntax:
    content: Single
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
- uid: System.ServiceModel.ConcurrencyMode.Single
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
