### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngKey
  id: CngKey
  children:
  - System.Security.Cryptography.CngKey.Algorithm
  - System.Security.Cryptography.CngKey.AlgorithmGroup
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  - System.Security.Cryptography.CngKey.Delete
  - System.Security.Cryptography.CngKey.Dispose
  - System.Security.Cryptography.CngKey.Exists(System.String)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.ExportPolicy
  - System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Handle
  - System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.IsEphemeral
  - System.Security.Cryptography.CngKey.IsMachineKey
  - System.Security.Cryptography.CngKey.KeyName
  - System.Security.Cryptography.CngKey.KeySize
  - System.Security.Cryptography.CngKey.KeyUsage
  - System.Security.Cryptography.CngKey.Open(System.String)
  - System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.ParentWindowHandle
  - System.Security.Cryptography.CngKey.Provider
  - System.Security.Cryptography.CngKey.ProviderHandle
  - System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngKey.UIPolicy
  - System.Security.Cryptography.CngKey.UniqueName
  langs:
  - csharp
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
  type: Class
  summary: "Definieert de kernfunctionaliteit van sleutels die worden gebruikt met Cryptography Next Generation (CNG)-objecten."
  remarks: "Deze klasse verpakt versleutelen sleutels, niet BCrypt sleutels. Versleutelen is een subset van de CNG sleutelopslag-functionaliteit. BCrypt is een subset waarmee de cryptografische basisservices zoals het genereren van willekeurige getallen, hash-functies, handtekeningen en versleutelingssleutels."
  syntax:
    content: 'public sealed class CngKey : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Algorithm
  nameWithType: CngKey.Algorithm
  fullName: System.Security.Cryptography.CngKey.Algorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u de algoritme die wordt gebruikt door de sleutel."
  syntax:
    content: public System.Security.Cryptography.CngAlgorithm Algorithm { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Een object dat de naam van een algoritme voor gegevensversleuteling geeft."
  overload: System.Security.Cryptography.CngKey.Algorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: AlgorithmGroup
  nameWithType: CngKey.AlgorithmGroup
  fullName: System.Security.Cryptography.CngKey.AlgorithmGroup
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u de algoritmegroep die wordt gebruikt door de sleutel."
  syntax:
    content: public System.Security.Cryptography.CngAlgorithmGroup AlgorithmGroup { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Een object dat de naam van een algoritmegroep van versleuteling geeft."
  overload: System.Security.Cryptography.CngKey.AlgorithmGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  id: Create(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Create(CngAlgorithm)
  nameWithType: CngKey.Create(CngAlgorithm)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Maakt een <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> -object dat kan worden gebruikt met het opgegeven algoritme."
  remarks: "Deze overbelasting maakt een sleutel zonder een naam, wat betekent dat de sleutel kortstondige is (dat wil zeggen, deze wordt niet persistent gemaakt). Maakt ook een standaard <xref:System.Security.Cryptography.CngKeyCreationParameters>-object dat Hiermee geeft u een standaard <xref:System.Security.Cryptography.CngProvider>en andere geavanceerde parameters voor de sleutel.</xref:System.Security.Cryptography.CngProvider> </xref:System.Security.Cryptography.CngKeyCreationParameters>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm);
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: "De algoritme die met de sleutel worden gebruikt."
    return:
      type: System.Security.Cryptography.CngKey
      description: "Een tijdelijke sleutel."
  overload: System.Security.Cryptography.CngKey.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>algorithm</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Create(CngAlgorithm,String)
  nameWithType: CngKey.Create(CngAlgorithm,String)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Maakt een benoemde <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> -object dat het opgegeven algoritme biedt."
  remarks: "Als `keyName` is opgegeven, wordt deze overbelasting maakt een permanente sleutel. Als `keyName` is niet opgegeven, wordt de sleutel worden kortstondige. Deze overbelasting maakt ook een standaard <xref:System.Security.Cryptography.CngKeyCreationParameters>-object dat Hiermee geeft u een standaard <xref:System.Security.Cryptography.CngProvider>en andere geavanceerde parameters voor de sleutel.</xref:System.Security.Cryptography.CngProvider> </xref:System.Security.Cryptography.CngKeyCreationParameters>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName);
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: "De algoritme die met de sleutel worden gebruikt."
    - id: keyName
      type: System.String
      description: "De naam van de sleutel. Als u een naam niet is opgegeven, wordt de sleutel niet permanent opgeslagen."
    return:
      type: System.Security.Cryptography.CngKey
      description: "Een persistente of tijdelijke sleutel waarmee het opgegeven algoritme."
  overload: System.Security.Cryptography.CngKey.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>algorithm</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Create(CngAlgorithm,String,CngKeyCreationParameters)
  nameWithType: CngKey.Create(CngAlgorithm,String,CngKeyCreationParameters)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm,String,CngKeyCreationParameters)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Maakt een benoemde <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> -object dat het opgegeven algoritme, met de parameters voor het maken van opgegeven biedt."
  remarks: "Als `keyName` is opgegeven, wordt deze overbelasting maakt een permanente sleutel. Als `keyName` is niet opgegeven, wordt de sleutel worden kortstondige."
  syntax:
    content: public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName, System.Security.Cryptography.CngKeyCreationParameters creationParameters);
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: "De algoritme die met de sleutel worden gebruikt."
    - id: keyName
      type: System.String
      description: "De naam van de sleutel. Als u een naam niet is opgegeven, wordt de sleutel niet permanent opgeslagen."
    - id: creationParameters
      type: System.Security.Cryptography.CngKeyCreationParameters
      description: "Een object dat geavanceerde parameters voor de methode, met inbegrip van de <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref>."
    return:
      type: System.Security.Cryptography.CngKey
      description: "Een persistente of tijdelijke sleutel waarmee het opgegeven algoritme."
  overload: System.Security.Cryptography.CngKey.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>algorithm</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Delete
  id: Delete
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Delete()
  nameWithType: CngKey.Delete()
  fullName: System.Security.Cryptography.CngKey.Delete()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee verwijdert u de sleutel die is gekoppeld aan het object."
  remarks: "-   Wanneer u de Delete-methode voor een tijdelijke sleutel aanroepen, sluit deze de handle naar de sleutel.       Wanneer u de Delete-methode voor een sleutel met de naam aanroepen, de <xref:System.Security.Cryptography.CngKey>object kan niet meer worden gebruikt wanneer de benoemde sleutel is verwijderd.</xref:System.Security.Cryptography.CngKey>"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.Security.Cryptography.CngKey.Delete*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Voor toegang tot een verwijderde sleutel is een poging gedaan."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Dispose
  id: Dispose
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Dispose()
  nameWithType: CngKey.Dispose()
  fullName: System.Security.Cryptography.CngKey.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Versies van alle resources die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> klasse."
  remarks: "Dispose aanroepen wanneer u klaar bent met de <xref:System.Security.Cryptography.CngKey>.</xref:System.Security.Cryptography.CngKey> De methode Dispose verlaat de <xref:System.Security.Cryptography.CngKey>in een onbruikbare status.</xref:System.Security.Cryptography.CngKey> Na Dispose aanroepen, moet u alle verwijzingen naar vrijgeven de <xref:System.Security.Cryptography.CngKey>zodat het geheugen door de garbage collector vrijmaken kunt die de <xref:System.Security.Cryptography.CngKey>is bepaald dat zich bevindt.</xref:System.Security.Cryptography.CngKey> </xref:System.Security.Cryptography.CngKey> Zie voor meer informatie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Altijd aanroep verwijderen voordat u uw laatste verwijzing naar de <xref:System.Security.Cryptography.CngKey>.</xref:System.Security.Cryptography.CngKey> vrijgeven Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de <xref:System.Security.Cryptography.CngKey>van het object `Finalize` methode.</xref:System.Security.Cryptography.CngKey>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.CngKey.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Exists(System.String)
  id: Exists(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Exists(String)
  nameWithType: CngKey.Exists(String)
  fullName: System.Security.Cryptography.CngKey.Exists(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Controleert of een sleutel met de naam in de standaard sleutelarchiefprovider (KSP bestaat)."
  remarks: "De standaardwaarde KSP is <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>"
  syntax:
    content: public static bool Exists (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: "De naam van de sleutel."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sleutel met de naam in de standaard KSP bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  id: Exists(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Exists(String,CngProvider)
  nameWithType: CngKey.Exists(String,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Exists(String,CngProvider)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Controleert of een sleutel met de naam in de opgegeven sleutelarchiefprovider (KSP bestaat)."
  remarks: "Gebruik deze overbelasting om te controleren op de aanwezigheid van een sleutel in een KSP dan de standaard KSP, van <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>"
  syntax:
    content: public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: "De naam van de sleutel."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "De KSP om te controleren voor de sleutel."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sleutel met de naam in de opgegeven provider bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Exists(String,CngProvider,CngKeyOpenOptions)
  nameWithType: CngKey.Exists(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Exists(String,CngProvider,CngKeyOpenOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Controleert of een sleutel met de naam in de opgegeven sleutelarchiefprovider (KSP bestaat) volgens de opgegeven opties."
  remarks: "Deze overbelasting gebruiken om te controleren op de aanwezigheid van een sleutel in een KSP dan de standaard <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>, en op te geven open sleutelopties.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>"
  syntax:
    content: public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions options);
    parameters:
    - id: keyName
      type: System.String
      description: "De naam van de sleutel."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "De KSP om te zoeken naar de sleutel."
    - id: options
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: "Een bitsgewijze combinatie van de opsommingswaarden die opties voor het openen van een sleutel opgeven."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sleutel met de naam in de opgegeven provider bestaat; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  id: Export(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Export(CngKeyBlobFormat)
  nameWithType: CngKey.Export(CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Export(CngKeyBlobFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Het sleutelmateriaal exporteert naar een BLOB, in de opgegeven indeling."
  remarks: "Cryptography Next Generation (CNG) kunt exporteren in een indeling die de onderliggende sleutelarchiefprovider (KSP) ondersteunt. Bijvoorbeeld: op Windows Vista, de standaard KSP (dit is <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>) kunt u alleen het exporteren van persoonlijke sleutels in de <xref:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob%2A>, <xref:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob%2A>, en <xref:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob%2A>indelingen.</xref:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob%2A> </xref:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob%2A> </xref:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob%2A> </xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> Deze beperking wordt bepaald door de onderliggende KSP. Als u een andere KSP gebruikt, kunnen andere indelingen toepassen."
  syntax:
    content: public byte[] Export (System.Security.Cryptography.CngKeyBlobFormat format);
    parameters:
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "Een object dat u de indeling van de BLOB-sleutel specificeert."
    return:
      type: System.Byte[]
      description: "Een BLOB die het sleutelmateriaal in de opgegeven indeling bevat."
  overload: System.Security.Cryptography.CngKey.Export*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten. Normaal gesproken de <xref:System.Security.Cryptography.CngKey.ExportPolicy*>staat niet toe dat de sleutel die moet worden geëxporteerd.</xref:System.Security.Cryptography.CngKey.ExportPolicy*>"
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.ExportPolicy
  id: ExportPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: ExportPolicy
  nameWithType: CngKey.ExportPolicy
  fullName: System.Security.Cryptography.CngKey.ExportPolicy
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u de export-beleid dat wordt gebruikt door de sleutel."
  remarks: "Het beleid exporteren bepaalt de frequentie van exporteren en indeling voor de sleutel."
  syntax:
    content: public System.Security.Cryptography.CngExportPolicies ExportPolicy { get; }
    return:
      type: System.Security.Cryptography.CngExportPolicies
      description: "Een object dat het beleid exporteren voor de sleutel aangeeft."
  overload: System.Security.Cryptography.CngKey.ExportPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: GetProperty(String,CngPropertyOptions)
  nameWithType: CngKey.GetProperty(String,CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.GetProperty(String,CngPropertyOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u een eigenschap, een naam en een set opties voor de eigenschap."
  remarks: "Het doel van deze methode is de waarde van een willekeurige eigenschap van de sleutel moet worden geretourneerd. De gebruikelijke manier eigenschappen ophalen is via de accessors van de eigenschap geleverd door de <xref:System.Security.Cryptography.CngKey>klasse.</xref:System.Security.Cryptography.CngKey> <xref:System.Security.Cryptography.CngKey>biedt wrappers voor verschillende, maar niet alle, eigenschappen.</xref:System.Security.Cryptography.CngKey> De methode GetProperty wordt voornamelijk gebruikt voor toegang tot de waarde van een eigenschap die niet zijn ingepakt.       Deze methode is handig in de volgende gevallen:-een nieuwe Cryptography Next Generation (CNG)-sleuteleigenschap die een wrapper heeft geen ondersteuning biedt voor een nieuwe versie van het besturingssysteem.      -U toevoegen een aangepaste eigenschap aan de sleutel.       De `options` parameter name wordt gebruikt om aan te geven van de volgende: - of de eigenschap ingebouwd of aangepast is.      -De eigenschap moet of persistent worden gemaakt met de sleutel.       Deze opties moeten overeenkomen met de waarde die de eigenschap is ingesteld met of de eigenschap wordt niet gevonden.       <xref:System.Security.Cryptography.CryptographicException>gegenereerd als de eigenschap kan niet worden gevonden.</xref:System.Security.Cryptography.CryptographicException> U moet aanroepen de <xref:System.Security.Cryptography.CngKey.HasProperty%2A>aanroep van servermethode eerst om te voorkomen dat de uitzondering in plaats van de methode wrapping in een `try/catch` blok.</xref:System.Security.Cryptography.CngKey.HasProperty%2A>"
  syntax:
    content: public System.Security.Cryptography.CngProperty GetProperty (string name, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de gewenste eigenschap."
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: "Een bitsgewijze combinatie van de opsommingswaarden die opties voor de benoemde eigenschap opgeven."
    return:
      type: System.Security.Cryptography.CngProperty
      description: "Een object dat de raw-waarde van de opgegeven eigenschap bevat."
  overload: System.Security.Cryptography.CngKey.GetProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Handle
  id: Handle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Handle
  nameWithType: CngKey.Handle
  fullName: System.Security.Cryptography.CngKey.Handle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u een SafeHandle die een systeemeigen sleutel (NCRYPT_KEY_HANDLE) vertegenwoordigt."
  remarks: "De geretourneerde ingang is een duplicaat van de ingang in de huidige <xref:System.Security.Cryptography.CngKey>object.</xref:System.Security.Cryptography.CngKey> Het blijft van kracht zelfs als de huidige <xref:System.Security.Cryptography.CngKey>is verwijderd en moet worden verwijderd van afzonderlijk.</xref:System.Security.Cryptography.CngKey>       U kunt het huidige object en de ingang in willekeurige volgorde zonder negatieve gevolgen vrijgeven."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle Handle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
      description: "Een SafeHandle die staat voor de sleutel."
  overload: System.Security.Cryptography.CngKey.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: HasProperty(String,CngPropertyOptions)
  nameWithType: CngKey.HasProperty(String,CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.HasProperty(String,CngPropertyOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Controleert of de opgegeven eigenschap op de sleutel bestaat."
  remarks: "De `options` parameter name wordt gebruikt om aan te geven van de volgende: - of de eigenschap ingebouwd of aangepast is.      -De eigenschap moet of persistent worden gemaakt met de sleutel.       Deze opties moeten overeenkomen met de waarde die de eigenschap is ingesteld met of de eigenschap wordt niet gevonden.       Deze methode werkt goed zelfs als de eigenschap is ingesteld op `false` of nul."
  syntax:
    content: public bool HasProperty (string name, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de eigenschap om te controleren."
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: "Een bitsgewijze combinatie van de opsommingswaarden die opties voor de benoemde eigenschap opgeven."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven eigenschap wordt gevonden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.HasProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Import(Byte[],CngKeyBlobFormat)
  nameWithType: CngKey.Import(Byte[],CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Import(Byte[],CngKeyBlobFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Maakt een nieuwe sleutel door het opgegeven sleutelmateriaal te importeren in de standaard sleutelarchiefprovider (KSP) en het gebruik van de opgegeven indeling."
  remarks: "De standaardwaarde KSP is <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>      > [!IMPORTANT] > Op Windows-besturingssystemen vóór Windows 7 en Windows Server 2008 R2, sommige formaten CNG-sleutel binaire BLOB (large object) worden niet ondersteund."
  syntax:
    content: public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: "Een matrix die gegevens van de sleutel bevat."
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "Een object dat u de indeling van specificeert de `keyBlob` matrix."
    return:
      type: System.Security.Cryptography.CngKey
      description: "Een nieuwe sleutel."
  overload: System.Security.Cryptography.CngKey.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyBlob</code>or <code>format</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Import(Byte[],CngKeyBlobFormat,CngProvider)
  nameWithType: CngKey.Import(Byte[],CngKeyBlobFormat,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Import(Byte[],CngKeyBlobFormat,CngProvider)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Een nieuwe sleutel gemaakt door het importeren van de opgegeven sleutelmateriaal opslaat in de opgegeven sleutelarchiefprovider (KSP) met de opgegeven indeling."
  remarks: >-
    > [!IMPORTANT]

    >  On Windows operating systems before Windows 7 and Windows Server 2008 R2, some CNG key binary large object (BLOB) formats are not supported.
  syntax:
    content: public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: "Een matrix die gegevens van de sleutel bevat."
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "Een object dat u de indeling van specificeert de `keyBlob` matrix."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "De KSP."
    return:
      type: System.Security.Cryptography.CngKey
      description: "Een nieuwe sleutel."
  overload: System.Security.Cryptography.CngKey.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyBlob</code>, <code>format</code>, or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.IsEphemeral
  id: IsEphemeral
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: IsEphemeral
  nameWithType: CngKey.IsEphemeral
  fullName: System.Security.Cryptography.CngKey.IsEphemeral
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee wordt de status van de persistentie van de sleutel opgehaald."
  remarks: "Deze eigenschap bepaalt of de sleutel kortstondige (dat wil zeggen, de sleutel bestaat alleen voor de levensduur van de ingang), of persistent (dat wil zeggen, de sleutel bestaat onafhankelijk van de ingang).       De geretourneerde waarde is afhankelijk van de methode die wordt gebruikt voor het ophalen van de sleutel: - als de sleutel niet is geopend met de <xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29>overbelasting voor methode, de common language runtime (CLR) wordt beheerd door de sleutel en kunt bepalen of het kortstondige.</xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29>      -Als de sleutel is geopend met de <xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29>overbelasting voor methode, de CLR kan niet bepalen of het kortstondige.</xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29> De sleutel wordt daarom uitgegaan persistent worden gemaakt. Echter, als deze methode wordt gebruikt voor het openen van een ingang naar een sleutel die is gemaakt door de CLR, de CLR zich om te bepalen of tijdelijke.       Deze eigenschap heeft geen openbare setter; het is kenmerk alleen-lezen."
  syntax:
    content: public bool IsEphemeral { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sleutel kortstondige; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.IsEphemeral*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.IsMachineKey
  id: IsMachineKey
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: IsMachineKey
  nameWithType: CngKey.IsMachineKey
  fullName: System.Security.Cryptography.CngKey.IsMachineKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u het bereik van de sleutel (computer of gebruiker)."
  syntax:
    content: public bool IsMachineKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sleutel beschikbaar is op basis van alle computers; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> als de sleutel alleen gebruikt voor de huidige gebruiker wordt."
  overload: System.Security.Cryptography.CngKey.IsMachineKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.KeyName
  id: KeyName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: KeyName
  nameWithType: CngKey.KeyName
  fullName: System.Security.Cryptography.CngKey.KeyName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee wordt de naam van de sleutel opgehaald."
  syntax:
    content: public string KeyName { get; }
    return:
      type: System.String
      description: "De naam van de sleutel. Als de sleutel kortstondige is, is de waarde <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.KeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.KeySize
  id: KeySize
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: KeySize
  nameWithType: CngKey.KeySize
  fullName: System.Security.Cryptography.CngKey.KeySize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt de grootte van de sleutel in bits."
  syntax:
    content: public int KeySize { get; }
    return:
      type: System.Int32
      description: "De lengte van de sleutel in bits."
  overload: System.Security.Cryptography.CngKey.KeySize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.KeyUsage
  id: KeyUsage
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: KeyUsage
  nameWithType: CngKey.KeyUsage
  fullName: System.Security.Cryptography.CngKey.KeyUsage
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u de cryptografische bewerkingen die zijn opgegeven door de sleutel."
  syntax:
    content: public System.Security.Cryptography.CngKeyUsages KeyUsage { get; }
    return:
      type: System.Security.Cryptography.CngKeyUsages
      description: "Een bitsgewijze combinatie van de opsommingswaarden die de vormen van gebruik toegestaan voor de sleutel opgeven."
  overload: System.Security.Cryptography.CngKey.KeyUsage*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Open(System.String)
  id: Open(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Open(String)
  nameWithType: CngKey.Open(String)
  fullName: System.Security.Cryptography.CngKey.Open(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Maakt een exemplaar van een <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> met de sleutel van object met een bestaande naam."
  remarks: "Deze overbelasting gebruikt de volgende standaardinstellingen:-sleutelarchiefprovider (KSP): <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> Gebruik de <xref:System.Security.Cryptography.CngKey.Open%28System.String%2CSystem.Security.Cryptography.CngProvider%29>overbelasting als u wilt opgeven van een andere KSP.</xref:System.Security.Cryptography.CngKey.Open%28System.String%2CSystem.Security.Cryptography.CngProvider%29>      -Opties voor het openen sleutel: <xref:System.Security.Cryptography.CngKeyOpenOptions?displayProperty=fullName>.</xref:System.Security.Cryptography.CngKeyOpenOptions?displayProperty=fullName>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: "De naam van de sleutel."
    return:
      type: System.Security.Cryptography.CngKey
      description: "Een bestaande sleutel."
  overload: System.Security.Cryptography.CngKey.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  id: Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  nameWithType: CngKey.Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Maakt een exemplaar van een <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> object met behulp van een ingang naar een bestaande sleutel."
  remarks: "Deze overbelasting kan geavanceerde gebruikers gebruiken die de CNG-klassen, zelfs als ze afhankelijk van de platform aanroepen of de beheerde interop-mogelijkheden van C++. Bijvoorbeeld, als er een systeemeigen bibliotheek waarmee de sleutel als een NCRYPT_KEY_HANDLE wordt geretourneerd, kunt deze overbelasting u een beheerde wrapper rond de sleutel maken en gebruiken van de CNG-klassen te manipuleren.       Wanneer u een sleutel met behulp van de ingang opent, kunt u tijdelijke status van de sleutel kan niet vaststellen en moet deze zelf opgeeft. Verschillende eigenschappen van de <xref:System.Security.Cryptography.CngKey>klasse afhankelijk zijn van deze waarde niet kloppen.</xref:System.Security.Cryptography.CngKey> Daarom ervoor zorgen dat u de juiste vlagwaarden waarde geeft de <xref:System.Security.Cryptography.CngKey.Open%2A>methoden.</xref:System.Security.Cryptography.CngKey.Open%2A>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle keyHandle, System.Security.Cryptography.CngKeyHandleOpenOptions keyHandleOpenOptions);
    parameters:
    - id: keyHandle
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
      description: "Een ingang naar een bestaande sleutel."
    - id: keyHandleOpenOptions
      type: System.Security.Cryptography.CngKeyHandleOpenOptions
      description: "Een van de opsommingswaarden die aangeeft of `keyHandle` vertegenwoordigt een tijdelijke sleutel of een benoemde sleutel."
    return:
      type: System.Security.Cryptography.CngKey
      description: "Een bestaande sleutel."
  overload: System.Security.Cryptography.CngKey.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyHandle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyHandle</code>is ongeldig, of dit reeds is gesloten. Deze uitzondering wordt ook gegenereerd als de sleutel is een tijdelijke sleutel die is gemaakt door de common language runtime (CLR), maar de <xref href=&quot;System.Security.Cryptography.CngKeyHandleOpenOptions&quot;> </xref> waarde niet is opgegeven."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  id: Open(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Open(String,CngProvider)
  nameWithType: CngKey.Open(String,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Open(String,CngProvider)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Maakt een exemplaar van een <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> -object met een bestaande sleutel, met behulp van de opgegeven sleutelarchiefprovider (KSP) genaamd."
  remarks: "In tegenstelling tot de <xref:System.Security.Cryptography.CngKey.Open%28System.String%29>methode-overload deze overbelasting kunt u opgeven van de provider.</xref:System.Security.Cryptography.CngKey.Open%28System.String%29> Daarnaast biedt een standaard <xref:System.Security.Cryptography.CngKeyOpenOptions>waarde van <xref:System.Security.Cryptography.CngKeyOpenOptions>wordt gemaakt en gekoppeld aan de sleutel.</xref:System.Security.Cryptography.CngKeyOpenOptions> </xref:System.Security.Cryptography.CngKeyOpenOptions>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: "De naam van de sleutel."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "De KSP dat de sleutel bevat."
    return:
      type: System.Security.Cryptography.CngKey
      description: "Een bestaande sleutel."
  overload: System.Security.Cryptography.CngKey.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Open(String,CngProvider,CngKeyOpenOptions)
  nameWithType: CngKey.Open(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(String,CngProvider,CngKeyOpenOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Maakt een exemplaar van een <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> -object met een bestaande sleutel, met behulp van de opgegeven sleutelarchiefprovider (KSP) en de opties voor open genaamd."
  remarks: "In tegenstelling tot de <xref:System.Security.Cryptography.CngKey.Open%28System.String%29>methode-overload deze overbelasting kunt u zowel de provider en de sleutel open opties opgeven.</xref:System.Security.Cryptography.CngKey.Open%28System.String%29>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);
    parameters:
    - id: keyName
      type: System.String
      description: "De naam van de sleutel."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "De KSP dat de sleutel bevat."
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: "Een bitsgewijze combinatie van de opsommingswaarden die opties opgeven voor het openen van de sleutel, zoals waar de sleutel wordt geopend vanuit (computer of gebruiker opslag) en of u wilt onderdrukken UI te vragen."
    return:
      type: System.Security.Cryptography.CngKey
      description: "Een bestaande sleutel."
  overload: System.Security.Cryptography.CngKey.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Cryptography Next Generation (CNG) wordt niet ondersteund op dit systeem."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andere fouten."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle
  id: ParentWindowHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: ParentWindowHandle
  nameWithType: CngKey.ParentWindowHandle
  fullName: System.Security.Cryptography.CngKey.ParentWindowHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Opgehaald of ingesteld van de vensterkoppeling (HWND) die moet worden gebruikt voor de aanwijzingen in de gebruikersinterface (UI) veroorzaakt door het openen van de sleutel."
  remarks: "De ingang van de bovenliggende venster voor de sleutel wordt gebruikt in de gebruikersinterface wordt u gevraagd, zoals smartcard PINCODE wordt gevraagd. Deze waarde is niet persistent met persistente sleutels.       Het is raadzaam dat u altijd deze eigenschap instellen voor sleutels die een gebruikersinterface worden weergegeven. Gebruik de standaardwaarde van geen `null` voor dergelijke sleutels."
  syntax:
    content: public IntPtr ParentWindowHandle { get; set; }
    return:
      type: System.IntPtr
      description: "De ingang bovenliggende venster voor de sleutel."
  overload: System.Security.Cryptography.CngKey.ParentWindowHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Provider
  id: Provider
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Provider
  nameWithType: CngKey.Provider
  fullName: System.Security.Cryptography.CngKey.Provider
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u de sleutelarchiefprovider (KSP) waarmee de sleutel wordt beheerd."
  syntax:
    content: public System.Security.Cryptography.CngProvider Provider { get; }
    return:
      type: System.Security.Cryptography.CngProvider
      description: "De KSP waarmee de sleutel wordt beheerd."
  overload: System.Security.Cryptography.CngKey.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.ProviderHandle
  id: ProviderHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: ProviderHandle
  nameWithType: CngKey.ProviderHandle
  fullName: System.Security.Cryptography.CngKey.ProviderHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee haalt u een systeemeigen koppeling (een NCRYPT_PROV_HANDLE) naar de sleutelarchiefprovider (KSP)."
  remarks: "De geretourneerde ingang is een duplicaat van de ingang in de huidige <xref:System.Security.Cryptography.CngKey>object.</xref:System.Security.Cryptography.CngKey> Het blijft van kracht zelfs als de huidige <xref:System.Security.Cryptography.CngKey>is verwijderd en moet worden verwijderd van afzonderlijk.</xref:System.Security.Cryptography.CngKey>       U kunt het huidige object en de ingang in willekeurige volgorde zonder negatieve gevolgen vrijgeven."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle ProviderHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
      description: "Een ingang naar de KSP."
  overload: System.Security.Cryptography.CngKey.ProviderHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  id: SetProperty(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: SetProperty(CngProperty)
  nameWithType: CngKey.SetProperty(CngProperty)
  fullName: System.Security.Cryptography.CngKey.SetProperty(CngProperty)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee stelt u een eigenschap met de naam van de sleutel."
  remarks: "Deze methode kunt u een nieuwe aangepaste eigenschap toevoegen aan een bestaande sleutel met behulp van een <xref:System.Security.Cryptography.CngProperty>object.</xref:System.Security.Cryptography.CngProperty> De opties instellen voor de <xref:System.Security.Cryptography.CngProperty>object moet exact overeenkomen met de opties in de <xref:System.Security.Cryptography.CngKey.GetProperty%2A>aanroepen.</xref:System.Security.Cryptography.CngKey.GetProperty%2A> </xref:System.Security.Cryptography.CngProperty> Anders wordt de eigenschap niet gevonden."
  syntax:
    content: public void SetProperty (System.Security.Cryptography.CngProperty property);
    parameters:
    - id: property
      type: System.Security.Cryptography.CngProperty
      description: "De sleuteleigenschap om in te stellen."
  overload: System.Security.Cryptography.CngKey.SetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.UIPolicy
  id: UIPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: UIPolicy
  nameWithType: CngKey.UIPolicy
  fullName: System.Security.Cryptography.CngKey.UIPolicy
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Parameters die de gebruikersinterface (UI) voor toegang tot de sleutel opgehaald."
  remarks: "Het belangrijkste UI-beleid wordt gebruikt met de gebruikersinterface vraagt zoals smartcard PINCODE wordt gevraagd. Dit beleid bepaalt ook wachtwoord dialoogvensters voor beveiligde sleutels."
  syntax:
    content: public System.Security.Cryptography.CngUIPolicy UIPolicy { get; }
    return:
      type: System.Security.Cryptography.CngUIPolicy
      description: "Een object met configuratieparameters voor het weergeven van de gebruikersinterface."
  overload: System.Security.Cryptography.CngKey.UIPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.UniqueName
  id: UniqueName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: UniqueName
  nameWithType: CngKey.UniqueName
  fullName: System.Security.Cryptography.CngKey.UniqueName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hiermee wordt de unieke naam voor de sleutel opgehaald."
  remarks: "Deze eigenschap een andere naam op die kan worden gebruikt bij het openen van de sleutel opgehaald. U kunt deze eigenschap gebruiken als de vastgelegde sleutel vormt geen unieke identificatie door de naam van de oorspronkelijke sleutel. De <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>eigenschap resulteert in de bestandsnaam van de sleutel als deze eigenschap.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> De naam die wordt geretourneerd door de <xref:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider%2A>afhankelijk zijn van toepassing is.</xref:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider%2A>"
  syntax:
    content: public string UniqueName { get; }
    return:
      type: System.String
      description: "Een alternatieve naam voor de sleutel. Als de sleutel kortstondige is, is de waarde <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.UniqueName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngKey.Algorithm
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Algorithm
  nameWithType: CngKey.Algorithm
  fullName: System.Security.Cryptography.CngKey.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngKey.AlgorithmGroup
  fullName: System.Security.Cryptography.CngKey.AlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create(CngAlgorithm)
  nameWithType: CngKey.Create(CngAlgorithm)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create(CngAlgorithm,String)
  nameWithType: CngKey.Create(CngAlgorithm,String)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create(CngAlgorithm,String,CngKeyCreationParameters)
  nameWithType: CngKey.Create(CngAlgorithm,String,CngKeyCreationParameters)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm,String,CngKeyCreationParameters)
- uid: System.Security.Cryptography.CngKeyCreationParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyCreationParameters
  nameWithType: CngKeyCreationParameters
  fullName: System.Security.Cryptography.CngKeyCreationParameters
- uid: System.Security.Cryptography.CngKey.Delete
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Delete()
  nameWithType: CngKey.Delete()
  fullName: System.Security.Cryptography.CngKey.Delete()
- uid: System.Security.Cryptography.CngKey.Dispose
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Dispose()
  nameWithType: CngKey.Dispose()
  fullName: System.Security.Cryptography.CngKey.Dispose()
- uid: System.Security.Cryptography.CngKey.Exists(System.String)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists(String)
  nameWithType: CngKey.Exists(String)
  fullName: System.Security.Cryptography.CngKey.Exists(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists(String,CngProvider)
  nameWithType: CngKey.Exists(String,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Exists(String,CngProvider)
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists(String,CngProvider,CngKeyOpenOptions)
  nameWithType: CngKey.Exists(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Exists(String,CngProvider,CngKeyOpenOptions)
- uid: System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Export(CngKeyBlobFormat)
  nameWithType: CngKey.Export(CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Export(CngKeyBlobFormat)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CngKeyBlobFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyBlobFormat
  nameWithType: CngKeyBlobFormat
  fullName: System.Security.Cryptography.CngKeyBlobFormat
- uid: System.Security.Cryptography.CngKey.ExportPolicy
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ExportPolicy
  nameWithType: CngKey.ExportPolicy
  fullName: System.Security.Cryptography.CngKey.ExportPolicy
- uid: System.Security.Cryptography.CngExportPolicies
  parent: System.Security.Cryptography
  isExternal: false
  name: CngExportPolicies
  nameWithType: CngExportPolicies
  fullName: System.Security.Cryptography.CngExportPolicies
- uid: System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: GetProperty(String,CngPropertyOptions)
  nameWithType: CngKey.GetProperty(String,CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.GetProperty(String,CngPropertyOptions)
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngKey.Handle
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Handle
  nameWithType: CngKey.Handle
  fullName: System.Security.Cryptography.CngKey.Handle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptKeyHandle
  nameWithType: SafeNCryptKeyHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
- uid: System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: HasProperty(String,CngPropertyOptions)
  nameWithType: CngKey.HasProperty(String,CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.HasProperty(String,CngPropertyOptions)
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Import(Byte[],CngKeyBlobFormat)
  nameWithType: CngKey.Import(Byte[],CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Import(Byte[],CngKeyBlobFormat)
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Import(Byte[],CngKeyBlobFormat,CngProvider)
  nameWithType: CngKey.Import(Byte[],CngKeyBlobFormat,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Import(Byte[],CngKeyBlobFormat,CngProvider)
- uid: System.Security.Cryptography.CngKey.IsEphemeral
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsEphemeral
  nameWithType: CngKey.IsEphemeral
  fullName: System.Security.Cryptography.CngKey.IsEphemeral
- uid: System.Security.Cryptography.CngKey.IsMachineKey
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsMachineKey
  nameWithType: CngKey.IsMachineKey
  fullName: System.Security.Cryptography.CngKey.IsMachineKey
- uid: System.Security.Cryptography.CngKey.KeyName
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyName
  nameWithType: CngKey.KeyName
  fullName: System.Security.Cryptography.CngKey.KeyName
- uid: System.Security.Cryptography.CngKey.KeySize
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeySize
  nameWithType: CngKey.KeySize
  fullName: System.Security.Cryptography.CngKey.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngKey.KeyUsage
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyUsage
  nameWithType: CngKey.KeyUsage
  fullName: System.Security.Cryptography.CngKey.KeyUsage
- uid: System.Security.Cryptography.CngKeyUsages
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyUsages
  nameWithType: CngKeyUsages
  fullName: System.Security.Cryptography.CngKeyUsages
- uid: System.Security.Cryptography.CngKey.Open(System.String)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open(String)
  nameWithType: CngKey.Open(String)
  fullName: System.Security.Cryptography.CngKey.Open(String)
- uid: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  nameWithType: CngKey.Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
- uid: System.Security.Cryptography.CngKeyHandleOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyHandleOpenOptions
  nameWithType: CngKeyHandleOpenOptions
  fullName: System.Security.Cryptography.CngKeyHandleOpenOptions
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open(String,CngProvider)
  nameWithType: CngKey.Open(String,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Open(String,CngProvider)
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open(String,CngProvider,CngKeyOpenOptions)
  nameWithType: CngKey.Open(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(String,CngProvider,CngKeyOpenOptions)
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CngKey.ParentWindowHandle
  fullName: System.Security.Cryptography.CngKey.ParentWindowHandle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CngKey.Provider
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Provider
  nameWithType: CngKey.Provider
  fullName: System.Security.Cryptography.CngKey.Provider
- uid: System.Security.Cryptography.CngKey.ProviderHandle
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ProviderHandle
  nameWithType: CngKey.ProviderHandle
  fullName: System.Security.Cryptography.CngKey.ProviderHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptProviderHandle
  nameWithType: SafeNCryptProviderHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
- uid: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: SetProperty(CngProperty)
  nameWithType: CngKey.SetProperty(CngProperty)
  fullName: System.Security.Cryptography.CngKey.SetProperty(CngProperty)
- uid: System.Security.Cryptography.CngKey.UIPolicy
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UIPolicy
  nameWithType: CngKey.UIPolicy
  fullName: System.Security.Cryptography.CngKey.UIPolicy
- uid: System.Security.Cryptography.CngUIPolicy
  parent: System.Security.Cryptography
  isExternal: false
  name: CngUIPolicy
  nameWithType: CngUIPolicy
  fullName: System.Security.Cryptography.CngUIPolicy
- uid: System.Security.Cryptography.CngKey.UniqueName
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UniqueName
  nameWithType: CngKey.UniqueName
  fullName: System.Security.Cryptography.CngKey.UniqueName
- uid: System.Security.Cryptography.CngKey.Algorithm*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Algorithm
  nameWithType: CngKey.Algorithm
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngKey.AlgorithmGroup
- uid: System.Security.Cryptography.CngKey.Create*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create
  nameWithType: CngKey.Create
- uid: System.Security.Cryptography.CngKey.Delete*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Delete
  nameWithType: CngKey.Delete
- uid: System.Security.Cryptography.CngKey.Dispose*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Dispose
  nameWithType: CngKey.Dispose
- uid: System.Security.Cryptography.CngKey.Exists*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists
  nameWithType: CngKey.Exists
- uid: System.Security.Cryptography.CngKey.Export*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Export
  nameWithType: CngKey.Export
- uid: System.Security.Cryptography.CngKey.ExportPolicy*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ExportPolicy
  nameWithType: CngKey.ExportPolicy
- uid: System.Security.Cryptography.CngKey.GetProperty*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: GetProperty
  nameWithType: CngKey.GetProperty
- uid: System.Security.Cryptography.CngKey.Handle*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Handle
  nameWithType: CngKey.Handle
- uid: System.Security.Cryptography.CngKey.HasProperty*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: HasProperty
  nameWithType: CngKey.HasProperty
- uid: System.Security.Cryptography.CngKey.Import*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Import
  nameWithType: CngKey.Import
- uid: System.Security.Cryptography.CngKey.IsEphemeral*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsEphemeral
  nameWithType: CngKey.IsEphemeral
- uid: System.Security.Cryptography.CngKey.IsMachineKey*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsMachineKey
  nameWithType: CngKey.IsMachineKey
- uid: System.Security.Cryptography.CngKey.KeyName*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyName
  nameWithType: CngKey.KeyName
- uid: System.Security.Cryptography.CngKey.KeySize*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeySize
  nameWithType: CngKey.KeySize
- uid: System.Security.Cryptography.CngKey.KeyUsage*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyUsage
  nameWithType: CngKey.KeyUsage
- uid: System.Security.Cryptography.CngKey.Open*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open
  nameWithType: CngKey.Open
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CngKey.ParentWindowHandle
- uid: System.Security.Cryptography.CngKey.Provider*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Provider
  nameWithType: CngKey.Provider
- uid: System.Security.Cryptography.CngKey.ProviderHandle*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ProviderHandle
  nameWithType: CngKey.ProviderHandle
- uid: System.Security.Cryptography.CngKey.SetProperty*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: SetProperty
  nameWithType: CngKey.SetProperty
- uid: System.Security.Cryptography.CngKey.UIPolicy*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UIPolicy
  nameWithType: CngKey.UIPolicy
- uid: System.Security.Cryptography.CngKey.UniqueName*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UniqueName
  nameWithType: CngKey.UniqueName
