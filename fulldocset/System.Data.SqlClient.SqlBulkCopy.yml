### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlBulkCopy
  id: SqlBulkCopy
  children:
  - System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)
  - System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)
  - System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)
  - System.Data.SqlClient.SqlBulkCopy.BatchSize
  - System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout
  - System.Data.SqlClient.SqlBulkCopy.Close
  - System.Data.SqlClient.SqlBulkCopy.ColumnMappings
  - System.Data.SqlClient.SqlBulkCopy.DestinationTableName
  - System.Data.SqlClient.SqlBulkCopy.EnableStreaming
  - System.Data.SqlClient.SqlBulkCopy.NotifyAfter
  - System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied
  - System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose
  - System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])
  - System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)
  langs:
  - csharp
  name: SqlBulkCopy
  nameWithType: SqlBulkCopy
  fullName: System.Data.SqlClient.SqlBulkCopy
  type: Class
  summary: "Hiermee kunt u efficiënt bulksgewijs laden een SQL Server-tabel met gegevens uit een andere gegevensbron."
  remarks: "Microsoft SQL Server bevat een populaire opdrachtprompt-hulpprogramma met de naam **bcp** voor het verplaatsen van gegevens uit een tabel naar een andere, of op één server of tussen servers. De klasse SqlBulkCopy kunt u schrijven van beheerde code-oplossingen die soortgelijke functionaliteit bieden. Er zijn andere manieren om gegevens te laden in een tabel met SQL Server (INSERT-instructies, bijvoorbeeld), maar SqlBulkCopy biedt een voordeel belangrijke prestatieverbetering beweegt.       De klasse SqlBulkCopy kan worden gebruikt om gegevens te schrijven alleen voor SQL Server-tabellen. De gegevensbron is echter niet beperkt tot SQL Server. een willekeurige gegevensbron kan worden gebruikt zolang de gegevens kunnen worden geladen naar een <xref:System.Data.DataTable>exemplaar of lezen met een <xref:System.Data.IDataReader>exemplaar.</xref:System.Data.IDataReader> </xref:System.Data.DataTable>       SqlBulkCopy zal mislukken wanneer bulksgewijs laden een <xref:System.Data.DataTable>kolom van het type <xref:System.Data.SqlTypes.SqlDateTime>in een SQL-Server de kolom waarvan het type een van de datum/tijd-typen is die zijn toegevoegd in SQL Server 2008.</xref:System.Data.SqlTypes.SqlDateTime> </xref:System.Data.DataTable>"
  example:
  - "The following console application demonstrates how to load data using the SqlBulkCopy class. In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]**AdventureWorks** database to a similar table in the same database.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks BulkCopy.Single#1](~/add/codesnippet/csharp/t-system.data.sqlclient._9_1.cs)]\n [!code-vb[DataWorks BulkCopy.Single#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._9_1.vb)]"
  syntax:
    content: 'public sealed class SqlBulkCopy : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: SqlBulkCopy(SqlConnection)
  nameWithType: SqlBulkCopy.SqlBulkCopy(SqlConnection)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> klasse met behulp van het opgegeven open exemplaar van <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "Omdat de verbinding al geopend wanneer is de <xref:System.Data.SqlClient.SqlBulkCopy>-exemplaar is geïnitialiseerd, blijft de verbinding openen na de <xref:System.Data.SqlClient.SqlBulkCopy>exemplaar is gesloten.</xref:System.Data.SqlClient.SqlBulkCopy> </xref:System.Data.SqlClient.SqlBulkCopy>       Als de `connection` -argument is null, een <xref:System.ArgumentNullException>gegenereerd.</xref:System.ArgumentNullException>"
  example:
  - "The following console application demonstrates how to bulk load data using a connection that is already open. In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]**AdventureWorks** database to a similar table in the same database. This example is for demonstration purposes only. You would not use `SqlBulkCopy` to move data from one table to another in the same database in a production application. Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks BulkCopy.Single#1](~/add/codesnippet/csharp/759c1349-38f0-4ca1-9e42-_1.cs)]\n [!code-vb[DataWorks BulkCopy.Single#1](~/add/codesnippet/visualbasic/759c1349-38f0-4ca1-9e42-_1.vb)]"
  syntax:
    content: public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "De al geopende <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -exemplaar dat wordt gebruikt voor het uitvoeren van de kopieerbewerking bulksgewijs. Als de verbindingsreeks geen gebruikt <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, kunt u <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> aan de gebruikers-ID en wachtwoord veiliger dan door de gebruikers-ID en het wachtwoord als tekst in de verbindingsreeks opgeven."
  overload: System.Data.SqlClient.SqlBulkCopy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: SqlBulkCopy(String)
  nameWithType: SqlBulkCopy.SqlBulkCopy(String)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert en opent u een nieuw exemplaar van <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> op basis van de opgegeven <code> connectionString </code>. De constructor gebruikt de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> initialiseren van een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> klasse."
  remarks: "De verbinding is automatisch aan het einde van de kopieerbewerking bulksgewijs gesloten.       Als `connectionString` is null, een <xref:System.ArgumentNullException>gegenereerd.</xref:System.ArgumentNullException> Als `connectionString` is een lege tekenreeks, een <xref:System.ArgumentException>gegenereerd.</xref:System.ArgumentException>"
  example:
  - "The following console application demonstrates how to bulk load data by using a connection specified as a string. The connection is automatically closed when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.  \n  \n In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance. The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._5_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ConnectionString#1](~/add/codesnippet/csharp/m-system.data.sqlclient._5_1.cs)]"
  syntax:
    content: public SqlBulkCopy (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "De tekenreeks voor de definitie van de verbinding die wordt geopend voor gebruik door de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> exemplaar. Als de verbindingsreeks geen gebruikt <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, kunt u &lt;xref:System.Data.SqlClient.SqlBulkCopy.%23ctor%2A&gt; of &lt;xref:System.Data.SqlClient.SqlBulkCopy.%23ctor%2A&gt; en <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> om door te geven van de gebruikers-ID en het wachtwoord veiliger dan door de gebruikers-ID en het wachtwoord als tekst in de verbindingsreeks opgeven."
  overload: System.Data.SqlClient.SqlBulkCopy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)
  id: '#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)'
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: SqlBulkCopy(String,SqlBulkCopyOptions)
  nameWithType: SqlBulkCopy.SqlBulkCopy(String,SqlBulkCopyOptions)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(String,SqlBulkCopyOptions)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert en opent u een nieuw exemplaar van <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> op basis van de opgegeven <code> connectionString </code>. De constructor gebruikt die <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> initialiseren van een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> klasse. De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> exemplaar zich gedraagt volgens de opties die zijn opgegeven in de <code> copyOptions </code> parameter."
  remarks: "U kunt gedetailleerde informatie verkrijgen over alle opties voor bulksgewijs kopiëren in de <xref:System.Data.SqlClient.SqlBulkCopyOptions>onderwerp.</xref:System.Data.SqlClient.SqlBulkCopyOptions>"
  example:
  - "The following console application demonstrates how to perform a bulk load by using a connection specified as a string. An option is set to use the value in the identity column of the source table when you load the destination table. In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance. The source table and destination table each include an Identity column. By default, a new value for the **Identity** column is generated in the destination table for each row added. In this example, an option is set when the connection is opened that forces the bulk load process to use the **Identity** values from the source table instead. To see how the option changes the way the bulk load works, run the sample with the **dbo.BulkCopyDemoMatchingColumns** table empty. All rows load from the source. Then run the sample again without emptying the table. An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.KeepIdentity#1](~/add/codesnippet/csharp/9a723f0e-d2b0-40de-a13f-_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.KeepIdentity#1](~/add/codesnippet/visualbasic/9a723f0e-d2b0-40de-a13f-_1.vb)]"
  syntax:
    content: public SqlBulkCopy (string connectionString, System.Data.SqlClient.SqlBulkCopyOptions copyOptions);
    parameters:
    - id: connectionString
      type: System.String
      description: "De tekenreeks voor de definitie van de verbinding die wordt geopend voor gebruik door de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> exemplaar. Als de verbindingsreeks geen gebruikt <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, kunt u &lt;xref:System.Data.SqlClient.SqlBulkCopy.%23ctor%2A&gt; of &lt;xref:System.Data.SqlClient.SqlBulkCopy.%23ctor%2A&gt; en <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> om door te geven van de gebruikers-ID en het wachtwoord veiliger dan door de gebruikers-ID en het wachtwoord als tekst in de verbindingsreeks opgeven."
    - id: copyOptions
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "Een combinatie van waarden uit de <xref href=&quot;System.Data.SqlClient.SqlBulkCopyOptions&quot;> </xref> -opsomming die bepaalt welke gegevensbronrijen worden gekopieerd naar de doeltabel."
  overload: System.Data.SqlClient.SqlBulkCopy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)
  id: '#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)'
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: SqlBulkCopy(SqlConnection,SqlBulkCopyOptions,SqlTransaction)
  nameWithType: SqlBulkCopy.SqlBulkCopy(SqlConnection,SqlBulkCopyOptions,SqlTransaction)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(SqlConnection,SqlBulkCopyOptions,SqlTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> met behulp van de opgegeven bestaande open instantie van klasse <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>. De <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> exemplaar zich gedraagt volgens de opties die zijn opgegeven in de <code> copyOptions </code> parameter. Als een niet-null <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> is opgegeven, wordt de kopieerbewerkingen worden uitgevoerd binnen deze transactie."
  remarks: "Als u opties zijn onder andere `UseInternalTransaction` en de `externalTransaction` argument is niet leeg is, een **InvalidArgumentException** gegenereerd.       Voor voorbeelden aan te tonen hoe u `SqlBulkCopy` in een transactie Zie [transactie en Bulksgewijze kopieerbewerkingen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlBulkCopyOptions copyOptions, System.Data.SqlClient.SqlTransaction externalTransaction);
    parameters:
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "De al geopende <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -exemplaar dat wordt gebruikt voor het uitvoeren van de bulksgewijs kopiëren. Als de verbindingsreeks geen gebruikt <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, kunt u <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> aan de gebruikers-ID en wachtwoord veiliger dan door de gebruikers-ID en het wachtwoord als tekst in de verbindingsreeks opgeven."
    - id: copyOptions
      type: System.Data.SqlClient.SqlBulkCopyOptions
      description: "Een combinatie van waarden uit de <xref href=&quot;System.Data.SqlClient.SqlBulkCopyOptions&quot;> </xref> -opsomming die bepaalt welke gegevensbronrijen worden gekopieerd naar de doeltabel."
    - id: externalTransaction
      type: System.Data.SqlClient.SqlTransaction
      description: "Een bestaande <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> exemplaar onder de bulksgewijs kopiëren wordt uitgevoerd."
  overload: System.Data.SqlClient.SqlBulkCopy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.BatchSize
  id: BatchSize
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: BatchSize
  nameWithType: SqlBulkCopy.BatchSize
  fullName: System.Data.SqlClient.SqlBulkCopy.BatchSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Het aantal rijen in elke batch. Aan het einde van elke batch, worden de rijen in de batch verzonden naar de server."
  remarks: "Een batch is voltooid als BatchSize rijen zijn verwerkt of er meer rijen niet zijn verzenden naar de doel-gegevensbron.       Nul (de standaardinstelling) geeft aan elke <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>bewerking is één batch.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>       Als de <xref:System.Data.SqlClient.SqlBulkCopy>exemplaar is gedeclareerd zonder de <xref:System.Data.SqlClient.SqlBulkCopyOptions>optie in feite rijen op de server BatchSize rijen tegelijk worden verzonden, maar geen transactie-gerelateerde actie wordt ondernomen.</xref:System.Data.SqlClient.SqlBulkCopyOptions> </xref:System.Data.SqlClient.SqlBulkCopy> Als <xref:System.Data.SqlClient.SqlBulkCopyOptions>is ingeschakeld, elke batch rijen ingevoegd als een aparte transactie.</xref:System.Data.SqlClient.SqlBulkCopyOptions>       De eigenschap BatchSize kan worden ingesteld op elk gewenst moment. Als een bulksgewijs kopiëren al uitgevoerd is, wordt de huidige batch grootte afhankelijk van de vorige batchgrootte. Daaropvolgende batches gebruiken de nieuwe grootte. Als de BatchSize in eerste instantie gelijk is aan nul en gewijzigde tijdens een <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>wordt al uitgevoerd, dat de gegevens als één batch in bewerking worden geladen.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> Alle daaropvolgende <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>operations op dezelfde <xref:System.Data.SqlClient.SqlBulkCopy>exemplaar gebruikt de nieuwe BatchSize.</xref:System.Data.SqlClient.SqlBulkCopy> </xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>"
  example:
  - "The following console application demonstrates how to bulk load data in batches of 50 rows. For an example illustrating how BatchSize works with a transaction, see [Transaction and Bulk Copy Operations](~/add/includes/ajax-current-ext-md.md).  \n  \n In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance. The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.BatchSize#1](~/add/codesnippet/csharp/p-system.data.sqlclient._2_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.BatchSize#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._2_1.vb)]"
  syntax:
    content: public int BatchSize { get; set; }
    return:
      type: System.Int32
      description: "De integerwaarde van de eigenschap BatchSize, of nul als geen waarde is ingesteld."
  overload: System.Data.SqlClient.SqlBulkCopy.BatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout
  id: BulkCopyTimeout
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: BulkCopyTimeout
  nameWithType: SqlBulkCopy.BulkCopyTimeout
  fullName: System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Het aantal seconden voor de bewerking te voltooien voordat er een optreedt time-out."
  remarks: "Als de bewerking is een time-out opgetreden bij het, wordt de transactie is niet doorgevoerd en alle gekopieerde rijen worden verwijderd uit de doeltabel."
  example:
  - "The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.  \n  \n In this example, the source data is first read from a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] table to a <xref:System.Data.SqlClient.SqlDataReader> instance. The source data does not have to be located on [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] instance, it is easier and faster to use a [!INCLUDE[tsql](~/add/includes/tsql-md.md)]`INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.Timeout#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._14_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.Timeout#1](~/add/codesnippet/csharp/p-system.data.sqlclient._14_1.cs)]"
  syntax:
    content: public int BulkCopyTimeout { get; set; }
    return:
      type: System.Int32
      description: "De waarde van geheel getal van de eigenschap BulkCopyTimeout. De standaardwaarde is 30 seconden. Een waarde van 0 geeft geen limiet; de bulksgewijs kopiëren wacht voor onbepaalde tijd."
  overload: System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.Close
  id: Close
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: Close()
  nameWithType: SqlBulkCopy.Close()
  fullName: System.Data.SqlClient.SqlBulkCopy.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee sluit u de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> exemplaar."
  remarks: "Nadat u een sluiten aanroepen voor de <xref:System.Data.SqlClient.SqlBulkCopy>object geen andere bewerking slaagt.</xref:System.Data.SqlClient.SqlBulkCopy> Aanroepen van de <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>methode genereert een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>       Aanroepen van de methode afsluiten van de <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>gebeurtenis zorgt ervoor dat een <xref:System.InvalidOperationException>gegenereerd.</xref:System.InvalidOperationException> </xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>       Houd er rekening mee dat openen <xref:System.Data.SqlClient.SqlBulkCopy>exemplaren worden impliciet gesloten aan het einde van een `using` blok.</xref:System.Data.SqlClient.SqlBulkCopy>"
  example:
  - "The following example uses the same <xref:System.Data.SqlClient.SqlBulkCopy> instance to add sales orders and their associated details to two destination tables. Because the **AdventureWorks** sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables. The Close method is used only after both bulk copy operations are complete.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.OrdersDetails#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._43_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.OrdersDetails#1](~/add/codesnippet/csharp/m-system.data.sqlclient._43_1.cs)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Data.SqlClient.SqlBulkCopy.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.ColumnMappings
  id: ColumnMappings
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: ColumnMappings
  nameWithType: SqlBulkCopy.ColumnMappings
  fullName: System.Data.SqlClient.SqlBulkCopy.ColumnMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Retourneert een verzameling <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> items. De relaties tussen de kolommen in de gegevensbron en kolommen definiëren kolomtoewijzingen in het doel."
  remarks: "Als de gegevensbron en de doeltabel zijn van hetzelfde aantal kolommen en het volgnummer van elke bronkolom binnen de gegevensbron overeenkomt met het volgnummer van de bijbehorende kolom van de bestemming, is de verzameling ColumnMappings niet nodig. Als de kolom tellingen verschillen of de rangtelwoord posities niet consistent zijn, moet u ColumnMappings gebruiken om ervoor te zorgen dat gegevens worden gekopieerd naar de juiste kolommen.       Tijdens het uitvoeren van een kopieerbewerking bulksgewijs deze verzameling toegankelijk zijn, maar kan niet worden gewijzigd. Elke poging om dit te wijzigen genereert een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings { get; }
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
      description: "Een verzameling kolomtoewijzingen. Standaard is dit een lege verzameling."
  overload: System.Data.SqlClient.SqlBulkCopy.ColumnMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.DestinationTableName
  id: DestinationTableName
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: DestinationTableName
  nameWithType: SqlBulkCopy.DestinationTableName
  fullName: System.Data.SqlClient.SqlBulkCopy.DestinationTableName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Naam van de doeltabel op de server."
  remarks: "Als DestinationTableName is niet ingesteld wanneer <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>wordt aangeroepen, een <xref:System.ArgumentNullException>gegenereerd.</xref:System.ArgumentNullException> </xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>       Als DestinationTableName wordt gewijzigd terwijl een <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>bewerking wordt uitgevoerd, is de wijziging heeft geen invloed op de huidige bewerking.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> De volgende keer wordt gebruikt door de nieuwe waarde voor DestinationTableName een <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>methode wordt aangeroepen.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>       DestinationTableName is de naam van een drie delen (`<database>.<owningschema>.<name>`). Als u ervoor kiest, kunt u de naam van de tabel met de database en het schema dat in aanmerking. Als de naam van de tabel een onderstrepingsteken (&quot;_&quot;) of andere speciale tekens gebruikt, moet u echter de naam van de omringende haken als in escape (`[<database>.<owningschema>.<name_01>]`). Zie &quot;Identifiers&quot; in SQL Server Books Online voor meer informatie.       U kunt gegevens voor bulksgewijs kopiëren naar een tijdelijke tabel met een waarde, zoals `tempdb..#table` of `tempdb.<owner>.#table` voor de eigenschap DestinationTableName."
  example:
  - "The following console application demonstrates how to bulk load data using a connection that is already open. The destination table is a table in the **AdventureWorks** database.  \n  \n In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance. The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.Single#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._5_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.Single#1](~/add/codesnippet/csharp/p-system.data.sqlclient._5_1.cs)]"
  syntax:
    content: public string DestinationTableName { get; set; }
    return:
      type: System.String
      description: "De string-waarde van de eigenschap DestinationTableName of null als geen zoals is opgegeven."
  overload: System.Data.SqlClient.SqlBulkCopy.DestinationTableName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.EnableStreaming
  id: EnableStreaming
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: EnableStreaming
  nameWithType: SqlBulkCopy.EnableStreaming
  fullName: System.Data.SqlClient.SqlBulkCopy.EnableStreaming
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee schakelt u of een <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> -object op voor de van stroomgegevens uit een <xref href=&quot;System.Data.IDataReader&quot;> </xref> object"
  remarks: "Wanneer EnableStreaming is `true`, <xref:System.Data.SqlClient.SqlBulkCopy>leest uit een <xref:System.Data.IDataReader>object met <xref:System.Data.CommandBehavior>, geheugengebruik optimaliseren met behulp van de <xref:System.Data.IDataReader>streaming mogelijkheden.</xref:System.Data.IDataReader> </xref:System.Data.CommandBehavior> </xref:System.Data.IDataReader> </xref:System.Data.SqlClient.SqlBulkCopy> Wanneer deze zijn ingesteld op false, de <xref:System.Data.SqlClient.SqlBulkCopy>klasse worden alle gegevens die zijn geretourneerd door de <xref:System.Data.IDataReader>object in het geheugen voor het verzenden van deze [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] of Azure SQL.</xref:System.Data.IDataReader> </xref:System.Data.SqlClient.SqlBulkCopy>"
  syntax:
    content: public bool EnableStreaming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als een <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object kunt streamen gegevens uit een <xref href=&quot;System.Data.IDataReader&quot;> </xref> object; anders wordt onwaar. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlBulkCopy.EnableStreaming*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.NotifyAfter
  id: NotifyAfter
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: NotifyAfter
  nameWithType: SqlBulkCopy.NotifyAfter
  fullName: System.Data.SqlClient.SqlBulkCopy.NotifyAfter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Het aantal rijen moeten worden verwerkt vóór het genereren van een meldingsgebeurtenis definieert."
  remarks: "Deze eigenschap is ontworpen voor onderdelen van de gebruikersinterface die de voortgang van een kopieerbewerking bulksgewijs aangeven. Hiermee wordt het aantal rijen moeten worden verwerkt vóór het genereren van een meldingsgebeurtenis aangegeven. De eigenschap NotifyAfter kan worden ingesteld op elk gewenst moment zelfs tijdens een kopieerbewerking bulksgewijs uitgevoerd wordt. Tijdens een kopieerbewerking bulksgewijs wijzigingen van kracht na de volgende melding. De nieuwe instelling geldt voor alle volgende bewerkingen op hetzelfde exemplaar.       Als NotifyAfter is ingesteld op een getal kleiner is dan nul een <xref:System.ArgumentOutOfRangeException>gegenereerd.</xref:System.ArgumentOutOfRangeException>"
  example:
  - "The following console application demonstrates how to bulk load data using a connection that is already open. The NotifyAfter property is set so that the event handler is called after every 50 rows copied to the table.  \n  \n In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance. Then a second connection is opened to bulk copy the data. Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._11_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.NotifyAfter#1](~/add/codesnippet/csharp/p-system.data.sqlclient._11_1.cs)]"
  syntax:
    content: public int NotifyAfter { get; set; }
    return:
      type: System.Int32
      description: "De integerwaarde van de eigenschap NotifyAfter, of nul als de eigenschap niet is ingesteld."
  overload: System.Data.SqlClient.SqlBulkCopy.NotifyAfter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied
  id: SqlRowsCopied
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: SqlRowsCopied
  nameWithType: SqlBulkCopy.SqlRowsCopied
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Deze gebeurtenis treedt op elke keer dat het aantal rijen opgegeven door de <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter*>eigenschap is verwerkt.</xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter*>"
  remarks: "Houd er rekening mee dat de instellingen van <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>en <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>zijn onafhankelijk.</xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> </xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> Ontvangst van een gebeurtenis SqlRowsCopied betekent niet dat de rijen zijn verzonden naar de server of doorgevoerd.       U kunt SqlBulkCopy.Close niet aanroepen (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) of SqlConnection.Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) van deze gebeurtenis.</xref:System.Data.SqlClient.SqlConnection.Close%2A> </xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> Dit zorgt ervoor dat dit een <xref:System.InvalidOperationException>wordt gegenereerd, en de <xref:System.Data.SqlClient.SqlBulkCopy>Objectstatus heeft geen invloed.</xref:System.Data.SqlClient.SqlBulkCopy> </xref:System.InvalidOperationException> Als de gebruiker wil het annuleren van de gebeurtenis, de <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A>eigenschap van de <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs>kan worden gebruikt.</xref:System.Data.SqlClient.SqlRowsCopiedEventArgs> </xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> (Zie [transactie en Bulksgewijze kopieerbewerkingen](~/add/includes/ajax-current-ext-md.md) voor voorbeelden die gebruikmaken van de <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A>eigenschap.)</xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A>       Er is geen actie, zoals transactieactiviteit, wordt ondersteund in de verbinding tijdens het uitvoeren van de kopieerbewerking bulksgewijs en wordt aangeraden niet dezelfde verbinding wordt gebruikt tijdens de gebeurtenis SqlRowsCopied te gebruiken. U kunt echter een andere verbinding openen."
  example:
  - "The following console application demonstrates how to bulk load data using a connection that is already open. The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.  \n  \n In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance. Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/add/codesnippet/visualbasic/e-system.data.sqlclient._2_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.NotifyAfter#1](~/add/codesnippet/csharp/e-system.data.sqlclient._2_1.cs)]"
  syntax:
    content: public event System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied;
    return:
      type: System.Data.SqlClient.SqlRowsCopiedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: SqlBulkCopy.System.IDisposable.Dispose()
  fullName: System.Data.SqlClient.SqlBulkCopy.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Versies van alle resources die worden gebruikt door het huidige exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> klasse."
  remarks: "Roep `Dispose` wanneer u klaar bent met de <xref:System.Data.SqlClient.SqlBulkCopy>.</xref:System.Data.SqlClient.SqlBulkCopy> De `Dispose` methode blijft de <xref:System.Data.SqlClient.SqlBulkCopy>in een onbruikbare status.</xref:System.Data.SqlClient.SqlBulkCopy> Na het aanroepen `Dispose`, moet u alle verwijzingen naar vrijgeven de <xref:System.Data.SqlClient.SqlBulkCopy>zodat het geheugen door de garbage collector vrijmaken kunt die de <xref:System.Data.SqlClient.SqlBulkCopy>is bepaald dat zich bevindt.</xref:System.Data.SqlClient.SqlBulkCopy> </xref:System.Data.SqlClient.SqlBulkCopy>       Zie voor meer informatie [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md) en [uitvoering van een methode Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Altijd aanroep `Dispose` voordat u uw laatste verwijzing naar de <xref:System.Data.SqlClient.SqlBulkCopy>.</xref:System.Data.SqlClient.SqlBulkCopy> vrijgeven Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de <xref:System.Data.SqlClient.SqlBulkCopy>van het object `Finalize` methode.</xref:System.Data.SqlClient.SqlBulkCopy>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)
  id: WriteToServer(System.Data.Common.DbDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServer(DbDataReader)
  nameWithType: SqlBulkCopy.WriteToServer(DbDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(DbDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Alle rijen opgehaald uit de opgegeven <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> -matrix naar een doeltabel die is opgegeven door de <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object.</xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>"
  syntax:
    content: public void WriteToServer (System.Data.Common.DbDataReader reader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: "Een <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])
  id: WriteToServer(System.Data.DataRow[])
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServer(DataRow[])
  nameWithType: SqlBulkCopy.WriteToServer(DataRow[])
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(DataRow[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Alle rijen opgehaald uit de opgegeven <xref href=&quot;System.Data.DataRow&quot;> </xref> -matrix naar een doeltabel die is opgegeven door de <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object.</xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>"
  remarks: "Terwijl de kopieerbewerking bulksgewijs uitgevoerd, de bijbehorende bestemming wordt <xref:System.Data.SqlClient.SqlConnection>is bezet voor deze, en kunnen geen andere bewerkingen worden uitgevoerd op de verbinding.</xref:System.Data.SqlClient.SqlConnection>       De <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>verzameling toewijzingen van de <xref:System.Data.DataRow>kolommen naar de doeltabel van de database.</xref:System.Data.DataRow> </xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>"
  example:
  - "The following console application demonstrates how to bulk load data from a <xref:System.Data.DataRow> array. The destination table is a table in the **AdventureWorks** database.  \n  \n In this example, a <xref:System.Data.DataTable> is created at run time. A single row is selected from the <xref:System.Data.DataTable> to copy to the destination table.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.RowArray#1](~/add/codesnippet/csharp/m-system.data.sqlclient._3_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.RowArray#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._3_1.vb)]"
  syntax:
    content: public void WriteToServer (System.Data.DataRow[] rows);
    parameters:
    - id: rows
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten die worden gekopieerd naar de doeltabel."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)
  id: WriteToServer(System.Data.DataTable)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServer(DataTable)
  nameWithType: SqlBulkCopy.WriteToServer(DataTable)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Alle rijen in de opgegeven kopieert <xref href=&quot;System.Data.DataTable&quot;> </xref> een doeltabel die is opgegeven door de <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object.</xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>"
  remarks: "Alle rijen in de <xref:System.Data.DataTable>worden gekopieerd naar de doeltabel behalve scripts die zijn verwijderd.</xref:System.Data.DataTable>       Terwijl de kopieerbewerking bulksgewijs uitgevoerd, de bijbehorende bestemming wordt <xref:System.Data.SqlClient.SqlConnection>is bezet voor deze, en kunnen geen andere bewerkingen worden uitgevoerd op de verbinding.</xref:System.Data.SqlClient.SqlConnection>       De <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>verzameling toewijzingen van de <xref:System.Data.DataTable>kolommen naar de doeltabel van de database.</xref:System.Data.DataTable> </xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>"
  example:
  - "The following Console application demonstrates how to bulk load data from a <xref:System.Data.DataTable>. The destination table is a table in the **AdventureWorks** database.  \n  \n In this example, a <xref:System.Data.DataTable> is created at run time and is the source of the `SqlBulkCopy` operation.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.DataTable#1](~/add/codesnippet/csharp/m-system.data.sqlclient._16_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.DataTable#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._16_1.vb)]"
  syntax:
    content: public void WriteToServer (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)
  id: WriteToServer(System.Data.IDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServer(IDataReader)
  nameWithType: SqlBulkCopy.WriteToServer(IDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Alle rijen in de opgegeven kopieert <xref href=&quot;System.Data.IDataReader&quot;> </xref> een doeltabel die is opgegeven door de <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object.</xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>"
  remarks: "De kopieerbewerking begint bij de volgende beschikbare rij in de reader. De meeste gevallen is de lezer is zojuist geretourneerd door <xref:System.Data.IDbCommand.ExecuteReader%2A>of een vergelijkbare aanroep, zodat de volgende beschikbare rij de eerste rij is.</xref:System.Data.IDbCommand.ExecuteReader%2A> Aanroepen voor het verwerken van meerdere resultaten <xref:System.Data.IDataReader.NextResult%2A>op de gegevenslezer en opnieuw aanroep WriteToServer.</xref:System.Data.IDataReader.NextResult%2A>       Houd er rekening mee dat met behulp van WriteToServer de status van de lezer wijzigt. De methode moet worden gebeld <xref:System.Data.IDataReader.Read%2A>totdat het resultaat is false, de bewerking is afgebroken of een fout optreedt.</xref:System.Data.IDataReader.Read%2A> Dit betekent dat de gegevenslezer opgenomen in een andere status, waarschijnlijk aan het einde van de resultatenset worden wanneer de WriteToServer voltooid is.       Terwijl de kopieerbewerking bulksgewijs uitgevoerd, de bijbehorende bestemming wordt <xref:System.Data.SqlClient.SqlConnection>is bezet voor deze, en kunnen geen andere bewerkingen worden uitgevoerd op de verbinding.</xref:System.Data.SqlClient.SqlConnection>       De <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>verzameling toewijzingen van de gegevens lezer kolommen naar de doeltabel van de database.</xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>"
  example:
  - "The following console application demonstrates how to bulk load data from a <xref:System.Data.SqlClient.SqlDataReader>. The destination table is a table in the **AdventureWorks** database.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._35_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ConnectionString#1](~/add/codesnippet/csharp/m-system.data.sqlclient._35_1.cs)]"
  syntax:
    content: public void WriteToServer (System.Data.IDataReader reader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: "Een <xref href=&quot;System.Data.IDataReader&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)
  id: WriteToServer(System.Data.DataTable,System.Data.DataRowState)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServer(DataTable,DataRowState)
  nameWithType: SqlBulkCopy.WriteToServer(DataTable,DataRowState)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(DataTable,DataRowState)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Alleen rijen die overeenkomen met de Rijstatus van de opgegeven in de opgegeven kopieert <xref href=&quot;System.Data.DataTable&quot;> </xref> een doeltabel die is opgegeven door de <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object.</xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName*>"
  remarks: "Alleen de rijen de <xref:System.Data.DataTable>die zijn opgenomen in de statussen die zijn aangegeven in de `rowState` argument en zijn niet verwijderd worden gekopieerd naar de doeltabel.</xref:System.Data.DataTable>      > [!NOTE] > Als <xref:System.Data.DataRowState>is opgegeven, een <xref:System.Data.DataRowState>, <xref:System.Data.DataRowState>, en <xref:System.Data.DataRowState>rijen wordt ook gekopieerd naar de server.</xref:System.Data.DataRowState> </xref:System.Data.DataRowState> </xref:System.Data.DataRowState> </xref:System.Data.DataRowState> Kan geen uitzondering wordt gegenereerd.       Terwijl de kopieerbewerking bulksgewijs uitgevoerd, de bijbehorende bestemming wordt <xref:System.Data.SqlClient.SqlConnection>is bezet voor deze, en kunnen geen andere bewerkingen worden uitgevoerd op de verbinding.</xref:System.Data.SqlClient.SqlConnection>       De <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>verzameling toewijzingen van de <xref:System.Data.DataTable>kolommen naar de doeltabel van de database.</xref:System.Data.DataTable> </xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>"
  example:
  - "The following Console application demonstrates how to bulk load only the rows in a <xref:System.Data.DataTable> that match a specified state. In this case, only unchanged rows are added. The destination table is a table in the **AdventureWorks** database.  \n  \n In this example, a <xref:System.Data.DataTable> is created at run time and three rows are added to it. Before the WriteToServer method is executed, one of the rows is edited. The WriteToServer method is called with a `DataRowState.Unchanged``rowState` argument, so only the two unchanged rows are bulk copied to the destination.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.DataRowState#1](~/add/codesnippet/csharp/65bb2b63-7c25-4470-9a90-_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.DataRowState#1](~/add/codesnippet/visualbasic/65bb2b63-7c25-4470-9a90-_1.vb)]"
  syntax:
    content: public void WriteToServer (System.Data.DataTable table, System.Data.DataRowState rowState);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
    - id: rowState
      type: System.Data.DataRowState
      description: "Een waarde van de <xref href=&quot;System.Data.DataRowState&quot;> </xref> opsomming. Alleen rijen die overeenkomen met de Rijstatus van de worden gekopieerd naar de bestemming."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)
  id: WriteToServerAsync(System.Data.Common.DbDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(DbDataReader)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DbDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DbDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alle rijen opgehaald uit de opgegeven <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> -matrix naar een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: "Een <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])
  id: WriteToServerAsync(System.Data.DataRow[])
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(DataRow[])
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataRow[])
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataRow[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alle rijen opgehaald uit de opgegeven <xref href=&quot;System.Data.DataRow&quot;> </xref> -matrix naar een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows);
    parameters:
    - id: rows
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten die worden gekopieerd naar de doeltabel."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van WriteToServerAsync meerdere keren voor hetzelfde exemplaar voordat de taak voltooid.       Het aanroepen van WriteToServerAsync en <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer*>voor hetzelfde exemplaar voordat de taak voltooid.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer*>       De verbinding verbreekt, of is afgesloten tijdens het uitvoeren van WriteToServerAsync.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> -object is gesloten tijdens de uitvoering van de methode.       In het taakobject geretourneerd, wordt er een time-out van de verbindingsgroep is.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -object is gesloten voordat de methode kan worden uitgevoerd.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "In het taakobject geretourneerd, een fout geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)
  id: WriteToServerAsync(System.Data.DataTable)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(DataTable)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataTable)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alle rijen in de opgegeven kopieert <xref href=&quot;System.Data.DataTable&quot;> </xref> een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van WriteToServerAsync meerdere keren voor hetzelfde exemplaar voordat de taak voltooid.       Het aanroepen van WriteToServerAsync en <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer*>voor hetzelfde exemplaar voordat de taak voltooid.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer*>       De verbinding verbreekt, of is afgesloten tijdens het uitvoeren van WriteToServerAsync.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> -object is gesloten tijdens de uitvoering van de methode.       In het taakobject geretourneerd, wordt er een time-out van de verbindingsgroep is.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -object is gesloten voordat de methode kan worden uitgevoerd.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "In het taakobject geretourneerd, een fout geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)
  id: WriteToServerAsync(System.Data.IDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(IDataReader)
  nameWithType: SqlBulkCopy.WriteToServerAsync(IDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alle rijen in de opgegeven kopieert <xref href=&quot;System.Data.IDataReader&quot;> </xref> een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: "Een <xref href=&quot;System.Data.IDataReader&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van WriteToServerAsync meerdere keren voor hetzelfde exemplaar voordat de taak voltooid.       Het aanroepen van WriteToServerAsync en <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer*>voor hetzelfde exemplaar voordat de taak voltooid.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer*>       De verbinding verbreekt, of is afgesloten tijdens het uitvoeren van WriteToServerAsync.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> -object is gesloten tijdens de uitvoering van de methode.       In het taakobject geretourneerd, wordt er een time-out van de verbindingsgroep is.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -object is gesloten voordat de methode kan worden uitgevoerd.       De <xref href=&quot;System.Data.IDataReader&quot;> </xref> is gesloten voordat de voltooide <xref:System.Threading.Tasks.Task>geretourneerd.</xref:System.Threading.Tasks.Task>       De <xref href=&quot;System.Data.IDataReader&quot;> </xref>de bijbehorende verbinding is gesloten voordat de voltooide <xref:System.Threading.Tasks.Task>geretourneerd.</xref:System.Threading.Tasks.Task>       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "In het taakobject geretourneerd, een fout geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  id: WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(DbDataReader,CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DbDataReader,CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DbDataReader,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alle rijen opgehaald uit de opgegeven <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> -matrix naar een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: "Een <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie. Een <> </> *> waarde in deze parameter wordt deze methode gelijk is aan <> </> *>."
    return:
      type: System.Threading.Tasks.Task
      description: "Retourneert <xref:System.Threading.Tasks.Task>.</xref:System.Threading.Tasks.Task>"
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)
  id: WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(DataRow[],CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataRow[],CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataRow[],CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alle rijen opgehaald uit de opgegeven <xref href=&quot;System.Data.DataRow&quot;> </xref> -matrix naar een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object.       Het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de opdracht time-out is verstreken.  Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: rows
      type: System.Data.DataRow[]
      description: "Een matrix van <xref href=&quot;System.Data.DataRow&quot;> </xref> objecten die worden gekopieerd naar de doeltabel."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie. Een <> </> *> waarde in deze parameter wordt deze methode gelijk is aan <> </> *>."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van <> </> *> meerdere keren voor hetzelfde exemplaar voordat de taak voltooid.       Het aanroepen van <> </> *> en <> </> *> voor hetzelfde exemplaar voordat de taak voltooid.       De verbinding verbreekt, of is afgesloten tijdens <> </> *> worden uitgevoerd.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> -object is gesloten tijdens de uitvoering van de methode.       In het taakobject geretourneerd, wordt er een time-out van de verbindingsgroep is.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -object is gesloten voordat de methode kan worden uitgevoerd.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "In het taakobject geretourneerd, een fout geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)
  id: WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(DataTable,DataRowState)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataTable,DataRowState)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataTable,DataRowState)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alleen rijen die overeenkomen met de Rijstatus van de opgegeven in de opgegeven kopieert <xref href=&quot;System.Data.DataTable&quot;> </xref> een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
    - id: rowState
      type: System.Data.DataRowState
      description: "Een waarde van de <xref href=&quot;System.Data.DataRowState&quot;> </xref> opsomming. Alleen rijen die overeenkomen met de Rijstatus van de worden gekopieerd naar de bestemming."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van WriteToServerAsync meerdere keren voor hetzelfde exemplaar voordat de taak voltooid.       Het aanroepen van WriteToServerAsync en <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer*>voor hetzelfde exemplaar voordat de taak voltooid.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer*>       De verbinding verbreekt, of is afgesloten tijdens het uitvoeren van WriteToServerAsync.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> -object is gesloten tijdens de uitvoering van de methode.       In het taakobject geretourneerd, wordt er een time-out van de verbindingsgroep is.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -object is gesloten voordat de methode kan worden uitgevoerd.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "In het taakobject geretourneerd, een fout geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)
  id: WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(DataTable,CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataTable,CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataTable,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alle rijen in de opgegeven kopieert <xref href=&quot;System.Data.DataTable&quot;> </xref> een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object.       Het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de opdracht time-out is verstreken.  Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie. Een <> </> *> waarde in deze parameter wordt deze methode gelijk is aan <> </> *>."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van <> </> *> meerdere keren voor hetzelfde exemplaar voordat de taak voltooid.       Het aanroepen van <> </> *> en <> </> *> voor hetzelfde exemplaar voordat de taak voltooid.       De verbinding verbreekt, of is afgesloten tijdens <> </> *> worden uitgevoerd.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> -object is gesloten tijdens de uitvoering van de methode.       In het taakobject geretourneerd, wordt er een time-out van de verbindingsgroep is.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -object is gesloten voordat de methode kan worden uitgevoerd.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "In het taakobject geretourneerd, een fout geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)
  id: WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(IDataReader,CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(IDataReader,CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(IDataReader,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alle rijen in de opgegeven kopieert <xref href=&quot;System.Data.IDataReader&quot;> </xref> een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object.       Het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de opdracht time-out is verstreken.  Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: "Een <xref href=&quot;System.Data.IDataReader&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie. Een <> </> *> waarde in deze parameter wordt deze methode gelijk is aan <> </> *>."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van <> </> *> meerdere keren voor hetzelfde exemplaar voordat de taak voltooid.       Het aanroepen van <> </> *> en <> </> *> voor hetzelfde exemplaar voordat de taak voltooid.       De verbinding verbreekt, of is afgesloten tijdens <> </> *> worden uitgevoerd.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> -object is gesloten tijdens de uitvoering van de methode.       In het taakobject geretourneerd, wordt er een time-out van de verbindingsgroep is.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -object is gesloten voordat de methode kan worden uitgevoerd.       De <xref href=&quot;System.Data.IDataReader&quot;> </xref> is gesloten voordat de voltooide <xref:System.Threading.Tasks.Task>geretourneerd.</xref:System.Threading.Tasks.Task>       De <xref href=&quot;System.Data.IDataReader&quot;> </xref>de bijbehorende verbinding is gesloten voordat de voltooide <xref:System.Threading.Tasks.Task>geretourneerd.</xref:System.Threading.Tasks.Task>       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "In het taakobject geretourneerd, een fout geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)
  id: WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  langs:
  - csharp
  name: WriteToServerAsync(DataTable,DataRowState,CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataTable,DataRowState,CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataTable,DataRowState,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De asynchrone versie van <> </> *>, die alleen rijen die overeenkomen met de Rijstatus van de opgegeven in de opgegeven kopieert <xref href=&quot;System.Data.DataTable&quot;> </xref> een doeltabel die is opgegeven door de <> </> *> eigenschap van de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> object.       Het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de opdracht time-out is verstreken.  Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> waarvan de rijen worden gekopieerd naar de doeltabel."
    - id: rowState
      type: System.Data.DataRowState
      description: "Een waarde van de <xref href=&quot;System.Data.DataRowState&quot;> </xref> opsomming. Alleen rijen die overeenkomen met de Rijstatus van de worden gekopieerd naar de bestemming."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie. Een <> </> *> waarde in deze parameter wordt deze methode gelijk is aan <> </> *>."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van <> </> *> meerdere keren voor hetzelfde exemplaar voordat de taak voltooid.       Het aanroepen van <> </> *> en <> </> *> voor hetzelfde exemplaar voordat de taak voltooid.       De verbinding verbreekt, of is afgesloten tijdens <> </> *> worden uitgevoerd.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlBulkCopy&quot;> </xref> -object is gesloten tijdens de uitvoering van de methode.       In het taakobject geretourneerd, wordt er een time-out van de verbindingsgroep is.       In het taakobject geretourneerd de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> -object is gesloten voordat de methode kan worden uitgevoerd.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "In het taakobject geretourneerd, een fout geretourneerd door [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: SqlBulkCopy(SqlConnection)
  nameWithType: SqlBulkCopy.SqlBulkCopy(SqlConnection)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: SqlBulkCopy(String)
  nameWithType: SqlBulkCopy.SqlBulkCopy(String)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: SqlBulkCopy(String,SqlBulkCopyOptions)
  nameWithType: SqlBulkCopy.SqlBulkCopy(String,SqlBulkCopyOptions)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(String,SqlBulkCopyOptions)
- uid: System.Data.SqlClient.SqlBulkCopyOptions
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyOptions
  nameWithType: SqlBulkCopyOptions
  fullName: System.Data.SqlClient.SqlBulkCopyOptions
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: SqlBulkCopy(SqlConnection,SqlBulkCopyOptions,SqlTransaction)
  nameWithType: SqlBulkCopy.SqlBulkCopy(SqlConnection,SqlBulkCopyOptions,SqlTransaction)
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlBulkCopy(SqlConnection,SqlBulkCopyOptions,SqlTransaction)
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlBulkCopy.BatchSize
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: BatchSize
  nameWithType: SqlBulkCopy.BatchSize
  fullName: System.Data.SqlClient.SqlBulkCopy.BatchSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: BulkCopyTimeout
  nameWithType: SqlBulkCopy.BulkCopyTimeout
  fullName: System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout
- uid: System.Data.SqlClient.SqlBulkCopy.Close
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: Close()
  nameWithType: SqlBulkCopy.Close()
  fullName: System.Data.SqlClient.SqlBulkCopy.Close()
- uid: System.Data.SqlClient.SqlBulkCopy.ColumnMappings
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: ColumnMappings
  nameWithType: SqlBulkCopy.ColumnMappings
  fullName: System.Data.SqlClient.SqlBulkCopy.ColumnMappings
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyColumnMappingCollection
  nameWithType: SqlBulkCopyColumnMappingCollection
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
- uid: System.Data.SqlClient.SqlBulkCopy.DestinationTableName
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: DestinationTableName
  nameWithType: SqlBulkCopy.DestinationTableName
  fullName: System.Data.SqlClient.SqlBulkCopy.DestinationTableName
- uid: System.Data.SqlClient.SqlBulkCopy.EnableStreaming
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: EnableStreaming
  nameWithType: SqlBulkCopy.EnableStreaming
  fullName: System.Data.SqlClient.SqlBulkCopy.EnableStreaming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlBulkCopy.NotifyAfter
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: NotifyAfter
  nameWithType: SqlBulkCopy.NotifyAfter
  fullName: System.Data.SqlClient.SqlBulkCopy.NotifyAfter
- uid: System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: SqlRowsCopied
  nameWithType: SqlBulkCopy.SqlRowsCopied
  fullName: System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied
- uid: System.Data.SqlClient.SqlRowsCopiedEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowsCopiedEventHandler
  nameWithType: SqlRowsCopiedEventHandler
  fullName: System.Data.SqlClient.SqlRowsCopiedEventHandler
- uid: System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: SqlBulkCopy.System.IDisposable.Dispose()
  fullName: System.Data.SqlClient.SqlBulkCopy.System.IDisposable.Dispose()
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServer(DbDataReader)
  nameWithType: SqlBulkCopy.WriteToServer(DbDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(DbDataReader)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServer(DataRow[])
  nameWithType: SqlBulkCopy.WriteToServer(DataRow[])
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(DataRow[])
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServer(DataTable)
  nameWithType: SqlBulkCopy.WriteToServer(DataTable)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServer(IDataReader)
  nameWithType: SqlBulkCopy.WriteToServer(IDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(IDataReader)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServer(DataTable,DataRowState)
  nameWithType: SqlBulkCopy.WriteToServer(DataTable,DataRowState)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServer(DataTable,DataRowState)
- uid: System.Data.DataRowState
  parent: System.Data
  isExternal: false
  name: DataRowState
  nameWithType: DataRowState
  fullName: System.Data.DataRowState
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(DbDataReader)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DbDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DbDataReader)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(DataRow[])
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataRow[])
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataRow[])
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(DataTable)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataTable)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataTable)
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(IDataReader)
  nameWithType: SqlBulkCopy.WriteToServerAsync(IDataReader)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(IDataReader)
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(DbDataReader,CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DbDataReader,CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DbDataReader,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(DataRow[],CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataRow[],CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataRow[],CancellationToken)
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(DataTable,DataRowState)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataTable,DataRowState)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataTable,DataRowState)
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(DataTable,CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataTable,CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataTable,CancellationToken)
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(IDataReader,CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(IDataReader,CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(IDataReader,CancellationToken)
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync(DataTable,DataRowState,CancellationToken)
  nameWithType: SqlBulkCopy.WriteToServerAsync(DataTable,DataRowState,CancellationToken)
  fullName: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(DataTable,DataRowState,CancellationToken)
- uid: System.Data.SqlClient.SqlBulkCopy.#ctor*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: SqlBulkCopy
  nameWithType: SqlBulkCopy.SqlBulkCopy
- uid: System.Data.SqlClient.SqlBulkCopy.BatchSize*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: BatchSize
  nameWithType: SqlBulkCopy.BatchSize
- uid: System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: BulkCopyTimeout
  nameWithType: SqlBulkCopy.BulkCopyTimeout
- uid: System.Data.SqlClient.SqlBulkCopy.Close*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: Close
  nameWithType: SqlBulkCopy.Close
- uid: System.Data.SqlClient.SqlBulkCopy.ColumnMappings*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: ColumnMappings
  nameWithType: SqlBulkCopy.ColumnMappings
- uid: System.Data.SqlClient.SqlBulkCopy.DestinationTableName*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: DestinationTableName
  nameWithType: SqlBulkCopy.DestinationTableName
- uid: System.Data.SqlClient.SqlBulkCopy.EnableStreaming*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: EnableStreaming
  nameWithType: SqlBulkCopy.EnableStreaming
- uid: System.Data.SqlClient.SqlBulkCopy.NotifyAfter*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: NotifyAfter
  nameWithType: SqlBulkCopy.NotifyAfter
- uid: System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: SqlBulkCopy.System.IDisposable.Dispose
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServer*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServer
  nameWithType: SqlBulkCopy.WriteToServer
- uid: System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync*
  parent: System.Data.SqlClient.SqlBulkCopy
  isExternal: false
  name: WriteToServerAsync
  nameWithType: SqlBulkCopy.WriteToServerAsync
