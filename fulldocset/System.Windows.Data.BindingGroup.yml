### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingGroup
  id: BindingGroup
  children:
  - System.Windows.Data.BindingGroup.#ctor
  - System.Windows.Data.BindingGroup.BeginEdit
  - System.Windows.Data.BindingGroup.BindingExpressions
  - System.Windows.Data.BindingGroup.CancelEdit
  - System.Windows.Data.BindingGroup.CanRestoreValues
  - System.Windows.Data.BindingGroup.CommitEdit
  - System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  - System.Windows.Data.BindingGroup.HasValidationError
  - System.Windows.Data.BindingGroup.IsDirty
  - System.Windows.Data.BindingGroup.Items
  - System.Windows.Data.BindingGroup.Name
  - System.Windows.Data.BindingGroup.NotifyOnValidationError
  - System.Windows.Data.BindingGroup.Owner
  - System.Windows.Data.BindingGroup.SharesProposedValues
  - System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  - System.Windows.Data.BindingGroup.UpdateSources
  - System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  - System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  - System.Windows.Data.BindingGroup.ValidationErrors
  - System.Windows.Data.BindingGroup.ValidationRules
  langs:
  - csharp
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
  type: Class
  summary: "Bevat een verzameling van bindingen en <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objecten die worden gebruikt voor het valideren van een object."
  remarks: "Een BindingGroup maakt een relatie tussen meerdere bindingen, die kunnen worden gevalideerd en tegelijk wordt bijgewerkt. Stel dat een toepassing vraagt de gebruiker een adres op te geven. De toepassing wordt vervolgens een object van type gevuld `Address`, die de eigenschappen heeft `Street`, `City`, `ZipCode`, en `Country`, met de waarden die de gebruiker opgegeven. De toepassing heeft een paneel met vier <xref:System.Windows.Controls.TextBox>besturingselementen, die gebonden aan een van de eigenschappen van het object is.</xref:System.Windows.Controls.TextBox> U kunt een <xref:System.Windows.Controls.ValidationRule>in een BindingGroup valideren van de `Address` object.</xref:System.Windows.Controls.ValidationRule> Als de bindingen deelnemen aan de dezelfde BindingGroup, kunt u ervoor zorgen dat de postcode geldig voor het land van het adres is.       U stelt de <xref:System.Windows.FrameworkElement.BindingGroup%2A>eigenschap in <xref:System.Windows.FrameworkElement>of <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement.BindingGroup%2A> Onderliggende elementen overnemen de BindingGroup van hun bovenliggende elementen, net als bij andere overneembare eigenschap. Een binding op een onderliggende element wordt toegevoegd aan een BindingGroup als een van de volgende situaties zich voordoet:-de bron van de binding en de <xref:System.Windows.FrameworkElement.DataContext%2A>van het element met de BindingGroup zijn hetzelfde object en de <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>eigenschap is niet ingesteld.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.FrameworkElement.DataContext%2A>      -De <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>eigenschap van de binding is gelijk aan de <xref:System.Windows.Data.BindingGroup.Name%2A>van de <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>en ze niet expliciet zijn ingesteld op `null`.</xref:System.Windows.FrameworkContentElement.BindingGroup%2A> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       Stel in het voorbeeld van het adres dat de <xref:System.Windows.FrameworkElement.DataContext%2A>van de <xref:System.Windows.Controls.Panel>is ingesteld op het object van type `Address`.</xref:System.Windows.Controls.Panel> </xref:System.Windows.FrameworkElement.DataContext%2A> De binding voor elke <xref:System.Windows.Controls.TextBox>wordt toegevoegd aan de BindingGroup van het paneel.</xref:System.Windows.Controls.TextBox>       U toevoegen <xref:System.Windows.Controls.ValidationRule>objecten tot een BindingGroup.</xref:System.Windows.Controls.ValidationRule> De BindingGroup is doorgegeven als de eerste parameter van de <xref:System.Windows.Controls.ValidationRule.Validate%2A>methode wanneer de <xref:System.Windows.Controls.ValidationRule>wordt uitgevoerd.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> U kunt de <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>of <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>methode op die BindingGroup ophalen van de voorgestelde waarden van het object en de <xref:System.Windows.Data.BindingGroup.Items%2A>eigenschap ophalen van de bronnen van de bindingen.</xref:System.Windows.Data.BindingGroup.Items%2A> </xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A>       Een BindingGroup updates de bronnen van de binding op hetzelfde moment in plaats van elke binding afzonderlijk wordt bijgewerkt. Wanneer u een van de methoden om de gegevens te valideren aanroepen (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, of <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), de binding voor elke <xref:System.Windows.Controls.TextBox>in het voorbeeld is gevalideerd en mogelijk bijgewerkt.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A> </xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A> Wanneer een binding deel van een BindingGroup uitmaakt, de bron van de binding niet wordt bijgewerkt nadat u <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>of <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>op de BindingGroup, tenzij u expliciet instellen de <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>eigenschap.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A>"
  example:
  - "The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires. The application displays the current information for the item below the form. The user can submit or cancel the changes.  \n  \n The application does the following to achieve this behavior.  \n  \n-   Creates a BindingGroup and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.  \n  \n The following example creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application. The root <xref:System.Windows.Controls.StackPanel> has a BindingGroup that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously. The binding objects on the `Price` property and the `OfferExpires` property become part of the BindingGroup and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values. The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the BindingGroup.  \n  \n [!code-xml[BindingGroupSnippets#WindowLayout](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#windowlayout)]  \n  \n The following example shows the event handlers for the application. When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the BindingGroup. If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction. If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction. When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the BindingGroup (in the previous example). `ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event and displays information about the validation error to the user. The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.  \n  \n [!code-cs[BindingGroupSnippets#WindowLogic](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#windowlogic)]\n [!code-vb[BindingGroupSnippets#WindowLogic](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#windowlogic)]  \n  \n The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the BindingGroup in the first example. The <xref:System.Windows.Controls.ValidationRule> uses the BindingGroup in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: 'public class BindingGroup : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> klasse."
  syntax:
    content: public BindingGroup ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BeginEdit
  id: BeginEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Een transactie bewerken op de bronnen in begint de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Als de bronnen in de <xref:System.Windows.Data.BindingGroup>ondersteunen negeren van wijzigingen in behandeling, kunt u BeginEdit om te beginnen met de transactie bewerken aanroepen aanroepen <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>aanroepen voor het opslaan van de wijzigingen in behandeling <xref:System.Windows.Data.BindingGroup.CancelEdit%2A>de wijzigingen in behandeling.</xref:System.Windows.Data.BindingGroup.CancelEdit%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup>       Voor elk object in <xref:System.Windows.Data.BindingGroup.Items%2A>die implementeert <xref:System.ComponentModel.IEditableObject>, BeginEdit aanroepen <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls BeginEdit when a window loads to begin the edit transaction.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  id: BindingExpressions
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee wordt een verzameling <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> objecten met daarin informatie voor elke Binding in de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Een <xref:System.Windows.Data.BindingExpression>behoort tot een <xref:System.Windows.Data.BindingGroup>als een van de volgende situaties zich voordoet:-de bron van de binding en de <xref:System.Windows.FrameworkElement.DataContext%2A>van het element met de <xref:System.Windows.Data.BindingGroup>hetzelfde object zijn en de <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>is niet ingesteld.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingExpression>      -De <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>eigenschap van de binding en de <xref:System.Windows.Data.BindingGroup.Name%2A>van de <xref:System.Windows.Data.BindingGroup>zijn ingesteld op dezelfde niet-null-waarde en de <xref:System.Windows.Data.BindingGroup>behoort tot een bovenliggend element van target-element van de binding.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>      -U een <xref:System.Windows.Data.BindingExpression>naar BindingExpressions.</xref:System.Windows.Data.BindingExpression>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase> BindingExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
      description: "Een verzameling van <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> objecten met daarin informatie voor elke binding in de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.BindingExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CancelEdit
  id: CancelEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "De transactie bewerken wordt beëindigd en worden de wijzigingen in behandeling verwijderd."
  remarks: "Deze methode zorgt ervoor dat de bronnen de wijzigingen in behandeling negeren als een bronobject staat in dat geval is en beëindigen van de transactie bewerken. De methode wordt vervolgens de doeleigenschappen bijgewerkt met de opgeslagen waarden.       Voor elk object in <xref:System.Windows.Data.BindingGroup.Items%2A>die implementeert <xref:System.ComponentModel.IEditableObject>, CancelEdit aanroepen <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CancelEdit to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#CancelEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[BindingGroupSnippets#CancelEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  id: CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee wordt opgehaald of elke bron in de binding kan wijzigingen in behandeling negeren en herstellen van de oorspronkelijke waarden."
  remarks: "Een bron kan wijzigingen in behandeling negeren als het <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject> implementeert"
  syntax:
    content: public bool CanRestoreValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u elke bron in de binding kan wijzigingen in behandeling negeren en herstellen van de oorspronkelijke waarden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CanRestoreValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CommitEdit
  id: CommitEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Alle wordt uitgevoerd de <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objecten en de bronnen binding bijgewerkt als alle validatieregels slagen."
  remarks: "Als elke <xref:System.Windows.Controls.ValidationRule>is geslaagd, wordt deze methode tot gevolg dat de bronnen in behandeling zijnde wijzigingen en beëindigen van de transactie bewerken als een bron-object kan doen gaf</xref:System.Windows.Controls.ValidationRule>       Voor elk object in <xref:System.Windows.Data.BindingGroup.Items%2A>die implementeert <xref:System.ComponentModel.IEditableObject>, CommitEdit aanroepen <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CommitEdit to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public bool CommitEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als elke <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> lukt en de waarden worden doorgevoerd in de bronnen, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  id: GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Retourneert de voorgestelde waarde voor de opgegeven eigenschap en het item."
  remarks: "Deze methode gebruiken in de <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>methode om de waarde aan worden toegewezen aan de bron.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> Het type van de geretourneerde waarde is afhankelijk van het stadium waarin de <xref:System.Windows.Controls.ValidationRule>optreedt.</xref:System.Windows.Controls.ValidationRule> Bijvoorbeeld, als een <xref:System.Windows.Controls.TextBox>gegevens is gebonden aan een eigenschap van het type geheel getal en de <xref:System.Windows.Controls.ValidationRule>dat aanroepen van GetValue heeft de <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>ingesteld op <xref:System.Windows.Controls.ValidationStep>, de methode retourneert een tekenreeks.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Als de <xref:System.Windows.Controls.ValidationRule>heeft de <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>ingesteld op <xref:System.Windows.Controls.ValidationStep>, de methode retourneert het type dat wordt geretourneerd door de binding conversieprogramma.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> In dit voorbeeld retourneert GetValue meestal een geheel getal."
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the GetValue method to get values that the customer entered.  \n  \n [!code-cs[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#itembindgroupvalidationrule)]\n [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#itembindgroupvalidationrule)]"
  syntax:
    content: public object GetValue (object item, string propertyName);
    parameters:
    - id: item
      type: System.Object
      description: "Het object dat de opgegeven eigenschap bevat."
    - id: propertyName
      type: System.String
      description: "De eigenschap waarvan de voorgestelde waarde om op te halen."
    return:
      type: System.Object
      description: "De waarde van de voorgestelde eigenschap."
  overload: System.Windows.Data.BindingGroup.GetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Er is geen een binding voor de opgegeven item en de eigenschap."
  - type: System.Windows.Data.ValueUnavailableException
    commentId: T:System.Windows.Data.ValueUnavailableException
    description: "De waarde van de opgegeven eigenschap is niet beschikbaar is als gevolg van een conversiefout opgetreden of omdat een eerdere validatieregel is mislukt."
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.HasValidationError
  id: HasValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee wordt een waarde die aangeeft of de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> heeft een regel voor de validatie is mislukt."
  syntax:
    content: public bool HasValidationError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> heeft een regel voor de validatie is mislukt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.HasValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.IsDirty
  id: IsDirty
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> bevat een voorgestelde waarde die niet naar de bron geschreven is."
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> een voorgestelde waarde bevat die niet geschreven naar de bron, anders wordt is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Items
  id: Items
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Haalt de bronnen die worden gebruikt door de Binding-objecten in de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Elk object dat wordt gebruikt als bron is toegevoegd aan de eigenschap Items, zelfs als het object wordt gebruikt als bron voor meerdere bindingen. Vaak is er slechts één item in de Items, dit is het object dat het <xref:System.Windows.FrameworkElement.DataContext%2A>van het element die gebruikmaakt van de <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> Het is mogelijk een <xref:System.Windows.Data.BindingGroup>echter meerdere bronnen hebben.</xref:System.Windows.Data.BindingGroup> Bijvoorbeeld, als Binding objecten delen dezelfde <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>maar verschillende bron-objecten gebruiken, elk object dat wordt gebruikt als bron is in-Items.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       Er kan ook worden meerdere objecten in Items als het pad van een Binding wordt omgezet in een geneste eigenschap van de bron. Stel bijvoorbeeld dat een <xref:System.Windows.Controls.TextBox>binding van het besturingselement deel uitmaakt van een <xref:System.Windows.Data.BindingGroup>en de bijbehorende <xref:System.Windows.FrameworkElement.DataContext%2A>is een `Customer` -object met een eigenschap van het type `Address`.</xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.TextBox> Als de <xref:System.Windows.Data.Binding.Path%2A>van de <xref:System.Windows.Data.Binding>is de `Address.ZipCode` eigenschap, de `Address` wordt toegevoegd aan de eigenschap Items.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.Path%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>). On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`. The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public System.Collections.IList Items { get; }
    return:
      type: System.Collections.IList
      description: "De bronnen die worden gebruikt door de Binding-objecten in de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Name
  id: Name
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van de naam van de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>, die kan worden gebruikt wilt opnemen en uitsluiten van de Binding-objecten in de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Als de naam `null`, bindingen waarvoor een bron die hetzelfde object als het <xref:System.Windows.FrameworkElement.DataContext%2A>van het element met de <xref:System.Windows.Data.BindingGroup>deelnemen aan de <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>       U kunt opnemen bindingen waarvoor een bron die verschilt van de <xref:System.Windows.FrameworkElement.DataContext%2A>van het bovenliggende element dat is de <xref:System.Windows.Data.BindingGroup>door in te stellen van de naam van de <xref:System.Windows.Data.BindingGroup>en de <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>eigenschap van een binding met dezelfde waarde.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> U kunt de bindingen die dezelfde bron als hebben uitsluiten <xref:System.Windows.FrameworkElement.DataContext%2A>van het bovenliggende element dat is de <xref:System.Windows.Data.BindingGroup>door in te stellen van de naam van de <xref:System.Windows.Data.BindingGroup>en de <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>eigenschap van een binding met verschillende waarden.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the Name of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "De naam van de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld of de &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; gebeurtenis treedt op wanneer de status van een <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> wijzigingen."
  remarks: "De <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>gekoppelde gebeurtenis voor het element met de <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Windows.Data.BindingGroup> and sets NotifyOnValidationError to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event when a <xref:System.Windows.Controls.ValidationRule> fails.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event.  \n  \n [!code-cs[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#errorhandler)]\n [!code-vb[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#errorhandler)]"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; gebeurtenis treedt op wanneer de status van een <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> gewijzigd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Owner
  id: Owner
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee wordt het object dat dit <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> aan is toegewezen."
  syntax:
    content: public System.Windows.DependencyObject Owner { get; }
    return:
      type: System.Windows.DependencyObject
      description: "Het object dat deze <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> aan is toegewezen."
  overload: System.Windows.Data.BindingGroup.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  id: SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> gebruikt doelwaarden die niet doorgevoerd in de bron zijn."
  remarks: "Een voorgestelde waarde is een waarde die is gewijzigd op het doel van een binding, maar is niet doorgevoerd in de bron. Stel bijvoorbeeld dat er is een binding in twee richtingen op een <xref:System.Windows.Controls.TextBox>en de <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>eigenschap is ingesteld op <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Controls.TextBox> Als de gebruiker de waarde van wijzigt de <xref:System.Windows.Controls.TextBox>, de voorgestelde waarde is de waarde die is in de <xref:System.Windows.Controls.TextBox>voordat deze doorgevoerd in de bron wordt.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>       Wanneer SharesProposedValues is `true`, wordt de <xref:System.Windows.Data.BindingGroup>maakt gebruik van de voorgestelde waarde wanneer één binding het BindingGroup verlaat en een andere Binding met dezelfde bron lid wordt van de BindingGroup.</xref:System.Windows.Data.BindingGroup>  Stel dat een toepassing kan een gebruiker meerdere velden bewerken en bijwerken van het bronobject door te klikken op een knop. Wanneer een veld niet wordt bewerkt, weergegeven de toepassing in een <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> Wanneer de gebruiker begint met het bewerken van een veld, vervangt de toepassing de <xref:System.Windows.Controls.TextBlock>met een <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBlock> Wanneer de gebruiker is voltooid dat veld bewerken, vervangt de toepassing de <xref:System.Windows.Controls.TextBox>met een <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> </xref:System.Windows.Controls.TextBox> Omdat de bron niet bijgewerkt is totdat de gebruiker op de knop klikt, moet er een manier om de <xref:System.Windows.Controls.TextBlock>om de voorgestelde waarde weer te geven.</xref:System.Windows.Controls.TextBlock> Door SharesProposedValues in te stellen op `true`, weergegeven door de toepassing wijzigingen van de gebruiker naar een veld zelfs wanneer de bron is niet bijgewerkt."
  syntax:
    content: public bool SharesProposedValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> waarden die niet doorgevoerd in de bron, anders wordt zijn gebruikt als doel <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.SharesProposedValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  id: TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Probeert op te halen van de voorgestelde waarde voor de opgegeven eigenschap en het item."
  remarks: "TryGetValue retourneert `false` als niet een binding voor de opgegeven item en de eigenschap is de waarde van de opgegeven eigenschap niet beschikbaar is als gevolg van een conversiefout opgetreden is of omdat een eerdere validatieregel is mislukt.       Deze methode gebruiken in de <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>methode om de waarde aan worden toegewezen aan de bron.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> Het type `value` is afhankelijk van het stadium waarin de <xref:System.Windows.Controls.ValidationRule>optreedt.</xref:System.Windows.Controls.ValidationRule> Bijvoorbeeld, als een <xref:System.Windows.Controls.TextBox>gegevens is gebonden aan een eigenschap van het type integer `value` is een tekenreeks als de <xref:System.Windows.Controls.ValidationRule>dat aanroepen TryGetValue heeft een <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>is ingesteld op <xref:System.Windows.Controls.ValidationStep>.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Als de <xref:System.Windows.Controls.ValidationRule>heeft de <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>ingesteld op <xref:System.Windows.Controls.ValidationStep>, het type `value` is elk type dat wordt geretourneerd door de binding converter.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> In dit voorbeeld `value` is meestal een geheel getal."
  example:
  - "The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the TryGetValue method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form. Then the example checks that if an item is over 100 dollars, it will be available for at least seven days. This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public bool TryGetValue (object item, string propertyName, out object value);
    parameters:
    - id: item
      type: System.Object
      description: "Het object dat de opgegeven eigenschap bevat."
    - id: propertyName
      type: System.String
      description: "De eigenschap waarvan de voorgestelde waarde om op te halen."
    - id: value
      type: System.Object
      description: "Wanneer deze methode retourneert, bevat een object dat de voorgestelde eigenschapswaarde vertegenwoordigt. Deze parameter wordt doorgegeven niet geïnitialiseerd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarde is de voorgestelde waarde voor de opgegeven eigenschap; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.UpdateSources
  id: UpdateSources
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "De converter op de binding wordt uitgevoerd en de <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objecten op waarvoor de <xref:System.Windows.Controls.ValidationRule.ValidationStep*>eigenschap ingesteld op <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, of <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> en slaat u de waarden van de doelen op de bronobjecten als alle validatieregels is gelukt.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "Deze methode werkt u de bron als elke <xref:System.Windows.Controls.ValidationRule>is geslaagd, maar dit leidt niet tot de bronnen in behandeling zijnde wijzigingen en beëindigen van de transactie bewerken.</xref:System.Windows.Controls.ValidationRule> Dat wil zeggen, als het bronobject <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject> implementeert Deze methode geen veroorzaakt aanroepen <xref:System.ComponentModel.IEditableObject.EndEdit%2A>moet worden aangeroepen.</xref:System.ComponentModel.IEditableObject.EndEdit%2A> Gebruik de <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>methode om de bronnen die de in behandeling zijnde wijzigingen worden doorgevoerd.</xref:System.Windows.Data.BindingGroup.CommitEdit%2A>"
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example calls UpdateSources to validate the bindings and save the values to the source if all the validation rules succeed.  \n  \n [!code-cs[BindingGroupSnippets#UpdateSources](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#updatesources)]\n [!code-vb[BindingGroupSnippets#UpdateSources](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#updatesources)]"
  syntax:
    content: public bool UpdateSources ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als alle validatieregels slaagt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.UpdateSources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  id: ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Opgehaald of ingesteld van een waarde die of u aangeeft wilt opnemen de <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Wanneer ValidatesOnNotifyDataError is `true`, de binding controleert en fouten die worden gegenereerd door een gegevensbron die u <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo> implementeert rapporten"
  syntax:
    content: public bool ValidatesOnNotifyDataError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om op te nemen de <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  id: ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "De converter op de binding wordt uitgevoerd en de <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objecten op waarvoor de <xref:System.Windows.Controls.ValidationRule.ValidationStep*>eigenschap ingesteld op <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> of <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "De bronnen worden niet bijgewerkt wanneer u deze methode aanroept."
  syntax:
    content: public bool ValidateWithoutUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de validatieregels slaagt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  id: ValidationErrors
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee wordt een verzameling <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> objecten, waardoor de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> ongeldig te zijn."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError> ValidationErrors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
      description: "Een verzameling van <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> objecten, waardoor <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> ongeldig te zijn.  De waarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen fouten."
  overload: System.Windows.Data.BindingGroup.ValidationErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Hiermee wordt een verzameling <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objecten die het valideren van de bronobjecten in de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Wanneer een <xref:System.Windows.Controls.ValidationRule>wordt toegevoegd aan een <xref:System.Windows.Data.BindingGroup>, wordt de <xref:System.Windows.Data.BindingGroup>is doorgegeven als de eerste parameter van de <xref:System.Windows.Controls.ValidationRule.Validate%2A>methode.</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.ValidationRule> U kunt de voorgestelde waarden van het object krijgen met behulp van de <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>of <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>methode.</xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A> U kunt de objecten die de bronnen van de bindingen van zijn de <xref:System.Windows.Data.BindingGroup.Items%2A>eigenschap.</xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example shows the `ValidateDateAndPrice` class. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "Een verzameling van <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objecten die het valideren van de bronobjecten in de <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.ValueUnavailableException
  parent: System.Windows.Data
  isExternal: false
  name: ValueUnavailableException
  nameWithType: ValueUnavailableException
  fullName: System.Windows.Data.ValueUnavailableException
- uid: System.Windows.Data.BindingGroup.#ctor
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
- uid: System.Windows.Data.BindingGroup.BeginEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingExpressionBase>
  nameWithType: Collection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingExpressionBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.CancelEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingGroup.CommitEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingGroup.HasValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.BindingGroup.Name
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
- uid: System.Windows.Data.BindingGroup.UpdateSources
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ValidationError>
  nameWithType: ReadOnlyCollection<ValidationError>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Controls.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.ValidationRules
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.#ctor*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup.BindingGroup
- uid: System.Windows.Data.BindingGroup.BeginEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit
  nameWithType: BindingGroup.BeginEdit
- uid: System.Windows.Data.BindingGroup.BindingExpressions*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
- uid: System.Windows.Data.BindingGroup.CancelEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit
  nameWithType: BindingGroup.CancelEdit
- uid: System.Windows.Data.BindingGroup.CanRestoreValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
- uid: System.Windows.Data.BindingGroup.CommitEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit
  nameWithType: BindingGroup.CommitEdit
- uid: System.Windows.Data.BindingGroup.GetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue
  nameWithType: BindingGroup.GetValue
- uid: System.Windows.Data.BindingGroup.HasValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
- uid: System.Windows.Data.BindingGroup.Name*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue
  nameWithType: BindingGroup.TryGetValue
- uid: System.Windows.Data.BindingGroup.UpdateSources*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources
  nameWithType: BindingGroup.UpdateSources
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate
  nameWithType: BindingGroup.ValidateWithoutUpdate
- uid: System.Windows.Data.BindingGroup.ValidationErrors*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
- uid: System.Windows.Data.BindingGroup.ValidationRules*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
