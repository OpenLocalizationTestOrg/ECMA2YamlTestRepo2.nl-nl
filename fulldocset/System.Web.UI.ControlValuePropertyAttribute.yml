### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlValuePropertyAttribute
  id: ControlValuePropertyAttribute
  children:
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  - System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  - System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  - System.Web.UI.ControlValuePropertyAttribute.Name
  langs:
  - csharp
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute
  fullName: System.Web.UI.ControlValuePropertyAttribute
  type: Class
  summary: "Hiermee geeft u de standaardinstelling voor de eigenschap van een besturingselement dat een <xref href=&quot;System.Web.UI.WebControls.ControlParameter&quot;> </xref> object koppelt aan tijdens runtime. Deze klasse kan niet worden overgenomen."
  remarks: "Bij het definiëren van een <xref:System.Web.UI.WebControls.ControlParameter>object u doorgaans een besturingselement eigenschap binden aan een parameter door zowel de <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>en <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>Eigenschappen.</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> </xref:System.Web.UI.WebControls.ControlParameter> Als de <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>eigenschap niet is ingesteld, wordt een standaardinstelling voor de eigenschap wordt gebruikt.</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> Het kenmerk ControlValuePropertyAttribute wordt toegepast op een besturingselement om op te geven van de standaardinstelling voor de eigenschap die een <xref:System.Web.UI.WebControls.ControlParameter>object koppelt aan tijdens runtime.</xref:System.Web.UI.WebControls.ControlParameter>       Zie voor meer informatie over het gebruik van kenmerken [kenmerken](~/add/includes/ajax-current-ext-md.md).       Zie voor een lijst met eerste eigenschapswaarden voor een exemplaar van de klasse ControlValuePropertyAttribute de <xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A>constructor.</xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to apply a ControlValuePropertyAttribute attribute that specifies a default property and value to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/t-system.web.ui.controlv_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ControlValuePropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> klasse met behulp van de opgegeven eigenschapsnaam."
  remarks: "Deze constructor gebruiken voor het maken van een nieuw exemplaar van de <xref:System.Web.UI.ControlValuePropertyAttribute>klasse met behulp van de opgegeven eigenschapsnaam.</xref:System.Web.UI.ControlValuePropertyAttribute> De volgende tabel bevat de waarde van de eerste eigenschap voor een exemplaar van de <xref:System.Web.UI.ControlValuePropertyAttribute>klasse.</xref:System.Web.UI.ControlValuePropertyAttribute>      | Eigenschap | Initiële waarde |   |--------------|-------------------|   | <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>| De waarde van de `name` parameter. |</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/csharp/m-system.web.ui.controlv_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "De standaardinstelling voor de eigenschap voor het besturingselement."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> klasse met behulp van de opgegeven naam en de standaard waarde van eigenschap."
  remarks: "Deze constructor gebruiken voor het maken van een nieuw exemplaar van de <xref:System.Web.UI.ControlValuePropertyAttribute>klasse met behulp van de opgegeven naam en de standaard waarde van eigenschap.</xref:System.Web.UI.ControlValuePropertyAttribute> De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Web.UI.ControlValuePropertyAttribute>klasse.</xref:System.Web.UI.ControlValuePropertyAttribute>      | Eigenschap | Initiële waarde |   |--------------|-------------------|   | <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>| De waarde van de `name` parameter. |   | <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>| De waarde van de `defaultValue` parameter. |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property and value to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/9280d55d-6a5b-458b-bf81-_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/9280d55d-6a5b-458b-bf81-_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "De standaardinstelling voor de eigenschap voor het besturingselement."
    - id: defaultValue
      type: System.Object
      description: "De standaardwaarde voor de standaardeigenschap."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  id: '#ctor(System.String,System.Type,System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> klasse met behulp van de opgegeven naam en de standaard waarde van eigenschap. De standaardwaarde is ook omgezet naar het opgegeven gegevenstype."
  remarks: "Deze constructor gebruiken voor het maken van een nieuw exemplaar van de <xref:System.Web.UI.ControlValuePropertyAttribute>klasse met behulp van de opgegeven naam en de standaard waarde van eigenschap.</xref:System.Web.UI.ControlValuePropertyAttribute> Deze versie van de constructor ook geprobeerd de standaardwaarde converteren naar het gegevenstype dat is opgegeven door de `type` parameter. Als de standaardwaarde kan niet worden geconverteerd, de <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>eigenschap is niet ingesteld.</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> De volgende tabel toont de eerste waarden voor een exemplaar van de <xref:System.Web.UI.ControlValuePropertyAttribute>klasse.</xref:System.Web.UI.ControlValuePropertyAttribute>      | Eigenschap | Initiële waarde |   |--------------|-------------------|   | <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>| De waarde van de `name` parameter. |   | <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>| De waarde van de `defaultValue` parameter, als de waarde kan worden omgezet naar het gegevenstype dat is opgegeven door de `type` parameter. |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  syntax:
    content: public ControlValuePropertyAttribute (string name, Type type, string defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "De standaardinstelling voor de eigenschap voor het besturingselement."
    - id: type
      type: System.Type
      description: "De <xref:System.Type>moet de standaardwaarde is geconverteerd.</xref:System.Type>"
    - id: defaultValue
      type: System.String
      description: "De standaardwaarde voor de standaardeigenschap."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  id: DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hiermee wordt de standaardwaarde voor de standaardeigenschap van een besturingselement."
  remarks: "Wanneer de eigenschap opgegeven door de <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>eigenschap niet is ingesteld, wordt de eigenschap standaardwaarde gebruiken om te bepalen van de standaardwaarde voor de eigenschap.</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to set the DefaultValue property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_0_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_0_1.cs)]"
  syntax:
    content: public object DefaultValue { get; }
    return:
      type: System.Object
      description: "De standaardwaarde voor de standaardeigenschap van een besturingselement."
  overload: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hiermee wordt bepaald of het huidige exemplaar van de <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> object is gelijk aan het opgegeven object."
  remarks: "Gebruik de methode is gelijk aan om te bepalen of het huidige exemplaar van de <xref:System.Web.UI.ControlValuePropertyAttribute>object is gelijk aan het opgegeven object.</xref:System.Web.UI.ControlValuePropertyAttribute> Voor de objecten die niet gelijk zijn, moeten voldoen aan de volgende criteria: 1.  Het object in de `obj` parameter moet een <xref:System.Web.UI.ControlValuePropertyAttribute>object.</xref:System.Web.UI.ControlValuePropertyAttribute>      2.  De <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>en <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>Eigenschappen van beide objecten moet gelijk zijn.</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>      > [!NOTE] > Deze methode wordt hoofdzakelijk gebruikt door ontwikkelaars besturingselement."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "De <xref:System.Object>moeten worden vergeleken met dit exemplaar.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het object opgenomen in de <code> obj </code> parameter gelijk is aan het huidige exemplaar van <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlValuePropertyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retourneert de hash-code voor dit exemplaar."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Een 32-bits geheel getal met teken hash-code."
  overload: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  id: Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hiermee wordt de standaardeigenschap voor een besturingselement."
  remarks: "Wanneer een <xref:System.Web.UI.WebControls.ControlParameter>object is gedefinieerd zonder de <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>eigenschap ingesteld, wordt de eigenschap Name gebruiken om te bepalen van de standaardeigenschap die is gebonden aan de <xref:System.Web.UI.WebControls.ControlParameter>object tijdens runtime.</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter>"
  example:
  - "The following code example demonstrates how to set the Name property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_1_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_1_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "De standaardinstelling voor de eigenschap voor een besturingselement."
  overload: System.Web.UI.ControlValuePropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals
  nameWithType: ControlValuePropertyAttribute.Equals
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ControlValuePropertyAttribute.GetHashCode
- uid: System.Web.UI.ControlValuePropertyAttribute.Name*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
