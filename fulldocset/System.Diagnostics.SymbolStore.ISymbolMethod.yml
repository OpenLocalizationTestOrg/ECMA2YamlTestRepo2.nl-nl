### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.ISymbolMethod
  id: ISymbolMethod
  children:
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  - System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  - System.Diagnostics.SymbolStore.ISymbolMethod.Token
  langs:
  - csharp
  name: ISymbolMethod
  nameWithType: ISymbolMethod
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod
  type: Interface
  summary: "Vertegenwoordigt een methode in een winkel symbool."
  remarks: "De interface ISymbolMethod biedt alleen toegang tot de symbool-gerelateerde kenmerken van een methode, zoals reeks punten lexicale scopes en informatie over parameters. Deze gebruikt met de <xref:System.Reflection>klassen te lezen van de type-gerelateerde kenmerken van een methode.</xref:System.Reflection>      > [!NOTE] > Deze interface is de beheerde equivalent van de `ISymUnmanagedMethod` interface, een van de niet-beheerde symbool store interfaces die een andere manier om te lezen en schrijven van gegevens voor foutopsporing symbool bieden."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ISymbolMethod
  implements: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace
  id: GetNamespace
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetNamespace()
  nameWithType: ISymbolMethod.GetNamespace()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee haalt u de naamruimte die in de huidige methode is gedefinieerd."
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace
      description: "De naamruimte die in de huidige methode is gedefinieerd."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetOffset(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee haalt u de Microsoft tussenliggende taal (MSIL) offset binnen de methode die overeenkomt met de opgegeven positie."
  remarks: "De parameters worden geretourneerd in de volgorde waarin ze zijn gedefinieerd in de handtekening van de methode."
  syntax:
    content: public int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "Het document waarvoor de offset is aangevraagd."
    - id: line
      type: System.Int32
      description: "De regel overeenkomt met de verschuiving."
    - id: column
      type: System.Int32
      description: "Het document kolom hoort bij de verschuiving."
    return:
      type: System.Int32
      description: "De verschuiving binnen het opgegeven document."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters
  id: GetParameters
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetParameters()
  nameWithType: ISymbolMethod.GetParameters()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee haalt de parameters voor de huidige methode."
  remarks: "De parameters worden geretourneerd in de volgorde waarin ze zijn gedefinieerd in de handtekening van de methode."
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "De matrix van parameters voor de huidige methode."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetRanges(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee haalt u een matrix van begin- en offset paren die overeenkomen met het bereik van Microsoft tussentaal (MSIL) die betrekking heeft op de opgegeven positie in de methode."
  remarks: "De matrix is een matrix van gehele getallen in de notatie {{Begindatum1, end1}, {Begindatum2 end2}...}. Het aantal paren bereik is de lengte van de matrix gedeeld door 2."
  syntax:
    content: public int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "Het document waarvoor de offset is aangevraagd."
    - id: line
      type: System.Int32
      description: "De regel overeenkomt met de bereiken."
    - id: column
      type: System.Int32
      description: "De kolom in het document overeenkomt met de bereiken."
    return:
      type: System.Int32[]
      description: "Een matrix van het begin- en waardeparen offset."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)
  id: GetScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetScope(Int32)
  nameWithType: ISymbolMethod.GetScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Retourneert het meest omsluitende lexicale bereik wanneer er een offset binnen een methode opgegeven."
  remarks: "U kunt de methode GetScope gebruiken om lokale variabele zoekacties te starten."
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);
    parameters:
    - id: offset
      type: System.Int32
      description: "De byteoffset binnen de methode van de lexicale scope."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "Het meest omsluitende lexicale bereik voor de opgegeven byte-offset binnen de methode."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee wordt de sequence-punten voor de huidige methode."
  remarks: "De punten volgorde worden gesorteerd op offset en voor alle documenten in de methode zijn. Gebruik <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A>op te halen van de telling van alle takenreeksen punten en matrix maken van de juiste grootte.</xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A>       GetSequencePoints controleert of de grootte van elke matrix en informatie over de volgorde in elk geplaatst. Als er een matrix `null`, de gegevens voor matrix is niet geretourneerd."
  syntax:
    content: public void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);
    parameters:
    - id: offsets
      type: System.Int32[]
      description: "De matrix van byte worden verschoven vanaf het begin van de methode voor de reeks verwijst."
    - id: documents
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "De matrix van documenten waarin de sequence-punten zich bevinden."
    - id: lines
      type: System.Int32[]
      description: "De matrix van regels in de documenten waar de sequence-punten zich bevinden."
    - id: columns
      type: System.Int32[]
      description: "De matrix van kolommen in de documenten waar de sequence-punten zich bevinden."
    - id: endLines
      type: System.Int32[]
      description: "De matrix van regels in de documenten waarmee de reeks end verwijst."
    - id: endColumns
      type: System.Int32[]
      description: "De matrix van kolommen in de documenten waarmee de reeks end verwijst."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  id: GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee haalt u de begin- en posities voor de bron van de huidige methode."
  remarks: "De eerste matrixpositie is gestart en de tweede is het einde."
  syntax:
    content: public bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);
    parameters:
    - id: docs
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "De begin- en einddatum van de brondocumenten."
    - id: lines
      type: System.Int32[]
      description: "De begin- en einddatum regels in de bijbehorende gegevensbron documenten."
    - id: columns
      type: System.Int32[]
      description: "De begin- en einddatum van kolommen in de bijbehorende gegevensbron documenten."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de posities zijn gedefinieerd; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  id: RootScope
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: RootScope
  nameWithType: ISymbolMethod.RootScope
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee haalt u het basiscertificaat lexicale bereik voor de huidige methode. Dit bereik omsluit de volledige methode."
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "Het lexicale root-bereik dat de volledige methode omsluit."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  id: SequencePointCount
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: SequencePointCount
  nameWithType: ISymbolMethod.SequencePointCount
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Hiermee haalt een aantal van de sequence-punten in de methode."
  syntax:
    content: public int SequencePointCount { get; }
    return:
      type: System.Int32
      description: "Het aantal van de sequence-punten in de methode."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token
  id: Token
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: Token
  nameWithType: ISymbolMethod.Token
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Haalt de <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> die de metagegevens voor de huidige methode bevat."
  syntax:
    content: public System.Diagnostics.SymbolStore.SymbolToken Token { get; }
    return:
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Het metagegevenstoken voor de huidige methode."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetNamespace()
  nameWithType: ISymbolMethod.GetNamespace()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetOffset(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.ISymbolDocument
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetParameters()
  nameWithType: ISymbolMethod.GetParameters()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolVariable
    name: ISymbolVariable
    nameWithType: ISymbolVariable
    fullName: ISymbolVariable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetRanges(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetScope(Int32)
  nameWithType: ISymbolMethod.GetScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(Int32)
- uid: System.Diagnostics.SymbolStore.ISymbolScope
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolDocument
    name: ISymbolDocument
    nameWithType: ISymbolDocument
    fullName: ISymbolDocument[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: RootScope
  nameWithType: ISymbolMethod.RootScope
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: SequencePointCount
  nameWithType: ISymbolMethod.SequencePointCount
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: Token
  nameWithType: ISymbolMethod.Token
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.Token
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetNamespace
  nameWithType: ISymbolMethod.GetNamespace
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetOffset
  nameWithType: ISymbolMethod.GetOffset
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetParameters
  nameWithType: ISymbolMethod.GetParameters
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetRanges
  nameWithType: ISymbolMethod.GetRanges
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetScope
  nameWithType: ISymbolMethod.GetScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSequencePoints
  nameWithType: ISymbolMethod.GetSequencePoints
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSourceStartEnd
  nameWithType: ISymbolMethod.GetSourceStartEnd
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: RootScope
  nameWithType: ISymbolMethod.RootScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: SequencePointCount
  nameWithType: ISymbolMethod.SequencePointCount
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: Token
  nameWithType: ISymbolMethod.Token
