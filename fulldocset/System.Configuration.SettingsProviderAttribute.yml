### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsProviderAttribute
  id: SettingsProviderAttribute
  children:
  - System.Configuration.SettingsProviderAttribute.#ctor(System.String)
  - System.Configuration.SettingsProviderAttribute.#ctor(System.Type)
  - System.Configuration.SettingsProviderAttribute.ProviderTypeName
  langs:
  - csharp
  name: SettingsProviderAttribute
  nameWithType: SettingsProviderAttribute
  fullName: System.Configuration.SettingsProviderAttribute
  type: Class
  summary: "Hiermee geeft u de provider van instellingen voor opslag voor de huidige instellingen Toepassingsklasse of eigenschap wordt gebruikt. Deze klasse kan niet worden overgenomen."
  remarks: "Elke Toepassingsklasse definieert een groep instellingen toepassingseigenschappen die informatie vertegenwoordigen die zich blijft tussen uitvoeringen van de toepassing voordoen. Het is echter een provider van instellingen, een klasse wordt afgeleid van <xref:System.Configuration.SettingsProvider>â€” die daadwerkelijk het opslagmechanisme voor biedt.</xref:System.Configuration.SettingsProvider>       De SettingsProviderAttribute Hiermee geeft u de provider van instellingen voor opslag voor de toepassingseigenschappen instellingen gebruikt. Dit kenmerk kan worden toegepast op de gehele toepassing instellingen klasse of de eigenschappen voor afzonderlijke toepassing. Een SettingsProviderAttribute ingesteld op het eigenschapniveau wordt overschreven door het niveau van de klasse-kenmerk. Als een provider van de instellingen niet expliciet is opgegeven, wordt de standaard-provider gebruikt. Clienttoepassingen is de standaardprovider <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider>       Providers instelling kan niet worden bepaald tijdens runtime. Runtime-de vaststelling van opslagmethoden moet worden gecodeerd in de instellingen voor providerklasse zelf.      > [!CAUTION] > Providers voor aangepaste instellingen van derden willekeurige is inherent onveilig omdat deze providers volledige lezen/schrijven-toegang tot de configuratiegegevens van uw toepassing. Een provider van de instellingen moet zorgvuldig worden ingevoerd voordat deze wordt vastgesteld voor algemeen gebruik."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]

      public sealed class SettingsProviderAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.SettingsProviderAttribute
  langs:
  - csharp
  name: SettingsProviderAttribute(String)
  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(String)
  fullName: System.Configuration.SettingsProviderAttribute.SettingsProviderAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiseert een exemplaar van de <xref href=&quot;System.Configuration.SettingsProviderAttribute&quot;> </xref> klasse."
  remarks: "Naam van het type is de naam van de klasse is afgeleid van <xref:System.Configuration.SettingsProvider>, die wordt opgegeven als de provider van instellingen.</xref:System.Configuration.SettingsProvider>      > [!CAUTION] > Providers voor aangepaste instellingen van derden willekeurige is inherent onveilig omdat deze providers volledige lezen/schrijven-toegang tot de configuratiegegevens van uw toepassing. Een provider van de instellingen moet zorgvuldig worden ingevoerd voordat deze wordt vastgesteld voor algemeen gebruik."
  syntax:
    content: public SettingsProviderAttribute (string providerTypeName);
    parameters:
    - id: providerTypeName
      type: System.String
      description: "Een <xref:System.String>met de naam van de provider van instellingen.</xref:System.String>"
  overload: System.Configuration.SettingsProviderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Configuration.SettingsProviderAttribute
  langs:
  - csharp
  name: SettingsProviderAttribute(Type)
  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(Type)
  fullName: System.Configuration.SettingsProviderAttribute.SettingsProviderAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Configuration.SettingsProviderAttribute&quot;> </xref> klasse."
  syntax:
    content: public SettingsProviderAttribute (Type providerType);
    parameters:
    - id: providerType
      type: System.Type
      description: "Een <xref:System.Type>met het type van de provider instellingen.</xref:System.Type>"
  overload: System.Configuration.SettingsProviderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProviderAttribute.ProviderTypeName
  id: ProviderTypeName
  parent: System.Configuration.SettingsProviderAttribute
  langs:
  - csharp
  name: ProviderTypeName
  nameWithType: SettingsProviderAttribute.ProviderTypeName
  fullName: System.Configuration.SettingsProviderAttribute.ProviderTypeName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hiermee haalt u de typenaam van de provider van instellingen."
  remarks: "De eigenschap ProviderTypeName is ingesteld in het vak <xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A>voor de klasse.</xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A>"
  syntax:
    content: public string ProviderTypeName { get; }
    return:
      type: System.String
      description: "Een <xref:System.String>met de naam van de provider van instellingen.</xref:System.String>"
  overload: System.Configuration.SettingsProviderAttribute.ProviderTypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.String)
  parent: System.Configuration.SettingsProviderAttribute
  isExternal: false
  name: SettingsProviderAttribute(String)
  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(String)
  fullName: System.Configuration.SettingsProviderAttribute.SettingsProviderAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.Type)
  parent: System.Configuration.SettingsProviderAttribute
  isExternal: false
  name: SettingsProviderAttribute(Type)
  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(Type)
  fullName: System.Configuration.SettingsProviderAttribute.SettingsProviderAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.SettingsProviderAttribute.ProviderTypeName
  parent: System.Configuration.SettingsProviderAttribute
  isExternal: false
  name: ProviderTypeName
  nameWithType: SettingsProviderAttribute.ProviderTypeName
  fullName: System.Configuration.SettingsProviderAttribute.ProviderTypeName
- uid: System.Configuration.SettingsProviderAttribute.#ctor*
  parent: System.Configuration.SettingsProviderAttribute
  isExternal: false
  name: SettingsProviderAttribute
  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute
- uid: System.Configuration.SettingsProviderAttribute.ProviderTypeName*
  parent: System.Configuration.SettingsProviderAttribute
  isExternal: false
  name: ProviderTypeName
  nameWithType: SettingsProviderAttribute.ProviderTypeName
