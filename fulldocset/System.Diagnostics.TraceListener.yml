### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceListener
  id: TraceListener
  children:
  - System.Diagnostics.TraceListener.#ctor
  - System.Diagnostics.TraceListener.#ctor(System.String)
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Close
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.Flush
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.String)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  langs:
  - csharp
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
  type: Class
  summary: "Biedt de <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> basisklasse voor de listeners die bewaken tracering en foutopsporing uitvoer."
  remarks: "For examples of how to implement a TraceListener, see the <xref:System.Diagnostics.DefaultTraceListener>, <xref:System.Diagnostics.TextWriterTraceListener> and the <xref:System.Diagnostics.EventLogTraceListener> classes.  \n  \n You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  \n  \n-   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.  \n  \n-   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.  \n  \n To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted similar to the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"myListener\" type=\"System.Diagnostics.TextWriterTraceListener\" initializeData=\"TextWriterOutput.log\" />  \n        <remove name=\"Default\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n For more information on using configuration files for tracing, see [\\&lt;system.diagnostics\\&gt;](../Topic/%3Csystem.diagnostics%3E%20Element.md)."
  syntax:
    content: 'public abstract class TraceListener : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceListener()
  nameWithType: TraceListener.TraceListener()
  fullName: System.Diagnostics.TraceListener.TraceListener()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van <xref:System.Diagnostics.TraceListener>.</xref:System.Diagnostics.TraceListener>      | Eigenschap | Standaardwaarde |   |--------------|-------------------|   | De naam | De lege tekenreeks (&quot;&quot;). | | Inspringen | Nul. |   | IndentSize kan | Vier spaties. |"
  syntax:
    content: protected TraceListener ();
    parameters: []
  overload: System.Diagnostics.TraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceListener(String)
  nameWithType: TraceListener.TraceListener(String)
  fullName: System.Diagnostics.TraceListener.TraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse als de listener met behulp van de opgegeven naam."
  syntax:
    content: protected TraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: "De naam van de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>."
  overload: System.Diagnostics.TraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Attributes
  id: Attributes
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Attributes
  nameWithType: TraceListener.Attributes
  fullName: System.Diagnostics.TraceListener.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt u de aangepaste traceersessie listener kenmerken zijn gedefinieerd in het configuratiebestand van de toepassing."
  remarks: "Klassen die van overnemen de <xref:System.Diagnostics.TraceListener>klasse kunt aangepaste kenmerken toevoegen overschrijft de <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>methode en retourneert een string-matrix van aangepaste kenmerknamen.</xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> </xref:System.Diagnostics.TraceListener> De eigenschap Attributes identificeert de aangepaste kenmerken waarnaar wordt verwezen in het configuratiebestand van de toepassing. In het volgende fragment van de configuratie-bestand bijvoorbeeld de <xref:System.Diagnostics.DelimitedListTraceListener>aangepast kenmerk &quot;scheidingsteken&quot; wordt verwezen.</xref:System.Diagnostics.DelimitedListTraceListener> In dit geval wordt de eigenschap Attributes retourneert een <xref:System.Collections.Specialized.StringDictionary>met de tekenreeks &quot;scheidingsteken&quot;.</xref:System.Collections.Specialized.StringDictionary>      ```   <listeners>     <add name=&quot;delimitedListener&quot;        type=&quot;System.Diagnostics.DelimitedListTraceListener&quot;        delimiter=&quot;:&quot;        initializeData=&quot;delimitedOutput.txt&quot;        traceOutputOptions=&quot;ProcessId, DateTime&quot; />     <remove name=&quot;Default&quot; />   </listeners>   ```Niet-gebruikte aangepaste kenmerken zijn niet ge√Ønventariseerd.  Zie voor meer informatie de <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>methode.</xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "Een <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> met aangepaste kenmerken voor de traceringslistener."
  overload: System.Diagnostics.TraceListener.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Close
  id: Close
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: TraceListener.Close()
  fullName: System.Diagnostics.TraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Wanneer in een afgeleide klasse genegeerd, sluit de uitvoerstroom zodat het niet langer tracering of foutopsporing uitvoer ontvangt."
  remarks: "Gebruik deze methode wanneer u de uitvoer gaat naar een bestand, zoals de <xref:System.Diagnostics.TextWriterTraceListener>.</xref:System.Diagnostics.TextWriterTraceListener> U moet het object opnieuw initialiseren na een aanroep aan deze methode."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.TraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Dispose
  id: Dispose
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Dispose()
  nameWithType: TraceListener.Dispose()
  fullName: System.Diagnostics.TraceListener.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Versies van alle resources die worden gebruikt door de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>."
  remarks: "Aanroepen van Dispose kan de bronnen die worden gebruikt door de <xref:System.Diagnostics.TraceListener>naar opnieuw worden toegewezen voor andere doeleinden.</xref:System.Diagnostics.TraceListener> Zie voor meer informatie over Dispose [onbeheerde hulpbronnen reinigen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.TraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Heft de niet-beheerde bronnen worden gebruikt door de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> en eventueel de beheerde bronnen vrij."
  remarks: "Deze methode wordt aangeroepen door het publiek <xref:System.Diagnostics.TraceListener.Dispose%2A>methode en de <xref:System.Object.Finalize%2A>methode.</xref:System.Object.Finalize%2A> </xref:System.Diagnostics.TraceListener.Dispose%2A> `Dispose`Hiermee wordt de beveiligde <xref:System.Diagnostics.TraceListener.Dispose%2A>methode met de `disposing` parameter ingesteld op `true`.</xref:System.Diagnostics.TraceListener.Dispose%2A> <xref:System.Object.Finalize%2A>roept `Dispose` met `disposing` ingesteld op `false`.</xref:System.Object.Finalize%2A>       Wanneer de `disposing` parameter `true`, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit <xref:System.Diagnostics.TraceListener>verwijzingen.</xref:System.Diagnostics.TraceListener> Deze methode roept de `Dispose` methode van elk object waarnaar wordt verwezen."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om alleen niet-beheerde bronnen vrij te geven."
  overload: System.Diagnostics.TraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Fail(System.String)
  id: Fail(System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Fail(String)
  nameWithType: TraceListener.Fail(String)
  fullName: System.Diagnostics.TraceListener.Fail(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Verzendt een foutbericht weergegeven aan de listener die u maakt wanneer u implementeert de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse."
  remarks: "Standaard wordt aan het opgegeven bericht in het bericht wordt weergegeven wanneer de toepassing wordt uitgevoerd in een modus voor de gebruikersinterface, en met de <xref:System.Diagnostics.TraceListener>exemplaren een <xref:System.Diagnostics.TraceListenerCollection>verzameling.</xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListener> Standaard de <xref:System.Diagnostics.TraceListenerCollection>verzameling heeft een exemplaar van een <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener> </xref:System.Diagnostics.TraceListenerCollection> U kunt dit gedrag aanpassen door het toevoegen van een <xref:System.Diagnostics.TraceListener>aan of verwijderen van een van de verzameling.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public virtual void Fail (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te verzenden."
  overload: System.Diagnostics.TraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: TraceListener.Fail(String,String)
  fullName: System.Diagnostics.TraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Verzendt een fout bericht en een gedetailleerd foutbericht aan de listener u maakt wanneer u implementeert de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse."
  remarks: "Het standaardgedrag wordt het bericht en gedetailleerd bericht in een berichtvenster worden weergegeven wanneer de toepassing wordt uitgevoerd in een modus voor de gebruikersinterface en zo de <xref:System.Diagnostics.TraceListener>exemplaren een <xref:System.Diagnostics.TraceListenerCollection>verzameling.</xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListener> Standaard de <xref:System.Diagnostics.TraceListenerCollection>verzameling heeft een exemplaar van een <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener> </xref:System.Diagnostics.TraceListenerCollection> U kunt dit gedrag aanpassen door het toevoegen van een <xref:System.Diagnostics.TraceListener>aan of verwijderen van een van de verzameling.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public virtual void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te verzenden."
    - id: detailMessage
      type: System.String
      description: "Een gedetailleerd bericht te verzenden."
  overload: System.Diagnostics.TraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Filter
  id: Filter
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Filter
  nameWithType: TraceListener.Filter
  fullName: System.Diagnostics.TraceListener.Filter
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald en ingesteld van het filter tracering voor de traceringslistener."
  remarks: "Een filter tracering kan worden toegevoegd aan een traceringslistener een screenen buiten die aan de traceringsbron is verstrekt door switches aanpassingslaag bieden. Bijvoorbeeld, de <xref:System.Diagnostics.EventTypeFilter>kunnen worden toegevoegd aan een traceringslistener bepalen welke typen gebeurtenissen die uitgevoerd worden door de listener.</xref:System.Diagnostics.EventTypeFilter>  -Listeners die worden genoemd, omdat de switch-criteria wordt voldaan kunnen query uitvoeren op hun filter, indien aanwezig, om te bepalen of een tracering moet worden verzonden om uit te voeren."
  example:
  - "The following code example shows how to use the Filter property to add a source filter to a console trace listener. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#28](~/add/codesnippet/csharp/p-system.diagnostics.tra_6_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#28](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_6_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceFilter Filter { get; set; }
    return:
      type: System.Diagnostics.TraceFilter
      description: "Een object dat is afgeleid van de <xref href=&quot;System.Diagnostics.TraceFilter&quot;> </xref> basisklasse."
  overload: System.Diagnostics.TraceListener.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Flush
  id: Flush
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: TraceListener.Flush()
  fullName: System.Diagnostics.TraceListener.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Wanneer in een afgeleide klasse genegeerd, Leegmaakacties van de uitvoerbuffer."
  syntax:
    content: public virtual void Flush ();
    parameters: []
  overload: System.Diagnostics.TraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: TraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt u de aangepaste kenmerken die worden ondersteund door de traceringslistener."
  remarks: "Retourneert de standaardimplementatie voor GetSupportedAttributes `null`."
  example:
  - "The following code sample shows an override of the GetSupportedAttributes method for a custom trace listener.  \n  \n [!code-cs[System.Diagnostics.TraceListener.CustomAttributes#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_22_1.cs)]\n [!code-vb[System.Diagnostics.TraceListener.CustomAttributes#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_22_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "Een tekenreeksmatrix naamgeving van de aangepaste kenmerken die worden ondersteund door de traceringslistener of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen aangepaste kenmerken."
  overload: System.Diagnostics.TraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.IndentLevel
  id: IndentLevel
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: IndentLevel
  nameWithType: TraceListener.IndentLevel
  fullName: System.Diagnostics.TraceListener.IndentLevel
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van het inspringingsniveau."
  remarks: "De eigenschap IndentLevel geeft het aantal keren dat het streepje die is opgegeven door de <xref:System.Diagnostics.TraceListener.IndentSize%2A>eigenschap wordt toegepast.</xref:System.Diagnostics.TraceListener.IndentSize%2A> Deze eigenschap wordt opgeslagen op basis van per-thread/per aanvraag."
  syntax:
    content: public int IndentLevel { get; set; }
    return:
      type: System.Int32
      description: "Het inspringingsniveau. De standaardwaarde is nul."
  overload: System.Diagnostics.TraceListener.IndentLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.IndentSize
  id: IndentSize
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: IndentSize
  nameWithType: TraceListener.IndentSize
  fullName: System.Diagnostics.TraceListener.IndentSize
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van het aantal spaties in een streepje."
  remarks: "De eigenschap wordt opgeslagen op basis van per-thread/per aanvraag."
  syntax:
    content: public int IndentSize { get; set; }
    return:
      type: System.Int32
      description: "Het aantal spaties in een streepje. De standaardwaarde is vier spaties."
  overload: System.Diagnostics.TraceListener.IndentSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Set-bewerking is mislukt omdat de waarde kleiner is dan nul."
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.IsThreadSafe
  id: IsThreadSafe
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: IsThreadSafe
  nameWithType: TraceListener.IsThreadSafe
  fullName: System.Diagnostics.TraceListener.IsThreadSafe
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hiermee haalt een waarde die aangeeft of de traceringslistener thread veilig."
  remarks: "De waarde van IsThreadSafe wordt gebruikt om te bepalen of een globale vergrendeling gebruiken bij het schrijven naar de listener. Als de waarde van IsThreadSafe `false`, de globale vergrendeling wordt gebruikt, ongeacht de waarde van <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</xref:System.Diagnostics.Trace.UseGlobalLock%2A> De globale vergrendeling is niet alleen gebruikt als de waarde van IsThreadSafe `true` en de waarde van <xref:System.Diagnostics.Trace.UseGlobalLock%2A>is `false`.</xref:System.Diagnostics.Trace.UseGlobalLock%2A> Het standaardgedrag is met de globale vergrendelen als schrijven naar de listener."
  syntax:
    content: public virtual bool IsThreadSafe { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de traceringslistener thread-veilig; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.TraceListener.IsThreadSafe*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Name
  id: Name
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Name
  nameWithType: TraceListener.Name
  fullName: System.Diagnostics.TraceListener.Name
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Een naam voor dit opgehaald of ingesteld <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>."
  remarks: "De naam kan worden gebruikt om te ordenen en toegang tot luisteraars in een <xref:System.Diagnostics.TraceListenerCollection>verzameling.</xref:System.Diagnostics.TraceListenerCollection>"
  syntax:
    content: public virtual string Name { get; set; }
    return:
      type: System.String
      description: "Een naam op voor dit <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>. De standaardwaarde is een lege tekenreeks (&quot;&quot;)."
  overload: System.Diagnostics.TraceListener.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.NeedIndent
  id: NeedIndent
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: NeedIndent
  nameWithType: TraceListener.NeedIndent
  fullName: System.Diagnostics.TraceListener.NeedIndent
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld waarmee wordt aangegeven of de inspringing van de uitvoer."
  remarks: '**Opmerking** de <xref:System.Diagnostics.TraceListener.WriteIndent%2A>methode aangeroepen door de <xref:System.Diagnostics.DefaultTraceListener>en <xref:System.Diagnostics.TextWriterTraceListener>klassen, wordt de waarde van de eigenschap NeedIndent op `false` om te voorkomen dat later onnodige inspringingen.</xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.DefaultTraceListener> </xref:System.Diagnostics.TraceListener.WriteIndent%2A> U moet de eigenschap NeedIndent instellen op `true` elke keer dat u wilt laten inspringen trace-uitvoer.'
  syntax:
    content: protected bool NeedIndent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de uitvoer ingesprongen moet; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.TraceListener.NeedIndent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Tracering schrijft informatie, een object en gebeurtenis informatie over gegevens naar de specifieke listener-uitvoer."
  remarks: "> [!IMPORTANT]> Deze methode is niet bedoeld om te worden aangeroepen rechtstreeks door de toepassingscode, maar door leden van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen schrijven traceergegevens om uit te voeren.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De implementatie standaard schrijft de `eventCache`, `source`, `eventType` en `id` parameters in de koptekst en voettekst van de tracering. De `data` parameter wordt geschreven als de hoofdtekst van het bericht traceren. De `ToString` methode van het gegevensobject wordt gebruikt voor het object converteren naar een <xref:System.String>.</xref:System.String>"
  syntax:
    content: public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer is doorgaans de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Een van de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> waarden opgeven van het type gebeurtenis terechtgekomen, waardoor de tracering."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
    - id: data
      type: System.Object
      description: "De traceringsgegevens te verzenden."
  overload: System.Diagnostics.TraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijfbewerkingen trace-informatie, een matrix van gegevensobjecten en gebeurtenisgegevens naar de specifieke listener-uitvoer."
  remarks: "> [!IMPORTANT]> Deze methode is niet bedoeld om te worden aangeroepen rechtstreeks door de toepassingscode, maar door leden van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen schrijven traceergegevens om uit te voeren.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De standaardimplementatie schrijft de waarden van de `source`, `eventType` en `id` parameters als een koptekst. De gegevensobjecten worden geconverteerd naar tekenreeksen met de `ToString` methode van elk object. De `eventCache` gegevens worden geschreven als een voettekst de aard van de uitvoergegevens die afhankelijk zijn van de waarde van de <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>eigenschap.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>"
  syntax:
    content: public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer is doorgaans de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Een van de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> waarden opgeven van het type gebeurtenis terechtgekomen, waardoor de tracering."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
    - id: data
      type: System.Object[]
      description: "Een matrix met objecten die u wilt verzenden als gegevens."
  overload: System.Diagnostics.TraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijfbewerkingen trace en gebeurtenis-informatie aan de specifieke listener-uitvoer."
  remarks: "> [!IMPORTANT]> Deze methode is niet bedoeld om te worden aangeroepen rechtstreeks door de toepassingscode, maar door leden van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen schrijven traceergegevens om uit te voeren.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De standaardimplementatie schrijft de waarden van de `source`, `eventType` en `id` parameters als een koptekst. De `eventCache` gegevens worden geschreven als een voettekst de aard van de uitvoergegevens die afhankelijk zijn van de waarde van de <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>eigenschap.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>"
  syntax:
    content: public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer is doorgaans de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Een van de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> waarden opgeven van het type gebeurtenis terechtgekomen, waardoor de tracering."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
  overload: System.Diagnostics.TraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijfbewerkingen trace-informatie, een bericht en gebeurtenisgegevens naar de specifieke listener-uitvoer."
  remarks: "> [!IMPORTANT]> Deze methode is niet bedoeld om te worden aangeroepen rechtstreeks door de toepassingscode, maar door leden van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen schrijven traceergegevens om uit te voeren.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De standaardimplementatie schrijft de waarden van de `source`, `eventType` en `id` parameters als een kop, gevolgd door de `message` gegevens. De `eventCache` gegevens worden geschreven als een voettekst de aard van de uitvoergegevens die afhankelijk zijn van de waarde van de <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>eigenschap.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>"
  syntax:
    content: public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer is doorgaans de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Een van de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> waarden opgeven van het type gebeurtenis terechtgekomen, waardoor de tracering."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: System.Diagnostics.TraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijfbewerkingen trace-informatie, een opgemaakte matrix met objecten en informatie over gebeurtenissen naar de specifieke listener-uitvoer."
  remarks: "> [!IMPORTANT]> Deze methode is niet bedoeld om te worden aangeroepen rechtstreeks door de toepassingscode, maar door leden van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen schrijven traceergegevens om uit te voeren.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De standaardimplementatie schrijft de waarden van de `source`, `eventType` en `id` parameters als een koptekst. De `args` objectmatrix wordt geconverteerd naar een tekenreeks met de <xref:System.String.Format%2A>methode, waardoor de `format` tekenreeks en `args` -matrix naar de tekenreeks voor opmaak als het bericht gedeelte van de tracering.</xref:System.String.Format%2A> De `eventCache` gegevens worden geschreven als een voettekst de aard van de uitvoergegevens die afhankelijk zijn van de waarde van de <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>eigenschap.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>"
  syntax:
    content: public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer is doorgaans de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Een van de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> waarden opgeven van het type gebeurtenis terechtgekomen, waardoor de tracering."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
    - id: format
      type: System.String
      description: "Een tekenreeks met nul of meer indeling items, die overeenkomen met de objecten in de `args` matrix."
    - id: args
      type: System.Object[]
      description: "Een <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> matrix met nul of meer objecten om te formatteren."
  overload: System.Diagnostics.TraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceOutputOptions
  id: TraceOutputOptions
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceOutputOptions
  nameWithType: TraceListener.TraceOutputOptions
  fullName: System.Diagnostics.TraceListener.TraceOutputOptions
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Opgehaald of ingesteld van de tracering Uitvoeropties."
  remarks: "De eigenschap TraceOutputOptions bepaalt de optionele inhoud van de trace-uitvoer. De eigenschap kan worden ingesteld in het configuratiebestand of via een programma tijdens het uitvoeren van extra gegevens specifiek voor een sectie met code moeten worden opgenomen. U kunt bijvoorbeeld de eigenschap TraceOutputOptions instellen voor de console traceringslistener naar <xref:System.Diagnostics.TraceOptions?displayProperty=fullName>call stack informatie toevoegen aan de trace-uitvoer.</xref:System.Diagnostics.TraceOptions?displayProperty=fullName>       De <xref:System.Diagnostics.TraceOptions>opsomming wordt niet gebruikt door de volgende klassen en methoden:-de <xref:System.Diagnostics.EventLogTraceListener>klasse, omdat dit kan ertoe leiden dat een grote hoeveelheid gegevens worden geschreven in het logboek.</xref:System.Diagnostics.EventLogTraceListener> </xref:System.Diagnostics.TraceOptions>      -De `Write` en `WriteLine` methoden van de <xref:System.Diagnostics.ConsoleTraceListener>, <xref:System.Diagnostics.DefaultTraceListener>, en <xref:System.Diagnostics.TextWriterTraceListener>klassen.</xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.DefaultTraceListener> </xref:System.Diagnostics.ConsoleTraceListener>      -De <xref:System.Diagnostics.TraceListener.Write%2A>en <xref:System.Diagnostics.TraceListener.WriteLine%2A>methoden van de <xref:System.Diagnostics.TraceListener>klasse wanneer ze niet worden overschreven in een afgeleide klasse.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListener.WriteLine%2A> </xref:System.Diagnostics.TraceListener.Write%2A>"
  example:
  - "The following example shows the setting of the TraceOutputOptions property for a console trace listener. The console trace listener is one of the listeners enumerated in the <xref:System.Diagnostics.TraceSource.Listeners%2A> property of a trace source. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#16](~/add/codesnippet/csharp/p-system.diagnostics.tra_9_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#16](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_9_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceOptions TraceOutputOptions { get; set; }
    return:
      type: System.Diagnostics.TraceOptions
      description: "Een bitsgewijze combinatie van de opsommingswaarden. De standaardwaarde is <xref href=&quot;System.Diagnostics.TraceOptions&quot;> </xref>."
  overload: System.Diagnostics.TraceListener.TraceOutputOptions*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Set-bewerking is mislukt omdat de waarde ongeldig is."
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: TraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.TraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Traceringsinformatie schrijfbewerkingen, een bericht, een gerelateerde activiteit identiteits- en gebeurtenis informatie aan de specifieke listener-uitvoer."
  remarks: "> [!IMPORTANT]> Deze methode is niet bedoeld om te worden aangeroepen rechtstreeks door de toepassingscode, maar door leden van de <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, en <xref:System.Diagnostics.TraceSource>klassen schrijven traceergegevens om uit te voeren.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       De <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>methode wordt gebruikt voor de correlatie van gerelateerde traceringen.</xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> De methodeaanroepen TraceTransfer de <xref:System.Diagnostics.TraceListener.TraceEvent%2A>methode voor het verwerken van de aanroep met het niveau eventType is ingesteld op <xref:System.Diagnostics.TraceEventType>en de `relatedActivityId` <xref:System.Guid>als een tekenreeks toegevoegd aan het bericht.</xref:System.Guid> </xref:System.Diagnostics.TraceEventType> </xref:System.Diagnostics.TraceListener.TraceEvent%2A>"
  syntax:
    content: public virtual void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Een <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> object met het huidige proces-ID, thread-ID en stack trace-informatie."
    - id: source
      type: System.String
      description: "Een naam die wordt gebruikt voor het identificeren van de uitvoer is doorgaans de naam van de toepassing die de traceergebeurtenis gegenereerd."
    - id: id
      type: System.Int32
      description: "Een numerieke id voor de gebeurtenis."
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
    - id: relatedActivityId
      type: System.Guid
      description: "Een <xref:System.Guid>object een gerelateerde activiteit te identificeren.</xref:System.Guid>"
  overload: System.Diagnostics.TraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Write(System.Object)
  id: Write(System.Object)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Write(Object)
  nameWithType: TraceListener.Write(Object)
  fullName: System.Diagnostics.TraceListener.Write(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De waarde van het object schrijft <xref:System.Object.ToString*>methode voor de listener u maakt wanneer u implementeert de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse</xref:System.Object.ToString*>"
  syntax:
    content: public virtual void Write (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Een <xref:System.Object>waarvan u wilt schrijven de volledig gekwalificeerde klassennaam.</xref:System.Object>"
  overload: System.Diagnostics.TraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: TraceListener.Write(String)
  fullName: System.Diagnostics.TraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Wanneer in een afgeleide klasse genegeerd, schrijft u het opgegeven bericht aan de listener die u in de afgeleide klasse maken."
  syntax:
    content: public abstract void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: System.Diagnostics.TraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)
  id: Write(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Write(Object,String)
  nameWithType: TraceListener.Write(Object,String)
  fullName: System.Diagnostics.TraceListener.Write(Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft een categorienaam en de waarde van het object <xref:System.Object.ToString*>methode voor de listener u maakt wanneer u implementeert de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse</xref:System.Object.ToString*>"
  syntax:
    content: public virtual void Write (object o, string category);
    parameters:
    - id: o
      type: System.Object
      description: "Een <xref:System.Object>waarvan u wilt schrijven de volledig gekwalificeerde klassennaam.</xref:System.Object>"
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.TraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Write(String,String)
  nameWithType: TraceListener.Write(String,String)
  fullName: System.Diagnostics.TraceListener.Write(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft een categorienaam en een bericht naar de listener u maakt wanneer u implementeert de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse."
  syntax:
    content: public virtual void Write (string message, string category);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.TraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteIndent
  id: WriteIndent
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteIndent()
  nameWithType: TraceListener.WriteIndent()
  fullName: System.Diagnostics.TraceListener.WriteIndent()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft het streepje de listener u maakt wanneer u deze klasse implementeert, en stelt de <xref:System.Diagnostics.TraceListener.NeedIndent*>eigenschap <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceListener.NeedIndent*>"
  remarks: "Deze methode schrijft het streepje en stelt de <xref:System.Diagnostics.TraceListener.NeedIndent%2A>eigenschap `false`.</xref:System.Diagnostics.TraceListener.NeedIndent%2A> Deze methode niet aanroepen als <xref:System.Diagnostics.TraceListener.NeedIndent%2A>is `true` wanneer u zijn overschrijven de <xref:System.Diagnostics.TraceListener.Write%2A>en <xref:System.Diagnostics.TraceListener.WriteLine%2A>methoden.</xref:System.Diagnostics.TraceListener.WriteLine%2A> </xref:System.Diagnostics.TraceListener.Write%2A> </xref:System.Diagnostics.TraceListener.NeedIndent%2A> Deze methode gebruikt standaard, spaties voor inspringing. De grootte van het streepje wordt bepaald door de waarden van de <xref:System.Diagnostics.TraceListener.IndentSize%2A>en <xref:System.Diagnostics.TraceListener.IndentLevel%2A>Eigenschappen.</xref:System.Diagnostics.TraceListener.IndentLevel%2A> </xref:System.Diagnostics.TraceListener.IndentSize%2A> De <xref:System.Diagnostics.TraceListener.IndentLevel%2A>eigenschap geeft het aantal keren dat de inspringing van de grootte die is opgegeven door de <xref:System.Diagnostics.TraceListener.IndentSize%2A>eigenschap wordt toegepast.</xref:System.Diagnostics.TraceListener.IndentSize%2A> </xref:System.Diagnostics.TraceListener.IndentLevel%2A> Deze methode wordt aangeroepen door de <xref:System.Diagnostics.DefaultTraceListener>en <xref:System.Diagnostics.TextWriterTraceListener>klassen.</xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.DefaultTraceListener>"
  syntax:
    content: protected virtual void WriteIndent ();
    parameters: []
  overload: System.Diagnostics.TraceListener.WriteIndent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: TraceListener.WriteLine(Object)
  fullName: System.Diagnostics.TraceListener.WriteLine(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "De waarde van het object schrijft <xref:System.Object.ToString*>methode voor de listener u maakt wanneer u implementeert de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse, gevolgd door een regel terminator.</xref:System.Object.ToString*>"
  remarks: "De typische regel terminator implementatie is een regelterugloop, gevolgd door een regelinvoer (\\r)."
  syntax:
    content: public virtual void WriteLine (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Een <xref:System.Object>waarvan u wilt schrijven de volledig gekwalificeerde klassennaam.</xref:System.Object>"
  overload: System.Diagnostics.TraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: TraceListener.WriteLine(String)
  fullName: System.Diagnostics.TraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Wanneer in een afgeleide klasse genegeerd, schrijft u een bericht voor de listener maakt u in de afgeleide klasse, gevolgd door een regel terminator."
  remarks: "De typische regel terminator implementatie is een regelterugloop, gevolgd door een regelinvoer (\\r)."
  syntax:
    content: public abstract void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
  overload: System.Diagnostics.TraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  id: WriteLine(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteLine(Object,String)
  nameWithType: TraceListener.WriteLine(Object,String)
  fullName: System.Diagnostics.TraceListener.WriteLine(Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft een categorienaam en de waarde van het object <xref:System.Object.ToString*>methode voor de listener u maakt wanneer u implementeert de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse, gevolgd door een regel terminator.</xref:System.Object.ToString*>"
  remarks: "De typische regel terminator implementatie is een regelterugloop, gevolgd door een regelinvoer (\\r)."
  syntax:
    content: public virtual void WriteLine (object o, string category);
    parameters:
    - id: o
      type: System.Object
      description: "Een <xref:System.Object>waarvan u wilt schrijven de volledig gekwalificeerde klassennaam.</xref:System.Object>"
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.TraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  id: WriteLine(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteLine(String,String)
  nameWithType: TraceListener.WriteLine(String,String)
  fullName: System.Diagnostics.TraceListener.WriteLine(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Schrijft een categorienaam en een bericht naar de listener u maakt wanneer u implementeert de <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> klasse, gevolgd door een regel terminator."
  remarks: "De typische regel terminator implementatie is een regelterugloop, gevolgd door een regelinvoer (\\r)."
  syntax:
    content: public virtual void WriteLine (string message, string category);
    parameters:
    - id: message
      type: System.String
      description: "Een bericht te schrijven."
    - id: category
      type: System.String
      description: "Een categorienaam gebruikt voor het organiseren van de uitvoer."
  overload: System.Diagnostics.TraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Diagnostics.TraceListener.#ctor
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceListener()
  nameWithType: TraceListener.TraceListener()
  fullName: System.Diagnostics.TraceListener.TraceListener()
- uid: System.Diagnostics.TraceListener.#ctor(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceListener(String)
  nameWithType: TraceListener.TraceListener(String)
  fullName: System.Diagnostics.TraceListener.TraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceListener.Attributes
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Attributes
  nameWithType: TraceListener.Attributes
  fullName: System.Diagnostics.TraceListener.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.TraceListener.Close
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Close()
  nameWithType: TraceListener.Close()
  fullName: System.Diagnostics.TraceListener.Close()
- uid: System.Diagnostics.TraceListener.Dispose
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Dispose()
  nameWithType: TraceListener.Dispose()
  fullName: System.Diagnostics.TraceListener.Dispose()
- uid: System.Diagnostics.TraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TraceListener.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceListener.Fail(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail(String)
  nameWithType: TraceListener.Fail(String)
  fullName: System.Diagnostics.TraceListener.Fail(String)
- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: TraceListener.Fail(String,String)
  fullName: System.Diagnostics.TraceListener.Fail(String,String)
- uid: System.Diagnostics.TraceListener.Filter
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Filter
  nameWithType: TraceListener.Filter
  fullName: System.Diagnostics.TraceListener.Filter
- uid: System.Diagnostics.TraceFilter
  parent: System.Diagnostics
  isExternal: false
  name: TraceFilter
  nameWithType: TraceFilter
  fullName: System.Diagnostics.TraceFilter
- uid: System.Diagnostics.TraceListener.Flush
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Flush()
  nameWithType: TraceListener.Flush()
  fullName: System.Diagnostics.TraceListener.Flush()
- uid: System.Diagnostics.TraceListener.GetSupportedAttributes
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: TraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceListener.IndentLevel
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentLevel
  nameWithType: TraceListener.IndentLevel
  fullName: System.Diagnostics.TraceListener.IndentLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceListener.IndentSize
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentSize
  nameWithType: TraceListener.IndentSize
  fullName: System.Diagnostics.TraceListener.IndentSize
- uid: System.Diagnostics.TraceListener.IsThreadSafe
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: TraceListener.IsThreadSafe
  fullName: System.Diagnostics.TraceListener.IsThreadSafe
- uid: System.Diagnostics.TraceListener.Name
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Name
  nameWithType: TraceListener.Name
  fullName: System.Diagnostics.TraceListener.Name
- uid: System.Diagnostics.TraceListener.NeedIndent
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: NeedIndent
  nameWithType: TraceListener.NeedIndent
  fullName: System.Diagnostics.TraceListener.NeedIndent
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.TraceListener.TraceOutputOptions
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceOutputOptions
  nameWithType: TraceListener.TraceOutputOptions
  fullName: System.Diagnostics.TraceListener.TraceOutputOptions
- uid: System.Diagnostics.TraceOptions
  parent: System.Diagnostics
  isExternal: false
  name: TraceOptions
  nameWithType: TraceOptions
  fullName: System.Diagnostics.TraceOptions
- uid: System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: TraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.TraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.TraceListener.Write(System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(Object)
  nameWithType: TraceListener.Write(Object)
  fullName: System.Diagnostics.TraceListener.Write(Object)
- uid: System.Diagnostics.TraceListener.Write(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(String)
  nameWithType: TraceListener.Write(String)
  fullName: System.Diagnostics.TraceListener.Write(String)
- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(Object,String)
  nameWithType: TraceListener.Write(Object,String)
  fullName: System.Diagnostics.TraceListener.Write(Object,String)
- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(String,String)
  nameWithType: TraceListener.Write(String,String)
  fullName: System.Diagnostics.TraceListener.Write(String,String)
- uid: System.Diagnostics.TraceListener.WriteIndent
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteIndent()
  nameWithType: TraceListener.WriteIndent()
  fullName: System.Diagnostics.TraceListener.WriteIndent()
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(Object)
  nameWithType: TraceListener.WriteLine(Object)
  fullName: System.Diagnostics.TraceListener.WriteLine(Object)
- uid: System.Diagnostics.TraceListener.WriteLine(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: TraceListener.WriteLine(String)
  fullName: System.Diagnostics.TraceListener.WriteLine(String)
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(Object,String)
  nameWithType: TraceListener.WriteLine(Object,String)
  fullName: System.Diagnostics.TraceListener.WriteLine(Object,String)
- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(String,String)
  nameWithType: TraceListener.WriteLine(String,String)
  fullName: System.Diagnostics.TraceListener.WriteLine(String,String)
- uid: System.Diagnostics.TraceListener.#ctor*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener.TraceListener
- uid: System.Diagnostics.TraceListener.Attributes*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Attributes
  nameWithType: TraceListener.Attributes
- uid: System.Diagnostics.TraceListener.Close*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Close
  nameWithType: TraceListener.Close
- uid: System.Diagnostics.TraceListener.Dispose*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Dispose
  nameWithType: TraceListener.Dispose
- uid: System.Diagnostics.TraceListener.Fail*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail
  nameWithType: TraceListener.Fail
- uid: System.Diagnostics.TraceListener.Filter*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Filter
  nameWithType: TraceListener.Filter
- uid: System.Diagnostics.TraceListener.Flush*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Flush
  nameWithType: TraceListener.Flush
- uid: System.Diagnostics.TraceListener.GetSupportedAttributes*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: TraceListener.GetSupportedAttributes
- uid: System.Diagnostics.TraceListener.IndentLevel*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentLevel
  nameWithType: TraceListener.IndentLevel
- uid: System.Diagnostics.TraceListener.IndentSize*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentSize
  nameWithType: TraceListener.IndentSize
- uid: System.Diagnostics.TraceListener.IsThreadSafe*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: TraceListener.IsThreadSafe
- uid: System.Diagnostics.TraceListener.Name*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Name
  nameWithType: TraceListener.Name
- uid: System.Diagnostics.TraceListener.NeedIndent*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: NeedIndent
  nameWithType: TraceListener.NeedIndent
- uid: System.Diagnostics.TraceListener.TraceData*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceData
  nameWithType: TraceListener.TraceData
- uid: System.Diagnostics.TraceListener.TraceEvent*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: TraceListener.TraceEvent
- uid: System.Diagnostics.TraceListener.TraceOutputOptions*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceOutputOptions
  nameWithType: TraceListener.TraceOutputOptions
- uid: System.Diagnostics.TraceListener.TraceTransfer*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: TraceListener.TraceTransfer
- uid: System.Diagnostics.TraceListener.Write*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write
  nameWithType: TraceListener.Write
- uid: System.Diagnostics.TraceListener.WriteIndent*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteIndent
  nameWithType: TraceListener.WriteIndent
- uid: System.Diagnostics.TraceListener.WriteLine*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine
  nameWithType: TraceListener.WriteLine
