### YamlMime:ManagedReference
items:
- uid: System.Collections.Hashtable
  id: Hashtable
  children:
  - System.Collections.Hashtable.#ctor
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  - System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  - System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  - System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.Add(System.Object,System.Object)
  - System.Collections.Hashtable.Clear
  - System.Collections.Hashtable.Clone
  - System.Collections.Hashtable.comparer
  - System.Collections.Hashtable.Contains(System.Object)
  - System.Collections.Hashtable.ContainsKey(System.Object)
  - System.Collections.Hashtable.ContainsValue(System.Object)
  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  - System.Collections.Hashtable.Count
  - System.Collections.Hashtable.EqualityComparer
  - System.Collections.Hashtable.GetEnumerator
  - System.Collections.Hashtable.GetHash(System.Object)
  - System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Hashtable.hcp
  - System.Collections.Hashtable.IsFixedSize
  - System.Collections.Hashtable.IsReadOnly
  - System.Collections.Hashtable.IsSynchronized
  - System.Collections.Hashtable.Item(System.Object)
  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  - System.Collections.Hashtable.Keys
  - System.Collections.Hashtable.OnDeserialization(System.Object)
  - System.Collections.Hashtable.Remove(System.Object)
  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  - System.Collections.Hashtable.SyncRoot
  - System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Hashtable.Values
  langs:
  - csharp
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
  type: Class
  summary: "Vertegenwoordigt een verzameling van sleutel/waarde-paren die zijn geordend op basis van de hash-code van de sleutel.       Om te bladeren naar de broncode van .NET Framework voor dit type, Zie de [Verwijzingsbron](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)."
  remarks: "> [!NOTE]> Zie om weer te geven de broncode van .NET Framework voor dit type, de [Verwijzingsbron](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd). Blader door de broncode online, downloaden de verwijzing voor offline te bekijken en doorloop de bronnen (met inbegrip van patches en updates) tijdens de foutopsporing; Zie [instructies](http://referencesource.microsoft.com/).       Elk element is een sleutel-waardepaar opgeslagen in een <xref:System.Collections.DictionaryEntry>object.</xref:System.Collections.DictionaryEntry> Een sleutel kan niet worden `null`, maar een waarde kan zijn.       De objecten die wordt gebruikt als een hashtabel sleutels zijn vereist voor het onderdrukken van de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>methode (of de <xref:System.Collections.IHashCodeProvider>interface) en de <xref:System.Object.Equals%2A?displayProperty=fullName>methode (of de <xref:System.Collections.IComparer>interface).</xref:System.Collections.IComparer> </xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Collections.IHashCodeProvider> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> De uitvoering van de methoden en -interfaces moet hoofdlettergevoeligheid verwerken dezelfde manier; anders de hashtabel mogelijk niet goed werken. Bijvoorbeeld, wanneer u een hashtabel maakt, moet u de <xref:System.Collections.CaseInsensitiveHashCodeProvider>klasse (of een niet-hoofdlettergevoelige <xref:System.Collections.IHashCodeProvider>implementatie) met de <xref:System.Collections.CaseInsensitiveComparer>klasse (of een niet-hoofdlettergevoelige <xref:System.Collections.IComparer>implementatie).</xref:System.Collections.IComparer> </xref:System.Collections.CaseInsensitiveComparer> </xref:System.Collections.IHashCodeProvider> </xref:System.Collections.CaseInsensitiveHashCodeProvider>       Bovendien moeten dezelfde resultaten als deze wordt aangeroepen met dezelfde parameters, terwijl de sleutel in de hashtabel bestaat produceren van deze methoden. Een alternatief is het gebruik van hash-tabel constructor met een <xref:System.Collections.IEqualityComparer>parameter.</xref:System.Collections.IEqualityComparer> Als de sleutel gelijkheid gewoon verwijzingsgelijkheid, de implementatie van de overgenomen van zijn <xref:System.Object.GetHashCode%2A?displayProperty=fullName>en <xref:System.Object.Equals%2A?displayProperty=fullName>zou volstaan.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Sleutel objecten moeten zijn niet-wijzigbaar zolang ze worden gebruikt als sleutels in de hashtabel.       Wanneer een element naar de Hashtable wordt toegevoegd, wordt het element in een bucket op basis van de hash-code van de sleutel geplaatst. De hash-code van de sleutel opeenvolgende lookups van de sleutel gebruiken om te zoeken in slechts één bepaalde bucket, dus aanzienlijke vermindering van het aantal sleutels vergelijkingen vereist voor het vinden van een element.       De laadfactor van een hashtabel bepaalt de maximale ratio van elementen op de buckets. Kleinere load factoren veroorzaken sneller gemiddelde lookup keren koste meer geheugenverbruik. De laadfactor standaard van 1.0 biedt doorgaans de beste balans tussen snelheid en grootte. Een andere laadfactor kan ook worden opgegeven wanneer de hash-tabel is gemaakt.       Wanneer elementen worden toegevoegd aan een hashtabel, verhoogt de daadwerkelijke laadbewerking factor van de hashtabel. Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets in de hashtabel automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets voor hash-tabel.       Elk key-object in de hash moet een eigen hashfunctie, die toegankelijk zijn voor het aanroepen van <xref:System.Collections.Hashtable.GetHash%2A>.</xref:System.Collections.Hashtable.GetHash%2A> opgeven Echter een object met het implementeren van <xref:System.Collections.IHashCodeProvider>kunnen worden doorgegeven aan een constructor hashtabel en die hashfunctie wordt gebruikt voor alle objecten in de tabel.</xref:System.Collections.IHashCodeProvider>       De capaciteit van een hashtabel is het aantal elementen die Hashtable kan bevatten. Wanneer elementen worden toegevoegd aan een hashtabel, de capaciteit automatisch wordt verhoogd door Hertoewijzing zoals wordt vereist.       Voor zeer grote hashtabel objecten, verhoogt u de maximale capaciteit naar 2 miljard elementen op een 64-bits systeem door het instellen van de `enabled` kenmerk van het configuratie-element moet `true` in de runtime omgeving.       De `foreach` -instructie van de taal C# (`For Each` in Visual Basic) retourneert een object van het type van de elementen in de verzameling. Omdat elk element van het hash-tabel een sleutel-waardepaar is, is het elementtype niet op het type van de sleutel of het type van de waarde. In plaats daarvan is het elementtype <xref:System.Collections.DictionaryEntry>.</xref:System.Collections.DictionaryEntry> Bijvoorbeeld: [!code-cpp [System.Collections.Hashtable_ClassExample#01](~/add/codesnippet/cpp/t-system.collections.has_1.cpp)][!code-cs[System.Collections.Hashtable_ClassExample#01](~/add/codesnippet/csharp/t-system.collections.has_1.cs)][!code-vb[System.Collections.Hashtable_ClassExample#01](~/add/codesnippet/visualbasic/t-system.collections.has_1.vb) ] de `foreach` -instructie is een wrapper rond de enumerator waarmee alleen lezen van niet schrijven naar de verzameling.           Omdat serialiseren en deserialiseren van een enumerator voor een hashtabel kan leiden tot de elementen worden besteld, is het niet mogelijk om door te gaan zonder aanroepen de opsomming van de <xref:System.Collections.IEnumerator.Reset%2A>methode.</xref:System.Collections.IEnumerator.Reset%2A>      > [!NOTE] > Omdat sleutels kunnen worden overgenomen en hun gedrag is gewijzigd, hun absolute uniekheid niet kan worden gegarandeerd door vergelijkingen met de <xref:System.Type.Equals%2A>methode.</xref:System.Type.Equals%2A>"
  example:
  - "The following example shows how to create, initialize and perform various functions to a Hashtable and how to print out its keys and values.  \n  \n [!code-cpp[System.Collections.Hashtable_ClassExample#00](~/add/codesnippet/cpp/t-system.collections.has_2.cpp)]\n [!code-cs[System.Collections.Hashtable_ClassExample#00](~/add/codesnippet/csharp/t-system.collections.has_2.cs)]\n [!code-vb[System.Collections.Hashtable_ClassExample#00](~/add/codesnippet/visualbasic/t-system.collections.has_2.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Hashtable/HashtableDebugView))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Hashtable : ICloneable, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.ICloneable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor
  id: '#ctor'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable()
  nameWithType: Hashtable.Hashtable()
  fullName: System.Collections.Hashtable.Hashtable()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met behulp van de eerste standaardcapaciteit, factor, hash-code-provider en vergelijkingsfunctie worden geladen."
  remarks: "Een hash-tabel capaciteit wordt gebruikt voor het berekenen van het optimale aantal hash-tabel buckets op basis van de laadfactor. Capaciteit wordt automatisch verhoogd zoals vereist is.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Deze constructor is een bewerking O(1)."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctor#1](~/add/codesnippet/cpp/m-system.collections.has_4_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctor#1](~/add/codesnippet/csharp/m-system.collections.has_4_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctor#1](~/add/codesnippet/visualbasic/m-system.collections.has_4_1.vb)]"
  syntax:
    content: public Hashtable ();
    parameters: []
  overload: System.Collections.Hashtable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  id: '#ctor(System.Collections.IDictionary)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary)
  nameWithType: Hashtable.Hashtable(IDictionary)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met het kopiëren van de elementen van de opgegeven woordenlijst aan de nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object. De nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object heeft een initiële capaciteit die gelijk is aan het aantal elementen gekopieerd en gebruikt standaard de laadfactor, hash-code-provider en vergelijkingsfunctie."
  remarks: "De begincapaciteit is ingesteld op het aantal elementen in de bronwoordenlijst. Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De elementen van de nieuwe <xref:System.Collections.Hashtable>worden gesorteerd in dezelfde volgorde als waarin de enumerator doorloopt de <xref:System.Collections.IDictionary>object.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is het aantal elementen in de `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/cpp/m-system.collections.has_1_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/csharp/m-system.collections.has_1_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/visualbasic/m-system.collections.has_1_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "De <xref:System.Collections.IDictionary>te kopiëren naar een nieuw object <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object.</xref:System.Collections.IDictionary>"
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met behulp van de eerste standaardcapaciteit en laden factor en de opgegeven <xref:System.Collections.IEqualityComparer>object.</xref:System.Collections.IEqualityComparer>"
  remarks: "Een hash-tabel capaciteit wordt gebruikt voor het berekenen van het optimale aantal hash-tabel buckets op basis van de laadfactor. Capaciteit wordt automatisch verhoogd zoals vereist is.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De <xref:System.Collections.IEqualityComparer>-object bevat zowel de hash-code-provider en de vergelijkingsfunctie.</xref:System.Collections.IEqualityComparer> Als een <xref:System.Collections.IEqualityComparer>wordt gebruikt in de <xref:System.Collections.Hashtable>constructor, de objecten die gebruikt worden als sleutels in de <xref:System.Collections.Hashtable>object niet vereist zijn voor het onderdrukken van de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>en <xref:System.Object.Equals%2A?displayProperty=fullName>methoden.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De <xref:System.Collections.IEqualityComparer>kunt u bijvoorbeeld doen zoekacties met niet-hoofdlettergevoelige tekenreeksen.</xref:System.Collections.IEqualityComparer>       Deze constructor is een bewerking O(1)."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctor#1](~/add/codesnippet/cpp/m-system.collections.has_5_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctor#1](~/add/codesnippet/csharp/m-system.collections.has_5_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctor#1](~/add/codesnippet/visualbasic/m-system.collections.has_5_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "De <xref:System.Collections.IEqualityComparer>-object dat bepaalt de hash-code-provider en de vergelijkingsfunctie voor gebruik met de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object.</xref:System.Collections.IEqualityComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om de standaardprovider voor de hash-code en de standaardvergelijkingsfunctie te gebruiken. De standaardprovider voor de hash-code is de implementatie van de sleutel van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; en de standaardvergelijkingsfunctie is de implementatie van de sleutel van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32)
  nameWithType: Hashtable.Hashtable(Int32)
  fullName: System.Collections.Hashtable.Hashtable(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met de opgegeven capaciteit van de eerste en de standaard laadfactor, hash-code-provider en vergelijkingsfunctie."
  remarks: "De begincapaciteit geven niet meer nodig om uit te voeren een aantal formaatwijzigingen tijdens het toevoegen van elementen op de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is `capacity`."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/cpp/m-system.collections.has_2_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/csharp/m-system.collections.has_2_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/visualbasic/m-system.collections.has_2_1.vb)]"
  syntax:
    content: public Hashtable (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Het geschatte aantal elementen die de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -object in eerste instantie kan bevatten."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>is kleiner dan nul."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met het kopiëren van de elementen van de opgegeven woordenlijst naar een nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object. De nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object heeft een initiële capaciteit die gelijk is aan het aantal elementen gekopieerd en maakt gebruik van de standaard de laadfactor en de opgegeven <xref:System.Collections.IEqualityComparer>object.</xref:System.Collections.IEqualityComparer>"
  remarks: "De begincapaciteit is ingesteld op het aantal elementen in de bronwoordenlijst. Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De <xref:System.Collections.IEqualityComparer>-object bevat zowel de hash-code-provider en de vergelijkingsfunctie.</xref:System.Collections.IEqualityComparer> Als een <xref:System.Collections.IEqualityComparer>wordt gebruikt in de <xref:System.Collections.Hashtable>constructor, de objecten die gebruikt worden als sleutels in de <xref:System.Collections.Hashtable>object niet vereist zijn voor het onderdrukken van de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>en <xref:System.Object.Equals%2A?displayProperty=fullName>methoden.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De <xref:System.Collections.IEqualityComparer>kunt u bijvoorbeeld doen zoekacties met niet-hoofdlettergevoelige tekenreeksen.</xref:System.Collections.IEqualityComparer>       De elementen van de nieuwe <xref:System.Collections.Hashtable>worden gesorteerd in dezelfde volgorde als waarin de enumerator doorloopt de <xref:System.Collections.IDictionary>object.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is het aantal elementen in de `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/cpp/81cd87de-02b7-42cc-8fdd-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/csharp/81cd87de-02b7-42cc-8fdd-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/visualbasic/81cd87de-02b7-42cc-8fdd-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "De <xref:System.Collections.IDictionary>te kopiëren naar een nieuw object <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object.</xref:System.Collections.IDictionary>"
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "De <xref:System.Collections.IEqualityComparer>-object dat bepaalt de hash-code-provider en de vergelijkingsfunctie voor gebruik met de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om de standaardprovider voor de hash-code en de standaardvergelijkingsfunctie te gebruiken. De standaardprovider voor de hash-code is de implementatie van de sleutel van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; en de standaardvergelijkingsfunctie is de implementatie van de sleutel van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  id: '#ctor(System.Collections.IDictionary,System.Single)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,Single)
  nameWithType: Hashtable.Hashtable(IDictionary,Single)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met het kopiëren van de elementen van de opgegeven woordenlijst aan de nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object. De nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object heeft een initiële capaciteit die gelijk is aan het aantal elementen gekopieerd en gebruikt de opgegeven laadfactor en de standaardprovider voor hash-code en de vergelijkingsfunctie."
  remarks: "De begincapaciteit is ingesteld op het aantal elementen in de bronwoordenlijst. Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik. De laadfactor van 1.0 is de beste balans tussen snelheid en grootte.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De elementen van de nieuwe <xref:System.Collections.Hashtable>worden gesorteerd in dezelfde volgorde als waarin de enumerator doorloopt de <xref:System.Collections.IDictionary>object.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is het aantal elementen in de `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cs[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/csharp/fb1cfbc8-7454-4619-a6e7-_1.cs)]\n [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/cpp/fb1cfbc8-7454-4619-a6e7-_1.cpp)]\n [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/visualbasic/fb1cfbc8-7454-4619-a6e7-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, float loadFactor);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "De <xref:System.Collections.IDictionary>te kopiëren naar een nieuw object <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object.</xref:System.Collections.IDictionary>"
    - id: loadFactor
      type: System.Single
      description: "Een getal in het bereik tussen 0,1 en 1,0 die wordt vermenigvuldigd met de standaardwaarde die de beste prestaties biedt. Het resultaat is de maximale ratio van elementen op de buckets."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>loadFactor</code>is kleiner dan 0,1.       - of - <code>loadFactor</code> is groter dan 1.0."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met behulp van de eerste standaardcapaciteit en factor, en de opgegeven hash-codeprovider vergelijkingsfunctie laden."
  remarks: "Een hash-tabel capaciteit wordt gebruikt voor het berekenen van het optimale aantal hash-tabel buckets op basis van de laadfactor. Capaciteit wordt automatisch verhoogd zoals vereist is.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De aangepaste hash-code-provider en de aangepaste vergelijkingsfunctie inschakelen scenario&quot;s zoals het zoekacties met niet-hoofdlettergevoelige tekenreeksen.       Deze constructor is een bewerking O(1)."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctor#1](~/add/codesnippet/cpp/1ff65986-0234-4702-94b7-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctor#1](~/add/codesnippet/csharp/1ff65986-0234-4702-94b7-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctor#1](~/add/codesnippet/visualbasic/1ff65986-0234-4702-94b7-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "De <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> object waaruit de hash-codes voor alle sleutels in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object.       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> gebruiken de standaard hash-code-provider die is elke sleutel-implementatie van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "De <xref:System.Collections.IComparer>object gebruiken om te bepalen of er twee sleutels gelijk zijn.</xref:System.Collections.IComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> de standaardvergelijkingsfunctie gebruiken die is elke sleutel-implementatie van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met behulp van de opgegeven begincapaciteit en <xref:System.Collections.IEqualityComparer>, en de standaard de laadfactor.</xref:System.Collections.IEqualityComparer>"
  remarks: "De begincapaciteit geven niet meer nodig om uit te voeren een aantal formaatwijzigingen tijdens het toevoegen van elementen op de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De <xref:System.Collections.IEqualityComparer>-object bevat zowel de hash-code-provider en de vergelijkingsfunctie.</xref:System.Collections.IEqualityComparer> Als een <xref:System.Collections.IEqualityComparer>wordt gebruikt in de <xref:System.Collections.Hashtable>constructor, de objecten die gebruikt worden als sleutels in de <xref:System.Collections.Hashtable>niet vereist zijn voor het onderdrukken van de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>en <xref:System.Object.Equals%2A?displayProperty=fullName>methoden.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De <xref:System.Collections.IEqualityComparer>kunt u bijvoorbeeld doen zoekacties met niet-hoofdlettergevoelige tekenreeksen.</xref:System.Collections.IEqualityComparer>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is de `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/cpp/5067e9ac-cd98-4da8-9418-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/csharp/5067e9ac-cd98-4da8-9418-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/visualbasic/5067e9ac-cd98-4da8-9418-_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Het geschatte aantal elementen die de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -object in eerste instantie kan bevatten."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "De <xref:System.Collections.IEqualityComparer>-object dat bepaalt de hash-code-provider en de vergelijkingsfunctie voor gebruik met de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om de standaardprovider voor de hash-code en de standaardvergelijkingsfunctie te gebruiken. De standaardprovider voor de hash-code is de implementatie van de sleutel van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; en de standaardvergelijkingsfunctie is de implementatie van de sleutel van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>is kleiner dan nul."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  id: '#ctor(System.Int32,System.Single)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,Single)
  nameWithType: Hashtable.Hashtable(Int32,Single)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met behulp van de opgegeven begincapaciteit en factor, en de standaardprovider voor hash-code vergelijkingsfunctie laden."
  remarks: "De begincapaciteit geven niet meer nodig om uit te voeren een aantal formaatwijzigingen tijdens het toevoegen van elementen op de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik. De laadfactor van 1.0 is de beste balans tussen snelheid en grootte.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is de `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/cpp/m-system.collections.has_8_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/csharp/m-system.collections.has_8_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/visualbasic/m-system.collections.has_8_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, float loadFactor);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Het geschatte aantal elementen die de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -object in eerste instantie kan bevatten."
    - id: loadFactor
      type: System.Single
      description: "Een getal in het bereik tussen 0,1 en 1,0 die wordt vermenigvuldigd met de standaardwaarde die de beste prestaties biedt. Het resultaat is de maximale ratio van elementen op de buckets."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>is kleiner dan nul.       - of - <code>loadFactor</code> is kleiner dan 0,1.       - of - <code>loadFactor</code> is groter dan 1.0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>capacity</code>veroorzaakt een overloop."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(SerializationInfo,StreamingContext)
  nameWithType: Hashtable.Hashtable(SerializationInfo,StreamingContext)
  fullName: System.Collections.Hashtable.Hashtable(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse die kan worden geserialiseerd met behulp van de opgegeven <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> en <xref:System.Runtime.Serialization.StreamingContext>objecten.</xref:System.Runtime.Serialization.StreamingContext>"
  remarks: "Een hash-tabel capaciteit wordt gebruikt voor het berekenen van het optimale aantal hash-tabel buckets op basis van de laadfactor. Capaciteit wordt automatisch verhoogd zoals vereist is.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>       Omdat serialiseren en deserialiseren van een enumerator voor een <xref:System.Collections.Hashtable>kan leiden tot de elementen worden besteld, het is niet mogelijk om door te gaan zonder aanroepen de opsomming van de <xref:System.Collections.IEnumerator.Reset%2A>methode.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.Hashtable>"
  syntax:
    content: protected Hashtable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Een <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> -object met de informatie die is vereist voor het serialiseren van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Een <xref:System.Runtime.Serialization.StreamingContext>object met de bron en bestemming van de geserialiseerde stroom die zijn gekoppeld aan de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met het kopiëren van de elementen van de opgegeven woordenlijst aan de nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object. De nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object heeft een initiële capaciteit die gelijk is aan het aantal elementen gekopieerd en gebruikt de laadfactor standaard en de opgegeven hash-code-provider en de vergelijkingsfunctie. Deze API is verouderd. Zie voor een alternatieve &lt;xref:System.Collections.Hashtable.%23ctor%2A&gt;."
  remarks: "De begincapaciteit is ingesteld op het aantal elementen in de bronwoordenlijst. Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De aangepaste hash-code-provider en de aangepaste vergelijkingsfunctie inschakelen scenario&quot;s zoals het zoekacties met niet-hoofdlettergevoelige tekenreeksen.       De elementen van de nieuwe <xref:System.Collections.Hashtable>worden gesorteerd in dezelfde volgorde als waarin de enumerator doorloopt de <xref:System.Collections.IDictionary>object.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is het aantal elementen in de `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/cpp/9a30e378-7c34-4854-b12f-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/csharp/9a30e378-7c34-4854-b12f-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/visualbasic/9a30e378-7c34-4854-b12f-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "De <xref:System.Collections.IDictionary>te kopiëren naar een nieuw object <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object.</xref:System.Collections.IDictionary>"
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "De <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> object waaruit de hash-codes voor alle sleutels in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> gebruiken de standaard hash-code-provider die is elke sleutel-implementatie van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "De <xref:System.Collections.IComparer>object gebruiken om te bepalen of er twee sleutels gelijk zijn.</xref:System.Collections.IComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> de standaardvergelijkingsfunctie gebruiken die is elke sleutel-implementatie van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,Single,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,Single,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single,IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met het kopiëren van de elementen van de opgegeven woordenlijst aan de nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object. De nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object heeft een initiële capaciteit die gelijk is aan het aantal elementen gekopieerd en maakt gebruik van de opgegeven laadfactor en <xref:System.Collections.IEqualityComparer>object.</xref:System.Collections.IEqualityComparer>"
  remarks: "De begincapaciteit is ingesteld op het aantal elementen in de bronwoordenlijst. Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik. De laadfactor van 1.0 is de beste balans tussen snelheid en grootte.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De <xref:System.Collections.IEqualityComparer>-object bevat zowel de hash-code-provider en de vergelijkingsfunctie.</xref:System.Collections.IEqualityComparer> Als een <xref:System.Collections.IEqualityComparer>wordt gebruikt in de <xref:System.Collections.Hashtable>constructor, de objecten die gebruikt worden als sleutels in de <xref:System.Collections.Hashtable>object niet vereist zijn voor het onderdrukken van de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>en <xref:System.Object.Equals%2A?displayProperty=fullName>methoden.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De <xref:System.Collections.IEqualityComparer>kunt u bijvoorbeeld doen zoekacties met niet-hoofdlettergevoelige tekenreeksen.</xref:System.Collections.IEqualityComparer>       De elementen van de nieuwe <xref:System.Collections.Hashtable>worden gesorteerd in dezelfde volgorde als waarin de enumerator doorloopt de <xref:System.Collections.IDictionary>object.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is het aantal elementen in de `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cs[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/csharp/a92f83be-9de4-470a-8cbb-_1.cs)]\n [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/cpp/a92f83be-9de4-470a-8cbb-_1.cpp)]\n [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/visualbasic/a92f83be-9de4-470a-8cbb-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "De <xref:System.Collections.IDictionary>te kopiëren naar een nieuw object <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object.</xref:System.Collections.IDictionary>"
    - id: loadFactor
      type: System.Single
      description: "Een getal in het bereik tussen 0,1 en 1,0 die wordt vermenigvuldigd met de standaardwaarde die de beste prestaties biedt. Het resultaat is de maximale ratio van elementen op de buckets."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "De <xref:System.Collections.IEqualityComparer>-object dat bepaalt de hash-code-provider en de vergelijkingsfunctie voor gebruik met de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om de standaardprovider voor de hash-code en de standaardvergelijkingsfunctie te gebruiken. De standaardprovider voor de hash-code is de implementatie van de sleutel van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; en de standaardvergelijkingsfunctie is de implementatie van de sleutel van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>loadFactor</code>is kleiner dan 0,1.       - of - <code>loadFactor</code> is groter dan 1.0."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met behulp van de opgegeven begincapaciteit, hash-codeprovider vergelijkingsfunctie en de laadfactor is standaard."
  remarks: "De begincapaciteit geven niet meer nodig om uit te voeren een aantal formaatwijzigingen tijdens het toevoegen van elementen op de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De aangepaste hash-code-provider en de aangepaste vergelijkingsfunctie inschakelen scenario&quot;s zoals het zoekacties met niet-hoofdlettergevoelige tekenreeksen.       Deze constructor is een O (`n`)-bewerking, waarbij `n` is de `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/cpp/2154dba0-3cc6-41f7-aa9b-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/csharp/2154dba0-3cc6-41f7-aa9b-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/visualbasic/2154dba0-3cc6-41f7-aa9b-_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Het geschatte aantal elementen die de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -object in eerste instantie kan bevatten."
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "De <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> object waaruit de hash-codes voor alle sleutels in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> gebruiken de standaard hash-code-provider die is elke sleutel-implementatie van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "De <xref:System.Collections.IComparer>object gebruiken om te bepalen of er twee sleutels gelijk zijn.</xref:System.Collections.IComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> de standaardvergelijkingsfunctie gebruiken die is elke sleutel-implementatie van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>is kleiner dan nul."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,Single,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32,Single,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single,IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met de opgegeven begincapaciteit, laadfactor, en <xref:System.Collections.IEqualityComparer>object.</xref:System.Collections.IEqualityComparer>"
  remarks: "De begincapaciteit geven niet meer nodig om uit te voeren een aantal formaatwijzigingen tijdens het toevoegen van elementen op de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik. De laadfactor van 1.0 is de beste balans tussen snelheid en grootte.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De <xref:System.Collections.IEqualityComparer>-object bevat zowel de hash-code-provider en de vergelijkingsfunctie.</xref:System.Collections.IEqualityComparer> Als een <xref:System.Collections.IEqualityComparer>wordt gebruikt in de <xref:System.Collections.Hashtable>constructor, de objecten die gebruikt worden als sleutels in de <xref:System.Collections.Hashtable>niet vereist zijn voor het onderdrukken van de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>en <xref:System.Object.Equals%2A?displayProperty=fullName>methoden.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De <xref:System.Collections.IEqualityComparer>kunt u bijvoorbeeld doen zoekacties met niet-hoofdlettergevoelige tekenreeksen.</xref:System.Collections.IEqualityComparer>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is de `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/cpp/30b60c47-7bce-44a2-8d17-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/csharp/30b60c47-7bce-44a2-8d17-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/visualbasic/30b60c47-7bce-44a2-8d17-_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, float loadFactor, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Het geschatte aantal elementen die de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -object in eerste instantie kan bevatten."
    - id: loadFactor
      type: System.Single
      description: "Een getal in het bereik tussen 0,1 en 1,0 die wordt vermenigvuldigd met de standaardwaarde die de beste prestaties biedt. Het resultaat is de maximale ratio van elementen op de buckets."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "De <xref:System.Collections.IEqualityComparer>-object dat bepaalt de hash-code-provider en de vergelijkingsfunctie voor gebruik met de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om de standaardprovider voor de hash-code en de standaardvergelijkingsfunctie te gebruiken. De standaardprovider voor de hash-code is de implementatie van de sleutel van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; en de standaardvergelijkingsfunctie is de implementatie van de sleutel van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>is kleiner dan nul.       - of - <code>loadFactor</code> is kleiner dan 0,1.       - of - <code>loadFactor</code> is groter dan 1.0."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met het kopiëren van de elementen van de opgegeven woordenlijst aan de nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object. De nieuwe <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object begincapaciteit gelijk zijn aan het aantal elementen die zijn gekopieerd, gebruikt, en de laadfactor is opgegeven, de provider van hash-code en de vergelijkingsfunctie."
  remarks: "De begincapaciteit is ingesteld op het aantal elementen in de bronwoordenlijst. Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik. De laadfactor van 1.0 is de beste balans tussen snelheid en grootte.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De aangepaste hash-code-provider en de aangepaste vergelijkingsfunctie inschakelen scenario&quot;s zoals het zoekacties met niet-hoofdlettergevoelige tekenreeksen.       De elementen van de nieuwe <xref:System.Collections.Hashtable>worden gesorteerd in dezelfde volgorde als waarin de enumerator doorloopt de <xref:System.Collections.IDictionary>object.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Deze constructor is een O (`n`)-bewerking, waarbij `n` is het aantal elementen in de `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cs[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/csharp/c67b166f-bc6a-49e5-9bd7-_1.cs)]\n [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/cpp/c67b166f-bc6a-49e5-9bd7-_1.cpp)]\n [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/visualbasic/c67b166f-bc6a-49e5-9bd7-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "De <xref:System.Collections.IDictionary>te kopiëren naar een nieuw object <xref href=&quot;System.Collections.Hashtable&quot;> </xref> object.</xref:System.Collections.IDictionary>"
    - id: loadFactor
      type: System.Single
      description: "Een getal in het bereik tussen 0,1 en 1,0 die wordt vermenigvuldigd met de standaardwaarde die de beste prestaties biedt. Het resultaat is de maximale ratio van elementen op de buckets."
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "De <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> object waaruit de hash-codes voor alle sleutels in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> gebruiken de standaard hash-code-provider die is elke sleutel-implementatie van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "De <xref:System.Collections.IComparer>object gebruiken om te bepalen of er twee sleutels gelijk zijn.</xref:System.Collections.IComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> de standaardvergelijkingsfunctie gebruiken die is elke sleutel-implementatie van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>loadFactor</code>is kleiner dan 0,1.       - of - <code>loadFactor</code> is groter dan 1.0."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiseert een nieuw, leeg exemplaar van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klasse met behulp van de opgegeven begincapaciteit, factor, hash-code-provider en vergelijkingsfunctie worden geladen."
  remarks: "De begincapaciteit geven niet meer nodig om uit te voeren een aantal formaatwijzigingen tijdens het toevoegen van elementen op de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable> Capaciteit automatisch wordt verhoogd als vereist op basis van de laadfactor.       De laadfactor is de maximale ratio van elementen op de buckets. Een kleinere laadfactor betekent sneller lookup koste toegenomen geheugengebruik. De laadfactor van 1.0 is de beste balans tussen snelheid en grootte.       Wanneer de daadwerkelijke laadbewerking factor de laadfactor is opgegeven bereikt, wordt het aantal buckets automatisch verhoogd naar de kleinste prime-waarde die groter is dan twee keer het huidige aantal buckets.       De hash-codeprovider verdeelt hash-codes voor sleutels in de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> De standaardprovider voor de hash-code is de implementatie van de sleutel van <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       De vergelijkingsfunctie bepaalt of er twee sleutels gelijk zijn. Elke sleutel in een <xref:System.Collections.Hashtable>moeten uniek zijn.</xref:System.Collections.Hashtable> De standaardvergelijkingsfunctie is de implementatie van de sleutel van <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       De aangepaste hash-code-provider en de aangepaste vergelijkingsfunctie inschakelen scenario&quot;s zoals het zoekacties met niet-hoofdlettergevoelige tekenreeksen.       Deze constructor is een O (`n`)-bewerking, waarbij `n` is de `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/cpp/86ed2545-c9ee-4654-a1a4-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/csharp/86ed2545-c9ee-4654-a1a4-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/visualbasic/86ed2545-c9ee-4654-a1a4-_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Het geschatte aantal elementen die de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -object in eerste instantie kan bevatten."
    - id: loadFactor
      type: System.Single
      description: "Een getal in het bereik tussen 0,1 en 1,0 die wordt vermenigvuldigd met de standaardwaarde die de beste prestaties biedt. Het resultaat is de maximale ratio van elementen op de buckets."
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "De <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> object waaruit de hash-codes voor alle sleutels in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> gebruiken de standaard hash-code-provider die is elke sleutel-implementatie van &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "De <xref:System.Collections.IComparer>object gebruiken om te bepalen of er twee sleutels gelijk zijn.</xref:System.Collections.IComparer>       - of - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> de standaardvergelijkingsfunctie gebruiken die is elke sleutel-implementatie van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>is kleiner dan nul.       - of - <code>loadFactor</code> is kleiner dan 0,1.       - of - <code>loadFactor</code> is groter dan 1.0."
  platform:
  - net462
- uid: System.Collections.Hashtable.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: Hashtable.Add(Object,Object)
  fullName: System.Collections.Hashtable.Add(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Voegt een element met de opgegeven sleutel en waarde in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Een sleutel kan niet worden `null`, maar een waarde kan zijn.       Een object dat geen verband bestaat tussen de status en de hash-code-waarde heeft moet normaal gesproken niet worden gebruikt als de sleutel. String-objecten zijn bijvoorbeeld beter dan StringBuilder-objecten voor gebruik als sleutels.       U kunt ook de <xref:System.Collections.Hashtable.Item%2A>eigenschap toevoegen van nieuwe elementen door de waarde van een sleutel die niet bestaat de <xref:System.Collections.Hashtable>, bijvoorbeeld `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable.Item%2A> Echter, als de opgegeven sleutel al bestaat in de <xref:System.Collections.Hashtable>, instelling de <xref:System.Collections.Hashtable.Item%2A>eigenschap overschrijft de oude waarde.</xref:System.Collections.Hashtable.Item%2A> </xref:System.Collections.Hashtable> De methode Add Wijzig daarentegen niet bestaande elementen.       Als <xref:System.Collections.Hashtable.Count%2A>kleiner is dan de capaciteit van de <xref:System.Collections.Hashtable>, deze methode is een bewerking O(1).</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable.Count%2A> Als de capaciteit worden verhoogd moet om ruimte is voor het nieuwe element, deze methode wordt een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  example:
  - "The following example shows how to add elements to the <xref:System.Collections.Hashtable>.  \n  \n [!code-cpp[Classic Hashtable.Add Example#1](~/add/codesnippet/cpp/m-system.collections.has_6_1.cpp)]\n [!code-cs[Classic Hashtable.Add Example#1](~/add/codesnippet/csharp/m-system.collections.has_6_1.cs)]\n [!code-vb[Classic Hashtable.Add Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_6_1.vb)]"
  syntax:
    content: public virtual void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element om toe te voegen."
    - id: value
      type: System.Object
      description: "De waarde van het element om toe te voegen. De waarde kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een element met dezelfde sleutel bestaat al in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De <xref href=&quot;System.Collections.Hashtable&quot;> </xref> is alleen-lezen.       - of - de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> heeft een vaste grootte."
  platform:
  - net462
- uid: System.Collections.Hashtable.Clear
  id: Clear
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Clear()
  nameWithType: Hashtable.Clear()
  fullName: System.Collections.Hashtable.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee verwijdert u alle elementen van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "<xref:System.Collections.Hashtable.Count%2A>is ingesteld op nul en verwijzingen naar andere objecten in de elementen van de verzameling ook worden vrijgegeven.</xref:System.Collections.Hashtable.Count%2A> De capaciteit blijft ongewijzigd.       Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  example:
  - "The following example shows how to clear the values of the <xref:System.Collections.Hashtable>.  \n  \n [!code-cpp[Classic Hashtable.Clear Example#1](~/add/codesnippet/cpp/m-system.collections.has_10_1.cpp)]\n [!code-vb[Classic Hashtable.Clear Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_10_1.vb)]\n [!code-cs[Classic Hashtable.Clear Example#1](~/add/codesnippet/csharp/m-system.collections.has_10_1.cs)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Collections.Hashtable.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De <xref href=&quot;System.Collections.Hashtable&quot;> </xref> is alleen-lezen."
  platform:
  - net462
- uid: System.Collections.Hashtable.Clone
  id: Clone
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Clone()
  nameWithType: Hashtable.Clone()
  fullName: System.Collections.Hashtable.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Maakt een recente kopie van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Een recente kopie van een verzameling kopieert alleen de elementen van de verzameling of ze verwijzingstypen of typen zijn, maar deze worden niet gekopieerd door de objecten die de verwijzingen naar verwijzen. De verwijzingen in de nieuwe verzameling verwijzen naar dezelfde objecten die de verwijzingen in de oorspronkelijke verzameling naar verwijzen.       Daarentegen een diepe kopie van een verzameling kopieert de elementen en alles direct of indirect waarnaar wordt verwezen door de elementen.       De <xref:System.Collections.Hashtable>kloon is het aantal dezelfde, dezelfde capaciteit, dezelfde <xref:System.Collections.IHashCodeProvider>implementatie, en de dezelfde <xref:System.Collections.IComparer>implementatie als de oorspronkelijke <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.IComparer> </xref:System.Collections.IHashCodeProvider> </xref:System.Collections.Hashtable>       Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Een recente kopie van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  overload: System.Collections.Hashtable.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.comparer
  id: comparer
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: comparer
  nameWithType: Hashtable.comparer
  fullName: System.Collections.Hashtable.comparer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Opgehaald of ingesteld de <xref:System.Collections.IComparer>moet worden gebruikt voor de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IComparer>"
  remarks: "Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: protected System.Collections.IComparer comparer { get; set; }
    return:
      type: System.Collections.IComparer
      description: "De <xref:System.Collections.IComparer>moet worden gebruikt voor de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IComparer>"
  overload: System.Collections.Hashtable.comparer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De eigenschap is ingesteld op een waarde, maar de hash-tabel is gemaakt met een <xref:System.Collections.IEqualityComparer>.</xref:System.Collections.IEqualityComparer>"
  platform:
  - net462
- uid: System.Collections.Hashtable.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: Hashtable.Contains(Object)
  fullName: System.Collections.Hashtable.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee wordt bepaald of de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> een specifieke sleutel bevat."
  remarks: "Implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName>.</xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName> bevat Deze functie werkt precies als <xref:System.Collections.Hashtable.ContainsKey%2A>.</xref:System.Collections.Hashtable.ContainsKey%2A>       Deze methode is een bewerking O(1).       Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten <xref:System.Object.Equals%2A>en <xref:System.IComparable.CompareTo%2A>methoden op `item` om te bepalen of item bestaat.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de <xref:System.Object.Equals%2A>en <xref:System.IComparable.CompareTo%2A>methoden van de `item` parameter voor de objecten in de verzameling.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.  \n  \n [!code-cpp[Classic Hashtable.Contains Example#1](~/add/codesnippet/cpp/m-system.collections.has_12_1.cpp)]\n [!code-cs[Classic Hashtable.Contains Example#1](~/add/codesnippet/csharp/m-system.collections.has_12_1.cs)]\n [!code-vb[Classic Hashtable.Contains Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_12_1.vb)]"
  syntax:
    content: public virtual bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel te vinden in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> bevat een element met de opgegeven sleutel, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.ContainsKey(System.Object)
  id: ContainsKey(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: ContainsKey(Object)
  nameWithType: Hashtable.ContainsKey(Object)
  fullName: System.Collections.Hashtable.ContainsKey(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee wordt bepaald of de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> een specifieke sleutel bevat."
  remarks: "Deze methode werkt precies als <xref:System.Collections.Hashtable.Contains%2A>.</xref:System.Collections.Hashtable.Contains%2A>       Deze methode is een bewerking O(1).       Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten <xref:System.Object.Equals%2A>en <xref:System.IComparable.CompareTo%2A>methoden op `item` om te bepalen of item bestaat.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de <xref:System.Object.Equals%2A>en <xref:System.IComparable.CompareTo%2A>methoden van de `item` parameter voor de objecten in de verzameling.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.  \n  \n [!code-cpp[Classic Hashtable.Contains Example#1](~/add/codesnippet/cpp/m-system.collections.has_7_1.cpp)]\n [!code-cs[Classic Hashtable.Contains Example#1](~/add/codesnippet/csharp/m-system.collections.has_7_1.cs)]\n [!code-vb[Classic Hashtable.Contains Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_7_1.vb)]"
  syntax:
    content: public virtual bool ContainsKey (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel te vinden in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> bevat een element met de opgegeven sleutel, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.ContainsValue(System.Object)
  id: ContainsValue(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: ContainsValue(Object)
  nameWithType: Hashtable.ContainsValue(Object)
  fullName: System.Collections.Hashtable.ContainsValue(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee wordt bepaald of de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> bevat een bepaalde waarde."
  remarks: "De waarden van de elementen van de <xref:System.Collections.Hashtable>worden vergeleken met de opgegeven waarde met behulp van de <xref:System.Object.Equals%2A?displayProperty=fullName>methode.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Collections.Hashtable>       Deze methode voert een lineaire zoeken; Deze methode is daarom een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>       Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten <xref:System.Object.Equals%2A>en <xref:System.IComparable.CompareTo%2A>methoden op `item` om te bepalen of item bestaat.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de <xref:System.Object.Equals%2A>en <xref:System.IComparable.CompareTo%2A>methoden van de `item` parameter voor de objecten in de verzameling.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.  \n  \n [!code-cpp[Classic Hashtable.Contains Example#1](~/add/codesnippet/cpp/m-system.collections.has_9_1.cpp)]\n [!code-cs[Classic Hashtable.Contains Example#1](~/add/codesnippet/csharp/m-system.collections.has_9_1.cs)]\n [!code-vb[Classic Hashtable.Contains Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_9_1.vb)]"
  syntax:
    content: public virtual bool ContainsValue (object value);
    parameters:
    - id: value
      type: System.Object
      description: "De waarde te vinden in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>. De waarde kan zijn <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> bevat een element met de opgegeven <code> value </code>; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.ContainsValue*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: Hashtable.CopyTo(Array,Int32)
  fullName: System.Collections.Hashtable.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Kopieert de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> elementen op een eendimensionale <xref:System.Array>exemplaar bij de opgegeven index.</xref:System.Array>"
  remarks: "De elementen zijn gekopieerd naar de <xref:System.Array>in dezelfde volgorde als waarin de enumerator de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> doorloopt</xref:System.Array>       Kopiëren van alleen de sleutels in de <xref:System.Collections.Hashtable>, gebruik `Hashtable.Keys.CopyTo`.</xref:System.Collections.Hashtable>       Kopiëren van alleen de waarden in de <xref:System.Collections.Hashtable>, gebruik `Hashtable.Values.CopyTo`.</xref:System.Collections.Hashtable>       Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  example:
  - "The following example shows how to copy the list of keys or the list of values in a <xref:System.Collections.Hashtable> into a one-dimensional <xref:System.Array>.  \n  \n [!code-cs[Classic Hashtable.CopyTo Example#1](~/add/codesnippet/csharp/m-system.collections.has_0_1.cs)]\n [!code-vb[Classic Hashtable.CopyTo Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_0_1.vb)]\n [!code-cpp[Classic Hashtable.CopyTo Example#1](~/add/codesnippet/cpp/m-system.collections.has_0_1.cpp)]"
  syntax:
    content: public virtual void CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: "De eendimensionale <xref:System.Array>die het doel van de <xref:System.Collections.DictionaryEntry>objecten die zijn gekopieerd uit <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.DictionaryEntry> </xref:System.Array> De <xref:System.Array>moet hebben op nul gebaseerde indexering.</xref:System.Array>"
    - id: arrayIndex
      type: System.Int32
      description: "De op nul gebaseerde index in `array` welke kopiëren begint."
  overload: System.Collections.Hashtable.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>arrayIndex</code>is kleiner dan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>is multidimensionaal.       - of - het aantal elementen in de bron <xref href=&quot;System.Collections.Hashtable&quot;> </xref> groter is dan de beschikbare ruimte vanaf <code>arrayIndex</code> aan het einde van de bestemming <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Het type van de bron <xref href=&quot;System.Collections.Hashtable&quot;> </xref> kan niet automatisch worden geconverteerd naar het type van de bestemming <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Hashtable.Count
  id: Count
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Count
  nameWithType: Hashtable.Count
  fullName: System.Collections.Hashtable.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee wordt het aantal sleutel/waarde-paren die zijn opgenomen in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal sleutel/waarde-paren die zijn opgenomen in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  overload: System.Collections.Hashtable.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.EqualityComparer
  id: EqualityComparer
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: EqualityComparer
  nameWithType: Hashtable.EqualityComparer
  fullName: System.Collections.Hashtable.EqualityComparer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt de <xref:System.Collections.IEqualityComparer>moet worden gebruikt voor de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>"
  remarks: "De <xref:System.Collections.IEqualityComparer>bevat de vergelijkingsfunctie en de hash-code-provider.</xref:System.Collections.IEqualityComparer> Als een <xref:System.Collections.IEqualityComparer>wordt gebruikt in de <xref:System.Collections.Hashtable>constructor, de objecten die gebruikt worden als sleutels in de <xref:System.Collections.Hashtable>niet vereist zijn voor het onderdrukken van de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>en <xref:System.Object.Equals%2A?displayProperty=fullName>methoden.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: protected System.Collections.IEqualityComparer EqualityComparer { get; }
    return:
      type: System.Collections.IEqualityComparer
      description: "De <xref:System.Collections.IEqualityComparer>moet worden gebruikt voor de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Hashtable.EqualityComparer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De eigenschap is ingesteld op een waarde, maar de hash-tabel is gemaakt met een <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> en een <xref:System.Collections.IComparer>.</xref:System.Collections.IComparer>"
  platform:
  - net462
- uid: System.Collections.Hashtable.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Hashtable.GetEnumerator()
  fullName: System.Collections.Hashtable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Retourneert een <xref:System.Collections.IDictionaryEnumerator>die doorloopt de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "[Visual Basic C#]       De `foreach` -instructie van de taal C# (`for each` in Visual Basic) de complexiteit van de opsommingen worden verborgen.  Daarom kan het gebruik `foreach` wordt aanbevolen, in plaats van rechtstreeks bewerken van de enumerator.       Enumerators kunnen worden gebruikt om de gegevens in de verzameling te lezen, maar ze kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.       In eerste instantie bevindt de enumerator zich vóór het eerste element in de verzameling. <xref:System.Collections.IEnumerator.Reset%2A>brengt ook de enumerator terug naar deze positie.</xref:System.Collections.IEnumerator.Reset%2A>  Op deze positie <xref:System.Collections.IEnumerator.Current%2A>is niet gedefinieerd.</xref:System.Collections.IEnumerator.Current%2A> U moet daarom aanroepen <xref:System.Collections.IEnumerator.MoveNext%2A>om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>retourneert de hetzelfde object totdat de <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>wordt aangeroepen.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Hiermee stelt u <xref:System.Collections.IEnumerator.Current%2A>naar het volgende element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Als <xref:System.Collections.IEnumerator.MoveNext%2A>geeft het einde van de verzameling, de enumerator bevindt zich na het laatste element in de verzameling en <xref:System.Collections.IEnumerator.MoveNext%2A>retourneert `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Wanneer de enumerator is op deze positie, volgende aanroepen naar <xref:System.Collections.IEnumerator.MoveNext%2A>ook retourneren `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Als de laatste aanroep aan <xref:System.Collections.IEnumerator.MoveNext%2A>geretourneerd `false`, <xref:System.Collections.IEnumerator.Current%2A>is niet gedefinieerd.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>U kunt naar het eerste element van de verzameling opnieuw aanroepen <xref:System.Collections.IEnumerator.Reset%2A>gevolgd door <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> instellen       Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, de enumerator is permanent ongeldig en het gedrag is niet gedefinieerd.       De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom niet intrinsiek een thread-veilige procedure.  Om te garanderen thread veiligheid tijdens de opsomming, vergrendelt u de verzameling gedurende de volledige inventarisatie.  Als u wilt toestaan dat de verzameling worden geopend door meerdere threads voor lezen en schrijven, moet u uw eigen synchronisatie implementeren.       Deze methode is een bewerking O(1).       Omdat serialiseren en deserialiseren van een enumerator voor een <xref:System.Collections.Hashtable>kan leiden tot de elementen worden besteld, het is niet mogelijk om door te gaan zonder aanroepen de opsomming van de <xref:System.Collections.IEnumerator.Reset%2A>methode.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.Hashtable>"
  example:
  - "The following example compares the use of GetEnumerator and `foreach` to enumerate the contents of a <xref:System.Collections.Hashtable>.  \n  \n [!code-cpp[Classic Hashtable Example#2](~/add/codesnippet/cpp/m-system.collections.has_3_1.cpp)]\n [!code-cs[Classic Hashtable Example#2](~/add/codesnippet/csharp/m-system.collections.has_3_1.cs)]\n [!code-vb[Classic Hashtable Example#2](~/add/codesnippet/visualbasic/m-system.collections.has_3_1.vb)]"
  syntax:
    content: public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "An <xref:System.Collections.IDictionaryEnumerator> for the <xref href=&quot;System.Collections.Hashtable&quot;></xref>.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.Hashtable.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.GetHash(System.Object)
  id: GetHash(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: GetHash(Object)
  nameWithType: Hashtable.GetHash(Object)
  fullName: System.Collections.Hashtable.GetHash(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Retourneert de hash-code voor de opgegeven sleutel."
  remarks: "Als de hash-tabel is gemaakt met een specifieke <xref:System.Collections.IHashCodeProvider>implementatie, deze methode worden gebruikt voor die provider hash-code; anders wordt de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>uitvoering van `key`.</xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.IHashCodeProvider>       Deze methode is een bewerking O(1)."
  syntax:
    content: protected virtual int GetHash (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De <xref:System.Object>waarvoor een hash-code is moeten worden geretourneerd.</xref:System.Object>"
    return:
      type: System.Int32
      description: "De hash-code voor <code> key </code>."
  overload: System.Collections.Hashtable.GetHash*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Hashtable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Hashtable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Implementeert de <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interface en retourneert de gegevens die nodig zijn voor het serialiseren van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Een <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> -object met de informatie die is vereist voor het serialiseren van de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Een <xref:System.Runtime.Serialization.StreamingContext>object met de bron en bestemming van de geserialiseerde stroom die zijn gekoppeld aan de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Collections.Hashtable.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De verzameling is gewijzigd."
  platform:
  - net462
- uid: System.Collections.Hashtable.hcp
  id: hcp
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: hcp
  nameWithType: Hashtable.hcp
  fullName: System.Collections.Hashtable.hcp
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Opgehaald of ingesteld van het object dat hash-codes kunt zien."
  remarks: "Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: protected System.Collections.IHashCodeProvider hcp { get; set; }
    return:
      type: System.Collections.IHashCodeProvider
      description: "Het object dat hash-codes kunt zien."
  overload: System.Collections.Hashtable.hcp*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De eigenschap is ingesteld op een waarde, maar de hash-tabel is gemaakt met een <xref:System.Collections.IEqualityComparer>.</xref:System.Collections.IEqualityComparer>"
  platform:
  - net462
- uid: System.Collections.Hashtable.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: Hashtable.IsFixedSize
  fullName: System.Collections.Hashtable.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een waarde die aangeeft of de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> heeft een vaste grootte."
  remarks: "Een verzameling met een vaste grootte is niet toegestaan het toevoegen of verwijderen van elementen nadat de verzameling is gemaakt, maar kunt u de wijziging van bestaande elementen.       Een verzameling met een vaste grootte is gewoon een verzameling met een wrapper waardoor toevoegen en verwijderen van elementen; daarom als wijzigingen zijn aangebracht in de onderliggende verzameling, inclusief het toevoegen of verwijderen van elementen, de verzameling met vaste grootte wordt doorgevoerd die wijzigingen.       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: public virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> heeft een vaste grootte, anders wordt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: Hashtable.IsReadOnly
  fullName: System.Collections.Hashtable.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een waarde die aangeeft of de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> is alleen-lezen."
  remarks: "Een verzameling die is alleen-lezen is het toevoegen, verwijderen of wijzigen van de elementen niet toegestaan, nadat de verzameling is gemaakt.       Een verzameling die is alleen-lezen is gewoon een verzameling met een wrapper waardoor het wijzigen van de collectie. daarom als wijzigingen worden aangebracht in de onderliggende verzameling, de verzameling alleen-lezen wordt doorgevoerd die wijzigingen.       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> is alleen-lezen, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: Hashtable.IsSynchronized
  fullName: System.Collections.Hashtable.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een waarde die aangeeft of de toegang tot de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> is gesynchroniseerd (thread-veilig)."
  remarks: "Een <xref:System.Collections.Hashtable>biedt ondersteuning voor één writer en meerdere lezers gelijktijdig.</xref:System.Collections.Hashtable> Ter ondersteuning van meerdere schrijvers, moeten alle bewerkingen worden uitgevoerd via de wrapper die is geretourneerd door de <xref:System.Collections.Hashtable.Synchronized%2A>methode.</xref:System.Collections.Hashtable.Synchronized%2A>       Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.       De volgende voorbeeldcode laat zien hoe vergrendelen op de verzameling met behulp van de <xref:System.Collections.Hashtable.SyncRoot%2A>tijdens de gehele opsomming: [!code-cpp [klassieke Hashtable.IsSynchronized voorbeeld&#2;](~/add/codesnippet/cpp/p-system.collections.has_1_1.cpp)][!code-vb[klassieke Hashtable.IsSynchronized voorbeeld&#2;](~/add/codesnippet/visualbasic/p-system.collections.has_1_1.vb)][!code-cs[klassieke Hashtable.IsSynchronized voorbeeld&#2;](~/add/codesnippet/csharp/p-system.collections.has_1_1.cs) ]     </xref:System.Collections.Hashtable.SyncRoot%2A>"
  example:
  - "The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.  \n  \n [!code-cs[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/csharp/p-system.collections.has_1_2.cs)]\n [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/cpp/p-system.collections.has_1_2.cpp)]\n [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/visualbasic/p-system.collections.has_1_2.vb)]"
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de toegang tot de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> is gesynchroniseerd (thread-safe); anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Item(Object)
  nameWithType: Hashtable.Item(Object)
  fullName: System.Collections.Hashtable.Item(Object)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Opgehaald of ingesteld van de waarde die is gekoppeld aan de opgegeven sleutel."
  remarks: "Deze eigenschap biedt de mogelijkheid toegang tot een specifiek element in de verzameling met de volgende syntaxis: `myCollection[key]`.       U kunt ook de eigenschap Item toevoegen van nieuwe elementen met de waarde van een sleutel die niet bestaat in de <xref:System.Collections.Hashtable>, bijvoorbeeld `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Hashtable> Echter, als de opgegeven sleutel al bestaat in de <xref:System.Collections.Hashtable>, de oude waarde instellen van de eigenschap Item overschrijft.</xref:System.Collections.Hashtable> Daarentegen de <xref:System.Collections.Hashtable.Add%2A>methode bestaande elementen niet wijzigt.</xref:System.Collections.Hashtable.Add%2A>       Een sleutel kan niet worden `null`, maar een waarde kan zijn. Onderscheid maken tussen `null` die wordt geretourneerd omdat de opgegeven sleutel is niet gevonden en `null` die wordt geretourneerd omdat de waarde van de opgegeven sleutel is `null`, gebruiken de <xref:System.Collections.Hashtable.Contains%2A>methode of de <xref:System.Collections.Hashtable.ContainsKey%2A>methode om te bepalen of de sleutel in de lijst bestaat.</xref:System.Collections.Hashtable.ContainsKey%2A> </xref:System.Collections.Hashtable.Contains%2A>       Ophalen van de waarde van deze eigenschap is een bewerking O(1); de eigenschap is ook een O(1)-bewerking.       Het sleutelwoord in de C#-taal wordt gebruikt voor het definiëren van de indexeerfuncties in plaats van de implementatie van de <xref:System.Collections.IList.Item%2A>eigenschap.</xref:System.Collections.IList.Item%2A> Visual Basic implementeert Item als een standaardeigenschap dezelfde functionaliteit indexering bieden."
  syntax:
    content: public virtual object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel waarvan de waarde ophalen of instellen."
    return:
      type: System.Object
      description: "De waarde die is gekoppeld aan de opgegeven sleutel. Als de opgegeven sleutel niet gevonden is, bij het ophalen van het retourneert <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, en maakt u een nieuw element met de opgegeven sleutel probeert in te stellen."
  overload: System.Collections.Hashtable.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De eigenschap is ingesteld en de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> is alleen-lezen.       - of - de eigenschap is ingesteld, <code> key </code> bestaat niet in de verzameling en de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> heeft een vaste grootte."
  platform:
  - net462
- uid: System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  id: KeyEquals(System.Object,System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: KeyEquals(Object,Object)
  nameWithType: Hashtable.KeyEquals(Object,Object)
  fullName: System.Collections.Hashtable.KeyEquals(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Een specifieke vergelijkt <xref:System.Object>met een specifieke sleutel in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Object>"
  remarks: "Als de hash-tabel is gemaakt met een specifieke <xref:System.Collections.IComparer>implementatie, is deze methode wordt die vergelijkingsfunctie; die is gebruikt, <xref:System.Collections.IComparer.Compare%2A>(`item`, `key`).</xref:System.Collections.IComparer.Compare%2A> </xref:System.Collections.IComparer> Anders wordt gebruikt `item.Equals(key)`.       Deze methode is een bewerking O(1)."
  syntax:
    content: protected virtual bool KeyEquals (object item, object key);
    parameters:
    - id: item
      type: System.Object
      description: "De <xref:System.Object>moeten worden vergeleken met `key`.</xref:System.Object>"
    - id: key
      type: System.Object
      description: "De sleutel in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> moeten worden vergeleken met `item`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>item</code> and <code>key</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Hashtable.KeyEquals*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.Keys
  id: Keys
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Keys
  nameWithType: Hashtable.Keys
  fullName: System.Collections.Hashtable.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een <xref:System.Collections.ICollection>met de sleutels in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "De volgorde van de sleutels in de <xref:System.Collections.ICollection>is niet opgegeven, maar dit is dezelfde volgorde als de bijbehorende waarden in de <xref:System.Collections.ICollection>geretourneerd door de <xref:System.Collections.Hashtable.Values%2A>methode.</xref:System.Collections.Hashtable.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       De geretourneerde <xref:System.Collections.ICollection>is niet een statische kopie; in plaats daarvan de <xref:System.Collections.ICollection>verwijst terug naar de sleutels in de oorspronkelijke <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Daarom worden gewijzigd in de <xref:System.Collections.Hashtable>gaan worden weergegeven in de <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Hashtable>       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: public virtual System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "Een <xref:System.Collections.ICollection>met de sleutels in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Hashtable.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.OnDeserialization(System.Object)
  id: OnDeserialization(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: OnDeserialization(Object)
  nameWithType: Hashtable.OnDeserialization(Object)
  fullName: System.Collections.Hashtable.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Implementeert de <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interface en genereert de deserialisatie-gebeurtenis bij het deserialiseren voltooid is."
  remarks: "Deze methode is een O (`n`)-bewerking, waarbij `n` is <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>       Omdat serialiseren en deserialiseren van een enumerator voor een <xref:System.Collections.Hashtable>kan leiden tot de elementen worden besteld, het is niet mogelijk om door te gaan zonder aanroepen de opsomming van de <xref:System.Collections.IEnumerator.Reset%2A>methode.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.Hashtable>"
  syntax:
    content: public virtual void OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "De bron van de gebeurtenis deserialisatie."
  overload: System.Collections.Hashtable.OnDeserialization*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "De <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> object dat is gekoppeld aan de huidige <xref href=&quot;System.Collections.Hashtable&quot;> </xref> is ongeldig."
  platform:
  - net462
- uid: System.Collections.Hashtable.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: Hashtable.Remove(Object)
  fullName: System.Collections.Hashtable.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hiermee verwijdert u het element met de opgegeven sleutel uit de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Als de <xref:System.Collections.Hashtable>bevat geen element met de opgegeven sleutel de <xref:System.Collections.Hashtable>blijft ongewijzigd.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> Er is geen uitzondering is opgetreden.       Deze methode is een bewerking O(1)."
  example:
  - "The following example shows how to remove elements from the <xref:System.Collections.Hashtable>.  \n  \n [!code-cpp[Classic Hashtable.Remove Example#1](~/add/codesnippet/cpp/m-system.collections.has_13_1.cpp)]\n [!code-cs[Classic Hashtable.Remove Example#1](~/add/codesnippet/csharp/m-system.collections.has_13_1.cs)]\n [!code-vb[Classic Hashtable.Remove Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_13_1.vb)]"
  syntax:
    content: public virtual void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "De sleutel van het element te verwijderen."
  overload: System.Collections.Hashtable.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De <xref href=&quot;System.Collections.Hashtable&quot;> </xref> is alleen-lezen.       - of - de <xref href=&quot;System.Collections.Hashtable&quot;> </xref> heeft een vaste grootte."
  platform:
  - net462
- uid: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  id: Synchronized(System.Collections.Hashtable)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Synchronized(Hashtable)
  nameWithType: Hashtable.Synchronized(Hashtable)
  fullName: System.Collections.Hashtable.Synchronized(Hashtable)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Retourneert een gesynchroniseerde (thread-safe)-wrapper voor de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "De Synchronized-methode is voor meerdere en schrijfprogramma threadveilig. Bovendien de gesynchroniseerde wrapper zorgt ervoor dat er slechts één writer tegelijk schrijven.       Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.       De volgende voorbeeldcode laat zien hoe vergrendelen op de verzameling met behulp van de <xref:System.Collections.Hashtable.SyncRoot%2A>tijdens de gehele opsomming: [!code-cpp [klassieke Hashtable.IsSynchronized voorbeeld&#2;](~/add/codesnippet/cpp/m-system.collections.has_11_1.cpp)][!code-vb[klassieke Hashtable.IsSynchronized voorbeeld&2;](~/add/codesnippet/visualbasic/m-system.collections.has_11_1.vb)][!code-cs[klassieke Hashtable.IsSynchronized voorbeeld&#2;](~/add/codesnippet/csharp/m-system.collections.has_11_1.cs) ] deze methode is een bewerking O(1).    </xref:System.Collections.Hashtable.SyncRoot%2A>"
  example:
  - "The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.  \n  \n [!code-cs[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/csharp/m-system.collections.has_11_2.cs)]\n [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/cpp/m-system.collections.has_11_2.cpp)]\n [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_11_2.vb)]"
  syntax:
    content: public static System.Collections.Hashtable Synchronized (System.Collections.Hashtable table);
    parameters:
    - id: table
      type: System.Collections.Hashtable
      description: "De <xref href=&quot;System.Collections.Hashtable&quot;> </xref> om te synchroniseren."
    return:
      type: System.Collections.Hashtable
      description: "Een gesynchroniseerd (thread-veilige) wrapper voor de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  overload: System.Collections.Hashtable.Synchronized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>table</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.SyncRoot
  id: SyncRoot
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: SyncRoot
  nameWithType: Hashtable.SyncRoot
  fullName: System.Collections.Hashtable.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Maken van een gesynchroniseerde versie van de <xref:System.Collections.Hashtable>, gebruiken de <xref:System.Collections.Hashtable.Synchronized%2A>methode.</xref:System.Collections.Hashtable.Synchronized%2A> </xref:System.Collections.Hashtable> Afgeleide klassen kunnen evenwel de eigen gesynchroniseerde versie van de <xref:System.Collections.Hashtable>met behulp van de eigenschap SyncRoot.</xref:System.Collections.Hashtable> De code voor het synchroniseren moet bewerkingen uitvoeren op de SyncRoot van de <xref:System.Collections.Hashtable>, niet rechtstreeks op de <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> Dit zorgt ervoor dat de juiste werking van de verzamelingen die zijn afgeleid van andere objecten. In het bijzonder houdt juiste synchronisatie met andere threads dat tegelijkertijd kan worden wijzigt de <xref:System.Collections.Hashtable>object.</xref:System.Collections.Hashtable>       Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.       De volgende voorbeeldcode laat zien hoe de verzameling met behulp van de SyncRoot tijdens de gehele opsomming vergrendelen: [!code-cpp [klassieke Hashtable.IsSynchronized voorbeeld&#2;](~/add/codesnippet/cpp/p-system.collections.has_0_1.cpp)][!code-vb[klassieke Hashtable.IsSynchronized voorbeeld&#2;](~/add/codesnippet/visualbasic/p-system.collections.has_0_1.vb)][!code-cs[klassieke Hashtable.IsSynchronized voorbeeld&#2;    ](~/add/codesnippet/csharp/p-system.collections.has_0_1.cs)]"
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "Een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  overload: System.Collections.Hashtable.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Hashtable.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Hashtable.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Retourneert een enumerator die een verzameling doorlopen."
  remarks: "[Visual Basic C#]       De `foreach` -instructie van de taal C# (`for each` in Visual Basic) de complexiteit van de opsommingen worden verborgen.  Daarom kan het gebruik `foreach` wordt aanbevolen, in plaats van rechtstreeks bewerken van de enumerator.       Enumerators kunnen worden gebruikt om de gegevens in de verzameling te lezen, maar ze kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.       In eerste instantie bevindt de enumerator zich vóór het eerste element in de verzameling. <xref:System.Collections.IEnumerator.Reset%2A>brengt ook de enumerator terug naar deze positie.</xref:System.Collections.IEnumerator.Reset%2A> Op deze functie, het aanroepen van <xref:System.Collections.IEnumerator.Current%2A>er een uitzondering gegenereerd.</xref:System.Collections.IEnumerator.Current%2A> U moet daarom aanroepen <xref:System.Collections.IEnumerator.MoveNext%2A>om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>retourneert de hetzelfde object totdat de <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>wordt aangeroepen.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Hiermee stelt u <xref:System.Collections.IEnumerator.Current%2A>naar het volgende element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Als <xref:System.Collections.IEnumerator.MoveNext%2A>geeft het einde van de verzameling, de enumerator bevindt zich na het laatste element in de verzameling en <xref:System.Collections.IEnumerator.MoveNext%2A>retourneert `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Wanneer de enumerator is op deze positie, volgende aanroepen naar <xref:System.Collections.IEnumerator.MoveNext%2A>ook retourneren `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Als de laatste aanroep aan <xref:System.Collections.IEnumerator.MoveNext%2A>geretourneerd `false`, aanroepende <xref:System.Collections.IEnumerator.Current%2A>er een uitzondering gegenereerd.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>U kunt naar het eerste element van de verzameling opnieuw aanroepen <xref:System.Collections.IEnumerator.Reset%2A>gevolgd door <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> instellen       Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, kan de enumerator ongeldig gemaakt en de volgende aanroep aan <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>er een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Als de verzameling is gewijzigd tussen <xref:System.Collections.IEnumerator.MoveNext%2A>en <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>retourneert het element dat is ingesteld op, zelfs als de enumerator is al ongeldig gemaakt.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom niet intrinsiek een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.       Deze methode is een bewerking O(1)."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een <xref:System.Collections.IEnumerator>die kunnen worden gebruikt om de collectie te doorlopen.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.Values
  id: Values
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Values
  nameWithType: Hashtable.Values
  fullName: System.Collections.Hashtable.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Haalt een <xref:System.Collections.ICollection>met de waarden in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "De volgorde van de waarden in de <xref:System.Collections.ICollection>is niet opgegeven, maar dit is dezelfde volgorde als de gekoppelde sleutels in de <xref:System.Collections.ICollection>geretourneerd door de <xref:System.Collections.Hashtable.Keys%2A>methode.</xref:System.Collections.Hashtable.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       De geretourneerde <xref:System.Collections.ICollection>is niet een statische kopie; in plaats daarvan de <xref:System.Collections.ICollection>verwijst terug naar de waarden in de oorspronkelijke <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Daarom worden gewijzigd in de <xref:System.Collections.Hashtable>gaan worden weergegeven in de <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Hashtable>       Ophalen van de waarde van deze eigenschap is een O(1)-bewerking."
  syntax:
    content: public virtual System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "Een <xref:System.Collections.ICollection>met de waarden in de <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Hashtable.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NullReferenceException
  isExternal: true
  name: System.NullReferenceException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Collections.Hashtable.#ctor
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable()
  nameWithType: Hashtable.Hashtable()
  fullName: System.Collections.Hashtable.Hashtable()
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary)
  nameWithType: Hashtable.Hashtable(IDictionary)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Hashtable.#ctor(System.Int32)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32)
  nameWithType: Hashtable.Hashtable(Int32)
  fullName: System.Collections.Hashtable.Hashtable(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,Single)
  nameWithType: Hashtable.Hashtable(IDictionary,Single)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IHashCodeProvider,IComparer)
- uid: System.Collections.IHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: IHashCodeProvider
  nameWithType: IHashCodeProvider
  fullName: System.Collections.IHashCodeProvider
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,Single)
  nameWithType: Hashtable.Hashtable(Int32,Single)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single)
- uid: System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(SerializationInfo,StreamingContext)
  nameWithType: Hashtable.Hashtable(SerializationInfo,StreamingContext)
  fullName: System.Collections.Hashtable.Hashtable(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,IHashCodeProvider,IComparer)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,Single,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,Single,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single,IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,IHashCodeProvider,IComparer)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,Single,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32,Single,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single,IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single,IHashCodeProvider,IComparer)
- uid: System.Collections.Hashtable.Add(System.Object,System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Add(Object,Object)
  nameWithType: Hashtable.Add(Object,Object)
  fullName: System.Collections.Hashtable.Add(Object,Object)
- uid: System.Collections.Hashtable.Clear
  parent: System.Collections.Hashtable
  isExternal: false
  name: Clear()
  nameWithType: Hashtable.Clear()
  fullName: System.Collections.Hashtable.Clear()
- uid: System.Collections.Hashtable.Clone
  parent: System.Collections.Hashtable
  isExternal: false
  name: Clone()
  nameWithType: Hashtable.Clone()
  fullName: System.Collections.Hashtable.Clone()
- uid: System.Collections.Hashtable.comparer
  parent: System.Collections.Hashtable
  isExternal: false
  name: comparer
  nameWithType: Hashtable.comparer
  fullName: System.Collections.Hashtable.comparer
- uid: System.Collections.Hashtable.Contains(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Contains(Object)
  nameWithType: Hashtable.Contains(Object)
  fullName: System.Collections.Hashtable.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Hashtable.ContainsKey(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: ContainsKey(Object)
  nameWithType: Hashtable.ContainsKey(Object)
  fullName: System.Collections.Hashtable.ContainsKey(Object)
- uid: System.Collections.Hashtable.ContainsValue(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: ContainsValue(Object)
  nameWithType: Hashtable.ContainsValue(Object)
  fullName: System.Collections.Hashtable.ContainsValue(Object)
- uid: System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Hashtable
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: Hashtable.CopyTo(Array,Int32)
  fullName: System.Collections.Hashtable.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Hashtable.Count
  parent: System.Collections.Hashtable
  isExternal: false
  name: Count
  nameWithType: Hashtable.Count
  fullName: System.Collections.Hashtable.Count
- uid: System.Collections.Hashtable.EqualityComparer
  parent: System.Collections.Hashtable
  isExternal: false
  name: EqualityComparer
  nameWithType: Hashtable.EqualityComparer
  fullName: System.Collections.Hashtable.EqualityComparer
- uid: System.Collections.Hashtable.GetEnumerator
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetEnumerator()
  nameWithType: Hashtable.GetEnumerator()
  fullName: System.Collections.Hashtable.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Hashtable.GetHash(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetHash(Object)
  nameWithType: Hashtable.GetHash(Object)
  fullName: System.Collections.Hashtable.GetHash(Object)
- uid: System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Hashtable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Hashtable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Collections.Hashtable.hcp
  parent: System.Collections.Hashtable
  isExternal: false
  name: hcp
  nameWithType: Hashtable.hcp
  fullName: System.Collections.Hashtable.hcp
- uid: System.Collections.Hashtable.IsFixedSize
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsFixedSize
  nameWithType: Hashtable.IsFixedSize
  fullName: System.Collections.Hashtable.IsFixedSize
- uid: System.Collections.Hashtable.IsReadOnly
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsReadOnly
  nameWithType: Hashtable.IsReadOnly
  fullName: System.Collections.Hashtable.IsReadOnly
- uid: System.Collections.Hashtable.IsSynchronized
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsSynchronized
  nameWithType: Hashtable.IsSynchronized
  fullName: System.Collections.Hashtable.IsSynchronized
- uid: System.Collections.Hashtable.Item(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Item(Object)
  nameWithType: Hashtable.Item(Object)
  fullName: System.Collections.Hashtable.Item(Object)
- uid: System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: KeyEquals(Object,Object)
  nameWithType: Hashtable.KeyEquals(Object,Object)
  fullName: System.Collections.Hashtable.KeyEquals(Object,Object)
- uid: System.Collections.Hashtable.Keys
  parent: System.Collections.Hashtable
  isExternal: false
  name: Keys
  nameWithType: Hashtable.Keys
  fullName: System.Collections.Hashtable.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Hashtable.OnDeserialization(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: OnDeserialization(Object)
  nameWithType: Hashtable.OnDeserialization(Object)
  fullName: System.Collections.Hashtable.OnDeserialization(Object)
- uid: System.Collections.Hashtable.Remove(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Remove(Object)
  nameWithType: Hashtable.Remove(Object)
  fullName: System.Collections.Hashtable.Remove(Object)
- uid: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Synchronized(Hashtable)
  nameWithType: Hashtable.Synchronized(Hashtable)
  fullName: System.Collections.Hashtable.Synchronized(Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections.Hashtable.SyncRoot
  parent: System.Collections.Hashtable
  isExternal: false
  name: SyncRoot
  nameWithType: Hashtable.SyncRoot
  fullName: System.Collections.Hashtable.SyncRoot
- uid: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Hashtable
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Hashtable.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Hashtable.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Hashtable.Values
  parent: System.Collections.Hashtable
  isExternal: false
  name: Values
  nameWithType: Hashtable.Values
  fullName: System.Collections.Hashtable.Values
- uid: System.Collections.Hashtable.#ctor*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable.Hashtable
- uid: System.Collections.Hashtable.Add*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Add
  nameWithType: Hashtable.Add
- uid: System.Collections.Hashtable.Clear*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Clear
  nameWithType: Hashtable.Clear
- uid: System.Collections.Hashtable.Clone*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Clone
  nameWithType: Hashtable.Clone
- uid: System.Collections.Hashtable.comparer*
  parent: System.Collections.Hashtable
  isExternal: false
  name: comparer
  nameWithType: Hashtable.comparer
- uid: System.Collections.Hashtable.Contains*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Contains
  nameWithType: Hashtable.Contains
- uid: System.Collections.Hashtable.ContainsKey*
  parent: System.Collections.Hashtable
  isExternal: false
  name: ContainsKey
  nameWithType: Hashtable.ContainsKey
- uid: System.Collections.Hashtable.ContainsValue*
  parent: System.Collections.Hashtable
  isExternal: false
  name: ContainsValue
  nameWithType: Hashtable.ContainsValue
- uid: System.Collections.Hashtable.CopyTo*
  parent: System.Collections.Hashtable
  isExternal: false
  name: CopyTo
  nameWithType: Hashtable.CopyTo
- uid: System.Collections.Hashtable.Count*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Count
  nameWithType: Hashtable.Count
- uid: System.Collections.Hashtable.EqualityComparer*
  parent: System.Collections.Hashtable
  isExternal: false
  name: EqualityComparer
  nameWithType: Hashtable.EqualityComparer
- uid: System.Collections.Hashtable.GetEnumerator*
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetEnumerator
  nameWithType: Hashtable.GetEnumerator
- uid: System.Collections.Hashtable.GetHash*
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetHash
  nameWithType: Hashtable.GetHash
- uid: System.Collections.Hashtable.GetObjectData*
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetObjectData
  nameWithType: Hashtable.GetObjectData
- uid: System.Collections.Hashtable.hcp*
  parent: System.Collections.Hashtable
  isExternal: false
  name: hcp
  nameWithType: Hashtable.hcp
- uid: System.Collections.Hashtable.IsFixedSize*
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsFixedSize
  nameWithType: Hashtable.IsFixedSize
- uid: System.Collections.Hashtable.IsReadOnly*
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsReadOnly
  nameWithType: Hashtable.IsReadOnly
- uid: System.Collections.Hashtable.IsSynchronized*
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsSynchronized
  nameWithType: Hashtable.IsSynchronized
- uid: System.Collections.Hashtable.Item*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Item
  nameWithType: Hashtable.Item
- uid: System.Collections.Hashtable.KeyEquals*
  parent: System.Collections.Hashtable
  isExternal: false
  name: KeyEquals
  nameWithType: Hashtable.KeyEquals
- uid: System.Collections.Hashtable.Keys*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Keys
  nameWithType: Hashtable.Keys
- uid: System.Collections.Hashtable.OnDeserialization*
  parent: System.Collections.Hashtable
  isExternal: false
  name: OnDeserialization
  nameWithType: Hashtable.OnDeserialization
- uid: System.Collections.Hashtable.Remove*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Remove
  nameWithType: Hashtable.Remove
- uid: System.Collections.Hashtable.Synchronized*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Synchronized
  nameWithType: Hashtable.Synchronized
- uid: System.Collections.Hashtable.SyncRoot*
  parent: System.Collections.Hashtable
  isExternal: false
  name: SyncRoot
  nameWithType: Hashtable.SyncRoot
- uid: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Hashtable
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Hashtable.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Hashtable.Values*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Values
  nameWithType: Hashtable.Values
