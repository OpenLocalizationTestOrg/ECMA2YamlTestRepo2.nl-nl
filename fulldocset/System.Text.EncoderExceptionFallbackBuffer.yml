### YamlMime:ManagedReference
items:
- uid: System.Text.EncoderExceptionFallbackBuffer
  id: EncoderExceptionFallbackBuffer
  children:
  - System.Text.EncoderExceptionFallbackBuffer.#ctor
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  - System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  - System.Text.EncoderExceptionFallbackBuffer.Remaining
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer
  fullName: System.Text.EncoderExceptionFallbackBuffer
  type: Class
  summary: "Genereert <xref:System.Text.EncoderFallbackException>wanneer een invoertekens kan niet worden geconverteerd naar een reeks gecodeerde uitvoer bytes.</xref:System.Text.EncoderFallbackException> Deze klasse kan niet worden overgenomen."
  remarks: "Een veelvoorkomende reden voor een codering of decoderen van de bewerking mislukken is als de onderliggende klasse codering geen een toewijzing tussen een teken en een volgorde van gelijkwaardige byte biedt. Als het ingevoerde teken kan niet worden geconverteerd naar een reeks uitvoer bytes, roept de coderingsbewerking de <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>methode die <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException> genereert</xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>       De <xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName>klasse, die staat voor een gegevensbuffer gebruikt in een codering bewerking, is de basisklasse voor de klasse EncoderExceptionFallbackBuffer.</xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName> In plaats van een gegevensbuffer echter vertegenwoordigt de klasse EncoderExceptionFallbackBuffer een standaardgedrag waarin een uitzondering gegenereerd als een codering bewerking mislukt. Geen actuele gegevensbuffer bestaat en de leden die zijn ontworpen om te bewerken, zoals een buffer biedt geen aanzienlijke werkbelasting."
  syntax:
    content: 'public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer'
  inheritance:
  - System.Text.EncoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> klasse."
  syntax:
    content: public EncoderExceptionFallbackBuffer ();
    parameters: []
  overload: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  id: Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Er een uitzondering gegenereerd omdat het ingevoerde teken kan niet worden gecodeerd. Parameters geeft u de waarde en index positie van het teken dat kan niet worden geconverteerd."
  remarks: "De <xref:System.Text.Encoding.GetBytes%2A>en <xref:System.Text.Encoder.Convert%2A>methoden aanroepen terugval als ze een onbekend teken in de invoer optreden.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> In het antwoord genereert terugval altijd <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException>"
  syntax:
    content: public override bool Fallback (char charUnknown, int index);
    parameters:
    - id: charUnknown
      type: System.Char
      description: "Een ingevoerde teken."
    - id: index
      type: System.Int32
      description: "De indexpositie van het teken in de invoerbuffer."
    return:
      type: System.Boolean
      description: "Geen. Er is geen waarde wordt geretourneerd omdat de alternatieve methode er altijd een uitzondering gegenereerd."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "<code>charUnknown</code>kan niet worden gecodeerd. Deze methode er altijd een uitzondering gegenereerd die de waarde van rapporteert de <code>charUnknown</code> en <code>index</code> parameters."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  id: Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Er een uitzondering gegenereerd omdat het ingevoerde teken kan niet worden gecodeerd. Parameters geeft u de positie van de waarde en de index van het surrogaatpaar in de invoer en de nominaal retourwaarde wordt niet gebruikt."
  remarks: "De <xref:System.Text.Encoding.GetBytes%2A>en <xref:System.Text.Encoder.Convert%2A>methoden aanroepen terugval als ze een surrogaatpaar in hun invoer optreden.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> In het antwoord wordt terugval altijd een uitzondering veroorzaakt."
  syntax:
    content: public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);
    parameters:
    - id: charUnknownHigh
      type: System.Char
      description: "De hoge vervangende van de invoer-paar."
    - id: charUnknownLow
      type: System.Char
      description: "De lage vervangende van de invoer-paar."
    - id: index
      type: System.Int32
      description: "De indexpositie van het surrogaatpaar in de invoerbuffer."
    return:
      type: System.Boolean
      description: "Geen. Er is geen waarde wordt geretourneerd omdat de alternatieve methode er altijd een uitzondering gegenereerd."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "Het teken dat wordt vertegenwoordigd door <code> charUnknownHigh </code> en <code> charUnknownLow </code> kan niet worden gecodeerd."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Either <code>charUnknownHigh</code> or <code>charUnknownLow</code> is invalid. <code>charUnknownHigh</code>ligt niet tussen U + D800 en U + DBFF, liggen, of <code> charUnknownLow </code> ligt niet tussen U + DC00 en U + DFFF, inclusief."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Hiermee haalt u het volgende teken in de terugvalbuffer uitzondering."
  remarks: "Omdat <xref:System.Text.EncoderExceptionFallbackBuffer>geen gegevensbuffer werkelijke uitzondering heeft de methode GetNextChar retourneert altijd het NULL Unicode-teken.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "De geretourneerde waarde is altijd het Unicode-teken, NULL (U +&0000;).       Een retourwaarde is gedefinieerd, hoewel het onveranderlijke, omdat deze methode wordt geïmplementeerd voor een abstracte methode."
  overload: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "De volgende aanroep zorgt ervoor dat de <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>methode voor toegang tot de uitzondering buffer tekenpositie dat ouder is dan de huidige positie.</xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>"
  remarks: "Omdat <xref:System.Text.EncoderExceptionFallbackBuffer>geen gegevensbuffer werkelijke uitzondering heeft de methode MovePrevious retourneert altijd `false`.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "De geretourneerde waarde is altijd <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Een retourwaarde is gedefinieerd, hoewel het onveranderlijke, omdat deze methode wordt geïmplementeerd voor een abstracte methode."
  overload: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Hiermee wordt het aantal tekens in de huidige <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> object die nog moeten worden verwerkt."
  remarks: "Omdat <xref:System.Text.EncoderExceptionFallbackBuffer>geen gegevensbuffer werkelijke uitzondering heeft de eigenschap resterend retourneert altijd nul.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "De geretourneerde waarde is altijd nul.       Een retourwaarde is gedefinieerd, hoewel het onveranderlijke, omdat deze methode wordt geïmplementeerd voor een abstracte methode."
  overload: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.EncoderFallbackBuffer
  isExternal: false
  name: System.Text.EncoderFallbackBuffer
- uid: System.Text.EncoderFallbackException
  isExternal: true
  name: System.Text.EncoderFallbackException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: EncoderExceptionFallbackBuffer.Fallback
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
