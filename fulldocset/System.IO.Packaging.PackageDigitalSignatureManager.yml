### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageDigitalSignatureManager
  id: PackageDigitalSignatureManager
  children:
  - System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)
  - System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign
  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  - System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  - System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)
  - System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  - System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  - System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  - System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  - System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures
  - System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  - System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  - System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  - System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  - System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  - System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  - System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)
  langs:
  - csharp
  name: PackageDigitalSignatureManager
  nameWithType: PackageDigitalSignatureManager
  fullName: System.IO.Packaging.PackageDigitalSignatureManager
  type: Class
  summary: "Biedt een hulpprogrammaklasse voor het maken en de controle van digitale handtekeningen in een <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>."
  remarks: "PackageDigitalSignatureManager bouwt voort op de architectuur van [!INCLUDE[TLA#tla_netframewk](~/add/includes/tlasharptla-netframewk-md.md)] digitale handtekening klassen en biedt een hulpprogrammaklasse voor het uitvoeren van veelvoorkomende taken in het gebruik van digitale handtekeningen met <xref:System.IO.Packaging.Package>elementen.</xref:System.IO.Packaging.Package>       Zie voor meer informatie over digitale handtekeningen van pakketten, het MSDN-artikel Framework voor digitale ondertekening van de Open Packaging Conventions beschikbaar op [http://go.microsoft.com/fwlink/?LinkId=74494](http://go.microsoft.com/fwlink/?LinkId=74494)."
  example:
  - "The following example shows how to use the PackageDigitalSignatureManager.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public sealed class PackageDigitalSignatureManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)
  id: '#ctor(System.IO.Packaging.Package)'
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: PackageDigitalSignatureManager(Package)
  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IO.Packaging.PackageDigitalSignatureManager&quot;> </xref> klasse voor gebruik met een opgegeven <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>."
  remarks: "Het doel-pakket die zijn gekoppeld aan de manager van de handtekening is ingesteld tijdens de initialisatie. Nadat deze is ingesteld, kan het pakket die zijn gekoppeld aan de manager handtekening kan niet worden gewijzigd. Maak een nieuwe handtekening manager voor elk pakket indien nodig."
  example:
  - "The following example shows how to use this constructor.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public PackageDigitalSignatureManager (System.IO.Packaging.Package package);
    parameters:
    - id: package
      type: System.IO.Packaging.Package
      description: "Het pakket die zijn gekoppeld aan deze handtekening-manager."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  id: CertificateOption
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: CertificateOption
  nameWithType: PackageDigitalSignatureManager.CertificateOption
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Opgehaald of ingesteld van het X.509-certificaat insluiten optie gebruikt door de <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign*>methode pakketonderdelen digitaal te ondertekenen.</xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign*>"
  remarks: "Deze eigenschap geeft aan waar het X.509-certificaat van de ondertekenaar worden opgeslagen wanneer een onderdeel digitaal te ondertekenen."
  example:
  - "The following example shows how to set this property in preparation to digitally sign the parts within a package.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }
    return:
      type: System.IO.Packaging.CertificateEmbeddingOption
      description: "Een van de <xref href=&quot;System.IO.Packaging.CertificateEmbeddingOption&quot;> </xref> waarden."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign
  id: Countersign
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Countersign()
  nameWithType: PackageDigitalSignatureManager.Countersign()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Dient als controlehandtekening alle handtekeningen in het pakket met een door de gebruiker geselecteerde X.509-certificaat."
  remarks: "Als geen x.509-certificaat is opgegeven in de aanroep, wordt met deze methode een selectie van het dialoogvenster certificaat waarin de gebruiker een certificaat voor ondertekening kiezen geopend.       De vensterkoppeling ingesteld in de <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>eigenschap voordat Countersign om het dialoogvenster certificaat selectie modaal naar het opgegeven venster wordt aangeroepen.</xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Countersign ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "De handtekening die is toegevoegd als een countersign; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen certificaat gevonden worden kan of het dialoogvenster certificaat selectie door de gebruiker geannuleerd."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Countersign(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Dient als controlehandtekening alle handtekeningen in het pakket met een opgegeven X.509-certificaat."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Het X.509-certificaat moet worden toegevoegd als een countersign handtekening."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "De handtekening die is toegevoegd als een countersign."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  id: Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Countersign(X509Certificate,IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Dient als controlehandtekening van een lijst met handtekeningen met een opgegeven X.509-certificaat."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<Uri> signatures);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Het X.509-certificaat controlehandtekening plaatsen voor elk van de opgegeven `signatures`."
    - id: signatures
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "De lijst met handtekeningen controlehandtekening plaatsen."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "De digitale handtekening gebruikt voor het controlehandtekening plaatsen voor elk van de <code> signatures </code>."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either the <code>certificate</code> or <code>signatures</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het pakket bevat geen ondertekend <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objecten."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het pakket bevat geen <xref href=&quot;System.IO.Packaging.PackageDigitalSignature&quot;> </xref> delen."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  id: DefaultHashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: DefaultHashAlgorithm
  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Haalt een [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] tekenreeks die het hash-algoritme dat wordt gebruikt identificeert voor het maken en controleren van handtekeningen."
  remarks: "Het standaard hash-algoritme voor de standaard <xref:System.IO.Packaging.PackageDigitalSignatureManager>klasse is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>([!INCLUDE[TLA#tla_sha1](~/add/includes/ajax-current-ext-md.md)]).</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> </xref:System.IO.Packaging.PackageDigitalSignatureManager>       De <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>eigenschap opgehaald of ingesteld van het werkelijke hash-algoritme dat dit wordt gebruikt voor het maken en controleren van handtekeningen.</xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>       De eigenschap DefaultHashAlgorithm wordt doorgaans gebruikt om in te stellen de <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>eigenschap terug naar de standaard na een tijdelijke wijziging.</xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>"
  syntax:
    content: public static string DefaultHashAlgorithm { get; }
    return:
      type: System.String
      description: "Een [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] tekenreeks die het hash-algoritme dat wordt gebruikt identificeert voor het maken en controleren van handtekeningen."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)
  id: GetSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: GetSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.GetSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Retourneert de digitale handtekening voor een bepaalde ondertekening [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);
    parameters:
    - id: signatureUri
      type: System.Uri
      description: "De [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] van de digitale handtekening te retourneren."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "De digitale handtekening voor de opgegeven <code> signatureUri </code>, of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als een handtekening voor de opgegeven <code> signatureUri </code> kan niet worden gevonden."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  id: HashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: PackageDigitalSignatureManager.HashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Opgehaald of ingesteld de [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] id voor de <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> exemplaar dat wordt gebruikt voor het maken en controleren van handtekeningen."
  remarks: "Het standaard hash-algoritme-id voor de manager standaard digitale handtekening is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>(<xref:System.Security.Cryptography.SHA1>: Secure Hash Algorithm versie 1.0).</xref:System.Security.Cryptography.SHA1> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>       Tenzij expliciet set anders wordt deze eigenschap dezelfde waarde als <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.</xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> opgehaald       De eigenschap HashAlgorithm is de standaardinstelling doorgaans niet gewijzigd. Deze eigenschap moet worden gewijzigd, toegankelijk is en alleen als een handtekening die gebruikmaakt van een andere bekende <xref:System.Security.Cryptography.HashAlgorithm>is aangetroffen.</xref:System.Security.Cryptography.HashAlgorithm>  Als u klaar bent met de handtekening die gebruikmaakt van een andere hash-algoritme aanroepen <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>opnieuw instellen van de eigenschap HashAlgorithm terug naar de standaardpagina.</xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>"
  syntax:
    content: public string HashAlgorithm { get; set; }
    return:
      type: System.String
      description: "De <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] id voor de <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> exemplaar dat wordt gebruikt voor het maken en controleren van handtekeningen."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De tekenreeks voor de [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] om in te stellen is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De tekenreeks voor de [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] om in te stellen is leeg."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  id: InvalidSignatureEvent
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: InvalidSignatureEvent
  nameWithType: PackageDigitalSignatureManager.InvalidSignatureEvent
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Deze gebeurtenis treedt op wanneer <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*>optreedt van een ongeldige handtekening.</xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*>"
  syntax:
    content: public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;
    return:
      type: System.IO.Packaging.InvalidSignatureEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  id: IsSigned
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: IsSigned
  nameWithType: PackageDigitalSignatureManager.IsSigned
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hiermee wordt een waarde die aangeeft of het pakket geen handtekeningen bevat."
  remarks: "De eigenschap IsSigned voert geen handtekening wordt gevalideerd. Als handtekeningen aanwezig zijn en IsSigned `true`, een of meer van de handtekeningen mogelijk niet geldig.  Roep <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A>om te bevestigen dat de handtekeningen geldig zijn en zijn niet gewijzigd.</xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A>"
  example:
  - "The following example shows how to use the IsSigned property to determine if a package contains digital signatures.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigvalidate)]\n [!code-cs[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigvalidate)]"
  syntax:
    content: public bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als het pakket handtekeningen bevat. anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  id: ParentWindow
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: ParentWindow
  nameWithType: PackageDigitalSignatureManager.ParentWindow
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Opgehaald of ingesteld van een koppeling naar het bovenliggende venster voor het weergeven van het dialoogvenster certificaat selecteren."
  remarks: "Een dialoogvenster voor selectie van certificaat wordt alleen weergegeven als een <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>aanroep bevat geen certificaten.</xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> Als er geen certificaten worden opgegeven, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>, ziet u een selectie van het dialoogvenster certificaat waarmee de gebruiker om te kiezen welk certificaat voor ondertekening.</xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>"
  syntax:
    content: public IntPtr ParentWindow { get; set; }
    return:
      type: System.IntPtr
      description: "De koppeling van het bovenliggende venster moet worden gebruikt om het dialoogvenster voor selectie van certificaat weer te geven."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures
  id: RemoveAllSignatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: RemoveAllSignatures()
  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hiermee verwijdert u alle digitale handtekeningen van het pakket."
  remarks: "Deze methode wordt ook alle X.509-certificaten van het pakket verwijderd.  Na het verwijderen van alle handtekeningen en certificaten, roepen <xref:System.IO.Packaging.Package.Flush%2A>om alle wijzigingen naar de store te behouden.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: public void RemoveAllSignatures ();
    parameters: []
  overload: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)
  id: RemoveSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: RemoveSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.RemoveSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hiermee verwijdert u de digitale handtekening met een bepaalde ondertekening [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  remarks: "Deze methode wordt ook het bijbehorende X.509-certificaat verwijderd als deze niet wordt verwezen door andere digitale handtekening.       Na het verwijderen van een handtekening aanroepen <xref:System.IO.Packaging.Package.Flush%2A>om vast te leggen van de wijziging aan het archief.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: public void RemoveSignature (Uri signatureUri);
    parameters:
    - id: signatureUri
      type: System.Uri
      description: "De [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] van de <xref href=&quot;System.IO.Packaging.PackageDigitalSignature&quot;> </xref> te verwijderen."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Vraagt de gebruiker om een X.509-certificaat vervolgens gebruikt wordt om een opgegeven lijst met pakketonderdelen digitaal te ondertekenen."
  remarks: "Als u het dialoogvenster certificaat selecteren voor een bepaald venster modaal, stelt de <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>eigenschap voordat u de aanmelding.</xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>       Aanmelding wordt niet gevraagd voor certificaten als er geen in het standaard certificaatarchief."
  example:
  - "The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "De lijst met [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] voor de <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> elementen aan te melden."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "De digitale handtekening gebruikt voor het ondertekenen van de lijst met <code> parts </code>."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Een lijst van pakketonderdelen met een opgegeven X.509-certificaat ondertekent."
  remarks: ''
  example:
  - "The following example shows how to digitally sign a list of parts within a <xref:System.IO.Packaging.Package>.  For the complete example, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "De lijst met [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] voor de <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> elementen aan te melden."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Het X.509-certificaat te gebruiken om elk van de opgegeven digitaal te ondertekenen `parts`."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "De digitale handtekening gebruikt voor het ondertekenen van de opgegeven lijst met <code> parts </code>; of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als er geen certificaat gevonden of de gebruiker heeft geklikt &quot;Annuleren&quot; in het dialoogvenster certificaat selecteren."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Een lijst van pakketonderdelen- en relaties pakket met een opgegeven X.509-certificaat ondertekent."
  remarks: "Tussen `parts` en `relationshipSelectors` er moet ten minste één element aan te melden."
  example:
  - "The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "De lijst met [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] voor de <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objecten aan te melden."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Het X.509-certificaat te gebruiken om elk van de opgegeven delen en relaties digitaal te ondertekenen."
    - id: relationshipSelectors
      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
      description: "De lijst met <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> objecten aan te melden."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "De digitale handtekening gebruikt voor het ondertekenen van de elementen die zijn opgegeven in de <code> parts </code> en <code> relationshipSelectors </code> bevat."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Noch <code> parts </code> noch <code> relationshipSelectors </code> Geef eventuele objecten aan te melden."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Een lijst van pakketonderdelen- en relaties pakket met een opgegeven X.509-certificaat ondertekent en [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "De `parts` lijst kan niet leeg zijn of `null` als `relationshipSelectors` bevat ten minste één item.       De `relationshipSelectors` lijst kan niet leeg zijn of `null` als `parts` bevat ten minste één item.       Tussen de `parts` lijst en `relationshipSelectors` er moet ten minste één element aan te melden."
  example:
  - "The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors, string signatureId);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "De lijst met [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] voor de <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objecten aan te melden."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Het X.509-certificaat te gebruiken om elk van de opgegeven delen en relaties digitaal te ondertekenen."
    - id: relationshipSelectors
      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
      description: "De lijst met <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> objecten aan te melden."
    - id: signatureId
      type: System.String
      description: "Een id-tekenreeks om te koppelen aan de handtekening."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "De digitale handtekening gebruikt voor het ondertekenen van de elementen die zijn opgegeven in de <code> parts </code> en <code> relationshipSelectors </code> bevat."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Noch <code> parts </code> noch <code> relationshipSelectors </code> Geef eventuele elementen aan te melden."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Een lijst van pakketonderdelen, pakket relaties of aangepaste objecten met een opgegeven x.509-certificaat en de handtekening ondertekent [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "Er moet ten minste één element aan te melden `parts`, `relationshipSelectors`, `signatureObjects`, of `objectReferences`.      > [!NOTE] > De voorwaarden `Object`, `Manifest`, `Reference`, `SignatureProperties`, en `Transform` in de volgende twee opmerkingen verwijzen naar elementtypen en labels die zijn gedefinieerd door de specificatie W3C XML-handtekening syntaxis en verwerking, Zie [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/).       Deze en andere <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>methode overloads gebruikgemaakt van de huidige <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A>woordenlijst die definieert een `Transform` om toe te passen op basis van het pakketonderdeel <xref:System.IO.Packaging.PackagePart.ContentType%2A>.</xref:System.IO.Packaging.PackagePart.ContentType%2A> </xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> </xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>  De Microsoft Open Packaging Conventions (OPC)-specificatie momenteel kan slechts twee geldige `Transform` algoritmen: C14 en C14N.  De standaard W3C XML-handtekening syntaxis en verwerking kan geen leeg `Manifest` labels.  De Open Packaging Conventions-specificatie moet u ook een <xref:System.IO.Packaging.Package>-specifieke `Object` -tag met beide `Manifest` en `SignatureProperties` labels.</xref:System.IO.Packaging.Package>  Elke `Manifest` tag bovendien ook ten minste één `Reference` label.  Deze tags vereist dat elke handtekening ondertekend ten minste één <xref:System.IO.Packaging.PackagePart>(niet-lege onderdelen tag) of <xref:System.IO.Packaging.PackageRelationship>(niet-lege `relationshipSelectors`) zelfs als de handtekening is vereist alleen aan te melden `signatureObjects` of `objectReferences`.</xref:System.IO.Packaging.PackageRelationship> </xref:System.IO.Packaging.PackagePart>       Deze methode aanmelding negeert de <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>eigenschap die is gekoppeld aan elk <xref:System.Security.Cryptography.Xml.Reference>gedefinieerd in `objectReferences`.</xref:System.Security.Cryptography.Xml.Reference> </xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>       Deze aanmelding overbelasting biedt ondersteuning voor het genereren van [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] handtekeningen waarvoor aangepaste `Object` labels.  Voor een opgegeven `Object` code te worden ondertekend, een overeenkomstige `Reference` label moet worden opgegeven met een [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] die aangeeft de `Object` -tag in lokale fragment-syntaxis.  Bijvoorbeeld als de `Object` -label heeft een ID van &quot;myObject&quot;, de URI in de `Reference` label &quot;#myObject&quot; zijn.  Voor niet-ondertekende objecten niet `Reference` is vereist."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.DataObject> signatureObjects, System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.Reference> objectReferences);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "De lijst met [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] voor de <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objecten aan te melden."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Het X.509-certificaat te gebruiken om elk van de opgegeven delen en relaties digitaal te ondertekenen."
    - id: relationshipSelectors
      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
      description: "De lijst met <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> objecten aan te melden."
    - id: signatureId
      type: System.String
      description: "Een id-tekenreeks om te koppelen aan de handtekening."
    - id: signatureObjects
      type: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject}
      description: "Een lijst met objecten van aangepaste gegevens aan te melden."
    - id: objectReferences
      type: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference}
      description: "Een lijst met verwijzingen naar aangepaste objecten aan te melden."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "De digitale handtekening gebruikt voor het ondertekenen van de elementen die zijn opgegeven in de <code> parts </code> en <code> relationshipSelectors </code> bevat."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Neither <code>parts</code>, <code>relationshipSelectors</code>, <code>signatureObjects</code>, nor <code>objectReferences</code> specify any elements to sign."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Een <> </> *> van een onderdeel wordt ondertekend verwijst naar een lege <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, of niet-gedefinieerde <> </> *>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>signatureId</code>is geen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> en is geen geldige [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] schema-ID (bijvoorbeeld begint met een toonaangevende numerieke cijfer)."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  id: SignatureOrigin
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: SignatureOrigin
  nameWithType: PackageDigitalSignatureManager.SignatureOrigin
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Haalt de [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] van het onderdeel van de oorsprong handtekening."
  remarks: "De SignatureOrigin [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] kunt verschillen per pakket, omdat de naam niet formeel is gedefinieerd. Tijdens deze implementatie doorgaans voor dezelfde standaardwaarde gebruikt wordt, weerspiegelt waarde geretourneerd door deze eigenschap de oorsprong is al aanwezig in de huidige <xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package>"
  syntax:
    content: public Uri SignatureOrigin { get; }
    return:
      type: System.Uri
      description: "De [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] van het onderdeel van de oorsprong handtekening."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  id: SignatureOriginRelationshipType
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: SignatureOriginRelationshipType
  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hiermee wordt het type standaard signature origin relationship."
  syntax:
    content: public static string SignatureOriginRelationshipType { get; }
    return:
      type: System.String
      description: "Het type standaard signature origin relationship."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  id: Signatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Signatures
  nameWithType: PackageDigitalSignatureManager.Signatures
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hiermee haalt u een verzameling van de handtekeningen die zijn opgenomen in het pakket."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature> Signatures { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageDigitalSignature}
      description: "Een verzameling van alle de <xref href=&quot;System.IO.Packaging.PackageDigitalSignature&quot;> </xref> objecten."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Signatures*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  id: TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: TimeFormat
  nameWithType: PackageDigitalSignatureManager.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Opgehaald of ingesteld van de datum/tijd-indeling gebruikt voor het maken van een handtekening <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>"
  remarks: "De standaardwaarde TimeFormat is &quot;Jjjj-MM-DDThh:mm:ss.sTZD&quot;.       Datum/tijd indelingen Ga als volgt de syntaxis van de specificatie &quot;W3C datum en tijd indelingen&quot; op [http://www.w3.org/TR/Note-datetime.html](http://www.w3.org/TR/Note-datetime.html). De onderstaande onderdelen moeten aanwezig zijn en gebruik de syntaxis en leestekens zoals is gedefinieerd.      | TimeFormat | Beschrijving | Voorbeeld |   |----------------|-----------------|-------------|   | JJJJ | Jaar | 2005 |   | JJJJ-MM | Jaar en maand | 2005-07 |   | JJJJ-MM-DD | Datum voltooid | 2005-07-28 |   | JJJJ-MM-DDThh:mmTZD | Datum plus uren en minuten voltooien | 2005-07-28T19:20-01:00 uur |   | JJJJ-MM-DDThh:mm:ssTZD | Datum plus uren, minuten en seconden worden voltooid | 2005-07-28T19:20:45-01:00 uur |   | JJJJ-MM-DDThh:mm:ss.sTZD| Datum plus uren, minuten en seconden met een decimale fractie voltooien | 2005-07-28T19:20:45.75-01:00 uur |       waarbij: |||   |-|-|   | JJJJ | jaar met vier cijfers (bijvoorbeeld 2005) |   | MM | jaartallen met twee maand (01 januari =) |   | DD | jaartallen met twee dag van de maand (01 tot en met 31) |   | Thh | jaartallen met twee uur (00 tot 23, 24-uurs notatie) |   | mm | twee cijfers van minuten (00 tot en met 59) |   | ss | twee cijfers van seconden (00 tot en met 59) |   | s | een of meer cijfers die vertegenwoordigt een decimale fracion van een seconde |   | TZD | tijdzone eenheidsaanduiding (Z of + uu: mm- of - uu: mm) |"
  syntax:
    content: public string TimeFormat { get; set; }
    return:
      type: System.String
      description: "De datum/tijd-indeling gebruikt voor het maken van een handtekening <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>"
  overload: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  id: TransformMapping
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: TransformMapping
  nameWithType: PackageDigitalSignatureManager.TransformMapping
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Opgehaald van een woordenboek waarin elke gedefinieerde <> </> *> en de daaraan gekoppelde [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref>.<> </> *> id."
  remarks: "De transformatie-algoritme voor elk type inhoud wordt tijdens een bewerking voor aanmelding toegepast voordat de <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>wordt uitgevoerd.</xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>       Standaardtoewijzingen inhoud en transformatie bevatten: | Inhoud | ContentType | Transformatie-algoritme-id |   |-------------|-----------------|------------------------------------|   | Relatie | &quot; application/vnd.openxmlformats-Package.Relationships+XML&quot;| <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|   | Digitale handtekening | &quot; application/vnd.openxmlformats-Package.Digital-Signature-xmlsignature+XML&quot;| <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl></xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>"
  syntax:
    content: public System.Collections.Generic.Dictionary<string,string> TransformMapping { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: "Een woordenlijst die elke gedefinieerde bevat <> </> *> en de daaraan gekoppelde [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref>.<> </> *> id."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: VerifyCertificate(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Controleert of een bepaald X.509-certificaat."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Het X.509-certificaat om te controleren."
    return:
      type: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509ChainStatusFlags&quot;></xref>(waarde 0) als het certificaat geverifieerd; anders wordt vlaggen een bitsgewijze opsomming fout."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)
  id: VerifySignatures(System.Boolean)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: VerifySignatures(Boolean)
  nameWithType: PackageDigitalSignatureManager.VerifySignatures(Boolean)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Controleert of de handtekeningen op alle ondertekende delen in het pakket."
  remarks: "Deze methode controleert of alleen de digitale handtekeningen. de verwante X.509-certificaten niet gecontroleerd.  De <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A>methode kan worden gebruikt om te controleren of de X.509-certificaten.</xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A>"
  example:
  - "The following example shows how to use this method to validate all signed parts within a package.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigvalidate)]\n [!code-cs[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigvalidate)]"
  syntax:
    content: public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);
    parameters:
    - id: exitOnFailure
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om af te sluiten op de eerste fout; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> gaan en controleren van alle handtekeningen."
    return:
      type: System.IO.Packaging.VerifyResult
      description: "<xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref>(waarde 0) als alle handtekeningen zijn geverifieerd; anders wordt een opsomming waarin de fout."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: PackageDigitalSignatureManager(Package)
  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: CertificateOption
  nameWithType: PackageDigitalSignatureManager.CertificateOption
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
- uid: System.IO.Packaging.CertificateEmbeddingOption
  parent: System.IO.Packaging
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: CertificateEmbeddingOption
  fullName: System.IO.Packaging.CertificateEmbeddingOption
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign()
  nameWithType: PackageDigitalSignatureManager.Countersign()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign()
- uid: System.IO.Packaging.PackageDigitalSignature
  parent: System.IO.Packaging
  isExternal: false
  name: PackageDigitalSignature
  nameWithType: PackageDigitalSignature
  fullName: System.IO.Packaging.PackageDigitalSignature
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign(X509Certificate,IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: DefaultHashAlgorithm
  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: GetSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.GetSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: HashAlgorithm
  nameWithType: PackageDigitalSignatureManager.HashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
- uid: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: InvalidSignatureEvent
  nameWithType: PackageDigitalSignatureManager.InvalidSignatureEvent
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
- uid: System.IO.Packaging.InvalidSignatureEventHandler
  parent: System.IO.Packaging
  isExternal: false
  name: InvalidSignatureEventHandler
  nameWithType: InvalidSignatureEventHandler
  fullName: System.IO.Packaging.InvalidSignatureEventHandler
- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: IsSigned
  nameWithType: PackageDigitalSignatureManager.IsSigned
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: ParentWindow
  nameWithType: PackageDigitalSignatureManager.ParentWindow
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveAllSignatures()
  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures()
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.RemoveSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(Uri)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
- uid: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<PackageRelationshipSelector>
  nameWithType: IEnumerable<PackageRelationshipSelector>
  fullName: System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IO.Packaging.PackageRelationshipSelector>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Packaging.PackageRelationshipSelector
    name: PackageRelationshipSelector
    nameWithType: PackageRelationshipSelector
    fullName: PackageRelationshipSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DataObject>
  nameWithType: IEnumerable<DataObject>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.DataObject>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Cryptography.Xml.DataObject>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.DataObject
    name: DataObject
    nameWithType: DataObject
    fullName: DataObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Reference>
  nameWithType: IEnumerable<Reference>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.Reference>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Cryptography.Xml.Reference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.Reference
    name: Reference
    nameWithType: Reference
    fullName: Reference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOrigin
  nameWithType: PackageDigitalSignatureManager.SignatureOrigin
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOriginRelationshipType
  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Signatures
  nameWithType: PackageDigitalSignatureManager.Signatures
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageDigitalSignature}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PackageDigitalSignature>
  nameWithType: ReadOnlyCollection<PackageDigitalSignature>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Packaging.PackageDigitalSignature
    name: PackageDigitalSignature
    nameWithType: PackageDigitalSignature
    fullName: PackageDigitalSignature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignatureManager.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TransformMapping
  nameWithType: PackageDigitalSignatureManager.TransformMapping
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,String>
  nameWithType: Dictionary<String,String>
  fullName: System.Collections.Generic.Dictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifyCertificate(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainStatusFlags
  nameWithType: X509ChainStatusFlags
  fullName: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifySignatures(Boolean)
  nameWithType: PackageDigitalSignatureManager.VerifySignatures(Boolean)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(Boolean)
- uid: System.IO.Packaging.VerifyResult
  parent: System.IO.Packaging
  isExternal: false
  name: VerifyResult
  nameWithType: VerifyResult
  fullName: System.IO.Packaging.VerifyResult
- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: PackageDigitalSignatureManager
  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager
- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: CertificateOption
  nameWithType: PackageDigitalSignatureManager.CertificateOption
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign
  nameWithType: PackageDigitalSignatureManager.Countersign
- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: DefaultHashAlgorithm
  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm
- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: GetSignature
  nameWithType: PackageDigitalSignatureManager.GetSignature
- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: HashAlgorithm
  nameWithType: PackageDigitalSignatureManager.HashAlgorithm
- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: IsSigned
  nameWithType: PackageDigitalSignatureManager.IsSigned
- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: ParentWindow
  nameWithType: PackageDigitalSignatureManager.ParentWindow
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveAllSignatures
  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveSignature
  nameWithType: PackageDigitalSignatureManager.RemoveSignature
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign
  nameWithType: PackageDigitalSignatureManager.Sign
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOrigin
  nameWithType: PackageDigitalSignatureManager.SignatureOrigin
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOriginRelationshipType
  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Signatures
  nameWithType: PackageDigitalSignatureManager.Signatures
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignatureManager.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TransformMapping
  nameWithType: PackageDigitalSignatureManager.TransformMapping
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifyCertificate
  nameWithType: PackageDigitalSignatureManager.VerifyCertificate
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifySignatures
  nameWithType: PackageDigitalSignatureManager.VerifySignatures
