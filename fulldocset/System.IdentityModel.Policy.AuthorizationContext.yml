### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Policy.AuthorizationContext
  id: AuthorizationContext
  children:
  - System.IdentityModel.Policy.AuthorizationContext.#ctor
  - System.IdentityModel.Policy.AuthorizationContext.ClaimSets
  - System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})
  - System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
  - System.IdentityModel.Policy.AuthorizationContext.Id
  - System.IdentityModel.Policy.AuthorizationContext.Properties
  langs:
  - csharp
  name: AuthorizationContext
  nameWithType: AuthorizationContext
  fullName: System.IdentityModel.Policy.AuthorizationContext
  type: Class
  summary: "Het resultaat van evaluatie van alle autorisatiebeleid beschikbaar is via de tokens in het bericht verzonden en door het aanroepen van de <xref:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies*>methode.</xref:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies*>"
  remarks: "Evaluatie van alle beleidsregels voor autorisatie in een Autorisatiebeheer resulteert in een reeks <xref:System.IdentityModel.Claims.ClaimSet>objecten.</xref:System.IdentityModel.Claims.ClaimSet> Deze objecten vormen een autorisatiecontext.       Een autorisatiecontext bevat een set van objecten in de claim-set, een verlooptijd waarmee de hoeveelheid tijd gedurende welke de autorisatiecontext geldig is, en een unieke id.       De AuthorizationContext voor de huidige bewerking toegankelijk via de <xref:System.ServiceModel.ServiceSecurityContext.AuthorizationContext%2A>eigenschap.</xref:System.ServiceModel.ServiceSecurityContext.AuthorizationContext%2A>"
  example:
  - >-
    [!code-cs[C_IAuthorizationPolicy#4](~/add/codesnippet/csharp/t-system.identitymodel.p_2_1.cs)]
     [!code-vb[C_IAuthorizationPolicy#4](~/add/codesnippet/visualbasic/t-system.identitymodel.p_2_1.vb)]
  syntax:
    content: 'public abstract class AuthorizationContext : System.IdentityModel.Policy.IAuthorizationComponent'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Policy.IAuthorizationComponent
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: AuthorizationContext()
  nameWithType: AuthorizationContext.AuthorizationContext()
  fullName: System.IdentityModel.Policy.AuthorizationContext.AuthorizationContext()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> klasse."
  remarks: "De standaardconstructor gebeurt er niets."
  syntax:
    content: protected AuthorizationContext ();
    parameters: []
  overload: System.IdentityModel.Policy.AuthorizationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.ClaimSets
  id: ClaimSets
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: ClaimSets
  nameWithType: AuthorizationContext.ClaimSets
  fullName: System.IdentityModel.Policy.AuthorizationContext.ClaimSets
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Hiermee haalt u de set claims die zijn gekoppeld aan een autorisatiebeleid."
  remarks: "Gebruik de eigenschap ClaimSets om de set claims die zijn toegevoegd door het verificatiebeleid te krijgen. Een klasse die zijn afgeleid van <xref:System.ServiceModel.ServiceAuthorizationManager>de claims kunt gebruiken om autorisatiebeslissingen te nemen.</xref:System.ServiceModel.ServiceAuthorizationManager>"
  example:
  - >-
    [!code-cs[C_IAuthorizationPolicy#5](~/add/codesnippet/csharp/p-system.identitymodel.p_1.cs)]
     [!code-vb[C_IAuthorizationPolicy#5](~/add/codesnippet/visualbasic/p-system.identitymodel.p_1.vb)]
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet> ClaimSets { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}
      description: "Een &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; van het type <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> die de set claims bevat."
  overload: System.IdentityModel.Policy.AuthorizationContext.ClaimSets*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})
  id: CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  nameWithType: AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  fullName: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Alle van de opgegeven autorisatiebeleid evalueren en maak een <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref>."
  remarks: "De methode CreateDefaultAuthorizationContext wordt doorgaans alleen gebruikt door de infrastructuur."
  syntax:
    content: public static System.IdentityModel.Policy.AuthorizationContext CreateDefaultAuthorizationContext (System.Collections.Generic.IList<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies);
    parameters:
    - id: authorizationPolicies
      type: System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "Een &lt;xref:System.Collections.Generic.IList%601&gt; van <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> die de set autorisatiebeleid bevat."
    return:
      type: System.IdentityModel.Policy.AuthorizationContext
      description: "Een <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> die het resultaat van evaluatie van de opgegeven autorisatiebeleid bevat."
  overload: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
  id: ExpirationTime
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: ExpirationTime
  nameWithType: AuthorizationContext.ExpirationTime
  fullName: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "De datum en tijd op waarop dit opgehaald <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> object is niet meer geldig."
  remarks: "De eigenschap ExpirationTime is Universal Coordinated Time (UTC).      > [!NOTE] > Het servicemodel in [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] controleert de waarde van de eigenschap ExpirationTime niet. Deze eigenschap is ingesteld door [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] met behulp van de <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>eigenschap van het beveiligingstoken op waarop de autorisatiecontext is gebaseerd.</xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> De <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>eigenschap wordt gecontroleerd door [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]echter.</xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> De verlooptijd van de autorisatiecontext is bedoeld voor scenario&quot;s zoals een autorisatiebeleid met specifieke acties na afloop uitvoeren."
  syntax:
    content: public abstract DateTime ExpirationTime { get; }
    return:
      type: System.DateTime
      description: "Een <xref:System.DateTime>waarde geeft de datum en tijd wanneer dit <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> object is niet meer geldig.</xref:System.DateTime>"
  overload: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.Id
  id: Id
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: Id
  nameWithType: AuthorizationContext.Id
  fullName: System.IdentityModel.Policy.AuthorizationContext.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Hiermee wordt een unieke id voor dit <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> object."
  remarks: "De eigenschap Id is meestal een GUID."
  syntax:
    content: public abstract string Id { get; }
    return:
      type: System.String
      description: "A <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;></xref> object."
  overload: System.IdentityModel.Policy.AuthorizationContext.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.Properties
  id: Properties
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: Properties
  nameWithType: AuthorizationContext.Properties
  fullName: System.IdentityModel.Policy.AuthorizationContext.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Hiermee wordt een verzameling van niet-claimeigenschappen die zijn gekoppeld aan dit <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> object."
  remarks: '[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]twee eigenschappen zijn gereserveerd: `Identities` en `Principal`. De `Identities` eigenschap wordt gebruikt door een <xref:System.IdentityModel.Policy.IAuthorizationPolicy>om op te geven de <xref:System.Collections.Generic.IList%601>van een of meer id&quot;s die zijn gerelateerd aan de <xref:System.IdentityModel.Policy.AuthorizationContext>.</xref:System.IdentityModel.Policy.AuthorizationContext> </xref:System.Collections.Generic.IList%601> </xref:System.IdentityModel.Policy.IAuthorizationPolicy> De `Principal` eigenschap wordt gebruikt door een <xref:System.IdentityModel.Policy.IAuthorizationPolicy>om op te geven de <xref:System.Security.Principal.IPrincipal>dat is gekoppeld aan een <xref:System.IdentityModel.Policy.AuthorizationContext>.</xref:System.IdentityModel.Policy.AuthorizationContext> </xref:System.Security.Principal.IPrincipal> </xref:System.IdentityModel.Policy.IAuthorizationPolicy>'
  syntax:
    content: public abstract System.Collections.Generic.IDictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Een &lt;xref:System.Collections.Generic.Dictionary%602&gt; die aangeeft dat een verzameling van niet-claimeigenschappen."
  overload: System.IdentityModel.Policy.AuthorizationContext.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Policy.AuthorizationContext.#ctor
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: AuthorizationContext()
  nameWithType: AuthorizationContext.AuthorizationContext()
  fullName: System.IdentityModel.Policy.AuthorizationContext.AuthorizationContext()
- uid: System.IdentityModel.Policy.AuthorizationContext.ClaimSets
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: ClaimSets
  nameWithType: AuthorizationContext.ClaimSets
  fullName: System.IdentityModel.Policy.AuthorizationContext.ClaimSets
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimSet>
  nameWithType: ReadOnlyCollection<ClaimSet>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.ClaimSet
    name: ClaimSet
    nameWithType: ClaimSet
    fullName: ClaimSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  nameWithType: AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  fullName: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
- uid: System.IdentityModel.Policy.AuthorizationContext
  parent: System.IdentityModel.Policy
  isExternal: false
  name: AuthorizationContext
  nameWithType: AuthorizationContext
  fullName: System.IdentityModel.Policy.AuthorizationContext
- uid: System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<IAuthorizationPolicy>
  nameWithType: IList<IAuthorizationPolicy>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: ExpirationTime
  nameWithType: AuthorizationContext.ExpirationTime
  fullName: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Policy.AuthorizationContext.Id
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: Id
  nameWithType: AuthorizationContext.Id
  fullName: System.IdentityModel.Policy.AuthorizationContext.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Policy.AuthorizationContext.Properties
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: Properties
  nameWithType: AuthorizationContext.Properties
  fullName: System.IdentityModel.Policy.AuthorizationContext.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Policy.AuthorizationContext.#ctor*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: AuthorizationContext
  nameWithType: AuthorizationContext.AuthorizationContext
- uid: System.IdentityModel.Policy.AuthorizationContext.ClaimSets*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: ClaimSets
  nameWithType: AuthorizationContext.ClaimSets
- uid: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: CreateDefaultAuthorizationContext
  nameWithType: AuthorizationContext.CreateDefaultAuthorizationContext
- uid: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: ExpirationTime
  nameWithType: AuthorizationContext.ExpirationTime
- uid: System.IdentityModel.Policy.AuthorizationContext.Id*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: Id
  nameWithType: AuthorizationContext.Id
- uid: System.IdentityModel.Policy.AuthorizationContext.Properties*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: Properties
  nameWithType: AuthorizationContext.Properties
