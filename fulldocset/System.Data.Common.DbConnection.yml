### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbConnection
  id: DbConnection
  children:
  - System.Data.Common.DbConnection.#ctor
  - System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.BeginTransaction
  - System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.ChangeDatabase(System.String)
  - System.Data.Common.DbConnection.Close
  - System.Data.Common.DbConnection.ConnectionString
  - System.Data.Common.DbConnection.ConnectionTimeout
  - System.Data.Common.DbConnection.CreateCommand
  - System.Data.Common.DbConnection.CreateDbCommand
  - System.Data.Common.DbConnection.Database
  - System.Data.Common.DbConnection.DataSource
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.Common.DbConnection.GetSchema
  - System.Data.Common.DbConnection.GetSchema(System.String)
  - System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.Open
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.ServerVersion
  - System.Data.Common.DbConnection.State
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
  type: Class
  summary: "Hiermee geeft u een verbinding met een database."
  syntax:
    content: 'public abstract class DbConnection : System.ComponentModel.Component, IDisposable, System.Data.IDbConnection'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Data.IDbConnection
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbConnection.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: DbConnection()
  nameWithType: DbConnection.DbConnection()
  fullName: System.Data.Common.DbConnection.DbConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> klasse."
  syntax:
    content: protected DbConnection ();
    parameters: []
  overload: System.Data.Common.DbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Een databasetransactie start."
  remarks: "Als u uw eigen verbindingstype maakt, moet u deze methode voor het implementeren van de code die nodig is om te beginnen met een transactie overschrijven."
  syntax:
    content: protected abstract System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Hiermee geeft u het isolatieniveau voor de transactie."
    return:
      type: System.Data.Common.DbTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.Common.DbConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: DbConnection.BeginTransaction()
  fullName: System.Data.Common.DbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Een databasetransactie start."
  remarks: "Als u een isolatieniveau niet opgeeft, wordt het isolatieniveau standaard voor het specifieke type verbinding gebruikt."
  syntax:
    content: public System.Data.Common.DbTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.Common.DbTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.Common.DbConnection.BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Een databasetransactie begint met het opgegeven isolatieniveau."
  syntax:
    content: public System.Data.Common.DbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Hiermee geeft u het isolatieniveau voor de transactie."
    return:
      type: System.Data.Common.DbTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.Common.DbConnection.BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: DbConnection.ChangeDatabase(String)
  fullName: System.Data.Common.DbConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee wijzigt u de huidige database voor een open verbinding."
  remarks: "De waarde die is opgegeven de `databaseName` parameter moet een geldige databasenaam op voor het huidige exemplaar."
  syntax:
    content: public abstract void ChangeDatabase (string databaseName);
    parameters:
    - id: databaseName
      type: System.String
      description: "Hiermee geeft u de naam van de database voor de verbinding moet gebruiken."
  overload: System.Data.Common.DbConnection.ChangeDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.Close
  id: Close
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Close()
  nameWithType: DbConnection.Close()
  fullName: System.Data.Common.DbConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee sluit u de verbinding met de database. Dit is de voorkeursmethode voor een open verbinding wordt gesloten."
  remarks: "De methode Close teruggedraaid in de transacties die in behandeling. Vervolgens de verbinding met de verbindingsgroep releases of de verbinding wordt gesloten als Groepsgewijze verbinding nodig is uitgeschakeld.       Een toepassing kunt sluiten meer dan één keer aanroepen. Er is geen uitzondering gegenereerd.       Als de <xref:System.Data.Common.DbConnection>gaan buiten bereik, dit niet is gesloten.</xref:System.Data.Common.DbConnection> Daarom moet u expliciet sluiten de verbinding door het aanroepen van `Close` of `Dispose`, die functioneel equivalent zijn. Als de verbindingsgroepering waarde `Pooling` is ingesteld op `true` of `yes`, dit ook de fysieke verbinding releases.      > [!CAUTION] > Niet aanroepen `Close` of `Dispose` op een **verbinding**, een **DataReader**, of een beheerd object in de `Finalize` methode van de klasse. In een finalizer, moet u alleen niet-beheerde bronnen waartoe de klasse rechtstreeks vrijgeven. Als uw klasse is geen eigenaar van een niet-beheerde bronnen, bevatten geen een `Finalize` methode in de klassedefinitie van de. Zie voor meer informatie [garbagecollection](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public abstract void Close ();
    parameters: []
  overload: System.Data.Common.DbConnection.Close*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "De verbindingsniveau fout die is opgetreden tijdens het openen van de verbinding."
  platform:
  - net462
- uid: System.Data.Common.DbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: DbConnection.ConnectionString
  fullName: System.Data.Common.DbConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Opgehaald of ingesteld van de tekenreeks die wordt gebruikt om de verbinding te openen."
  remarks: "De exacte inhoud van de verbindingsreeks is afhankelijk van de gegevensbron voor deze verbinding. Om te bepalen welke instellingen geldig zijn, Zie de documentatie voor het specifieke type van de verbinding die u gebruikt."
  syntax:
    content: public abstract string ConnectionString { get; set; }
    return:
      type: System.String
      description: "De verbindingsreeks die wordt gebruikt om de initiële verbinding maken. De exacte inhoud van de verbindingsreeks is afhankelijk van de gegevensbron voor deze verbinding. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.Common.DbConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: DbConnection.ConnectionTimeout
  fullName: System.Data.Common.DbConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Met deze eigenschap moet worden gewacht tijdens het maken van een verbinding tot stand voordat de poging wordt afgebroken en een fout optreedt."
  syntax:
    content: public virtual int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "De tijd (in seconden) moet worden gewacht voor een verbinding te openen. De standaardwaarde is bepaald door het specifieke type van de verbinding die u gebruikt."
  overload: System.Data.Common.DbConnection.ConnectionTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: DbConnection.CreateCommand()
  fullName: System.Data.Common.DbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Maakt en retourneert een <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> object dat is gekoppeld aan de huidige verbinding."
  syntax:
    content: public System.Data.Common.DbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "A <xref href=&quot;System.Data.Common.DbCommand&quot;></xref> object."
  overload: System.Data.Common.DbConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: DbConnection.CreateDbCommand()
  fullName: System.Data.Common.DbConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Maakt en retourneert een <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> object dat is gekoppeld aan de huidige verbinding."
  remarks: "Als u uw eigen verbinding implementeert, overschrijven deze methode voor het implementeren van de code die nodig zijn om te maken en retourneren een <xref:System.Data.Common.DbCommand>object.</xref:System.Data.Common.DbCommand>"
  syntax:
    content: protected abstract System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "A <xref href=&quot;System.Data.Common.DbCommand&quot;></xref> object."
  overload: System.Data.Common.DbConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.Database
  id: Database
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Database
  nameWithType: DbConnection.Database
  fullName: System.Data.Common.DbConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee haalt u de naam van de huidige database nadat een verbinding is geopend, of de databasenaam opgegeven in de verbindingsreeks voordat de verbinding is geopend."
  remarks: "Een verbinding doorgaans deze eigenschap dynamisch bijgewerkt wanneer de huidige database wordt gewijzigd."
  syntax:
    content: public abstract string Database { get; }
    return:
      type: System.String
      description: "De naam van de huidige database of de naam van de database moet worden gebruikt wanneer een verbinding is geopend. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.Common.DbConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.DataSource
  id: DataSource
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: DbConnection.DataSource
  fullName: System.Data.Common.DbConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "De naam van de database-server waarmee verbinding moet worden opgehaald."
  remarks: "Als de verbinding met de database is gesloten, wordt de gegevensbron retourneert wat is opgenomen in de <xref:System.Data.Common.DbConnection.ConnectionString%2A>voor de `DataSource` sleutelwoord.</xref:System.Data.Common.DbConnection.ConnectionString%2A> Als de verbinding geopend is en de <xref:System.Data.Common.DbConnection.ConnectionString%2A>data source sleutelwoord waarde begint met &quot;|`datadirectory`| &quot;, de eigenschap retourneert wat is opgenomen in de <xref:System.Data.Common.DbConnection.ConnectionString%2A>voor de `DataSource` alleen sleutelwoord.</xref:System.Data.Common.DbConnection.ConnectionString%2A> </xref:System.Data.Common.DbConnection.ConnectionString%2A> Als de verbinding met de database geopend is, wordt de eigenschap retourneert de systeemeigen provider retourneert voor de `DBPROP_INIT_DATASOURCE`, en als die niet leeg is, wordt de systeemeigen provider `DBPROP_DATASOURCENAME` wordt geretourneerd."
  syntax:
    content: public abstract string DataSource { get; }
    return:
      type: System.String
      description: "De naam van de databaseserver op waarmee verbinding wordt gemaakt. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.Common.DbConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: DbConnection.DbProviderFactory
  fullName: System.Data.Common.DbConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the <xref href=&quot;System.Data.Common.DbProviderFactory&quot;></xref> for this <xref href=&quot;System.Data.Common.DbConnection&quot;></xref>."
  syntax:
    content: protected virtual System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Een aantal methoden voor het maken van exemplaren van de uitvoering van de provider van de gegevensklassen die bron."
  overload: System.Data.Common.DbConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: DbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Common.DbConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Zich aanmeldt bij de opgegeven transactie."
  remarks: "Nieuw in ADO.NET 2.0 is ondersteuning voor het gebruik van de `EnlistTransaction` methode een aanmeldingspoging in een gedistribueerde transactie. Omdat deze zich aanmeldt met een verbinding in een <xref:System.Transactions.Transaction>exemplaar, `EnlistTransaction` wordt gebruikgemaakt van de functie is beschikbaar in de <xref:System.Transactions>naamruimte voor het beheren van gedistribueerde transacties.</xref:System.Transactions> </xref:System.Transactions.Transaction> Zodra een verbinding expliciet is opgenomen in een transactie, mag niet unenlisted of aangemeld in een andere transactie, totdat de eerste transactie is voltooid."
  syntax:
    content: public virtual void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Een verwijzing naar een bestaande <xref href=&quot;System.Transactions.Transaction&quot;> </xref> waarin een aanmeldingspoging."
  overload: System.Data.Common.DbConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.GetSchema
  id: GetSchema
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: DbConnection.GetSchema()
  fullName: System.Data.Common.DbConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retourneert de schema-informatie voor de gegevensbron van deze <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref>."
  remarks: "Uitvoeren als de verbinding gekoppeld aan een transactie is, `GetSchema` aanroepen kunnen ertoe leiden dat sommige providers is een uitzondering."
  syntax:
    content: public virtual System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die schema-informatie bevat."
  overload: System.Data.Common.DbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: DbConnection.GetSchema(String)
  fullName: System.Data.Common.DbConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retourneert de schema-informatie voor de gegevensbron van deze <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> met behulp van de opgegeven tekenreeks voor de naam van het schema."
  remarks: "Uitvoeren als de verbinding gekoppeld aan een transactie is, `GetSchema` aanroepen kunnen ertoe leiden dat sommige providers is een uitzondering."
  syntax:
    content: public virtual System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Hiermee geeft u de naam van het schema te retourneren."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die schema-informatie bevat."
  overload: System.Data.Common.DbConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>is opgegeven als null."
  platform:
  - net462
- uid: System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: DbConnection.GetSchema(String,String[])
  fullName: System.Data.Common.DbConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retourneert de schema-informatie voor de gegevensbron van deze <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> gebruik van de opgegeven tekenreeks voor de naam van het schema en de matrix van de opgegeven tekenreeks voor de beperkingswaarden."
  remarks: "De `restrictionValues` parameter kan leveren *n* diepte van de waarden die zijn opgegeven met de verzameling met beperkingen voor een specifieke verzameling. Om de waarden instellen op een gegeven beperking en de waarden van andere beperkingen niet is ingesteld, moet u de voorgaande beperkingen voor null- en zet de juiste waarde in voor de beperking die u wilt een waarde opgeven voor.       Een voorbeeld hiervan is de verzameling &quot;Tabellen&quot;. Als de verzameling &quot;Tabellen&quot; drie beperkingen (database-eigenaar en tabelnaam bevat) en u wilt terugkeren van alleen de tabellen die zijn gekoppeld aan de eigenaar van de &quot;Carl&quot;, u moet doorgeven in de volgende waarden ten minste: null, &quot;Carl&quot;. Als een beperkende waarde niet is doorgegeven, worden de standaardwaarden gebruikt voor deze beperking. Dit is dezelfde toewijzing als doorgeven in null, die verschilt van doorgeven in een lege tekenreeks voor de parameterwaarde. In dat geval wordt de lege tekenreeks (&quot;&quot;) wordt beschouwd als de waarde voor de opgegeven parameter.       Uitvoeren als de verbinding gekoppeld aan een transactie is, `GetSchema` aanroepen kunnen ertoe leiden dat sommige providers is een uitzondering."
  syntax:
    content: public virtual System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Hiermee geeft u de naam van het schema te retourneren."
    - id: restrictionValues
      type: System.String[]
      description: "Hiermee geeft u een reeks beperkingswaarden voor het aangevraagde schema."
    return:
      type: System.Data.DataTable
      description: "Een <xref href=&quot;System.Data.DataTable&quot;> </xref> die schema-informatie bevat."
  overload: System.Data.Common.DbConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>is opgegeven als null."
  platform:
  - net462
- uid: System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  id: OnStateChange(System.Data.StateChangeEventArgs)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: OnStateChange(StateChangeEventArgs)
  nameWithType: DbConnection.OnStateChange(StateChangeEventArgs)
  fullName: System.Data.Common.DbConnection.OnStateChange(StateChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Geeft de <xref href=&quot;System.Data.Common.DbConnection.StateChange&quot;> </xref> gebeurtenis."
  remarks: 'Een gebeurtenis te verhogen, roept de gebeurtenis-handler via een gemachtigde. Zie voor een overzicht [KROONTJESPEN: verhogen van een gebeurtenis](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnStateChange (System.Data.StateChangeEventArgs stateChange);
    parameters:
    - id: stateChange
      type: System.Data.StateChangeEventArgs
      description: "Een <xref href=&quot;System.Data.StateChangeEventArgs&quot;> </xref> waarin de gebeurtenisgegevens worden opgeslagen."
  overload: System.Data.Common.DbConnection.OnStateChange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.Open
  id: Open
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Open()
  nameWithType: DbConnection.Open()
  fullName: System.Data.Common.DbConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee opent u de verbinding met een database met de instellingen die zijn opgegeven door de <xref:System.Data.Common.DbConnection.ConnectionString*>.</xref:System.Data.Common.DbConnection.ConnectionString*>"
  remarks: "Deze methode moet worden overschreven met de gebruiker gedefinieerde gedrag. <xref:System.Data.SqlClient.SqlConnection.Open%2A?displayProperty=fullName>genereert een uitzondering als aangeroepen opnieuw zonder eerst wordt gesloten.</xref:System.Data.SqlClient.SqlConnection.Open%2A?displayProperty=fullName>"
  syntax:
    content: public abstract void Open ();
    parameters: []
  overload: System.Data.Common.DbConnection.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.OpenAsync
  id: OpenAsync
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: OpenAsync()
  nameWithType: DbConnection.OpenAsync()
  fullName: System.Data.Common.DbConnection.OpenAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Een asynchrone versie van <> </> *>, waarmee u opent de verbinding met een database met de instellingen die zijn opgegeven door de <> </> *>. Deze methode aanroept virtuele methode <xref:System.Data.Common.DbConnection.OpenAsync*>met CancellationToken.None.</xref:System.Data.Common.DbConnection.OpenAsync*>"
  remarks: "Na het aanroepen <xref:System.Data.Common.DbConnection.OpenAsync%2A>, <xref:System.Data.Common.DbConnection.State%2A>moet retourneren <xref:System.Data.ConnectionState>totdat de geretourneerde <xref:System.Threading.Tasks.Task>is voltooid.</xref:System.Threading.Tasks.Task> </xref:System.Data.ConnectionState> </xref:System.Data.Common.DbConnection.State%2A> </xref:System.Data.Common.DbConnection.OpenAsync%2A> Klik, als de verbinding geslaagd is, <xref:System.Data.Common.DbConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> moet worden geretourneerd.</xref:System.Data.Common.DbConnection.State%2A> Als de verbinding is mislukt, <xref:System.Data.Common.DbConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> moet worden geretourneerd.</xref:System.Data.Common.DbConnection.State%2A>       Een aanroep van <xref:System.Data.Common.DbConnection.Close%2A>probeert te annuleren of sluit de bijbehorende <xref:System.Data.Common.DbConnection.OpenAsync%2A>aanroepen.</xref:System.Data.Common.DbConnection.OpenAsync%2A> </xref:System.Data.Common.DbConnection.Close%2A>       Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task OpenAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.Common.DbConnection.OpenAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: OpenAsync(CancellationToken)
  nameWithType: DbConnection.OpenAsync(CancellationToken)
  fullName: System.Data.Common.DbConnection.OpenAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Dit is de asynchrone versie van <> </> *>. Providers moeten overschrijven met een juiste implementatie. Het token annulering kan eventueel gehonoreerd.       De standaardimplementatie roept de synchrone <> </> *> aanroepen en retourneert een voltooide taak. De standaardimplementatie wordt een geannuleerde taak geretourneerd als er een al geannuleerde cancellationToken worden doorgegeven. Uitzonderingen worden veroorzaakt door openen worden via de geretourneerde taakuitzondering-eigenschap gecommuniceerd.       Kan niet worden aangeroepen, andere methoden en eigenschappen van de <xref uid=&quot;langword_csharp_DbConnection&quot; name=&quot;DbConnection&quot; href=&quot;&quot;> </xref> object totdat de geretourneerde taak voltooid is."
  remarks: "Na het aanroepen <xref:System.Data.Common.DbConnection.OpenAsync%2A>, <xref:System.Data.Common.DbConnection.State%2A>moet retourneren <xref:System.Data.ConnectionState>totdat de geretourneerde <xref:System.Threading.Tasks.Task>is voltooid.</xref:System.Threading.Tasks.Task> </xref:System.Data.ConnectionState> </xref:System.Data.Common.DbConnection.State%2A> </xref:System.Data.Common.DbConnection.OpenAsync%2A> Klik, als de verbinding geslaagd is, <xref:System.Data.Common.DbConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> moet worden geretourneerd.</xref:System.Data.Common.DbConnection.State%2A> Als de verbinding is mislukt, <xref:System.Data.Common.DbConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> moet worden geretourneerd.</xref:System.Data.Common.DbConnection.State%2A>       Een aanroep van <xref:System.Data.Common.DbConnection.Close%2A>probeert te annuleren of sluit de bijbehorende <xref:System.Data.Common.DbConnection.OpenAsync%2A>aanroepen.</xref:System.Data.Common.DbConnection.OpenAsync%2A> </xref:System.Data.Common.DbConnection.Close%2A>       Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie."
    return:
      type: System.Threading.Tasks.Task
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.Common.DbConnection.OpenAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: DbConnection.ServerVersion
  fullName: System.Data.Common.DbConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee haalt u een tekenreeks met de versie van de server waarmee het object is verbonden."
  syntax:
    content: public abstract string ServerVersion { get; }
    return:
      type: System.String
      description: "De versie van de database. De indeling van de tekenreeks die wordt geretourneerd, is afhankelijk van het specifieke type van de verbinding die u gebruikt."
  overload: System.Data.Common.DbConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ServerVersion is aangeroepen terwijl de resulterende taak is niet voltooid en de verbinding is niet geopend na een aanroep van <xref:System.Data.Common.DbConnection.OpenAsync*>.</xref:System.Data.Common.DbConnection.OpenAsync*>"
  platform:
  - net462
- uid: System.Data.Common.DbConnection.State
  id: State
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: State
  nameWithType: DbConnection.State
  fullName: System.Data.Common.DbConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hiermee haalt u een tekenreeks met een beschrijving van de status van de verbinding."
  syntax:
    content: public abstract System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "De status van de verbinding. De indeling van de tekenreeks die wordt geretourneerd, is afhankelijk van het specifieke type van de verbinding die u gebruikt."
  overload: System.Data.Common.DbConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.StateChange
  id: StateChange
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: StateChange
  nameWithType: DbConnection.StateChange
  fullName: System.Data.Common.DbConnection.StateChange
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Deze gebeurtenis treedt op wanneer de status van de gebeurtenis wordt gewijzigd."
  remarks: "De StateChange gebeurtenis treedt op wanneer de status van de gebeurtenis wordt gewijzigd van gesloten geopend of gesloten geopend."
  syntax:
    content: public virtual event System.Data.StateChangeEventHandler StateChange;
    return:
      type: System.Data.StateChangeEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  id: System#Data#IDbConnection#BeginTransaction
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: System.Data.IDbConnection.BeginTransaction()
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Een databasetransactie start."
  remarks: "Dit lid is een expliciete interface lid-implementatie. Het kan worden gebruikt alleen wanneer de <xref:System.Data.Common.DbConnection>exemplaar is geconverteerd naar een <xref:System.Data.IDbConnection>interface.</xref:System.Data.IDbConnection> </xref:System.Data.Common.DbConnection>       Zie voor meer informatie <xref:System.Data.IDbConnection.BeginTransaction%2A>.</xref:System.Data.IDbConnection.BeginTransaction%2A>"
  syntax:
    content: System.Data.IDbTransaction IDbConnection.BeginTransaction ();
    parameters: []
    return:
      type: System.Data.IDbTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  id: System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Een databasetransactie met de opgegeven Start <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> waarde."
  remarks: "Zie voor meer informatie <xref:System.Data.IDbConnection.BeginTransaction%2A>.</xref:System.Data.IDbConnection.BeginTransaction%2A>"
  syntax:
    content: System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Een van de <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> waarden."
    return:
      type: System.Data.IDbTransaction
      description: "Een object dat de nieuwe transactie vertegenwoordigt."
  overload: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  id: System#Data#IDbConnection#CreateCommand
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: System.Data.IDbConnection.CreateCommand()
  nameWithType: DbConnection.System.Data.IDbConnection.CreateCommand()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Maakt en retourneert een <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> -object dat is gekoppeld aan de huidige verbinding."
  remarks: "Zie voor meer informatie [opdrachten en Parameters](~/add/includes/ajax-current-ext-md.md) en <xref:System.Data.IDbConnection.CreateCommand%2A>.</xref:System.Data.IDbConnection.CreateCommand%2A>"
  syntax:
    content: System.Data.IDbCommand IDbConnection.CreateCommand ();
    parameters: []
    return:
      type: System.Data.IDbCommand
      description: "Een <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> -object dat is gekoppeld aan de verbinding."
  overload: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Data.Common.DbException
  parent: System.Data.Common
  isExternal: false
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbConnection.#ctor
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbConnection()
  nameWithType: DbConnection.DbConnection()
  fullName: System.Data.Common.DbConnection.DbConnection()
- uid: System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Common.DbConnection.BeginTransaction
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: DbConnection.BeginTransaction()
  fullName: System.Data.Common.DbConnection.BeginTransaction()
- uid: System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Common.DbConnection.ChangeDatabase(System.String)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: DbConnection.ChangeDatabase(String)
  fullName: System.Data.Common.DbConnection.ChangeDatabase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbConnection.Close
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Close()
  nameWithType: DbConnection.Close()
  fullName: System.Data.Common.DbConnection.Close()
- uid: System.Data.Common.DbConnection.ConnectionString
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: DbConnection.ConnectionString
  fullName: System.Data.Common.DbConnection.ConnectionString
- uid: System.Data.Common.DbConnection.ConnectionTimeout
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: DbConnection.ConnectionTimeout
  fullName: System.Data.Common.DbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbConnection.CreateCommand
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: DbConnection.CreateCommand()
  fullName: System.Data.Common.DbConnection.CreateCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common.DbConnection.CreateDbCommand
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: DbConnection.CreateDbCommand()
  fullName: System.Data.Common.DbConnection.CreateDbCommand()
- uid: System.Data.Common.DbConnection.Database
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Database
  nameWithType: DbConnection.Database
  fullName: System.Data.Common.DbConnection.Database
- uid: System.Data.Common.DbConnection.DataSource
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DataSource
  nameWithType: DbConnection.DataSource
  fullName: System.Data.Common.DbConnection.DataSource
- uid: System.Data.Common.DbConnection.DbProviderFactory
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbConnection.DbProviderFactory
  fullName: System.Data.Common.DbConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: DbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Common.DbConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.Common.DbConnection.GetSchema
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema()
  nameWithType: DbConnection.GetSchema()
  fullName: System.Data.Common.DbConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbConnection.GetSchema(System.String)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: DbConnection.GetSchema(String)
  fullName: System.Data.Common.DbConnection.GetSchema(String)
- uid: System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: DbConnection.GetSchema(String,String[])
  fullName: System.Data.Common.DbConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OnStateChange(StateChangeEventArgs)
  nameWithType: DbConnection.OnStateChange(StateChangeEventArgs)
  fullName: System.Data.Common.DbConnection.OnStateChange(StateChangeEventArgs)
- uid: System.Data.StateChangeEventArgs
  parent: System.Data
  isExternal: false
  name: StateChangeEventArgs
  nameWithType: StateChangeEventArgs
  fullName: System.Data.StateChangeEventArgs
- uid: System.Data.Common.DbConnection.Open
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Open()
  nameWithType: DbConnection.Open()
  fullName: System.Data.Common.DbConnection.Open()
- uid: System.Data.Common.DbConnection.OpenAsync
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OpenAsync()
  nameWithType: DbConnection.OpenAsync()
  fullName: System.Data.Common.DbConnection.OpenAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OpenAsync(CancellationToken)
  nameWithType: DbConnection.OpenAsync(CancellationToken)
  fullName: System.Data.Common.DbConnection.OpenAsync(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbConnection.ServerVersion
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: DbConnection.ServerVersion
  fullName: System.Data.Common.DbConnection.ServerVersion
- uid: System.Data.Common.DbConnection.State
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: State
  nameWithType: DbConnection.State
  fullName: System.Data.Common.DbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.Common.DbConnection.StateChange
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: StateChange
  nameWithType: DbConnection.StateChange
  fullName: System.Data.Common.DbConnection.StateChange
- uid: System.Data.StateChangeEventHandler
  parent: System.Data
  isExternal: false
  name: StateChangeEventHandler
  nameWithType: StateChangeEventHandler
  fullName: System.Data.StateChangeEventHandler
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.BeginTransaction()
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction()
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.CreateCommand()
  nameWithType: DbConnection.System.Data.IDbConnection.CreateCommand()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.CreateCommand()
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.Common.DbConnection.#ctor*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection.DbConnection
- uid: System.Data.Common.DbConnection.BeginDbTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: DbConnection.BeginDbTransaction
- uid: System.Data.Common.DbConnection.BeginTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: DbConnection.BeginTransaction
- uid: System.Data.Common.DbConnection.ChangeDatabase*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: DbConnection.ChangeDatabase
- uid: System.Data.Common.DbConnection.Close*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Close
  nameWithType: DbConnection.Close
- uid: System.Data.Common.DbConnection.ConnectionString*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: DbConnection.ConnectionString
- uid: System.Data.Common.DbConnection.ConnectionTimeout*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: DbConnection.ConnectionTimeout
- uid: System.Data.Common.DbConnection.CreateCommand*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateCommand
  nameWithType: DbConnection.CreateCommand
- uid: System.Data.Common.DbConnection.CreateDbCommand*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: DbConnection.CreateDbCommand
- uid: System.Data.Common.DbConnection.Database*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Database
  nameWithType: DbConnection.Database
- uid: System.Data.Common.DbConnection.DataSource*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DataSource
  nameWithType: DbConnection.DataSource
- uid: System.Data.Common.DbConnection.DbProviderFactory*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbConnection.DbProviderFactory
- uid: System.Data.Common.DbConnection.EnlistTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: DbConnection.EnlistTransaction
- uid: System.Data.Common.DbConnection.GetSchema*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema
  nameWithType: DbConnection.GetSchema
- uid: System.Data.Common.DbConnection.OnStateChange*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OnStateChange
  nameWithType: DbConnection.OnStateChange
- uid: System.Data.Common.DbConnection.Open*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Open
  nameWithType: DbConnection.Open
- uid: System.Data.Common.DbConnection.OpenAsync*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OpenAsync
  nameWithType: DbConnection.OpenAsync
- uid: System.Data.Common.DbConnection.ServerVersion*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: DbConnection.ServerVersion
- uid: System.Data.Common.DbConnection.State*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: State
  nameWithType: DbConnection.State
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.BeginTransaction
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.CreateCommand
  nameWithType: DbConnection.System.Data.IDbConnection.CreateCommand
