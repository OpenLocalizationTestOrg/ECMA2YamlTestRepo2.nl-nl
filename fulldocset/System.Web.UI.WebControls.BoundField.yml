### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundField
  id: BoundField
  children:
  - System.Web.UI.WebControls.BoundField.#ctor
  - System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  - System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.BoundField.CreateField
  - System.Web.UI.WebControls.BoundField.DataField
  - System.Web.UI.WebControls.BoundField.DataFormatString
  - System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  - System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.HeaderText
  - System.Web.UI.WebControls.BoundField.HtmlEncode
  - System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.BoundField.NullDisplayText
  - System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BoundField.ReadOnly
  - System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  - System.Web.UI.WebControls.BoundField.ThisExpression
  - System.Web.UI.WebControls.BoundField.ValidateRequestMode
  - System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  langs:
  - csharp
  name: BoundField
  nameWithType: BoundField
  fullName: System.Web.UI.WebControls.BoundField
  type: Class
  summary: "Hiermee geeft u een veld dat wordt weergegeven als tekst in een gegevensgebonden besturingselement."
  remarks: "De klasse BoundField wordt gebruikt door gegevensgebonden besturingselementen (zoals <xref:System.Web.UI.WebControls.GridView>en <xref:System.Web.UI.WebControls.DetailsView>) om de waarde van een veld als tekst weer te geven.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Het object BoundField anders weergegeven, afhankelijk van het gegevensgebonden besturingselement waarin deze wordt gebruikt. Bijvoorbeeld, de <xref:System.Web.UI.WebControls.GridView>besturingselement een object BoundField weergegeven als een kolom, terwijl de <xref:System.Web.UI.WebControls.DetailsView>besturingselement wordt weergegeven als een rij.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Als het veld moet worden weergegeven in een object BoundField opgeven, stelt u de <xref:System.Web.UI.WebControls.BoundField.DataField%2A>eigenschap in het veld naam.</xref:System.Web.UI.WebControls.BoundField.DataField%2A> Het veld waarde kan zijn HTML-codering voordat deze wordt weergegeven door in te stellen de <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>eigenschap `true`.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> U kunt een aangepaste tekenreeks voor opmaak toepassen op de veldwaarde door in te stellen de <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>eigenschap.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Wanneer de <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>eigenschap is `true`, de waarde van de gecodeerde tekenreeks van het veld in de tekenreeks met aangepaste opmaak wordt gebruikt.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Standaard wordt de opmaaktekenreeks toegepast op veldwaarden alleen wanneer het gegevensgebonden besturingselement in de modus alleen-lezen. Om toe te passen de opmaaktekenreeks aan waarden terwijl het gegevensgebonden besturingselement in de bewerkingsmodus wordt weergegeven, stelt de <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>eigenschap `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> Als een veldwaarde null is, kunt u een aangepaste bijschrift weergeven door in te stellen de <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>eigenschap.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> Het object BoundField kan ook automatisch worden geconverteerd lege tekenreeks (&quot;&quot;) veldwaarden voor null-waarden door in te stellen de <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>eigenschap `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>       U kunt een BoundField-object in een gegevensgebonden besturingselement verbergen door in te stellen de <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>eigenschap `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> Om te voorkomen dat de waarde van een veld in de bewerkingsmodus wordt gewijzigd, stelt de <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>eigenschap `true`.</xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> In gegevensgebonden besturingselementen die ondersteuning bieden bij het invoegen van records (zoals de <xref:System.Web.UI.WebControls.DetailsView>besturingselement), kunt u een object BoundField verbergen door de <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>eigenschap `false`.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> </xref:System.Web.UI.WebControls.DetailsView> Dit gebeurt meestal wanneer u wilt verbergen, een automatisch gegenereerde sleutelveld in de invoegmodus.       U kunt de kop- en voettekst secties van een object BoundField aanpassen. Stel weer te geven van een bijschrift in de koptekst of voettekst secties de <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>of <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>Eigenschappen, respectievelijk.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> In plaats van tekst in de headersectie worden weergegeven, kunt u een installatiekopie weergeven door het instellen van de <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>eigenschap.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> De headersectie kan worden verborgen in het object BoundField door in te stellen de <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>eigenschap `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > Sommige gegevensgebonden besturingselementen (zoals de <xref:System.Web.UI.WebControls.GridView>control) kunt weergeven of verbergen alleen de van de hele koptekstsectie van het besturingselement.</xref:System.Web.UI.WebControls.GridView> Deze gegevensgebonden besturingselementen bieden geen ondersteuning voor de <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>eigenschap voor een afzonderlijk veld gebonden.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Gebruik om te tonen of verbergen van de hele koptekst-sectie van een gegevensgebonden besturingselement (indien beschikbaar) van het besturingselement `ShowHeader` eigenschap.       U kunt het uiterlijk van het object BoundField (tekstkleur, achtergrondkleur, enzovoort) ook aanpassen door de stijleigenschappen voor de verschillende onderdelen van het veld. De volgende tabel bevat de verschillende stijleigenschappen.      | Stijleigenschap | Beschrijving |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| De stijlinstellingen voor de onderliggende webserverbesturingselementen van het object BoundField. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| De stijlinstellingen voor de voettekstsectie van het object BoundField. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| De stijlinstellingen voor de sectie van de header van het object BoundField. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| De stijlinstellingen voor de gegevensitems in het object BoundField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a BoundField object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_236_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: 'public class BoundField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> klasse."
  remarks: "Deze constructor gebruiken om te initialiseren van een nieuw exemplaar van de <xref:System.Web.UI.WebControls.BoundField>klasse.</xref:System.Web.UI.WebControls.BoundField> Deze constructor wordt doorgaans gebruikt om velden toe te voegen aan een dynamisch gemaakte gegevensgebonden besturingselement.       Dynamisch toevoegen een <xref:System.Web.UI.WebControls.BoundField>object aan een gegevensgebonden besturingselement, maak een nieuwe <xref:System.Web.UI.WebControls.BoundField>object, de eigenschappen ervan instellen en vervolgens toe te voegen aan het gegevensgebonden besturingselement veldverzameling.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> Als u bijvoorbeeld de <xref:System.Web.UI.WebControls.GridView>beheren, het toevoegen van de <xref:System.Web.UI.WebControls.BoundField>object toe aan de <xref:System.Web.UI.WebControls.GridView.Columns%2A>verzameling.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Hoewel dynamisch u velden aan een gegevensgebonden besturingselement toevoegen kunt, is het raadzaam dat velden worden statisch gedeclareerd en vervolgens wordt weergegeven of verborgen, indien nodig. Alle velden statisch declareren vermindert de grootte van de weergavestatus voor het bovenliggende gegevensgebonden besturingselement."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[BoundFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[BoundFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public BoundField ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de opmaaktekenreeks opgegeven door de <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>eigenschap wordt toegepast op veldwaarden wanneer het gegevensgebonden besturingselement die bevat de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> -object is in de bewerkingsmodus.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "Gegevensgebonden besturingselementen (zoals <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, en <xref:System.Web.UI.WebControls.GridView>) hebben verschillende modi die de gebruiker toestaan om te lezen, bewerken of records invoegen.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> Standaard, de opmaaktekenreeks die is opgegeven door de <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>eigenschap wordt toegepast op veldwaarden alleen wanneer het gegevensgebonden besturingselement in de modus alleen-lezen.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Als u wilt de opmaaktekenreeks toepassen op waarden die worden weergegeven terwijl het gegevensgebonden besturingselement in de bewerkingsmodus, stelt u de eigenschap ApplyFormatInEditMode op `true`.      > [!NOTE] > A <xref:System.Web.UI.WebControls.BoundField>object wordt niet automatisch verwijderd wanneer het veld wordt bijgewerkt in de gegevensbron opmaak.</xref:System.Web.UI.WebControls.BoundField> Als u niet de opmaak als onderdeel van de waarde die is opgeslagen wilt, moet u de opmaak die via een programma verwijderen."
  example:
  - "The following code example demonstrates how to use the ApplyFormatInEditMode property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode. The formatting is then programmatically removed before the value is updated in the data source.  \n  \n [!code-vb[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1333_1.aspx)]\n [!code-cs[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1333_1.aspx)]"
  syntax:
    content: public virtual bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>De opmaaktekenreeks toepassen op de veldwaarden in de bewerkingsmodus; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld met een waarde die aangeeft of lege tekenreeksen (&quot;&quot;) automatisch worden geconverteerd naar null-waarden als het gegevensveld in de gegevensbron wordt bijgewerkt."
  remarks: "Soms kan de gebruiker een lege tekenreeks opgeven voor een veldwaarde tijdens het bijwerken of invoegen van records. Gebruik de eigenschap ConvertEmptyStringToNull om op te geven of een lege tekenreekswaarde wordt automatisch geconverteerd naar null wanneer het gegevensveld in de gegevensbron wordt bijgewerkt.      > [!NOTE] > Standaard een <xref:System.Web.UI.WebControls.BoundField>object geeft null-waarden als lege tekenreeksen.</xref:System.Web.UI.WebControls.BoundField> Stel weer te geven van een andere waarde de <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>eigenschap.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the ConvertEmptyStringToNull property to specify that an empty string (\"\") field value should automatically be converted to null.  \n  \n [!code-vb[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1108_1.aspx)]\n [!code-cs[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1108_1.aspx)]"
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>automatisch lege tekenreeks om waarden te converteren naar een null-waarden; anders wordt de <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopieert de eigenschappen van de huidige <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object aan de opgegeven <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> object."
  remarks: "De methode CopyProperties is een Help-methode die wordt gebruikt door de <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>methode voor het kopiëren van de eigenschappen van de huidige <xref:System.Web.UI.WebControls.BoundField>object toe aan de <xref:System.Web.UI.WebControls.DataControlField>object gemaakt met de methode.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "De <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> kopiëren van de eigenschappen van de huidige <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> aan."
  overload: System.Web.UI.WebControls.BoundField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Maakt een lege <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object."
  remarks: "De methode CreateField is een Help-methode die wordt gebruikt door de <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>methode voor het maken van een lege <xref:System.Web.UI.WebControls.BoundField>te kopiëren van de eigenschappen van het huidige object <xref:System.Web.UI.WebControls.BoundField>object naar de.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>."
  overload: System.Web.UI.WebControls.BoundField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van de naam van het gegevensveld binden aan de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object."
  remarks: "Gebruik de eigenschap DataField Geef de naam van het gegevensveld binden aan de <xref:System.Web.UI.WebControls.BoundField>object.</xref:System.Web.UI.WebControls.BoundField> De waarden van het opgegeven veld worden weergegeven in de <xref:System.Web.UI.WebControls.BoundField>object als tekst.</xref:System.Web.UI.WebControls.BoundField> U kunt eventueel de weergegeven tekst opmaken door in te stellen de <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>eigenschap.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>      > [!NOTE] > Als een veld waarde null is, is een lege tekenreeks (&quot;&quot;) wordt standaard weergegeven voor de waarde. Als een alternatieve bijschrift opgeven, stelt u de <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>eigenschap.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_680_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_680_1.aspx)]"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "De naam van het gegevensveld binden aan de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>. De standaardwaarde is een lege tekenreeks (&quot;&quot;), wat aangeeft dat deze eigenschap niet is ingesteld."
  overload: System.Web.UI.WebControls.BoundField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van de tekenreeks die aangeeft van de weergave-indeling voor de waarde van het veld."
  remarks: "De eigenschap DataFormatString gebruiken om op te geven van een aangepaste weergave-indeling voor de waarden die worden weergegeven in de <xref:System.Web.UI.WebControls.BoundField>object.</xref:System.Web.UI.WebControls.BoundField> Als de DataFormatString-eigenschap niet is ingesteld, wordt de veldwaarde weergegeven zonder speciale opmaak.      > [!NOTE] > In eerdere versies van ASP.NET dan 3.5, stelt u de <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>eigenschap `false` om te formatteren velden zijn niet-gegevenstypen string.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Anders wordt wordt de veldwaarde geconverteerd naar een tekenreeks door de standaardmethode voor conversie voordat de indelingstekenreeks die wordt opgeslagen in de DataFormatString-eigenschap wordt toegepast.       Standaard de opmaaktekenreeks wordt alleen toegepast op de veldwaarde wanneer het gegevensgebonden besturingselement die bevat de <xref:System.Web.UI.WebControls.BoundField>object bevindt zich in alleen-lezenmodus.</xref:System.Web.UI.WebControls.BoundField> Als de opmaaktekenreeks wilt veldwaarden in de bewerkingsmodus toepassen, stelt de <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>eigenschap `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>       De opmaaktekenreeks kan een letterlijke tekenreeks en omvat gewoonlijk een tijdelijke aanduiding voor de veldwaarde. Bijvoorbeeld, in de opmaaktekenreeks `Item Value: {0}`, waarde van het veld is vervangen door de {0} tijdelijke aanduiding voor wanneer de tekenreeks wordt weergegeven in de <xref:System.Web.UI.WebControls.BoundField>object.</xref:System.Web.UI.WebControls.BoundField> De rest van de opmaaktekenreeks wordt weergegeven als letterlijke tekst.       Als u de opmaakreeks niet onder een tijdelijke aanduiding, worden alleen de opmaaktekenreeks zelf is opgenomen in de laatste weergavetekst (de veldwaarde uit de gegevensbron is niet opgenomen). Als de tijdelijke aanduiding 0 (nul) tussen accolades zoals weergegeven in het voorgaande voorbeeld is, wordt de veldwaarde geconverteerd naar een tekenreeks door de standaardmethode. U kunt op een tekenreeks die opgeeft hoe de veldwaarde moet de juiste indeling toevoegen aan de op nul. Bijvoorbeeld, de tijdelijke aanduiding `{0:C}` voor een numeriek veld geeft aan dat de waarde van het veld moet worden geconverteerd naar een valutanotatie.       Opmaak die wordt toegepast met behulp van de <xref:System.String.Format%2A>methode.</xref:System.String.Format%2A> Het nummer dat volgt op de accolade openen maakt deel uit van de syntaxis die door deze methode gebruikt, en geeft aan welke van een reeks waarden de tijdelijke aanduiding kan gebruiken. Omdat er slechts één veldwaarde in elke cel, kan het nummer dat volgt op de accolade openen alleen worden ingesteld op 0.       De volgende tabel bevat de standaardtekens indeling voor numerieke velden. Deze indeling tekens zijn niet hoofdlettergevoelig, behalve voor `X`, weergeven met hexadecimale tekens in het geval dat is opgegeven. U kunt een getal toevoegen aan de meeste opmaak tekens om op te geven hoeveel significante cijfers of decimalen u wilt weergeven.      > [!NOTE] > In de meeste gevallen opmaak is afhankelijk van de server cultuur-instelling. De voorbeelden zijn van een cultuurinstelling van `en-US`.      | Opmaak teken | Beschrijving | Voorbeeld |   |----------------------|-----------------|-------------|   | `C` or `c`| Numerieke waarden in valutanotatie worden weergegeven. U kunt opgeven dat het aantal decimalen. | Indeling:`{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Indeling:`{0:C3}`<br /><br /> 123.456-> $123.456 |   | `D` or `d`| Gehele getallen in decimale notatie weergegeven. U kunt het aantal cijfers opgeven. (Hoewel het type aangeduid als &quot;decimal&quot;, worden getallen opgemaakt als gehele getallen.) | Indeling:`{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Indeling:`{0:D6}`<br /><br /> 1234-> 001234 |   | `E` or `e`| Numerieke waarden worden weergegeven in de wetenschappelijke (exponentiële) notatie. U kunt opgeven dat het aantal decimalen. | Indeling:`{0:E}`<br /><br /> 1052.0329112756-> 1.052033E + 003<br /><br /> Indeling:`{0:E2}`<br /><br /> -1052.0329112756-> -&1;.05e +&003; |   | `F` or `f`| Numerieke waarden worden weergegeven in vaste indeling. U kunt opgeven dat het aantal decimalen. | Indeling:`{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Indeling:`{0:F3}`<br /><br /> 1234.567-> 1234.567 |   | `G` or `g`| Numerieke waarden worden weergegeven in algemene indeling (de meeste cd-rom met vaste komma of wetenschappelijke notatie). U kunt het aantal significante cijfers opgeven. | Indeling:`{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Indeling:`{0:G2}`<br /><br /> -123.456->-120 |   | `N` or `n`| Numerieke waarden in de notatie (inclusief groepsscheidingstekens en optionele minteken) worden weergegeven. U kunt opgeven dat het aantal decimalen. | Indeling:`{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Indeling:`{0:N4}`<br /><br /> 1234.567-> 1,234.5670 |   | `P` or `p`| Numerieke waarden worden weergegeven in procenten. U kunt opgeven dat het aantal decimalen. | Indeling:`{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Indeling:`{0:P1}`<br /><br /> .5-> 50,0% | | `R` or `r`| Geeft <xref:System.Single>, <xref:System.Double>, of `BigInteger` waarden in de indeling geretourneerd. | Format: `{0:R}`</xref:System.Double></xref:System.Single><br /><br /> 123456789.12345678-> 123456789.12345678 |   | `X` or `x`| Gehele getallen weergegeven in hexadecimale notatie. U kunt opgeven dat het aantal decimalen. | Indeling:`{0:X}`<br /><br /> 255-> FF<br /><br /> Indeling:`{0:x4}`<br /><br /> 255-> 00ff |       Zie voor meer informatie en voorbeelden van opmaak voor andere waarden voor cultuur [standaard numerieke indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md). U kunt ook aangepaste numerieke notatie tekenreeksen maken. Zie voor meer informatie [aangepaste numerieke notatie tekenreeksen](~/add/includes/ajax-current-ext-md.md).       De volgende tabel bevat tekens voor indeling <xref:System.DateTime>velden.</xref:System.DateTime> De meeste van deze specificaties opmaak resulteren in een andere uitvoer, afhankelijk van de cultuurinstellingen. De voorbeelden zijn van een <xref:System.DateTime>waarde van 15/6/2009 1:45:30 PM met een cultuurinstelling voor van `en-US`.</xref:System.DateTime>      | Opmaak teken | Beschrijving | Voorbeeld |   |----------------------|-----------------|-------------|   | `d`| Korte datum patroon. | Indeling:`{0:d}`<br /><br /> 15-6/2009 1:45:30 PM-> 15/6/2009 |   | `D`| Lange datumnotatie patroon. | Indeling:`{0:D}`<br /><br /> 15-6/2009 1:45:30 PM-> maandag 15 juni 2009 |   | `f`| Volledige datum/tijd-patroon (korte tijd). | Indeling:`{0:f}`<br /><br /> 15-6/2009 1:45:30 PM-> maandag 15 juni 2009 1:45 uur |   | `F`| Volledige datum/tijd-patroon (lange tijd). | Indeling:`{0:F}`<br /><br /> 15-6/2009 1:45:30 PM-> maandag 15 juni 2009 1:45:30 PM |   | `g`| Algemene datum/tijd-patroon (korte tijd). | Indeling:`{0:g}`<br /><br /> 15-6/2009 1:45:30 PM-> 15/6/2009 1:45 UUR |   | `G`| Algemene datum/tijd-patroon (lange tijd). | Indeling:`{0:G}`<br /><br /> 15-6/2009 1:45:30 PM-> 15/6/2009 1:45:30 PM |   | `M` or `m`| Patroon van de maand/dag. | Indeling:`{0:M}`<br /><br /> 15-6/2009 1:45:30 PM-> 15 juni |   | `O` or `o`| Interactie datum/tijd-patroon. | Indeling:`{0:o}`<br /><br /> 15-6/2009 1:45:30 PM-> 2009-06-15T13:45:30.0900000 |   | `R` or `r`| Patroon RFC1123 (Zie <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>voor informatie). | Indeling: `{0:R}` </xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName><br /><br /> 15-6/2009 1:45:30 PM-> ma 15 Jun 2009 20:45:30 GMT |   | `s`| Sorteerbare datum/tijd-patroon. | Indeling:`{0:s}`<br /><br /> 15-6/2009 1:45:30 PM-> 2009-06-15T13:45:30 |   | `t`| Korte tijdspatroon. | Indeling:`{0:t}`<br /><br /> 15-6/2009 1:45:30 PM-> 1:45 UUR |   | `T`| Lange tijdspatroon. | Indeling:`{0:T}`<br /><br /> 15-6/2009 1:45:30 PM-> 1:45:30 PM |   | `u`| Universele sorteerbare datum/tijd-patroon. | Indeling:`{0:u}`<br /><br /> 15-6/2009 1:45:30 PM-> 2009-06-15 20:45:30Z |   | `U`| Universele volledige datum/tijd-patroon. | Indeling:`{0:U}`<br /><br /> 15-6/2009 1:45:30 PM-> maandag 15 juni 2009 8:45:30 PM |   | `Y` or `y`| Jaar maand patroon. | Indeling:`{0:Y}`<br /><br /> 15-6/2009 1:45:30 PM-> juni 2009 |       Zie voor meer informatie en voorbeelden van opmaak voor andere waarden voor cultuur [standaarddatum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md). U kunt ook aangepaste datum en tijd-indeling tekenreeksen maken. Zie voor meer informatie [aangepaste datum en tijd-indeling tekenreeksen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191889).  \n  \n The following example shows how to use the DataFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows one row of the output that is produced by this example.  \n  \n|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  \n|---------------|----------|-------------------|---------------|------------|------------------|  \n|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: "Een opmaak tekenreeks waarmee de notatie voor de waarde van het veld. De standaardwaarde is een lege tekenreeks (&quot;&quot;), wat aangeeft dat er geen speciale opmaak wordt toegepast op de veldwaarde."
  overload: System.Web.UI.WebControls.BoundField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Vult de opgegeven &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; object met de waarden uit de opgegeven <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> object."
  remarks: "De methode ExtractValuesFromCell wordt geleverd als een handige manier om op te halen van de waarden van de velden van het opgegeven <xref:System.Web.UI.WebControls.TableCell>object in een <xref:System.Web.UI.WebControls.BoundField>object.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell>      > [!NOTE] > Deze methode wordt hoofdzakelijk gebruikt door ontwikkelaars besturingselement.       Deze methode heeft geen retourwaarde. In plaats daarvan de veldwaarden worden geretourneerd door verwijzing via de <xref:System.Collections.IDictionary?displayProperty=fullName>object doorgegeven voor de `dictionary` parameter.</xref:System.Collections.IDictionary?displayProperty=fullName> Nadat de methode is aangeroepen, doorloopt de <xref:System.Collections.IDictionary?displayProperty=fullName>object voor toegang tot de veldwaarden.</xref:System.Collections.IDictionary?displayProperty=fullName>      > [!NOTE] > Als de <xref:System.Web.UI.WebControls.TableCell>object alleen-lezen veldwaarden bevat, moet u `true` voor de `includeReadOnly` -parameter voor deze waarden wilt opnemen.</xref:System.Web.UI.WebControls.TableCell>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Een &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; gebruikt voor het opslaan van de waarden van de opgegeven cel."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "De <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> waarin de waarden om op te halen."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Een van de <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> waarden."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om op te nemen van de waarden van alleen-lezen velden; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  id: FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Indelingen van de waarde van het opgegeven veld van een cel in de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object."
  remarks: "De methode FormatDataValue is een Help-methode gebruikt voor het transformeren van de waarde van een veld met de indeling die is opgegeven door de <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>eigenschap.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Als een veldwaarde is null, de waarde van de <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>eigenschap geretourneerd.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>      > [!NOTE] > Deze methode wordt hoofdzakelijk gebruikt door ontwikkelaars besturingselement."
  syntax:
    content: protected virtual string FormatDataValue (object dataValue, bool encode);
    parameters:
    - id: dataValue
      type: System.Object
      description: "De waarde van het veld om te formatteren."
    - id: encode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>voor het coderen van de waarde; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "De waarde van het veld geconverteerd naar de indeling die is opgegeven door <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  overload: System.Web.UI.WebControls.BoundField.FormatDataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Haalt de waarde voor een veld waarde gebruikt bij de rendering van de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> -object in een ontwerpfunctie."
  remarks: "De methode GetDesignTimeValue is een Help-methode gebruikt om te bepalen welke waarde u moet een veld wordt weergegeven bij het weergeven van de <xref:System.Web.UI.WebControls.BoundField>-object in een ontwerpfunctie.</xref:System.Web.UI.WebControls.BoundField> Als de echte gegevens kan niet worden opgehaald uit de gegevensbron tijdens ontwerptijd, wordt de waarde die wordt geretourneerd door deze methode in plaats daarvan weergegeven.      > [!NOTE] > Deze methode wordt hoofdzakelijk gebruikt door ontwikkelaars besturingselement."
  syntax:
    content: protected virtual object GetDesignTimeValue ();
    parameters: []
    return:
      type: System.Object
      description: "De waarde moet worden weergegeven in de ontwerpfunctie als het veld waarde."
  overload: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  id: GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Haalt de waarde van het veld is gebonden aan de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object."
  remarks: "De methode GetValue is een Help-methode gebruikt om te bepalen van de waarde van een veld. Als de <xref:System.Web.UI.WebControls.BoundField>object wordt weergegeven in een designer en de veldwaarde kan niet worden bepaald tijdens ontwerptijd, wordt de waarde geretourneerd door de <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>methode wordt geretourneerd in plaats van de werkelijke veldwaarde.</xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> </xref:System.Web.UI.WebControls.BoundField>      > [!NOTE] > Deze methode wordt hoofdzakelijk gebruikt door ontwikkelaars besturingselement."
  syntax:
    content: protected virtual object GetValue (System.Web.UI.Control controlContainer);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: "De container voor de veldwaarde."
    return:
      type: System.Object
      description: "De waarde van het veld afhankelijk van de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.GetValue*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The container specified by the <code>controlContainer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The container specified by the <code>controlContainer</code> parameter does not have a data item.  \n  \n \\- or -  \n  \n The data field was not found."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van de tekst die wordt weergegeven in de koptekst van een besturingselement."
  remarks: "Gebruik de eigenschap HeaderText een veld in een gegevensbesturingselement identificeren met een beschrijvende naam. De meest voorkomende toepassing van de eigenschap HeaderText is bedoeld als zinvolle kolomnamen aan gegevens is gebonden velden in een <xref:System.Web.UI.WebControls.GridView>of <xref:System.Web.UI.WebControls.DetailsView>besturingselement.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "De tekst die wordt weergegeven in de koptekst van een besturingselement. De standaardwaarde is een lege tekenreeks (&quot;&quot;)."
  overload: System.Web.UI.WebControls.BoundField.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of veldwaarden HTML-codering zijn voordat ze worden weergegeven in een <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object."
  remarks: "Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object. For example, if this property is `true`, a string value of \"\\<script>\" would be rendered as \"&lt;script&gt;\". If this property is `false`, the string would be rendered unchanged.  \n  \n> [!NOTE]\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible."
  example:
  - "The following code example demonstrates how to use the HtmlEncode property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.  \n  \n [!code-cs[BoundFieldHtmlEncode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_606_1.aspx)]\n [!code-vb[BoundFieldHtmlEncode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_606_1.aspx)]"
  syntax:
    content: public virtual bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de waarden HTML-codering zijn voordat ze worden weergegeven in een <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  id: HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of tekst die is gemaakt door het toepassen van de <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>eigenschap in op de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> waarde moet een HTML-codering wanneer deze wordt weergegeven.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed. HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string \"\\<br/>\" instead of inserting a line break (`<br/>` element) in the page.  \n  \n> [!NOTE]\n>  This property is new in ASP.NET 3.5. Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5. For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."
  syntax:
    content: public virtual bool HtmlEncodeFormatString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de tekst HTML-codering moet; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiseert de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object."
  remarks: "De methode Initialize is aangeroepen door het gegevensbesturingselement waarmee de <xref:System.Web.UI.WebControls.BoundField>object is gekoppeld aan het basisobject initialisatie voor exemplaren van het veld, voordat het veld ooit is toegevoegd aan een verzameling rijen.</xref:System.Web.UI.WebControls.BoundField> Gegevens besturingselementen zoals <xref:System.Web.UI.WebControls.DetailsView>en <xref:System.Web.UI.WebControls.GridView>aanroepen de <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>methode in hun `CreateChildControls` methoden voordat andere methoden zoals `CreateRow` worden genoemd als u wilt maken van specifieke rijen met gegevens.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Aanroep van deze methode wanneer u schrijft een aangepaste gegevensgebonden bijvoorbeeld bepalen dat <xref:System.Web.UI.WebControls.TableCell>objecten uit te voeren basic de initialisatie van een <xref:System.Web.UI.WebControls.BoundField>object.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell> Implementeer deze methode als uw <xref:System.Web.UI.WebControls.BoundField>-afgeleide type vereist de initialisatie van een object wordt gevuld <xref:System.Web.UI.WebControls.TableCell>objecten met gegevens of besturingselementen in de <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>methode.</xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);
    parameters:
    - id: enableSorting
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de sortering wordt ondersteund; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: control
      type: System.Web.UI.Control
      description: "Het besturingselement dat eigenaar is van de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>in alle gevallen."
  overload: System.Web.UI.WebControls.BoundField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "De opgegeven initialiseert <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> -object op voor de status van de opgegeven rij."
  remarks: "De methode InitializeCell wordt geïmplementeerd door <xref:System.Web.UI.WebControls.BoundField>-afgeleide typen als u wilt toevoegen, tekst- en -besturingselementen om een <xref:System.Web.UI.WebControls.TableCell>object van een gegevensbesturingselement dat tabellen gebruikt voor het weergeven van een gebruikersinterface (UI).</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField> Deze besturingselementen voor de volledige tabel structuur door rij maken wanneer het besturingselement `CreateChildControls` methode wordt aangeroepen. De methode InitializeCell wordt aangeroepen door de `InitializeRow` methode gegevens besturingselementen zoals <xref:System.Web.UI.WebControls.DetailsView>en <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Aanroep van deze methode wanneer u schrijft een aangepaste gegevensgebonden bijvoorbeeld bepalen dat <xref:System.Web.UI.WebControls.TableCell>objecten naar de cellen van de structuur van de tabel met gegevens of besturingselementen te initialiseren.</xref:System.Web.UI.WebControls.TableCell> Implementeer deze methode wanneer u schrijft een <xref:System.Web.UI.WebControls.BoundField>-klasse. afgeleide</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "De <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> worden geïnitialiseerd."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Een van de <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> waarden."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Een van de <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> waarden."
    - id: rowIndex
      type: System.Int32
      description: "De op nul gebaseerde index van de rij."
  overload: System.Web.UI.WebControls.BoundField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "De opgegeven initialiseert <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> -object op voor de status van de opgegeven rij."
  remarks: "De methode InitializeDataCell is een Help-methode gebruikt voor het initialiseren van een cel in de <xref:System.Web.UI.WebControls.BoundField>object.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "De <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> worden geïnitialiseerd."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Een van de <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> waarden."
  overload: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "De informatie van de eerder opgeslagen status weergeven voor dit veld wordt hersteld."
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Vertegenwoordigt de besturingselementstatus moet worden hersteld."
  overload: System.Web.UI.WebControls.BoundField.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van het bijschrift dat voor een veld wordt weergegeven als de veldwaarde null is."
  remarks: "Soms wordt een veld waarde opgeslagen als null in de gegevensbron. U kunt een aangepaste bijschrift voor velden met een null-waarde door de eigenschap NullDisplayText opgeven. Als deze eigenschap niet is ingesteld, null-veldwaarden worden weergegeven als lege tekenreeksen (&quot;&quot;). Wanneer een record worden bijgewerkt of geplaatst in een gegevensgebonden besturingselement, als de waarde van de gebruiker invoert opgegeven met deze eigenschap (met uitzondering van een lege tekenreeks) voor een veld in een gegevensgebonden besturingselement dat wordt automatisch omgezet in null in de gegevensbron.      > [!NOTE] > Instellen voor een lege tekenreekswaarde veld converteren naar een null-waarde, de <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>eigenschap `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>"
  example:
  - "The following code example demonstrates how to use the NullDisplayText property to specify a custom caption to display for null field values.  \n  \n [!code-vb[BoundFieldNullDisplayText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1327_1.aspx)]\n [!code-cs[BoundFieldNullDisplayText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1327_1.aspx)]"
  syntax:
    content: public virtual string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "Het bijschrift voor een veld wordt weergegeven als de veldwaarde null is. De standaardwaarde is een lege tekenreeks (&quot;&quot;), wat aangeeft dat deze eigenschap niet is ingesteld."
  overload: System.Web.UI.WebControls.BoundField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "De waarde van een veld aan bindt de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object."
  remarks: "De <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>is een helpmethode waarmee de waarde van een veld in de gegevensbron binden aan een corresponderende cel in de <xref:System.Web.UI.WebControls.BoundField>object.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>"
  syntax:
    content: protected virtual void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "De bron van de gebeurtenis."
    - id: e
      type: System.EventArgs
      description: "Een <xref:System.EventArgs>waarin de gebeurtenisgegevens.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.BoundField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Het besturingselement waarvan de waarde van veld afhankelijk is, is niet een <xref href=&quot;System.Web.UI.WebControls.TextBox&quot;> </xref> of een <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de waarde van het veld kan worden gewijzigd in de bewerkingsmodus."
  remarks: "De eigenschap ReadOnly gebruiken om te voorkomen dat de waarden in een <xref:System.Web.UI.WebControls.BoundField>object wordt gewijzigd.</xref:System.Web.UI.WebControls.BoundField> Wanneer een besturingselement gegevensgebonden in de bewerkingsmodus is, worden de velden die alleen-lezen zijn weergegeven als tekst zonder opmaak, zonder eventuele besturingselementen bewerken.      > [!NOTE] > De alleen-lezen eigenschap uitsluitend van toepassing op de modus bewerken. Om te voorkomen dat velden weergegeven in de invoegmodus, gebruiken de <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>eigenschap.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>"
  example:
  - "The following code example demonstrates how to use the ReadOnly property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_208_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_208_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om te voorkomen dat de waarde van het veld wordt gewijzigd in de bewerkingsmodus; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  id: SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee wordt een waarde die aangeeft of HTML-codering wordt ondersteund door een <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> object."
  remarks: "De eigenschap SupportsHtmlEncode is een helper-eigenschap gebruikt door de <xref:System.Web.UI.WebControls.BoundField>klasse en afgeleide klassen om te bepalen of de HTML-codering wordt ondersteund door de klasse.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual bool SupportsHtmlEncode { get; }
    return:
      type: System.Boolean
      description: "Retourneert altijd <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om aan te geven dat de HTML-codering wordt ondersteund door een <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  id: ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee geeft u de expressie &quot;dit&quot;."
  remarks: "Dit veld wordt gebruikt om aan te geven die de <xref:System.Web.UI.WebControls.BoundField>object moet de gegevensbron gebonden zelf, in plaats van een veld van de gegevensbron.</xref:System.Web.UI.WebControls.BoundField> In dit geval wordt het object van `ToString` waarde wordt weergegeven in het veld.       Dit veld wordt voornamelijk door besturingselement ontwikkelaars."
  syntax:
    content: public static readonly string ThisExpression;
    return:
      type: System.String
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opgehaald of ingesteld van een waarde die bepaalt of invoer van de client in het besturingselement wordt gevalideerd of niet."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "Een waarde die bepaalt of invoer van de client in het besturingselement wordt gevalideerd of niet. De standaardwaarde is <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hiermee wordt bepaald of de besturingselementen die zijn opgenomen een <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> ondersteuning retouraanroepen object."
  remarks: "De methode ValidateSupportsCallback is een Help-methode gebruikt om te bepalen of de besturingselementen die zijn opgenomen een <xref:System.Web.UI.WebControls.BoundField>object ondersteuning callbacks.</xref:System.Web.UI.WebControls.BoundField> Deze methode is geïmplementeerd als een leeg methode (een methode die geen code) om aan te geven dat callbacks worden ondersteund.      > [!NOTE] > Deze methode wordt hoofdzakelijk gebruikt door ontwikkelaars besturingselement."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.BoundField.#ctor
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.BoundField.CreateField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
- uid: System.Web.UI.WebControls.BoundField.DataField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.BoundField.#ctor*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField
  nameWithType: BoundField.BoundField
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties
  nameWithType: BoundField.CopyProperties
- uid: System.Web.UI.WebControls.BoundField.CreateField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField
  nameWithType: BoundField.CreateField
- uid: System.Web.UI.WebControls.BoundField.DataField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
- uid: System.Web.UI.WebControls.BoundField.DataFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: BoundField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundField.FormatDataValue
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: BoundField.GetDesignTimeValue
- uid: System.Web.UI.WebControls.BoundField.GetValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue
  nameWithType: BoundField.GetValue
- uid: System.Web.UI.WebControls.BoundField.HeaderText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize
  nameWithType: BoundField.Initialize
- uid: System.Web.UI.WebControls.BoundField.InitializeCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell
  nameWithType: BoundField.InitializeCell
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell
  nameWithType: BoundField.InitializeDataCell
- uid: System.Web.UI.WebControls.BoundField.LoadViewState*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState
  nameWithType: BoundField.LoadViewState
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField
  nameWithType: BoundField.OnDataBindField
- uid: System.Web.UI.WebControls.BoundField.ReadOnly*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: BoundField.ValidateSupportsCallback
