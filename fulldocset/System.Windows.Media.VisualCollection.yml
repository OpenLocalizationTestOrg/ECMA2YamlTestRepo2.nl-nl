### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.VisualCollection
  id: VisualCollection
  children:
  - System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Capacity
  - System.Windows.Media.VisualCollection.Clear
  - System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  - System.Windows.Media.VisualCollection.Count
  - System.Windows.Media.VisualCollection.GetEnumerator
  - System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.IsReadOnly
  - System.Windows.Media.VisualCollection.IsSynchronized
  - System.Windows.Media.VisualCollection.Item(System.Int32)
  - System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  - System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Media.VisualCollection.SyncRoot
  - System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: VisualCollection
  nameWithType: VisualCollection
  fullName: System.Windows.Media.VisualCollection
  type: Class
  summary: "Hiermee geeft u een geordende verzameling <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> objecten."
  remarks: "Een VisualCollection is impliciete context affiniteit. Als een procedure probeert toegang hebben tot de VisualCollection van een andere context dan de context van de eigenaar van <xref:System.Windows.Media.ContainerVisual>, er een uitzondering gegenereerd.</xref:System.Windows.Media.ContainerVisual>"
  example:
  - "The following example shows how to create a VisualCollection and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: 'public sealed class VisualCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  id: '#ctor(System.Windows.Media.Visual)'
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> klasse."
  syntax:
    content: public VisualCollection (System.Windows.Media.Visual parent);
    parameters:
    - id: parent
      type: System.Windows.Media.Visual
      description: "De bovenliggende visual object waarvan <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> wordt geretourneerd."
  overload: System.Windows.Media.VisualCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  id: Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Voegt een <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> aan het einde van de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Toevoegen van een <xref:System.Windows.Media.Visual>waarvan de waarde `null` toegestaan en een uitzondering veroorzaakt.</xref:System.Windows.Media.Visual>       De Add-methode wordt ook ingesteld van de bovenliggende / onderliggende relatie tussen de bovenliggende visual, dit de eigenaar is van de <xref:System.Windows.Media.VisualCollection>, en de onderliggende `visual`.</xref:System.Windows.Media.VisualCollection>       Als u meer op laag niveau controle over de onderliggende opslag implementatie van de visual onderliggende objecten van een aangepaste klasse nodig hebt, overweeg dan de <xref:System.Windows.Media.Visual.AddVisualChild%2A>en <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>methoden.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Wanneer u deze methoden, de implementatie van uw eigen opslag moet definiÃ«ren en gebruik geen <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: public int Add (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "De <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> toe te voegen aan de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "De index in de verzameling waarop <code> visual </code> is toegevoegd."
  overload: System.Windows.Media.VisualCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een <xref:System.ArgumentException>gegenereerd als de <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> is een hoofdelement.</xref:System.ArgumentException>"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Capacity
  id: Capacity
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Opgehaald of ingesteld van het aantal elementen die de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> kan bevatten."
  remarks: "De waarde van de capaciteit is het aantal elementen die de <xref:System.Windows.Media.VisualCollection>kan opslaan.</xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.VisualCollection.Count%2A>is het aantal visuele elementen die daadwerkelijk in de <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Count%2A> Capaciteit is altijd groter dan of gelijk zijn aan <xref:System.Windows.Media.VisualCollection.Count%2A>.</xref:System.Windows.Media.VisualCollection.Count%2A> Als <xref:System.Windows.Media.VisualCollection.Count%2A>tijdens het toevoegen van elementen, de capaciteit van de capaciteit overschrijdt de <xref:System.Windows.Media.VisualCollection>wordt verhoogd.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Count%2A> Standaard is capaciteit nul."
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "Het aantal elementen die de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> kan bevatten."
  overload: System.Windows.Media.VisualCollection.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Capaciteit is ingesteld op een waarde die kleiner is dan <xref:System.Windows.Media.VisualCollection.Count*>.</xref:System.Windows.Media.VisualCollection.Count*>"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Clear
  id: Clear
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Hiermee verwijdert u alle elementen van de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "De <xref:System.Windows.Media.VisualCollection.Count%2A>is ingesteld op nul.</xref:System.Windows.Media.VisualCollection.Count%2A> De waarde van de <xref:System.Windows.Media.VisualCollection.Capacity%2A>blijft ongewijzigd.</xref:System.Windows.Media.VisualCollection.Capacity%2A> Opnieuw instellen van de capaciteit van de <xref:System.Windows.Media.VisualCollection>stelt de <xref:System.Windows.Media.VisualCollection.Capacity%2A>eigenschap in op de gewenste grootte.</xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Media.VisualCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  id: Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Retourneert een <xref:System.Boolean>waarde die aangeeft of de opgegeven <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> is opgenomen in de verzameling.</xref:System.Boolean>"
  remarks: "Het scenario slechtste runtime van deze functie is `O(n)`, waarbij `n` is het aantal items in de <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool Contains (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "De <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> om naar te zoeken in de verzameling."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als <code> visual </code> is opgenomen in de verzameling, anders, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Kopieert de items in de verzameling naar een matrix, beginnend bij een specifieke array-index."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "De eendimensionale <xref:System.Array>die het doel van de elementen die zijn gekopieerd van de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index in `array` welke kopiÃ«ren begint."
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  id: CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "De huidige verzameling gekopieerd naar de doorgegeven <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> matrix."
  syntax:
    content: public void CopyTo (System.Windows.Media.Visual[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Media.Visual[]
      description: "Een matrix van <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> objecten (die moeten op nul gebaseerde indexering)."
    - id: index
      type: System.Int32
      description: "De index voor het kopiÃ«ren vanuit `array`."
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Count
  id: Count
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Hiermee haalt het aantal elementen in de verzameling."
  remarks: "Aantal is het aantal elementen die daadwerkelijk in de <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.VisualCollection.Capacity%2A>het aantal elementen is die de <xref:System.Windows.Media.VisualCollection>kan opslaan.</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Capacity%2A>       Aantal is altijd kleiner dan of gelijk aan <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</xref:System.Windows.Media.VisualCollection.Capacity%2A> Als het aantal hoger is dan <xref:System.Windows.Media.VisualCollection.Capacity%2A>tijdens het toevoegen van elementen, wordt de capaciteit van de lijst verdubbeld door automatisch opnieuw toewijzen van de interne matrix voordat de oude elementen kopiÃ«ren en toevoegen van nieuwe elementen.</xref:System.Windows.Media.VisualCollection.Capacity%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Het aantal elementen die de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> bevat."
  overload: System.Windows.Media.VisualCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Een enumerator die kunt doorlopen haalt de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  syntax:
    content: public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Windows.Media.VisualCollection.Enumerator
      description: "Een enumerator die kan worden gebruikt om de collectie te doorlopen."
  overload: System.Windows.Media.VisualCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  id: IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Retourneert de op nul gebaseerde index van de <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>."
  remarks: "Als de <xref:System.Windows.Media.Visual>zich niet in de <xref:System.Windows.Media.VisualCollection>, -1 geretourneerd.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual> Als `null` wordt doorgegeven aan de methode wordt de index van het eerste item met `null` wordt geretourneerd. Als er geen null-vermelding is, wordt -1 geretourneerd."
  syntax:
    content: public int IndexOf (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "De <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> te vinden in de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "De index van de <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  id: Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Hiermee voegt u een element in de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> bij de opgegeven index."
  remarks: "Als <xref:System.Windows.Media.VisualCollection.Count%2A>al gelijk is aan <xref:System.Windows.Media.VisualCollection.Capacity%2A>, wordt de capaciteit van de <xref:System.Windows.Media.VisualCollection>is toegenomen voordat de nieuwe <xref:System.Windows.Media.Visual>wordt ingevoegd.</xref:System.Windows.Media.Visual> </xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection.Count%2A> Als `index` gelijk is aan <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` wordt toegevoegd aan het einde van <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Count%2A> Een bestaande visual objecten die zijn gelijk aan of groter dan `index` verplaatst zodat de nieuwe <xref:System.Windows.Media.Visual>, en hun indexwaarden worden bijgewerkt.</xref:System.Windows.Media.Visual>       De methode invoegen wordt ook ingesteld van de bovenliggende / onderliggende relatie tussen de bovenliggende visual, dit de eigenaar is van de <xref:System.Windows.Media.VisualCollection>, en de onderliggende `visual`.</xref:System.Windows.Media.VisualCollection>       Als u meer op laag niveau controle over de onderliggende opslag implementatie van de visual onderliggende objecten nodig hebt, kunt u overwegen de <xref:System.Windows.Media.Visual.AddVisualChild%2A>en <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>methoden.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Wanneer u deze methoden, u uw eigen implementatie opslag definiÃ«ren en gebruik niet <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Insert (int index, System.Windows.Media.Visual visual);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index waarmee de waarde moet worden ingevoegd."
    - id: visual
      type: System.Windows.Media.Visual
      description: "De <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> invoegen in de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>is kleiner dan nul of groter zijn dan <xref:System.Windows.Media.VisualCollection.Count*>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Hiermee wordt een waarde die aangeeft of de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> is alleen-lezen."
  remarks: "Deze eigenschap is altijd `false` voor alle <xref:System.Windows.Media.VisualCollection>objecten.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "De waarde die aangeeft of de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> is alleen-lezen."
  overload: System.Windows.Media.VisualCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Hiermee wordt een waarde die aangeeft of de toegang tot de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> (thread-safe) wordt gesynchroniseerd."
  remarks: "Deze eigenschap is altijd `false` voor alle <xref:System.Windows.Media.VisualCollection>objecten.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "De waarde die aangeeft of de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> (thread-safe) wordt gesynchroniseerd."
  overload: System.Windows.Media.VisualCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> die is opgeslagen op de op nul gebaseerde index van de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Deze eigenschap biedt de mogelijkheid voor toegang tot een specifieke <xref:System.Windows.Media.Visual>in de <xref:System.Windows.Media.VisualCollection>met behulp van een index.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual>"
  syntax:
    content: public System.Windows.Media.Visual this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> waaruit u wilt ophalen of instellen de <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>."
    return:
      type: System.Windows.Media.Visual
      description: "The <xref href=&quot;System.Windows.Media.Visual&quot;></xref> that is stored at <code>index</code>."
  overload: System.Windows.Media.VisualCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>is kleiner dan nul, of <code>index</code> is gelijk aan of groter zijn dan <xref:System.Windows.Media.VisualCollection.Count*>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Het nieuwe onderliggende element heeft al een bovenliggende of de waarde in de opgegeven index is geen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  id: Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Verwijdert de opgegeven <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> object uit de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "De visuele objecten die het verwijderde object volgen verplaatst om de vrijgekomen positie innemen en hun indexwaarden worden bijgewerkt. Als `visual` is `null`, de eerste `null` vermelding is verwijderd. Houd er rekening mee dat u verwijdert een `null` item lineaire in de grootte van de verzameling is.       De Remove-methode wordt ook verwijderd van de bovenliggende / onderliggende relatie tussen de bovenliggende visual, dit de eigenaar is van de <xref:System.Windows.Media.VisualCollection>, en de onderliggende `visual`.</xref:System.Windows.Media.VisualCollection>       Als u meer op laag niveau controle over de onderliggende opslag implementatie van de visual onderliggende objecten nodig hebt, kunt u overwegen de <xref:System.Windows.Media.Visual.AddVisualChild%2A>en <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>methoden.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Wanneer u deze methoden, u uw eigen implementatie opslag definiÃ«ren en gebruik niet <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Remove (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "De <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> verwijderen uit de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Hiermee verwijdert u het visual-object op de opgegeven index in de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "De visuele objecten die het verwijderde object volgen verplaatst om de vrijgekomen positie innemen en hun indexwaarden worden bijgewerkt.       De methode RemoveAt wordt ook verwijderd van de bovenliggende / onderliggende relatie tussen de bovenliggende visual, dit de eigenaar is van de <xref:System.Windows.Media.VisualCollection>, en de onderliggende `visual`.</xref:System.Windows.Media.VisualCollection>       Als u meer op laag niveau controle over de onderliggende opslag implementatie van de visual onderliggende objecten nodig hebt, kunt u overwegen de <xref:System.Windows.Media.Visual.AddVisualChild%2A>en <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>methoden.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Wanneer u deze methoden, u uw eigen implementatie opslag definiÃ«ren en gebruik niet <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van het visuele element te verwijderen."
  overload: System.Windows.Media.VisualCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>is kleiner dan nul, of <code>index</code> is gelijk aan of groter zijn dan <xref:System.Windows.Media.VisualCollection.Count*>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Hiermee verwijdert u een bereik van visual objecten uit de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "De visuele objecten die de verwijderde objecten volgen verplaatst om de vrijgekomen posities innemen en hun indexwaarden worden bijgewerkt.       De methode RemoveRange wordt ook verwijderd van de bovenliggende en onderliggende relaties tussen de bovenliggende visual, de eigenaar is van de <xref:System.Windows.Media.VisualCollection>, en het bereik van onderliggende visuele elementen.</xref:System.Windows.Media.VisualCollection>       Als u meer op laag niveau controle over de onderliggende opslag implementatie van de visual onderliggende objecten nodig hebt, kunt u overwegen de <xref:System.Windows.Media.Visual.AddVisualChild%2A>en <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>methoden.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Wanneer u deze methoden, u uw eigen implementatie opslag definiÃ«ren en gebruik niet <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "De op nul gebaseerde index van het bereik van elementen te verwijderen."
    - id: count
      type: System.Int32
      description: "Het aantal elementen te verwijderen."
  overload: System.Windows.Media.VisualCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>is kleiner dan nul of <code>count</code> is kleiner dan nul."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>en <code>count</code> niet verwijzen naar een geldig bereik van elementen in de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Haalt een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Een waarde van het type <xref:System.Object>.</xref:System.Object>"
  overload: System.Windows.Media.VisualCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Dit lid ondersteunt de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructuur en is niet bedoeld voor rechtstreeks gebruik vanuit uw code. Zie voor een beschrijving van dit lid, <xref:System.Collections.IEnumerable.GetEnumerator*>.</xref:System.Collections.IEnumerable.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Een object dat kan worden gebruikt voor de collectie doorlopen."
  overload: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.VisualCollection.Capacity
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
- uid: System.Windows.Media.Visual[]
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual[]
  spec.csharp:
  - uid: System.Windows.Media.Visual
    name: Visual
    nameWithType: Visual
    fullName: Visual[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.VisualCollection.Count
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
- uid: System.Windows.Media.VisualCollection.Enumerator
  parent: System.Windows.Media
  isExternal: false
  name: VisualCollection+Enumerator
  nameWithType: VisualCollection+Enumerator
  fullName: System.Windows.Media.VisualCollection+Enumerator
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Media.VisualCollection.SyncRoot
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Media.VisualCollection.#ctor*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection
  nameWithType: VisualCollection.VisualCollection
- uid: System.Windows.Media.VisualCollection.Add*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add
  nameWithType: VisualCollection.Add
- uid: System.Windows.Media.VisualCollection.Capacity*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear
  nameWithType: VisualCollection.Clear
- uid: System.Windows.Media.VisualCollection.Contains*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains
  nameWithType: VisualCollection.Contains
- uid: System.Windows.Media.VisualCollection.CopyTo*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo
  nameWithType: VisualCollection.CopyTo
- uid: System.Windows.Media.VisualCollection.Count*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: VisualCollection.GetEnumerator
- uid: System.Windows.Media.VisualCollection.IndexOf*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf
  nameWithType: VisualCollection.IndexOf
- uid: System.Windows.Media.VisualCollection.Insert*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert
  nameWithType: VisualCollection.Insert
- uid: System.Windows.Media.VisualCollection.IsReadOnly*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item
  nameWithType: VisualCollection.Item
- uid: System.Windows.Media.VisualCollection.Remove*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove
  nameWithType: VisualCollection.Remove
- uid: System.Windows.Media.VisualCollection.RemoveAt*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt
  nameWithType: VisualCollection.RemoveAt
- uid: System.Windows.Media.VisualCollection.RemoveRange*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange
  nameWithType: VisualCollection.RemoveRange
- uid: System.Windows.Media.VisualCollection.SyncRoot*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator
