### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.JumpTask
  id: JumpTask
  children:
  - System.Windows.Shell.JumpTask.#ctor
  - System.Windows.Shell.JumpTask.ApplicationPath
  - System.Windows.Shell.JumpTask.Arguments
  - System.Windows.Shell.JumpTask.Description
  - System.Windows.Shell.JumpTask.IconResourceIndex
  - System.Windows.Shell.JumpTask.IconResourcePath
  - System.Windows.Shell.JumpTask.Title
  - System.Windows.Shell.JumpTask.WorkingDirectory
  langs:
  - csharp
  name: JumpTask
  nameWithType: JumpTask
  fullName: System.Windows.Shell.JumpTask
  type: Class
  summary: "Hiermee geeft u een snelkoppeling naar een App in de [!INCLUDE[win7](~/add/includes/win7-md.md)] taakbalk Jump List."
  remarks: "Een JumpTask kan worden beschouwd als een snelkoppeling naar een toepassing. U het pad naar het uitvoerbare bestand opgeven door de <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>eigenschap.</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> Als de <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>is niet ingesteld, wordt het pad van het huidige actieve proces geïmpliceerd.</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> U kunt optioneel opgeven <xref:System.Windows.Shell.JumpTask.Arguments%2A>doorgeven aan de toepassing tijdens het opstarten.</xref:System.Windows.Shell.JumpTask.Arguments%2A>       U kunt de eigenschappen van de algemene informatie, zoals instellen <xref:System.Windows.Shell.JumpTask.Title%2A>, <xref:System.Windows.Shell.JumpTask.Description%2A>, en <xref:System.Windows.Shell.JumpTask.IconResourcePath%2A>om op te geven van de weergave van de taak in de lijst gaan.</xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> </xref:System.Windows.Shell.JumpTask.Description%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> Een pictogram dat wordt gebruikt met een JumpTask moet beschikbaar zijn als een systeemeigen resource. Als meerdere pictogram resources beschikbaar in een DLL of uitvoerbaar bestand zijn, u het token voor gebruik door te geven van een offset in de <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>eigenschap.</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       Standaard wordt een JumpTask worden geplaatst de **taken** categorie van de lijst gaan. U kunt aangepaste groepering van taken opgeven door de <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>eigenschap.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A>       U kunt items in een lijst gaan visueel scheiden door het maken van een JumpTask die geen heeft een <xref:System.Windows.Shell.JumpTask.Title%2A>en <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>opgegeven.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> Deze leeg JumpTask wordt weergegeven als een horizontale lijn in de lijst gaan. In dit geval andere eigenschappen kunnen worden ingesteld, maar zij hebben geen effect."
  example:
  - "The following example shows how to declare a JumpTask in markup. The JumpTask opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a JumpTask in code. The JumpTask opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: 'public class JumpTask : System.Windows.Shell.JumpItem'
  inheritance:
  - System.Object
  - System.Windows.Shell.JumpItem
  implements: []
  inheritedMembers:
  - System.Windows.Shell.JumpItem.CustomCategory
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Windows.Shell.JumpTask&quot;> </xref> klasse."
  syntax:
    content: public JumpTask ();
    parameters: []
  overload: System.Windows.Shell.JumpTask.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  id: ApplicationPath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Opgehaald of ingesteld van het pad naar de toepassing."
  remarks: "Als de eigenschap ApplicationPath niet is opgegeven, wordt het pad van het huidige actieve proces geïmpliceerd. Een toepassing kan taken voor uitvoerbare bestanden dan zichzelf bevatten."
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string ApplicationPath { get; set; }
    return:
      type: System.String
      description: "Het pad naar de toepassing. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Arguments
  id: Arguments
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Opgehaald of ingesteld van de argumenten doorgegeven aan de toepassing bij het opstarten."
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string Arguments { get; set; }
    return:
      type: System.String
      description: "De argumenten doorgegeven aan de toepassing bij het opstarten. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Description
  id: Description
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Opgehaald of ingesteld van de tekst die wordt weergegeven in de knopinfo voor de taak in de lijst gaan."
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "De tekst die wordt weergegeven in de knopinfo voor de taak. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  id: IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Opgehaald of ingesteld van de op nul gebaseerde index van een pictogram dat is ingesloten in een resource."
  remarks: "Een pictogram dat wordt gebruikt met een <xref:System.Windows.Shell.JumpTask>moet beschikbaar zijn als een systeemeigen resource.</xref:System.Windows.Shell.JumpTask> Als meerdere pictogrammen beschikbaar in een DLL of uitvoerbaar bestand zijn, geeft u het token voor gebruik door een offset in de eigenschap IconResourceIndex aan te geven.       Als er geen pictogram resource is opgegeven of als het opgegeven pictogram niet wordt gevonden, wordt het standaardbesturingssysteem-pictogram weergegeven. Wilt opgeven dat er geen pictogram wordt weergegeven, stelt u de eigenschap IconResourceIndex op-1."
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public int IconResourceIndex { get; set; }
    return:
      type: System.Int32
      description: "De op nul gebaseerde index van het pictogram is of -1 als er geen pictogram wordt gebruikt. De standaardwaarde is 0."
  overload: System.Windows.Shell.JumpTask.IconResourceIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  id: IconResourcePath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Opgehaald of ingesteld van het pad naar een bron die met het pictogram moet worden weergegeven in de lijst gaan."
  remarks: "Een pictogram dat wordt gebruikt met een <xref:System.Windows.Shell.JumpTask>moet beschikbaar zijn als een systeemeigen resource.</xref:System.Windows.Shell.JumpTask> Als meerdere pictogrammen in een DLL of uitvoerbaar bestand beschikbaar zijn, u het token voor gebruik door te geven van een offset in de <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>eigenschap.</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       Als er geen pictogram resource is opgegeven of als het opgegeven pictogram niet wordt gevonden, wordt het standaardbesturingssysteem-pictogram weergegeven. Wilt u opgeven dat er geen pictogram wordt weergegeven, stelt de <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>eigenschap in op -1.</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string IconResourcePath { get; set; }
    return:
      type: System.String
      description: "Het pad naar een resource die het pictogram bevat. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.IconResourcePath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Title
  id: Title
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Opgehaald of ingesteld van de tekst die wordt weergegeven voor de taak in de lijst gaan."
  remarks: "Normaal gesproken de eigenschap Title moet worden ingesteld voor de <xref:System.Windows.Shell.JumpTask>worden weergegeven in de lijst gaan als een taak klikbaar.</xref:System.Windows.Shell.JumpTask>       U kunt ook kunt u visueel scheiden items in een lijst gaan door het maken van een <xref:System.Windows.Shell.JumpTask>die geen een titel en <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>opgegeven.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask> Deze leeg <xref:System.Windows.Shell.JumpTask>wordt weergegeven als een horizontale lijn in de lijst gaan.</xref:System.Windows.Shell.JumpTask> In dit geval andere eigenschappen kunnen worden ingesteld, maar zij hebben geen effect."
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file name `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "De tekst die wordt weergegeven voor de taak in de lijst gaan. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  id: WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Opgehaald of ingesteld van de werkmap van de toepassing bij het opstarten."
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string WorkingDirectory { get; set; }
    return:
      type: System.String
      description: "De werkmap van de toepassing bij het opstarten. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.WorkingDirectory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Shell.JumpItem
  isExternal: false
  name: System.Windows.Shell.JumpItem
- uid: System.Windows.Shell.JumpTask.#ctor
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.JumpTask.Arguments
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
- uid: System.Windows.Shell.JumpTask.#ctor*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask
  nameWithType: JumpTask.JumpTask
- uid: System.Windows.Shell.JumpTask.ApplicationPath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
- uid: System.Windows.Shell.JumpTask.Arguments*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
- uid: System.Windows.Shell.JumpTask.IconResourcePath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
