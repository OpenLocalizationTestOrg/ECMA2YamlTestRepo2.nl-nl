### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionManager
  id: TransactionManager
  children:
  - System.Transactions.TransactionManager.DefaultTimeout
  - System.Transactions.TransactionManager.DistributedTransactionStarted
  - System.Transactions.TransactionManager.HostCurrentCallback
  - System.Transactions.TransactionManager.MaximumTimeout
  - System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  - System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  langs:
  - csharp
  name: TransactionManager
  nameWithType: TransactionManager
  fullName: System.Transactions.TransactionManager
  type: Class
  summary: "Bevat de methoden die worden gebruikt voor het transactiebeheer van de. Deze klasse kan niet worden overgenomen."
  remarks: "Deze klasse bevat statische eigenschappen en methoden die worden gebruikt om informatie te verkrijgen over de standaard transactie-opties. Het bevat ook verschillende statische methoden die worden gebruikt voor herstel van een duurzame wanneer de duurzame bron mislukt. Er is geen speciale actie vereist van een duurzame resource als de Microsoft Distributed Transaction Coordinator (MSDTC) is mislukt."
  syntax:
    content: public static class TransactionManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.DefaultTimeout
  id: DefaultTimeout
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
  fullName: System.Transactions.TransactionManager.DefaultTimeout
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee haalt u de standaard time-outinterval voor nieuwe transacties."
  remarks: "De time-outinterval van een transactie is de tijd waarbinnen de transactie moet worden voltooid. Als de transactiebeheerder heeft geen gehoord dat alle Transactiedeelnemers binnen de time-outinterval, breekt de transactie af.       Deze waarde kan worden ingesteld in de `DefaultSettingsSection` van het configuratiebestand."
  syntax:
    content: public static TimeSpan DefaultTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Een <xref:System.TimeSpan>waarde waarmee de time-outinterval voor nieuwe transacties.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionManager.DefaultTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.DistributedTransactionStarted
  id: DistributedTransactionStarted
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: DistributedTransactionStarted
  nameWithType: TransactionManager.DistributedTransactionStarted
  fullName: System.Transactions.TransactionManager.DistributedTransactionStarted
  type: Event
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee wordt aangegeven dat een gedistribueerde transactie is gestart."
  remarks: "**Waarschuwing** aanmelden voor deze gebeurtenis de prestaties van alle gedistribueerde transacties vermindert. Lokale transacties worden niet bewaakt als prestaties nog verder worden be√Ønvloed.       **Opmerking** maakt gebruik van deze methode <xref:System.Security.Permissions.SecurityAction>om te voorkomen dat deze wordt aangeroepen vanuit niet-vertrouwde code; alleen de onmiddellijke aanroeper is echter vereist dat de `FullTrust` machtigingenset.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static event System.Transactions.TransactionStartedEventHandler DistributedTransactionStarted;
    return:
      type: System.Transactions.TransactionStartedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.HostCurrentCallback
  id: HostCurrentCallback
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
  fullName: System.Transactions.TransactionManager.HostCurrentCallback
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Opgehaald of ingesteld van een aangepaste transactie-factory."
  remarks: '**Opmerking** maakt gebruik van deze methode <xref:System.Security.Permissions.SecurityAction>om te voorkomen dat deze wordt aangeroepen vanuit niet-vertrouwde code; alleen de onmiddellijke aanroeper is echter vereist dat de `FullTrust` machtigingenset.</xref:System.Security.Permissions.SecurityAction>'
  syntax:
    content: public static System.Transactions.HostCurrentTransactionCallback HostCurrentCallback { get; set; }
    return:
      type: System.Transactions.HostCurrentTransactionCallback
      description: "Een <xref href=&quot;System.Transactions.HostCurrentTransactionCallback&quot;> </xref> die een aangepaste transactie-factory bevat."
  overload: System.Transactions.TransactionManager.HostCurrentCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.MaximumTimeout
  id: MaximumTimeout
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
  fullName: System.Transactions.TransactionManager.MaximumTimeout
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hiermee haalt u de standaard maximum time-outinterval voor nieuwe transacties."
  remarks: "Voor een uitleg van de time-outinterval, Zie de documentatie voor de <xref:System.Transactions.TransactionManager.DefaultTimeout%2A>eigenschap.</xref:System.Transactions.TransactionManager.DefaultTimeout%2A>       Deze waarde kan worden ingesteld in de `MachineSettingsSection` van het configuratiebestand."
  syntax:
    content: public static TimeSpan MaximumTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Een <xref:System.TimeSpan>waarde waarmee de maximum time-outperiode die is toegestaan tijdens het maken van nieuwe transacties.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionManager.MaximumTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  id: RecoveryComplete(System.Guid)
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: RecoveryComplete(Guid)
  nameWithType: TransactionManager.RecoveryComplete(Guid)
  fullName: System.Transactions.TransactionManager.RecoveryComplete(Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "De transactiebeheerder waarschuwt dat een resourcemanager herstellen van fouten is voltooid reenlisting alle niet-omgezette transacties."
  remarks: "Alle duurzame bronbeheer herstel moeten doen als ze eerst worden opgestart door het aanroepen van de <xref:System.Transactions.TransactionManager.Reenlist%2A>methode voor elke openstaande transactie.</xref:System.Transactions.TransactionManager.Reenlist%2A>  Alleen wanneer alle van de reenlistments klaar bent met aanroept de resourcemanager RecoveryComplete.       Zie voor meer informatie over herstel [herstel uitvoeren van](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       **Opmerking** maakt gebruik van deze methode <xref:System.Security.Permissions.SecurityAction>om te voorkomen dat deze wordt aangeroepen vanuit niet-vertrouwde code; alleen de onmiddellijke aanroeper is echter vereist dat de `FullTrust` machtigingenset.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static void RecoveryComplete (Guid resourceManagerIdentifier);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Een <xref:System.Guid>die de resource moet worden hersteld van een unieke identificeert.</xref:System.Guid>"
  overload: System.Transactions.TransactionManager.RecoveryComplete*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>resourceManagerIdentifier</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  id: Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: Reenlist(Guid,Byte[],IEnlistmentNotification)
  nameWithType: TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  fullName: System.Transactions.TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Reenlists een duurzame deelnemer in een transactie."
  remarks: "Een resourcemanager vergemakkelijkt de resolutie van langdurige inschrijvingen toegestaan in een transactie door de deelnemer transactie reenlisting na een storing in bron.       De `resourceManagerIdentifier` parameter wordt gebruikt als consistent label de deelnemer van een transactie bij een storing van de resource.  Bij het aanroepen van de Reenlist-methode, moet de resourcemanager bieden dezelfde `resourceManagerIdentifier` zoals het wordt gebruikt wanneer deze oorspronkelijk aangeroepen de <xref:System.Transactions.Transaction.EnlistDurable%2A>methode tijdens de aanmelding is, of een <xref:System.Transactions.TransactionException>gegenereerd.</xref:System.Transactions.TransactionException> </xref:System.Transactions.Transaction.EnlistDurable%2A>       Wanneer een deelnemer is reenlisted met behulp van deze methode is de fase 2-methoden van <xref:System.Transactions.IEnlistmentNotification>die overeenkomen met de uitkomst van de transactie (dat wil zeggen, <xref:System.Transactions.IEnlistmentNotification.Commit%2A>, <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>of <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>) zo nodig worden genoemd.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> </xref:System.Transactions.IEnlistmentNotification>       Nadat de deelnemers zijn met succes reenlisted, moet u vervolgens aanroepen <xref:System.Transactions.TransactionManager.RecoveryComplete%2A>om het herstel te voltooien.</xref:System.Transactions.TransactionManager.RecoveryComplete%2A>       U moet deze methode pas aanroepen wanneer een resourcemanager fout opnieuw wordt opgestart. Bovendien moet u alleen niet-omgezette transacties die zijn vastgelegd door een resourcemanager tijdens de eerste fase voorbereiden van een doorvoertransactie opnieuw. Elke poging deze methode niet aanroepen op ongeldige tijdstippen kan foutieve resultaten opleveren.       Als de transactiebeheerder is mislukt en de resourcemanager herstel alleen een korte periode voert nadat u aangeroepen de <xref:System.Transactions.PreparingEnlistment.Prepared%2A>methode op een inschrijving voor fase 1 van het protocol doorvoer in twee fasen doorvoeren uw resourcemanager mogelijk ontvangt de <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>of <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>retouraanroep.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.PreparingEnlistment.Prepared%2A>       Zie voor meer informatie over herstel [herstel uitvoeren van](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       **Opmerking** maakt gebruik van deze methode <xref:System.Security.Permissions.SecurityAction>om te voorkomen dat deze wordt aangeroepen vanuit niet-vertrouwde code; alleen de onmiddellijke aanroeper is echter vereist dat de `FullTrust` machtigingenset.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static System.Transactions.Enlistment Reenlist (Guid resourceManagerIdentifier, byte[] recoveryInformation, System.Transactions.IEnlistmentNotification enlistmentNotification);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "Een <xref:System.Guid>die wordt aangeduid de resourcemanager.</xref:System.Guid>"
    - id: recoveryInformation
      type: System.Byte[]
      description: "Bevat aanvullende informatie van herstelgegevens."
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Een resource-object implementeert <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> om meldingen te ontvangen."
    return:
      type: System.Transactions.Enlistment
      description: "Een <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> die de inschrijving wordt beschreven."
  overload: System.Transactions.TransactionManager.Reenlist*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>recoveryInformation</code>is ongeldig.       - of - informatie van de transactiebeheerder in <code>recoveryInformation</code> komt niet overeen met de geconfigureerde transactiebeheerder.       - of - <code>RecoveryInformation</code> wordt niet herkend door <xref href=&quot;System.Transactions&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Transactions.TransactionManager.RecoveryComplete*>is al aangeroepen voor het opgegeven <code> resourceManagerIdentifier </code>.</xref:System.Transactions.TransactionManager.RecoveryComplete*> De reenlistment wordt geweigerd."
  - type: System.Transactions.TransactionException
    commentId: T:System.Transactions.TransactionException
    description: "De <code> resourceManagerIdentifier </code> komt niet overeen met de inhoud van de opgegeven herstelgegevens in <code> recoveryInformation </code>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Transactions.TransactionException
  parent: System.Transactions
  isExternal: false
  name: TransactionException
  nameWithType: TransactionException
  fullName: System.Transactions.TransactionException
- uid: System.Transactions.TransactionManager.DefaultTimeout
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
  fullName: System.Transactions.TransactionManager.DefaultTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionManager.DistributedTransactionStarted
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DistributedTransactionStarted
  nameWithType: TransactionManager.DistributedTransactionStarted
  fullName: System.Transactions.TransactionManager.DistributedTransactionStarted
- uid: System.Transactions.TransactionStartedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionStartedEventHandler
  nameWithType: TransactionStartedEventHandler
  fullName: System.Transactions.TransactionStartedEventHandler
- uid: System.Transactions.TransactionManager.HostCurrentCallback
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
  fullName: System.Transactions.TransactionManager.HostCurrentCallback
- uid: System.Transactions.HostCurrentTransactionCallback
  parent: System.Transactions
  isExternal: false
  name: HostCurrentTransactionCallback
  nameWithType: HostCurrentTransactionCallback
  fullName: System.Transactions.HostCurrentTransactionCallback
- uid: System.Transactions.TransactionManager.MaximumTimeout
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
  fullName: System.Transactions.TransactionManager.MaximumTimeout
- uid: System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: RecoveryComplete(Guid)
  nameWithType: TransactionManager.RecoveryComplete(Guid)
  fullName: System.Transactions.TransactionManager.RecoveryComplete(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: Reenlist(Guid,Byte[],IEnlistmentNotification)
  nameWithType: TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  fullName: System.Transactions.TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
- uid: System.Transactions.TransactionManager.DefaultTimeout*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
- uid: System.Transactions.TransactionManager.HostCurrentCallback*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
- uid: System.Transactions.TransactionManager.MaximumTimeout*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
- uid: System.Transactions.TransactionManager.RecoveryComplete*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: RecoveryComplete
  nameWithType: TransactionManager.RecoveryComplete
- uid: System.Transactions.TransactionManager.Reenlist*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: Reenlist
  nameWithType: TransactionManager.Reenlist
