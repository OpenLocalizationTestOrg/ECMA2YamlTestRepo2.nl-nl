### YamlMime:ManagedReference
items:
- uid: System.Web.HttpServerUtility
  id: HttpServerUtility
  children:
  - System.Web.HttpServerUtility.ClearError
  - System.Web.HttpServerUtility.CreateObject(System.String)
  - System.Web.HttpServerUtility.CreateObject(System.Type)
  - System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  - System.Web.HttpServerUtility.Execute(System.String)
  - System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  - System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  - System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  - System.Web.HttpServerUtility.GetLastError
  - System.Web.HttpServerUtility.HtmlDecode(System.String)
  - System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.HtmlEncode(System.String)
  - System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.MachineName
  - System.Web.HttpServerUtility.MapPath(System.String)
  - System.Web.HttpServerUtility.ScriptTimeout
  - System.Web.HttpServerUtility.Transfer(System.String)
  - System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  - System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  - System.Web.HttpServerUtility.TransferRequest(System.String)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  - System.Web.HttpServerUtility.UrlDecode(System.String)
  - System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.UrlEncode(System.String)
  - System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.UrlPathEncode(System.String)
  - System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  - System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  langs:
  - csharp
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
  type: Class
  summary: "Biedt methoden voor het verwerken van webaanvragen."
  remarks: "De methoden en eigenschappen van de klasse HttpServerUtility worden weergegeven via het ingebouwde <xref:System.Web.HttpContext.Server%2A>object dat is opgegeven door ASP.NET.</xref:System.Web.HttpContext.Server%2A>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192870).  \n  \n The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method and the <xref:System.Web.HttpServerUtility.UrlEncode%2A> method of the HttpServerUtility class. The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements. The <xref:System.Web.HttpServerUtility.UrlEncode%2A> method encodes URLs so that they are correctly transmitted in the HTTP stream.  \n  \n [!code-cs[System.Web.HttpServerUtility1#1](~/add/codesnippet/csharp/t-system.web.httpserveru_1.aspx)]\n [!code-vb[System.Web.HttpServerUtility1#1](~/add/codesnippet/visualbasic/t-system.web.httpserveru_1.aspx)]"
  syntax:
    content: public sealed class HttpServerUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.ClearError
  id: ClearError
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: ClearError()
  nameWithType: HttpServerUtility.ClearError()
  fullName: System.Web.HttpServerUtility.ClearError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee worden de vorige uitzondering gewist."
  remarks: ''
  example:
  - "The following example clears the last exception that was thrown.  \n  \n [!code-cs[Classic HttpServerUtility.ClearError Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_6_1.cs)]\n [!code-vb[Classic HttpServerUtility.ClearError Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_6_1.vb)]"
  syntax:
    content: public void ClearError ();
    parameters: []
  overload: System.Web.HttpServerUtility.ClearError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObject(System.String)
  id: CreateObject(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObject(String)
  nameWithType: HttpServerUtility.CreateObject(String)
  fullName: System.Web.HttpServerUtility.CreateObject(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt een serverexemplaar van een COM-object dat is geïdentificeerd door een programma van de object-id (ProgID)."
  remarks: ''
  example:
  - "The following example creates an object by using the object's ProgID.  \n  \n [!code-vb[Classic HttpServerUtility.CreateObject Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_4_1.vb)]\n [!code-cs[Classic HttpServerUtility.CreateObject Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_4_1.cs)]"
  syntax:
    content: public object CreateObject (string progID);
    parameters:
    - id: progID
      type: System.String
      description: "De klasse of type object dat een exemplaar van te maken."
    return:
      type: System.Object
      description: "Het nieuwe object."
  overload: System.Web.HttpServerUtility.CreateObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Een exemplaar van het object kan niet worden gemaakt."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObject(System.Type)
  id: CreateObject(System.Type)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObject(Type)
  nameWithType: HttpServerUtility.CreateObject(Type)
  fullName: System.Web.HttpServerUtility.CreateObject(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt een serverexemplaar van een COM-object dat is geïdentificeerd door het objecttype."
  syntax:
    content: public object CreateObject (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Een <xref:System.Type>het object te maken.</xref:System.Type>"
    return:
      type: System.Object
      description: "Het nieuwe object."
  overload: System.Web.HttpServerUtility.CreateObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  id: CreateObjectFromClsid(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObjectFromClsid(String)
  nameWithType: HttpServerUtility.CreateObjectFromClsid(String)
  fullName: System.Web.HttpServerUtility.CreateObjectFromClsid(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Maakt een serverexemplaar van een COM-object dat is geïdentificeerd door het object van klasse-id (CLSID)."
  remarks: ''
  example:
  - "The following example demonstrates how to use the CreateObjectFromClsid method to create a server instance of a COM object.  \n  \n [!code-cs[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_2_1.cs)]\n [!code-vb[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_2_1.vb)]"
  syntax:
    content: public object CreateObjectFromClsid (string clsid);
    parameters:
    - id: clsid
      type: System.String
      description: "De klasse-id van het object een exemplaar van te maken."
    return:
      type: System.Object
      description: "Het nieuwe object."
  overload: System.Web.HttpServerUtility.CreateObjectFromClsid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Een exemplaar van het object kan niet worden gemaakt."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String)
  id: Execute(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String)
  nameWithType: HttpServerUtility.Execute(String)
  fullName: System.Web.HttpServerUtility.Execute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De handler voor het virtuele pad worden uitgevoerd in de context van de huidige aanvraag."
  remarks: "De methode Execute blijft in uitvoering van de oorspronkelijke pagina nadat de uitvoering van de nieuwe pagina is voltooid. De <xref:System.Web.HttpServerUtility.Transfer%2A>methode onvoorwaardelijk uitvoering worden overgebracht naar een andere handler.</xref:System.Web.HttpServerUtility.Transfer%2A>       ASP.NET controleert niet of dat de huidige gebruiker is gemachtigd om de resource die is geleverd door de methode Execute weer te geven. Hoewel de ASP.NET-logica voor autorisatie en verificatie wordt uitgevoerd voordat de oorspronkelijke bron handler wordt aangeroepen, wordt ASP.NET rechtstreeks de handler aangegeven door de Execute-methode wordt aangeroepen en logica voor verificatie en autorisatie voor de nieuwe resource niet opnieuw uitgevoerd. Als het beveiligingsbeleid van uw toepassing vereist dat clients juiste autorisatie voor toegang tot de resource hebt, wordt dit door de toepassing opnieuw autoriseren forceren of bieden een mechanisme voor toegangsbeheer is aangepast.       U kunt opnieuw autoriseren afdwingen met behulp van de <xref:System.Web.HttpResponse.Redirect%2A>methode in plaats van de methode Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>voert een client-side &quot;-omleiding waarin de browser de nieuwe resource wordt aangevraagd.</xref:System.Web.HttpResponse.Redirect%2A> Omdat dit een nieuwe aanvraag voor het invoeren van het systeem is, is het onderworpen aan de verificatie en autorisatie logica van Internet Information Services (IIS)- en ASP.NET-beveiligingsbeleid.       U kunt controleren of de gebruiker gemachtigd om weer te geven van de resource is door de integratie van een aangepaste autorisatiemethode die gebruikmaakt van de <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>methode voordat de toepassing de Execute-methode aanroept.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example displays the .aspx page \"Updateinfo.aspx\" in the current directory. Program execution returns to the starting page after the Updateinfo.aspx page is displayed.  \n  \n [!code-vb[Classic HttpServerUtility.Execute Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_15_1.vb)]\n [!code-cs[Classic HttpServerUtility.Execute Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_15_1.cs)]"
  syntax:
    content: public void Execute (string path);
    parameters:
    - id: path
      type: System.String
      description: "Het URL-pad om uit te voeren."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  id: Execute(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,Boolean)
  nameWithType: HttpServerUtility.Execute(String,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De handler voor het virtuele pad in de context van de huidige aanvraag wordt uitgevoerd en geeft u aan of schakel de <> </> *> en <> </> *> verzamelingen."
  remarks: ''
  example:
  - "The following example shows how to execute the .aspx page `Updateinfo.aspx` in the current request and preserve the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections. Program execution returns to the starting page after `Updateinfo.aspx` is displayed.  \n  \n [!code-vb[HttpServerUtility.Execute#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_16_1.aspx)]\n [!code-cs[HttpServerUtility.Execute#1](~/add/codesnippet/csharp/m-system.web.httpserveru_16_1.aspx)]"
  syntax:
    content: public void Execute (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Het URL-pad om uit te voeren."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt behouden de <> </> *> en <> </> *> verzamelingen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  id: Execute(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,TextWriter)
  nameWithType: HttpServerUtility.Execute(String,TextWriter)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De handler voor het virtuele pad worden uitgevoerd in de context van de huidige aanvraag. Een <xref:System.IO.TextWriter>uitvoer van de uitgevoerde handler worden vastgelegd.</xref:System.IO.TextWriter>"
  remarks: "De methode Execute blijft in uitvoering van de oorspronkelijke aanvraag nadat de uitvoering van het virtuele pad opgegeven is voltooid. De <xref:System.Web.HttpServerUtility.Transfer%2A>methode onvoorwaardelijk uitvoering worden overgebracht naar een andere handler.</xref:System.Web.HttpServerUtility.Transfer%2A>       ASP.NET controleert niet of dat de huidige gebruiker is gemachtigd om de resource die is geleverd door de methode Execute weer te geven. Hoewel de ASP.NET-logica voor autorisatie en verificatie wordt uitgevoerd voordat de oorspronkelijke bron handler wordt aangeroepen, wordt ASP.NET rechtstreeks de handler aangegeven door de Execute-methode wordt aangeroepen en logica voor verificatie en autorisatie voor de nieuwe resource niet opnieuw uitgevoerd. Als het beveiligingsbeleid van uw toepassing vereist dat clients juiste autorisatie voor toegang tot de resource hebt, wordt dit door de toepassing opnieuw autoriseren forceren of bieden een mechanisme voor toegangsbeheer is aangepast.       U kunt opnieuw autoriseren afdwingen met behulp van de <xref:System.Web.HttpResponse.Redirect%2A>methode in plaats van de methode Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>voert een client-side &quot;-omleiding waarin de browser de nieuwe resource wordt aangevraagd.</xref:System.Web.HttpResponse.Redirect%2A> Omdat dit een nieuwe aanvraag voor het invoeren van het systeem is, is het onderworpen aan de verificatie en autorisatie logica van Internet Information Services (IIS)- en ASP.NET-beveiligingsbeleid.       U kunt controleren of de gebruiker gemachtigd om weer te geven van de resource is door de integratie van een aangepaste autorisatiemethode die gebruikmaakt van de <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>methode voordat de toepassing de Execute-methode aanroept.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`. It writes the HTML stream received from `writer` to the HTTP output stream.  \n  \n [!code-cs[Classic HttpServerUtility.Execute1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_12_1.cs)]\n [!code-vb[Classic HttpServerUtility.Execute1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_12_1.vb)]"
  syntax:
    content: public void Execute (string path, System.IO.TextWriter writer);
    parameters:
    - id: path
      type: System.String
      description: "Het URL-pad om uit te voeren."
    - id: writer
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>om vast te leggen van de uitvoer.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  id: Execute(System.String,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(String,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De handler voor het virtuele pad worden uitgevoerd in de context van de huidige aanvraag. Een <xref:System.IO.TextWriter>opnamen uitvoer van de pagina en een Boole-parameter geeft u aan of schakel de <> </> *> en <> </> *> verzamelingen.</xref:System.IO.TextWriter>"
  remarks: "De <xref:System.Web.HttpServerUtility.Execute%2A>methode wordt de uitvoering van de oorspronkelijke aanvraag opnieuw nadat de uitvoering van het virtuele pad is voltooid.</xref:System.Web.HttpServerUtility.Execute%2A> De <xref:System.Web.HttpServerUtility.Transfer%2A>methode onvoorwaardelijk uitvoering worden overgebracht naar een andere handler.</xref:System.Web.HttpServerUtility.Transfer%2A>       ASP.NET controleert niet of dat de huidige gebruiker is gemachtigd om de resource die is geleverd door de methode Execute weer te geven. Hoewel de ASP.NET-logica voor autorisatie en verificatie wordt uitgevoerd voordat de oorspronkelijke bron handler wordt aangeroepen, wordt ASP.NET rechtstreeks de handler aangegeven door de Execute-methode wordt aangeroepen en logica voor verificatie en autorisatie voor de nieuwe resource niet opnieuw uitgevoerd. Als het beveiligingsbeleid van uw toepassing vereist dat clients juiste autorisatie voor toegang tot de resource hebt, wordt dit door de toepassing opnieuw autoriseren forceren of bieden een mechanisme voor toegangsbeheer is aangepast.       U kunt opnieuw autoriseren afdwingen met behulp van de <xref:System.Web.HttpResponse.Redirect%2A>methode in plaats van de methode Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>voert een client-side &quot;-omleiding waarin de browser de nieuwe resource wordt aangevraagd.</xref:System.Web.HttpResponse.Redirect%2A> Omdat dit een nieuwe aanvraag voor het invoeren van het systeem is, is het onderworpen aan de verificatie en autorisatie logica van Internet Information Services (IIS)- en ASP.NET-beveiligingsbeleid.       U kunt controleren of de gebruiker gemachtigd om weer te geven van de resource is door de integratie van een aangepaste autorisatiemethode die gebruikmaakt van de <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>methode voordat de toepassing de Execute-methode aanroept.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`. It writes the HTML stream received from `writer` to the HTTP output stream. The contents of the <xref:System.Web.HttpRequest.Form%2A> and <xref:System.Web.HttpRequest.QueryString%2A> collections are preserved.  \n  \n [!code-cs[HttpServerUtility.Execute02#1](~/add/codesnippet/csharp/0d13d28c-0070-4c47-b943-_1.aspx)]\n [!code-vb[HttpServerUtility.Execute02#1](~/add/codesnippet/visualbasic/0d13d28c-0070-4c47-b943-_1.aspx)]"
  syntax:
    content: public void Execute (string path, System.IO.TextWriter writer, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Het URL-pad om uit te voeren."
    - id: writer
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>om vast te leggen van de uitvoer.</xref:System.IO.TextWriter>"
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt behouden de <> </> *> en <> </> *> verzamelingen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).  \n  \n \\- or -  \n  \n <code>path</code> ends with a period (.).  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>is niet een virtueel pad."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  id: Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(IHttpHandler,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De handler voor het virtuele pad worden uitgevoerd in de context van de huidige aanvraag. Een <xref:System.IO.TextWriter>opnamen uitvoer van de uitgevoerde handler en een Boole-parameter geeft u aan of schakel de <> </> *> en <> </> *> verzamelingen.</xref:System.IO.TextWriter>"
  remarks: "U kunt aangepaste HTTP-handlers voor het verwerken van specifieke, vooraf gedefinieerde typen HTTP-aanvragen in een andere taal dat compatibel is met de Common Language Specification (CLS) schrijven. Uitvoerbare code die is gedefinieerd in de HTTP-handlerklassen in plaats van conventionele (ook wel bekend als klassieke ASP) ASP-pagina&quot;s of ASP.NET-pagina&quot;s reageert op deze specifieke aanvragen. HTTP-handlers toestaan voor interactie met de aanvraag op laag niveau en services van een webserver waarop Internet Information Services (IIS) antwoord en bieden functionaliteit die vergelijkbaar is aan het ISAPI-extensies, maar met een eenvoudiger programmeermodel.       ASP.NET controleert niet of de huidige gebruiker is gemachtigd om de resource die wordt geleverd door de methode Execute weer te geven. Hoewel de ASP.NET-logica voor autorisatie en verificatie wordt uitgevoerd voordat de oorspronkelijke bron handler wordt aangeroepen, roept ASP.NET rechtstreeks de handler die wordt aangegeven door de methode Execute en logica voor verificatie en autorisatie voor de nieuwe resource niet opnieuw uitgevoerd. Als het beveiligingsbeleid van uw toepassing vereist dat clients de juiste autorisatie voor toegang tot de resource hebt, wordt dit door de toepassing opnieuw autoriseren forceren of bieden een mechanisme voor toegangsbeheer is aangepast.       U kunt opnieuw autoriseren afdwingen met behulp van de <xref:System.Web.HttpResponse.Redirect%2A>methode in plaats van de methode Execute.</xref:System.Web.HttpResponse.Redirect%2A> De <xref:System.Web.HttpResponse.Redirect%2A>voert u een client-side &quot;-omleiding waarin de browser de nieuwe resource wordt aangevraagd.</xref:System.Web.HttpResponse.Redirect%2A> Omdat dit een nieuwe aanvraag voor het invoeren van het systeem is, is het onderworpen aan de verificatie en autorisatie logica van de IIS- en ASP.NET-beveiligingsbeleid.       U kunt controleren of de gebruiker gemachtigd om weer te geven van de resource is door de integratie van een aangepaste autorisatiemethode die gebruikmaakt van de <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>methode voordat de toepassing de Execute-methode aanroept.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "De HTTP-handler die implementeert de <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> om over te dragen van de huidige aanvraag voor."
    - id: writer
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>om vast te leggen van de uitvoer.</xref:System.IO.TextWriter>"
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt behouden de <> </> *> en <> </> *> verzamelingen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Er is een fout opgetreden tijdens het uitvoeren van de handler is opgegeven door <code> handler </code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>handler</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.GetLastError
  id: GetLastError
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: GetLastError()
  nameWithType: HttpServerUtility.GetLastError()
  fullName: System.Web.HttpServerUtility.GetLastError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "De vorige uitzondering geretourneerd."
  remarks: ''
  example:
  - "The following example prints a description of the application's last error to the HTTP output stream. It prints \"No Errors\" if no errors have been encountered.  \n  \n [!code-vb[Classic HttpServerUtility.GetLastError Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_8_1.vb)]\n [!code-cs[Classic HttpServerUtility.GetLastError Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_8_1.cs)]"
  syntax:
    content: public Exception GetLastError ();
    parameters: []
    return:
      type: System.Exception
      description: "De vorige uitzondering die is geretourneerd."
  overload: System.Web.HttpServerUtility.GetLastError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String)
  id: HtmlDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlDecode(String)
  nameWithType: HttpServerUtility.HtmlDecode(String)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Decodeert een HTML-gecodeerde tekenreeks en retourneert de gecodeerde tekenreeks."
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly. HtmlDecode decodes text that has been transmitted to the server.  \n  \n This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, this method uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> to decode strings.  \n  \n In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property. In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.  \n  \n Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values."
  example:
  - "The following example contains the function `LoadDecodedFile`, which decodes the data from a file and copies it into one string.  \n  \n [!code-cs[Classic HttpServerUtility.HtmlDecode Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_14_1.aspx)]\n [!code-vb[Classic HttpServerUtility.HtmlDecode Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_14_1.aspx)]"
  syntax:
    content: public string HtmlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "De HTML-tekenreeks decoderen."
    return:
      type: System.String
      description: "De gecodeerde tekst."
  overload: System.Web.HttpServerUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Decodeert een HTML-gecodeerde tekenreeks en verzendt de resulterende uitvoer naar een <xref:System.IO.TextWriter>uitvoerstroom.</xref:System.IO.TextWriter>"
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n <xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.  \n  \n <xref:System.Web.HttpServerUtility.HtmlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.HtmlDecode%2A> uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> to decode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following example decodes a string that has been HTML-encoded for transmission over HTTP. It decodes the supplied string named `EncodedString` which contains the text \"This is a &lt;Test String&gt;.\", and copies it into the string named `DecodedString` as \"This is a \\<Test String>.\".  \n  \n [!code-vb[Classic HttpServerUtility.HtmlDecode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_1_1.vb)]\n [!code-cs[Classic HttpServerUtility.HtmlDecode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_1_1.cs)]"
  syntax:
    content: public void HtmlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "De HTML-tekenreeks decoderen."
    - id: output
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>uitvoerstroom die de gecodeerde tekenreeks.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String)
  id: HtmlEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlEncode(String)
  nameWithType: HttpServerUtility.HtmlEncode(String)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een tekenreeks HTML codeert en retourneert de gecodeerde tekenreeks."
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, this method uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> to encode strings.  \n  \n In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property. In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.  \n  \n Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values."
  example:
  - "The following example shows how to HTML-encode a value that potentially codes unsafe code. The code resides in the code-behind file for a web page. The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode. Typically, you would HTML-encode a value that you received from the user or the request. `Result` refers to a `Literal` control.  \n  \n [!code-cs[System.Web.HttpServerUtility.HtmlEncode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_10_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.HtmlEncode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_10_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.HtmlEncode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_10_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.HtmlEncode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_10_2.vb)]"
  syntax:
    content: public string HtmlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "De tekenreeks voor het coderen."
    return:
      type: System.String
      description: "De HTML-gecodeerde tekst."
  overload: System.Web.HttpServerUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een tekenreeks HTML codeert en verzendt de resulterende uitvoer naar een <xref:System.IO.TextWriter>uitvoerstroom.</xref:System.IO.TextWriter>"
  remarks: "HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as an opening or closing bracket of an HTML tag. The HTML encoding of these two characters is `<` and `>`, respectively, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n <xref:System.Web.HttpServerUtility.HtmlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.HtmlEncode%2A> uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> to encode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following example encodes a string for transmission by HTTP. It encodes the string named `TestString`, which contains the text \"This is a \\<Test String>.\", and copies it into the string named `EncodedString` as \"This is a &lt;Test String&gt;.\".  \n  \n [!code-vb[Classic HttpServerUtility.HtmlEncode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_7_1.vb)]\n [!code-cs[Classic HttpServerUtility.HtmlEncode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_7_1.cs)]"
  syntax:
    content: public void HtmlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "De tekenreeks voor het coderen."
    - id: output
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>uitvoerstroom die de gecodeerde tekenreeks.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.MachineName
  id: MachineName
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
  fullName: System.Web.HttpServerUtility.MachineName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hiermee haalt u de computernaam van de server."
  remarks: ''
  example:
  - "The following example stores the server's computer name as a string variable.  \n  \n [!code-vb[Classic HttpServerUtility.MachineName Example#1](~/add/codesnippet/visualbasic/p-system.web.httpserveru_0_1.vb)]\n [!code-cs[Classic HttpServerUtility.MachineName Example#1](~/add/codesnippet/csharp/p-system.web.httpserveru_0_1.cs)]"
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "De naam van de lokale computer."
  overload: System.Web.HttpServerUtility.MachineName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De computernaam kan niet worden gevonden."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HttpServerUtility.MapPath(String)
  fullName: System.Web.HttpServerUtility.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Retourneert het fysieke pad dat overeenkomt met het opgegeven virtuele pad."
  remarks: "If `path` is `null`, the MapPath method returns the full physical path of the directory that contains the current request for the path. The relative path does not need to specify an existing file or folder for this method to return a value. However, you cannot specify a path outside of the Web application.  \n  \n> [!IMPORTANT]\n>  The MapPath method potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.  \n  \n A Web application that resides at `C:\\ExampleSites\\TestMapPath` would return the following results:  \n  \n|Request from|`path`|Returned value|  \n|------------------|------------|--------------------|  \n|RootLevelPage.aspx|`null`|C:\\ExampleSites\\TestMapPath|  \n|RootLevelPage.aspx|\"/DownOneLevel/DownLevelPage.aspx\"|C:\\ExampleSites\\TestMapPath\\DownOneLevel\\DownLevelPage.aspx|  \n|RootLevelPage.aspx|\"/NotRealFolder\"|C:\\ExampleSites\\TestMapPath\\NotRealFolder|  \n|RootLevelPage.aspx|\"../OutsideApplication\"|<xref:System.Web.HttpException>|  \n|/DownOneLevel/DownLevelPage.aspx|`null`|C:\\ExampleSites\\TestMapPath\\DownOneLevel|  \n|/DownOneLevel/DownLevelPage.aspx|\"../RootLevelPage.aspx\"|C:\\ExampleSites\\TestMapPath\\RootLevelPage.aspx|"
  example:
  - "The following example shows how to retrieve the physical file of a relative virtual path. The code resides in the code-behind file for a web page and utilizes the default `Server` object.  \n  \n [!code-cs[System.Web.HttpServerUtility.MapPath#1](~/add/codesnippet/csharp/m-system.web.httpserveru_5_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.MapPath#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_5_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.MapPath#2](~/add/codesnippet/csharp/m-system.web.httpserveru_5_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.MapPath#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_5_2.vb)]"
  syntax:
    content: public string MapPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Het virtuele pad in de webtoepassing."
    return:
      type: System.String
      description: "Het fysieke pad op de webserver die overeenkomt met <code> path </code>."
  overload: System.Web.HttpServerUtility.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=&quot;System.Web.HttpContext&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.ScriptTimeout
  id: ScriptTimeout
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
  fullName: System.Web.HttpServerUtility.ScriptTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Opgehaald en ingesteld van de aanvraag-time-outwaarde in seconden."
  remarks: "De eigenschap ScriptTimeout kan worden ingesteld in het bestand Web.config door in te stellen de `executionTimeout` kenmerk van het element. De time-outwaarde programmatisch met de eigenschap ScriptTimeout instelling voorrang op de Web.config instelling.      > [!NOTE] > Als u de `debug` kenmerk van het element `true` in het Web.config-bestand, de waarde van ScriptTimeout worden genegeerd."
  example:
  - "The following example sets the request time-out period to 60 seconds.  \n  \n [!code-vb[Classic HttpServerUtility.ScriptTimeout Example#1](~/add/codesnippet/visualbasic/p-system.web.httpserveru_1_1.vb)]\n [!code-cs[Classic HttpServerUtility.ScriptTimeout Example#1](~/add/codesnippet/csharp/p-system.web.httpserveru_1_1.cs)]"
  syntax:
    content: public int ScriptTimeout { get; set; }
    return:
      type: System.Int32
      description: "De waarde-instelling voor time-out voor aanvragen."
  overload: System.Web.HttpServerUtility.ScriptTimeout*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=&quot;System.Web.HttpContext&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De time-outperiode is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> of anderszins niet kan worden ingesteld."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.String)
  id: Transfer(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(String)
  nameWithType: HttpServerUtility.Transfer(String)
  fullName: System.Web.HttpServerUtility.Transfer(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Beëindigt de uitvoering van de huidige pagina en begint uitvoering van een nieuwe pagina met behulp van de opgegeven URL-pad van de pagina voor de huidige aanvraag."
  remarks: "De overgedragen naar pagina moet een andere ASPX-pagina. Bijvoorbeeld, is een overdracht naar een ASP- of .asmx-pagina niet geldig. De methode Transfer behoudt de <xref:System.Web.HttpRequest.QueryString%2A>en <xref:System.Web.HttpRequest.Form%2A>verzamelingen.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A>       Aanroepen Transfer <xref:System.Web.HttpResponse.End%2A>, welke er wordt een <xref:System.Threading.ThreadAbortException>uitzondering na voltooiing.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A>       ASP.NET controleert niet of dat de huidige gebruiker is gemachtigd om de resource die is geleverd door de methode Transfer weer te geven. Hoewel de ASP.NET-logica voor autorisatie en verificatie wordt uitgevoerd voordat de oorspronkelijke bron handler wordt aangeroepen, wordt ASP.NET rechtstreeks de handler aangegeven door de methode wordt aangeroepen en logica voor verificatie en autorisatie voor de nieuwe resource niet opnieuw uitgevoerd. Als het beveiligingsbeleid van uw toepassing vereist dat clients juiste autorisatie voor toegang tot de resource hebt, wordt dit door de toepassing opnieuw autoriseren forceren of bieden een mechanisme voor toegangsbeheer is aangepast.       U kunt opnieuw autoriseren afdwingen met behulp van de <xref:System.Web.HttpResponse.Redirect%2A>methode in plaats van de methode Transfer.</xref:System.Web.HttpResponse.Redirect%2A> De <xref:System.Web.HttpResponse.Redirect%2A>methode voert u een client-side &quot;-omleiding waarin de browser de nieuwe resource wordt aangevraagd.</xref:System.Web.HttpResponse.Redirect%2A> Omdat dit een nieuwe aanvraag voor het invoeren van het systeem is, is het onderworpen aan de verificatie en autorisatie logica van Internet Information Services (IIS)- en ASP.NET-beveiligingsbeleid.       U kunt controleren of de gebruiker gemachtigd om weer te geven van de resource is door de integratie van een aangepaste autorisatiemethode die gebruikmaakt van de <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>methode voordat de toepassing de overdracht-methode aanroept.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Transfer (string path);
    parameters:
    - id: path
      type: System.String
      description: "Het URL-pad van de nieuwe pagina op de server uit te voeren."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  id: Transfer(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(String,Boolean)
  nameWithType: HttpServerUtility.Transfer(String,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Uitvoering van de huidige pagina beëindigd en wordt de uitvoering van een nieuwe pagina wordt gestart met behulp van de opgegeven URL-pad van de pagina. Hiermee bepaalt u of schakel de <> </> *> en <> </> *> verzamelingen."
  remarks: "De overgedragen naar pagina moet een andere ASPX-pagina. Bijvoorbeeld, is een overdracht naar een ASP- of .asmx-pagina niet geldig.       Aanroepen Transfer <xref:System.Web.HttpResponse.End%2A>, welke er wordt een <xref:System.Threading.ThreadAbortException>uitzondering na voltooiing.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A>       Als u de `preserveForm` -parameter voor `true`, de doelpagina is het mogelijk toegang tot de weergavestatus van de vorige pagina met de <xref:System.Web.UI.Page.PreviousPage%2A>eigenschap.</xref:System.Web.UI.Page.PreviousPage%2A>       Om veiligheidsredenen moet u dient te houden met de `enableViewStateMac` -kenmerk ingesteld op `true`. ASP.NET controleert niet of dat de huidige gebruiker is gemachtigd om de resource die is geleverd door de methode Transfer weer te geven. Hoewel de ASP.NET-logica voor autorisatie en verificatie wordt uitgevoerd voordat de oorspronkelijke bron handler wordt aangeroepen, wordt ASP.NET rechtstreeks de handler aangegeven door de methode wordt aangeroepen en logica voor verificatie en autorisatie voor de nieuwe resource niet opnieuw uitgevoerd. Als het beveiligingsbeleid van uw toepassing vereist dat clients juiste autorisatie voor toegang tot de resource hebt, wordt dit door de toepassing opnieuw autoriseren forceren of bieden een mechanisme voor toegangsbeheer is aangepast.       U kunt opnieuw autoriseren afdwingen met behulp van de <xref:System.Web.HttpResponse.Redirect%2A>methode in plaats van de methode Transfer.</xref:System.Web.HttpResponse.Redirect%2A> De <xref:System.Web.HttpResponse.Redirect%2A>methode voert u een client-side &quot;-omleiding waarin de browser de nieuwe resource wordt aangevraagd.</xref:System.Web.HttpResponse.Redirect%2A> Omdat dit een nieuwe aanvraag voor het invoeren van het systeem is, is het onderworpen aan de verificatie en autorisatie logica van Internet Information Services (IIS)- en ASP.NET-beveiligingsbeleid.       U kunt controleren of de gebruiker gemachtigd om weer te geven van de resource is door de integratie van een aangepaste autorisatiemethode die gebruikmaakt van de <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>methode voordat de toepassing de overdracht-methode aanroept.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes a new page in the same directory as the current page.  \n  \n [!code-cs[Classic HttpServerUtility.Transfer Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_3_1.cs)]\n [!code-vb[Classic HttpServerUtility.Transfer Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_3_1.vb)]"
  syntax:
    content: public void Transfer (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Het URL-pad van de nieuwe pagina op de server uit te voeren."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt behouden de <> </> *> en <> </> *> verzamelingen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions:
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "De huidige pagina-aanvraag is een retouraanroep."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  id: Transfer(System.Web.IHttpHandler,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(IHttpHandler,Boolean)
  nameWithType: HttpServerUtility.Transfer(IHttpHandler,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(IHttpHandler,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Uitvoering van de huidige pagina beëindigt en begint met het uitvoeren van een nieuwe aanvraag met behulp van een aangepaste HTTP-handler die implementeert de <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface en geeft u aan of schakel de <> </> *> en <> </> *> verzamelingen."
  remarks: "U kunt aangepaste HTTP-handlers voor het verwerken van specifieke, vooraf gedefinieerde typen HTTP-aanvragen in een andere taal dat compatibel is met de Common Language Specification (CLS) schrijven. Uitvoerbare code die is gedefinieerd in de HTTP-handlerklassen in plaats van conventionele (ook wel bekend als klassieke ASP) ASP-pagina&quot;s of ASP.NET-pagina&quot;s reageert op deze specifieke aanvragen. HTTP-handlers toestaan voor interactie met de aanvraag op laag niveau en services van een webserver waarop Internet Information Services (IIS) antwoord en bieden functionaliteit die vergelijkbaar is aan het ISAPI-extensies, maar met een eenvoudiger programmeermodel.       Als u de `preserveForm` -parameter voor `true`, de doelpagina is het mogelijk toegang tot de weergavestatus van de vorige pagina met de <xref:System.Web.UI.Page.PreviousPage%2A>eigenschap.</xref:System.Web.UI.Page.PreviousPage%2A>       Om veiligheidsredenen moet u dient te houden met de `enableViewStateMac` -kenmerk ingesteld op `true`. ASP.NET controleert niet of de huidige gebruiker is gemachtigd om weer te geven van de resource die is geleverd door de <xref:System.Web.HttpServerUtility.Transfer%2A>methode.</xref:System.Web.HttpServerUtility.Transfer%2A> Hoewel de ASP.NET-logica voor autorisatie en verificatie wordt uitgevoerd voordat de oorspronkelijke bron handler wordt aangeroepen, ASP.NET rechtstreeks de handler aangegeven door de methode wordt aangeroepen en logica voor verificatie en autorisatie voor de nieuwe resource niet opnieuw uitgevoerd. Als het beveiligingsbeleid van uw toepassing vereist dat clients de juiste autorisatie voor toegang tot de resource hebt, wordt dit door de toepassing opnieuw autoriseren forceren of bieden een mechanisme voor toegangsbeheer is aangepast.       U kunt opnieuw autoriseren afdwingen met behulp van de <xref:System.Web.HttpResponse.Redirect%2A>methode in plaats van de methode Transfer.</xref:System.Web.HttpResponse.Redirect%2A> De <xref:System.Web.HttpResponse.Redirect%2A>methode voert u een client-side &quot;-omleiding waarin de browser de nieuwe resource wordt aangevraagd.</xref:System.Web.HttpResponse.Redirect%2A> Omdat dit een nieuwe aanvraag voor het invoeren van het systeem is, is het onderworpen aan de verificatie en autorisatie logica van de IIS- en ASP.NET-beveiligingsbeleid.       U kunt controleren of de gebruiker gemachtigd om weer te geven van de resource is door de integratie van een aangepaste autorisatiemethode die gebruikmaakt van de <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>methode voordat de toepassing de overdracht-methode aanroept.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Transfer (System.Web.IHttpHandler handler, bool preserveForm);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "De HTTP-handler die implementeert de <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> om over te dragen van de huidige aanvraag voor."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt behouden de <> </> *> en <> </> *> verzamelingen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions:
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "De huidige pagina-aanvraag is een retouraanroep."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String)
  id: TransferRequest(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String)
  nameWithType: HttpServerUtility.TransferRequest(String)
  fullName: System.Web.HttpServerUtility.TransferRequest(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een asynchrone uitvoering van de opgegeven URL."
  remarks: "Deze methode-overload roept de <xref:System.Web.HttpServerUtility.TransferRequest%2A>overbelasting met de `preserveForm` parameter ingesteld op `false`, wordt de `method` parameter ingesteld op `null`, wordt de `headers` parameter ingesteld op `null`, en de `preserveUser` parameter ingesteld op `true`.</xref:System.Web.HttpServerUtility.TransferRequest%2A> Zie voor meer informatie de sectie &quot;Opmerkingen&quot; in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>overbelasting.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>"
  syntax:
    content: public void TransferRequest (string path);
    parameters:
    - id: path
      type: System.String
      description: "Het URL-pad van de nieuwe pagina op de server uit te voeren."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De aanvraag is vereist voor de geïntegreerde pipeline-modus van [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De server is niet beschikbaar is om de aanvraag te verwerken."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> path </code> parameter is ongeldig."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  id: TransferRequest(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een asynchrone uitvoering van de opgegeven URL en behoudt queryreeksparameters."
  remarks: "Deze overbelasting roept de <xref:System.Web.HttpServerUtility.TransferRequest%2A>overbelasting met de `preserveForm` parameter is ingesteld op de waarde die is doorgegeven, de `method` parameter ingesteld op `null`, wordt de `headers` parameter ingesteld op `null`, en de `preserveUser` parameter ingesteld op `true`.</xref:System.Web.HttpServerUtility.TransferRequest%2A> Zie voor meer informatie de sectie &quot;Opmerkingen&quot; in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>       TransferRequest is opgenomen in de .NET Framework versie 3.5.  Zie voor meer informatie [versies en afhankelijkheden](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void TransferRequest (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Het URL-pad van de nieuwe pagina op de server uit te voeren."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt behouden de <> </> *> verzameling; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wissen de <> </> *> verzameling."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De aanvraag is vereist voor de geïntegreerde pipeline-modus van [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De server is niet beschikbaar is om de aanvraag te verwerken."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> path </code> parameter is ongeldig."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  id: TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean,String,NameValueCollection)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een asynchrone uitvoering van de opgegeven URL met behulp van de opgegeven HTTP-methode en -koppen."
  remarks: "Deze methode wordt gebruikt bij het uitvoeren van de geïntegreerde pipeline-modus in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] om toe te staan van aanvraagverwerking tijdens het uitvoeren van de doel-aanvraag met de juiste aanvraagcontext van één brontype worden overgebracht naar de andere. Bijvoorbeeld, kunt u de methode TransferRequest om over te dragen van een aanvraag voor een ASPX-pagina op een verzoek om een XML-pagina.       De methode TransferRequest voert de uitvoering van een asynchrone onderliggende van de opgegeven URL met de volgende voorwaarden: - als de `path` parameter geeft u een queryreeks bevat, wordt dit gebruikt als de nieuwe query-tekenreeks. Als er geen queryreeks opgenomen is, worden de queryreeks van de aanvraag opnieuw worden gebruikt.      -Als de `method` parameter wordt opgegeven, wordt dit gebruikt. Als het `null`, de HTTP-methode van de oorspronkelijke aanvraag wordt gebruikt.      -Als de `preserveForm` parameter `true`, de huidige entiteitshoofdtekst van de aanvraag zijn beschikbaar op de doel-aanvraag. Hiermee kan formulier posts en uploadt om te worden overgedragen.      -Als de identiteit van de gebruiker is momenteel ingesteld op de oorspronkelijke aanvraag, wordt de identiteit van de overgedragen naar de nieuwe aanvraag. Hierdoor geverifieerde aanvragen het resultaat van de verificatie voor de nieuwe aanvraag opnieuw te gebruiken. Als u niet dat de gebruiker wilt kan worden overgedragen, stelt u de gebruiker op `null` op de oorspronkelijke aanvraag voor het overdragen.      -Als de `headers` parameter is opgegeven, wordt de nieuwe aanvraag wordt uitgevoerd met de opgegeven headers. Dit kan worden gebruikt om de aanvraagheaders en cookies voor de nieuwe aanvraag te wijzigen of toevoegen van een speciale header die geeft aan waar de oorspronkelijke aanvraag is ontvangen.           Deze methode roept de <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>overbelasting voor methode met de `preserveUser` parameter ingesteld op `true`.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>"
  syntax:
    content: public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);
    parameters:
    - id: path
      type: System.String
      description: "Het URL-pad van de nieuwe pagina op de server uit te voeren."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt behouden de <> </> *> verzameling; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wissen de <> </> *> verzameling."
    - id: method
      type: System.String
      description: "De HTTP-methode moet worden gebruikt in de uitvoering van de nieuwe aanvraag."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "Een <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> van aanvraagheaders voor de nieuwe aanvraag."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De aanvraag is vereist [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] actief in integratiemodus."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De server is niet beschikbaar is om de aanvraag te verwerken."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> path </code> parameter is ongeldig."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  id: TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Voert een asynchrone uitvoering van de opgegeven URL met behulp van de opgegeven HTTP-methode, kopteksten, en het pad en eventueel behoudt formulierwaarden en identiteit van de gebruiker."
  remarks: "Zie voor meer informatie de sectie &quot;Opmerkingen&quot; in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>"
  syntax:
    content: public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);
    parameters:
    - id: path
      type: System.String
      description: "Het pad."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als u wilt behouden de <> </> *> verzameling; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wissen de <> </> *> verzameling."
    - id: method
      type: System.String
      description: "De HTTP-methode moet worden gebruikt in de nieuwe aanvraag."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "Een <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> -object dat aanvraagheaders voor de nieuwe aanvraag bevat."
    - id: preserveUser
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>behouden van de gebruikers-id anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De andere methode overloads van deze methode roept deze overbelasting met deze parameter is ingesteld op <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "De aanvraag is vereist voor de geïntegreerde pipeline-modus van [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "De server is niet beschikbaar is om de aanvraag te verwerken."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> path </code> parameter is ongeldig."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlDecode(System.String)
  id: UrlDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlDecode(String)
  nameWithType: HttpServerUtility.UrlDecode(String)
  fullName: System.Web.HttpServerUtility.UrlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een tekenreeks met een URL decodeert en retourneert de gecodeerde tekenreeks."
  remarks: "URL-codering, zorgt u ervoor dat alle browsers wordt verzonden door de tekst in de URL-tekenreeksen. Tekens zoals een vraagteken (?) en-teken (&) slash markeren (/) en spaties mogelijk afgekapt of beschadigd door sommige browsers. Als gevolg hiervan moeten deze tekens worden gecodeerd in `<a>` -tags of tekenreeksen in de query, waar de tekenreeksen opnieuw door een browser in een tekenreeks van de aanvraag kunnen worden verzonden.       Deze methode is een handige manier toegang krijgen tot de <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>methode tijdens de uitvoering van een ASP.NET-toepassing.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName> Deze methode gebruikt intern, <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>tekenreeksen decoderen.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>       In het code-behind-bestand voor een ASP.NET-webpagina is toegang tot een exemplaar van de <xref:System.Web.HttpServerUtility>klasse via de `Server` eigenschap.</xref:System.Web.HttpServerUtility> Gebruik in een klasse die zich niet in een code-behind-bestand, `HttpContext.Current.Server` voor toegang tot een exemplaar van de <xref:System.Web.HttpServerUtility>klasse.</xref:System.Web.HttpServerUtility>       Buiten een webtoepassing gebruiken de <xref:System.Net.WebUtility>klasse wilt coderen of waarden decoderen.</xref:System.Net.WebUtility>"
  example:
  - "The following example shows how to URL-decode a value that is retrieved from the query string. The code resides in the code-behind file for a web page. `ReturnPage` refers to a `HyperLink` control.  \n  \n [!code-vb[System.Web.HttpServerUtility.UrlDecode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_9_1.vb)]\n [!code-cs[System.Web.HttpServerUtility.UrlDecode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_9_1.cs)]  \n  \n The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlDecode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_9_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlDecode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_9_2.vb)]"
  syntax:
    content: public string UrlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "De tekenreeks decoderen."
    return:
      type: System.String
      description: "De gecodeerde tekst."
  overload: System.Web.HttpServerUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  id: UrlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Decodeert een HTML-tekenreeks in een URL ontvangen en verzendt de resulterende uitvoer naar een <xref:System.IO.TextWriter>uitvoerstroom.</xref:System.IO.TextWriter>"
  remarks: "URL-codering, zorgt u ervoor dat alle browsers wordt verzonden door de tekst in de URL-tekenreeksen. Tekens zoals een vraagteken (?) en-teken (&) slash markeren (/) en spaties mogelijk afgekapt of beschadigd door sommige browsers. Als gevolg hiervan moeten deze tekens worden gecodeerd in `<a>` -tags of tekenreeksen in de query, waar de tekenreeksen opnieuw door een browser in een tekenreeks van de aanvraag kunnen worden verzonden.       <xref:System.Web.HttpServerUtility.UrlDecode%2A>is een handige manier toegang krijgen tot de <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>methode tijdens de uitvoering van een ASP.NET-toepassing.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName></xref:System.Web.HttpServerUtility.UrlDecode%2A> Intern <xref:System.Web.HttpServerUtility.UrlDecode%2A>gebruikt <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>tekenreeksen decoderen.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName> </xref:System.Web.HttpServerUtility.UrlDecode%2A>       Als u wilt coderen en decoderen van de waarden die buiten een webtoepassing gebruiken de <xref:System.Net.WebUtility>klasse.</xref:System.Net.WebUtility>"
  example:
  - "The following example decodes the string named `EncodedString` (received in a URL) into the string named `DecodedString`.  \n  \n [!code-vb[Classic HttpServerUtility.UrlDecode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_11_1.vb)]\n [!code-cs[Classic HttpServerUtility.UrlDecode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_11_1.cs)]"
  syntax:
    content: public void UrlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "De HTML-tekenreeks decoderen."
    - id: output
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>uitvoerstroom die de gecodeerde tekenreeks.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlEncode(System.String)
  id: UrlEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlEncode(String)
  nameWithType: HttpServerUtility.UrlEncode(String)
  fullName: System.Web.HttpServerUtility.UrlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een tekenreeks met een URL te coderen en retourneert de gecodeerde tekenreeks."
  remarks: "URL-codering, zorgt u ervoor dat alle browsers wordt verzonden door de tekst in de URL-tekenreeksen. Tekens zoals een vraagteken (?) en-teken (&) slash markeren (/) en spaties mogelijk afgekapt of beschadigd door sommige browsers. Als gevolg hiervan moeten deze tekens worden gecodeerd in `<a>` -tags of tekenreeksen in de query, waar de tekenreeksen opnieuw door een browser in een tekenreeks van de aanvraag kunnen worden verzonden.       Deze methode is een handige manier toegang krijgen tot de <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>methode tijdens de uitvoering van een ASP.NET-toepassing.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName> Deze methode gebruikt intern, <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>voor het coderen van tekenreeksen.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>       In het code-behind-bestand voor een ASP.NET-webpagina is toegang tot een exemplaar van de <xref:System.Web.HttpServerUtility>klasse via de `Server` eigenschap.</xref:System.Web.HttpServerUtility> Gebruik in een klasse die zich niet in een code-behind-bestand, `HttpContext.Current.Server` voor toegang tot een exemplaar van de <xref:System.Web.HttpServerUtility>klasse.</xref:System.Web.HttpServerUtility>       Buiten een webtoepassing gebruiken de <xref:System.Net.WebUtility>klasse wilt coderen of waarden decoderen.</xref:System.Net.WebUtility>"
  example:
  - "The following example shows how to URL-encode a value that is used as a query string value of a hyperlink. The code resides in the code-behind file for a web page. The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode. Typically, you would URL-encode a value that you received from the user or the request. `NextPage` refers to a `HyperLink` control.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlEncode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_0_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlEncode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_0_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlEncode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_0_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlEncode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_0_2.vb)]"
  syntax:
    content: public string UrlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "De tekst voor het coderen van de URL."
    return:
      type: System.String
      description: "De URL-gecodeerde tekst."
  overload: System.Web.HttpServerUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  id: UrlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Een tekenreeks met een URL te coderen en verzendt de resulterende uitvoer naar een <xref:System.IO.TextWriter>uitvoerstroom.</xref:System.IO.TextWriter>"
  remarks: "URL-codering, zorgt u ervoor dat alle browsers wordt verzonden door de tekst in de URL-tekenreeksen. Tekens zoals een vraagteken (?) en-teken (&) slash markeren (/) en spaties mogelijk afgekapt of beschadigd door sommige browsers. Als gevolg hiervan moeten deze tekens worden gecodeerd in `<a>` -tags of tekenreeksen in de query, waar de tekenreeksen opnieuw door een browser in een tekenreeks van de aanvraag kunnen worden verzonden.       <xref:System.Web.HttpServerUtility.UrlEncode%2A>is een handige manier toegang krijgen tot de <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>methode tijdens de uitvoering van een ASP.NET-toepassing.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName></xref:System.Web.HttpServerUtility.UrlEncode%2A> Intern <xref:System.Web.HttpServerUtility.UrlEncode%2A>gebruikt <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>voor het coderen van tekenreeksen.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName> </xref:System.Web.HttpServerUtility.UrlEncode%2A>       Als u wilt coderen en decoderen van de waarden die buiten een webtoepassing gebruiken de <xref:System.Net.WebUtility>klasse.</xref:System.Net.WebUtility>"
  example:
  - "The following example encodes a string for transmission by HTTP. It encodes the string named `TestString`, which contains the text \"This is a \\<Test String>.\", and copies it into the string named `EncodedString` as \"This+is+a+%3cTest+String%3e.\".  \n  \n [!code-cs[Classic HttpServerUtility.UrlEncode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_13_1.cs)]\n [!code-vb[Classic HttpServerUtility.UrlEncode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_13_1.vb)]"
  syntax:
    content: public void UrlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "De tekenreeks voor het coderen."
    - id: output
      type: System.IO.TextWriter
      description: "De <xref:System.IO.TextWriter>uitvoerstroom die de gecodeerde tekenreeks.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpServerUtility.UrlPathEncode(String)
  fullName: System.Web.HttpServerUtility.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gebruik geen; alleen bedoeld voor browsercompatibiliteit. Gebruik <xref:System.Web.HttpServerUtility.UrlEncode*>.</xref:System.Web.HttpServerUtility.UrlEncode*>"
  syntax:
    content: public string UrlPathEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "De tekst voor het coderen van de URL."
    return:
      type: System.String
      description: "URL van de gecodeerde tekst."
  overload: System.Web.HttpServerUtility.UrlPathEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  id: UrlTokenDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlTokenDecode(String)
  nameWithType: HttpServerUtility.UrlTokenDecode(String)
  fullName: System.Web.HttpServerUtility.UrlTokenDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Decodeert een tekenreekstoken URL naar de equivalente bytematrix met base 64 cijfers."
  remarks: "De methode UrlTokenDecode zet een URL-tekenreeks-token, dat binaire gegevens als base 64 cijfers codeert, om de representatie gelijkwaardige byte-matrix. Gebruik de methode UrlTokenDecode te decoderen tokens verzonden via de URL en gecodeerd met behulp van de <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>.</xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>       De methode UrlTokenDecode retourneert een bytematrix leeg als de `input` parameter heeft een lengte van minder dan één."
  syntax:
    content: public static byte[] UrlTokenDecode (string input);
    parameters:
    - id: input
      type: System.String
      description: "De URL-tekenreekstoken decoderen."
    return:
      type: System.Byte[]
      description: "De bytematrix met het gecodeerde token van de URL-tekenreeks."
  overload: System.Web.HttpServerUtility.UrlTokenDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De waarde van de <code> input </code> parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  id: UrlTokenEncode(System.Byte[])
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlTokenEncode(Byte[])
  nameWithType: HttpServerUtility.UrlTokenEncode(Byte[])
  fullName: System.Web.HttpServerUtility.UrlTokenEncode(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Codeert een bytematrix in de equivalente tekenreeksvoorstelling met base 64 cijfers, die kan worden gebruikt voor de overdracht via de URL."
  remarks: "De methode UrlTokenEncode converteert een byte-matrix naar een equivalente tekenreeksweergave gecodeerd met 64 cijfers. Het resulterende tekenreekstoken kan worden verzonden via de URL.       De UrlTokenEncode wordt een lege tekenreeks geretourneerd als de `input` parameter heeft een lengte van minder dan één."
  syntax:
    content: public static string UrlTokenEncode (byte[] input);
    parameters:
    - id: input
      type: System.Byte[]
      description: "De bytematrix voor het coderen."
    return:
      type: System.String
      description: "De tekenreeks met de gecodeerde token als de bytematrix *lengte* is meer dan één; anders wordt een lege tekenreeks (&quot;&quot;)."
  overload: System.Web.HttpServerUtility.UrlTokenEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "De waarde van de <code> input </code> parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ApplicationException
  parent: System
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Web.HttpServerUtility.ClearError
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ClearError()
  nameWithType: HttpServerUtility.ClearError()
  fullName: System.Web.HttpServerUtility.ClearError()
- uid: System.Web.HttpServerUtility.CreateObject(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject(String)
  nameWithType: HttpServerUtility.CreateObject(String)
  fullName: System.Web.HttpServerUtility.CreateObject(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpServerUtility.CreateObject(System.Type)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject(Type)
  nameWithType: HttpServerUtility.CreateObject(Type)
  fullName: System.Web.HttpServerUtility.CreateObject(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObjectFromClsid(String)
  nameWithType: HttpServerUtility.CreateObjectFromClsid(String)
  fullName: System.Web.HttpServerUtility.CreateObjectFromClsid(String)
- uid: System.Web.HttpServerUtility.Execute(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String)
  nameWithType: HttpServerUtility.Execute(String)
  fullName: System.Web.HttpServerUtility.Execute(String)
- uid: System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,Boolean)
  nameWithType: HttpServerUtility.Execute(String,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,TextWriter)
  nameWithType: HttpServerUtility.Execute(String,TextWriter)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(String,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter,Boolean)
- uid: System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(IHttpHandler,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpServerUtility.GetLastError
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: GetLastError()
  nameWithType: HttpServerUtility.GetLastError()
  fullName: System.Web.HttpServerUtility.GetLastError()
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode(String)
  nameWithType: HttpServerUtility.HtmlDecode(String)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String)
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String,TextWriter)
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode(String)
  nameWithType: HttpServerUtility.HtmlEncode(String)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String)
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String,TextWriter)
- uid: System.Web.HttpServerUtility.MachineName
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
  fullName: System.Web.HttpServerUtility.MachineName
- uid: System.Web.HttpServerUtility.MapPath(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MapPath(String)
  nameWithType: HttpServerUtility.MapPath(String)
  fullName: System.Web.HttpServerUtility.MapPath(String)
- uid: System.Web.HttpServerUtility.ScriptTimeout
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
  fullName: System.Web.HttpServerUtility.ScriptTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpServerUtility.Transfer(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(String)
  nameWithType: HttpServerUtility.Transfer(String)
  fullName: System.Web.HttpServerUtility.Transfer(String)
- uid: System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(String,Boolean)
  nameWithType: HttpServerUtility.Transfer(String,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(String,Boolean)
- uid: System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(IHttpHandler,Boolean)
  nameWithType: HttpServerUtility.Transfer(IHttpHandler,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(IHttpHandler,Boolean)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String)
  nameWithType: HttpServerUtility.TransferRequest(String)
  fullName: System.Web.HttpServerUtility.TransferRequest(String)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean,String,NameValueCollection)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
- uid: System.Web.HttpServerUtility.UrlDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode(String)
  nameWithType: HttpServerUtility.UrlDecode(String)
  fullName: System.Web.HttpServerUtility.UrlDecode(String)
- uid: System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlDecode(String,TextWriter)
- uid: System.Web.HttpServerUtility.UrlEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode(String)
  nameWithType: HttpServerUtility.UrlEncode(String)
  fullName: System.Web.HttpServerUtility.UrlEncode(String)
- uid: System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlEncode(String,TextWriter)
- uid: System.Web.HttpServerUtility.UrlPathEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpServerUtility.UrlPathEncode(String)
  fullName: System.Web.HttpServerUtility.UrlPathEncode(String)
- uid: System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenDecode(String)
  nameWithType: HttpServerUtility.UrlTokenDecode(String)
  fullName: System.Web.HttpServerUtility.UrlTokenDecode(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenEncode(Byte[])
  nameWithType: HttpServerUtility.UrlTokenEncode(Byte[])
  fullName: System.Web.HttpServerUtility.UrlTokenEncode(Byte[])
- uid: System.Web.HttpServerUtility.ClearError*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ClearError
  nameWithType: HttpServerUtility.ClearError
- uid: System.Web.HttpServerUtility.CreateObject*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject
  nameWithType: HttpServerUtility.CreateObject
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObjectFromClsid
  nameWithType: HttpServerUtility.CreateObjectFromClsid
- uid: System.Web.HttpServerUtility.Execute*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute
  nameWithType: HttpServerUtility.Execute
- uid: System.Web.HttpServerUtility.GetLastError*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: GetLastError
  nameWithType: HttpServerUtility.GetLastError
- uid: System.Web.HttpServerUtility.HtmlDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpServerUtility.HtmlDecode
- uid: System.Web.HttpServerUtility.HtmlEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpServerUtility.HtmlEncode
- uid: System.Web.HttpServerUtility.MachineName*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
- uid: System.Web.HttpServerUtility.MapPath*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MapPath
  nameWithType: HttpServerUtility.MapPath
- uid: System.Web.HttpServerUtility.ScriptTimeout*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
- uid: System.Web.HttpServerUtility.Transfer*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer
  nameWithType: HttpServerUtility.Transfer
- uid: System.Web.HttpServerUtility.TransferRequest*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest
  nameWithType: HttpServerUtility.TransferRequest
- uid: System.Web.HttpServerUtility.UrlDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode
  nameWithType: HttpServerUtility.UrlDecode
- uid: System.Web.HttpServerUtility.UrlEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode
  nameWithType: HttpServerUtility.UrlEncode
- uid: System.Web.HttpServerUtility.UrlPathEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpServerUtility.UrlPathEncode
- uid: System.Web.HttpServerUtility.UrlTokenDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenDecode
  nameWithType: HttpServerUtility.UrlTokenDecode
- uid: System.Web.HttpServerUtility.UrlTokenEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenEncode
  nameWithType: HttpServerUtility.UrlTokenEncode
