### YamlMime:ManagedReference
items:
- uid: System.Management.PropertyDataCollection
  id: PropertyDataCollection
  children:
  - System.Management.PropertyDataCollection.Add(System.String,System.Object)
  - System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)
  - System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)
  - System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)
  - System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)
  - System.Management.PropertyDataCollection.Count
  - System.Management.PropertyDataCollection.GetEnumerator
  - System.Management.PropertyDataCollection.IsSynchronized
  - System.Management.PropertyDataCollection.Item(System.String)
  - System.Management.PropertyDataCollection.Remove(System.String)
  - System.Management.PropertyDataCollection.SyncRoot
  - System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: PropertyDataCollection
  nameWithType: PropertyDataCollection
  fullName: System.Management.PropertyDataCollection
  type: Class
  summary: "Hiermee geeft u de set met eigenschappen van een WMI-object."
  remarks: ''
  example:
  - "The following example lists information about the **Win32_OperatingSystem** class using the <xref:System.Management.PropertyData> class. For more information about **Win32_OperatingSystem**, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-cs[wminet_PropertyDataCollection#1](~/add/codesnippet/csharp/t-system.management.prop_1_1.cs)]\n [!code-vb[wminet_PropertyDataCollection#1](~/add/codesnippet/visualbasic/t-system.management.prop_1_1.vb)]"
  syntax:
    content: 'public class PropertyDataCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: PropertyDataCollection.Add(String,Object)
  fullName: System.Management.PropertyDataCollection.Add(String,Object)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Voegt een nieuw <xref href=&quot;System.Management.PropertyData&quot;> </xref> met de opgegeven waarde. De waarde mag niet null zijn en moet worden omgezet naar een type Common Information Model (CIM)."
  remarks: "Eigenschappen kunnen alleen worden toegevoegd aan klassedefinities niet naar exemplaren. Deze methode is alleen geldig als deze wordt aangeroepen op een <xref:System.Management.PropertyDataCollection>in een <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass> </xref:System.Management.PropertyDataCollection>      ## .NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void Add (string propertyName, object propertyValue);
    parameters:
    - id: propertyName
      type: System.String
      description: "De naam van de nieuwe eigenschap."
    - id: propertyValue
      type: System.Object
      description: "De waarde van de eigenschap (mag niet null zijn)."
  overload: System.Management.PropertyDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)
  id: Add(System.String,System.Management.CimType,System.Boolean)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Add(String,CimType,Boolean)
  nameWithType: PropertyDataCollection.Add(String,CimType,Boolean)
  fullName: System.Management.PropertyDataCollection.Add(String,CimType,Boolean)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Voegt een nieuw <xref href=&quot;System.Management.PropertyData&quot;> </xref> zonder toegewezen waarde."
  remarks: "Eigenschappen kunnen alleen worden toegevoegd aan klassedefinities niet naar exemplaren. Deze methode is alleen geldig als deze wordt aangeroepen op een <xref:System.Management.PropertyDataCollection>in een <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass> </xref:System.Management.PropertyDataCollection>      ## .NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Add (string propertyName, System.Management.CimType propertyType, bool isArray);
    parameters:
    - id: propertyName
      type: System.String
      description: "De naam van de eigenschap."
    - id: propertyType
      type: System.Management.CimType
      description: "Het type Common Information Model (CIM) van de eigenschap."
    - id: isArray
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om op te geven dat de eigenschap een matrixtype is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Management.PropertyDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)
  id: Add(System.String,System.Object,System.Management.CimType)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Add(String,Object,CimType)
  nameWithType: PropertyDataCollection.Add(String,Object,CimType)
  fullName: System.Management.PropertyDataCollection.Add(String,Object,CimType)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Voegt een nieuw <xref href=&quot;System.Management.PropertyData&quot;> </xref> type met de opgegeven waarde en de Common Information Model (CIM)."
  remarks: "Eigenschappen kunnen alleen worden toegevoegd aan klassedefinities niet naar exemplaren. Deze methode is alleen geldig als deze wordt aangeroepen op een <xref:System.Management.PropertyDataCollection>in een <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass> </xref:System.Management.PropertyDataCollection>      ## .NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Add (string propertyName, object propertyValue, System.Management.CimType propertyType);
    parameters:
    - id: propertyName
      type: System.String
      description: "De naam van de eigenschap."
    - id: propertyValue
      type: System.Object
      description: "De waarde van de eigenschap (kan niet null zijn)."
    - id: propertyType
      type: System.Management.CimType
      description: "De CIM-type van de eigenschap."
  overload: System.Management.PropertyDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Kopieert de <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref> in een matrix."
  remarks: "##.NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "De matrix waarnaar u wilt kopiëren de <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "De index waaruit u wilt beginnen met het kopiëren."
  overload: System.Management.PropertyDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)
  id: CopyTo(System.Management.PropertyData[],System.Int32)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: CopyTo(PropertyData[],Int32)
  nameWithType: PropertyDataCollection.CopyTo(PropertyData[],Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(PropertyData[],Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Kopieert de <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref> naar een gespecialiseerde <xref href=&quot;System.Management.PropertyData&quot;> </xref> object-matrix."
  remarks: "##.NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (System.Management.PropertyData[] propertyArray, int index);
    parameters:
    - id: propertyArray
      type: System.Management.PropertyData[]
      description: "De doelmatrix bevat de gekopieerde <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "De index in de doelmatrix waaruit u wilt beginnen met het kopiëren."
  overload: System.Management.PropertyDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Count
  id: Count
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Count
  nameWithType: PropertyDataCollection.Count
  fullName: System.Management.PropertyDataCollection.Count
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Hiermee wordt het aantal objecten in de <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
  remarks: "##De waarde van eigenschap het aantal objecten in de verzameling.      ## .NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Retourneert een <xref:System.Int32>-waarde voor het aantal objecten in de verzameling.</xref:System.Int32>"
  overload: System.Management.PropertyDataCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PropertyDataCollection.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Retourneert de enumerator voor deze <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
  remarks: "U kunt alleen sequentieel (zoals in een Visual Basic .NET `For Each` instructie of een C# `For` instructie) via een alleen-doorsturen enumerator één keer. Het geheugen met de exemplaren is vrijgegeven door WMI, zodat de enumerator kan niet worden teruggespoeld. Daarom de <xref:System.Management.PropertyDataCollection.Count%2A>methode kan niet worden gebruikt omdat hiervoor de enumerator terugspoelen.</xref:System.Management.PropertyDataCollection.Count%2A>       Alleen enumerators zijn meestal veel sneller en minder geheugen dan conventionele enumerators gebruiken, maar ze niet aanroepen naar <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>.</xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A> toestaan       Als een enumerator rewindable is, zullen de objecten in de verzameling beschikbaar voor meerdere opsommingen worden bewaard.      ## .NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Management.PropertyDataCollection.PropertyDataEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Management.PropertyDataCollection.PropertyDataEnumerator
      description: "Een <xref:System.Collections.IEnumerator>die kunnen worden gebruikt om de collectie te doorlopen.</xref:System.Collections.IEnumerator>"
  overload: System.Management.PropertyDataCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PropertyDataCollection.IsSynchronized
  fullName: System.Management.PropertyDataCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Haalt een waarde die aangeeft of het object wordt gesynchroniseerd."
  remarks: "##Waarde van de eigenschap `true` als het object gesynchroniseerde, anders wordt `false`.      ## .NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Retourneert een <xref:System.Boolean>waarde die aangeeft of het object wordt gesynchroniseerd.</xref:System.Boolean>"
  overload: System.Management.PropertyDataCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: PropertyDataCollection.Item(String)
  fullName: System.Management.PropertyDataCollection.Item(String)
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Hiermee wordt de opgegeven eigenschap van de <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>, met syntaxis []. Deze eigenschap is de indexeerfunctie voor de <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref> klasse."
  remarks: "##Waarde van de eigenschap A <xref:System.Management.PropertyData>, op basis van de opgegeven naam.</xref:System.Management.PropertyData>      ## .NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example gets the **Freespace** property from a <xref:System.Management.ManagementClass>.  \n  \n [!code-vb[wminet_PropertyDataCollection_Item#1](~/add/codesnippet/visualbasic/p-system.management.prop_4_1.vb)]\n [!code-cs[wminet_PropertyDataCollection_Item#1](~/add/codesnippet/csharp/p-system.management.prop_4_1.cs)]"
  syntax:
    content: public virtual System.Management.PropertyData this[string propertyName] { get; }
    parameters:
    - id: propertyName
      type: System.String
      description: "De naam van de eigenschap om op te halen."
    return:
      type: System.Management.PropertyData
      description: "Retourneert een <xref href=&quot;System.Management.PropertyData&quot;> </xref> met de gegevens voor een opgegeven eigenschap in de verzameling."
  overload: System.Management.PropertyDataCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: PropertyDataCollection.Remove(String)
  fullName: System.Management.PropertyDataCollection.Remove(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Removes a <xref href=&quot;System.Management.PropertyData&quot;></xref> from the <xref href=&quot;System.Management.PropertyDataCollection&quot;></xref>."
  remarks: "Eigenschappen kunnen alleen worden verwijderd uit klassendefinities niet van exemplaren. Deze methode is alleen geldig bij het aanroepen van een verzameling van de eigenschap in een <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass>      ## .NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void Remove (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "De naam van de eigenschap moet worden verwijderd."
  overload: System.Management.PropertyDataCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.SyncRoot
  id: SyncRoot
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PropertyDataCollection.SyncRoot
  fullName: System.Management.PropertyDataCollection.SyncRoot
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Hiermee haalt u het object dat moet worden gebruikt voor synchronisatie."
  remarks: "##Het object moet worden gebruikt voor synchronisatie van de waarde van eigenschap.      ## .NET framework-beveiliging volledig vertrouwen voor de onmiddellijke aanroeper. Dit lid kan niet worden gebruikt door gedeeltelijk vertrouwde code. Zie voor meer informatie [met behulp van bibliotheken uit gedeeltelijk vertrouwde Code](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Retourneert een <xref:System.Object>-waarde met het object dat moet worden gebruikt voor synchronisatie.</xref:System.Object>"
  overload: System.Management.PropertyDataCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Retourneert een <xref:System.Collections.IEnumerator>die doorloopt de <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic C#]       De `foreach` -instructie van de taal C# (`for each` in Visual Basic) de complexiteit van de opsommingen worden verborgen.  Daarom kan het gebruik `foreach` wordt aanbevolen, in plaats van rechtstreeks bewerken van de enumerator.       Enumerators kunnen worden gebruikt om de gegevens in de verzameling te lezen, maar ze kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.       In eerste instantie bevindt de enumerator zich vóór het eerste element in de verzameling. <xref:System.Collections.IEnumerator.Reset%2A>brengt ook de enumerator terug naar deze positie.</xref:System.Collections.IEnumerator.Reset%2A> Op deze functie, het aanroepen van <xref:System.Collections.IEnumerator.Current%2A>er een uitzondering gegenereerd.</xref:System.Collections.IEnumerator.Current%2A> U moet daarom aanroepen <xref:System.Collections.IEnumerator.MoveNext%2A>om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>retourneert de hetzelfde object totdat de <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>wordt aangeroepen.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Hiermee stelt u <xref:System.Collections.IEnumerator.Current%2A>naar het volgende element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Als <xref:System.Collections.IEnumerator.MoveNext%2A>geeft het einde van de verzameling, de enumerator bevindt zich na het laatste element in de verzameling en <xref:System.Collections.IEnumerator.MoveNext%2A>retourneert `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Wanneer de enumerator is op deze positie, volgende aanroepen naar <xref:System.Collections.IEnumerator.MoveNext%2A>ook retourneren `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Als de laatste aanroep aan <xref:System.Collections.IEnumerator.MoveNext%2A>geretourneerd `false`, aanroepende <xref:System.Collections.IEnumerator.Current%2A>er een uitzondering gegenereerd.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>U kunt naar het eerste element van de verzameling opnieuw aanroepen <xref:System.Collections.IEnumerator.Reset%2A>gevolgd door <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> instellen       Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft. Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, in de enumerator permanent ongeldig wordt gemaakt en de volgende aanroep aan <xref:System.Collections.IEnumerator.MoveNext%2A>of <xref:System.Collections.IEnumerator.Reset%2A>er een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Als de verzameling is gewijzigd tussen <xref:System.Collections.IEnumerator.MoveNext%2A>en <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>retourneert het element dat is ingesteld op, zelfs als de enumerator is al ongeldig gemaakt.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom niet intrinsiek een thread-veilige procedure. Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering. Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.       Deze methode is een bewerking O(1)."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Management.PropertyDataCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add(String,Object)
  nameWithType: PropertyDataCollection.Add(String,Object)
  fullName: System.Management.PropertyDataCollection.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add(String,CimType,Boolean)
  nameWithType: PropertyDataCollection.Add(String,CimType,Boolean)
  fullName: System.Management.PropertyDataCollection.Add(String,CimType,Boolean)
- uid: System.Management.CimType
  parent: System.Management
  isExternal: false
  name: CimType
  nameWithType: CimType
  fullName: System.Management.CimType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add(String,Object,CimType)
  nameWithType: PropertyDataCollection.Add(String,Object,CimType)
  fullName: System.Management.PropertyDataCollection.Add(String,Object,CimType)
- uid: System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: CopyTo(PropertyData[],Int32)
  nameWithType: PropertyDataCollection.CopyTo(PropertyData[],Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(PropertyData[],Int32)
- uid: System.Management.PropertyData[]
  parent: System.Management
  isExternal: false
  name: PropertyData
  nameWithType: PropertyData
  fullName: System.Management.PropertyData[]
  spec.csharp:
  - uid: System.Management.PropertyData
    name: PropertyData
    nameWithType: PropertyData
    fullName: PropertyData[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Management.PropertyDataCollection.Count
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDataCollection.Count
  fullName: System.Management.PropertyDataCollection.Count
- uid: System.Management.PropertyDataCollection.GetEnumerator
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PropertyDataCollection.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.GetEnumerator()
- uid: System.Management.PropertyDataCollection.PropertyDataEnumerator
  parent: System.Management
  isExternal: false
  name: PropertyDataCollection+PropertyDataEnumerator
  nameWithType: PropertyDataCollection+PropertyDataEnumerator
  fullName: System.Management.PropertyDataCollection+PropertyDataEnumerator
- uid: System.Management.PropertyDataCollection.IsSynchronized
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PropertyDataCollection.IsSynchronized
  fullName: System.Management.PropertyDataCollection.IsSynchronized
- uid: System.Management.PropertyDataCollection.Item(System.String)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Item(String)
  nameWithType: PropertyDataCollection.Item(String)
  fullName: System.Management.PropertyDataCollection.Item(String)
- uid: System.Management.PropertyData
  parent: System.Management
  isExternal: false
  name: PropertyData
  nameWithType: PropertyData
  fullName: System.Management.PropertyData
- uid: System.Management.PropertyDataCollection.Remove(System.String)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Remove(String)
  nameWithType: PropertyDataCollection.Remove(String)
  fullName: System.Management.PropertyDataCollection.Remove(String)
- uid: System.Management.PropertyDataCollection.SyncRoot
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PropertyDataCollection.SyncRoot
  fullName: System.Management.PropertyDataCollection.SyncRoot
- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Management.PropertyDataCollection.Add*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add
  nameWithType: PropertyDataCollection.Add
- uid: System.Management.PropertyDataCollection.CopyTo*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyDataCollection.CopyTo
- uid: System.Management.PropertyDataCollection.Count*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDataCollection.Count
- uid: System.Management.PropertyDataCollection.GetEnumerator*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PropertyDataCollection.GetEnumerator
- uid: System.Management.PropertyDataCollection.IsSynchronized*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PropertyDataCollection.IsSynchronized
- uid: System.Management.PropertyDataCollection.Item*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Item
  nameWithType: PropertyDataCollection.Item
- uid: System.Management.PropertyDataCollection.Remove*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Remove
  nameWithType: PropertyDataCollection.Remove
- uid: System.Management.PropertyDataCollection.SyncRoot*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PropertyDataCollection.SyncRoot
- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator
