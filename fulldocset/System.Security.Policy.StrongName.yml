### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.StrongName
  id: StrongName
  children:
  - System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  - System.Security.Policy.StrongName.Clone
  - System.Security.Policy.StrongName.Copy
  - System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)
  - System.Security.Policy.StrongName.Equals(System.Object)
  - System.Security.Policy.StrongName.GetHashCode
  - System.Security.Policy.StrongName.Name
  - System.Security.Policy.StrongName.PublicKey
  - System.Security.Policy.StrongName.ToString
  - System.Security.Policy.StrongName.Version
  langs:
  - csharp
  name: StrongName
  nameWithType: StrongName
  fullName: System.Security.Policy.StrongName
  type: Class
  summary: "Biedt de sterke naam van een codeassembly als bewijs voor evaluatie van het beleid. Deze klasse kan niet worden overgenomen."
  remarks: "De klasse StrongName geeft bewijs van een unieke, cryptografisch sterke naam van een code-assembly. De sterke naam bestaat uit een openbare sleutel, een bepaalde naam en een versie. De openbare sleutel correspondeert met de persoonlijke sleutel van de uitgever die geheim gehouden en waarmee de assembly moet worden ondertekend zodat de sterke naam om geldig te zijn.       Sterke namen zijn doorgaans toegewezen aan de assembly&quot;s met behulp van <xref:System.Reflection.AssemblyKeyFileAttribute>, <xref:System.Reflection.AssemblyKeyNameAttribute>of <xref:System.Reflection.AssemblyDelaySignAttribute>in combinatie met het hulpprogramma SN (Zie [Sn.exe (sterke naam hulpprogramma)](~/add/includes/ajax-current-ext-md.md)).</xref:System.Reflection.AssemblyDelaySignAttribute> </xref:System.Reflection.AssemblyKeyNameAttribute> </xref:System.Reflection.AssemblyKeyFileAttribute>       <xref:System.Security.Permissions.StrongNameIdentityPermission>maakt gebruik van deze klasse om te bevestigen dat het aanroepen van code in een bepaalde sterke naam code-assembly is.</xref:System.Security.Permissions.StrongNameIdentityPermission>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StrongName : System.Security.Policy.EvidenceBase, System.Security.Policy.IIdentityPermissionFactory
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements:
  - System.Security.Policy.IIdentityPermissionFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  id: '#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)'
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: StrongName(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Policy.StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> klasse met de sterke naam van de openbare sleutel blob, naam en versie."
  remarks: "De `name` parameter is `null`, maar het kan niet een lege tekenreeks (&quot;&quot;).       Zie voor meer informatie over sterke namen <xref:System.Security.Permissions.StrongNameIdentityPermission>en <xref:System.Security.Permissions.StrongNamePublicKeyBlob>.</xref:System.Security.Permissions.StrongNamePublicKeyBlob> </xref:System.Security.Permissions.StrongNameIdentityPermission>"
  syntax:
    content: public StrongName (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);
    parameters:
    - id: blob
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "De <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;> </xref> van de software-uitgever."
    - id: name
      type: System.String
      description: "De sectie eenvoudige naam van de sterke naam."
    - id: version
      type: System.Version
      description: "De <xref:System.Version>van de sterke naam.</xref:System.Version>"
  overload: System.Security.Policy.StrongName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>blob</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>version</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De <code> name </code> parameter is een lege tekenreeks (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Clone
  id: Clone
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Clone()
  nameWithType: StrongName.Clone()
  fullName: System.Security.Policy.StrongName.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Maakt een nieuw object dat een kopie van het huidige exemplaar."
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "Een nieuw object dat een kopie van dit exemplaar."
  overload: System.Security.Policy.StrongName.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Copy
  id: Copy
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Copy()
  nameWithType: StrongName.Copy()
  fullName: System.Security.Policy.StrongName.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Maakt een equivalent kopie van de huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  syntax:
    content: public object Copy ();
    parameters: []
    return:
      type: System.Object
      description: "Een nieuw, identiek kopie van de huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)
  id: CreateIdentityPermission(System.Security.Policy.Evidence)
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: CreateIdentityPermission(Evidence)
  nameWithType: StrongName.CreateIdentityPermission(Evidence)
  fullName: System.Security.Policy.StrongName.CreateIdentityPermission(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Maakt een <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> die overeenkomt met de huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  remarks: "De machtiging identiteit voor een sterke naam kan worden gebruikt om te bepalen of aanroepende code in een bepaalde sterke naam code-assembly."
  syntax:
    content: public System.Security.IPermission CreateIdentityPermission (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "De <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> waaruit om samen te stellen de <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref>."
    return:
      type: System.Security.IPermission
      description: "Een <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> voor het opgegeven <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.CreateIdentityPermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: StrongName.Equals(Object)
  fullName: System.Security.Policy.StrongName.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee wordt bepaald of de opgegeven sterke naam gelijk aan de huidige sterke naam is."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "De sterke naam om te vergelijken met de huidige sterke naam."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als de opgegeven sterke naam gelijk aan de huidige sterke naam is; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.StrongName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: StrongName.GetHashCode()
  fullName: System.Security.Policy.StrongName.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "De hash-code van de huidige opgehaald <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "De hash-code van de huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Name
  id: Name
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Name
  nameWithType: StrongName.Name
  fullName: System.Security.Policy.StrongName.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hiermee wordt de eenvoudige naam van het huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "De eenvoudige naam onderdeel van de <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.PublicKey
  id: PublicKey
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: PublicKey
  nameWithType: StrongName.PublicKey
  fullName: System.Security.Policy.StrongName.PublicKey
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Haalt de <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;> </xref> van het huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  remarks: "Een blob is cryptografische informatie die een unieke Hiermee geeft u de openbare sleutel van de software-uitgever.       BLOBs verschillen van certificaten in dat de blob alleen informatie over de openbare sleutel heeft; het certificaat bevat ook informatie die wordt gekoppeld aan de naam van de houder met de sleutel, evenals informatie om te controleren of het certificaat."
  syntax:
    content: public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; }
    return:
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "The <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;></xref> of the current <xref href=&quot;System.Security.Policy.StrongName&quot;></xref>."
  overload: System.Security.Policy.StrongName.PublicKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.ToString
  id: ToString
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: ToString()
  nameWithType: StrongName.ToString()
  fullName: System.Security.Policy.StrongName.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Maakt een tekenreeksrepresentatie van de huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  remarks: "Deze methode is handig tijdens de foutopsporing voor de weergave van een gemakkelijk te lezen van het object."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Een weergave van de huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  overload: System.Security.Policy.StrongName.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Version
  id: Version
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Version
  nameWithType: StrongName.Version
  fullName: System.Security.Policy.StrongName.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Haalt de <xref:System.Version>van het huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>.</xref:System.Version>"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "De <xref:System.Version>van het huidige <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>.</xref:System.Version>"
  overload: System.Security.Policy.StrongName.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: StrongName(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Policy.StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
- uid: System.Security.Permissions.StrongNamePublicKeyBlob
  parent: System.Security.Permissions
  isExternal: false
  name: StrongNamePublicKeyBlob
  nameWithType: StrongNamePublicKeyBlob
  fullName: System.Security.Permissions.StrongNamePublicKeyBlob
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Security.Policy.StrongName.Clone
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Clone()
  nameWithType: StrongName.Clone()
  fullName: System.Security.Policy.StrongName.Clone()
- uid: System.Security.Policy.StrongName.Copy
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Copy()
  nameWithType: StrongName.Copy()
  fullName: System.Security.Policy.StrongName.Copy()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: CreateIdentityPermission(Evidence)
  nameWithType: StrongName.CreateIdentityPermission(Evidence)
  fullName: System.Security.Policy.StrongName.CreateIdentityPermission(Evidence)
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.StrongName.Equals(System.Object)
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Equals(Object)
  nameWithType: StrongName.Equals(Object)
  fullName: System.Security.Policy.StrongName.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.StrongName.GetHashCode
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: GetHashCode()
  nameWithType: StrongName.GetHashCode()
  fullName: System.Security.Policy.StrongName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.StrongName.Name
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Name
  nameWithType: StrongName.Name
  fullName: System.Security.Policy.StrongName.Name
- uid: System.Security.Policy.StrongName.PublicKey
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: PublicKey
  nameWithType: StrongName.PublicKey
  fullName: System.Security.Policy.StrongName.PublicKey
- uid: System.Security.Policy.StrongName.ToString
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: ToString()
  nameWithType: StrongName.ToString()
  fullName: System.Security.Policy.StrongName.ToString()
- uid: System.Security.Policy.StrongName.Version
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Version
  nameWithType: StrongName.Version
  fullName: System.Security.Policy.StrongName.Version
- uid: System.Security.Policy.StrongName.#ctor*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: StrongName
  nameWithType: StrongName.StrongName
- uid: System.Security.Policy.StrongName.Clone*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Clone
  nameWithType: StrongName.Clone
- uid: System.Security.Policy.StrongName.Copy*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Copy
  nameWithType: StrongName.Copy
- uid: System.Security.Policy.StrongName.CreateIdentityPermission*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: CreateIdentityPermission
  nameWithType: StrongName.CreateIdentityPermission
- uid: System.Security.Policy.StrongName.Equals*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Equals
  nameWithType: StrongName.Equals
- uid: System.Security.Policy.StrongName.GetHashCode*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: GetHashCode
  nameWithType: StrongName.GetHashCode
- uid: System.Security.Policy.StrongName.Name*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Name
  nameWithType: StrongName.Name
- uid: System.Security.Policy.StrongName.PublicKey*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: PublicKey
  nameWithType: StrongName.PublicKey
- uid: System.Security.Policy.StrongName.ToString*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: ToString
  nameWithType: StrongName.ToString
- uid: System.Security.Policy.StrongName.Version*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Version
  nameWithType: StrongName.Version
