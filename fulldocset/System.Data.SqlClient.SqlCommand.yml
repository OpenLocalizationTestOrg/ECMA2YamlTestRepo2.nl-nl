### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCommand
  id: SqlCommand
  children:
  - System.Data.SqlClient.SqlCommand.#ctor
  - System.Data.SqlClient.SqlCommand.#ctor(System.String)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.Cancel
  - System.Data.SqlClient.SqlCommand.Clone
  - System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlCommand.CommandText
  - System.Data.SqlClient.SqlCommand.CommandTimeout
  - System.Data.SqlClient.SqlCommand.CommandType
  - System.Data.SqlClient.SqlCommand.Connection
  - System.Data.SqlClient.SqlCommand.CreateDbParameter
  - System.Data.SqlClient.SqlCommand.CreateParameter
  - System.Data.SqlClient.SqlCommand.DbConnection
  - System.Data.SqlClient.SqlCommand.DbParameterCollection
  - System.Data.SqlClient.SqlCommand.DbTransaction
  - System.Data.SqlClient.SqlCommand.DesignTimeVisible
  - System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReader
  - System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteScalar
  - System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.Notification
  - System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  - System.Data.SqlClient.SqlCommand.Parameters
  - System.Data.SqlClient.SqlCommand.Prepare
  - System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  - System.Data.SqlClient.SqlCommand.StatementCompleted
  - System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  - System.Data.SqlClient.SqlCommand.Transaction
  - System.Data.SqlClient.SqlCommand.UpdatedRowSource
  langs:
  - csharp
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
  type: Class
  summary: "Vertegenwoordigt een Transact-SQL-instructie of opgeslagen procedure uit te voeren op een SQL Server-database. Deze klasse kan niet worden overgenomen."
  remarks: "Wanneer een exemplaar van SqlCommand is gemaakt, worden de eigenschappen lezen/schrijven ingesteld op de oorspronkelijke waarden. Zie voor een lijst van deze waarden, de SqlCommand-constructor.       SqlCommand biedt de volgende methoden voor het uitvoeren van opdrachten op een SQL Server-database: | Item | Beschrijving |   |----------|-----------------|   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>| De asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in deze SqlCommand, uitvoeren van opdrachten zoals INSERT-, DELETE-, UPDATE- en SET-instructies over het algemeen initieert.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Elke aanroep van <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>moet worden gekoppeld met een aanroep naar <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>die klaar is met de bewerking, meestal op een afzonderlijke thread. |   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>| Hiermee stelt u de asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die is beschreven door deze SqlCommand en haalt u een of meer resultaten van de server initieert.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Elke aanroep van <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>moet worden gekoppeld met een aanroep naar <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>die klaar is met de bewerking, meestal op een afzonderlijke thread. |   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>| De asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in deze SqlCommand initieert.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Elke aanroep van `BeginExecuteXmlReader` moet worden gekoppeld met een aanroep naar `EndExecuteXmlReader`, die doorgaans op een afzonderlijke thread van de bewerking is voltooid en een <xref:System.Xml.XmlReader>-object geretourneerd. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>| Opdrachten uitvoeren die rijen retourneren.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> </xref:System.Xml.XmlReader> Voor betere prestaties <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>roept de Transact-SQL-opdrachten `sp_executesql` systeem opgeslagen procedure.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Daarom <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>mogelijk niet tot gevolg hebben die mogen worden gebruikt om uit te voeren opdrachten zoals ingesteld Transact-SQL-instructies. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>| Hiermee voert u opdrachten zoals Transact-SQL invoegen, verwijderen, bijwerken en SET-instructies. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>| Een enkele waarde (bijvoorbeeld een cumulatieve waarde) opgehaald uit een database. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>| De <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>verzendt naar de <xref:System.Data.SqlClient.SqlCommand.Connection%2A>en maakt u een object <xref:System.Xml.XmlReader>. |       U kunt opnieuw de <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>eigenschap en hergebruik het SqlCommand-object.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> U moet echter sluit de <xref:System.Data.SqlClient.SqlDataReader>voordat u een nieuwe of vorige opdracht kunt uitvoeren.</xref:System.Data.SqlClient.SqlDataReader>       Als een <xref:System.Data.SqlClient.SqlException>wordt gegenereerd door de methode voor het uitvoeren van een SqlCommand de <xref:System.Data.SqlClient.SqlConnection>open blijft wanneer de ernst op 19 of minder.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlException> Wanneer de ernst op 20 of groter is, sluit de server normaal de <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> De gebruiker kan echter opnieuw de verbinding en doorgaan.      > [!NOTE] > Nameless, ook wel rangtelwoord, parameters worden niet ondersteund door de .NET Framework-gegevensprovider voor SQL Server."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a SqlCommand, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.  \n  \n [!code-cs[Classic WebData SqlCommand Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._6_1.cs)]\n [!code-vb[Classic WebData SqlCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._6_1.vb)]  \n  \n The following sample shows how to create and execute different types of SqlCommand objects.  \n  \n First you must create the sample database, by executing the following script:  \n  \n```  \nUSE [master]  \nGO  \n  \nCREATE DATABASE [MySchool]  \nGO  \n  \nUSE [MySchool]  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE procedure [dbo].[CourseExtInfo] @CourseId int  \nas  \nselect c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  \nfrom Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  \nwhere c.CourseID=@CourseId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  \nas  \nselect @CourseCount=Count(c.CourseID)  \nfrom course as c  \nwhere c.DepartmentID=@DepartmentId  \n  \nselect d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  \nfrom Department as d  \nwhere d.DepartmentID=@DepartmentId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCreate PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   \n@Year int,@BudgetSum money output  \nAS  \nBEGIN  \n        SELECT @BudgetSum=SUM([Budget])  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year   \n  \nSELECT [DepartmentID]  \n      ,[Name]  \n      ,[Budget]  \n      ,[StartDate]  \n      ,[Administrator]  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year  \n  \nEND  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Course](~/add/includes/ajax-current-ext-md.md [nvarchar](10) NOT NULL,  \n[Year] [smallint] NOT NULL,  \n[Title] [nvarchar](100) NOT NULL,  \n[Credits] [int] NOT NULL,  \n[DepartmentID] [int] NOT NULL,  \n CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   \n(  \n[CourseID] ASC,  \n[Year] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Department](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[Name] [nvarchar](50) NOT NULL,  \n[Budget] [money] NOT NULL,  \n[StartDate] [datetime] NOT NULL,  \n[Administrator] [int] NULL,  \n CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   \n(  \n[DepartmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Person](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[LastName] [nvarchar](50) NOT NULL,  \n[FirstName] [nvarchar](50) NOT NULL,  \n[HireDate] [datetime] NULL,  \n[EnrollmentDate] [datetime] NULL,  \n CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   \n(  \n[PersonID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[StudentGrade](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[CourseID] [nvarchar](10) NOT NULL,  \n[StudentID] [int] NOT NULL,  \n[Grade] [decimal](3, 2) NOT NULL,  \n CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   \n(  \n[EnrollmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate view [dbo].[EnglishCourse]  \nas  \nselect c.CourseID,c.Title,c.Credits,c.DepartmentID  \nfrom Course as c join Department as d on c.DepartmentID=d.DepartmentID  \nwhere d.Name=N'English'  \n  \nGO  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  \nSET IDENTITY_INSERT [dbo].[Department] ON   \n  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  \nSET IDENTITY_INSERT [dbo].[Department] OFF  \nSET IDENTITY_INSERT [dbo].[Person] ON   \n  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  \nSET IDENTITY_INSERT [dbo].[Person] OFF  \nSET IDENTITY_INSERT [dbo].[StudentGrade] ON   \n  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  \nSET IDENTITY_INSERT [dbo].[StudentGrade] OFF  \nALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  \nREFERENCES [dbo].[Department] ([DepartmentID])  \nGO  \nALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  \nGO  \nALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  \nREFERENCES [dbo].[Person] ([PersonID])  \nGO  \nALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  \nGO  \n```  \n  \n Next, compile and execute the following:  \n  \n```  \nusing System;  \nusing System.Data;  \nusing System.Data.SqlClient;  \nusing System.Threading.Tasks;  \n  \nclass Program {  \n  \n   static class SqlHelper {  \n      // Set the connection, command, and then execute the command with non query.  \n      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   \n               // type is only for OLE DB.    \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteNonQuery();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command and only return one value.  \n      public static Object ExecuteScalar(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteScalar();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command with query and return the reader.  \n      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         SqlConnection conn = new SqlConnection(connectionString);  \n  \n         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n            cmd.CommandType = commandType;  \n            cmd.Parameters.AddRange(parameters);  \n  \n            conn.Open();  \n            // When using CommandBehavior.CloseConnection, the connection will be closed when the   \n            // IDataReader is closed.  \n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  \n  \n            return reader;  \n         }  \n      }  \n   }  \n  \n   static void Main(string[] args) {  \n      String connectionString = \"Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;\";  \n  \n      CountCourses(connectionString, 2012);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Following result is the departments that started from 2007:\");  \n      GetDepartments(connectionString, 2007);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Add the credits when the credits of course is lower than 4.\");  \n      AddCredits(connectionString, 4);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Please press any key to exit...\");  \n      Console.ReadKey();  \n   }  \n  \n   static void CountCourses(String connectionString, Int32 year) {  \n      String commandText = \"Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year\";  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  \n      Int32 count;  \n      if (Int32.TryParse(oValue.ToString(), out count))  \n         Console.WriteLine(\"There {0} {1} course{2} in {3}.\", count > 1 ? \"are\" : \"is\", count, count > 1 ? \"s\" : null, year);  \n   }  \n  \n   // Display the Departments that start from the specified year.  \n   static void GetDepartments(String connectionString, Int32 year) {  \n      String commandText = \"dbo.GetDepartmentsOfSpecifiedYear\";  \n  \n      // Specify the year of StartDate  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      // When the direction of parameter is set as Output, you can get the value after   \n      // executing the command.  \n      SqlParameter parameterBudget = new SqlParameter(\"@BudgetSum\", SqlDbType.Money);  \n      parameterBudget.Direction = ParameterDirection.Output;  \n  \n      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  \n          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  \n         Console.WriteLine(\"{0,-20}{1,-20}{2,-20}{3,-20}\", \"Name\", \"Budget\", \"StartDate\",  \n             \"Administrator\");  \n         while (reader.Read()) {  \n            Console.WriteLine(\"{0,-20}{1,-20:C}{2,-20:d}{3,-20}\", reader[\"Name\"],  \n                reader[\"Budget\"], reader[\"StartDate\"], reader[\"Administrator\"]);  \n         }  \n      }  \n      Console.WriteLine(\"{0,-20}{1,-20:C}\", \"Sum:\", parameterBudget.Value);  \n   }  \n  \n   // If credits of course is lower than the certain value, the method will add the credits.  \n   static void AddCredits(String connectionString, Int32 creditsLow) {  \n      String commandText = \"Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits\";  \n  \n      SqlParameter parameterCredits = new SqlParameter(\"@Credits\", creditsLow);  \n  \n      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  \n  \n      Console.WriteLine(\"{0} row{1} {2} updated.\", rows, rows > 1 ? \"s\" : null, rows > 1 ? \"are\" : \"is\");  \n   }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse."
  remarks: "De base constructor initialiseert alle velden op hun standaardwaarden. De volgende tabel toont de eerste waarden voor een exemplaar van <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| lege tekenreeks (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Null |       U kunt de waarde voor een van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._39_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._39_1.cs)]"
  syntax:
    content: public SqlCommand ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse met de tekst van de query."
  remarks: "Wanneer een exemplaar van <xref:System.Data.SqlClient.SqlCommand>is gemaakt, het volgende lezen/schrijven-eigenschappen zijn ingesteld op de beginwaarden.</xref:System.Data.SqlClient.SqlCommand>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| null |       U kunt de waarde voor een van deze eigenschappen via een afzonderlijke aanroep van de eigenschap wijzigen.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.  \n  \n [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._21_1.vb)]\n [!code-cs[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._21_1.cs)]"
  syntax:
    content: public SqlCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "De tekst van de query."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse met de tekst van de query en een <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Een nieuwe <xref:System.Data.SqlClient.SqlConnection>is die de waarde voor de `connection` parameter. |       U kunt de waarde voor een van deze parameters wijzigen door de bijbehorende eigenschap.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/csharp/c858d494-4959-470c-91ba-_1.cs)]\n [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/visualbasic/c858d494-4959-470c-91ba-_1.vb)]"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "De tekst van de query."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> die staat voor de verbinding met een exemplaar van SQL Server."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse met de tekst van de query een <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>, en de <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref>."
  remarks: "De volgende tabel toont de eerste waarden voor een exemplaar van <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Eigenschappen | Initiële waarde |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Een nieuwe <xref:System.Data.SqlClient.SqlConnection>is die de waarde voor de `connection` parameter. |       U kunt de waarde voor een van deze parameters wijzigen door de bijbehorende eigenschap.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "De tekst van de query."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> die staat voor de verbinding met een exemplaar van SQL Server."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "De <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> waarin de <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> wordt uitgevoerd."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse met de opgegeven opdrachttekst, verbinding transactie en instelling voor wachtwoordversleuteling."
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);
    parameters:
    - id: cmdText
      type: System.String
      description: "De tekst van de query."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> die staat voor de verbinding met een exemplaar van SQL Server."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "De <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> waarin de <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> wordt uitgevoerd."
    - id: columnEncryptionSetting
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "De instelling voor wachtwoordversleuteling. Zie voor meer informatie [altijd versleuteld](https://msdn.microsoft.com/library/mt163865.aspx)."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  id: BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initieert de asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in dit <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "De methode BeginExecuteNonQuery begint het proces van het uitvoeren van asynchroon een [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instructie of opgeslagen procedure die geen rijen retourneert zodat andere taken uitvoeren kunnen gelijktijdig terwijl de instructie wordt uitgevoerd. Wanneer de instructie is voltooid, ontwikkelaars moeten aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>methode voor de bewerking niet voltooien.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> De methode BeginExecuteNonQuery retourneert onmiddellijk (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> heeft geen effect op BeginExecuteNonQuery), maar pas de code wordt uitgevoerd op de bijbehorende <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>methodeaanroep, moet deze niet aanroepen dat momenteel een synchrone of asynchrone uitvoering op basis van dezelfde starten uitvoeren <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> Het aanroepen van de <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>voordat de uitvoering van de opdracht voltooid oorzaken is de <xref:System.Data.SqlClient.SqlCommand>object blokkeren totdat de uitvoering is voltooid.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       Houd er rekening mee dat de opdrachttekst en parameters worden verzonden naar de server synchroon. Als een opdracht grote of veel parameters worden verzonden, kan deze methode tijdens schrijfbewerkingen blokkeren. Nadat de opdracht is verzonden, de methode retourneert onmiddellijk zonder te wachten op een antwoord van de server--dat wil zeggen zijn leesbewerkingen asynchroon.       Omdat deze overbelasting biedt geen ondersteuning voor een procedure, moeten ontwikkelaars een poll om te bepalen of de opdracht is voltooid, met behulp van de <xref:System.IAsyncResult.IsCompleted%2A>eigenschap van de <xref:System.IAsyncResult>geretourneerd door de methode BeginExecuteNonQuery; of wacht totdat de voltooiing van een of meer opdrachten met de <xref:System.IAsyncResult.AsyncWaitHandle%2A>eigenschap van het geretourneerde <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>"
  example:
  - "The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously. In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text. Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._34_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/csharp/m-system.data.sqlclient._34_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die kunnen worden gebruikt om te pollen of wacht u totdat de resultaten of beide; deze waarde is ook nodig bij het aanroepen van <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, die het aantal beïnvloede rijen retourneert.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Een fout is opgetreden tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De naam/waarde-paar &quot;Asynchronous Processing = true &quot; is niet opgenomen in de verbindingsreeks voor het definiëren van de verbinding voor deze <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  id: BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initieert de asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in dit <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, een retouraanroep procedure en staat informatie verstrekt."
  remarks: "De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>methode begint het proces voor het asynchroon uitvoeren van een Transact-SQL-instructie of opgeslagen procedure die geen rijen retourneert, zodat andere taken uitvoeren kunnen gelijktijdig terwijl de instructie wordt uitgevoerd.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Wanneer de instructie is voltooid, ontwikkelaars moeten aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>methode voor de bewerking niet voltooien.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>methode retourneert onmiddellijk (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> heeft geen effect op BeginExecuteNonQuery), maar pas de code wordt uitgevoerd op de bijbehorende <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>methodeaanroep, moet deze niet aanroepen dat momenteel een synchrone of asynchrone uitvoering op basis van dezelfde starten uitvoeren <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Het aanroepen van de <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>voordat de uitvoering van de opdracht voltooid oorzaken is de <xref:System.Data.SqlClient.SqlCommand>object blokkeren totdat de uitvoering is voltooid.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       De `callback` parameter kunt u opgeven een <xref:System.AsyncCallback>gemachtigde die wordt aangeroepen wanneer de instructie is voltooid.</xref:System.AsyncCallback> U kunt aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>methode uit binnen deze procedure gemachtigde of van een andere locatie in uw toepassing.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> Bovendien kunt u elk object in doorgeven de `asyncStateObject` parameter en de callback-procedure kunt ophalen deze informatie met de <xref:System.IAsyncResult.AsyncState%2A>eigenschap.</xref:System.IAsyncResult.AsyncState%2A>       Houd er rekening mee dat de opdrachttekst en parameters worden verzonden naar de server synchroon. Als een opdracht grote of veel parameters worden verzonden, kan deze methode tijdens schrijfbewerkingen blokkeren. Nadat de opdracht is verzonden, de methode retourneert onmiddellijk zonder te wachten op een antwoord van de server--dat wil zeggen zijn leesbewerkingen asynchroon.       Omdat de callback-procedure wordt uitgevoerd van binnen een achtergrondthread geleverd door de Microsoft .NET common language runtime, is het zeer belangrijk dat u een strengere benadering voor het verwerken van via verschillende threads-interacties van uw toepassingen. Bijvoorbeeld, u mag geen interactie hebben met de inhoud van een formulier uit binnen de callback-procedure; hebt u het formulier bijwerken, moet u overschakelen terug naar het formulier thread om te werken. Het voorbeeld in dit onderwerp bevat dit gedrag.       Alle fouten die tijdens het uitvoeren van de bewerking optreden worden gegenereerd als uitzonderingen in de callback-procedure. U moet de uitzondering in de callback-procedure, niet in de hoofdtoepassing verwerken. Zie het voorbeeld in dit onderwerp voor meer informatie over de afhandeling van uitzonderingen in de callback-procedure."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteNonQuery method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die wordt aangeroepen wanneer de uitvoering van de opdracht is voltooid.</xref:System.AsyncCallback> Doorgeven <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Microsoft Visual Basic) om aan te geven dat er geen retouraanroep vereist is."
    - id: stateObject
      type: System.Object
      description: "Een gebruiker gedefinieerde status-object dat wordt doorgegeven aan de callback-procedure. Ophalen van dit object vanuit de callback procedure uit via de <xref:System.IAsyncResult.AsyncState*>eigenschap.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die kunnen worden gebruikt om te pollen of wacht u totdat de resultaten of beide; deze waarde is ook nodig bij het aanroepen van <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, die het aantal beïnvloede rijen retourneert.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Een fout is opgetreden tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De naam/waarde-paar &quot;Asynchronous Processing = true &quot; is niet opgenomen in de verbindingsreeks voor het definiëren van de verbinding voor deze <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  id: BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initieert de asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in dit <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, en haalt u een of meer resultatensets van de server."
  remarks: "De methode BeginExecuteReader begint het proces voor het asynchroon uitvoeren van een Transact-SQL-instructie of opgeslagen procedure die rijen retourneert, zodat andere taken uitvoeren kunnen gelijktijdig terwijl de instructie wordt uitgevoerd. Wanneer de instructie is voltooid, ontwikkelaars moeten aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methode de bewerking voltooien en ophalen van de <xref:System.Data.SqlClient.SqlDataReader>geretourneerd door de opdracht.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> De methode BeginExecuteReader retourneert onmiddellijk, maar pas de code wordt uitgevoerd op de bijbehorende <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methodeaanroep, moet deze niet aanroepen dat momenteel een synchrone of asynchrone uitvoering op basis van dezelfde starten uitvoeren <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Het aanroepen van de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>voordat de uitvoering van de opdracht voltooid oorzaken is de <xref:System.Data.SqlClient.SqlCommand>object blokkeren totdat de uitvoering is voltooid.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       Houd er rekening mee dat de opdrachttekst en parameters worden verzonden naar de server synchroon. Als een opdracht grote of veel parameters worden verzonden, kan deze methode tijdens schrijfbewerkingen blokkeren. Nadat de opdracht is verzonden, de methode retourneert onmiddellijk zonder te wachten op een antwoord van de server--dat wil zeggen zijn leesbewerkingen asynchroon. Hoewel opdrachtuitvoering asynchroon is, is ophalen van de waarde nog steeds synchrone. Dit betekent dat naar aanroepen <xref:System.Data.SqlClient.SqlDataReader.Read%2A>mei blokkeren als er meer gegevens is vereist en onderliggende van het netwerk lezen bewerking blokken.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Omdat deze overbelasting biedt geen ondersteuning voor een procedure, moeten ontwikkelaars een poll om te bepalen of de opdracht is voltooid, met behulp van de <xref:System.IAsyncResult.IsCompleted%2A>eigenschap van de <xref:System.IAsyncResult>geretourneerd door de methode BeginExecuteReader; of wacht totdat de voltooiing van een of meer opdrachten met de <xref:System.IAsyncResult.AsyncWaitHandle%2A>eigenschap van het geretourneerde <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Als u <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>of BeginExecuteReader voor toegang tot XML-gegevens, SQL Server wordt een XML-resultaten groter zijn dan 2,033 tekens lang in meerdere rijen 2,033 tekens.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Gebruiken om te voorkomen dat dit gedrag, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lezen FOR XML-query&quot;s.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Zie voor meer informatie artikel Q310378, &quot;PRB: XML-gegevens Is afgekapt wanneer u gebruik SqlDataReader,&quot; in de Microsoft Knowledge Base op http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._4_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._4_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die kunnen worden gebruikt om te pollen of wacht u totdat de resultaten of beide; deze waarde is ook nodig bij het aanroepen van <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, welke retourneert een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> -exemplaar dat kan worden gebruikt voor het ophalen van de geretourneerde rijen.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Een fout is opgetreden tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De naam/waarde-paar &quot;Asynchronous Processing = true &quot; is niet opgenomen in de verbindingsreeks voor het definiëren van de verbinding voor deze <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  id: BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initieert de asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in dit <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> met een van de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarden."
  remarks: "De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>methode begint het proces voor het asynchroon uitvoeren van een Transact-SQL-instructie of opgeslagen procedure die rijen retourneert, zodat andere taken uitvoeren kunnen gelijktijdig terwijl de instructie wordt uitgevoerd.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wanneer de instructie is voltooid, ontwikkelaars moeten aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methode de bewerking voltooien en ophalen van de <xref:System.Data.SqlClient.SqlDataReader>geretourneerd door de opdracht.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>methode retourneert onmiddellijk, maar pas de code wordt uitgevoerd op de bijbehorende <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methodeaanroep, moet deze niet aanroepen dat momenteel een synchrone of asynchrone uitvoering op basis van dezelfde starten uitvoeren <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Het aanroepen van de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>voordat de uitvoering van de opdracht voltooid oorzaken is de <xref:System.Data.SqlClient.SqlCommand>object blokkeren totdat de uitvoering is voltooid.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       De `behavior` parameter kunt u opties voor de werking van de opdracht en de verbinding opgeven. Deze waarden kunnen worden gecombineerd (met behulp van de programmeertaal `OR` operator); in het algemeen ontwikkelaars gebruiken de `CommandBehavior.CloseConnection` waarde om ervoor te zorgen dat de verbinding is gesloten door de runtime wanneer de <xref:System.Data.SqlClient.SqlDataReader>is gesloten.</xref:System.Data.SqlClient.SqlDataReader>       Houd er rekening mee dat de opdrachttekst en parameters worden verzonden naar de server synchroon. Als een opdracht grote of veel parameters worden verzonden, kan deze methode tijdens schrijfbewerkingen blokkeren. Nadat de opdracht is verzonden, de methode retourneert onmiddellijk zonder te wachten op een antwoord van de server--dat wil zeggen zijn leesbewerkingen asynchroon. Hoewel opdrachtuitvoering asynchroon is, is ophalen van de waarde nog steeds synchrone. Dit betekent dat naar aanroepen <xref:System.Data.SqlClient.SqlDataReader.Read%2A>mei blokkeren als er meer gegevens is vereist en onderliggende van het netwerk lezen bewerking blokken.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Omdat deze overbelasting geen ondersteuning biedt voor een procedure, moeten ontwikkelaars ofwel pollen om te bepalen of de opdracht is voltooid, met de <xref:System.IAsyncResult.IsCompleted%2A>eigenschap van de <xref:System.IAsyncResult>geretourneerde door de <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>methode; of de wachttijd voor het voltooien van een of meer opdrachten met de <xref:System.IAsyncResult.AsyncWaitHandle%2A>eigenschap van het geretourneerde <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Als u <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>toegang tot XML-gegevens SQL Server retourneert een XML-resultaten groter zijn dan 2,033 tekens lang in meerdere rijen 2,033 tekens.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Gebruiken om te voorkomen dat dit gedrag, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lezen FOR XML-query&quot;s.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Zie voor meer informatie artikel Q310378, &quot;PRB: XML-gegevens Is afgekapt wanneer u gebruik SqlDataReader,&quot; in de Microsoft Knowledge Base op http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/visualbasic/d7d83823-a2e6-4b2d-a7a2-_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/csharp/d7d83823-a2e6-4b2d-a7a2-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Een van de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarden, opties voor de instructie uitvoeren en gegevens ophalen die aangeeft."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die kunnen worden gebruikt om te pollen, wacht u totdat de resultaten of beide; deze waarde is ook nodig bij het aanroepen van <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, welke retourneert een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> -exemplaar dat kan worden gebruikt voor het ophalen van de geretourneerde rijen.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Een fout is opgetreden tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De naam/waarde-paar &quot;Asynchronous Processing = true &quot; is niet opgenomen in de verbindingsreeks voor het definiëren van de verbinding voor deze <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  id: BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initieert de asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in dit <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> en haalt u een of meer resultatensets van de server, een retouraanroep procedure en staat informatie verstrekt."
  remarks: "De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>methode begint het proces voor het asynchroon uitvoeren van een Transact-SQL-instructie of opgeslagen procedure die rijen retourneert, zodat andere taken uitvoeren kunnen gelijktijdig terwijl de instructie wordt uitgevoerd.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wanneer de instructie is voltooid, ontwikkelaars moeten aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methode de bewerking voltooien en ophalen van de <xref:System.Data.SqlClient.SqlDataReader>geretourneerd door de opdracht.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>methode retourneert onmiddellijk, maar pas de code wordt uitgevoerd op de bijbehorende <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methodeaanroep, moet deze niet aanroepen dat momenteel een synchrone of asynchrone uitvoering op basis van dezelfde starten uitvoeren <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Het aanroepen van de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>voordat de uitvoering van de opdracht is voltooid oorzaak de <xref:System.Data.SqlClient.SqlCommand>object blokkeren totdat de uitvoering is voltooid.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       De `callback` parameter kunt u opgeven een <xref:System.AsyncCallback>gemachtigde die wordt aangeroepen wanneer de instructie is voltooid.</xref:System.AsyncCallback> U kunt aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methode uit binnen deze procedure gemachtigde of van een andere locatie in uw toepassing.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Bovendien kunt u elk object in doorgeven de `stateObject` parameter en de callback-procedure kunt ophalen deze informatie met de <xref:System.IAsyncResult.AsyncState%2A>eigenschap.</xref:System.IAsyncResult.AsyncState%2A>       Houd er rekening mee dat de opdrachttekst en parameters worden verzonden naar de server synchroon. Als een opdracht grote of veel parameters worden verzonden, kan deze methode tijdens schrijfbewerkingen blokkeren. Nadat de opdracht is verzonden, de methode retourneert onmiddellijk zonder te wachten op een antwoord van de server--dat wil zeggen zijn leesbewerkingen asynchroon. Hoewel opdrachtuitvoering asynchroon is, is ophalen van de waarde nog steeds synchrone. Dit betekent dat naar aanroepen <xref:System.Data.SqlClient.SqlDataReader.Read%2A>mei blokkeren als er meer gegevens is vereist en onderliggende van het netwerk lezen bewerking blokken.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Omdat de callback-procedure wordt uitgevoerd van binnen een achtergrond-thread die is opgegeven door de Microsoft .NET runtime, is het zeer belangrijk dat u een strengere benadering voor het verwerken van via verschillende threads-interacties van uw toepassingen. Bijvoorbeeld, u mag geen interactie hebben met de inhoud van een formulier uit binnen de callback-procedure; hebt u het formulier bijwerken, moet u overschakelen terug naar het formulier thread om te werken. Het voorbeeld in dit onderwerp bevat dit gedrag.       Alle fouten die tijdens het uitvoeren van de bewerking optreden worden gegenereerd als uitzonderingen in de callback-procedure. U moet de uitzondering in de callback-procedure, niet in de hoofdtoepassing verwerken. Zie het voorbeeld in dit onderwerp voor meer informatie over de afhandeling van uitzonderingen in de callback-procedure.       Als u <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>toegang tot XML-gegevens SQL Server retourneert een XML-resultaten groter zijn dan 2,033 tekens lang in meerdere rijen 2,033 tekens.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Gebruiken om te voorkomen dat dit gedrag, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lezen FOR XML-query&quot;s.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Zie voor meer informatie artikel Q310378, &quot;PRB: XML-gegevens Is afgekapt wanneer u gebruik SqlDataReader,&quot; in de Microsoft Knowledge Base op http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to BeginExecuteReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die wordt aangeroepen wanneer de uitvoering van de opdracht is voltooid.</xref:System.AsyncCallback> Doorgeven <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Microsoft Visual Basic) om aan te geven dat er geen retouraanroep vereist is."
    - id: stateObject
      type: System.Object
      description: "Een gebruiker gedefinieerde status-object dat wordt doorgegeven aan de callback-procedure. Ophalen van dit object vanuit de callback procedure uit via de <xref:System.IAsyncResult.AsyncState*>eigenschap.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die kunnen worden gebruikt om te pollen, wacht u totdat de resultaten of beide; deze waarde is ook nodig bij het aanroepen van <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, welke retourneert een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> instantie die kan worden gebruikt voor het ophalen van de geretourneerde rijen.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Een fout is opgetreden tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De naam/waarde-paar &quot;Asynchronous Processing = true &quot; is niet opgenomen in de verbindingsreeks voor het definiëren van de verbinding voor deze <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  id: BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initieert de asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in dit <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, met een van de <xref uid=&quot;langword_csharp_CommandBehavior&quot; name=&quot;CommandBehavior&quot; href=&quot;&quot;> </xref> waarden, en bij het ophalen een of meer resultaatsets van de server, een retouraanroep procedure en staat informatie verstrekt."
  remarks: "De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>methode begint het proces voor het asynchroon uitvoeren van een Transact-SQL-instructie of opgeslagen procedure die rijen retourneert, zodat andere taken uitvoeren kunnen gelijktijdig terwijl de instructie wordt uitgevoerd.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wanneer de instructie is voltooid, ontwikkelaars moeten aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methode de bewerking voltooien en ophalen van de <xref:System.Data.SqlClient.SqlDataReader>geretourneerd door de opdracht.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>methode retourneert onmiddellijk, maar pas de code wordt uitgevoerd op de bijbehorende <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methodeaanroep, moet deze niet aanroepen dat momenteel een synchrone of asynchrone uitvoering op basis van dezelfde starten uitvoeren <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Het aanroepen van de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>voordat de uitvoering van de opdracht voltooid oorzaken is de <xref:System.Data.SqlClient.SqlCommand>object blokkeren totdat de uitvoering is voltooid.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       De `callback` parameter kunt u opgeven een <xref:System.AsyncCallback>gemachtigde die wordt aangeroepen wanneer de instructie is voltooid.</xref:System.AsyncCallback> U kunt aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>methode uit binnen deze procedure gemachtigde of van een andere locatie in uw toepassing.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Bovendien kunt u elk object in doorgeven de `stateObject` parameter en de callback-procedure kunt ophalen deze informatie met de <xref:System.IAsyncResult.AsyncState%2A>eigenschap.</xref:System.IAsyncResult.AsyncState%2A>       De `behavior` parameter kunt u opties voor de werking van de opdracht en de verbinding opgeven. Deze waarden kunnen worden gecombineerd (met behulp van de programmeertaal `Or` operator); in het algemeen ontwikkelaars gebruiken de `CloseConnection` waarde om ervoor te zorgen dat de verbinding is gesloten door de runtime wanneer de <xref:System.Data.SqlClient.SqlDataReader>is gesloten.</xref:System.Data.SqlClient.SqlDataReader> Ontwikkelaars kunnen ook optimaliseren van de werking van de <xref:System.Data.SqlClient.SqlDataReader>door te geven de `SingleRow` waarde indien bekend van tevoren dat de Transact-SQL-instructie of opgeslagen procedure alleen één rij retourneert.</xref:System.Data.SqlClient.SqlDataReader>       Houd er rekening mee dat de opdrachttekst en parameters worden verzonden naar de server synchroon. Als een opdracht grote of veel parameters worden verzonden, kan deze methode tijdens schrijfbewerkingen blokkeren. Nadat de opdracht is verzonden, de methode retourneert onmiddellijk zonder te wachten op een antwoord van de server--dat wil zeggen zijn leesbewerkingen asynchroon. Hoewel opdrachtuitvoering asynchroon is, is ophalen van de waarde nog steeds synchrone. Dit betekent dat naar aanroepen <xref:System.Data.SqlClient.SqlDataReader.Read%2A>mei blokkeren als er meer gegevens is vereist en onderliggende van het netwerk lezen bewerking blokken.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Omdat de callback-procedure wordt uitgevoerd van binnen een achtergrondthread geleverd door de Microsoft .NET common language runtime, is het zeer belangrijk dat u een strengere benadering voor het verwerken van via verschillende threads-interacties van uw toepassingen. Bijvoorbeeld, u mag geen interactie hebben met de inhoud van een formulier uit binnen de callback-procedure moet u het formulier bijwerken hebt u moet overschakelen terug naar het formulier thread om uw werk. Het voorbeeld in dit onderwerp bevat dit gedrag.       Alle fouten die tijdens het uitvoeren van de bewerking optreden worden gegenereerd als uitzonderingen in de callback-procedure. U moet de uitzondering in de callback-procedure, niet in de hoofdtoepassing verwerken. Zie het voorbeeld in dit onderwerp voor meer informatie over de afhandeling van uitzonderingen in de callback-procedure.       Als u <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>voor toegang tot XML-gegevens, SQL Server wordt geen XML-resultaten opgeleverd groter is dan 2,033 tekens lang in meerdere rijen 2,033 tekens.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Gebruiken om te voorkomen dat dit gedrag, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lezen FOR XML-query&quot;s.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Zie voor meer informatie artikel Q310378, &quot;PRB: XML-gegevens Is afgekapt wanneer u gebruik SqlDataReader,&quot; in de Microsoft Knowledge Base op http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die wordt aangeroepen wanneer de uitvoering van de opdracht is voltooid.</xref:System.AsyncCallback> Doorgeven <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Microsoft Visual Basic) om aan te geven dat er geen retouraanroep vereist is."
    - id: stateObject
      type: System.Object
      description: "Een gebruiker gedefinieerde status-object dat wordt doorgegeven aan de callback-procedure. Ophalen van dit object vanuit de callback procedure uit via de <xref:System.IAsyncResult.AsyncState*>eigenschap.</xref:System.IAsyncResult.AsyncState*>"
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Een van de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarden, opties voor de instructie uitvoeren en gegevens ophalen die aangeeft."
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die kunnen worden gebruikt om te pollen of wacht u totdat de resultaten of beide; deze waarde is ook nodig bij het aanroepen van <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, welke retourneert een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> instantie die kan worden gebruikt voor het ophalen van de geretourneerde rijen.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Een fout is opgetreden tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De naam/waarde-paar &quot;Asynchronous Processing = true &quot; is niet opgenomen in de verbindingsreeks voor het definiëren van de verbinding voor deze <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  id: BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initieert de asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in dit <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> en retourneert resultaten als een <xref:System.Xml.XmlReader>object.</xref:System.Xml.XmlReader>"
  remarks: "De methode BeginExecuteXmlReader begint het proces voor het asynchroon uitvoeren van een Transact-SQL-instructie die rijen worden geretourneerd als XML, zodat andere taken uitvoeren kunnen gelijktijdig terwijl de instructie wordt uitgevoerd. Wanneer de instructie is voltooid, ontwikkelaars moeten aanroepen de `EndExecuteXmlReader` methode voor de bewerking voltooien en de XML-gegevens ophalen die zijn geretourneerd door de opdracht. De methode BeginExecuteXmlReader retourneert onmiddellijk, maar pas de code wordt uitgevoerd op de bijbehorende `EndExecuteXmlReader` methodeaanroep, moet deze niet aanroepen dat momenteel een synchrone of asynchrone uitvoering op basis van dezelfde starten uitvoeren <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> Het aanroepen van de `EndExecuteXmlReader` voordat de uitvoering van de opdracht voltooid oorzaken is de <xref:System.Data.SqlClient.SqlCommand>object blokkeren totdat de uitvoering is voltooid.</xref:System.Data.SqlClient.SqlCommand>       De <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>eigenschap een Transact-SQL-instructie wordt normaal gesproken geeft u met een geldige component FOR XML.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Echter, `CommandText` kunt ook opgeven voor een instructie die retourneert `ntext` gegevens die geldige XML bevat.       Een typische <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>query kan worden opgemaakt als in het volgende C#-voorbeeld: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` deze methode kan ook worden gebruikt voor het ophalen van een resultatenset van één rij bij één kolom.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> In dit geval wordt meer dan één rij geretourneerd de `EndExecuteXmlReader` methode wordt de <xref:System.Xml.XmlReader>aan de waarde op de eerste rij en verwijderingen de rest van het resultaat ingesteld.</xref:System.Xml.XmlReader>       De functie voor meerdere actieve resultaat set (MARS) kunt meerdere acties dezelfde verbinding gebruiken.       Houd er rekening mee dat de opdrachttekst en parameters worden verzonden naar de server synchroon. Als een opdracht grote of veel parameters worden verzonden, kan deze methode tijdens schrijfbewerkingen blokkeren. Nadat de opdracht is verzonden, de methode retourneert onmiddellijk zonder te wachten op een antwoord van de server--dat wil zeggen zijn leesbewerkingen asynchroon. Hoewel opdrachtuitvoering asynchroon is, is ophalen van de waarde nog steeds synchrone.       Omdat deze overbelasting geen ondersteuning biedt voor een procedure, ontwikkelaars moeten beide poll om te bepalen of de opdracht is voltooid, met behulp van de <xref:System.IAsyncResult.IsCompleted%2A>eigenschap van de <xref:System.IAsyncResult>geretourneerd door de methode BeginExecuteXmlReader; of wacht totdat de voltooiing van een of meer opdrachten met de <xref:System.IAsyncResult.AsyncWaitHandle%2A>eigenschap van het geretourneerde <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Als u <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>toegang tot XML-gegevens SQL Server retourneert een XML-resultaten groter zijn dan 2,033 tekens lang in meerdere rijen 2,033 tekens.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Gebruiken om te voorkomen dat dit gedrag, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lezen FOR XML-query&quot;s.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Zie voor meer informatie artikel Q310378, &quot;PRB: XML-gegevens Is afgekapt wanneer u gebruik SqlDataReader,&quot; in de Microsoft Knowledge Base op http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving XML data asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the XML and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._41_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._41_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die kunnen worden gebruikt om te pollen of wacht u totdat de resultaten of beide; deze waarde is ook nodig bij het aanroepen van <xref uid=&quot;langword_csharp_EndExecuteXmlReader&quot; name=&quot;EndExecuteXmlReader&quot; href=&quot;&quot;> </xref>, dat resulteert in een enkele XML-waarde.</xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Een fout is opgetreden tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De naam/waarde-paar &quot;Asynchronous Processing = true &quot; is niet opgenomen in de verbindingsreeks voor het definiëren van de verbinding voor deze <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  id: BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initieert de asynchrone uitvoering van de Transact-SQL-instructie of opgeslagen procedure die wordt beschreven in dit <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> en retourneert resultaten als een <xref:System.Xml.XmlReader>object met behulp van een procedure.</xref:System.Xml.XmlReader>"
  remarks: "De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>methode begint het proces voor het asynchroon uitvoeren van een Transact-SQL-instructie of opgeslagen procedure die rijen worden geretourneerd als XML, zodat andere taken uitvoeren kunnen gelijktijdig terwijl de instructie wordt uitgevoerd.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Wanneer de instructie is voltooid, ontwikkelaars moeten aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>methode voor de bewerking voltooien en de aangevraagde XML-gegevens worden opgehaald.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> De <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>methode retourneert onmiddellijk, maar pas de code wordt uitgevoerd op de bijbehorende <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>methodeaanroep, moet deze niet aanroepen dat momenteel een synchrone of asynchrone uitvoering op basis van dezelfde starten uitvoeren <xref:System.Data.SqlClient.SqlCommand>object.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Het aanroepen van de <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>voordat de uitvoering van de opdracht voltooid oorzaken is de <xref:System.Data.SqlClient.SqlCommand>object blokkeren totdat de uitvoering is voltooid.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       De <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>eigenschap een Transact-SQL-instructie wordt normaal gesproken geeft u met een geldige component FOR XML.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Echter, `CommandText` kunt ook opgeven voor een instructie die gegevens retourneert waarop geldige XML bevat. Deze methode kan ook worden gebruikt voor het ophalen van een resultatenset van één rij bij één kolom. In dit geval meer dan één rij geretourneerd de <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>methode wordt de <xref:System.Xml.XmlReader>aan de waarde op de eerste rij en verwijderingen de rest van het resultaat ingesteld.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       Een typische BeginExecuteXmlReader query kan worden opgemaakt als in het volgende C#-voorbeeld: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` deze methode kan ook worden gebruikt voor het ophalen van een resultatenset van één rij bij één kolom. In dit geval meer dan één rij geretourneerd de <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>methode wordt de <xref:System.Xml.XmlReader>aan de waarde op de eerste rij en verwijderingen de rest van het resultaat ingesteld.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       De functie voor meerdere actieve resultaat set (MARS) kunt meerdere acties dezelfde verbinding gebruiken.       De `callback` parameter kunt u opgeven een <xref:System.AsyncCallback>gemachtigde die wordt aangeroepen wanneer de instructie is voltooid.</xref:System.AsyncCallback> U kunt aanroepen de <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>methode uit binnen deze procedure gemachtigde of van een andere locatie in uw toepassing.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> Bovendien kunt u elk object in doorgeven de `stateObject` parameter en de callback-procedure kunt ophalen deze informatie met de <xref:System.IAsyncResult.AsyncState%2A>eigenschap.</xref:System.IAsyncResult.AsyncState%2A>       Houd er rekening mee dat de opdrachttekst en parameters worden verzonden naar de server synchroon. Als een opdracht grote of veel parameters wordt verzonden, kan deze methode tijdens schrijfbewerkingen blokkeren. Nadat de opdracht is verzonden, de methode retourneert onmiddellijk zonder te wachten op een antwoord van de server--dat wil zeggen zijn leesbewerkingen asynchroon.       Alle fouten die tijdens het uitvoeren van de bewerking optreden worden gegenereerd als uitzonderingen in de callback-procedure. U moet de uitzondering in de callback-procedure, niet in de hoofdtoepassing verwerken. Zie het voorbeeld in dit onderwerp voor meer informatie over de afhandeling van uitzonderingen in de callback-procedure.       Als u <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>voor toegang tot XML-gegevens, SQL Server wordt geen XML-resultaten opgeleverd groter is dan 2,033 tekens lang in meerdere rijen 2,033 tekens.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Gebruiken om te voorkomen dat dit gedrag, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lezen FOR XML-query&quot;s.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Zie voor meer informatie artikel Q310378, &quot;PRB: XML-gegevens Is afgekapt wanneer u gebruik SqlDataReader,&quot; in de Microsoft Knowledge Base op http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteXmlReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to BeginExecuteXmlReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Een <xref:System.AsyncCallback>gemachtigde die wordt aangeroepen wanneer de uitvoering van de opdracht is voltooid.</xref:System.AsyncCallback> Doorgeven <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Microsoft Visual Basic) om aan te geven dat er geen retouraanroep vereist is."
    - id: stateObject
      type: System.Object
      description: "Een gebruiker gedefinieerde status-object dat wordt doorgegeven aan de callback-procedure. Ophalen van dit object vanuit de callback procedure uit via de <xref:System.IAsyncResult.AsyncState*>eigenschap.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "Een <xref:System.IAsyncResult>die kunnen worden gebruikt om te pollen, wacht u totdat de resultaten of beide, deze waarde ook is vereist wanneer de <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*>wordt genoemd, die de resultaten van de opdracht als XML retourneert.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Een fout is opgetreden tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De naam/waarde-paar &quot;Asynchronous Processing = true &quot; is niet opgenomen in de verbindingsreeks voor het definiëren van de verbinding voor deze <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Cancel
  id: Cancel
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Probeert te annuleren tijdens de uitvoering van een <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Als er niets om te annuleren, gebeurt er niets. Als er een opdracht bezig is en de poging om te annuleren mislukt, wordt echter geen uitzondering gegenereerd.       In sommige, zelden voorkomt, gevallen, als u aanroept <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>vervolgens aanroepen <xref:System.Data.SqlClient.SqlDataReader.Close%2A>(implicitily of expliciet) voordat u aanroept annuleren en vervolgens aanroep annuleren, wordt de opdracht annuleren niet verzonden naar SQL Server en de resulterende set kan blijven na het aanroepen van <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</xref:System.Data.SqlClient.SqlConnection.Close%2A> stream</xref:System.Data.SqlClient.SqlDataReader.Close%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Om dit te voorkomen, zorg dat u annuleren aanroept voordat de lezer of de verbinding wordt gesloten."
  example:
  - "The following example demonstrates the use of the Cancel method.  \n  \n [!code-vb[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._13_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/csharp/m-system.data.sqlclient._13_1.cs)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Clone
  id: Clone
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Maakt een nieuw <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> object dat een kopie van het huidige exemplaar."
  syntax:
    content: public System.Data.SqlClient.SqlCommand Clone ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Een nieuwe <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> object dat een kopie van dit exemplaar."
  overload: System.Data.SqlClient.SqlCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van de kolomversleutelingsinstelling voor deze opdracht."
  syntax:
    content: public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }
    return:
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "De kolomversleutelingsinstelling voor deze opdracht."
  overload: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandText
  id: CommandText
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van de Transact-SQL-instructie, tabelnaam of opgeslagen procedure uit te voeren op de gegevensbron."
  remarks: "Wanneer de <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>eigenschap is ingesteld op `StoredProcedure`, de eigenschap CommandText moet worden ingesteld op de naam van de opgeslagen procedure.</xref:System.Data.SqlClient.SqlCommand.CommandType%2A> De gebruiker kan zijn vereist voor het gebruik van escape-teken syntaxis als de opgeslagen procedurenaam mag speciale tekens bevat. De opdracht deze opgeslagen procedure wordt uitgevoerd bij het aanroepen van een van de `Execute` methoden.       Microsoft .NET Framework Data Provider voor SQL Server ondersteunt niet de tijdelijke aanduiding voor de vraagteken (?) voor de parameters doorgeven aan een Transact-SQL-instructie of een opgeslagen procedure is aangeroepen met een opdracht van `CommandType.Text`. In dit geval moeten benoemde parameters worden gebruikt. Bijvoorbeeld: ```   SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID   ``` voor meer informatie Zie [Parameters configureren en de Parameter-gegevenstypen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._56_1.vb)]\n [!code-cs[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._56_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "De Transact-SQL-instructie of opgeslagen procedure uit te voeren. De standaardwaarde is een lege tekenreeks."
  overload: System.Data.SqlClient.SqlCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van de wachttijd voordat de poging een opdracht uit te voeren wordt afgebroken en een fout optreedt."
  remarks: "Een waarde van 0 geeft aan dat er geen limiet (een poging tot het uitvoeren van een opdracht wacht voor onbepaalde tijd).      > [!NOTE] > CommandTimeout is de eigenschap wordt genegeerd tijdens asynchrone methodeaanroepen zoals <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>       CommandTimeout heeft geen effect wanneer de opdracht wordt uitgevoerd tegen contextverbinding (een <xref:System.Data.SqlClient.SqlConnection>geopend met &quot; contextverbinding = true &quot; in de verbindingsreeks).</xref:System.Data.SqlClient.SqlConnection>      > [!NOTE] > Deze eigenschap is een time-out voor de cumulatieve (voor alle pakketten die worden gelezen tijdens het aanroepen van een methode-netwerk) voor alle leesbewerkingen netwerk tijdens het uitvoeren van opdrachten of verwerking van de resultaten. Er is een time-out kan nog steeds uitgevoerd na de eerste rij wordt geretourneerd en geen tijd in gebruikersmodus van verwerking omvat, alleen netwerk lezen tijd.   >> Bijvoorbeeld met een 30 seconden time-out voor if <xref:System.Data.SqlClient.SqlDataReader.Read%2A>vereist twee netwerkpakketten en hieraan 30 seconden lezen beide netwerkpakketten.</xref:System.Data.SqlClient.SqlDataReader.Read%2A> Als u aanroept <xref:System.Data.SqlClient.SqlDataReader.Read%2A>opnieuw, is er een andere 30 seconden lezen van gegevens die is vereist.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>      ```   using System;   using System.Data.SqlClient;   ///    public class A {      ///       public static void Main() {         string connectionString = &quot;&quot;;         // Wait for 5 second delay in the command         string queryString = &quot;waitfor delay &quot;00:00:05&quot;&quot;;         using (SqlConnection connection = new SqlConnection(connectionString)) {            connection.Open();            SqlCommand command = new SqlCommand(queryString, connection);            // Setting command timeout to 1 second            command.CommandTimeout = 1;            try {               command.ExecuteNonQuery();            }            catch (SqlException e) {               Console.WriteLine(&quot;Got expected SqlException due to command timeout &quot;);               Console.WriteLine(e);            }         }      }   }   ```"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "De tijd in seconden moet worden gewacht voor de opdracht uit te voeren. De standaardwaarde is 30 seconden."
  overload: System.Data.SqlClient.SqlCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandType
  id: CommandType
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld met een waarde die aangeeft hoe de <xref:System.Data.SqlClient.SqlCommand.CommandText*>eigenschap kan worden geïnterpreteerd.</xref:System.Data.SqlClient.SqlCommand.CommandText*>"
  remarks: "Als u de eigenschap CommandType instelt op `StoredProcedure`, moet u instellen de <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>eigenschap in op de naam van de opgeslagen procedure.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> De opdracht wordt deze opgeslagen procedure uitgevoerd wanneer u een van de Execute-methoden aanroept.       Microsoft .NET Framework Data Provider voor SQL Server ondersteunt geen tijdelijke aanduiding voor de vraagteken (?) voor de parameters doorgeven aan een SQL-instructie of een opgeslagen procedure is aangeroepen met een CommandType van <xref:System.Data.CommandType>.</xref:System.Data.CommandType> In dit geval moeten benoemde parameters worden gebruikt. Bijvoorbeeld: Selecteer * van klanten waar CustomerID = @CustomerID voor meer informatie Zie [Parameters configureren en de Parameter-gegevenstypen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._8_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._8_1.cs)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "Een van de <xref href=&quot;System.Data.CommandType&quot;> </xref> waarden. De standaardwaarde is <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De waarde is niet een geldig <xref href=&quot;System.Data.CommandType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gebruikt door dit exemplaar van de <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Als de opdracht is aangemeld in een bestaande transactie en de verbinding wordt gewijzigd, het uitvoeren van de opdracht een <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> genereert       Als de <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>niet null is, en de transactie al is doorgevoerd of teruggedraaid, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>is ingesteld op null.</xref:System.Data.SqlClient.SqlCommand.Transaction%2A> </xref:System.Data.SqlClient.SqlCommand.Transaction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._22_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._22_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlConnection Connection { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "De verbinding met een gegevensbron. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De eigenschap Connection is gewijzigd terwijl de opdracht in een transactie is aangemeld..."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Maakt een nieuw exemplaar van een <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> object."
  remarks: "De methode CreateParameter is een sterk getypeerde versie van <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.SqlClient.SqlParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlParameter
      description: "A <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  id: DbConnection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of het object command weergegeven in een Windows Forms Designer-besturingselement worden moet."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "Een waarde die aangeeft of het object command weergegeven in een besturingselement worden moet. De standaardwaarde is **true**."
  overload: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  id: EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wordt asynchroon uitgevoerd van een Transact-SQL-instructie."
  remarks: "Als u aanroept <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>uit te voeren een [!INCLUDE[tsql](~/add/includes/tsql-md.md)] -instructie, moet u EndExecuteNonQuery aanroepen om de bewerking niet voltooien.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Als het proces voor het uitvoeren van de opdracht niet heeft nog voltooid, deze methodeblokken totdat de bewerking is voltooid. Gebruikers kunnen controleren of de opdracht de bewerking is voltooid met behulp van de <xref:System.IAsyncResult>exemplaar geretourneerd door de <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>methode.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> Als een procedure is opgegeven in de aanroep naar <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, deze methode moet worden aangeroepen.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteNonQuery method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.
  syntax:
    content: public int EndExecuteNonQuery (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd door aanroep naar <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "Het aantal rijen zijn beïnvloed (hetzelfde gedrag als <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>).</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>de parameter is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteNonQuery is meer dan één keer aangeroepen voor een enkele opdrachten uit te voeren, of de methode is niet overeenkomen met de methode kan worden uitgevoerd (bijvoorbeeld de code EndExecuteNonQuery voor het voltooien van de uitvoering van een aanroep naar <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*> aangeroepen"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "De hoeveelheid tijd die is opgegeven <> </> *> verstreken en de asynchrone bewerking opgegeven met <> </> *> is niet voltooid.       In sommige gevallen <xref:System.IAsyncResult>kan worden ingesteld op <xref uid=&quot;langword_csharp_IsCompleted&quot; name=&quot;IsCompleted&quot; href=&quot;&quot;> </xref> onjuist.</xref:System.IAsyncResult> Als dit gebeurt en EndExecuteNonQuery wordt aangeroepen, EndExecuteNonQuery kan moet u een foutbericht SqlException als de hoeveelheid tijd die is opgegeven in <> </> *> verstreken en de asynchrone bewerking opgegeven met <> </> *> is niet voltooid. Verhelp dit probleem, moet u Verhoog de waarde van CommandTimeout of verminder het werk wordt uitgevoerd door de asynchrone bewerking."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  id: EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Asynchrone uitvoering van een Transact-SQL-instructie retourneren van de aanvraag is voltooid <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Als u aanroept <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>voor het uitvoeren van een Transact-SQL-instructie, moet u EndExecuteReader aanroepen om de bewerking niet voltooien.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Als het proces voor het uitvoeren van de opdracht niet heeft nog voltooid, deze methodeblokken totdat de bewerking is voltooid. Gebruikers kunnen controleren of de opdracht de bewerking is voltooid met behulp van de <xref:System.IAsyncResult>exemplaar geretourneerd door de <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>methode.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.IAsyncResult> Als een procedure is opgegeven in de aanroep naar <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, deze methode moet worden aangeroepen.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.
  syntax:
    content: public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd door het aanroepen van <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*> </xref:System.IAsyncResult>"
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "Een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> -object dat kan worden gebruikt voor het ophalen van de gevraagde rijen."
  overload: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>de parameter is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteReader is meer dan één keer aangeroepen voor een enkele opdrachten uit te voeren, of de methode is niet overeenkomen met de methode kan worden uitgevoerd (bijvoorbeeld de code EndExecuteReader voor het voltooien van de uitvoering van een aanroep naar <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*> aangeroepen"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  id: EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wordt asynchroon uitgevoerd van een Transact-SQL-instructie, de aangevraagde gegevens als XML retourneert."
  remarks: "Als u aanroept <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>voor het uitvoeren van een Transact-SQL-instructie, moet u EndExecuteXmlReader aanroepen om de bewerking niet voltooien.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Als het proces voor het uitvoeren van de opdracht niet heeft nog voltooid, deze methodeblokken totdat de bewerking is voltooid. Gebruikers kunnen controleren of de opdracht de bewerking is voltooid met behulp van de <xref:System.IAsyncResult>exemplaar geretourneerd door de <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>methode.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.IAsyncResult> Als een procedure is opgegeven in de aanroep naar <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, deze methode moet worden aangeroepen.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteXmlReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.
  syntax:
    content: public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "De <xref:System.IAsyncResult>geretourneerd door het aanroepen van <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*> </xref:System.IAsyncResult>"
    return:
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>-object dat kan worden gebruikt voor het ophalen van de resulterende XML-gegevens.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>de parameter is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteXmlReader is meer dan één keer aangeroepen voor een enkele opdrachten uit te voeren, of de methode is niet overeenkomen met de methode kan worden uitgevoerd (bijvoorbeeld de code EndExecuteXmlReader voor het voltooien van de uitvoering van een aanroep naar <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*> aangeroepen"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Moet worden toegevoegd."
    return:
      type: System.Data.Common.DbDataReader
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Moet worden toegevoegd."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Moet worden toegevoegd."
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "Moet worden toegevoegd."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Voert een Transact-SQL-instructie voor de verbinding en retourneert het aantal rijen zijn beïnvloed."
  remarks: "U kunt de ExecuteNonQuery catalogus bewerkingen (bijvoorbeeld het opvragen van de structuur van een database of het maken van databaseobjecten zoals tabellen) uit te voeren of te wijzigen van de gegevens in een database zonder gebruik van een <xref:System.Data.DataSet>door het uitvoeren van de UPDATE, INSERT of DELETE-instructies.</xref:System.Data.DataSet>       Hoewel de ExecuteNonQuery geen rijen worden geretourneerd, worden een output-parameters of retourwaarden toegewezen aan de parameters ingevuld met gegevens.       De geretourneerde waarde is voor de UPDATE, INSERT en DELETE-instructies, het aantal rijen zijn beïnvloed door de opdracht. Wanneer een trigger aanwezig is in een tabel wordt ingevoegd of bijgewerkt, bevat de retourwaarde het aantal rijen zijn beïnvloed door de bewerking insert of update en het aantal rijen zijn beïnvloed door de trigger of triggers. Voor alle andere typen van de instructies is de geretourneerde waarde -1. Als er een terugdraaiactie heeft plaatsgevonden optreedt, wordt de geretourneerde waarde is ook -1."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._23_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._23_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "Het aantal rijen zijn beïnvloed."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Er is een uitzondering opgetreden tijdens het uitvoeren van de opdracht moet worden uitgevoerd in een vergrendelde rij. Deze uitzondering wordt niet gegenereerd wanneer u van Microsoft .NET Framework versie 1.0 gebruikmaakt.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een asynchrone versie van <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>, die wordt uitgevoerd een [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instructie met de verbinding en retourneert het aantal rijen zijn beïnvloed.</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*> Het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de opdracht time-out is verstreken.  Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie."
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van ExecuteNonQueryAsync meer dan één keer voor hetzelfde exemplaar voordat de taak voltooid.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]heeft een fout geretourneerd tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Verzendt de <> </> *> naar de <> </> *> en maakt een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Wanneer de <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>eigenschap is ingesteld op `StoredProcedure`, wordt de <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>eigenschap moet worden ingesteld op de naam van de opgeslagen procedure.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> De opdracht wordt deze opgeslagen procedure uitgevoerd wanneer u ExecuteReader aanroept.      > [!NOTE] > Als een transactie is een impasse, kan niet tot een uitzondering worden gegenereerd <xref:System.Data.SqlClient.SqlDataReader.Read%2A>wordt aangeroepen.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       De functie voor meerdere actieve resultaat set (MARS) kunt u meerdere acties met behulp van dezelfde verbinding.       Als u ExecuteReader of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>voor toegang tot XML-gegevens, SQL Server zal geen XML-resultaten opgeleverd groter is dan 2,033 tekens lang in meerdere rijen 2,033 tekens.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Gebruiken om te voorkomen dat dit gedrag, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lezen FOR XML-query&quot;s.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Zie voor meer informatie artikel Q310378, &quot;PRB: XML-gegevens Is afgekapt wanneer u gebruik SqlDataReader,&quot; in de Microsoft Knowledge Base op http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._22_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._22_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Er is een uitzondering opgetreden tijdens het uitvoeren van de opdracht moet worden uitgevoerd in een vergrendelde rij. Deze uitzondering wordt niet gegenereerd wanneer u van Microsoft .NET Framework versie 1.0 gebruikmaakt.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De huidige status van de verbinding is gesloten. ExecuteReader vereist een open <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Verzendt de <> </> *> aan de <> </> *>, en maakt een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> met een van de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarden."
  remarks: "Wanneer de <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>eigenschap is ingesteld op `StoredProcedure`, wordt de <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>eigenschap moet worden ingesteld op de naam van de opgeslagen procedure.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> De opdracht deze opgeslagen procedure wordt uitgevoerd bij het aanroepen van <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>      > [!NOTE] > Gebruik <xref:System.Data.CommandBehavior>grote waarden en binaire gegevens kunnen ophalen.</xref:System.Data.CommandBehavior> Anders wordt een <xref:System.OutOfMemoryException>optreden en de verbinding wordt gesloten.</xref:System.OutOfMemoryException>       De functie voor meerdere actieve resultaat set (MARS) kunt u meerdere acties met behulp van dezelfde verbinding.       Als u <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>voor toegang tot XML-gegevens, SQL Server wordt geen XML-resultaten opgeleverd groter is dan 2,033 tekens lang in meerdere rijen 2,033 tekens.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Gebruiken om te voorkomen dat dit gedrag, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lezen FOR XML-query&quot;s.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Zie voor meer informatie artikel Q310378, &quot;PRB: XML-gegevens Is afgekapt wanneer u gebruik SqlDataReader,&quot; in de Microsoft Knowledge Base op http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.sqlclient._14_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._14_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Een van de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarden."
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een asynchrone versie van <> </> *>, welke verzendt de <> </> *> aan de <xref:System.Data.SqlClient.SqlCommand.Connection*>en maakt een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een ongeldige <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarde."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van ExecuteReaderAsync meer dan één keer voor hetzelfde exemplaar voordat de taak voltooid.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]heeft een fout geretourneerd tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  id: ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een asynchrone versie van <> </> *>, welke verzendt de <> </> *> naar de <xref:System.Data.SqlClient.SqlCommand.Connection*>, en maakt een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Opties voor de instructie uitvoeren en gegevens ophalen.  Wanneer is ingesteld op <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>leest de hele rij voordat er een taak voltooid.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een ongeldige <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarde."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van ExecuteReaderAsync meer dan één keer voor hetzelfde exemplaar voordat de taak voltooid.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]heeft een fout geretourneerd tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een asynchrone versie van <> </> *>, welke verzendt de <> </> *> aan de <xref:System.Data.SqlClient.SqlCommand.Connection*>en maakt een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*>       Het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de opdracht time-out is verstreken.  Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een ongeldige <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarde."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>meer dan één keer voor hetzelfde exemplaar voordat de taak voltooid.</xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]heeft een fout geretourneerd tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een asynchrone versie van <> </> *>, welke verzendt de <> </> *> naar de <xref:System.Data.SqlClient.SqlCommand.Connection*>, en maakt een <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de opdracht time-out is verstreken.</xref:System.Data.SqlClient.SqlCommand.Connection*>  Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Opties voor de instructie uitvoeren en gegevens ophalen.  Wanneer is ingesteld op <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>leest de hele rij voordat er een taak voltooid.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Een ongeldige <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> waarde."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van ExecuteReaderAsync meer dan één keer voor hetzelfde exemplaar voordat de taak voltooid.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]heeft een fout geretourneerd tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "De query wordt uitgevoerd en de eerste kolom van de eerste rij in de resultatenset die door de query retourneert. Extra kolommen of rijen worden genegeerd."
  remarks: "Gebruik de methode ExecuteScalar een enkele waarde (bijvoorbeeld een cumulatieve waarde) ophalen uit een database. Hiervoor moet minder dan het gebruik van de <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>methode, en vervolgens het uitvoeren van de bewerkingen die u nodig hebt voor het genereren van de enkele waarde met behulp van de gegevens die zijn geretourneerd door een <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> -code       Een typische ExecuteScalar query kan worden opgemaakt als in het volgende C#-voorbeeld:```   cmd.CommandText = &quot;SELECT COUNT(*) FROM dbo.region&quot;;   Int32 count = (Int32) cmd.ExecuteScalar();   ```"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteScalar. The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source. The function returns the new **Identity** column value if a new row was inserted, 0 on failure.  \n  \n [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._31_1.vb)]\n [!code-cs[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.sqlclient._31_1.cs)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "De eerste kolom van de eerste rij in de resultaatset of een null-verwijzing (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) als de resultatenset leeg is. Retourneert een maximum van 2033 tekens."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Er is een uitzondering opgetreden tijdens het uitvoeren van de opdracht moet worden uitgevoerd in een vergrendelde rij. Deze uitzondering wordt niet gegenereerd wanneer u van Microsoft .NET Framework versie 1.0 gebruikmaakt.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een asynchrone versie van <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*>, waardoor de query asynchroon en retourneert de eerste kolom van de eerste rij in de resultatenset die door de query.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*> Extra kolommen of rijen worden genegeerd.       Het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de opdracht time-out is verstreken. Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie."
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van ExecuteScalarAsync meer dan één keer voor hetzelfde exemplaar voordat de taak voltooid.       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]heeft een fout geretourneerd tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  id: ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Verzendt de <> </> *> naar de <> </> *> en maakt een <xref:System.Xml.XmlReader>object.</xref:System.Xml.XmlReader>"
  remarks: "De <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>eigenschap wordt normaal gesproken geeft u een [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instructie met een geldige component FOR XML.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Echter, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>kunt ook opgeven voor een instructie die retourneert `ntext` of `nvarchar` gegevens met een geldig XML-bestand of de inhoud van een kolom die is gedefinieerd met behulp van de `xml` gegevenstype.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A>       Een typische ExecuteXmlReader query kan worden opgemaakt als in de volgende Microsoft Visual C#-voorbeeld: ```   SqlCommand command = new SqlCommand(&quot;SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` deze methode kan ook worden gebruikt voor het ophalen van een enkele rij, één kolom resultatenset met XML-gegevens. In dit geval als meer dan één rij wordt geretourneerd, de methode ExecuteXmlReader koppelt de <xref:System.Xml.XmlReader>aan de waarde op de eerste rij en verwijderingen de rest van het resultaat ingesteld.</xref:System.Xml.XmlReader>       De functie voor meerdere actieve resultaat set (MARS) kunt u meerdere acties met behulp van dezelfde verbinding.       Als u <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>voor toegang tot XML-gegevens, SQL Server wordt geen XML-resultaten opgeleverd groter is dan 2,033 tekens lang in meerdere rijen 2,033 tekens.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Gebruiken om te voorkomen dat dit gedrag, ExecuteXmlReader of <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lezen FOR XML-query&quot;s.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Zie voor meer informatie artikel Q310378, &quot;PRB: XML-gegevens Is afgekapt wanneer u gebruik SqlDataReader,&quot; in de Microsoft Knowledge Base op http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteXmlReader. The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._42_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._42_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader ExecuteXmlReader ();
    parameters: []
    return:
      type: System.Xml.XmlReader
      description: "Een <xref:System.Xml.XmlReader>object.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Er is een uitzondering opgetreden tijdens het uitvoeren van de opdracht moet worden uitgevoerd in een vergrendelde rij. Deze uitzondering wordt niet gegenereerd wanneer u van Microsoft .NET Framework versie 1.0 gebruikmaakt.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  id: ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een asynchrone versie van <> </> *>, welke verzendt de <> </> *> naar de <xref:System.Data.SqlClient.SqlCommand.Connection*>en maakt een <xref:System.Xml.XmlReader>object.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>meer dan één keer voor hetzelfde exemplaar voordat de taak voltooid.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]heeft een fout geretourneerd tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  id: ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Een asynchrone versie van <> </> *>, welke verzendt de <> </> *> naar de <xref:System.Data.SqlClient.SqlCommand.Connection*>en maakt een <xref:System.Xml.XmlReader>object.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       Het token voor annulering kan worden gebruikt om aan te vragen van de bewerking verlaten voordat de opdracht time-out is verstreken.  Uitzonderingen worden gerapporteerd via het geretourneerde object van de taak."
  remarks: "Voor meer informatie over asynchrone programmering in de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] -gegevensprovider voor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], Zie [asynchrone programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "De annulering-instructie."
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "Een taak die de asynchrone bewerking vertegenwoordigt."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Het aanroepen van <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>meer dan één keer voor hetzelfde exemplaar voordat de taak voltooid.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       De <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> gesloten of verwijderd tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>in de verbindingsreeks is opgegeven."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]heeft een fout geretourneerd tijdens het uitvoeren van de opdrachttekst.       Er is een time-out opgetreden tijdens een streaming-bewerking. Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Er is een fout opgetreden een <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>object tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "De <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>of <xref:System.IO.TextReader>-object is gesloten tijdens een streaming-bewerking.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Zie voor meer informatie over streaming [SqlClient-ondersteuning voor Streaming](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Notification
  id: Notification
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van een waarde waarmee de <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> object gekoppeld aan deze opdracht."
  remarks: "U moet de waarde voor deze eigenschap instellen voordat de opdracht wordt uitgevoerd om te laten treden."
  syntax:
    content: public System.Data.Sql.SqlNotificationRequest Notification { get; set; }
    return:
      type: System.Data.Sql.SqlNotificationRequest
      description: "Als de waarde op null (standaard), mag niets melding worden aangevraagd."
  overload: System.Data.SqlClient.SqlCommand.Notification*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  id: NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld van een waarde die aangeeft of de toepassing automatisch querymeldingen van een algemene ontvangen moet <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> object."
  remarks: "Deze functie wordt gebruikt in ASP.NET-toepassingen voor het ontvangen van meldingen voor alle opdrachten die in een ASP-pagina op basis van SQL Server worden uitgevoerd. Hierdoor ASP.NET in de cache van de pagina totdat een ander resultaat produceren van de query&quot;s gebruikt om de pagina weer te geven zou. Automatische inschrijving.       Deze eigenschap geldt alleen voor versies van SQL Server die ondersteuning bieden voor querymeldingen. Voor eerdere versies kunt u deze eigenschap instelt op **true** heeft geen invloed op de toepassing."
  syntax:
    content: public bool NotificationAutoEnlist { get; set; }
    return:
      type: System.Boolean
      description: '**de waarde True** als de toepassing automatisch van querymeldingen ontvangen moet; anders **false**. De standaardwaarde is **true**.'
  overload: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Parameters
  id: Parameters
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets the <xref href=&quot;System.Data.SqlClient.SqlParameterCollection&quot;></xref>."
  remarks: "Microsoft .NET Framework Data Provider voor SQL Server biedt geen ondersteuning voor de tijdelijke aanduiding vraagteken (?) voor voor parameters doorgeven aan een SQL-instructie of een opgeslagen procedure is aangeroepen met een opdracht van `CommandType.Text`. In dit geval moeten benoemde parameters worden gebruikt. Bijvoorbeeld: Selecteer * van klanten waar CustomerID = @CustomerID > [!NOTE] > als de parameters in de verzameling komen niet overeen met de vereisten van de query moet worden uitgevoerd, een fout kan leiden.       Zie voor meer informatie [Parameters configureren en de Parameter-gegevenstypen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.  \n  \n [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._32_1.vb)]\n [!code-cs[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/csharp/p-system.data.sqlclient._32_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlParameterCollection Parameters { get; }
    return:
      type: System.Data.SqlClient.SqlParameterCollection
      description: "De parameters van de Transact-SQL-instructie of opgeslagen procedure. De standaardwaarde is een lege verzameling."
  overload: System.Data.SqlClient.SqlCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Prepare
  id: Prepare
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Maakt een voorbereide versie van de opdracht op een exemplaar van SQL Server."
  remarks: "Als <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>is ingesteld op `StoredProcedure`, het aanroepen van Prepare moet slagen, hoewel het een niet-op. dat mogelijk</xref:System.Data.SqlClient.SqlCommand.CommandType%2A>       Voordat u voorbereiden aanroepen, geeft u het gegevenstype van elke parameter in de instructie te worden voorbereid. Voor elke parameter die een gegevenstype met variabele lengte heeft, moet u instellen de <xref:System.Data.SqlClient.SqlParameter.Size%2A>eigenschap in op de maximumgrootte die nodig zijn.</xref:System.Data.SqlClient.SqlParameter.Size%2A> Bereid een foutmelding als niet aan deze voorwaarden wordt voldaan.      > [!NOTE] > Of de databasecontext is gewijzigd door het uitvoeren van de Transact-SQL `USE <database>` -instructie of door het aanroepen van de <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>methode en vervolgens voorbereiden het moet een tweede keer worden aangeroepen.</xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>       Als u een `Execute` methode na het aanroepen van Prepare, een parameterwaarde die groter is dan de waarde gespecificeerd door de <xref:System.Data.SqlClient.SqlParameter.Size%2A>eigenschap automatisch is afgekapt tot de oorspronkelijke opgegeven grootte van de parameter en worden geen afkapping-fouten geretourneerd.</xref:System.Data.SqlClient.SqlParameter.Size%2A>       Uitvoerparameters (of voorbereid of niet) moet een door de gebruiker opgegeven gegevenstype hebben. Als u een gegevenstype met variabele lengte opgeeft, moet u ook de maximale <xref:System.Data.SqlClient.SqlParameter.Size%2A>.</xref:System.Data.SqlClient.SqlParameter.Size%2A> opgeven       Voorafgaand aan Visual Studio 2010 heeft voorbereiden een uitzondering veroorzaakt.  Vanaf Visual Studio 2010 kan heeft deze methode geen Veroorzaak een uitzondering."
  example:
  - "The following example demonstrates the use of the Prepare method.  \n  \n [!code-vb[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._45_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/csharp/m-system.data.sqlclient._45_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hiermee stelt u de <xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>eigenschap op de standaardwaarde.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>"
  remarks: "De standaardwaarde van de <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>is 30 seconden.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  id: StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Treedt op wanneer de uitvoering van een Transact-SQL-instructie is voltooid."
  syntax:
    content: public event System.Data.StatementCompletedEventHandler StatementCompleted;
    return:
      type: System.Data.StatementCompletedEventHandler
      description: "Moet worden toegevoegd."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Maakt een nieuw <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> object dat een kopie van het huidige exemplaar."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Een nieuwe <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> object dat een kopie van dit exemplaar."
  overload: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Transaction
  id: Transaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld de <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> waarbinnen de <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> wordt uitgevoerd."
  remarks: "U kunt de eigenschap Transaction niet instellen als deze al is ingesteld op een bepaalde waarde en de opdracht uitgevoerd wordt. Als u de eigenschap transaction ingesteld op een <xref:System.Data.SqlClient.SqlTransaction>-object dat niet is verbonden met dezelfde <xref:System.Data.SqlClient.SqlConnection>Als de <xref:System.Data.SqlClient.SqlCommand>-object is een uitzondering gegenereerd van de volgende keer dat u probeert een instructie uit te voeren.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlTransaction>"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction Transaction { get; set; }
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "The <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;></xref>. De standaardwaarde is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opgehaald of ingesteld hoe opdrachtresultaten worden toegepast op de <xref href=&quot;System.Data.DataRow&quot;> </xref> wanneer die wordt gebruikt door de **Update** methode van de <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>."
  remarks: "De standaardwaarde <xref:System.Data.UpdateRowSource>waarde is **beide** tenzij de opdracht wordt automatisch gegenereerd (net als in het geval van de <xref:System.Data.SqlClient.SqlCommandBuilder>), in welk geval de standaardwaarde is **geen**.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.UpdateRowSource>       Voor meer informatie over het gebruik van de **UpdatedRowSource** eigenschap, Zie [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "Een van de <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> waarden."
  overload: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlClient.SqlCommand.#ctor
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
- uid: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommandColumnEncryptionSetting
  nameWithType: SqlCommandColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.Cancel
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
- uid: System.Data.SqlClient.SqlCommand.Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlCommand.CommandType
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
- uid: System.Data.SqlClient.SqlParameter
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.Common.DbDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: DbDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<SqlDataReader>
  nameWithType: Task<SqlDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.SqlClient.SqlDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.SqlClient.SqlDataReader
    name: SqlDataReader
    nameWithType: SqlDataReader
    fullName: SqlDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
- uid: System.Threading.Tasks.Task{System.Xml.XmlReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<XmlReader>
  nameWithType: Task<XmlReader>
  fullName: System.Threading.Tasks.Task<System.Xml.XmlReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Xml.XmlReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: XmlReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.Notification
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
- uid: System.Data.Sql.SqlNotificationRequest
  parent: System.Data.Sql
  isExternal: false
  name: SqlNotificationRequest
  nameWithType: SqlNotificationRequest
  fullName: System.Data.Sql.SqlNotificationRequest
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlParameterCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameterCollection
  nameWithType: SqlParameterCollection
  fullName: System.Data.SqlClient.SqlParameterCollection
- uid: System.Data.SqlClient.SqlCommand.Prepare
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
- uid: System.Data.StatementCompletedEventHandler
  parent: System.Data
  isExternal: false
  name: StatementCompletedEventHandler
  nameWithType: StatementCompletedEventHandler
  fullName: System.Data.StatementCompletedEventHandler
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlCommand.Transaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.SqlClient.SqlCommand.#ctor*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery
  nameWithType: SqlCommand.BeginExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader
  nameWithType: SqlCommand.BeginExecuteReader
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader
  nameWithType: SqlCommand.BeginExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.Cancel*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel
  nameWithType: SqlCommand.Cancel
- uid: System.Data.SqlClient.SqlCommand.Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone
  nameWithType: SqlCommand.Clone
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
- uid: System.Data.SqlClient.SqlCommand.CommandType*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: SqlCommand.CreateDbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter
  nameWithType: SqlCommand.CreateParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
- uid: System.Data.SqlClient.SqlCommand.Dispose*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose
  nameWithType: SqlCommand.Dispose
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery
  nameWithType: SqlCommand.EndExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader
  nameWithType: SqlCommand.EndExecuteReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader
  nameWithType: SqlCommand.EndExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: SqlCommand.ExecuteDbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: SqlCommand.ExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync
  nameWithType: SqlCommand.ExecuteNonQueryAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: SqlCommand.ExecuteReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync
  nameWithType: SqlCommand.ExecuteReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: SqlCommand.ExecuteScalar
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync
  nameWithType: SqlCommand.ExecuteScalarAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader
  nameWithType: SqlCommand.ExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync
  nameWithType: SqlCommand.ExecuteXmlReaderAsync
- uid: System.Data.SqlClient.SqlCommand.Notification*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlCommand.Prepare*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare
  nameWithType: SqlCommand.Prepare
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: SqlCommand.ResetCommandTimeout
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlCommand.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlCommand.Transaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
