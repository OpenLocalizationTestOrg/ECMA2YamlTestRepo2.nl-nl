### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeListConverter
  id: TypeListConverter
  children:
  - System.ComponentModel.TypeListConverter.#ctor(System.Type[])
  - System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: TypeListConverter
  nameWithType: TypeListConverter
  fullName: System.ComponentModel.TypeListConverter
  type: Class
  summary: "Biedt een type-conversieprogramma die kan worden gebruikt voor het vullen van een keuzelijst met beschikbare typen."
  remarks: "U moet opgeven dat de lijst met typen aan de constructor van deze `abstract` klasse.       Zie voor meer informatie over de type-conversieprogramma&quot;s, de <xref:System.ComponentModel.TypeConverter>basisklasse en [hoe: implementeert een Type-conversieprogramma](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Moet u een exemplaar van een TypeListConverter nooit maken. Roep in plaats daarvan de <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>methode van <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Zie voor meer informatie de voorbeelden in de <xref:System.ComponentModel.TypeConverter>basis-klasse.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: 'public abstract class TypeListConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.#ctor(System.Type[])
  id: '#ctor(System.Type[])'
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: TypeListConverter(Type[])
  nameWithType: TypeListConverter.TypeListConverter(Type[])
  fullName: System.ComponentModel.TypeListConverter.TypeListConverter(Type[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiseert een nieuw exemplaar van de <xref href=&quot;System.ComponentModel.TypeListConverter&quot;> </xref> klasse met behulp van de matrix type als de beschikbare typen."
  remarks: "De typen die zijn opgegeven in de `types` parameter kan worden gebruikt voor het vullen van een keuzelijst met de beschikbare typen."
  syntax:
    content: protected TypeListConverter (Type[] types);
    parameters:
    - id: types
      type: System.Type[]
      description: "De matrix van het type <xref:System.Type>om te gebruiken als de beschikbare typen.</xref:System.Type>"
  overload: System.ComponentModel.TypeListConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt een waarde die aangeeft of dit conversieprogramma met de opgegeven converteren kunt <xref:System.Type>van het bronobject met behulp van de opgegeven context.</xref:System.Type>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Een <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> die voorzien in de context van een indeling."
    - id: sourceType
      type: System.Type
      description: "De <xref:System.Type>van het bronobject.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als deze converter de conversie uitvoeren kunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Haalt een waarde die aangeeft of dit conversieprogramma een object kunt converteren naar het opgegeven doeltype met behulp van de context."
  remarks: "De `context` parameter kan worden gebruikt als u meer informatie over de omgeving wordt deze converter wordt opgeroepen via uitpakken. Dit kan zijn `null`, dus altijd controleren. Ook de eigenschappen van het contextobject kunnen retourneren `null`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Een <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> die voorzien in de context van een indeling."
    - id: destinationType
      type: System.Type
      description: "Een <xref:System.Type>dat het type dat u converteren wilt naar vertegenwoordigt.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Als deze converter de conversie uitvoeren kunt; anders <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Het opgegeven object wordt geconverteerd naar het systeemeigen type van de converter."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Een <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> die voorzien in de context van een indeling."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Een <xref:System.Globalization.CultureInfo>Hiermee worden de cultuur vertegenwoordigt het lettertype.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "De <xref:System.Object>te converteren.</xref:System.Object>"
    return:
      type: System.Object
      description: "Een <xref:System.Object>die de geconverteerde waarde vertegenwoordigt.</xref:System.Object>"
  overload: System.ComponentModel.TypeListConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Het object van de opgegeven waarde wordt geconverteerd naar het opgegeven doeltype."
  remarks: "Deze methode zet meest voorkomende typen en naar string-objecten.       De `context` parameter kan worden gebruikt als u meer informatie over de omgeving wordt deze converter wordt opgeroepen via uitpakken. Dit kan zijn `null`, dus altijd controleren. Ook de eigenschappen van het contextobject kunnen retourneren `null`."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Een <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> die voorzien in de context van een indeling."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Een optionele <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Als u niet opgeeft, wordt de huidige cultuur wordt aangenomen."
    - id: value
      type: System.Object
      description: "De <xref:System.Object>te converteren.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "De <xref:System.Type>de waarde te converteren.</xref:System.Type>"
    return:
      type: System.Object
      description: "Een <xref:System.Object>die staat voor de geconverteerde <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.TypeListConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "De conversie niet uitvoeren."
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee haalt een verzameling van standaard waarden voor deze validatiefunctie is ontworpen voor gegevenstype."
  remarks: "De `context` parameter kan worden gebruikt als u meer informatie over de omgeving wordt deze converter wordt opgeroepen via uitpakken. Dit kan zijn `null`, dus altijd controleren. Ook de eigenschappen van het contextobject kunnen retourneren `null`."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Een <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> die voorzien in de context van een indeling."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Een <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>die een standaardset geldige waarden bevat of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> als het gegevenstype dat geen ondersteuning biedt voor een standaardset waarden.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeListConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt een waarde die aangeeft of de lijst met waarden die zijn geretourneerd door de <xref:System.ComponentModel.TypeListConverter.GetStandardValues*>methode is een exclusieve lijst.</xref:System.ComponentModel.TypeListConverter.GetStandardValues*>"
  remarks: "De `context` parameter kan worden gebruikt als u meer informatie over de omgeving wordt deze converter wordt opgeroepen via uitpakken. Dit kan zijn `null`, dus altijd controleren. Ook de eigenschappen van het contextobject kunnen retourneren `null`.       Wanneer de lijst exclusieve is, zijn geen andere waarden geldig naast de lijst met waarden die de <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A>methode biedt.</xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A>"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Een <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> die voorzien in de context van een indeling."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>omdat de <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>geretourneerd van <xref:System.ComponentModel.TypeListConverter.GetStandardValues*>is een volledige lijst van mogelijke waarden.</xref:System.ComponentModel.TypeListConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Deze methode retourneert nooit <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hiermee wordt een waarde die aangeeft of dit object ondersteunt een standaardset waarden die kunnen worden verzameld uit een lijst met behulp van de opgegeven context."
  remarks: "De `context` parameter kan worden gebruikt als u meer informatie over de omgeving wordt deze converter wordt opgeroepen via uitpakken. Dit kan zijn `null`, dus altijd controleren. Ook de eigenschappen van het contextobject kunnen retourneren `null`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Een <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> die voorzien in de context van een indeling."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>omdat <xref:System.ComponentModel.TypeListConverter.GetStandardValues*>mag worden aangeroepen om een gemeenschappelijke set waarden die ondersteuning biedt voor het object te vinden.</xref:System.ComponentModel.TypeListConverter.GetStandardValues*> Deze methode retourneert nooit <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.TypeListConverter.#ctor(System.Type[])
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: TypeListConverter(Type[])
  nameWithType: TypeListConverter.TypeListConverter(Type[])
  fullName: System.ComponentModel.TypeListConverter.TypeListConverter(Type[])
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeListConverter.#ctor*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: TypeListConverter
  nameWithType: TypeListConverter.TypeListConverter
- uid: System.ComponentModel.TypeListConverter.CanConvertFrom*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: TypeListConverter.CanConvertFrom
- uid: System.ComponentModel.TypeListConverter.CanConvertTo*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: TypeListConverter.CanConvertTo
- uid: System.ComponentModel.TypeListConverter.ConvertFrom*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: TypeListConverter.ConvertFrom
- uid: System.ComponentModel.TypeListConverter.ConvertTo*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertTo
  nameWithType: TypeListConverter.ConvertTo
- uid: System.ComponentModel.TypeListConverter.GetStandardValues*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: TypeListConverter.GetStandardValues
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: TypeListConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: TypeListConverter.GetStandardValuesSupported
